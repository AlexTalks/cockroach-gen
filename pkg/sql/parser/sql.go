// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:72

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}

//line sql-gen.y:667
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11333

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 29,
	-2, 1272,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 67,
	214, 190,
	432, 190,
	-2, 0,
	-1, 77,
	203, 1080,
	215, 1080,
	231, 311,
	328, 311,
	337, 878,
	368, 311,
	380, 878,
	417, 878,
	442, 311,
	467, 878,
	-2, 0,
	-1, 83,
	231, 315,
	-2, 0,
	-1, 84,
	118, 1272,
	209, 1272,
	452, 1272,
	453, 1272,
	-2, 0,
	-1, 100,
	134, 1243,
	152, 1243,
	165, 1243,
	212, 1243,
	244, 1243,
	287, 1243,
	297, 1243,
	447, 1243,
	-2, 1214,
	-1, 134,
	142, 764,
	230, 764,
	331, 733,
	385, 733,
	435, 764,
	-2, 0,
	-1, 136,
	4, 1274,
	21, 1274,
	22, 1274,
	23, 1274,
	24, 1274,
	25, 1274,
	26, 1274,
	28, 1274,
	29, 1274,
	35, 1274,
	40, 1274,
	41, 1274,
	42, 1274,
	43, 1274,
	44, 1274,
	45, 1274,
	46, 1274,
	47, 1274,
	48, 1274,
	50, 1274,
	51, 1274,
	52, 1274,
	54, 1274,
	55, 1274,
	56, 1274,
	57, 1274,
	58, 1274,
	62, 1274,
	63, 1274,
	64, 1274,
	65, 1274,
	67, 1274,
	68, 1274,
	69, 1274,
	73, 1274,
	74, 1274,
	75, 1274,
	76, 1274,
	77, 1274,
	78, 1274,
	79, 1274,
	82, 1274,
	83, 1274,
	84, 1274,
	85, 1274,
	87, 1274,
	89, 1274,
	90, 1274,
	91, 1274,
	93, 1274,
	95, 1274,
	96, 1274,
	104, 1274,
	105, 1274,
	106, 1274,
	107, 1274,
	109, 1274,
	110, 1274,
	111, 1274,
	113, 1274,
	114, 1274,
	115, 1274,
	117, 1274,
	118, 1274,
	120, 1274,
	121, 1274,
	124, 1274,
	125, 1274,
	126, 1274,
	128, 1274,
	129, 1274,
	131, 1274,
	132, 1274,
	133, 1274,
	135, 1274,
	136, 1274,
	137, 1274,
	138, 1274,
	139, 1274,
	140, 1274,
	141, 1274,
	142, 1274,
	143, 1274,
	144, 1274,
	145, 1274,
	146, 1274,
	147, 1274,
	148, 1274,
	149, 1274,
	151, 1274,
	157, 1274,
	158, 1274,
	159, 1274,
	160, 1274,
	164, 1274,
	166, 1274,
	170, 1274,
	171, 1274,
	172, 1274,
	173, 1274,
	174, 1274,
	175, 1274,
	177, 1274,
	178, 1274,
	180, 1274,
	181, 1274,
	183, 1274,
	184, 1274,
	185, 1274,
	186, 1274,
	187, 1274,
	188, 1274,
	189, 1274,
	190, 1274,
	191, 1274,
	193, 1274,
	194, 1274,
	196, 1274,
	197, 1274,
	198, 1274,
	199, 1274,
	203, 1274,
	204, 1274,
	205, 1274,
	206, 1274,
	209, 1274,
	210, 1274,
	211, 1274,
	213, 1274,
	215, 1274,
	217, 1274,
	219, 1274,
	220, 1274,
	221, 1274,
	223, 1274,
	227, 1274,
	228, 1274,
	229, 1274,
	230, 1274,
	231, 1274,
	232, 1274,
	234, 1274,
	235, 1274,
	236, 1274,
	238, 1274,
	239, 1274,
	241, 1274,
	242, 1274,
	245, 1274,
	246, 1274,
	247, 1274,
	250, 1274,
	251, 1274,
	252, 1274,
	253, 1274,
	255, 1274,
	256, 1274,
	257, 1274,
	258, 1274,
	259, 1274,
	260, 1274,
	261, 1274,
	262, 1274,
	263, 1274,
	264, 1274,
	265, 1274,
	267, 1274,
	269, 1274,
	270, 1274,
	271, 1274,
	272, 1274,
	273, 1274,
	274, 1274,
	276, 1274,
	278, 1274,
	280, 1274,
	282, 1274,
	283, 1274,
	284, 1274,
	285, 1274,
	286, 1274,
	289, 1274,
	292, 1274,
	293, 1274,
	294, 1274,
	295, 1274,
	298, 1274,
	299, 1274,
	300, 1274,
	302, 1274,
	304, 1274,
	305, 1274,
	306, 1274,
	307, 1274,
	308, 1274,
	309, 1274,
	310, 1274,
	311, 1274,
	312, 1274,
	313, 1274,
	314, 1274,
	315, 1274,
	317, 1274,
	318, 1274,
	319, 1274,
	320, 1274,
	321, 1274,
	322, 1274,
	323, 1274,
	324, 1274,
	325, 1274,
	327, 1274,
	329, 1274,
	330, 1274,
	331, 1274,
	332, 1274,
	333, 1274,
	334, 1274,
	335, 1274,
	336, 1274,
	337, 1274,
	338, 1274,
	339, 1274,
	346, 1274,
	348, 1274,
	349, 1274,
	350, 1274,
	351, 1274,
	352, 1274,
	353, 1274,
	354, 1274,
	355, 1274,
	357, 1274,
	358, 1274,
	359, 1274,
	361, 1274,
	362, 1274,
	363, 1274,
	364, 1274,
	365, 1274,
	366, 1274,
	368, 1274,
	369, 1274,
	370, 1274,
	371, 1274,
	372, 1274,
	373, 1274,
	374, 1274,
	375, 1274,
	376, 1274,
	377, 1274,
	378, 1274,
	380, 1274,
	381, 1274,
	382, 1274,
	383, 1274,
	384, 1274,
	385, 1274,
	387, 1274,
	388, 1274,
	389, 1274,
	390, 1274,
	391, 1274,
	393, 1274,
	394, 1274,
	395, 1274,
	397, 1274,
	399, 1274,
	400, 1274,
	401, 1274,
	402, 1274,
	403, 1274,
	404, 1274,
	405, 1274,
	406, 1274,
	407, 1274,
	408, 1274,
	409, 1274,
	410, 1274,
	411, 1274,
	413, 1274,
	414, 1274,
	416, 1274,
	418, 1274,
	419, 1274,
	420, 1274,
	421, 1274,
	422, 1274,
	423, 1274,
	424, 1274,
	425, 1274,
	427, 1274,
	428, 1274,
	429, 1274,
	430, 1274,
	431, 1274,
	433, 1274,
	435, 1274,
	436, 1274,
	437, 1274,
	438, 1274,
	439, 1274,
	441, 1274,
	442, 1274,
	443, 1274,
	445, 1274,
	446, 1274,
	449, 1274,
	450, 1274,
	451, 1274,
	452, 1274,
	453, 1274,
	454, 1274,
	455, 1274,
	457, 1274,
	460, 1274,
	461, 1274,
	462, 1274,
	463, 1274,
	464, 1274,
	465, 1274,
	467, 1274,
	468, 1274,
	469, 1274,
	474, 1274,
	475, 1274,
	476, 1274,
	477, 1274,
	478, 1274,
	479, 1274,
	-2, 0,
	-1, 137,
	1, 1148,
	219, 1148,
	327, 1148,
	335, 1148,
	482, 1148,
	506, 1148,
	-2, 0,
	-1, 139,
	1, 1148,
	506, 1148,
	-2, 0,
	-1, 140,
	1, 1148,
	506, 1148,
	-2, 0,
	-1, 141,
	1, 1148,
	432, 1148,
	506, 1148,
	-2, 0,
	-1, 170,
	134, 1242,
	152, 1242,
	165, 1242,
	212, 1242,
	244, 1242,
	287, 1242,
	297, 1242,
	447, 1242,
	-2, 1217,
	-1, 206,
	4, 1281,
	5, 1281,
	6, 1281,
	7, 1281,
	8, 1281,
	9, 1281,
	10, 1281,
	21, 1281,
	22, 1281,
	23, 1281,
	24, 1281,
	25, 1281,
	26, 1281,
	28, 1281,
	29, 1281,
	35, 1281,
	36, 1281,
	40, 1281,
	41, 1281,
	42, 1281,
	43, 1281,
	44, 1281,
	45, 1281,
	46, 1281,
	47, 1281,
	48, 1281,
	50, 1281,
	51, 1281,
	52, 1281,
	54, 1281,
	55, 1281,
	56, 1281,
	57, 1281,
	58, 1281,
	59, 1281,
	60, 1281,
	61, 1281,
	62, 1281,
	63, 1281,
	64, 1281,
	65, 1281,
	67, 1281,
	68, 1281,
	69, 1281,
	71, 1281,
	73, 1281,
	74, 1281,
	75, 1281,
	76, 1281,
	77, 1281,
	78, 1281,
	79, 1281,
	82, 1281,
	83, 1281,
	84, 1281,
	85, 1281,
	87, 1281,
	89, 1281,
	90, 1281,
	91, 1281,
	93, 1281,
	94, 1281,
	95, 1281,
	96, 1281,
	97, 1281,
	98, 1281,
	99, 1281,
	100, 1281,
	101, 1281,
	102, 1281,
	103, 1281,
	104, 1281,
	105, 1281,
	106, 1281,
	107, 1281,
	108, 1281,
	109, 1281,
	110, 1281,
	111, 1281,
	112, 1281,
	113, 1281,
	114, 1281,
	115, 1281,
	117, 1281,
	118, 1281,
	120, 1281,
	121, 1281,
	124, 1281,
	125, 1281,
	126, 1281,
	128, 1281,
	129, 1281,
	131, 1281,
	132, 1281,
	133, 1281,
	135, 1281,
	136, 1281,
	137, 1281,
	138, 1281,
	139, 1281,
	140, 1281,
	141, 1281,
	142, 1281,
	143, 1281,
	144, 1281,
	145, 1281,
	146, 1281,
	147, 1281,
	148, 1281,
	149, 1281,
	150, 1281,
	151, 1281,
	157, 1281,
	158, 1281,
	159, 1281,
	160, 1281,
	164, 1281,
	166, 1281,
	169, 1281,
	170, 1281,
	171, 1281,
	172, 1281,
	173, 1281,
	174, 1281,
	175, 1281,
	177, 1281,
	178, 1281,
	180, 1281,
	181, 1281,
	183, 1281,
	184, 1281,
	185, 1281,
	186, 1281,
	187, 1281,
	188, 1281,
	189, 1281,
	190, 1281,
	191, 1281,
	192, 1281,
	193, 1281,
	194, 1281,
	196, 1281,
	197, 1281,
	198, 1281,
	199, 1281,
	203, 1281,
	204, 1281,
	205, 1281,
	206, 1281,
	208, 1281,
	209, 1281,
	210, 1281,
	211, 1281,
	213, 1281,
	215, 1281,
	216, 1281,
	217, 1281,
	218, 1281,
	219, 1281,
	220, 1281,
	221, 1281,
	222, 1281,
	223, 1281,
	227, 1281,
	228, 1281,
	229, 1281,
	230, 1281,
	231, 1281,
	232, 1281,
	234, 1281,
	235, 1281,
	236, 1281,
	238, 1281,
	239, 1281,
	240, 1281,
	241, 1281,
	242, 1281,
	243, 1281,
	245, 1281,
	246, 1281,
	247, 1281,
	248, 1281,
	249, 1281,
	250, 1281,
	251, 1281,
	252, 1281,
	253, 1281,
	255, 1281,
	256, 1281,
	257, 1281,
	258, 1281,
	259, 1281,
	260, 1281,
	261, 1281,
	262, 1281,
	263, 1281,
	264, 1281,
	265, 1281,
	267, 1281,
	268, 1281,
	269, 1281,
	270, 1281,
	271, 1281,
	272, 1281,
	273, 1281,
	274, 1281,
	275, 1281,
	276, 1281,
	277, 1281,
	278, 1281,
	279, 1281,
	280, 1281,
	281, 1281,
	282, 1281,
	283, 1281,
	284, 1281,
	285, 1281,
	286, 1281,
	289, 1281,
	293, 1281,
	294, 1281,
	295, 1281,
	298, 1281,
	299, 1281,
	300, 1281,
	301, 1281,
	302, 1281,
	303, 1281,
	304, 1281,
	305, 1281,
	306, 1281,
	307, 1281,
	308, 1281,
	309, 1281,
	310, 1281,
	311, 1281,
	312, 1281,
	313, 1281,
	314, 1281,
	315, 1281,
	317, 1281,
	318, 1281,
	319, 1281,
	320, 1281,
	321, 1281,
	322, 1281,
	323, 1281,
	324, 1281,
	325, 1281,
	327, 1281,
	329, 1281,
	330, 1281,
	331, 1281,
	332, 1281,
	333, 1281,
	334, 1281,
	335, 1281,
	336, 1281,
	337, 1281,
	338, 1281,
	339, 1281,
	346, 1281,
	348, 1281,
	349, 1281,
	350, 1281,
	351, 1281,
	352, 1281,
	353, 1281,
	354, 1281,
	355, 1281,
	357, 1281,
	358, 1281,
	359, 1281,
	360, 1281,
	361, 1281,
	362, 1281,
	363, 1281,
	364, 1281,
	365, 1281,
	366, 1281,
	368, 1281,
	369, 1281,
	370, 1281,
	371, 1281,
	372, 1281,
	373, 1281,
	374, 1281,
	375, 1281,
	376, 1281,
	377, 1281,
	378, 1281,
	380, 1281,
	381, 1281,
	382, 1281,
	383, 1281,
	384, 1281,
	385, 1281,
	386, 1281,
	387, 1281,
	388, 1281,
	389, 1281,
	390, 1281,
	391, 1281,
	392, 1281,
	393, 1281,
	394, 1281,
	395, 1281,
	397, 1281,
	399, 1281,
	400, 1281,
	401, 1281,
	402, 1281,
	403, 1281,
	404, 1281,
	405, 1281,
	406, 1281,
	407, 1281,
	408, 1281,
	409, 1281,
	410, 1281,
	411, 1281,
	413, 1281,
	414, 1281,
	415, 1281,
	416, 1281,
	418, 1281,
	419, 1281,
	420, 1281,
	421, 1281,
	422, 1281,
	423, 1281,
	424, 1281,
	425, 1281,
	427, 1281,
	428, 1281,
	429, 1281,
	430, 1281,
	431, 1281,
	433, 1281,
	435, 1281,
	436, 1281,
	437, 1281,
	438, 1281,
	439, 1281,
	440, 1281,
	441, 1281,
	442, 1281,
	443, 1281,
	445, 1281,
	446, 1281,
	448, 1281,
	449, 1281,
	450, 1281,
	451, 1281,
	452, 1281,
	453, 1281,
	454, 1281,
	455, 1281,
	456, 1281,
	457, 1281,
	460, 1281,
	461, 1281,
	462, 1281,
	463, 1281,
	464, 1281,
	465, 1281,
	467, 1281,
	468, 1281,
	469, 1281,
	474, 1281,
	475, 1281,
	476, 1281,
	477, 1281,
	478, 1281,
	479, 1281,
	480, 1281,
	487, 1281,
	494, 1281,
	495, 1281,
	496, 1281,
	503, 1281,
	507, 1281,
	-2, 0,
	-1, 608,
	168, 1987,
	432, 1987,
	486, 1987,
	505, 1987,
	-2, 0,
	-1, 609,
	168, 2072,
	432, 2072,
	486, 2072,
	505, 2072,
	-2, 0,
	-1, 610,
	168, 1975,
	432, 1975,
	486, 1975,
	505, 1975,
	-2, 0,
	-1, 612,
	168, 2170,
	432, 2170,
	486, 2170,
	505, 2170,
	-2, 0,
	-1, 614,
	168, 2200,
	432, 2200,
	486, 2200,
	505, 2200,
	-2, 0,
	-1, 621,
	168, 2087,
	432, 2087,
	486, 2087,
	505, 2087,
	-2, 583,
	-1, 651,
	505, 1928,
	508, 1928,
	-2, 818,
	-1, 652,
	505, 1930,
	508, 1930,
	-2, 819,
	-1, 653,
	505, 1929,
	508, 1929,
	-2, 820,
	-1, 654,
	508, 1863,
	-2, 821,
	-1, 676,
	165, 204,
	-2, 0,
	-1, 699,
	467, 1057,
	-2, 879,
	-1, 737,
	4, 1078,
	21, 1078,
	22, 1078,
	23, 1078,
	24, 1078,
	25, 1078,
	26, 1078,
	28, 1078,
	29, 1078,
	35, 1078,
	40, 1078,
	41, 1078,
	42, 1078,
	43, 1078,
	44, 1078,
	45, 1078,
	46, 1078,
	47, 1078,
	48, 1078,
	50, 1078,
	51, 1078,
	52, 1078,
	54, 1078,
	55, 1078,
	56, 1078,
	57, 1078,
	58, 1078,
	62, 1078,
	63, 1078,
	64, 1078,
	65, 1078,
	67, 1078,
	68, 1078,
	69, 1078,
	73, 1078,
	74, 1078,
	75, 1078,
	76, 1078,
	77, 1078,
	78, 1078,
	79, 1078,
	82, 1078,
	83, 1078,
	84, 1078,
	85, 1078,
	87, 1078,
	89, 1078,
	90, 1078,
	91, 1078,
	93, 1078,
	95, 1078,
	96, 1078,
	104, 1078,
	105, 1078,
	106, 1078,
	107, 1078,
	109, 1078,
	110, 1078,
	111, 1078,
	113, 1078,
	114, 1078,
	115, 1078,
	117, 1078,
	118, 1078,
	120, 1078,
	121, 1078,
	124, 1078,
	125, 1078,
	126, 1078,
	128, 1078,
	129, 1078,
	131, 1078,
	132, 1078,
	133, 1078,
	135, 1078,
	136, 1078,
	137, 1078,
	138, 1078,
	139, 1078,
	140, 1078,
	141, 1078,
	142, 1078,
	143, 1078,
	144, 1078,
	145, 1078,
	146, 1078,
	147, 1078,
	148, 1078,
	149, 1078,
	151, 1078,
	157, 1078,
	158, 1078,
	159, 1078,
	160, 1078,
	164, 1078,
	166, 1078,
	170, 1078,
	171, 1078,
	172, 1078,
	173, 1078,
	174, 1078,
	175, 1078,
	177, 1078,
	178, 1078,
	180, 1078,
	181, 1078,
	183, 1078,
	184, 1078,
	185, 1078,
	186, 1078,
	187, 1078,
	188, 1078,
	189, 1078,
	190, 1078,
	191, 1078,
	193, 1078,
	194, 1078,
	196, 1078,
	197, 1078,
	198, 1078,
	199, 1078,
	203, 1078,
	204, 1078,
	205, 1078,
	206, 1078,
	209, 1078,
	210, 1078,
	211, 1078,
	213, 1078,
	215, 1078,
	217, 1078,
	219, 1078,
	220, 1078,
	221, 1078,
	223, 1078,
	227, 1078,
	228, 1078,
	229, 1078,
	230, 1078,
	231, 1078,
	232, 1078,
	234, 1078,
	235, 1078,
	236, 1078,
	238, 1078,
	239, 1078,
	241, 1078,
	242, 1078,
	245, 1078,
	246, 1078,
	247, 1078,
	250, 1078,
	251, 1078,
	252, 1078,
	253, 1078,
	255, 1078,
	256, 1078,
	257, 1078,
	258, 1078,
	259, 1078,
	260, 1078,
	261, 1078,
	262, 1078,
	263, 1078,
	264, 1078,
	265, 1078,
	267, 1078,
	269, 1078,
	270, 1078,
	271, 1078,
	272, 1078,
	273, 1078,
	274, 1078,
	276, 1078,
	278, 1078,
	280, 1078,
	282, 1078,
	283, 1078,
	284, 1078,
	285, 1078,
	286, 1078,
	289, 1078,
	293, 1078,
	294, 1078,
	295, 1078,
	298, 1078,
	299, 1078,
	300, 1078,
	302, 1078,
	304, 1078,
	305, 1078,
	306, 1078,
	307, 1078,
	308, 1078,
	309, 1078,
	310, 1078,
	311, 1078,
	312, 1078,
	313, 1078,
	314, 1078,
	315, 1078,
	317, 1078,
	318, 1078,
	319, 1078,
	320, 1078,
	321, 1078,
	322, 1078,
	323, 1078,
	324, 1078,
	325, 1078,
	327, 1078,
	329, 1078,
	330, 1078,
	331, 1078,
	332, 1078,
	333, 1078,
	334, 1078,
	335, 1078,
	336, 1078,
	337, 1078,
	338, 1078,
	339, 1078,
	346, 1078,
	348, 1078,
	349, 1078,
	350, 1078,
	351, 1078,
	352, 1078,
	353, 1078,
	354, 1078,
	355, 1078,
	357, 1078,
	358, 1078,
	359, 1078,
	361, 1078,
	362, 1078,
	363, 1078,
	364, 1078,
	365, 1078,
	366, 1078,
	368, 1078,
	369, 1078,
	370, 1078,
	371, 1078,
	372, 1078,
	373, 1078,
	374, 1078,
	375, 1078,
	376, 1078,
	377, 1078,
	378, 1078,
	380, 1078,
	381, 1078,
	382, 1078,
	383, 1078,
	384, 1078,
	385, 1078,
	387, 1078,
	388, 1078,
	389, 1078,
	390, 1078,
	391, 1078,
	393, 1078,
	394, 1078,
	395, 1078,
	397, 1078,
	399, 1078,
	400, 1078,
	401, 1078,
	402, 1078,
	403, 1078,
	404, 1078,
	405, 1078,
	406, 1078,
	407, 1078,
	408, 1078,
	409, 1078,
	410, 1078,
	411, 1078,
	413, 1078,
	414, 1078,
	416, 1078,
	418, 1078,
	419, 1078,
	420, 1078,
	421, 1078,
	422, 1078,
	423, 1078,
	424, 1078,
	425, 1078,
	427, 1078,
	428, 1078,
	429, 1078,
	430, 1078,
	431, 1078,
	433, 1078,
	435, 1078,
	436, 1078,
	437, 1078,
	438, 1078,
	439, 1078,
	441, 1078,
	442, 1078,
	443, 1078,
	445, 1078,
	446, 1078,
	449, 1078,
	450, 1078,
	451, 1078,
	452, 1078,
	453, 1078,
	454, 1078,
	455, 1078,
	457, 1078,
	460, 1078,
	461, 1078,
	462, 1078,
	463, 1078,
	464, 1078,
	465, 1078,
	467, 1078,
	468, 1078,
	469, 1078,
	474, 1078,
	475, 1078,
	476, 1078,
	477, 1078,
	478, 1078,
	479, 1078,
	-2, 0,
	-1, 815,
	331, 734,
	385, 734,
	-2, 0,
	-1, 816,
	331, 733,
	385, 733,
	-2, 679,
	-1, 820,
	1, 774,
	502, 774,
	504, 774,
	506, 774,
	-2, 0,
	-1, 821,
	1, 712,
	502, 712,
	504, 712,
	506, 712,
	-2, 0,
	-1, 822,
	1, 817,
	165, 817,
	502, 817,
	504, 817,
	506, 817,
	-2, 0,
	-1, 830,
	1, 737,
	502, 737,
	504, 737,
	506, 737,
	-2, 0,
	-1, 836,
	1, 774,
	502, 774,
	504, 774,
	506, 774,
	-2, 0,
	-1, 837,
	1, 776,
	502, 776,
	504, 776,
	506, 776,
	-2, 0,
	-1, 838,
	1, 779,
	502, 779,
	504, 779,
	506, 779,
	-2, 0,
	-1, 844,
	1, 796,
	502, 796,
	504, 796,
	506, 796,
	-2, 0,
	-1, 845,
	1, 798,
	502, 798,
	504, 798,
	506, 798,
	-2, 0,
	-1, 894,
	152, 1283,
	165, 1283,
	244, 1283,
	287, 1283,
	-2, 1221,
	-1, 909,
	152, 1282,
	165, 1282,
	244, 1282,
	287, 1282,
	-2, 1218,
	-1, 935,
	505, 1927,
	-2, 591,
	-1, 963,
	5, 1919,
	503, 1917,
	-2, 1908,
	-1, 971,
	5, 1940,
	503, 1937,
	-2, 1928,
	-1, 972,
	5, 1941,
	503, 1938,
	-2, 1929,
	-1, 980,
	505, 1925,
	-2, 1907,
	-1, 981,
	503, 2278,
	-2, 1926,
	-1, 1004,
	503, 2277,
	-2, 1942,
	-1, 1005,
	5, 1447,
	-2, 2248,
	-1, 1006,
	5, 1448,
	-2, 2249,
	-1, 1007,
	5, 1449,
	-2, 2263,
	-1, 1008,
	5, 1450,
	-2, 2228,
	-1, 1009,
	5, 1451,
	-2, 2261,
	-1, 1010,
	5, 1459,
	-2, 2240,
	-1, 1011,
	5, 1446,
	-2, 2236,
	-1, 1012,
	5, 1446,
	-2, 2235,
	-1, 1013,
	5, 1446,
	-2, 2254,
	-1, 1014,
	5, 1457,
	-2, 2230,
	-1, 1015,
	5, 1462,
	-2, 2229,
	-1, 1016,
	5, 1464,
	-2, 2273,
	-1, 1019,
	5, 1486,
	-2, 2266,
	-1, 1020,
	5, 1478,
	-2, 2267,
	-1, 1021,
	5, 1486,
	-2, 2268,
	-1, 1022,
	5, 1482,
	-2, 2269,
	-1, 1023,
	5, 1433,
	-2, 2241,
	-1, 1024,
	5, 1434,
	-2, 2242,
	-1, 1051,
	5, 1469,
	-2, 2274,
	-1, 1052,
	5, 1470,
	-2, 2264,
	-1, 1053,
	5, 1471,
	468, 1471,
	-2, 2231,
	-1, 1054,
	5, 1472,
	468, 1472,
	-2, 2232,
	-1, 1091,
	503, 1937,
	-2, 1928,
	-1, 1092,
	503, 1938,
	-2, 1929,
	-1, 1121,
	168, 2200,
	432, 2200,
	486, 2200,
	505, 2200,
	-2, 0,
	-1, 1124,
	1, 569,
	506, 569,
	-2, 1156,
	-1, 1249,
	348, 1903,
	387, 1903,
	496, 1903,
	-2, 1901,
	-1, 1261,
	507, 1903,
	-2, 1904,
	-1, 1268,
	1, 1054,
	502, 1054,
	504, 1054,
	506, 1054,
	-2, 1270,
	-1, 1321,
	337, 878,
	467, 878,
	-2, 310,
	-1, 1343,
	1, 1054,
	502, 1054,
	504, 1054,
	506, 1054,
	-2, 1270,
	-1, 1349,
	4, 1078,
	21, 1078,
	22, 1078,
	23, 1078,
	24, 1078,
	25, 1078,
	26, 1078,
	28, 1078,
	29, 1078,
	35, 1078,
	40, 1078,
	41, 1078,
	42, 1078,
	43, 1078,
	44, 1078,
	45, 1078,
	46, 1078,
	47, 1078,
	48, 1078,
	50, 1078,
	51, 1078,
	52, 1078,
	54, 1078,
	55, 1078,
	56, 1078,
	57, 1078,
	58, 1078,
	62, 1078,
	63, 1078,
	64, 1078,
	65, 1078,
	67, 1078,
	68, 1078,
	69, 1078,
	73, 1078,
	74, 1078,
	75, 1078,
	76, 1078,
	77, 1078,
	78, 1078,
	79, 1078,
	82, 1078,
	83, 1078,
	84, 1078,
	85, 1078,
	87, 1078,
	89, 1078,
	90, 1078,
	91, 1078,
	93, 1078,
	95, 1078,
	96, 1078,
	104, 1078,
	105, 1078,
	106, 1078,
	107, 1078,
	109, 1078,
	110, 1078,
	111, 1078,
	113, 1078,
	114, 1078,
	115, 1078,
	117, 1078,
	118, 1078,
	120, 1078,
	121, 1078,
	124, 1078,
	125, 1078,
	126, 1078,
	128, 1078,
	129, 1078,
	131, 1078,
	132, 1078,
	133, 1078,
	135, 1078,
	136, 1078,
	137, 1078,
	138, 1078,
	139, 1078,
	140, 1078,
	141, 1078,
	142, 1078,
	143, 1078,
	144, 1078,
	145, 1078,
	146, 1078,
	147, 1078,
	148, 1078,
	149, 1078,
	157, 1078,
	158, 1078,
	159, 1078,
	160, 1078,
	164, 1078,
	166, 1078,
	170, 1078,
	171, 1078,
	172, 1078,
	173, 1078,
	174, 1078,
	175, 1078,
	177, 1078,
	178, 1078,
	180, 1078,
	181, 1078,
	183, 1078,
	184, 1078,
	185, 1078,
	186, 1078,
	187, 1078,
	188, 1078,
	189, 1078,
	190, 1078,
	191, 1078,
	193, 1078,
	194, 1078,
	196, 1078,
	197, 1078,
	198, 1078,
	199, 1078,
	204, 1078,
	205, 1078,
	206, 1078,
	209, 1078,
	210, 1078,
	211, 1078,
	213, 1078,
	215, 1078,
	217, 1078,
	219, 1078,
	220, 1078,
	221, 1078,
	223, 1078,
	227, 1078,
	228, 1078,
	229, 1078,
	230, 1078,
	231, 1078,
	232, 1078,
	234, 1078,
	235, 1078,
	236, 1078,
	238, 1078,
	239, 1078,
	241, 1078,
	242, 1078,
	245, 1078,
	246, 1078,
	247, 1078,
	250, 1078,
	251, 1078,
	252, 1078,
	253, 1078,
	255, 1078,
	256, 1078,
	257, 1078,
	258, 1078,
	259, 1078,
	260, 1078,
	261, 1078,
	262, 1078,
	263, 1078,
	264, 1078,
	265, 1078,
	267, 1078,
	269, 1078,
	270, 1078,
	271, 1078,
	272, 1078,
	273, 1078,
	274, 1078,
	276, 1078,
	280, 1078,
	282, 1078,
	283, 1078,
	284, 1078,
	285, 1078,
	286, 1078,
	289, 1078,
	291, 1078,
	293, 1078,
	294, 1078,
	295, 1078,
	298, 1078,
	299, 1078,
	300, 1078,
	302, 1078,
	304, 1078,
	305, 1078,
	306, 1078,
	307, 1078,
	308, 1078,
	309, 1078,
	310, 1078,
	311, 1078,
	312, 1078,
	313, 1078,
	314, 1078,
	315, 1078,
	317, 1078,
	318, 1078,
	319, 1078,
	320, 1078,
	321, 1078,
	322, 1078,
	323, 1078,
	324, 1078,
	325, 1078,
	327, 1078,
	329, 1078,
	330, 1078,
	331, 1078,
	332, 1078,
	333, 1078,
	334, 1078,
	335, 1078,
	336, 1078,
	337, 1078,
	338, 1078,
	339, 1078,
	346, 1078,
	348, 1078,
	349, 1078,
	350, 1078,
	351, 1078,
	352, 1078,
	353, 1078,
	354, 1078,
	355, 1078,
	357, 1078,
	358, 1078,
	359, 1078,
	361, 1078,
	362, 1078,
	363, 1078,
	364, 1078,
	365, 1078,
	366, 1078,
	368, 1078,
	369, 1078,
	370, 1078,
	371, 1078,
	372, 1078,
	373, 1078,
	374, 1078,
	375, 1078,
	376, 1078,
	377, 1078,
	378, 1078,
	380, 1078,
	381, 1078,
	382, 1078,
	383, 1078,
	384, 1078,
	385, 1078,
	387, 1078,
	388, 1078,
	389, 1078,
	390, 1078,
	391, 1078,
	393, 1078,
	394, 1078,
	395, 1078,
	397, 1078,
	399, 1078,
	400, 1078,
	401, 1078,
	402, 1078,
	403, 1078,
	404, 1078,
	405, 1078,
	406, 1078,
	407, 1078,
	408, 1078,
	409, 1078,
	410, 1078,
	411, 1078,
	413, 1078,
	414, 1078,
	416, 1078,
	418, 1078,
	419, 1078,
	420, 1078,
	421, 1078,
	422, 1078,
	423, 1078,
	424, 1078,
	425, 1078,
	427, 1078,
	428, 1078,
	429, 1078,
	430, 1078,
	431, 1078,
	433, 1078,
	435, 1078,
	436, 1078,
	437, 1078,
	438, 1078,
	439, 1078,
	441, 1078,
	442, 1078,
	443, 1078,
	445, 1078,
	446, 1078,
	449, 1078,
	450, 1078,
	451, 1078,
	452, 1078,
	453, 1078,
	454, 1078,
	455, 1078,
	457, 1078,
	460, 1078,
	461, 1078,
	462, 1078,
	463, 1078,
	464, 1078,
	465, 1078,
	467, 1078,
	468, 1078,
	469, 1078,
	474, 1078,
	475, 1078,
	476, 1078,
	477, 1078,
	478, 1078,
	479, 1078,
	-2, 0,
	-1, 1421,
	1, 446,
	502, 446,
	504, 446,
	506, 446,
	-2, 1241,
	-1, 1424,
	4, 2272,
	11, 2272,
	12, 2272,
	14, 2272,
	15, 2272,
	16, 2272,
	17, 2272,
	18, 2272,
	19, 2272,
	21, 2272,
	22, 2272,
	23, 2272,
	24, 2272,
	25, 2272,
	26, 2272,
	28, 2272,
	29, 2272,
	32, 2272,
	33, 2272,
	35, 2272,
	37, 2272,
	40, 2272,
	41, 2272,
	42, 2272,
	43, 2272,
	44, 2272,
	45, 2272,
	46, 2272,
	47, 2272,
	48, 2272,
	50, 2272,
	51, 2272,
	52, 2272,
	54, 2272,
	55, 2272,
	56, 2272,
	57, 2272,
	58, 2272,
	62, 2272,
	63, 2272,
	64, 2272,
	65, 2272,
	67, 2272,
	68, 2272,
	69, 2272,
	70, 2272,
	73, 2272,
	74, 2272,
	75, 2272,
	76, 2272,
	77, 2272,
	78, 2272,
	79, 2272,
	80, 2272,
	82, 2272,
	83, 2272,
	84, 2272,
	85, 2272,
	87, 2272,
	88, 2272,
	89, 2272,
	90, 2272,
	91, 2272,
	93, 2272,
	94, 2272,
	95, 2272,
	96, 2272,
	104, 2272,
	105, 2272,
	106, 2272,
	107, 2272,
	109, 2272,
	110, 2272,
	111, 2272,
	113, 2272,
	114, 2272,
	115, 2272,
	117, 2272,
	118, 2272,
	120, 2272,
	121, 2272,
	124, 2272,
	125, 2272,
	126, 2272,
	128, 2272,
	129, 2272,
	131, 2272,
	132, 2272,
	133, 2272,
	135, 2272,
	136, 2272,
	137, 2272,
	138, 2272,
	139, 2272,
	140, 2272,
	141, 2272,
	142, 2272,
	143, 2272,
	144, 2272,
	145, 2272,
	146, 2272,
	147, 2272,
	148, 2272,
	149, 2272,
	153, 2272,
	154, 2272,
	155, 2272,
	156, 2272,
	157, 2272,
	158, 2272,
	159, 2272,
	160, 2272,
	163, 2272,
	164, 2272,
	166, 2272,
	169, 2272,
	170, 2272,
	171, 2272,
	172, 2272,
	173, 2272,
	174, 2272,
	175, 2272,
	177, 2272,
	178, 2272,
	180, 2272,
	181, 2272,
	183, 2272,
	184, 2272,
	185, 2272,
	186, 2272,
	187, 2272,
	188, 2272,
	189, 2272,
	190, 2272,
	191, 2272,
	192, 2272,
	193, 2272,
	194, 2272,
	195, 2272,
	196, 2272,
	197, 2272,
	198, 2272,
	199, 2272,
	201, 2272,
	202, 2272,
	204, 2272,
	205, 2272,
	206, 2272,
	208, 2272,
	209, 2272,
	210, 2272,
	211, 2272,
	213, 2272,
	215, 2272,
	216, 2272,
	217, 2272,
	218, 2272,
	219, 2272,
	220, 2272,
	221, 2272,
	222, 2272,
	223, 2272,
	225, 2272,
	226, 2272,
	227, 2272,
	228, 2272,
	229, 2272,
	230, 2272,
	231, 2272,
	232, 2272,
	234, 2272,
	235, 2272,
	236, 2272,
	238, 2272,
	239, 2272,
	240, 2272,
	241, 2272,
	242, 2272,
	243, 2272,
	245, 2272,
	246, 2272,
	247, 2272,
	250, 2272,
	251, 2272,
	252, 2272,
	253, 2272,
	254, 2272,
	255, 2272,
	256, 2272,
	257, 2272,
	258, 2272,
	259, 2272,
	260, 2272,
	261, 2272,
	262, 2272,
	263, 2272,
	264, 2272,
	265, 2272,
	267, 2272,
	268, 2272,
	269, 2272,
	270, 2272,
	271, 2272,
	272, 2272,
	273, 2272,
	274, 2272,
	276, 2272,
	279, 2272,
	280, 2272,
	282, 2272,
	283, 2272,
	284, 2272,
	285, 2272,
	286, 2272,
	289, 2272,
	293, 2272,
	294, 2272,
	295, 2272,
	296, 2272,
	298, 2272,
	299, 2272,
	300, 2272,
	302, 2272,
	304, 2272,
	305, 2272,
	306, 2272,
	307, 2272,
	308, 2272,
	309, 2272,
	310, 2272,
	311, 2272,
	312, 2272,
	313, 2272,
	314, 2272,
	315, 2272,
	317, 2272,
	318, 2272,
	319, 2272,
	320, 2272,
	321, 2272,
	322, 2272,
	323, 2272,
	324, 2272,
	325, 2272,
	327, 2272,
	329, 2272,
	330, 2272,
	331, 2272,
	332, 2272,
	333, 2272,
	334, 2272,
	335, 2272,
	336, 2272,
	337, 2272,
	338, 2272,
	339, 2272,
	346, 2272,
	347, 2272,
	348, 2272,
	349, 2272,
	350, 2272,
	351, 2272,
	352, 2272,
	353, 2272,
	354, 2272,
	355, 2272,
	357, 2272,
	358, 2272,
	359, 2272,
	360, 2272,
	361, 2272,
	362, 2272,
	363, 2272,
	364, 2272,
	365, 2272,
	366, 2272,
	367, 2272,
	368, 2272,
	369, 2272,
	370, 2272,
	371, 2272,
	372, 2272,
	373, 2272,
	374, 2272,
	375, 2272,
	376, 2272,
	377, 2272,
	378, 2272,
	380, 2272,
	381, 2272,
	382, 2272,
	383, 2272,
	384, 2272,
	385, 2272,
	387, 2272,
	388, 2272,
	389, 2272,
	390, 2272,
	391, 2272,
	392, 2272,
	393, 2272,
	394, 2272,
	395, 2272,
	397, 2272,
	399, 2272,
	400, 2272,
	401, 2272,
	402, 2272,
	403, 2272,
	404, 2272,
	405, 2272,
	406, 2272,
	407, 2272,
	408, 2272,
	409, 2272,
	410, 2272,
	411, 2272,
	413, 2272,
	414, 2272,
	416, 2272,
	418, 2272,
	419, 2272,
	420, 2272,
	421, 2272,
	422, 2272,
	423, 2272,
	424, 2272,
	425, 2272,
	427, 2272,
	428, 2272,
	429, 2272,
	430, 2272,
	431, 2272,
	433, 2272,
	435, 2272,
	436, 2272,
	437, 2272,
	438, 2272,
	439, 2272,
	441, 2272,
	442, 2272,
	443, 2272,
	445, 2272,
	446, 2272,
	449, 2272,
	450, 2272,
	451, 2272,
	452, 2272,
	453, 2272,
	454, 2272,
	455, 2272,
	457, 2272,
	460, 2272,
	461, 2272,
	462, 2272,
	463, 2272,
	464, 2272,
	465, 2272,
	467, 2272,
	468, 2272,
	469, 2272,
	474, 2272,
	475, 2272,
	476, 2272,
	477, 2272,
	478, 2272,
	479, 2272,
	480, 2272,
	481, 2272,
	484, 2272,
	485, 2272,
	486, 2272,
	487, 2272,
	488, 2272,
	489, 2272,
	491, 2272,
	492, 2272,
	493, 2272,
	494, 2272,
	495, 2272,
	496, 2272,
	497, 2272,
	498, 2272,
	499, 2272,
	501, 2272,
	504, 2272,
	505, 2272,
	507, 2272,
	508, 2272,
	-2, 0,
	-1, 1429,
	168, 2170,
	432, 2170,
	486, 2170,
	505, 2170,
	-2, 0,
	-1, 1477,
	331, 734,
	385, 734,
	-2, 0,
	-1, 1502,
	1, 729,
	502, 729,
	504, 729,
	506, 729,
	-2, 0,
	-1, 1503,
	1, 765,
	502, 765,
	504, 765,
	506, 765,
	-2, 0,
	-1, 1504,
	1, 736,
	502, 736,
	504, 736,
	506, 736,
	-2, 0,
	-1, 1506,
	1, 740,
	502, 740,
	504, 740,
	506, 740,
	-2, 0,
	-1, 1512,
	1, 747,
	502, 747,
	504, 747,
	506, 747,
	-2, 0,
	-1, 1540,
	1, 2220,
	502, 2220,
	504, 2220,
	505, 2220,
	506, 2220,
	-2, 794,
	-1, 1541,
	1, 2167,
	502, 2167,
	504, 2167,
	505, 2167,
	506, 2167,
	-2, 795,
	-1, 1556,
	1, 1151,
	506, 1151,
	-2, 1156,
	-1, 1559,
	152, 1282,
	165, 1282,
	244, 1282,
	287, 1282,
	-2, 1222,
	-1, 1653,
	134, 1243,
	152, 1243,
	165, 1243,
	212, 1243,
	244, 1243,
	287, 1243,
	297, 1243,
	447, 1243,
	-2, 1647,
	-1, 1713,
	504, 1797,
	-2, 0,
	-1, 1748,
	134, 1243,
	152, 1243,
	165, 1243,
	212, 1243,
	244, 1243,
	287, 1243,
	297, 1243,
	447, 1243,
	-2, 1363,
	-1, 1795,
	503, 1474,
	-2, 1462,
	-1, 1828,
	1, 571,
	506, 571,
	-2, 1156,
	-1, 2054,
	1, 731,
	502, 731,
	504, 731,
	506, 731,
	-2, 0,
	-1, 2055,
	1, 767,
	502, 767,
	504, 767,
	506, 767,
	-2, 0,
	-1, 2085,
	1, 749,
	502, 749,
	504, 749,
	506, 749,
	-2, 0,
	-1, 2131,
	365, 1309,
	366, 1309,
	-2, 1507,
	-1, 2162,
	14, 0,
	15, 0,
	16, 0,
	484, 0,
	485, 0,
	486, 0,
	-2, 1527,
	-1, 2163,
	14, 0,
	15, 0,
	16, 0,
	484, 0,
	485, 0,
	486, 0,
	-2, 1528,
	-1, 2164,
	88, 0,
	225, 0,
	226, 0,
	488, 0,
	489, 0,
	-2, 1529,
	-1, 2165,
	88, 0,
	225, 0,
	226, 0,
	488, 0,
	489, 0,
	-2, 1530,
	-1, 2166,
	88, 0,
	225, 0,
	226, 0,
	488, 0,
	489, 0,
	-2, 1531,
	-1, 2167,
	88, 0,
	225, 0,
	226, 0,
	488, 0,
	489, 0,
	-2, 1532,
	-1, 2168,
	88, 0,
	225, 0,
	226, 0,
	488, 0,
	489, 0,
	-2, 1533,
	-1, 2169,
	14, 0,
	15, 0,
	16, 0,
	484, 0,
	485, 0,
	486, 0,
	-2, 1534,
	-1, 2181,
	14, 0,
	15, 0,
	16, 0,
	484, 0,
	485, 0,
	486, 0,
	-2, 1546,
	-1, 2182,
	14, 0,
	15, 0,
	16, 0,
	484, 0,
	485, 0,
	486, 0,
	-2, 1547,
	-1, 2183,
	14, 0,
	15, 0,
	16, 0,
	484, 0,
	485, 0,
	486, 0,
	-2, 1548,
	-1, 2186,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	192, 0,
	195, 0,
	243, 0,
	392, 0,
	480, 0,
	487, 0,
	-2, 1553,
	-1, 2192,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	192, 0,
	195, 0,
	243, 0,
	392, 0,
	480, 0,
	487, 0,
	-2, 1557,
	-1, 2194,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	192, 0,
	195, 0,
	243, 0,
	392, 0,
	480, 0,
	487, 0,
	-2, 1565,
	-1, 2195,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	192, 0,
	195, 0,
	243, 0,
	392, 0,
	480, 0,
	487, 0,
	-2, 1566,
	-1, 2196,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	192, 0,
	195, 0,
	243, 0,
	392, 0,
	480, 0,
	487, 0,
	-2, 1567,
	-1, 2197,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	192, 0,
	195, 0,
	243, 0,
	392, 0,
	480, 0,
	487, 0,
	-2, 1568,
	-1, 2309,
	5, 1940,
	168, 1808,
	503, 1937,
	-2, 1928,
	-1, 2310,
	168, 1809,
	-2, 2224,
	-1, 2311,
	168, 1810,
	-2, 2086,
	-1, 2312,
	168, 1811,
	-2, 1998,
	-1, 2313,
	168, 1812,
	-2, 2041,
	-1, 2314,
	168, 1813,
	-2, 2081,
	-1, 2315,
	168, 1814,
	-2, 2165,
	-1, 2316,
	168, 1815,
	-2, 1630,
	-1, 2385,
	1, 1364,
	2, 1364,
	94, 1364,
	134, 1364,
	152, 1364,
	165, 1364,
	169, 1364,
	179, 1364,
	182, 1364,
	208, 1364,
	212, 1364,
	222, 1364,
	240, 1364,
	244, 1364,
	268, 1364,
	287, 1364,
	291, 1364,
	297, 1364,
	356, 1364,
	360, 1364,
	447, 1364,
	458, 1364,
	471, 1364,
	472, 1364,
	473, 1364,
	482, 1364,
	502, 1364,
	504, 1364,
	506, 1364,
	508, 1364,
	-2, 1363,
	-1, 2398,
	503, 1909,
	-2, 1923,
	-1, 2422,
	503, 1473,
	-2, 1463,
	-1, 2539,
	1, 1054,
	502, 1054,
	504, 1054,
	506, 1054,
	-2, 1270,
	-1, 2702,
	292, 1312,
	-2, 2262,
	-1, 2703,
	292, 1313,
	-2, 2151,
	-1, 2707,
	365, 1874,
	366, 1874,
	-2, 1628,
	-1, 2708,
	365, 1878,
	366, 1878,
	-2, 1629,
	-1, 2709,
	365, 1875,
	366, 1875,
	-2, 1628,
	-1, 2710,
	365, 1879,
	366, 1879,
	-2, 1629,
	-1, 2723,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	192, 0,
	195, 0,
	243, 0,
	392, 0,
	480, 0,
	487, 0,
	-2, 1555,
	-1, 2724,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	192, 0,
	195, 0,
	243, 0,
	392, 0,
	480, 0,
	487, 0,
	-2, 1559,
	-1, 2730,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	192, 0,
	195, 0,
	243, 0,
	392, 0,
	480, 0,
	487, 0,
	-2, 1561,
	-1, 2927,
	219, 1156,
	327, 1156,
	335, 1156,
	482, 1156,
	-2, 568,
	-1, 3053,
	1, 1054,
	502, 1054,
	504, 1054,
	506, 1054,
	-2, 1270,
	-1, 3146,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	192, 0,
	195, 0,
	243, 0,
	392, 0,
	480, 0,
	487, 0,
	-2, 1563,
	-1, 3153,
	216, 0,
	218, 0,
	279, 0,
	-2, 1582,
	-1, 3220,
	14, 0,
	15, 0,
	16, 0,
	484, 0,
	485, 0,
	486, 0,
	-2, 1611,
	-1, 3221,
	14, 0,
	15, 0,
	16, 0,
	484, 0,
	485, 0,
	486, 0,
	-2, 1612,
	-1, 3222,
	14, 0,
	15, 0,
	16, 0,
	484, 0,
	485, 0,
	486, 0,
	-2, 1613,
	-1, 3226,
	14, 0,
	15, 0,
	16, 0,
	484, 0,
	485, 0,
	486, 0,
	-2, 1617,
	-1, 3227,
	14, 0,
	15, 0,
	16, 0,
	484, 0,
	485, 0,
	486, 0,
	-2, 1618,
	-1, 3228,
	14, 0,
	15, 0,
	16, 0,
	484, 0,
	485, 0,
	486, 0,
	-2, 1619,
	-1, 3274,
	503, 1910,
	-2, 1924,
	-1, 3393,
	505, 2378,
	-2, 1200,
	-1, 3445,
	216, 0,
	218, 0,
	279, 0,
	-2, 1583,
	-1, 3448,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	192, 0,
	195, 0,
	243, 0,
	392, 0,
	480, 0,
	487, 0,
	-2, 1586,
	-1, 3449,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	192, 0,
	195, 0,
	243, 0,
	392, 0,
	480, 0,
	487, 0,
	-2, 1588,
	-1, 3647,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	192, 0,
	195, 0,
	243, 0,
	392, 0,
	480, 0,
	487, 0,
	-2, 1587,
	-1, 3648,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	192, 0,
	195, 0,
	243, 0,
	392, 0,
	480, 0,
	487, 0,
	-2, 1589,
	-1, 3659,
	216, 0,
	-2, 1620,
	-1, 3803,
	216, 0,
	-2, 1621,
	-1, 3952,
	47, 0,
	192, 0,
	243, 0,
	392, 0,
	480, 0,
	487, 0,
	-2, 2227,
}

const sqlPrivate = 57344

const sqlLast = 100896

var sqlAct = [...]int{

	239, 3733, 3825, 3690, 3578, 3951, 3962, 2623, 3846, 3693,
	4059, 3927, 3910, 2857, 3428, 3892, 3039, 3296, 1287, 3907,
	3921, 3964, 3963, 4009, 3740, 1095, 3185, 3678, 3807, 2595,
	2858, 3609, 2455, 3604, 919, 1412, 3950, 2141, 3636, 2034,
	3385, 3563, 3749, 3334, 1271, 3068, 3591, 936, 2945, 3771,
	3512, 231, 3061, 1407, 2209, 3035, 2516, 3364, 3614, 3063,
	1568, 1444, 3025, 3349, 1880, 923, 3138, 2142, 653, 3297,
	619, 2632, 2009, 3664, 2341, 1754, 2584, 3347, 1153, 2716,
	2025, 2149, 2570, 2558, 2634, 1084, 2567, 910, 2880, 2900,
	1411, 3484, 653, 1246, 1782, 3427, 2872, 1485, 2840, 2625,
	2596, 1929, 2861, 2032, 1723, 2457, 1890, 2378, 1928, 3245,
	2222, 2377, 1661, 2642, 1254, 2146, 2641, 648, 1443, 2863,
	751, 2007, 2579, 3009, 2581, 3808, 2631, 1914, 2530, 2839,
	967, 2493, 918, 161, 2568, 1923, 2253, 2700, 3734, 233,
	4, 2380, 232, 1864, 1137, 2242, 1699, 1907, 1867, 99,
	1556, 1724, 2206, 2359, 2338, 963, 2251, 1388, 1854, 2130,
	2113, 3037, 1251, 1422, 1408, 1404, 2111, 1075, 2589, 1398,
	1964, 2635, 654, 1126, 972, 2492, 1341, 2446, 587, 655,
	36, 2906, 1694, 2245, 1743, 1733, 1078, 2349, 573, 1057,
	2367, 2223, 595, 2295, 170, 1569, 2305, 974, 1646, 1570,
	650, 2112, 603, 1963, 1512, 613, 1074, 659, 1984, 1092,
	662, 2114, 725, 1420, 171, 699, 1273, 161, 1783, 1282,
	1364, 1879, 590, 2135, 948, 745, 41, 1080, 40, 1055,
	598, 659, 38, 29, 662, 27, 25, 1575, 828, 2751,
	810, 1555, 1293, 1583, 1584, 2747, 1616, 1617, 1618, 1626,
	1627, 1628, 3259, 2000, 3260, 2000, 2000, 4117, 4112, 2000,
	2000, 2358, 3094, 4100, 1619, 1614, 4099, 2358, 2859, 1740,
	2358, 4076, 1586, 4074, 4070, 3528, 3992, 3528, 1937, 1632,
	3993, 3986, 3984, 3981, 3978, 2358, 2358, 3982, 3979, 3973,
	3948, 3947, 766, 1937, 1937, 1937, 3946, 2812, 2813, 3942,
	2018, 914, 1585, 2018, 3941, 3077, 3936, 3934, 2018, 3905,
	3528, 3528, 1605, 3528, 3886, 3879, 914, 3878, 2413, 2358,
	1602, 2358, 915, 3078, 2925, 3873, 2812, 2813, 1072, 3528,
	3872, 3866, 3839, 3805, 3528, 1937, 3570, 2413, 2351, 1583,
	1584, 3785, 1058, 1058, 3782, 1937, 1134, 3742, 3528, 3710,
	1998, 3743, 2512, 1937, 1134, 3709, 895, 2812, 2813, 1937,
	1111, 1614, 3094, 3701, 1090, 3700, 2827, 1937, 1586, 3528,
	3670, 3649, 2033, 3633, 1937, 2413, 894, 2018, 3622, 3558,
	3249, 2715, 3094, 2358, 931, 1608, 1609, 1610, 1611, 3547,
	3527, 2358, 3447, 2358, 3528, 1591, 2413, 3401, 1585, 3395,
	3362, 3110, 3269, 3110, 3363, 3267, 3270, 3887, 1605, 3268,
	904, 909, 3800, 3252, 3169, 3165, 1602, 2358, 1937, 2358,
	1106, 3109, 3101, 2760, 1623, 3110, 3102, 1633, 2856, 2761,
	3788, 1059, 2358, 1613, 1615, 2851, 2850, 2803, 2801, 2358,
	2358, 2804, 2802, 2793, 2409, 2018, 3249, 2794, 1629, 2818,
	1630, 2791, 2762, 2350, 3603, 2358, 2358, 1600, 1601, 2647,
	2621, 3441, 2620, 2018, 2021, 2430, 2021, 2412, 3570, 2358,
	2407, 2413, 2478, 2401, 2358, 1621, 2357, 1937, 2818, 1937,
	2358, 1608, 1609, 1610, 1611, 2020, 1606, 1583, 1584, 2021,
	1061, 1591, 1062, 206, 3548, 1286, 1107, 1937, 3102, 2507,
	1884, 2445, 1834, 1999, 2564, 1936, 2524, 206, 2443, 2818,
	1719, 1631, 2358, 1281, 2812, 2813, 1586, 2830, 2831, 2832,
	3326, 3141, 2812, 2813, 3119, 1741, 1487, 2750, 1620, 1613,
	1615, 208, 1917, 2394, 2393, 2392, 2391, 2390, 3079, 1063,
	2828, 1060, 903, 1415, 902, 208, 1585, 901, 900, 2001,
	899, 2001, 2001, 1600, 1601, 2001, 2001, 3080, 2680, 2812,
	2813, 898, 2830, 2831, 2832, 206, 897, 893, 892, 2828,
	891, 890, 889, 888, 887, 886, 885, 207, 884, 1612,
	3443, 883, 1606, 2827, 882, 881, 880, 200, 879, 1307,
	878, 207, 877, 859, 808, 201, 807, 806, 805, 1607,
	2828, 200, 804, 208, 803, 802, 1583, 1584, 801, 201,
	800, 799, 798, 206, 1017, 797, 796, 172, 972, 795,
	1286, 794, 972, 793, 1624, 792, 791, 790, 2827, 789,
	788, 172, 84, 787, 3500, 1586, 786, 1156, 785, 1591,
	784, 1156, 783, 782, 781, 1276, 780, 779, 769, 207,
	768, 208, 1136, 2829, 1130, 764, 1141, 763, 757, 756,
	716, 2278, 3459, 3077, 1107, 1585, 2818, 715, 972, 675,
	972, 674, 972, 673, 2818, 1612, 3280, 1276, 2350, 665,
	664, 663, 2829, 633, 625, 624, 623, 607, 227, 172,
	1249, 226, 3263, 1261, 1264, 1607, 1262, 207, 2575, 225,
	1107, 1276, 224, 2609, 3111, 2016, 2013, 200, 2903, 1999,
	2106, 2818, 1622, 2829, 1257, 201, 1597, 1598, 1604, 1625,
	1603, 1599, 223, 1596, 1594, 1595, 1587, 1588, 1589, 1590,
	1592, 1593, 222, 1285, 1265, 965, 3469, 172, 2264, 221,
	3468, 220, 1276, 972, 219, 218, 217, 216, 1276, 215,
	214, 213, 1276, 1264, 1264, 1346, 1348, 2828, 1591, 212,
	972, 211, 972, 1301, 2833, 1124, 1276, 210, 209, 2773,
	2756, 2854, 972, 2545, 972, 1306, 2417, 2823, 2821, 2822,
	2814, 2815, 2816, 2817, 2819, 2820, 2399, 2248, 2384, 1337,
	2262, 1264, 2855, 2028, 1862, 1767, 659, 1456, 1452, 662,
	1672, 1289, 2828, 1149, 1663, 1243, 1248, 2821, 2822, 2814,
	2815, 2816, 2817, 2819, 2820, 1276, 1603, 1599, 1119, 1596,
	1594, 1595, 1587, 1588, 1589, 1590, 1592, 1593, 1702, 1284,
	1143, 1744, 972, 3969, 1701, 972, 1283, 2823, 2821, 2822,
	2814, 2815, 2816, 2817, 2819, 2820, 1702, 1094, 3949, 1292,
	3791, 1299, 1701, 1305, 1582, 3853, 1705, 3789, 3797, 3663,
	1505, 3688, 2812, 2813, 2249, 3623, 206, 1351, 3602, 2027,
	2829, 3618, 3505, 3482, 1700, 3368, 3481, 3475, 134, 3474,
	3473, 161, 161, 3466, 3465, 1583, 1584, 3463, 3458, 1425,
	1427, 3455, 3454, 1392, 1395, 3361, 1457, 915, 3284, 3283,
	2577, 1401, 3282, 1130, 208, 3273, 1130, 1614, 3240, 3239,
	3238, 3161, 3157, 2898, 1586, 2829, 3105, 2812, 2813, 2847,
	1670, 1367, 2838, 3324, 1418, 972, 972, 972, 972, 972,
	972, 972, 2811, 2808, 1521, 2807, 2805, 2800, 2250, 2247,
	1664, 1436, 1662, 1441, 1585, 2799, 2375, 2798, 2795, 1300,
	207, 2792, 2772, 1450, 2755, 1455, 972, 1583, 1584, 2748,
	200, 1295, 972, 2622, 1423, 2385, 206, 2235, 201, 1582,
	1587, 1588, 1589, 1590, 1592, 1593, 1663, 1944, 1581, 1614,
	2812, 2813, 1560, 1071, 4111, 1975, 1586, 2824, 2825, 2826,
	172, 1942, 4068, 4067, 2823, 2821, 2822, 2814, 2815, 2816,
	2817, 2819, 2820, 1437, 208, 2814, 2815, 2816, 2817, 2819,
	2820, 1506, 4002, 4000, 2818, 1451, 1585, 1438, 2852, 3991,
	1096, 3187, 3845, 1295, 3835, 3832, 1605, 3831, 1554, 1652,
	3830, 3824, 2824, 2825, 2826, 3817, 3786, 1591, 3770, 2823,
	2821, 2822, 2814, 2815, 2816, 2817, 2819, 2820, 3769, 2212,
	207, 3809, 1462, 3757, 3754, 1478, 2252, 3706, 3684, 1294,
	200, 3661, 3644, 3643, 3630, 972, 972, 972, 201, 2818,
	2576, 972, 1442, 1508, 3629, 1613, 1615, 3595, 1092, 3571,
	1092, 3499, 3480, 3617, 1721, 3416, 3413, 3314, 3313, 3367,
	172, 1589, 1590, 1592, 1593, 1156, 3300, 3299, 3598, 1608,
	1609, 1610, 1611, 972, 3255, 915, 653, 3243, 1557, 1591,
	1800, 653, 1565, 895, 2218, 1770, 2895, 3152, 1650, 972,
	3112, 3095, 1564, 1276, 3054, 1779, 2998, 2973, 1606, 2948,
	1823, 2947, 2818, 894, 1559, 2920, 2777, 2776, 972, 2771,
	206, 2739, 2918, 2557, 1156, 1730, 1561, 1613, 1615, 1708,
	1578, 1579, 1261, 1707, 1706, 2592, 2246, 1703, 1695, 1693,
	2828, 1130, 3501, 2277, 2424, 2423, 2396, 1831, 1704, 2389,
	1727, 1728, 1860, 1775, 206, 206, 2356, 1777, 208, 2260,
	1295, 2426, 1766, 1722, 1717, 1716, 1715, 1825, 1268, 1714,
	1583, 1584, 1713, 1826, 1712, 1696, 1697, 1711, 1058, 1751,
	1606, 1710, 1709, 1690, 2029, 1689, 1688, 1687, 1686, 1685,
	1684, 1683, 208, 208, 161, 1682, 2948, 1681, 1680, 1586,
	1310, 1679, 1295, 2828, 207, 1678, 1677, 1676, 1665, 915,
	1773, 1651, 1649, 1090, 200, 1090, 1644, 206, 1118, 3451,
	2263, 1607, 201, 1109, 1343, 659, 1102, 3279, 662, 1585,
	659, 3266, 3258, 662, 2759, 1774, 2415, 2387, 207, 207,
	1771, 3673, 1758, 3503, 172, 1752, 1749, 1851, 200, 200,
	2812, 2813, 1828, 2829, 3278, 208, 201, 201, 1664, 2916,
	1276, 1276, 1647, 1762, 1140, 3550, 1720, 4065, 1873, 1853,
	1156, 4058, 2261, 1612, 3833, 1431, 3064, 3745, 172, 172,
	3744, 3621, 3573, 3572, 3549, 1746, 1778, 1794, 1761, 1445,
	1760, 1822, 3261, 1607, 1759, 1757, 1904, 1756, 1755, 1906,
	1853, 207, 1911, 3097, 3096, 1134, 3792, 1853, 1507, 3750,
	1780, 200, 1840, 3790, 1744, 2976, 2829, 3312, 1139, 201,
	1655, 1932, 1934, 1685, 1660, 1742, 2324, 2816, 2817, 2819,
	2820, 1552, 2797, 875, 3371, 2796, 746, 1685, 1469, 1856,
	1846, 172, 3687, 1134, 2721, 1596, 1594, 1595, 1587, 1588,
	1589, 1590, 1592, 1593, 2497, 1522, 2480, 1138, 1134, 1135,
	2248, 1889, 66, 1674, 749, 748, 3041, 1131, 3040, 1884,
	3665, 1702, 1971, 876, 206, 1486, 1915, 1701, 67, 2822,
	2814, 2815, 2816, 2817, 2819, 2820, 2026, 3741, 3989, 3974,
	1419, 71, 3961, 3026, 1487, 1930, 3331, 3317, 1671, 2243,
	3117, 659, 206, 2859, 662, 3189, 2765, 1276, 2422, 1276,
	3970, 1276, 208, 1718, 1968, 1698, 206, 1596, 1594, 1595,
	1587, 1588, 1589, 1590, 1592, 1593, 77, 1276, 1276, 206,
	1261, 1976, 1973, 1981, 1284, 3033, 1972, 2249, 1276, 1325,
	208, 1283, 2521, 2814, 2815, 2816, 2817, 2819, 2820, 3983,
	3980, 1276, 1276, 1276, 208, 1477, 3073, 3291, 207, 1910,
	83, 3826, 2035, 917, 1070, 1829, 1125, 208, 200, 2518,
	3971, 3605, 653, 1466, 98, 1132, 201, 3904, 3726, 84,
	95, 1935, 3814, 1133, 2951, 3307, 207, 2629, 1989, 2588,
	3023, 2121, 2736, 4026, 4025, 3133, 200, 1841, 172, 1978,
	207, 3538, 3865, 1313, 201, 873, 2929, 2431, 4107, 1279,
	200, 2250, 2247, 207, 711, 1955, 2091, 1954, 201, 871,
	2734, 1520, 869, 200, 867, 2050, 2591, 3719, 85, 3712,
	2046, 201, 864, 3357, 2031, 2119, 1519, 2089, 1323, 3340,
	172, 3339, 3333, 3330, 3328, 1367, 2036, 1986, 3288, 1986,
	3287, 1987, 972, 172, 972, 913, 915, 2770, 915, 1983,
	2769, 972, 2768, 1154, 1800, 1800, 1156, 1255, 972, 972,
	972, 972, 972, 972, 972, 972, 972, 972, 972, 972,
	972, 972, 972, 972, 972, 972, 972, 972, 972, 972,
	972, 972, 972, 972, 972, 972, 972, 972, 972, 972,
	972, 972, 972, 2040, 972, 712, 972, 972, 972, 972,
	2123, 659, 1324, 2110, 662, 1119, 2917, 1991, 1992, 2131,
	2022, 1140, 2023, 1423, 1518, 1423, 1140, 2767, 972, 2252,
	1134, 972, 972, 912, 855, 2731, 1464, 2725, 2528, 972,
	2527, 2523, 2039, 972, 2514, 972, 972, 88, 2506, 2449,
	2505, 2732, 2975, 1156, 2120, 2737, 1881, 2484, 1593, 972,
	972, 972, 972, 2447, 972, 972, 972, 972, 972, 972,
	972, 972, 2068, 2408, 3344, 1139, 3864, 2193, 1558, 1953,
	1139, 2931, 1131, 1131, 1877, 2291, 169, 91, 2449, 94,
	972, 972, 972, 972, 972, 972, 972, 972, 972, 2085,
	2459, 2416, 2447, 972, 1797, 2224, 2225, 3642, 1882, 1883,
	2290, 2151, 2134, 206, 2585, 1092, 2118, 3118, 914, 2224,
	2240, 750, 1156, 2003, 2482, 134, 2005, 1280, 2104, 2246,
	3343, 1092, 2010, 2044, 2501, 2012, 1878, 2100, 2820, 2015,
	850, 2107, 2109, 1459, 2122, 2286, 2115, 972, 1156, 2243,
	895, 208, 2108, 895, 895, 2494, 2495, 2239, 2325, 3551,
	1378, 1794, 1794, 908, 2308, 2308, 2322, 206, 2224, 3294,
	2138, 2342, 2344, 2139, 2140, 136, 861, 2348, 2372, 915,
	2683, 1762, 2147, 2148, 1332, 3524, 2494, 2495, 915, 173,
	1132, 1132, 915, 2494, 2495, 2438, 2400, 207, 1133, 1133,
	2204, 2462, 1531, 1445, 1445, 208, 2471, 200, 1551, 1357,
	2733, 1356, 2288, 1276, 3520, 201, 1355, 2289, 1354, 2735,
	2292, 2397, 2293, 2294, 2220, 1788, 1487, 4025, 2202, 1517,
	4053, 2698, 2208, 2520, 2364, 2103, 2237, 747, 2208, 2061,
	206, 1058, 851, 1156, 2386, 2095, 1487, 1460, 714, 713,
	1751, 207, 2216, 1130, 2531, 3939, 2470, 1831, 1475, 2214,
	3521, 200, 2058, 2519, 2713, 1732, 1479, 2363, 911, 201,
	1090, 1319, 1800, 2053, 1988, 2928, 3534, 2686, 208, 3967,
	915, 3695, 2304, 1563, 2105, 2333, 1090, 2317, 1117, 2346,
	2517, 172, 2990, 777, 161, 2354, 2355, 3124, 1156, 3123,
	1535, 2365, 2410, 2418, 2252, 2371, 3175, 2376, 2369, 2370,
	2382, 2383, 1276, 4054, 1845, 1844, 970, 1749, 1853, 1855,
	2451, 3641, 972, 972, 207, 972, 2983, 2677, 709, 1465,
	708, 2989, 2102, 1249, 200, 1903, 2062, 2054, 2481, 865,
	1736, 1704, 201, 2198, 3329, 1134, 1134, 1868, 1261, 2090,
	2429, 2099, 1869, 865, 2024, 2199, 865, 3327, 866, 2200,
	2461, 2561, 2425, 2205, 172, 2982, 865, 1887, 631, 2515,
	2088, 2037, 1696, 1697, 1902, 2502, 2486, 1868, 2712, 1739,
	3176, 2038, 1869, 2428, 2685, 4062, 3697, 2432, 1342, 3316,
	2190, 2055, 2522, 1734, 2047, 2048, 2049, 1502, 3303, 1276,
	1276, 2599, 1276, 852, 2504, 4056, 1886, 2682, 2217, 3315,
	2483, 1737, 2533, 2121, 1276, 2450, 2540, 1514, 2542, 3968,
	2454, 1768, 1848, 1655, 2473, 3516, 969, 2464, 2467, 3517,
	4069, 1340, 4079, 2532, 2534, 2617, 2485, 4042, 3178, 1735,
	2477, 3532, 1884, 2643, 1099, 1264, 1264, 2612, 2448, 2503,
	1870, 1503, 2496, 2498, 2499, 2500, 659, 2119, 4041, 662,
	1941, 1940, 2874, 972, 2666, 630, 2667, 1872, 946, 1794,
	1863, 2511, 1377, 2537, 3519, 2646, 1891, 2329, 1097, 2406,
	1870, 1868, 2460, 2705, 2706, 1321, 1869, 2614, 3522, 1284,
	2487, 2684, 4014, 2645, 1261, 1895, 2543, 1872, 2252, 2650,
	2651, 2546, 3433, 3966, 2549, 3432, 2551, 972, 2656, 2657,
	2658, 2555, 2601, 972, 972, 2664, 2565, 1532, 2201, 3070,
	2648, 2117, 853, 1850, 2652, 1087, 2653, 2203, 2628, 1874,
	2583, 1738, 1261, 161, 1261, 2188, 2594, 2661, 2191, 4092,
	2605, 2618, 2606, 1892, 2607, 2590, 2101, 2668, 2590, 2670,
	2060, 2672, 1875, 2688, 2611, 2690, 2252, 1849, 1461, 1874,
	2613, 4055, 2615, 1884, 854, 2619, 3827, 585, 972, 972,
	2681, 2630, 2701, 3533, 972, 1100, 2120, 2000, 1797, 1797,
	3352, 2434, 3841, 1318, 1870, 1927, 2187, 972, 972, 3350,
	3001, 862, 580, 972, 972, 2436, 3518, 3071, 4060, 972,
	3696, 1872, 3883, 1530, 2663, 2727, 1342, 778, 972, 972,
	972, 2207, 2962, 2669, 972, 2671, 1938, 2673, 1423, 2930,
	1529, 2538, 744, 2215, 972, 1533, 2728, 1926, 2437, 2873,
	4013, 3525, 1736, 2758, 1875, 1086, 1691, 1896, 2118, 3587,
	2914, 972, 2674, 2435, 1474, 1476, 2691, 1732, 2704, 2057,
	2695, 1875, 2325, 2325, 2693, 2694, 2449, 3429, 2964, 3304,
	2052, 2961, 3070, 1874, 1875, 2134, 2699, 3638, 1875, 1562,
	2465, 1739, 2968, 3654, 1116, 2714, 632, 1088, 3995, 629,
	1643, 4061, 3352, 2753, 2754, 2366, 3996, 4035, 2757, 3353,
	2966, 3350, 3915, 2749, 3844, 2234, 2775, 1897, 1898, 1788,
	1788, 1534, 1865, 1737, 3780, 2368, 1913, 972, 972, 972,
	1893, 2969, 4080, 2381, 4063, 914, 972, 972, 972, 3191,
	4090, 972, 1736, 2726, 3597, 3423, 3275, 1112, 3434, 1912,
	3135, 972, 1092, 1156, 2696, 2189, 1490, 972, 2608, 972,
	3847, 1866, 915, 3965, 1894, 2965, 4024, 1092, 2866, 2867,
	4022, 1573, 3772, 3861, 3881, 3348, 3756, 1908, 3383, 3057,
	1962, 1739, 1729, 1110, 3773, 1156, 1105, 2764, 1875, 572,
	666, 3366, 2325, 2325, 2325, 1734, 3430, 1092, 2137, 1885,
	1156, 1882, 1883, 1842, 3637, 1871, 2888, 3882, 4012, 1098,
	3774, 3353, 1572, 1737, 1800, 2849, 3478, 1918, 1156, 3139,
	2907, 3703, 1925, 3702, 1857, 1858, 2934, 2912, 3682, 1909,
	972, 2868, 3813, 4085, 3588, 1871, 3384, 3337, 3351, 1839,
	3290, 1735, 3229, 1738, 972, 3058, 2924, 1905, 3052, 2878,
	3174, 3537, 2943, 1572, 2939, 4093, 1800, 3893, 3536, 3244,
	1899, 2569, 3848, 2559, 2926, 2897, 1567, 1982, 3776, 1974,
	1967, 1130, 972, 1949, 2360, 2539, 3136, 1572, 2932, 2935,
	2936, 2905, 2901, 2877, 3775, 2902, 2876, 2127, 2886, 2096,
	2844, 2845, 2846, 2001, 2889, 2890, 2894, 2952, 1835, 3386,
	2956, 3777, 2860, 581, 1571, 3994, 1797, 1090, 1837, 3610,
	2488, 2329, 2556, 1380, 2953, 1156, 3639, 2958, 2959, 2875,
	1924, 2887, 1090, 3739, 1276, 2940, 3737, 3435, 1900, 1276,
	2466, 1838, 2150, 1738, 1261, 3683, 2954, 2950, 1276, 1871,
	3351, 2938, 1276, 2362, 3922, 1571, 1156, 1573, 2361, 3923,
	2949, 3004, 1090, 653, 3007, 2978, 2719, 1971, 3015, 3017,
	2921, 2922, 2616, 2923, 1276, 2697, 582, 2981, 3010, 1571,
	2892, 2999, 2893, 3010, 2980, 1276, 2045, 1445, 3257, 3479,
	770, 1643, 2927, 2871, 1873, 2909, 2910, 2911, 1573, 1092,
	3038, 2329, 2329, 2870, 2933, 2991, 3051, 3230, 2128, 2992,
	3436, 3066, 4084, 3027, 583, 3231, 584, 1504, 667, 668,
	2563, 1794, 1873, 3008, 906, 2405, 850, 2967, 3018, 2255,
	2404, 2403, 2985, 3535, 2643, 2974, 2402, 1788, 3849, 1276,
	1276, 912, 2915, 2643, 3691, 2994, 1363, 2988, 758, 908,
	3075, 1361, 3820, 3046, 3579, 1491, 1915, 1774, 3024, 776,
	1276, 3106, 3019, 1794, 1915, 2970, 2971, 3049, 3020, 2972,
	3013, 1261, 1261, 3000, 2489, 2490, 1349, 1980, 3029, 2993,
	3031, 4032, 3627, 2986, 2944, 2486, 3735, 2987, 1350, 2649,
	907, 2541, 3086, 1156, 3680, 3002, 1156, 3896, 3901, 2995,
	2996, 3067, 659, 2997, 3821, 662, 2908, 3890, 3485, 3778,
	1921, 3246, 2259, 3093, 3779, 4034, 3059, 3919, 3072, 3985,
	1549, 2329, 2329, 2329, 2398, 3834, 972, 3081, 851, 670,
	669, 3681, 972, 972, 2882, 3692, 972, 972, 972, 3113,
	972, 3660, 3087, 3626, 3477, 3074, 1547, 1526, 1261, 972,
	1800, 915, 1919, 1524, 1090, 2842, 3132, 3356, 972, 3065,
	1463, 972, 850, 161, 161, 2841, 1501, 1156, 3151, 3130,
	3104, 3091, 3092, 3897, 3129, 3108, 972, 3120, 3114, 3121,
	3822, 3122, 671, 672, 1156, 908, 3115, 1499, 2806, 1497,
	3131, 1920, 2738, 3137, 1800, 1800, 972, 972, 1495, 972,
	972, 972, 2325, 2325, 2560, 1493, 2513, 3126, 771, 772,
	2479, 1484, 1482, 1359, 2258, 2883, 2427, 972, 3920, 2444,
	1769, 972, 1765, 1800, 1800, 972, 972, 972, 972, 972,
	972, 972, 972, 972, 972, 972, 972, 972, 972, 972,
	972, 972, 972, 972, 3154, 972, 1550, 3134, 1447, 1567,
	3163, 3164, 972, 972, 1800, 4010, 3127, 2679, 1362, 972,
	2087, 3557, 2881, 1360, 851, 2678, 759, 760, 3159, 2655,
	972, 775, 2116, 2098, 1513, 2065, 1946, 980, 3003, 1824,
	1675, 1092, 1092, 3960, 3170, 972, 1548, 2885, 1458, 852,
	2325, 2325, 2325, 2325, 2325, 2325, 2325, 2325, 2325, 2325,
	2325, 2325, 2325, 2325, 2325, 2325, 2325, 2325, 2325, 3193,
	2325, 3186, 1546, 1525, 1156, 1336, 3546, 4036, 3181, 1523,
	235, 235, 235, 3262, 575, 576, 3889, 591, 575, 591,
	601, 606, 1500, 3241, 622, 3177, 3179, 3180, 3208, 628,
	3062, 3200, 972, 3608, 3203, 235, 3204, 1794, 3233, 3206,
	3562, 3509, 3201, 1498, 3285, 1496, 3202, 863, 972, 972,
	773, 774, 3382, 755, 1494, 3376, 3083, 3084, 3085, 235,
	2884, 1492, 3088, 3342, 3089, 3248, 3090, 1483, 1481, 1358,
	3234, 3310, 3308, 3289, 972, 972, 3250, 3251, 3050, 3042,
	2610, 1794, 1794, 2586, 2574, 161, 2566, 2553, 2019, 2017,
	3253, 3254, 2014, 3242, 2011, 2006, 905, 2004, 853, 972,
	3264, 2002, 2147, 3194, 1993, 3265, 1945, 1943, 761, 762,
	1794, 1794, 1931, 2086, 1087, 852, 1087, 1916, 1901, 1888,
	1876, 3171, 3763, 1776, 1276, 3014, 1090, 1090, 1797, 4026,
	1925, 2147, 3209, 2717, 1576, 1067, 3930, 3632, 3625, 1800,
	854, 1794, 3323, 3325, 3624, 3569, 3322, 2644, 3318, 1861,
	1315, 3293, 2449, 2449, 3765, 2469, 1264, 3281, 3338, 3394,
	1068, 1884, 3237, 644, 1276, 2056, 2447, 2468, 575, 575,
	1797, 972, 1400, 3332, 1544, 1545, 235, 2082, 2081, 1092,
	972, 3021, 1979, 3372, 3929, 1445, 1399, 868, 870, 872,
	3396, 3355, 2063, 3539, 237, 2486, 3564, 1276, 1276, 1276,
	1480, 3799, 1971, 3404, 3486, 1583, 1584, 3047, 3388, 3464,
	2599, 2329, 2329, 1276, 2718, 3391, 3359, 2491, 3053, 2472,
	1156, 3373, 3387, 1580, 1086, 586, 1086, 4028, 1924, 1577,
	4020, 3354, 3990, 2552, 853, 2084, 2508, 1832, 3336, 228,
	2518, 700, 1156, 2643, 3374, 972, 972, 741, 3420, 1788,
	2526, 972, 972, 1800, 3390, 1069, 972, 972, 3335, 972,
	2525, 1400, 3377, 972, 1585, 1400, 1088, 3389, 1088, 2510,
	2474, 2476, 3099, 3100, 972, 3392, 854, 597, 3397, 4057,
	3408, 3398, 2509, 569, 2475, 3888, 3857, 3854, 3819, 3732,
	972, 1788, 3375, 1445, 3403, 3365, 1583, 1584, 3438, 2329,
	2329, 2329, 2329, 2329, 2329, 2329, 2329, 2329, 2329, 2329,
	2329, 2329, 2329, 2329, 2329, 2329, 2329, 2329, 3421, 2329,
	3437, 3409, 3410, 3426, 3418, 1586, 3431, 3272, 3414, 3411,
	3417, 3415, 2593, 3450, 1090, 2347, 1794, 1827, 1781, 3922,
	3689, 2913, 4083, 1286, 3923, 3856, 3456, 3446, 2812, 2813,
	1092, 1583, 1584, 2441, 2442, 1585, 2254, 2944, 1092, 2439,
	2440, 1468, 1156, 4038, 1156, 3277, 2441, 1467, 935, 2439,
	2287, 1092, 1528, 3753, 3491, 1527, 3720, 3565, 3561, 3560,
	3452, 1156, 3380, 3276, 3182, 3005, 1669, 1668, 4071, 4043,
	2303, 2299, 3810, 3716, 3674, 3672, 3422, 3594, 3502, 2865,
	972, 3419, 3400, 3360, 3358, 3476, 3306, 3309, 3301, 3311,
	3082, 3056, 3055, 2676, 2660, 2659, 2603, 3530, 3494, 3531,
	3506, 3507, 2578, 2554, 2420, 2419, 2219, 1156, 2083, 2080,
	2079, 2891, 3542, 3543, 1156, 2078, 2077, 1996, 1995, 1994,
	1977, 3540, 3488, 3489, 3497, 1957, 2904, 1956, 3493, 1952,
	1794, 3490, 1951, 1950, 1797, 1948, 2901, 1276, 1276, 3541,
	3498, 3508, 2297, 1947, 2919, 1543, 3341, 1542, 1488, 3487,
	1387, 1386, 1385, 3566, 1384, 3567, 161, 3492, 3529, 2301,
	2302, 2300, 1971, 1156, 3483, 3577, 1383, 1382, 1276, 1381,
	3559, 1379, 3575, 1374, 1373, 1264, 3580, 3568, 1797, 1797,
	1372, 1371, 1370, 1331, 1330, 1090, 1329, 3545, 1328, 1327,
	1326, 3554, 1320, 1090, 972, 1314, 1312, 3574, 3553, 3576,
	3555, 1311, 1147, 1146, 3556, 1145, 1090, 1797, 1797, 1144,
	1156, 3628, 3612, 1115, 1114, 3631, 2296, 2298, 3402, 3606,
	1050, 1833, 972, 972, 972, 1103, 3611, 874, 3581, 860,
	3694, 3615, 3523, 3596, 1537, 82, 1322, 687, 1797, 3601,
	1156, 3599, 76, 1922, 3305, 972, 3613, 833, 972, 972,
	3918, 1308, 3840, 1113, 695, 1788, 3903, 2960, 972, 2529,
	622, 1800, 2064, 1489, 3620, 2066, 972, 972, 2896, 2388,
	3880, 3460, 2904, 2774, 3806, 3653, 2257, 1673, 2853, 78,
	956, 1156, 3634, 235, 1002, 235, 235, 1252, 3640, 235,
	235, 1267, 3586, 3585, 1156, 3510, 3292, 2633, 3645, 1788,
	1788, 3583, 972, 3582, 235, 1785, 1288, 1787, 922, 972,
	1159, 1843, 3656, 962, 1859, 1852, 2421, 972, 2307, 1800,
	979, 3650, 976, 2325, 1789, 1791, 3589, 972, 1788, 1788,
	972, 1317, 978, 2740, 2741, 977, 3600, 1790, 972, 1692,
	3676, 3667, 3668, 3669, 1335, 1156, 1267, 3345, 975, 235,
	235, 3671, 1252, 1276, 1276, 3662, 3619, 1784, 3379, 1788,
	3378, 3675, 235, 2562, 3715, 2597, 1366, 2325, 835, 1847,
	1376, 2213, 2241, 2763, 1666, 3677, 3699, 937, 3698, 958,
	2238, 1108, 235, 235, 235, 947, 1252, 235, 1267, 1156,
	3725, 2879, 1276, 3747, 3069, 3738, 3271, 3717, 622, 3713,
	235, 235, 3616, 2126, 703, 2809, 2244, 3752, 3038, 1255,
	972, 972, 1154, 1101, 3727, 3730, 3764, 3751, 3736, 3731,
	3405, 3406, 3407, 755, 972, 972, 3722, 3783, 3784, 3728,
	2330, 3746, 2323, 1797, 2319, 2587, 3760, 1553, 1645, 2598,
	3762, 972, 1800, 1142, 940, 3758, 3761, 2211, 1657, 2743,
	3759, 1087, 2136, 2835, 2836, 2837, 3767, 3781, 1794, 3766,
	3076, 3615, 2899, 2414, 3926, 972, 3190, 1087, 972, 1961,
	1066, 1065, 1064, 3909, 1261, 3906, 3412, 3036, 3823, 1836,
	2433, 1635, 3043, 3167, 3768, 952, 1260, 972, 3812, 2864,
	3107, 235, 935, 1333, 3787, 3794, 935, 627, 3795, 3796,
	3183, 964, 1634, 2536, 3829, 2535, 2325, 3811, 235, 3816,
	1129, 1240, 1128, 1127, 2942, 1240, 1794, 4091, 3302, 205,
	2711, 3798, 1574, 1566, 202, 972, 972, 3828, 204, 203,
	3843, 3590, 3988, 3320, 3028, 972, 3804, 3705, 972, 20,
	1276, 19, 18, 103, 3836, 39, 17, 1797, 117, 133,
	1276, 1276, 3858, 132, 1788, 3860, 131, 130, 1264, 129,
	3838, 1086, 135, 128, 127, 3871, 122, 1276, 3751, 126,
	3850, 3855, 3851, 3852, 125, 124, 123, 1086, 121, 120,
	972, 972, 3863, 119, 3862, 3869, 3870, 118, 116, 3876,
	115, 3877, 3868, 114, 3867, 113, 112, 111, 110, 109,
	108, 107, 3874, 1088, 106, 3898, 105, 3875, 104, 618,
	3900, 615, 55, 972, 972, 54, 972, 102, 3885, 1088,
	101, 16, 37, 3899, 14, 3908, 3911, 59, 60, 13,
	3274, 32, 3924, 81, 93, 92, 33, 90, 3931, 1794,
	89, 31, 2329, 15, 87, 86, 30, 28, 3913, 11,
	9, 8, 34, 1753, 3884, 3944, 12, 5, 3928, 166,
	3917, 3943, 972, 972, 972, 165, 168, 3945, 1788, 164,
	167, 3707, 3708, 3935, 80, 3938, 163, 3940, 162, 79,
	26, 1445, 3972, 10, 158, 972, 2329, 3912, 3977, 3748,
	3916, 3370, 74, 3842, 3721, 3959, 3958, 3723, 3724, 3956,
	3957, 160, 159, 157, 575, 156, 155, 75, 3975, 72,
	154, 153, 73, 3997, 152, 24, 6, 3999, 58, 7,
	3635, 3116, 96, 97, 35, 235, 4001, 235, 4006, 70,
	69, 235, 68, 972, 4007, 23, 57, 3998, 4011, 22,
	195, 194, 193, 192, 1288, 1252, 235, 191, 235, 4003,
	190, 185, 2599, 235, 1288, 591, 184, 189, 235, 1288,
	4017, 4018, 4030, 187, 622, 4021, 4027, 4023, 4019, 186,
	188, 4029, 183, 197, 3908, 4033, 196, 3911, 199, 4031,
	182, 972, 180, 972, 176, 4040, 4048, 4045, 4051, 4046,
	4039, 4037, 4052, 175, 4044, 179, 181, 4050, 4047, 178,
	4049, 177, 4004, 4005, 174, 198, 3928, 4008, 150, 151,
	65, 149, 148, 147, 146, 3932, 4066, 4064, 3933, 145,
	144, 143, 64, 21, 2, 2329, 1, 0, 0, 0,
	4075, 4073, 0, 4072, 4078, 0, 0, 0, 972, 972,
	0, 0, 0, 4081, 0, 4077, 972, 1731, 972, 972,
	4087, 0, 0, 3147, 3148, 4094, 3837, 4095, 0, 0,
	0, 0, 0, 0, 0, 0, 4097, 0, 0, 4096,
	0, 0, 4098, 0, 0, 1797, 0, 0, 4101, 0,
	0, 4106, 4105, 0, 0, 4104, 0, 4110, 4103, 4109,
	4108, 4113, 972, 0, 0, 0, 3729, 1445, 0, 4118,
	0, 0, 0, 0, 4114, 0, 0, 4116, 0, 2329,
	2329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4088, 4089, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 1797, 0, 0, 0, 0, 0, 0,
	0, 3210, 3211, 3212, 3213, 3214, 3215, 3216, 3217, 3218,
	3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228,
	0, 3232, 0, 0, 0, 0, 4115, 0, 0, 1240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 235, 0, 0, 0, 235, 0,
	3496, 0, 0, 0, 0, 0, 1788, 0, 0, 0,
	2812, 2813, 0, 2830, 2831, 2832, 235, 3504, 235, 0,
	235, 0, 935, 0, 575, 0, 0, 0, 1240, 0,
	0, 921, 0, 0, 0, 0, 0, 0, 1997, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 3987, 0,
	0, 0, 0, 0, 1788, 634, 1797, 1583, 1584, 0,
	1616, 1617, 1618, 1626, 1627, 1628, 0, 0, 1087, 2827,
	0, 0, 0, 0, 0, 0, 0, 622, 1619, 1614,
	0, 755, 0, 1087, 0, 0, 1586, 0, 0, 0,
	0, 0, 0, 1632, 2812, 2813, 0, 2830, 2831, 2832,
	0, 0, 0, 0, 0, 0, 235, 0, 1252, 235,
	0, 0, 0, 1087, 0, 3442, 1585, 0, 0, 0,
	0, 0, 622, 0, 0, 0, 1605, 0, 0, 235,
	0, 0, 0, 0, 1602, 0, 0, 0, 0, 235,
	235, 0, 235, 0, 235, 0, 235, 0, 235, 0,
	0, 0, 2818, 0, 0, 0, 1154, 0, 0, 639,
	0, 0, 0, 2827, 1240, 0, 0, 0, 2092, 0,
	0, 2093, 0, 2094, 0, 0, 0, 1788, 1086, 0,
	0, 0, 0, 0, 2834, 235, 3651, 0, 0, 0,
	0, 0, 0, 1086, 0, 0, 0, 0, 0, 1608,
	1609, 1610, 1611, 0, 0, 2833, 606, 0, 0, 1591,
	622, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1088, 0, 0, 1086, 0, 0, 0, 3651, 0, 0,
	0, 0, 646, 0, 0, 1088, 0, 0, 1623, 0,
	2150, 1633, 0, 2828, 0, 0, 2818, 1613, 1615, 0,
	0, 0, 0, 0, 0, 0, 641, 0, 1583, 1584,
	0, 0, 1629, 0, 1630, 1088, 0, 0, 0, 0,
	0, 1600, 1601, 0, 0, 0, 0, 0, 0, 0,
	1614, 0, 0, 3524, 0, 0, 0, 1586, 0, 1621,
	0, 2150, 0, 0, 0, 0, 0, 0, 0, 2833,
	1606, 0, 0, 0, 0, 1087, 0, 0, 0, 0,
	0, 0, 3520, 0, 0, 0, 3513, 1585, 0, 0,
	0, 0, 0, 0, 0, 1631, 0, 0, 0, 0,
	0, 0, 3511, 0, 0, 0, 0, 2828, 3515, 0,
	0, 0, 1620, 0, 66, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2829, 0, 3521, 0,
	67, 0, 0, 636, 0, 0, 0, 575, 0, 0,
	0, 0, 0, 71, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 640, 0, 0, 0,
	0, 575, 0, 1612, 0, 0, 0, 3514, 235, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	1591, 0, 235, 1607, 645, 1086, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 0, 638, 0, 0, 0, 0, 1624, 0,
	0, 0, 83, 0, 0, 0, 0, 0, 1613, 1615,
	2829, 0, 0, 0, 0, 0, 98, 1088, 0, 0,
	1240, 84, 95, 0, 0, 921, 0, 0, 0, 921,
	635, 0, 591, 2824, 2825, 2826, 0, 0, 0, 0,
	2823, 2821, 2822, 2814, 2815, 2816, 2817, 2819, 2820, 0,
	0, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 1606, 0, 0, 0, 0, 0, 0, 0, 647,
	85, 0, 0, 0, 0, 1290, 2458, 1296, 0, 1302,
	637, 0, 0, 3516, 235, 0, 1622, 3517, 0, 0,
	1597, 1598, 1604, 1625, 1603, 1599, 235, 1596, 1594, 1595,
	1587, 1588, 1589, 1590, 1592, 1593, 0, 1240, 0, 235,
	2787, 0, 0, 0, 2788, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 2824, 2825, 2826,
	0, 0, 3519, 0, 2823, 2821, 2822, 2814, 2815, 2816,
	2817, 2819, 2820, 0, 235, 2544, 3522, 1087, 1087, 0,
	1416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3659, 0, 0, 1434, 0, 1439,
	1288, 0, 0, 235, 1607, 0, 1240, 0, 0, 1448,
	235, 1453, 0, 0, 0, 0, 2582, 0, 0, 88,
	0, 0, 0, 0, 0, 0, 2458, 0, 575, 0,
	0, 2602, 1240, 0, 0, 0, 0, 235, 3685, 0,
	235, 0, 235, 0, 235, 0, 0, 0, 0, 1252,
	0, 235, 235, 0, 1267, 1267, 0, 0, 169, 91,
	0, 94, 0, 0, 2626, 755, 0, 2458, 2458, 1509,
	0, 0, 1515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 3518, 206, 0, 1086, 1086, 0,
	0, 0, 0, 750, 0, 0, 0, 134, 235, 1252,
	235, 0, 0, 1288, 0, 1288, 0, 0, 1252, 0,
	1252, 0, 1252, 0, 0, 0, 0, 0, 0, 3525,
	0, 0, 0, 208, 0, 0, 0, 1240, 0, 1088,
	1088, 1587, 1588, 1589, 1590, 1592, 1593, 235, 235, 235,
	235, 1252, 235, 0, 235, 0, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 207,
	0, 0, 0, 0, 0, 235, 0, 3803, 0, 200,
	0, 0, 1240, 235, 0, 1087, 0, 201, 0, 0,
	0, 0, 0, 1654, 0, 0, 0, 0, 0, 1667,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 1583, 1584, 0, 1616, 1617,
	1618, 1626, 1627, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1614, 0, 0,
	0, 0, 0, 0, 1586, 0, 0, 0, 0, 1583,
	1584, 1632, 0, 0, 0, 0, 0, 0, 1583, 1584,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1614, 1288, 0, 1585, 0, 0, 0, 1586, 0,
	1614, 0, 0, 0, 1605, 2812, 2813, 1586, 2830, 2831,
	2832, 0, 1602, 0, 0, 1086, 0, 0, 0, 0,
	0, 0, 1725, 1725, 1725, 0, 3156, 0, 1585, 1583,
	1584, 0, 0, 0, 0, 0, 0, 1585, 1605, 0,
	0, 0, 0, 0, 0, 0, 1602, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 0, 1088, 1586, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2827, 0, 1087, 1608, 1609, 1610,
	1611, 0, 0, 0, 1087, 0, 0, 1591, 1585, 0,
	0, 3150, 0, 0, 0, 921, 0, 1087, 1605, 0,
	0, 0, 0, 0, 0, 0, 1602, 0, 0, 235,
	0, 1608, 1609, 1610, 1611, 0, 1623, 0, 0, 1633,
	0, 1591, 0, 0, 235, 1613, 1615, 0, 0, 575,
	1591, 0, 0, 0, 575, 0, 0, 575, 0, 0,
	575, 575, 0, 0, 0, 0, 575, 0, 0, 1600,
	1601, 3145, 0, 0, 235, 0, 0, 2818, 0, 1613,
	1615, 0, 0, 0, 0, 0, 1288, 1621, 1613, 1615,
	0, 1608, 1609, 1610, 1611, 0, 0, 0, 1606, 0,
	0, 1591, 0, 1600, 1601, 1288, 1086, 0, 0, 0,
	0, 0, 0, 0, 1086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2458, 2458, 235, 1086, 1267, 0,
	2833, 2458, 1606, 0, 2946, 0, 0, 0, 0, 1613,
	1615, 1606, 2458, 2946, 0, 2458, 2946, 2946, 1088, 0,
	0, 0, 0, 0, 0, 0, 1088, 0, 0, 235,
	235, 1267, 235, 1600, 1601, 0, 0, 0, 2828, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1267, 235, 1252, 0, 0, 0, 0, 0,
	0, 1612, 1606, 0, 0, 0, 2458, 0, 3006, 2458,
	1267, 0, 0, 2458, 2458, 1267, 0, 0, 0, 0,
	0, 1607, 0, 2812, 2813, 0, 2830, 2831, 2832, 0,
	0, 0, 0, 0, 0, 1612, 0, 0, 0, 0,
	235, 3032, 0, 0, 3034, 2458, 1624, 0, 235, 0,
	0, 0, 235, 0, 1267, 1607, 0, 0, 0, 0,
	0, 0, 0, 0, 1607, 0, 0, 1240, 0, 0,
	0, 2582, 0, 0, 1252, 0, 235, 0, 0, 2458,
	0, 575, 0, 0, 0, 0, 0, 0, 2458, 0,
	0, 2829, 2827, 0, 0, 1612, 0, 235, 235, 1240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1240, 1607, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 2582, 0, 0, 2582, 0,
	0, 0, 1240, 0, 1622, 0, 0, 0, 1597, 1598,
	1604, 1625, 1603, 1599, 935, 1596, 1594, 1595, 1587, 1588,
	1589, 1590, 1592, 1593, 0, 0, 0, 0, 935, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3125, 0,
	0, 1252, 235, 0, 235, 2818, 1603, 1599, 0, 1596,
	1594, 1595, 1587, 1588, 1589, 1590, 1592, 1593, 0, 1594,
	1595, 1587, 1588, 1589, 1590, 1592, 1593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 2824, 2825,
	2826, 0, 0, 0, 0, 2823, 2821, 2822, 2814, 2815,
	2816, 2817, 2819, 2820, 0, 0, 0, 0, 2833, 1240,
	0, 0, 0, 0, 0, 0, 1603, 1599, 0, 1596,
	1594, 1595, 1587, 1588, 1589, 1590, 1592, 1593, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2125,
	1240, 2129, 0, 3188, 0, 0, 2828, 0, 2143, 0,
	0, 0, 0, 0, 0, 2152, 2153, 2154, 2155, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	0, 2192, 0, 2194, 2195, 2196, 2197, 0, 0, 0,
	66, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2221, 67, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1654, 0, 0, 71,
	2236, 0, 0, 0, 0, 0, 0, 0, 235, 235,
	0, 1583, 1584, 0, 0, 0, 2266, 2269, 2272, 2275,
	0, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 0, 2829,
	575, 575, 0, 1614, 77, 0, 0, 0, 0, 0,
	1586, 0, 0, 0, 0, 0, 0, 1240, 0, 2321,
	1240, 2332, 2334, 2339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1288, 0, 0, 0, 0, 83, 0,
	1585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 98, 0, 0, 0, 0, 84, 95, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1583, 1584,
	0, 0, 0, 622, 1626, 1627, 1628, 0, 0, 0,
	0, 1240, 0, 0, 0, 0, 0, 0, 0, 0,
	1614, 0, 0, 0, 0, 0, 85, 1586, 1240, 0,
	0, 0, 235, 0, 1632, 0, 2824, 2825, 2826, 0,
	0, 0, 0, 2823, 2821, 2822, 2814, 2815, 2816, 2817,
	2819, 2820, 0, 1591, 0, 0, 0, 1585, 0, 0,
	0, 235, 0, 0, 0, 0, 0, 1605, 0, 0,
	235, 0, 0, 0, 0, 1602, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	0, 1613, 1615, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2458, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2626, 2626, 0, 2411, 0, 0, 755, 755,
	2458, 0, 0, 2582, 2582, 0, 0, 755, 2458, 0,
	1608, 1609, 1610, 1611, 1606, 88, 235, 0, 0, 0,
	1591, 0, 0, 0, 0, 0, 0, 0, 1240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2547,
	2548, 0, 2550, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 1633, 0, 169, 91, 0, 94, 1613, 1615,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 1600, 1601, 0, 3461, 0, 0, 0, 750,
	0, 0, 0, 134, 0, 0, 0, 0, 0, 0,
	1621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1606, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 2812, 2813, 0, 2830, 2831, 2832, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3155, 136, 0, 0, 0, 235, 0, 0,
	0, 0, 0, 1288, 0, 235, 0, 173, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	2675, 0, 0, 201, 0, 2458, 2458, 2458, 0, 0,
	2827, 0, 0, 0, 0, 0, 0, 0, 1288, 0,
	0, 0, 0, 0, 1612, 172, 2458, 0, 2946, 0,
	0, 1288, 1288, 235, 1267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1607, 1267, 235, 1267, 235, 0,
	1636, 1637, 0, 0, 0, 0, 0, 0, 2458, 0,
	2458, 235, 0, 0, 1240, 0, 0, 0, 0, 1624,
	0, 0, 0, 1595, 1587, 1588, 1589, 1590, 1592, 1593,
	0, 2458, 0, 0, 0, 3592, 1240, 0, 0, 0,
	0, 0, 0, 2818, 235, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 2723, 2724, 0, 0, 0,
	0, 2730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2744, 2745, 0, 0, 1288, 0, 2236, 0, 0, 0,
	0, 0, 0, 0, 0, 2752, 2833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1622, 0, 0,
	981, 2766, 0, 0, 1625, 1603, 1599, 0, 1596, 1594,
	1595, 1587, 1588, 1589, 1590, 1592, 1593, 0, 2778, 0,
	0, 0, 0, 0, 2828, 0, 0, 0, 0, 0,
	142, 0, 0, 0, 0, 0, 0, 66, 0, 43,
	42, 0, 0, 236, 236, 236, 1240, 0, 1240, 0,
	0, 0, 0, 67, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1240, 71, 2458, 236, 2946,
	0, 0, 3679, 0, 0, 0, 61, 0, 0, 0,
	235, 0, 0, 45, 0, 139, 0, 0, 0, 0,
	0, 0, 236, 2339, 2339, 2339, 0, 1583, 1584, 44,
	0, 77, 0, 0, 0, 0, 622, 0, 1725, 0,
	0, 1240, 0, 0, 0, 0, 2869, 0, 1240, 1614,
	0, 0, 0, 47, 62, 0, 1586, 0, 0, 0,
	48, 0, 0, 0, 0, 83, 0, 2829, 0, 140,
	0, 0, 0, 0, 0, 3679, 0, 46, 0, 98,
	0, 0, 0, 2458, 84, 95, 1585, 0, 0, 0,
	0, 0, 0, 3755, 0, 0, 1605, 1240, 0, 0,
	0, 0, 0, 0, 1602, 1288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 0, 921, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	235, 921, 0, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1240, 0, 0, 0, 0, 3144,
	0, 0, 0, 3188, 0, 0, 0, 0, 0, 2963,
	0, 0, 0, 0, 0, 0, 0, 0, 3679, 1608,
	1609, 1610, 1611, 0, 1240, 0, 0, 0, 0, 1591,
	0, 0, 0, 0, 2824, 2825, 2826, 0, 0, 0,
	0, 2823, 2821, 2822, 2814, 2815, 2816, 2817, 2819, 2820,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 1240, 0, 1613, 1615, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1240, 0,
	0, 3592, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1600, 1601, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 88, 2946, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 50, 935, 0, 0, 0, 0, 0,
	1606, 0, 0, 0, 0, 0, 0, 0, 1288, 1240,
	1288, 0, 0, 0, 0, 63, 0, 0, 0, 0,
	53, 169, 91, 0, 94, 0, 0, 0, 51, 0,
	0, 0, 141, 0, 0, 3894, 0, 0, 0, 52,
	0, 0, 1288, 0, 0, 235, 0, 0, 206, 0,
	0, 0, 0, 1240, 0, 0, 56, 0, 0, 0,
	134, 0, 235, 2458, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 0,
	0, 0, 0, 1612, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3188, 0, 0, 0, 0,
	136, 0, 0, 1607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 207, 2143, 0, 0, 0, 0, 0, 3142,
	3143, 0, 200, 3146, 0, 0, 0, 3149, 0, 0,
	201, 0, 0, 0, 0, 0, 3153, 2458, 0, 0,
	0, 0, 0, 0, 0, 3160, 0, 0, 2869, 0,
	0, 0, 172, 0, 0, 3, 0, 0, 3679, 0,
	0, 0, 0, 3172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3195, 3196, 0, 3197, 3198, 3199, 1288,
	0, 2458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3205, 0, 0, 0, 3207, 0,
	0, 0, 0, 0, 1603, 1599, 0, 1596, 1594, 1595,
	1587, 1588, 1589, 1590, 1592, 1593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3235,
	3236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3247, 935, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3256, 66, 0, 0, 236, 1160, 236, 236,
	0, 1160, 236, 236, 0, 1160, 0, 0, 2626, 67,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	2626, 0, 71, 0, 0, 0, 0, 0, 0, 1583,
	1584, 0, 0, 0, 0, 0, 0, 1160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3286,
	0, 1614, 0, 0, 0, 0, 0, 77, 1586, 0,
	0, 1160, 236, 236, 0, 3295, 3298, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1585, 0,
	0, 83, 3319, 0, 0, 236, 236, 236, 1605, 0,
	236, 0, 1160, 0, 0, 98, 1602, 0, 1160, 0,
	84, 95, 1160, 236, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1583, 1584, 0, 1616, 1617, 1618, 1626, 1627, 1628, 0,
	0, 2729, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 1619, 1614, 0, 0, 0, 0, 0, 0, 1586,
	0, 1608, 1609, 1610, 1611, 1160, 1632, 0, 0, 0,
	0, 1591, 0, 0, 0, 0, 0, 0, 1725, 0,
	0, 0, 0, 0, 0, 0, 0, 3399, 0, 1585,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 1605,
	0, 0, 0, 0, 0, 0, 0, 1602, 0, 1613,
	1615, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1600, 1601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3439, 3440, 0, 0, 0, 0, 3444, 3445,
	0, 0, 1606, 3448, 3449, 0, 0, 0, 88, 0,
	3453, 0, 1608, 1609, 1610, 1611, 0, 0, 0, 0,
	0, 3457, 1591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3462, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 91, 0,
	94, 1623, 0, 0, 1633, 0, 968, 0, 0, 0,
	1613, 1615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 1629, 0, 1630, 0, 0,
	0, 0, 750, 0, 1600, 1601, 134, 0, 0, 0,
	0, 0, 0, 0, 0, 1612, 0, 0, 0, 234,
	234, 234, 1621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 1606, 0, 1607, 0, 0, 0, 0,
	0, 0, 0, 0, 660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 3298, 660, 0,
	173, 0, 0, 0, 0, 1620, 0, 0, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	0, 0, 0, 0, 236, 0, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 1160, 0, 0, 0, 236,
	236, 236, 0, 0, 0, 0, 236, 0, 1428, 0,
	0, 236, 0, 0, 0, 0, 1612, 0, 0, 0,
	0, 0, 0, 1160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1607, 0, 0, 0,
	0, 0, 0, 0, 1160, 0, 1603, 1599, 0, 1596,
	1594, 1595, 1587, 1588, 1589, 1590, 1592, 1593, 0, 0,
	0, 1624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3298, 0, 0, 0, 1089, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3646,
	3647, 3648, 0, 0, 0, 0, 0, 1082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2143, 0, 0, 3657, 3658, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3666, 0, 0, 0, 0, 0, 1622,
	230, 230, 571, 1597, 1598, 1604, 1625, 1603, 1599, 0,
	1596, 1594, 1595, 1587, 1588, 1589, 1590, 1592, 1593, 0,
	0, 0, 0, 2232, 0, 0, 0, 2233, 0, 0,
	1160, 1160, 236, 0, 0, 0, 3298, 0, 0, 0,
	1160, 0, 0, 0, 3704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3711, 0, 0, 921, 0, 0,
	0, 0, 0, 0, 0, 3718, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 236, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 236, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3298, 3298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1583, 1584, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1160, 0, 1160,
	0, 1160, 1614, 0, 0, 0, 0, 0, 0, 1586,
	0, 0, 3815, 0, 0, 3818, 0, 1160, 1160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1160, 236,
	0, 0, 236, 0, 3298, 0, 0, 0, 0, 1585,
	0, 1160, 1160, 1160, 0, 0, 0, 0, 0, 1605,
	0, 0, 236, 0, 0, 0, 0, 1602, 0, 0,
	0, 0, 236, 236, 0, 236, 0, 236, 0, 236,
	0, 236, 1583, 1584, 0, 0, 0, 0, 0, 0,
	0, 0, 3298, 0, 0, 3298, 0, 0, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 0,
	0, 1586, 2722, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1608, 1609, 1610, 1611, 0, 0, 2143, 0,
	0, 1585, 1591, 0, 0, 0, 0, 0, 0, 0,
	0, 1605, 0, 0, 0, 0, 0, 0, 0, 1602,
	0, 0, 0, 0, 0, 0, 1160, 0, 0, 0,
	0, 921, 0, 0, 0, 0, 0, 0, 0, 0,
	1613, 1615, 234, 0, 234, 234, 0, 0, 234, 234,
	0, 0, 0, 957, 100, 0, 0, 0, 0, 0,
	0, 0, 0, 660, 1600, 1601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3955,
	3955, 3955, 0, 0, 1608, 1609, 1610, 1611, 0, 0,
	0, 0, 0, 1606, 1591, 0, 0, 0, 0, 0,
	0, 0, 3976, 0, 0, 0, 0, 0, 234, 234,
	0, 0, 0, 1160, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 66, 0, 0, 0, 0, 0,
	0, 0, 1613, 1615, 0, 0, 0, 0, 100, 0,
	67, 234, 234, 234, 0, 0, 234, 0, 0, 0,
	3955, 0, 0, 71, 0, 0, 1600, 1601, 0, 234,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1160, 0, 0, 1606, 1612, 0, 77, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3298, 0,
	3298, 0, 0, 0, 0, 236, 1607, 0, 1160, 0,
	0, 0, 0, 0, 0, 896, 0, 0, 0, 0,
	0, 0, 83, 0, 0, 0, 916, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 98, 0, 0, 0,
	0, 84, 95, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 3955, 4082, 0, 0, 0,
	0, 0, 1076, 4086, 0, 0, 0, 234, 0, 0,
	0, 0, 0, 1160, 0, 0, 0, 0, 1612, 0,
	0, 0, 0, 1151, 0, 0, 0, 0, 0, 1259,
	85, 0, 0, 0, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 1160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1603, 1599, 236,
	1596, 1594, 1595, 1587, 1588, 1589, 1590, 1592, 1593, 0,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 1160, 0,
	0, 0, 1368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1160, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 1391, 1391, 1391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1432, 1433, 0, 0, 0, 0, 236, 733, 0, 88,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 1603,
	1599, 0, 1596, 1594, 1595, 1587, 1588, 1589, 1590, 1592,
	1593, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 236, 0, 236, 0, 236, 169, 91,
	0, 94, 0, 0, 236, 236, 0, 0, 0, 1160,
	1160, 0, 1160, 0, 0, 718, 0, 0, 0, 0,
	0, 0, 0, 0, 1160, 206, 719, 0, 0, 0,
	0, 0, 0, 750, 1747, 236, 1089, 134, 0, 0,
	234, 1536, 0, 0, 720, 0, 0, 0, 0, 0,
	0, 236, 0, 236, 0, 234, 1747, 234, 0, 0,
	0, 738, 660, 208, 0, 0, 0, 660, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 721,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	236, 236, 236, 236, 0, 236, 0, 236, 0, 0,
	0, 173, 722, 0, 0, 0, 0, 0, 0, 207,
	0, 1004, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 0, 723, 0, 0, 724, 0, 201, 236, 0,
	0, 0, 0, 0, 646, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1426,
	0, 0, 0, 0, 0, 0, 0, 0, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 660, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 100, 0, 100, 0, 100, 0, 0, 0,
	0, 1763, 0, 744, 0, 727, 0, 0, 0, 234,
	0, 0, 0, 234, 0, 0, 1772, 234, 1259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 645, 234, 0, 234,
	1093, 0, 0, 728, 0, 0, 0, 742, 743, 740,
	0, 0, 0, 0, 0, 735, 0, 0, 729, 0,
	0, 0, 0, 1160, 0, 0, 0, 100, 0, 0,
	0, 916, 100, 100, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 100, 0, 100, 0, 0, 0,
	0, 730, 736, 0, 0, 1160, 100, 0, 100, 0,
	731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1160, 0, 0, 732, 0, 0, 0, 0, 739, 0,
	0, 0, 0, 0, 0, 809, 0, 850, 1160, 0,
	0, 647, 0, 0, 0, 234, 0, 0, 234, 0,
	0, 0, 734, 0, 0, 0, 0, 0, 0, 0,
	816, 0, 0, 0, 100, 0, 0, 0, 234, 236,
	0, 0, 0, 0, 0, 0, 829, 814, 660, 234,
	0, 234, 0, 234, 0, 234, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 815, 236, 236, 0, 236, 818, 0, 0, 0,
	0, 858, 236, 0, 0, 0, 0, 0, 0, 826,
	827, 0, 0, 0, 234, 843, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 1160, 0, 0, 0, 851,
	820, 0, 0, 0, 1160, 0, 0, 0, 0, 1160,
	0, 0, 896, 0, 0, 0, 0, 0, 1160, 0,
	1959, 0, 1160, 0, 1966, 821, 1160, 0, 0, 0,
	0, 0, 1648, 236, 849, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 1160, 236, 1368, 0, 1985, 1653,
	1985, 0, 0, 1659, 0, 1160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	822, 0, 0, 0, 0, 0, 0, 0, 813, 0,
	0, 0, 0, 0, 0, 0, 1259, 0, 0, 0,
	236, 236, 0, 0, 0, 0, 823, 824, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1160,
	1160, 0, 0, 831, 830, 0, 0, 236, 0, 0,
	0, 825, 0, 0, 0, 840, 0, 0, 0, 0,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	855, 0, 0, 0, 0, 0, 1966, 0, 0, 2042,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	852, 0, 0, 1160, 0, 236, 1160, 236, 0, 2059,
	0, 1745, 0, 1748, 0, 100, 0, 0, 0, 0,
	2069, 1089, 2071, 0, 2073, 0, 2075, 0, 2076, 0,
	0, 0, 0, 0, 0, 0, 0, 1089, 0, 0,
	236, 0, 0, 0, 819, 0, 0, 857, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 817, 0, 0, 2097, 847, 848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1160, 1093, 0,
	0, 0, 1093, 0, 0, 0, 1093, 0, 0, 0,
	0, 0, 0, 0, 1160, 845, 0, 0, 0, 0,
	240, 0, 856, 841, 0, 834, 832, 0, 837, 0,
	0, 0, 0, 0, 838, 0, 0, 811, 1093, 853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 812, 0, 0, 0, 0,
	0, 0, 1093, 0, 0, 0, 839, 0, 0, 0,
	0, 836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 854, 0, 234, 0, 0, 0, 0, 652, 842,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 1093, 0, 0, 0, 0, 234, 1093,
	844, 0, 652, 1093, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 1093, 0, 0,
	0, 0, 846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 660, 1160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 1093, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 234,
	0, 234, 2395, 234, 0, 0, 0, 0, 0, 0,
	234, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1160, 0, 0, 234, 0, 234,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	916, 0, 916, 236, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 1160, 0, 234, 234, 234, 234,
	0, 234, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1160, 1160, 1160,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 234, 1160, 0, 0, 0, 0, 0, 236,
	1160, 0, 0, 0, 1259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1966, 0, 0, 0, 0, 0, 0,
	2573, 0, 0, 0, 0, 0, 0, 0, 0, 896,
	0, 0, 896, 896, 0, 0, 0, 0, 0, 1093,
	0, 1093, 0, 0, 0, 0, 0, 2604, 0, 0,
	1391, 0, 1391, 0, 1391, 0, 1093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1093, 0, 0, 2210, 0, 0,
	0, 0, 2654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1160, 916, 1160, 1093, 0, 0, 2662, 0,
	2665, 0, 1653, 0, 0, 0, 1653, 0, 0, 0,
	0, 1160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2687, 1259, 2689,
	1259, 0, 2692, 0, 0, 0, 236, 0, 1089, 0,
	0, 0, 0, 0, 0, 0, 0, 1160, 0, 236,
	0, 236, 0, 1089, 1160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 1391, 0, 0, 1076, 0,
	0, 0, 0, 2720, 0, 0, 0, 1160, 1160, 0,
	0, 0, 0, 1747, 1748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 1160, 236, 0, 0, 0, 1160, 0,
	0, 0, 0, 0, 0, 100, 0, 0, 0, 0,
	0, 1093, 1093, 0, 0, 0, 0, 0, 0, 0,
	0, 1093, 0, 0, 0, 234, 0, 1157, 0, 0,
	0, 1157, 0, 0, 0, 1277, 0, 0, 0, 0,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 234,
	0, 234, 0, 0, 0, 0, 0, 1277, 1747, 0,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 1277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 100, 0, 0, 0, 0, 0, 0,
	0, 1160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1160, 0, 0, 0, 0, 660,
	0, 0, 1277, 236, 100, 0, 0, 234, 1277, 0,
	0, 234, 1277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1277, 0, 1093, 0,
	1093, 0, 1093, 0, 100, 1089, 973, 100, 0, 100,
	0, 0, 0, 0, 0, 1160, 0, 0, 1093, 1093,
	0, 0, 0, 1160, 1160, 0, 234, 234, 0, 1093,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1093, 1093, 1093, 1277, 0, 0, 100, 0,
	0, 100, 0, 234, 0, 0, 0, 0, 0, 1160,
	0, 0, 1160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 100, 0, 0, 0, 0, 0,
	0, 0, 236, 236, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 234, 0, 0, 2937, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 2977,
	2979, 0, 2573, 0, 0, 100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 1801, 1093, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	1160, 0, 0, 0, 0, 0, 0, 0, 3044, 0,
	1160, 1160, 3048, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1160, 0, 0,
	0, 0, 0, 0, 1093, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1259, 1259, 0,
	0, 0, 0, 0, 0, 0, 1653, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 1089, 1089, 0,
	0, 0, 0, 0, 3103, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1093, 0, 0, 0,
	0, 0, 236, 1093, 0, 0, 0, 0, 0, 0,
	0, 0, 1093, 0, 0, 1157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 652, 0, 0, 1093,
	0, 652, 3128, 0, 1259, 0, 0, 0, 0, 0,
	0, 0, 0, 1277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1583, 1584, 0, 1616, 1617, 1618, 1626,
	1627, 1628, 0, 0, 1157, 0, 0, 3140, 0, 0,
	0, 0, 0, 0, 1619, 1614, 0, 0, 0, 0,
	0, 0, 1586, 0, 0, 0, 0, 0, 0, 1632,
	0, 0, 0, 0, 1093, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1076, 0, 0, 0, 0,
	0, 234, 1585, 0, 0, 0, 0, 0, 0, 0,
	1076, 0, 1605, 0, 1093, 0, 0, 0, 0, 0,
	1602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 1801, 0, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1093,
	0, 0, 0, 0, 0, 1089, 0, 0, 0, 0,
	0, 0, 0, 1093, 0, 1608, 1609, 1610, 1611, 0,
	1277, 1277, 0, 0, 0, 1591, 0, 0, 0, 0,
	1157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 100, 100,
	0, 0, 100, 0, 1623, 0, 0, 1633, 0, 0,
	0, 0, 0, 1613, 1615, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1629, 0,
	1630, 0, 100, 100, 0, 0, 100, 1600, 1601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1093, 1093, 0, 1093, 0, 1621, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1093, 1606, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1158, 0, 0, 0, 1158, 1620, 0,
	0, 1278, 1076, 0, 0, 916, 0, 1277, 0, 1277,
	0, 1277, 0, 0, 0, 0, 1089, 0, 0, 0,
	0, 0, 0, 0, 1089, 0, 0, 1277, 1277, 0,
	0, 0, 0, 1278, 100, 100, 0, 1747, 1277, 0,
	0, 2573, 0, 0, 0, 0, 0, 0, 0, 1612,
	3369, 1277, 1277, 1277, 0, 0, 0, 1278, 0, 0,
	0, 0, 0, 0, 0, 3381, 0, 0, 0, 1607,
	0, 0, 652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1624, 234, 0, 234, 1278, 0,
	0, 0, 0, 0, 1278, 0, 0, 0, 1278, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1278, 0, 0, 0, 3424, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1157, 0, 0, 0,
	0, 1278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1622, 0, 0, 0, 1597, 1598, 1604, 1625,
	1603, 1599, 0, 1596, 1594, 1595, 1587, 1588, 1589, 1590,
	1592, 1593, 0, 0, 0, 0, 0, 0, 0, 0,
	3467, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 100, 0, 0, 0,
	0, 0, 0, 1093, 1093, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1076, 1076, 0, 0, 1093, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 1093, 1157, 3544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 2573, 0, 0, 1093,
	0, 0, 0, 0, 0, 0, 0, 0, 1157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1583, 1584, 0, 1616, 1617, 1618, 1626,
	1627, 1628, 0, 0, 0, 0, 0, 1801, 0, 0,
	0, 0, 0, 0, 2573, 1614, 0, 0, 0, 0,
	0, 3607, 1586, 0, 0, 0, 0, 0, 0, 1632,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 234,
	0, 0, 0, 1277, 0, 0, 0, 0, 0, 0,
	0, 0, 1585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1605, 0, 0, 0, 1093, 0, 0, 0,
	1602, 0, 0, 1157, 0, 1093, 0, 0, 0, 0,
	1093, 1158, 0, 0, 0, 0, 0, 0, 0, 1093,
	0, 0, 0, 1093, 0, 0, 0, 1093, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1278,
	0, 0, 0, 0, 0, 1093, 0, 0, 0, 0,
	0, 0, 1076, 234, 0, 0, 1093, 0, 1157, 0,
	1158, 0, 0, 0, 0, 1608, 1609, 1610, 1611, 0,
	1093, 0, 1277, 0, 0, 1591, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 0, 100,
	3686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1623, 0, 0, 1633, 0, 0,
	1093, 1093, 0, 1613, 1615, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1629, 0,
	1630, 1093, 0, 0, 0, 0, 0, 1600, 1601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 1621, 0, 0, 0, 1277,
	1277, 0, 1277, 0, 1093, 0, 1606, 1093, 0, 0,
	0, 234, 0, 0, 1277, 0, 0, 0, 0, 0,
	0, 0, 0, 677, 0, 0, 0, 0, 234, 0,
	0, 1631, 0, 0, 0, 0, 1278, 1278, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 678, 0, 3793,
	1259, 0, 0, 0, 0, 0, 0, 100, 0, 0,
	0, 1801, 0, 1076, 0, 0, 0, 0, 0, 0,
	0, 1076, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 679, 0, 697, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1093, 0, 0, 0, 1612,
	0, 0, 0, 0, 0, 1801, 1801, 680, 0, 0,
	681, 0, 0, 0, 0, 0, 0, 0, 0, 1607,
	0, 0, 0, 0, 0, 0, 0, 704, 0, 0,
	0, 0, 0, 682, 1801, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 1624, 702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3859, 1801, 0, 0, 683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	0, 0, 0, 1278, 0, 1278, 0, 1278, 684, 100,
	0, 685, 1093, 1093, 0, 0, 706, 0, 0, 0,
	646, 0, 0, 1278, 1278, 0, 0, 0, 0, 100,
	0, 0, 0, 0, 1278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1093, 0, 1278, 1278, 1278,
	0, 0, 1622, 0, 0, 3902, 1597, 1598, 1604, 1625,
	1603, 1599, 0, 1596, 1594, 1595, 1587, 1588, 1589, 1590,
	1592, 1593, 3925, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 705, 3937,
	0, 0, 0, 0, 0, 0, 0, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 0, 1157, 0, 0, 0, 0, 0, 0,
	0, 0, 1158, 0, 0, 1093, 0, 0, 0, 0,
	0, 690, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 0, 0, 0, 1157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1157, 0, 645, 0, 0, 1093, 0, 0, 0, 0,
	0, 0, 0, 676, 0, 698, 0, 0, 1157, 0,
	1093, 0, 0, 0, 691, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1093, 1093,
	1093, 0, 0, 696, 0, 0, 0, 0, 0, 1158,
	0, 0, 0, 0, 1093, 2210, 0, 692, 0, 0,
	709, 1093, 708, 0, 0, 0, 693, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 694,
	0, 0, 0, 1093, 701, 0, 0, 0, 0, 710,
	0, 707, 0, 0, 1801, 0, 0, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1157, 0, 0, 1158, 0,
	0, 0, 0, 0, 1277, 0, 0, 0, 0, 1277,
	0, 0, 0, 0, 0, 0, 0, 0, 1277, 0,
	0, 0, 1277, 0, 1158, 0, 1157, 0, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1277, 0, 100, 0, 0, 0,
	0, 0, 0, 0, 0, 1277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1093, 0, 0, 0, 0, 0, 0, 0, 1093,
	0, 0, 0, 1093, 0, 1093, 0, 0, 0, 1278,
	0, 0, 1093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1093, 0, 0, 0, 0, 0, 0, 1277,
	1277, 0, 0, 0, 0, 0, 0, 0, 0, 1158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 0, 0, 0, 0, 1093, 0, 0, 0, 0,
	0, 0, 0, 1157, 0, 0, 1157, 0, 100, 0,
	0, 100, 0, 0, 1158, 0, 0, 0, 1093, 1093,
	0, 0, 0, 0, 0, 0, 0, 0, 1278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1093, 0, 0, 0, 0, 1093,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1583, 1584, 0, 1616, 1617, 1618, 1626, 1627, 1628, 0,
	0, 0, 0, 0, 0, 0, 0, 1157, 0, 0,
	0, 1619, 1614, 0, 0, 0, 0, 0, 0, 1586,
	0, 1093, 0, 0, 1157, 0, 1632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1278, 1278, 0, 1278, 1585,
	0, 1093, 0, 0, 0, 0, 0, 0, 0, 1605,
	1278, 0, 0, 0, 0, 0, 0, 1602, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1093, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 1608, 1609, 1610, 1611, 0, 0, 0, 0,
	0, 0, 1591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1157, 0, 1093, 0, 0, 0,
	0, 0, 0, 0, 1093, 1093, 0, 0, 0, 0,
	0, 1623, 0, 0, 1633, 0, 0, 0, 0, 0,
	1613, 1615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 0, 1630, 0, 0,
	1093, 0, 0, 1093, 1600, 1601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1606, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1277, 1620, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1607, 1277, 1277, 1277,
	0, 1093, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1093, 1093, 1277, 0, 0, 0, 0, 0, 0,
	1157, 1624, 0, 0, 0, 0, 0, 0, 1093, 1158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1622,
	0, 0, 0, 1597, 1598, 1604, 1625, 1603, 1599, 0,
	1596, 1594, 1595, 1587, 1588, 1589, 1590, 1592, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 3158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1583, 1584, 0, 1616, 1617, 1618, 1626, 1627, 1628,
	0, 0, 1157, 0, 1157, 0, 0, 0, 0, 0,
	0, 0, 1619, 1614, 0, 0, 0, 0, 0, 0,
	1586, 1157, 0, 0, 0, 0, 0, 1632, 0, 0,
	0, 1158, 0, 0, 0, 0, 0, 0, 0, 0,
	1278, 0, 0, 0, 0, 1278, 0, 0, 0, 0,
	1585, 0, 0, 0, 1278, 0, 0, 0, 1278, 0,
	1605, 0, 1158, 0, 0, 0, 0, 1157, 1602, 0,
	0, 0, 0, 0, 1157, 0, 0, 0, 0, 0,
	1278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1278, 0, 0, 0, 0, 0, 1277, 1277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1157, 0, 0, 0, 0, 1277, 0,
	0, 0, 0, 1608, 1609, 1610, 1611, 0, 0, 0,
	0, 0, 0, 1591, 0, 1278, 1278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1278, 0, 0, 0,
	1157, 0, 1623, 0, 0, 1633, 0, 0, 0, 0,
	0, 1613, 1615, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1629, 0, 1630, 1158,
	1157, 0, 1158, 0, 0, 1600, 1601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1621, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1606, 0, 0, 0, 0, 0,
	0, 1157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1157, 0, 0, 0, 0, 1631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1158, 0, 0, 1620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1157, 0, 0, 0, 0,
	0, 0, 0, 1277, 1277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1583, 1584,
	0, 1616, 1617, 1618, 1626, 1627, 1628, 1607, 0, 1157,
	0, 0, 1277, 0, 0, 0, 0, 0, 0, 1619,
	1614, 0, 0, 0, 0, 0, 0, 1586, 0, 0,
	0, 0, 1624, 0, 1632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1605, 0, 0,
	0, 0, 0, 0, 0, 1602, 0, 0, 0, 0,
	1158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1622, 0, 0, 0, 1597, 1598, 1604, 1625, 1603, 1599,
	0, 1596, 1594, 1595, 1587, 1588, 1589, 1590, 1592, 1593,
	1608, 1609, 1610, 1611, 0, 0, 0, 0, 2790, 0,
	1591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1277, 1277, 0, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 1633, 0, 0, 0, 0, 1277, 1613, 1615,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1278, 0, 0, 1629, 0, 1630, 0, 0, 0, 0,
	0, 0, 1600, 1601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1278, 1606, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1631, 0, 0, 0,
	0, 0, 0, 1278, 1278, 1278, 0, 0, 0, 0,
	0, 0, 0, 1620, 0, 0, 0, 0, 0, 1278,
	0, 0, 0, 0, 0, 0, 1158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1612, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1607, 1583, 1584, 0, 1616, 1617,
	1618, 1626, 1627, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1619, 1614, 0, 1624,
	0, 0, 0, 0, 1586, 0, 0, 0, 0, 0,
	0, 1632, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1605, 0, 0, 0, 0, 0,
	0, 0, 1602, 0, 0, 0, 0, 0, 1158, 0,
	1158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1622, 0, 0,
	0, 1597, 1598, 1604, 1625, 1603, 1599, 0, 1596, 1594,
	1595, 1587, 1588, 1589, 1590, 1592, 1593, 0, 0, 0,
	0, 0, 0, 0, 0, 2789, 0, 1608, 1609, 1610,
	1611, 0, 0, 1158, 0, 0, 0, 1591, 0, 0,
	1158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1278, 1278, 0, 1623, 0, 0, 1633,
	0, 0, 0, 0, 0, 1613, 1615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1158,
	1629, 0, 1630, 0, 1278, 0, 0, 0, 0, 1600,
	1601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1606, 0,
	0, 0, 0, 0, 0, 0, 1158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 0, 0, 0,
	1620, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1158, 1612, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1624, 0, 0, 0,
	0, 1158, 0, 0, 0, 0, 0, 0, 0, 1278,
	1278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1158, 0, 0, 1278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1622, 0, 0, 0, 1597, 1598,
	1604, 1625, 1603, 1599, 0, 1596, 1594, 1595, 1587, 1588,
	1589, 1590, 1592, 1593, 0, 0, 0, 0, 0, 0,
	0, 0, 2786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1155, 0, 1278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1278, 1278, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 1161, 250, 251,
	1162, 1163, 1164, 1278, 1165, 518, 1166, 1167, 1168, 1169,
	252, 253, 255, 254, 256, 257, 258, 519, 520, 0,
	521, 259, 522, 1170, 260, 261, 262, 263, 264, 1171,
	1172, 0, 265, 523, 524, 525, 1173, 266, 267, 526,
	1174, 1241, 1175, 268, 269, 270, 271, 272, 273, 274,
	0, 1176, 276, 277, 278, 275, 1177, 279, 0, 280,
	281, 282, 1178, 283, 1034, 284, 285, 1179, 1180, 1182,
	1181, 1183, 1184, 1185, 286, 287, 288, 289, 0, 290,
	527, 528, 1186, 294, 291, 292, 1187, 295, 293, 1188,
	296, 297, 1189, 1190, 298, 299, 300, 1191, 301, 302,
	1192, 303, 304, 305, 1193, 306, 307, 529, 308, 309,
	310, 312, 314, 311, 315, 316, 317, 318, 530, 531,
	1194, 241, 1195, 0, 0, 0, 0, 319, 320, 321,
	532, 0, 0, 0, 322, 1196, 323, 1197, 1198, 1035,
	324, 325, 533, 534, 326, 327, 1199, 328, 535, 1200,
	536, 329, 1201, 330, 331, 332, 333, 334, 537, 538,
	539, 390, 1037, 335, 336, 1202, 337, 338, 339, 340,
	0, 0, 0, 242, 341, 342, 344, 1203, 1036, 343,
	540, 541, 1204, 542, 1205, 345, 1038, 543, 1039, 346,
	347, 348, 1040, 349, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 1206, 356, 358, 357, 1207, 359, 544,
	1041, 360, 361, 1042, 1208, 362, 363, 364, 1209, 1210,
	365, 366, 367, 368, 0, 369, 370, 372, 374, 371,
	373, 378, 375, 376, 377, 380, 0, 379, 1043, 381,
	382, 383, 386, 387, 385, 1044, 384, 1211, 243, 1045,
	388, 1212, 545, 389, 546, 391, 392, 1213, 0, 393,
	0, 1214, 1215, 395, 396, 397, 1216, 1217, 398, 399,
	547, 1046, 400, 1047, 548, 401, 402, 394, 403, 404,
	405, 406, 407, 408, 409, 410, 1218, 411, 412, 549,
	550, 551, 413, 552, 414, 415, 1219, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 553, 425, 424, 426,
	1220, 0, 0, 0, 0, 0, 427, 0, 429, 430,
	431, 428, 432, 433, 434, 435, 1221, 436, 437, 438,
	1048, 439, 440, 441, 442, 554, 443, 0, 444, 445,
	451, 452, 446, 447, 453, 454, 455, 456, 457, 1222,
	459, 460, 458, 461, 462, 463, 1223, 464, 448, 449,
	465, 466, 1049, 467, 468, 555, 0, 469, 1224, 470,
	471, 472, 473, 450, 474, 479, 556, 475, 476, 477,
	478, 557, 1225, 481, 482, 0, 480, 1226, 483, 484,
	485, 486, 487, 488, 313, 489, 1227, 490, 558, 559,
	560, 561, 1228, 497, 1229, 491, 492, 562, 493, 563,
	1230, 494, 495, 496, 0, 498, 499, 1231, 1232, 500,
	501, 502, 504, 505, 503, 506, 1233, 507, 1234, 0,
	508, 509, 510, 564, 565, 566, 1235, 512, 511, 567,
	1236, 1237, 1238, 1239, 513, 514, 568, 515, 516, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1155, 0, 0, 0, 0, 0, 0,
	0, 2373, 0, 0, 0, 0, 0, 0, 0, 2374,
	244, 245, 246, 247, 248, 249, 1161, 250, 251, 1162,
	1163, 1164, 0, 1165, 518, 1166, 1167, 1168, 1169, 252,
	253, 255, 254, 256, 257, 258, 519, 520, 0, 521,
	259, 522, 1170, 260, 261, 262, 263, 264, 1171, 1172,
	0, 265, 523, 524, 525, 1173, 266, 267, 526, 1174,
	1241, 1175, 268, 269, 270, 271, 272, 273, 274, 0,
	1176, 276, 277, 278, 275, 1177, 279, 0, 280, 281,
	282, 1178, 283, 1034, 284, 285, 1179, 1180, 1182, 1181,
	1183, 1184, 1185, 286, 287, 288, 289, 0, 290, 527,
	528, 1186, 294, 291, 292, 1187, 295, 293, 1188, 296,
	297, 1189, 1190, 298, 299, 300, 1191, 301, 302, 1192,
	303, 304, 305, 1193, 306, 307, 529, 308, 309, 310,
	312, 314, 311, 315, 316, 317, 318, 530, 531, 1194,
	241, 1195, 0, 0, 0, 0, 319, 320, 321, 532,
	0, 0, 0, 322, 1196, 323, 1197, 1198, 1035, 324,
	325, 533, 534, 326, 327, 1199, 328, 535, 1200, 536,
	329, 1201, 330, 331, 332, 333, 334, 537, 538, 539,
	390, 1037, 335, 336, 1202, 337, 338, 339, 340, 0,
	0, 0, 242, 341, 342, 344, 1203, 1036, 343, 540,
	541, 1204, 542, 1205, 345, 1038, 543, 1039, 346, 347,
	348, 1040, 349, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 1206, 356, 358, 357, 1207, 359, 544, 1041,
	360, 361, 1042, 1208, 362, 363, 364, 1209, 1210, 365,
	366, 367, 368, 0, 369, 370, 372, 374, 371, 373,
	378, 375, 376, 377, 380, 0, 379, 1043, 381, 382,
	383, 386, 387, 385, 1044, 384, 1211, 243, 1045, 388,
	1212, 545, 389, 546, 391, 392, 1213, 0, 393, 0,
	1214, 1215, 395, 396, 397, 1216, 1217, 398, 399, 547,
	1046, 400, 1047, 548, 401, 402, 394, 403, 404, 405,
	406, 407, 408, 409, 410, 1218, 411, 412, 549, 550,
	551, 413, 552, 414, 415, 1219, 416, 0, 417, 418,
	419, 420, 421, 422, 423, 553, 425, 424, 426, 1220,
	0, 0, 0, 0, 0, 427, 0, 429, 430, 431,
	428, 432, 433, 434, 435, 1221, 436, 437, 438, 1048,
	439, 440, 441, 442, 554, 443, 0, 444, 445, 451,
	452, 446, 447, 453, 454, 455, 456, 457, 1222, 459,
	460, 458, 461, 462, 463, 1223, 464, 448, 449, 465,
	466, 1049, 467, 468, 555, 0, 469, 1224, 470, 471,
	472, 473, 450, 474, 479, 556, 475, 476, 477, 478,
	557, 1225, 481, 482, 0, 480, 1226, 483, 484, 485,
	486, 487, 488, 313, 489, 1227, 490, 558, 559, 560,
	561, 1228, 497, 1229, 491, 492, 562, 493, 563, 1230,
	494, 495, 496, 0, 498, 499, 1231, 1232, 500, 501,
	502, 504, 505, 503, 506, 1233, 507, 1234, 0, 508,
	509, 510, 564, 565, 566, 1235, 512, 511, 567, 1236,
	1237, 1238, 1239, 513, 514, 568, 515, 516, 517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1155, 0, 0, 0, 0, 3166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3168, 244, 245, 246,
	247, 248, 249, 1161, 250, 251, 1162, 1163, 1164, 0,
	1165, 518, 1166, 1167, 1168, 1169, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 1170,
	260, 261, 262, 263, 264, 1171, 1172, 0, 265, 523,
	524, 525, 1173, 266, 267, 526, 1174, 1241, 1175, 268,
	269, 270, 271, 272, 273, 274, 0, 1176, 276, 277,
	278, 275, 1177, 279, 0, 280, 281, 282, 1178, 283,
	1034, 284, 285, 1179, 1180, 1182, 1181, 1183, 1184, 1185,
	286, 287, 288, 289, 0, 290, 527, 528, 1186, 294,
	291, 292, 1187, 295, 293, 1188, 296, 297, 1189, 1190,
	298, 299, 300, 1191, 301, 302, 1192, 303, 304, 305,
	1193, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 1194, 241, 1195, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 1196, 323, 1197, 1198, 1035, 324, 325, 533, 534,
	326, 327, 1199, 328, 535, 1200, 536, 329, 1201, 330,
	331, 332, 333, 334, 537, 538, 539, 390, 1037, 335,
	336, 1202, 337, 338, 339, 340, 0, 0, 0, 242,
	341, 342, 344, 1203, 1036, 343, 540, 541, 1204, 542,
	1205, 345, 1038, 543, 1039, 346, 347, 348, 1040, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 1206,
	356, 358, 357, 1207, 359, 544, 1041, 360, 361, 1042,
	1208, 362, 363, 364, 1209, 1210, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 1043, 381, 382, 383, 386, 387,
	385, 1044, 384, 1211, 243, 1045, 388, 1212, 545, 389,
	546, 391, 392, 1213, 0, 393, 0, 1214, 1215, 395,
	396, 397, 1216, 1217, 398, 399, 547, 1046, 400, 1047,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 1218, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 1219, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 1220, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 1221, 436, 437, 438, 1048, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 1222, 459, 460, 458, 461,
	462, 463, 1223, 464, 448, 449, 465, 466, 1049, 467,
	468, 555, 0, 469, 1224, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 1225, 481,
	482, 0, 480, 1226, 483, 484, 485, 486, 487, 488,
	313, 489, 1227, 490, 558, 559, 560, 561, 1228, 497,
	1229, 491, 492, 562, 493, 563, 1230, 494, 495, 496,
	0, 498, 499, 1231, 1232, 500, 501, 502, 504, 505,
	503, 506, 1233, 507, 1234, 0, 508, 509, 510, 564,
	565, 566, 1235, 512, 511, 567, 1236, 1237, 1238, 1239,
	513, 514, 568, 515, 516, 517, 0, 0, 0, 0,
	0, 1155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3495, 244, 245,
	246, 247, 248, 249, 1161, 250, 251, 1162, 1163, 1164,
	0, 1165, 518, 1166, 1167, 1168, 1169, 252, 253, 255,
	254, 256, 257, 258, 519, 520, 0, 521, 259, 522,
	1170, 260, 261, 262, 263, 264, 1171, 1172, 0, 265,
	523, 524, 525, 1173, 266, 267, 526, 1174, 1241, 1175,
	268, 269, 270, 271, 272, 273, 274, 0, 1176, 276,
	277, 278, 275, 1177, 279, 0, 280, 281, 282, 1178,
	283, 1034, 284, 285, 1179, 1180, 1182, 1181, 1183, 1184,
	1185, 286, 287, 288, 289, 0, 290, 527, 528, 1186,
	294, 291, 292, 1187, 295, 293, 1188, 296, 297, 1189,
	1190, 298, 299, 300, 1191, 301, 302, 1192, 303, 304,
	305, 1193, 306, 307, 529, 308, 309, 310, 312, 314,
	311, 315, 316, 317, 318, 530, 531, 1194, 241, 1195,
	0, 0, 0, 0, 319, 320, 321, 532, 0, 0,
	0, 322, 1196, 323, 1197, 1198, 1035, 324, 325, 533,
	534, 326, 327, 1199, 328, 535, 1200, 536, 329, 1201,
	330, 331, 332, 333, 334, 537, 538, 539, 390, 1037,
	335, 336, 1202, 337, 338, 339, 340, 0, 0, 0,
	242, 341, 342, 344, 1203, 1036, 343, 540, 541, 1204,
	542, 1205, 345, 1038, 543, 1039, 346, 347, 348, 1040,
	349, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	1206, 356, 358, 357, 1207, 359, 544, 1041, 360, 361,
	1042, 1208, 362, 363, 364, 1209, 1210, 365, 366, 367,
	368, 0, 369, 370, 372, 374, 371, 373, 378, 375,
	376, 377, 380, 0, 379, 1043, 381, 382, 383, 386,
	387, 385, 1044, 384, 1211, 243, 1045, 388, 1212, 545,
	389, 546, 391, 392, 1213, 0, 393, 0, 1214, 1215,
	395, 396, 397, 1216, 1217, 398, 399, 547, 1046, 400,
	1047, 548, 401, 402, 394, 403, 404, 405, 406, 407,
	408, 409, 410, 1218, 411, 412, 549, 550, 551, 413,
	552, 414, 415, 1219, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 553, 425, 424, 426, 1220, 0, 0,
	0, 0, 0, 427, 0, 429, 430, 431, 428, 432,
	433, 434, 435, 1221, 436, 437, 438, 1048, 439, 440,
	441, 442, 554, 443, 0, 444, 445, 451, 452, 446,
	447, 453, 454, 455, 456, 457, 1222, 459, 460, 458,
	461, 462, 463, 1223, 464, 448, 449, 465, 466, 1049,
	467, 468, 555, 0, 469, 1224, 470, 471, 472, 473,
	450, 474, 479, 556, 475, 476, 477, 478, 557, 1225,
	481, 482, 0, 480, 1226, 483, 484, 485, 486, 487,
	488, 313, 489, 1227, 490, 558, 559, 560, 561, 1228,
	497, 1229, 491, 492, 562, 493, 563, 1230, 494, 495,
	496, 0, 498, 499, 1231, 1232, 500, 501, 502, 504,
	505, 503, 506, 1233, 507, 1234, 0, 508, 509, 510,
	564, 565, 566, 1235, 512, 511, 567, 1236, 1237, 1238,
	1239, 513, 514, 568, 515, 516, 517, 1155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3652, 244, 245, 246, 247, 248, 249,
	1161, 250, 251, 1162, 1163, 1164, 0, 1165, 518, 1166,
	1167, 1168, 1169, 252, 253, 255, 254, 256, 257, 258,
	519, 520, 0, 521, 259, 522, 1170, 260, 261, 262,
	263, 264, 1171, 1172, 0, 265, 523, 524, 525, 1173,
	266, 267, 526, 1174, 1241, 1175, 268, 269, 270, 271,
	272, 273, 274, 0, 1176, 276, 277, 278, 275, 1177,
	279, 0, 280, 281, 282, 1178, 283, 1034, 284, 285,
	1179, 1180, 1182, 1181, 1183, 1184, 1185, 286, 287, 288,
	289, 0, 290, 527, 528, 1186, 294, 291, 292, 1187,
	295, 293, 1188, 296, 297, 1189, 1190, 298, 299, 300,
	1191, 301, 302, 1192, 303, 304, 305, 1193, 306, 307,
	529, 308, 309, 310, 312, 314, 311, 315, 316, 317,
	318, 530, 531, 1194, 241, 1195, 0, 0, 0, 0,
	319, 320, 321, 532, 0, 0, 0, 322, 1196, 323,
	1197, 1198, 1035, 324, 325, 533, 534, 326, 327, 1199,
	328, 535, 1200, 536, 329, 1201, 330, 331, 332, 333,
	334, 537, 538, 539, 390, 1037, 335, 336, 1202, 337,
	338, 339, 340, 0, 0, 0, 242, 341, 342, 344,
	1203, 1036, 343, 540, 541, 1204, 542, 1205, 345, 1038,
	543, 1039, 346, 347, 348, 1040, 349, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 1206, 356, 358, 357,
	1207, 359, 544, 1041, 360, 361, 1042, 1208, 362, 363,
	364, 1209, 1210, 365, 366, 367, 368, 0, 369, 370,
	372, 374, 371, 373, 378, 375, 376, 377, 380, 0,
	379, 1043, 381, 382, 383, 386, 387, 385, 1044, 384,
	1211, 243, 1045, 388, 1212, 545, 389, 546, 391, 392,
	1213, 0, 393, 0, 1214, 1215, 395, 396, 397, 1216,
	1217, 398, 399, 547, 1046, 400, 1047, 548, 401, 402,
	394, 403, 404, 405, 406, 407, 408, 409, 410, 1218,
	411, 412, 549, 550, 551, 413, 552, 414, 415, 1219,
	416, 0, 417, 418, 419, 420, 421, 422, 423, 553,
	425, 424, 426, 1220, 0, 0, 0, 0, 0, 427,
	0, 429, 430, 431, 428, 432, 433, 434, 435, 1221,
	436, 437, 438, 1048, 439, 440, 441, 442, 554, 443,
	0, 444, 445, 451, 452, 446, 447, 453, 454, 455,
	456, 457, 1222, 459, 460, 458, 461, 462, 463, 1223,
	464, 448, 449, 465, 466, 1049, 467, 468, 555, 0,
	469, 1224, 470, 471, 472, 473, 450, 474, 479, 556,
	475, 476, 477, 478, 557, 1225, 481, 482, 0, 480,
	1226, 483, 484, 485, 486, 487, 488, 313, 489, 1227,
	490, 558, 559, 560, 561, 1228, 497, 1229, 491, 492,
	562, 493, 563, 1230, 494, 495, 496, 0, 498, 499,
	1231, 1232, 500, 501, 502, 504, 505, 503, 506, 1233,
	507, 1234, 0, 508, 509, 510, 564, 565, 566, 1235,
	512, 511, 567, 1236, 1237, 1238, 1239, 513, 514, 568,
	515, 516, 517, 1155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3552,
	244, 245, 246, 247, 248, 249, 1161, 250, 251, 1162,
	1163, 1164, 0, 1165, 518, 1166, 1167, 1168, 1169, 252,
	253, 255, 254, 256, 257, 258, 519, 520, 0, 521,
	259, 522, 1170, 260, 261, 262, 263, 264, 1171, 1172,
	0, 265, 523, 524, 525, 1173, 266, 267, 526, 1174,
	1241, 1175, 268, 269, 270, 271, 272, 273, 274, 0,
	1176, 276, 277, 278, 275, 1177, 279, 0, 280, 281,
	282, 1178, 283, 1034, 284, 285, 1179, 1180, 1182, 1181,
	1183, 1184, 1185, 286, 287, 288, 289, 0, 290, 527,
	528, 1186, 294, 291, 292, 1187, 295, 293, 1188, 296,
	297, 1189, 1190, 298, 299, 300, 1191, 301, 302, 1192,
	303, 304, 305, 1193, 306, 307, 529, 308, 309, 310,
	312, 314, 311, 315, 316, 317, 318, 530, 531, 1194,
	241, 1195, 0, 0, 0, 0, 319, 320, 321, 532,
	0, 0, 0, 322, 1196, 323, 1197, 1198, 1035, 324,
	325, 533, 534, 326, 327, 1199, 328, 535, 1200, 536,
	329, 1201, 330, 331, 332, 333, 334, 537, 538, 539,
	390, 1037, 335, 336, 1202, 337, 338, 339, 340, 0,
	0, 0, 242, 341, 342, 344, 1203, 1036, 343, 540,
	541, 1204, 542, 1205, 345, 1038, 543, 1039, 346, 347,
	348, 1040, 349, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 1206, 356, 358, 357, 1207, 359, 544, 1041,
	360, 361, 1042, 1208, 362, 363, 364, 1209, 1210, 365,
	366, 367, 368, 0, 369, 370, 372, 374, 371, 373,
	378, 375, 376, 377, 380, 0, 379, 1043, 381, 382,
	383, 386, 387, 385, 1044, 384, 1211, 243, 1045, 388,
	1212, 545, 389, 546, 391, 392, 1213, 0, 393, 0,
	1214, 1215, 395, 396, 397, 1216, 1217, 398, 399, 547,
	1046, 400, 1047, 548, 401, 402, 394, 403, 404, 405,
	406, 407, 408, 409, 410, 1218, 411, 412, 549, 550,
	551, 413, 552, 414, 415, 1219, 416, 0, 417, 418,
	419, 420, 421, 422, 423, 553, 425, 424, 426, 1220,
	0, 0, 0, 0, 0, 427, 0, 429, 430, 431,
	428, 432, 433, 434, 435, 1221, 436, 437, 438, 1048,
	439, 440, 441, 442, 554, 443, 0, 444, 445, 451,
	452, 446, 447, 453, 454, 455, 456, 457, 1222, 459,
	460, 458, 461, 462, 463, 1223, 464, 448, 449, 465,
	466, 1049, 467, 468, 555, 0, 469, 1224, 470, 471,
	472, 473, 450, 474, 479, 556, 475, 476, 477, 478,
	557, 1225, 481, 482, 0, 480, 1226, 483, 484, 485,
	486, 487, 488, 313, 489, 1227, 490, 558, 559, 560,
	561, 1228, 497, 1229, 491, 492, 562, 493, 563, 1230,
	494, 495, 496, 0, 498, 499, 1231, 1232, 500, 501,
	502, 504, 505, 503, 506, 1233, 507, 1234, 0, 508,
	509, 510, 564, 565, 566, 1235, 512, 511, 567, 1236,
	1237, 1238, 1239, 513, 514, 568, 515, 516, 517, 1155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3425, 244, 245, 246, 247,
	248, 249, 1161, 250, 251, 1162, 1163, 1164, 0, 1165,
	518, 1166, 1167, 1168, 1169, 252, 253, 255, 254, 256,
	257, 258, 519, 520, 0, 521, 259, 522, 1170, 260,
	261, 262, 263, 264, 1171, 1172, 0, 265, 523, 524,
	525, 1173, 266, 267, 526, 1174, 1241, 1175, 268, 269,
	270, 271, 272, 273, 274, 0, 1176, 276, 277, 278,
	275, 1177, 279, 0, 280, 281, 282, 1178, 283, 1034,
	284, 285, 1179, 1180, 1182, 1181, 1183, 1184, 1185, 286,
	287, 288, 289, 0, 290, 527, 528, 1186, 294, 291,
	292, 1187, 295, 293, 1188, 296, 297, 1189, 1190, 298,
	299, 300, 1191, 301, 302, 1192, 303, 304, 305, 1193,
	306, 307, 529, 308, 309, 310, 312, 314, 311, 315,
	316, 317, 318, 530, 531, 1194, 241, 1195, 0, 0,
	0, 0, 319, 320, 321, 532, 0, 0, 0, 322,
	1196, 323, 1197, 1198, 1035, 324, 325, 533, 534, 326,
	327, 1199, 328, 535, 1200, 536, 329, 1201, 330, 331,
	332, 333, 334, 537, 538, 539, 390, 1037, 335, 336,
	1202, 337, 338, 339, 340, 0, 0, 0, 242, 341,
	342, 344, 1203, 1036, 343, 540, 541, 1204, 542, 1205,
	345, 1038, 543, 1039, 346, 347, 348, 1040, 349, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 1206, 356,
	358, 357, 1207, 359, 544, 1041, 360, 361, 1042, 1208,
	362, 363, 364, 1209, 1210, 365, 366, 367, 368, 0,
	369, 370, 372, 374, 371, 373, 378, 375, 376, 377,
	380, 0, 379, 1043, 381, 382, 383, 386, 387, 385,
	1044, 384, 1211, 243, 1045, 388, 1212, 545, 389, 546,
	391, 392, 1213, 0, 393, 0, 1214, 1215, 395, 396,
	397, 1216, 1217, 398, 399, 547, 1046, 400, 1047, 548,
	401, 402, 394, 403, 404, 405, 406, 407, 408, 409,
	410, 1218, 411, 412, 549, 550, 551, 413, 552, 414,
	415, 1219, 416, 0, 417, 418, 419, 420, 421, 422,
	423, 553, 425, 424, 426, 1220, 0, 0, 0, 0,
	0, 427, 0, 429, 430, 431, 428, 432, 433, 434,
	435, 1221, 436, 437, 438, 1048, 439, 440, 441, 442,
	554, 443, 0, 444, 445, 451, 452, 446, 447, 453,
	454, 455, 456, 457, 1222, 459, 460, 458, 461, 462,
	463, 1223, 464, 448, 449, 465, 466, 1049, 467, 468,
	555, 0, 469, 1224, 470, 471, 472, 473, 450, 474,
	479, 556, 475, 476, 477, 478, 557, 1225, 481, 482,
	0, 480, 1226, 483, 484, 485, 486, 487, 488, 313,
	489, 1227, 490, 558, 559, 560, 561, 1228, 497, 1229,
	491, 492, 562, 493, 563, 1230, 494, 495, 496, 0,
	498, 499, 1231, 1232, 500, 501, 502, 504, 505, 503,
	506, 1233, 507, 1234, 0, 508, 509, 510, 564, 565,
	566, 1235, 512, 511, 567, 1236, 1237, 1238, 1239, 513,
	514, 568, 515, 516, 517, 1155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3184, 244, 245, 246, 247, 248, 249, 1161, 250,
	251, 1162, 1163, 1164, 0, 1165, 518, 1166, 1167, 1168,
	1169, 252, 253, 255, 254, 256, 257, 258, 519, 520,
	0, 521, 259, 522, 1170, 260, 261, 262, 263, 264,
	1171, 1172, 0, 265, 523, 524, 525, 1173, 266, 267,
	526, 1174, 1241, 1175, 268, 269, 270, 271, 272, 273,
	274, 0, 1176, 276, 277, 278, 275, 1177, 279, 0,
	280, 281, 282, 1178, 283, 1034, 284, 285, 1179, 1180,
	1182, 1181, 1183, 1184, 1185, 286, 287, 288, 289, 0,
	290, 527, 528, 1186, 294, 291, 292, 1187, 295, 293,
	1188, 296, 297, 1189, 1190, 298, 299, 300, 1191, 301,
	302, 1192, 303, 304, 305, 1193, 306, 307, 529, 308,
	309, 310, 312, 314, 311, 315, 316, 317, 318, 530,
	531, 1194, 241, 1195, 0, 0, 0, 0, 319, 320,
	321, 532, 0, 0, 0, 322, 1196, 323, 1197, 1198,
	1035, 324, 325, 533, 534, 326, 327, 1199, 328, 535,
	1200, 536, 329, 1201, 330, 331, 332, 333, 334, 537,
	538, 539, 390, 1037, 335, 336, 1202, 337, 338, 339,
	340, 0, 0, 0, 242, 341, 342, 344, 1203, 1036,
	343, 540, 541, 1204, 542, 1205, 345, 1038, 543, 1039,
	346, 347, 348, 1040, 349, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 1206, 356, 358, 357, 1207, 359,
	544, 1041, 360, 361, 1042, 1208, 362, 363, 364, 1209,
	1210, 365, 366, 367, 368, 0, 369, 370, 372, 374,
	371, 373, 378, 375, 376, 377, 380, 0, 379, 1043,
	381, 382, 383, 386, 387, 385, 1044, 384, 1211, 243,
	1045, 388, 1212, 545, 389, 546, 391, 392, 1213, 0,
	393, 0, 1214, 1215, 395, 396, 397, 1216, 1217, 398,
	399, 547, 1046, 400, 1047, 548, 401, 402, 394, 403,
	404, 405, 406, 407, 408, 409, 410, 1218, 411, 412,
	549, 550, 551, 413, 552, 414, 415, 1219, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 553, 425, 424,
	426, 1220, 0, 0, 0, 0, 0, 427, 0, 429,
	430, 431, 428, 432, 433, 434, 435, 1221, 436, 437,
	438, 1048, 439, 440, 441, 442, 554, 443, 0, 444,
	445, 451, 452, 446, 447, 453, 454, 455, 456, 457,
	1222, 459, 460, 458, 461, 462, 463, 1223, 464, 448,
	449, 465, 466, 1049, 467, 468, 555, 0, 469, 1224,
	470, 471, 472, 473, 450, 474, 479, 556, 475, 476,
	477, 478, 557, 1225, 481, 482, 0, 480, 1226, 483,
	484, 485, 486, 487, 488, 313, 489, 1227, 490, 558,
	559, 560, 561, 1228, 497, 1229, 491, 492, 562, 493,
	563, 1230, 494, 495, 496, 0, 498, 499, 1231, 1232,
	500, 501, 502, 504, 505, 503, 506, 1233, 507, 1234,
	0, 508, 509, 510, 564, 565, 566, 1235, 512, 511,
	567, 1236, 1237, 1238, 1239, 513, 514, 568, 515, 516,
	517, 1155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3030, 244, 245,
	246, 247, 248, 249, 1161, 250, 251, 1162, 1163, 1164,
	0, 1165, 518, 1166, 1167, 1168, 1169, 252, 253, 255,
	254, 256, 257, 258, 519, 520, 0, 521, 259, 522,
	1170, 260, 261, 262, 263, 264, 1171, 1172, 0, 265,
	523, 524, 525, 1173, 266, 267, 526, 1174, 1241, 1175,
	268, 269, 270, 271, 272, 273, 274, 0, 1176, 276,
	277, 278, 275, 1177, 279, 0, 280, 281, 282, 1178,
	283, 1034, 284, 285, 1179, 1180, 1182, 1181, 1183, 1184,
	1185, 286, 287, 288, 289, 0, 290, 527, 528, 1186,
	294, 291, 292, 1187, 295, 293, 1188, 296, 297, 1189,
	1190, 298, 299, 300, 1191, 301, 302, 1192, 303, 304,
	305, 1193, 306, 307, 529, 308, 309, 310, 312, 314,
	311, 315, 316, 317, 318, 530, 531, 1194, 241, 1195,
	0, 0, 0, 0, 319, 320, 321, 532, 0, 0,
	0, 322, 1196, 323, 1197, 1198, 1035, 324, 325, 533,
	534, 326, 327, 1199, 328, 535, 1200, 536, 329, 1201,
	330, 331, 332, 333, 334, 537, 538, 539, 390, 1037,
	335, 336, 1202, 337, 338, 339, 340, 0, 0, 0,
	242, 341, 342, 344, 1203, 1036, 343, 540, 541, 1204,
	542, 1205, 345, 1038, 543, 1039, 346, 347, 348, 1040,
	349, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	1206, 356, 358, 357, 1207, 359, 544, 1041, 360, 361,
	1042, 1208, 362, 363, 364, 1209, 1210, 365, 366, 367,
	368, 0, 369, 370, 372, 374, 371, 373, 378, 375,
	376, 377, 380, 0, 379, 1043, 381, 382, 383, 386,
	387, 385, 1044, 384, 1211, 243, 1045, 388, 1212, 545,
	389, 546, 391, 392, 1213, 0, 393, 0, 1214, 1215,
	395, 396, 397, 1216, 1217, 398, 399, 547, 1046, 400,
	1047, 548, 401, 402, 394, 403, 404, 405, 406, 407,
	408, 409, 410, 1218, 411, 412, 549, 550, 551, 413,
	552, 414, 415, 1219, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 553, 425, 424, 426, 1220, 0, 0,
	0, 0, 0, 427, 0, 429, 430, 431, 428, 432,
	433, 434, 435, 1221, 436, 437, 438, 1048, 439, 440,
	441, 442, 554, 443, 0, 444, 445, 451, 452, 446,
	447, 453, 454, 455, 456, 457, 1222, 459, 460, 458,
	461, 462, 463, 1223, 464, 448, 449, 465, 466, 1049,
	467, 468, 555, 0, 469, 1224, 470, 471, 472, 473,
	450, 474, 479, 556, 475, 476, 477, 478, 557, 1225,
	481, 482, 0, 480, 1226, 483, 484, 485, 486, 487,
	488, 313, 489, 1227, 490, 558, 559, 560, 561, 1228,
	497, 1229, 491, 492, 562, 493, 563, 1230, 494, 495,
	496, 0, 498, 499, 1231, 1232, 500, 501, 502, 504,
	505, 503, 506, 1233, 507, 1234, 0, 508, 509, 510,
	564, 565, 566, 1235, 512, 511, 567, 1236, 1237, 1238,
	1239, 513, 514, 568, 515, 516, 517, 1155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2256, 244, 245, 246, 247, 248, 249,
	1161, 250, 251, 1162, 1163, 1164, 0, 1165, 518, 1166,
	1167, 1168, 1169, 252, 253, 255, 254, 256, 257, 258,
	519, 520, 0, 521, 259, 522, 1170, 260, 261, 262,
	263, 264, 1171, 1172, 0, 265, 523, 524, 525, 1173,
	266, 267, 526, 1174, 1241, 1175, 268, 269, 270, 271,
	272, 273, 274, 0, 1176, 276, 277, 278, 275, 1177,
	279, 0, 280, 281, 282, 1178, 283, 1034, 284, 285,
	1179, 1180, 1182, 1181, 1183, 1184, 1185, 286, 287, 288,
	289, 0, 290, 527, 528, 1186, 294, 291, 292, 1187,
	295, 293, 1188, 296, 297, 1189, 1190, 298, 299, 300,
	1191, 301, 302, 1192, 303, 304, 305, 1193, 306, 307,
	529, 308, 309, 310, 312, 314, 311, 315, 316, 317,
	318, 530, 531, 1194, 241, 1195, 0, 0, 0, 0,
	319, 320, 321, 532, 0, 0, 0, 322, 1196, 323,
	1197, 1198, 1035, 324, 325, 533, 534, 326, 327, 1199,
	328, 535, 1200, 536, 329, 1201, 330, 331, 332, 333,
	334, 537, 538, 539, 390, 1037, 335, 336, 1202, 337,
	338, 339, 340, 0, 0, 0, 242, 341, 342, 344,
	1203, 1036, 343, 540, 541, 1204, 542, 1205, 345, 1038,
	543, 1039, 346, 347, 348, 1040, 349, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 1206, 356, 358, 357,
	1207, 359, 544, 1041, 360, 361, 1042, 1208, 362, 363,
	364, 1209, 1210, 365, 366, 367, 368, 0, 369, 370,
	372, 374, 371, 373, 378, 375, 376, 377, 380, 0,
	379, 1043, 381, 382, 383, 386, 387, 385, 1044, 384,
	1211, 243, 1045, 388, 1212, 545, 389, 546, 391, 392,
	1213, 0, 393, 0, 1214, 1215, 395, 396, 397, 1216,
	1217, 398, 399, 547, 1046, 400, 1047, 548, 401, 402,
	394, 403, 404, 405, 406, 407, 408, 409, 410, 1218,
	411, 412, 549, 550, 551, 413, 552, 414, 415, 1219,
	416, 0, 417, 418, 419, 420, 421, 422, 423, 553,
	425, 424, 426, 1220, 0, 0, 0, 0, 0, 427,
	0, 429, 430, 431, 428, 432, 433, 434, 435, 1221,
	436, 437, 438, 1048, 439, 440, 441, 442, 554, 443,
	0, 444, 445, 451, 452, 446, 447, 453, 454, 455,
	456, 457, 1222, 459, 460, 458, 461, 462, 463, 1223,
	464, 448, 449, 465, 466, 1049, 467, 468, 555, 0,
	469, 1224, 470, 471, 472, 473, 450, 474, 479, 556,
	475, 476, 477, 478, 557, 1225, 481, 482, 0, 480,
	1226, 483, 484, 485, 486, 487, 488, 313, 489, 1227,
	490, 558, 559, 560, 561, 1228, 497, 1229, 491, 492,
	562, 493, 563, 1230, 494, 495, 496, 0, 498, 499,
	1231, 1232, 500, 501, 502, 504, 505, 503, 506, 1233,
	507, 1234, 0, 508, 509, 510, 564, 565, 566, 1235,
	512, 511, 567, 1236, 1237, 1238, 1239, 513, 514, 568,
	515, 516, 517, 1253, 0, 1155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1939,
	0, 0, 244, 245, 246, 247, 248, 249, 1161, 250,
	251, 1162, 1163, 1164, 0, 1165, 518, 1166, 1167, 1168,
	1169, 252, 253, 255, 254, 256, 257, 258, 519, 520,
	0, 521, 259, 522, 1170, 260, 261, 262, 263, 264,
	1171, 1172, 0, 265, 523, 524, 525, 1173, 266, 267,
	526, 1174, 1241, 1175, 268, 269, 270, 271, 272, 273,
	274, 0, 1176, 276, 277, 278, 275, 1177, 279, 0,
	280, 281, 282, 1178, 283, 1034, 284, 285, 1179, 1180,
	1182, 1181, 1183, 1184, 1185, 286, 287, 288, 289, 0,
	290, 527, 528, 1186, 294, 291, 292, 1187, 295, 293,
	1188, 296, 297, 1189, 1190, 298, 299, 300, 1191, 301,
	302, 1192, 303, 304, 305, 1193, 306, 307, 529, 308,
	309, 310, 312, 314, 311, 315, 316, 317, 318, 530,
	531, 1194, 241, 1195, 0, 0, 0, 0, 319, 320,
	321, 532, 0, 0, 0, 322, 1196, 323, 1197, 1198,
	1035, 324, 325, 533, 534, 326, 327, 1199, 328, 535,
	1200, 536, 329, 1201, 330, 331, 332, 333, 334, 537,
	538, 539, 390, 1037, 335, 336, 1202, 337, 338, 339,
	340, 0, 0, 0, 242, 341, 342, 344, 1203, 1036,
	343, 540, 541, 1204, 542, 1205, 345, 1038, 543, 1039,
	346, 347, 348, 1040, 349, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 1206, 356, 358, 357, 1207, 359,
	544, 1041, 360, 361, 1042, 1208, 362, 363, 364, 1209,
	1210, 365, 366, 367, 368, 0, 369, 370, 372, 374,
	371, 373, 378, 375, 376, 377, 380, 0, 379, 1043,
	381, 382, 383, 386, 387, 385, 1044, 384, 1211, 243,
	1045, 388, 1212, 545, 389, 546, 391, 392, 1213, 0,
	393, 0, 1214, 1215, 395, 396, 397, 1216, 1217, 398,
	399, 547, 1046, 400, 1047, 548, 401, 402, 394, 403,
	404, 405, 406, 407, 408, 409, 410, 1218, 411, 412,
	549, 550, 551, 413, 552, 414, 415, 1219, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 553, 425, 424,
	426, 1220, 0, 0, 0, 0, 0, 427, 0, 429,
	430, 431, 428, 432, 433, 434, 435, 1221, 436, 437,
	438, 1048, 439, 440, 441, 442, 554, 443, 0, 444,
	445, 451, 452, 446, 447, 453, 454, 455, 456, 457,
	1222, 459, 460, 458, 461, 462, 463, 1223, 464, 448,
	449, 465, 466, 1049, 467, 468, 555, 0, 469, 1224,
	470, 471, 472, 473, 450, 474, 479, 556, 475, 476,
	477, 478, 557, 1225, 481, 482, 0, 480, 1226, 483,
	484, 485, 486, 487, 488, 313, 489, 1227, 490, 558,
	559, 560, 561, 1228, 497, 1229, 491, 492, 562, 493,
	563, 1230, 494, 495, 496, 0, 498, 499, 1231, 1232,
	500, 501, 502, 504, 505, 503, 506, 1233, 507, 1234,
	0, 508, 509, 510, 564, 565, 566, 1235, 512, 511,
	567, 1236, 1237, 1238, 1239, 513, 514, 568, 515, 516,
	517, 1152, 0, 1155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 1161, 250, 251, 1162,
	1163, 1164, 0, 1165, 518, 1166, 1167, 1168, 1169, 252,
	253, 255, 254, 256, 257, 258, 519, 520, 0, 521,
	259, 522, 1170, 260, 261, 262, 263, 264, 1171, 1172,
	0, 265, 523, 524, 525, 1173, 266, 267, 526, 1174,
	1241, 1175, 268, 269, 270, 271, 272, 273, 274, 0,
	1176, 276, 277, 278, 275, 1177, 279, 0, 280, 281,
	282, 1178, 283, 1034, 284, 285, 1179, 1180, 1182, 1181,
	1183, 1184, 1185, 286, 287, 288, 289, 0, 290, 527,
	528, 1186, 294, 291, 292, 1187, 295, 293, 1188, 296,
	297, 1189, 1190, 298, 299, 300, 1191, 301, 302, 1192,
	303, 304, 305, 1193, 306, 307, 529, 308, 309, 310,
	312, 314, 311, 315, 316, 317, 318, 530, 531, 1194,
	241, 1195, 0, 0, 0, 0, 319, 320, 321, 532,
	0, 0, 0, 322, 1196, 323, 1197, 1198, 1035, 324,
	325, 533, 534, 326, 327, 1199, 328, 535, 1200, 536,
	329, 1201, 330, 331, 332, 333, 334, 537, 538, 539,
	390, 1037, 335, 336, 1202, 337, 338, 339, 340, 0,
	0, 0, 242, 341, 342, 344, 1203, 1036, 343, 540,
	541, 1204, 542, 1205, 345, 1038, 543, 1039, 346, 347,
	348, 1040, 349, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 1206, 356, 358, 357, 1207, 359, 544, 1041,
	360, 361, 1042, 1208, 362, 363, 364, 1209, 1210, 365,
	366, 367, 368, 0, 369, 370, 372, 374, 371, 373,
	378, 375, 376, 377, 380, 0, 379, 1043, 381, 382,
	383, 386, 387, 385, 1044, 384, 1211, 243, 1045, 388,
	1212, 545, 389, 546, 391, 392, 1213, 0, 393, 0,
	1214, 1215, 395, 396, 397, 1216, 1217, 398, 399, 547,
	1046, 400, 1047, 548, 401, 402, 394, 403, 404, 405,
	406, 407, 408, 409, 410, 1218, 411, 412, 549, 550,
	551, 413, 552, 414, 415, 1219, 416, 0, 417, 418,
	419, 420, 421, 422, 423, 553, 425, 424, 426, 1220,
	0, 0, 0, 0, 0, 427, 0, 429, 430, 431,
	428, 432, 433, 434, 435, 1221, 436, 437, 438, 1048,
	439, 440, 441, 442, 554, 443, 0, 444, 445, 451,
	452, 446, 447, 453, 454, 455, 456, 457, 1222, 459,
	460, 458, 461, 462, 463, 1223, 464, 448, 449, 465,
	466, 1049, 467, 468, 555, 0, 469, 1224, 470, 471,
	472, 473, 450, 474, 479, 556, 475, 476, 477, 478,
	557, 1225, 481, 482, 0, 480, 1226, 483, 484, 485,
	486, 487, 488, 313, 489, 1227, 490, 558, 559, 560,
	561, 1228, 497, 1229, 491, 492, 562, 493, 563, 1230,
	494, 495, 496, 0, 498, 499, 1231, 1232, 500, 501,
	502, 504, 505, 503, 506, 1233, 507, 1234, 0, 508,
	509, 510, 564, 565, 566, 1235, 512, 511, 567, 1236,
	1237, 1238, 1239, 513, 514, 568, 515, 516, 517, 1155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 1161, 250, 251, 1162, 1163, 1164, 0, 1165,
	518, 1166, 1167, 1168, 1169, 252, 253, 255, 254, 256,
	257, 258, 519, 520, 0, 521, 259, 522, 1170, 260,
	261, 262, 263, 264, 1171, 1172, 0, 265, 523, 524,
	525, 1173, 266, 267, 526, 1174, 1241, 1175, 268, 269,
	270, 271, 272, 273, 274, 0, 1176, 276, 277, 278,
	275, 1177, 279, 0, 280, 281, 282, 1178, 283, 1034,
	284, 285, 1179, 1180, 1182, 1181, 1183, 1184, 1185, 286,
	287, 288, 289, 0, 290, 527, 528, 1186, 294, 291,
	292, 1187, 295, 293, 1188, 296, 297, 1189, 1190, 298,
	299, 300, 1191, 301, 302, 1192, 303, 304, 305, 1193,
	306, 307, 529, 308, 309, 310, 312, 314, 311, 315,
	316, 317, 318, 530, 531, 1194, 241, 1195, 0, 0,
	0, 0, 319, 320, 321, 532, 0, 0, 0, 322,
	1196, 323, 1197, 1198, 1035, 324, 325, 533, 534, 326,
	327, 1199, 328, 535, 1200, 536, 329, 1201, 330, 331,
	332, 333, 334, 537, 538, 539, 390, 1037, 335, 336,
	1202, 337, 338, 339, 340, 0, 0, 0, 242, 341,
	342, 344, 1203, 1036, 343, 540, 541, 1204, 542, 1205,
	345, 1038, 543, 1039, 346, 347, 348, 1040, 349, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 1206, 356,
	358, 357, 1207, 359, 544, 1041, 360, 361, 1042, 1208,
	362, 363, 364, 1209, 1210, 365, 366, 367, 368, 0,
	369, 370, 372, 374, 371, 373, 378, 375, 376, 377,
	380, 0, 379, 1043, 381, 382, 383, 386, 387, 385,
	1044, 384, 1211, 243, 1045, 388, 1212, 545, 389, 546,
	391, 392, 1213, 0, 393, 0, 1214, 1215, 395, 396,
	397, 1216, 1217, 398, 399, 547, 1046, 400, 1047, 548,
	401, 402, 394, 403, 404, 405, 406, 407, 408, 409,
	410, 1218, 411, 412, 549, 550, 551, 413, 552, 414,
	415, 1219, 416, 0, 417, 418, 419, 420, 421, 422,
	423, 553, 425, 424, 426, 1220, 0, 0, 0, 0,
	0, 427, 0, 429, 430, 431, 428, 432, 433, 434,
	435, 1221, 436, 437, 438, 1048, 439, 440, 441, 442,
	554, 443, 0, 444, 445, 451, 452, 446, 447, 453,
	454, 455, 456, 457, 1222, 459, 460, 458, 461, 462,
	463, 1223, 464, 448, 449, 465, 466, 1049, 467, 468,
	555, 0, 469, 1224, 470, 471, 472, 473, 450, 474,
	479, 556, 475, 476, 477, 478, 557, 1225, 481, 482,
	0, 480, 1226, 483, 484, 485, 486, 487, 488, 313,
	489, 1227, 490, 558, 559, 560, 561, 1228, 497, 1229,
	491, 492, 562, 493, 563, 1230, 494, 495, 496, 0,
	498, 499, 1231, 1232, 500, 501, 502, 504, 505, 503,
	506, 1233, 507, 1234, 0, 508, 509, 510, 564, 565,
	566, 1235, 512, 511, 567, 1236, 1237, 1238, 1239, 513,
	514, 568, 515, 516, 517, 2231, 0, 971, 943, 944,
	945, 941, 942, 954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	2228, 250, 251, 0, 0, 0, 0, 0, 995, 959,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	519, 1008, 0, 1015, 259, 1014, 0, 260, 261, 262,
	263, 264, 961, 994, 928, 265, 1053, 1054, 525, 0,
	266, 267, 1001, 0, 982, 0, 268, 269, 270, 271,
	272, 273, 274, 0, 0, 276, 277, 278, 275, 0,
	279, 0, 280, 281, 282, 0, 283, 1034, 284, 285,
	985, 983, 984, 991, 987, 986, 990, 286, 287, 288,
	289, 1018, 290, 1012, 1011, 932, 294, 291, 292, 0,
	295, 293, 0, 296, 297, 2229, 0, 298, 1003, 300,
	0, 301, 302, 0, 303, 304, 305, 0, 306, 307,
	938, 308, 309, 310, 312, 314, 311, 315, 316, 317,
	318, 1025, 1026, 950, 241, 0, 0, 0, 0, 0,
	319, 320, 321, 1010, 0, 0, 0, 322, 0, 323,
	0, 0, 1035, 324, 325, 1023, 1024, 326, 327, 0,
	328, 1032, 0, 960, 329, 0, 330, 331, 332, 333,
	334, 996, 997, 1000, 390, 1037, 335, 336, 0, 337,
	338, 339, 340, 0, 0, 0, 242, 341, 342, 344,
	0, 1036, 343, 1005, 1006, 0, 966, 0, 345, 1038,
	998, 1039, 346, 347, 348, 1040, 349, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 0, 356, 358, 357,
	0, 359, 1033, 1041, 360, 361, 1042, 0, 362, 363,
	364, 989, 988, 365, 366, 367, 368, 0, 369, 370,
	372, 374, 371, 373, 378, 375, 376, 377, 380, 0,
	379, 1043, 381, 382, 383, 386, 387, 385, 1044, 384,
	929, 243, 1045, 388, 951, 999, 389, 1013, 391, 392,
	0, 0, 393, 0, 0, 0, 395, 396, 397, 0,
	0, 398, 399, 547, 1046, 400, 1047, 1027, 401, 402,
	394, 403, 404, 405, 406, 407, 408, 409, 410, 0,
	411, 412, 549, 550, 1028, 413, 552, 414, 415, 0,
	416, 0, 417, 418, 419, 420, 421, 422, 423, 1009,
	425, 424, 426, 0, 0, 0, 0, 0, 0, 427,
	0, 429, 430, 431, 428, 432, 433, 434, 435, 0,
	436, 437, 438, 1048, 439, 440, 441, 442, 939, 443,
	0, 444, 445, 451, 452, 446, 447, 453, 454, 455,
	456, 457, 0, 459, 460, 458, 461, 462, 463, 992,
	464, 448, 449, 465, 466, 1049, 467, 468, 1007, 0,
	469, 0, 470, 471, 472, 473, 450, 474, 479, 1052,
	475, 476, 477, 478, 1029, 0, 481, 482, 927, 480,
	0, 483, 484, 485, 486, 487, 488, 313, 489, 0,
	490, 1019, 1020, 1021, 1022, 0, 497, 0, 491, 492,
	1030, 493, 1031, 949, 494, 495, 496, 0, 498, 499,
	0, 933, 500, 501, 502, 504, 505, 503, 506, 993,
	507, 0, 0, 508, 509, 510, 564, 1016, 1051, 2227,
	512, 511, 567, 0, 0, 0, 0, 513, 514, 568,
	515, 516, 517, 930, 0, 0, 0, 0, 0, 0,
	926, 0, 0, 0, 0, 0, 0, 924, 925, 2230,
	0, 0, 0, 0, 0, 0, 955, 2226, 0, 917,
	953, 971, 943, 944, 945, 941, 942, 954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 995, 959, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 519, 1008, 0, 1015, 259, 1014,
	0, 260, 261, 262, 263, 264, 961, 994, 928, 265,
	1053, 1054, 525, 0, 266, 267, 1001, 0, 982, 0,
	268, 269, 270, 271, 272, 273, 274, 0, 0, 276,
	277, 278, 275, 0, 279, 0, 280, 281, 282, 0,
	283, 1034, 284, 285, 985, 983, 984, 991, 987, 986,
	990, 286, 287, 288, 289, 1018, 290, 1012, 1011, 932,
	294, 291, 292, 0, 295, 293, 0, 296, 297, 0,
	0, 298, 1003, 300, 0, 301, 302, 0, 303, 304,
	305, 0, 306, 307, 938, 308, 309, 310, 312, 314,
	311, 315, 316, 317, 318, 1025, 1026, 950, 241, 0,
	0, 0, 0, 0, 319, 320, 321, 1010, 0, 0,
	0, 322, 0, 323, 0, 0, 1035, 324, 325, 1023,
	1024, 326, 327, 0, 328, 1032, 0, 960, 329, 0,
	330, 331, 332, 333, 334, 996, 997, 1000, 390, 1037,
	335, 336, 0, 337, 338, 339, 340, 0, 0, 0,
	242, 341, 342, 344, 0, 1036, 343, 1005, 1006, 0,
	966, 0, 345, 1038, 998, 1039, 346, 347, 348, 1040,
	349, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	0, 356, 358, 357, 0, 359, 1033, 1041, 360, 361,
	1042, 0, 362, 363, 364, 989, 988, 365, 366, 367,
	368, 0, 369, 370, 372, 374, 371, 373, 378, 375,
	376, 377, 380, 0, 379, 1043, 381, 382, 383, 386,
	387, 385, 1044, 384, 929, 243, 1045, 388, 951, 999,
	389, 1013, 391, 392, 0, 0, 393, 0, 0, 0,
	395, 396, 397, 0, 0, 398, 399, 547, 1046, 400,
	1047, 1027, 401, 402, 394, 403, 404, 405, 406, 407,
	408, 409, 410, 0, 411, 412, 549, 550, 1028, 413,
	552, 414, 415, 0, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 1009, 425, 424, 426, 0, 0, 0,
	0, 0, 0, 427, 0, 429, 430, 431, 428, 432,
	433, 434, 435, 0, 436, 437, 438, 1048, 439, 440,
	441, 442, 939, 443, 0, 444, 445, 451, 452, 446,
	447, 453, 454, 455, 456, 457, 206, 459, 460, 458,
	461, 462, 463, 992, 464, 448, 449, 465, 466, 1049,
	467, 468, 1007, 0, 469, 0, 470, 471, 472, 473,
	450, 474, 479, 1052, 475, 476, 477, 478, 1029, 0,
	481, 482, 927, 480, 208, 483, 484, 485, 486, 487,
	488, 313, 489, 0, 490, 1019, 1020, 1021, 1022, 0,
	497, 0, 491, 492, 1030, 493, 1031, 949, 494, 495,
	496, 0, 498, 499, 0, 933, 500, 501, 502, 504,
	505, 503, 506, 993, 507, 0, 0, 508, 509, 510,
	1424, 1016, 1051, 0, 512, 511, 567, 0, 0, 0,
	200, 513, 514, 568, 515, 516, 517, 930, 201, 0,
	0, 0, 0, 0, 926, 0, 0, 0, 0, 0,
	0, 924, 925, 971, 943, 944, 945, 941, 942, 954,
	1658, 1656, 0, 0, 953, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 995, 959, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 519, 1008, 0, 1015,
	259, 1014, 0, 260, 261, 262, 263, 264, 961, 994,
	928, 265, 1053, 1054, 525, 0, 266, 267, 1001, 0,
	982, 0, 268, 269, 270, 271, 272, 273, 274, 0,
	0, 276, 277, 278, 275, 0, 279, 0, 280, 281,
	282, 0, 283, 1034, 284, 285, 985, 983, 984, 991,
	987, 986, 990, 286, 287, 288, 289, 1018, 290, 1012,
	1011, 932, 294, 291, 292, 0, 295, 293, 0, 296,
	297, 0, 0, 298, 1003, 300, 0, 301, 302, 0,
	303, 304, 305, 0, 306, 307, 938, 308, 309, 310,
	312, 314, 311, 315, 316, 317, 318, 1025, 1026, 950,
	241, 0, 0, 0, 0, 0, 319, 320, 321, 1010,
	0, 0, 0, 322, 0, 323, 0, 0, 1035, 324,
	325, 1023, 1024, 326, 327, 0, 328, 1032, 0, 960,
	329, 0, 330, 331, 332, 333, 334, 996, 997, 1000,
	390, 1037, 335, 336, 0, 337, 338, 339, 340, 0,
	0, 0, 242, 341, 342, 344, 0, 1036, 343, 1005,
	1006, 0, 966, 0, 345, 1038, 998, 1039, 346, 347,
	348, 1040, 349, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 0, 356, 358, 357, 0, 359, 1033, 1041,
	360, 361, 1042, 0, 362, 363, 364, 989, 988, 365,
	366, 367, 368, 0, 369, 370, 372, 374, 371, 373,
	378, 375, 376, 377, 380, 0, 379, 1043, 381, 382,
	383, 386, 387, 385, 1044, 384, 929, 243, 1045, 388,
	951, 999, 389, 1013, 391, 392, 0, 0, 393, 0,
	0, 0, 395, 396, 397, 0, 0, 398, 399, 547,
	1046, 400, 1047, 1027, 401, 402, 394, 403, 404, 405,
	406, 407, 408, 409, 410, 0, 411, 412, 549, 550,
	1028, 413, 552, 414, 415, 0, 416, 0, 417, 418,
	419, 420, 421, 422, 423, 1009, 425, 424, 426, 0,
	0, 0, 0, 0, 0, 427, 0, 429, 430, 431,
	428, 432, 433, 434, 435, 0, 436, 437, 438, 1048,
	439, 440, 441, 442, 939, 443, 0, 444, 445, 451,
	452, 446, 447, 453, 454, 455, 456, 457, 206, 459,
	460, 458, 461, 462, 463, 992, 464, 448, 449, 465,
	466, 1049, 467, 468, 1007, 0, 469, 0, 470, 471,
	472, 473, 450, 474, 479, 1052, 475, 476, 477, 478,
	1029, 0, 481, 482, 927, 480, 208, 483, 484, 485,
	486, 487, 488, 313, 489, 0, 490, 1019, 1020, 1021,
	1022, 0, 497, 0, 491, 492, 1030, 493, 1031, 949,
	494, 495, 496, 0, 498, 499, 0, 933, 500, 501,
	502, 504, 505, 503, 506, 993, 507, 0, 0, 508,
	509, 510, 1424, 1016, 1051, 0, 512, 511, 567, 0,
	0, 0, 200, 513, 514, 568, 515, 516, 517, 930,
	201, 0, 0, 0, 0, 0, 926, 0, 0, 0,
	0, 0, 0, 924, 925, 971, 943, 944, 945, 941,
	942, 954, 1658, 2742, 0, 0, 953, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 995, 959, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 519, 1008,
	0, 1015, 259, 1014, 0, 260, 261, 262, 263, 264,
	961, 994, 928, 265, 1053, 1054, 525, 0, 266, 267,
	1001, 0, 982, 0, 268, 269, 270, 271, 272, 273,
	274, 0, 0, 276, 277, 278, 275, 0, 279, 0,
	280, 281, 282, 0, 283, 1034, 284, 285, 985, 983,
	984, 991, 987, 986, 990, 286, 287, 288, 289, 1018,
	290, 1012, 1011, 932, 294, 291, 292, 0, 295, 293,
	0, 296, 297, 0, 0, 298, 1003, 300, 0, 301,
	302, 0, 303, 304, 305, 0, 306, 307, 938, 308,
	309, 310, 312, 314, 311, 315, 316, 317, 318, 1025,
	1026, 950, 241, 0, 0, 0, 0, 0, 319, 320,
	321, 1010, 0, 0, 0, 322, 0, 323, 0, 0,
	1035, 324, 325, 1023, 1024, 326, 327, 0, 328, 1032,
	0, 960, 329, 0, 330, 331, 332, 333, 334, 996,
	997, 1000, 390, 1037, 335, 336, 0, 337, 338, 339,
	340, 0, 0, 0, 242, 341, 342, 344, 0, 1036,
	343, 1005, 1006, 0, 966, 0, 345, 1038, 998, 1039,
	346, 347, 348, 1040, 349, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 0, 356, 358, 357, 0, 359,
	1033, 1041, 360, 361, 1042, 0, 362, 363, 364, 989,
	988, 365, 366, 367, 368, 0, 369, 370, 372, 374,
	371, 373, 378, 375, 376, 377, 380, 0, 379, 1043,
	381, 382, 383, 386, 387, 385, 1044, 384, 929, 243,
	1045, 388, 951, 999, 389, 1013, 391, 392, 0, 0,
	393, 0, 0, 0, 395, 396, 397, 0, 0, 398,
	399, 547, 1046, 400, 1047, 1027, 401, 402, 394, 403,
	404, 405, 406, 407, 408, 409, 410, 0, 411, 412,
	549, 550, 1028, 413, 552, 414, 415, 0, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 1009, 425, 424,
	426, 0, 0, 0, 0, 0, 0, 427, 0, 429,
	430, 431, 428, 432, 433, 434, 435, 0, 436, 437,
	438, 1048, 439, 440, 441, 442, 939, 443, 0, 444,
	445, 451, 452, 446, 447, 453, 454, 455, 456, 457,
	206, 459, 460, 458, 461, 462, 463, 992, 464, 448,
	449, 465, 466, 1049, 467, 468, 1007, 0, 469, 0,
	470, 471, 472, 473, 450, 474, 479, 1052, 475, 476,
	477, 478, 1029, 0, 481, 482, 927, 480, 208, 483,
	484, 485, 486, 487, 488, 313, 489, 0, 490, 1019,
	1020, 1021, 1022, 0, 497, 0, 491, 492, 1030, 493,
	1031, 949, 494, 495, 496, 0, 498, 499, 0, 933,
	500, 501, 502, 504, 505, 503, 506, 993, 507, 0,
	0, 508, 509, 510, 1424, 1016, 1051, 0, 512, 511,
	567, 0, 0, 0, 200, 513, 514, 568, 515, 516,
	517, 930, 201, 0, 0, 0, 0, 0, 926, 0,
	0, 0, 0, 0, 0, 924, 925, 971, 943, 944,
	945, 941, 942, 954, 1658, 1656, 0, 0, 953, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 995, 959,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	519, 1008, 0, 1015, 259, 1014, 2335, 260, 261, 262,
	263, 264, 961, 994, 928, 265, 1053, 1054, 525, 0,
	266, 267, 1001, 0, 982, 0, 268, 269, 270, 271,
	272, 273, 274, 0, 0, 276, 277, 278, 275, 0,
	279, 0, 280, 281, 282, 0, 283, 1034, 284, 285,
	985, 983, 984, 991, 987, 986, 990, 286, 287, 288,
	289, 1018, 290, 1012, 1011, 932, 294, 291, 292, 0,
	295, 293, 0, 296, 297, 0, 0, 298, 1003, 300,
	0, 301, 302, 0, 303, 304, 305, 0, 306, 307,
	938, 308, 309, 310, 312, 314, 311, 315, 316, 317,
	318, 1025, 1026, 950, 241, 0, 0, 0, 0, 0,
	319, 320, 321, 1010, 0, 0, 0, 322, 0, 323,
	0, 2340, 1035, 324, 325, 1023, 1024, 326, 327, 0,
	328, 1032, 0, 960, 329, 0, 330, 331, 332, 333,
	334, 996, 997, 1000, 390, 1037, 335, 336, 0, 337,
	338, 339, 340, 0, 0, 0, 242, 341, 342, 344,
	0, 1036, 343, 1005, 1006, 0, 966, 0, 345, 1038,
	998, 1039, 346, 347, 348, 1040, 349, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 0, 356, 358, 357,
	2336, 359, 1033, 1041, 360, 361, 1042, 0, 362, 363,
	364, 989, 988, 365, 366, 367, 368, 0, 369, 370,
	372, 374, 371, 373, 378, 375, 376, 377, 380, 0,
	379, 1043, 381, 382, 383, 386, 387, 385, 1044, 384,
	929, 243, 1045, 388, 951, 999, 389, 1013, 391, 392,
	0, 0, 393, 0, 0, 0, 395, 396, 397, 0,
	0, 398, 399, 547, 1046, 400, 1047, 1027, 401, 402,
	394, 403, 404, 405, 406, 407, 408, 409, 410, 0,
	411, 412, 549, 550, 1028, 413, 552, 414, 415, 0,
	416, 0, 417, 418, 419, 420, 421, 422, 423, 1009,
	425, 424, 426, 0, 0, 0, 0, 0, 0, 427,
	0, 429, 430, 431, 428, 432, 433, 434, 435, 0,
	436, 437, 438, 1048, 439, 440, 441, 442, 939, 443,
	0, 444, 445, 451, 452, 446, 447, 453, 454, 455,
	456, 457, 0, 459, 460, 458, 461, 462, 463, 992,
	464, 448, 449, 465, 466, 1049, 467, 468, 1007, 0,
	469, 0, 470, 471, 472, 473, 450, 474, 479, 1052,
	475, 476, 477, 478, 1029, 0, 481, 482, 927, 480,
	0, 483, 484, 485, 486, 487, 488, 313, 489, 0,
	490, 1019, 1020, 1021, 1022, 0, 497, 2337, 491, 492,
	1030, 493, 1031, 949, 494, 495, 496, 0, 498, 499,
	0, 933, 500, 501, 502, 504, 505, 503, 506, 993,
	507, 0, 0, 508, 509, 510, 564, 1016, 1051, 0,
	512, 511, 567, 0, 0, 0, 0, 513, 514, 568,
	515, 516, 517, 930, 0, 0, 0, 0, 0, 0,
	926, 0, 0, 0, 0, 0, 0, 924, 925, 0,
	0, 0, 0, 0, 0, 0, 955, 0, 0, 2276,
	953, 971, 943, 944, 945, 941, 942, 954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 995, 959, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 519, 1008, 0, 1015, 259, 1014,
	0, 260, 261, 262, 263, 264, 961, 994, 928, 265,
	1053, 1054, 525, 0, 266, 267, 1001, 0, 982, 0,
	268, 269, 270, 271, 272, 273, 274, 0, 0, 276,
	277, 278, 275, 0, 279, 0, 280, 281, 282, 0,
	283, 1034, 284, 285, 985, 983, 984, 991, 987, 986,
	990, 286, 287, 288, 289, 1018, 290, 1012, 1011, 932,
	294, 291, 292, 0, 295, 293, 0, 296, 297, 0,
	0, 298, 1003, 300, 0, 301, 302, 0, 303, 304,
	305, 0, 306, 307, 938, 308, 309, 310, 312, 314,
	311, 315, 316, 317, 318, 1025, 1026, 950, 241, 0,
	0, 0, 0, 0, 319, 320, 321, 1010, 0, 0,
	0, 322, 0, 323, 0, 0, 1035, 324, 325, 1023,
	1024, 326, 327, 0, 328, 1032, 0, 960, 329, 0,
	330, 331, 332, 333, 334, 996, 997, 1000, 390, 1037,
	335, 336, 0, 337, 338, 339, 340, 0, 0, 0,
	242, 341, 342, 344, 0, 1036, 343, 1005, 1006, 0,
	966, 0, 345, 1038, 998, 1039, 346, 347, 348, 1040,
	349, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	0, 356, 358, 357, 0, 359, 1033, 1041, 360, 361,
	1042, 0, 362, 363, 364, 989, 988, 365, 366, 367,
	368, 0, 369, 370, 372, 374, 371, 373, 378, 375,
	376, 377, 380, 0, 379, 1043, 381, 382, 383, 386,
	387, 385, 1044, 384, 929, 243, 1045, 388, 951, 999,
	389, 1013, 391, 392, 0, 0, 393, 0, 0, 0,
	395, 396, 397, 0, 0, 398, 399, 547, 1046, 400,
	1047, 1027, 401, 402, 394, 403, 404, 405, 406, 407,
	408, 409, 410, 0, 411, 412, 549, 550, 1028, 413,
	552, 414, 415, 0, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 1009, 425, 424, 426, 0, 0, 0,
	0, 0, 0, 427, 0, 429, 430, 431, 428, 432,
	433, 434, 435, 0, 436, 437, 438, 1048, 439, 440,
	441, 442, 939, 443, 0, 444, 445, 451, 452, 446,
	447, 453, 454, 455, 456, 457, 0, 459, 460, 458,
	461, 462, 463, 992, 464, 448, 449, 465, 466, 1049,
	467, 468, 1007, 0, 469, 0, 470, 471, 472, 473,
	450, 474, 479, 1052, 475, 476, 477, 478, 1029, 0,
	481, 482, 927, 480, 0, 483, 484, 485, 486, 487,
	488, 313, 489, 0, 490, 1019, 1020, 1021, 1022, 0,
	497, 0, 491, 492, 1030, 493, 1031, 949, 494, 495,
	496, 0, 498, 499, 0, 933, 500, 501, 502, 504,
	505, 503, 506, 993, 507, 0, 0, 508, 509, 510,
	564, 1016, 1051, 0, 512, 511, 567, 0, 0, 0,
	0, 513, 514, 568, 515, 516, 517, 930, 0, 0,
	0, 0, 0, 0, 926, 0, 0, 0, 0, 0,
	0, 924, 925, 0, 0, 0, 0, 0, 0, 0,
	955, 2274, 0, 2273, 953, 971, 943, 944, 945, 941,
	942, 954, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 995, 959, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 519, 1008,
	0, 1015, 259, 1014, 0, 260, 261, 262, 263, 264,
	961, 994, 928, 265, 1053, 1054, 525, 0, 266, 267,
	1001, 0, 982, 0, 268, 269, 270, 271, 272, 273,
	274, 0, 0, 276, 277, 278, 275, 0, 279, 0,
	280, 281, 282, 0, 283, 1034, 284, 285, 985, 983,
	984, 991, 987, 986, 990, 286, 287, 288, 289, 1018,
	290, 1012, 1011, 932, 294, 291, 292, 0, 295, 293,
	0, 296, 297, 0, 0, 298, 1003, 300, 0, 301,
	302, 0, 303, 304, 305, 0, 306, 307, 938, 308,
	309, 310, 312, 314, 311, 315, 316, 317, 318, 1025,
	1026, 950, 241, 0, 0, 0, 0, 0, 319, 320,
	321, 1010, 0, 0, 0, 322, 0, 323, 0, 0,
	1035, 324, 325, 1023, 1024, 326, 327, 0, 328, 1032,
	0, 960, 329, 0, 330, 331, 332, 333, 334, 996,
	997, 1000, 390, 1037, 335, 336, 0, 337, 338, 339,
	340, 0, 0, 0, 242, 341, 342, 344, 0, 1036,
	343, 1005, 1006, 0, 966, 0, 345, 1038, 998, 1039,
	346, 347, 348, 1040, 349, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 0, 356, 358, 357, 0, 359,
	1033, 1041, 360, 361, 1042, 0, 362, 363, 364, 989,
	988, 365, 366, 367, 368, 0, 369, 370, 372, 374,
	371, 373, 378, 375, 376, 377, 380, 0, 379, 1043,
	381, 382, 383, 386, 387, 385, 1044, 384, 929, 243,
	1045, 388, 951, 999, 389, 1013, 391, 392, 0, 0,
	393, 0, 0, 0, 395, 396, 397, 0, 0, 398,
	399, 547, 1046, 400, 1047, 1027, 401, 402, 394, 403,
	404, 405, 406, 407, 408, 409, 410, 0, 411, 412,
	549, 550, 1028, 413, 552, 414, 415, 0, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 1009, 425, 424,
	426, 0, 0, 0, 0, 0, 0, 427, 0, 429,
	430, 431, 428, 432, 433, 434, 435, 0, 436, 437,
	438, 1048, 439, 440, 441, 442, 939, 443, 0, 444,
	445, 451, 452, 446, 447, 453, 454, 455, 456, 457,
	0, 459, 460, 458, 461, 462, 463, 992, 464, 448,
	449, 465, 466, 1049, 467, 468, 1007, 0, 469, 0,
	470, 471, 472, 473, 450, 474, 479, 1052, 475, 476,
	477, 478, 1029, 0, 481, 482, 927, 480, 0, 483,
	484, 485, 486, 487, 488, 313, 489, 0, 490, 1019,
	1020, 1021, 1022, 0, 497, 0, 491, 492, 1030, 493,
	1031, 949, 494, 495, 496, 0, 498, 499, 0, 933,
	500, 501, 502, 504, 505, 503, 506, 993, 507, 0,
	0, 508, 509, 510, 564, 1016, 1051, 0, 512, 511,
	567, 0, 0, 0, 0, 513, 514, 568, 515, 516,
	517, 930, 0, 0, 0, 0, 0, 0, 926, 0,
	0, 0, 0, 0, 0, 924, 925, 0, 0, 0,
	0, 0, 0, 0, 955, 2271, 0, 2270, 953, 971,
	943, 944, 945, 941, 942, 954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	995, 959, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 519, 1008, 0, 1015, 259, 1014, 0, 260,
	261, 262, 263, 264, 961, 994, 928, 265, 1053, 1054,
	525, 0, 266, 267, 1001, 0, 982, 0, 268, 269,
	270, 271, 272, 273, 274, 0, 0, 276, 277, 278,
	275, 0, 279, 0, 280, 281, 282, 0, 283, 1034,
	284, 285, 985, 983, 984, 991, 987, 986, 990, 286,
	287, 288, 289, 1018, 290, 1012, 1011, 932, 294, 291,
	292, 0, 295, 293, 0, 296, 297, 0, 0, 298,
	1003, 300, 0, 301, 302, 0, 303, 304, 305, 0,
	306, 307, 938, 308, 309, 310, 312, 314, 311, 315,
	316, 317, 318, 1025, 1026, 950, 241, 0, 0, 0,
	0, 0, 319, 320, 321, 1010, 0, 0, 0, 322,
	0, 323, 0, 0, 1035, 324, 325, 1023, 1024, 326,
	327, 0, 328, 1032, 0, 960, 329, 0, 330, 331,
	332, 333, 334, 996, 997, 1000, 390, 1037, 335, 336,
	0, 337, 338, 339, 340, 0, 0, 0, 242, 341,
	342, 344, 0, 1036, 343, 1005, 1006, 0, 966, 0,
	345, 1038, 998, 1039, 346, 347, 348, 1040, 349, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 0, 356,
	358, 357, 0, 359, 1033, 1041, 360, 361, 1042, 0,
	362, 363, 364, 989, 988, 365, 366, 367, 368, 0,
	369, 370, 372, 374, 371, 373, 378, 375, 376, 377,
	380, 0, 379, 1043, 381, 382, 383, 386, 387, 385,
	1044, 384, 929, 243, 1045, 388, 951, 999, 389, 1013,
	391, 392, 0, 0, 393, 0, 0, 0, 395, 396,
	397, 0, 0, 398, 399, 547, 1046, 400, 1047, 1027,
	401, 402, 394, 403, 404, 405, 406, 407, 408, 409,
	410, 0, 411, 412, 549, 550, 1028, 413, 552, 414,
	415, 0, 416, 0, 417, 418, 419, 420, 421, 422,
	423, 1009, 425, 424, 426, 0, 0, 0, 0, 0,
	0, 427, 0, 429, 430, 431, 428, 432, 433, 434,
	435, 0, 436, 437, 438, 1048, 439, 440, 441, 442,
	939, 443, 0, 444, 445, 451, 452, 446, 447, 453,
	454, 455, 456, 457, 0, 459, 460, 458, 461, 462,
	463, 992, 464, 448, 449, 465, 466, 1049, 467, 468,
	1007, 0, 469, 0, 470, 471, 472, 473, 450, 474,
	479, 1052, 475, 476, 477, 478, 1029, 0, 481, 482,
	927, 480, 0, 483, 484, 485, 486, 487, 488, 313,
	489, 0, 490, 1019, 1020, 1021, 1022, 0, 497, 0,
	491, 492, 1030, 493, 1031, 949, 494, 495, 496, 0,
	498, 499, 0, 933, 500, 501, 502, 504, 505, 503,
	506, 993, 507, 0, 0, 508, 509, 510, 564, 1016,
	1051, 0, 512, 511, 567, 0, 0, 0, 0, 513,
	514, 568, 515, 516, 517, 930, 0, 0, 0, 0,
	0, 0, 926, 0, 0, 0, 0, 0, 0, 924,
	925, 0, 0, 0, 0, 0, 0, 0, 955, 2268,
	0, 2267, 953, 971, 943, 944, 945, 941, 942, 954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 995, 959, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 519, 1008, 0, 1015,
	259, 1014, 0, 260, 261, 262, 263, 264, 961, 994,
	928, 265, 1053, 1054, 525, 0, 266, 267, 1001, 0,
	982, 0, 268, 269, 270, 271, 272, 273, 274, 0,
	0, 276, 277, 278, 275, 0, 279, 0, 280, 281,
	282, 0, 283, 1034, 284, 285, 985, 983, 984, 991,
	987, 986, 990, 286, 287, 288, 289, 1018, 290, 1012,
	1011, 932, 294, 291, 292, 0, 295, 293, 0, 296,
	297, 0, 0, 298, 1003, 300, 0, 301, 302, 0,
	303, 304, 305, 0, 306, 307, 938, 308, 309, 310,
	312, 314, 311, 315, 316, 317, 318, 1025, 1026, 950,
	241, 0, 0, 0, 0, 0, 319, 320, 321, 1010,
	0, 0, 0, 322, 0, 323, 0, 0, 1035, 324,
	325, 1023, 1024, 326, 327, 0, 328, 1032, 0, 960,
	329, 0, 330, 331, 332, 333, 334, 996, 997, 1000,
	390, 1037, 335, 336, 0, 337, 338, 339, 340, 0,
	0, 0, 242, 341, 342, 344, 0, 1036, 343, 1005,
	1006, 0, 966, 0, 345, 1038, 998, 1039, 346, 347,
	348, 1040, 349, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 0, 356, 358, 357, 0, 359, 1033, 1041,
	360, 361, 1042, 0, 362, 363, 364, 989, 988, 365,
	366, 367, 368, 0, 369, 370, 372, 374, 371, 373,
	378, 375, 376, 377, 380, 0, 379, 1043, 381, 382,
	383, 386, 387, 385, 1044, 384, 929, 243, 1045, 388,
	951, 999, 389, 1013, 391, 392, 0, 0, 393, 0,
	0, 0, 395, 396, 397, 0, 0, 398, 399, 547,
	1046, 400, 1047, 1027, 401, 402, 394, 403, 404, 405,
	406, 407, 408, 409, 410, 0, 411, 412, 549, 550,
	1028, 413, 552, 414, 415, 0, 416, 0, 417, 418,
	419, 420, 421, 422, 423, 1009, 425, 424, 426, 0,
	0, 0, 0, 0, 0, 427, 0, 429, 430, 431,
	428, 432, 433, 434, 435, 0, 436, 437, 438, 1048,
	439, 440, 441, 442, 939, 443, 0, 444, 445, 451,
	452, 446, 447, 453, 454, 455, 456, 457, 0, 459,
	460, 458, 461, 462, 463, 992, 464, 448, 449, 465,
	466, 1049, 467, 468, 1007, 0, 469, 0, 470, 471,
	472, 473, 450, 474, 479, 1052, 475, 476, 477, 478,
	1029, 0, 481, 482, 927, 480, 0, 483, 484, 485,
	486, 487, 488, 313, 489, 0, 490, 1019, 1020, 1021,
	1022, 0, 497, 0, 491, 492, 1030, 493, 1031, 949,
	494, 495, 496, 0, 498, 499, 0, 933, 500, 501,
	502, 504, 505, 503, 506, 993, 507, 0, 0, 508,
	509, 510, 564, 1016, 1051, 0, 512, 511, 567, 0,
	0, 0, 0, 513, 514, 568, 515, 516, 517, 930,
	0, 0, 0, 0, 0, 0, 926, 0, 0, 0,
	0, 0, 0, 924, 925, 0, 0, 0, 0, 0,
	0, 0, 955, 2265, 0, 1511, 953, 971, 943, 944,
	945, 941, 942, 954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 995, 959,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	519, 1008, 0, 1015, 259, 1014, 0, 260, 261, 262,
	263, 264, 961, 994, 928, 265, 1053, 1054, 525, 0,
	266, 267, 1001, 0, 982, 0, 268, 269, 270, 271,
	272, 273, 274, 0, 0, 276, 277, 278, 275, 0,
	279, 0, 280, 281, 282, 0, 283, 1034, 284, 285,
	985, 983, 984, 991, 987, 986, 990, 286, 287, 288,
	289, 1018, 290, 1012, 1011, 932, 294, 291, 292, 0,
	295, 293, 0, 296, 297, 0, 0, 298, 1003, 300,
	0, 301, 302, 0, 303, 304, 305, 0, 306, 307,
	938, 308, 309, 310, 312, 314, 311, 315, 316, 317,
	318, 1025, 1026, 950, 241, 0, 0, 0, 0, 0,
	319, 320, 321, 1010, 0, 0, 0, 322, 0, 323,
	0, 0, 1035, 324, 325, 1023, 1024, 326, 327, 0,
	328, 1032, 0, 960, 329, 0, 330, 331, 332, 333,
	334, 996, 997, 1000, 390, 1037, 335, 336, 0, 337,
	338, 339, 340, 0, 0, 0, 242, 341, 342, 344,
	0, 1036, 343, 1005, 1006, 0, 966, 0, 345, 1038,
	998, 1039, 346, 347, 348, 1040, 349, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 0, 356, 358, 357,
	0, 359, 1033, 1041, 360, 361, 1042, 0, 362, 363,
	364, 989, 988, 365, 366, 367, 368, 0, 369, 370,
	372, 374, 371, 373, 378, 375, 376, 377, 380, 0,
	379, 1043, 381, 382, 383, 386, 387, 385, 1044, 384,
	929, 243, 1045, 388, 951, 999, 389, 1013, 391, 392,
	0, 0, 393, 0, 0, 0, 395, 396, 397, 0,
	0, 398, 399, 547, 1046, 400, 1047, 1027, 401, 402,
	394, 403, 404, 405, 406, 407, 408, 409, 410, 0,
	411, 412, 549, 550, 1028, 413, 552, 414, 415, 0,
	416, 0, 417, 418, 419, 420, 421, 422, 423, 1009,
	425, 424, 426, 0, 0, 0, 0, 0, 0, 427,
	0, 429, 430, 431, 428, 432, 433, 434, 435, 0,
	436, 437, 438, 1048, 439, 440, 441, 442, 939, 443,
	0, 444, 445, 451, 452, 446, 447, 453, 454, 455,
	456, 457, 0, 459, 460, 458, 461, 462, 463, 992,
	464, 448, 449, 465, 466, 1049, 467, 468, 1007, 0,
	469, 0, 470, 471, 472, 473, 450, 474, 479, 1052,
	475, 476, 477, 478, 1029, 0, 481, 482, 927, 480,
	0, 483, 484, 485, 486, 487, 488, 313, 489, 0,
	490, 1019, 1020, 1021, 1022, 0, 497, 0, 491, 492,
	1030, 493, 1031, 949, 494, 495, 496, 0, 498, 499,
	0, 933, 500, 501, 502, 504, 505, 503, 506, 993,
	507, 0, 0, 508, 509, 510, 564, 1016, 1051, 0,
	512, 511, 567, 1510, 0, 0, 0, 513, 514, 568,
	515, 516, 517, 930, 0, 0, 0, 0, 0, 0,
	926, 0, 0, 0, 0, 0, 0, 924, 925, 0,
	0, 0, 0, 0, 0, 0, 955, 0, 0, 920,
	953, 971, 943, 944, 945, 941, 942, 954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 995, 959, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 519, 1008, 0, 1015, 259, 1014,
	0, 260, 261, 262, 263, 264, 961, 994, 928, 265,
	1053, 1054, 525, 0, 266, 267, 1001, 0, 982, 0,
	268, 269, 270, 271, 272, 273, 274, 0, 0, 276,
	277, 278, 275, 0, 279, 0, 280, 281, 282, 0,
	283, 1034, 284, 285, 985, 983, 984, 991, 987, 986,
	990, 286, 287, 288, 289, 1018, 290, 1012, 1011, 932,
	294, 291, 292, 0, 295, 293, 0, 296, 297, 0,
	0, 298, 1003, 300, 0, 301, 302, 0, 303, 304,
	305, 0, 306, 307, 938, 308, 309, 310, 312, 314,
	311, 315, 316, 317, 318, 1025, 1026, 950, 241, 0,
	0, 0, 0, 0, 319, 320, 321, 1010, 0, 0,
	0, 322, 0, 323, 0, 0, 1035, 324, 325, 1023,
	1024, 326, 327, 0, 328, 1032, 0, 960, 329, 0,
	330, 331, 332, 333, 334, 996, 997, 1000, 390, 1037,
	335, 336, 0, 337, 338, 339, 340, 0, 0, 0,
	242, 341, 342, 344, 0, 1036, 343, 1005, 1006, 0,
	966, 0, 345, 1038, 998, 1039, 346, 347, 348, 1040,
	349, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	0, 356, 358, 357, 0, 359, 1033, 1041, 360, 361,
	1042, 0, 362, 363, 364, 989, 988, 365, 366, 367,
	368, 0, 369, 370, 372, 374, 371, 373, 378, 375,
	376, 377, 380, 0, 379, 1043, 381, 382, 383, 386,
	387, 385, 1044, 384, 929, 243, 1045, 388, 951, 999,
	389, 1013, 391, 392, 0, 0, 393, 0, 934, 0,
	395, 396, 397, 0, 0, 398, 399, 547, 1046, 400,
	1047, 1027, 401, 402, 394, 403, 404, 405, 406, 407,
	408, 409, 410, 0, 411, 412, 549, 550, 1028, 413,
	552, 414, 415, 0, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 1009, 425, 424, 426, 0, 0, 0,
	0, 0, 0, 427, 0, 429, 430, 431, 428, 432,
	433, 434, 435, 0, 436, 437, 438, 1048, 439, 440,
	441, 442, 939, 443, 0, 444, 445, 451, 452, 446,
	447, 453, 454, 455, 456, 457, 0, 459, 460, 458,
	461, 462, 463, 992, 464, 448, 449, 465, 466, 1049,
	467, 468, 1007, 0, 469, 0, 470, 471, 472, 473,
	450, 474, 479, 1052, 475, 476, 477, 478, 1029, 0,
	481, 482, 927, 480, 0, 483, 484, 485, 486, 487,
	488, 313, 489, 0, 490, 1019, 1020, 1021, 1022, 0,
	497, 0, 491, 492, 1030, 493, 1031, 949, 494, 495,
	496, 0, 498, 499, 0, 933, 500, 501, 502, 504,
	505, 503, 506, 993, 507, 0, 0, 508, 509, 510,
	564, 1016, 1051, 0, 512, 511, 567, 0, 0, 0,
	0, 513, 514, 568, 515, 516, 517, 930, 0, 0,
	0, 0, 0, 0, 926, 0, 0, 0, 0, 0,
	0, 924, 925, 971, 943, 944, 945, 941, 942, 954,
	955, 0, 0, 0, 953, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 995, 959, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 519, 1008, 0, 1015,
	259, 1014, 0, 260, 261, 262, 263, 264, 961, 994,
	928, 265, 1053, 1054, 525, 0, 266, 267, 1001, 0,
	982, 0, 268, 269, 270, 271, 272, 273, 274, 0,
	0, 276, 277, 278, 275, 0, 279, 0, 280, 3914,
	282, 0, 283, 1034, 284, 285, 985, 983, 984, 991,
	987, 986, 990, 286, 287, 288, 289, 1018, 290, 1012,
	1011, 932, 294, 291, 292, 0, 295, 293, 0, 296,
	297, 0, 0, 298, 1003, 300, 0, 301, 302, 0,
	303, 304, 305, 0, 306, 307, 938, 308, 309, 310,
	312, 314, 311, 315, 316, 317, 318, 1025, 1026, 950,
	241, 0, 0, 0, 0, 0, 319, 320, 321, 1010,
	0, 0, 0, 322, 0, 323, 0, 0, 1035, 324,
	325, 1023, 1024, 326, 327, 0, 328, 1032, 0, 960,
	329, 0, 330, 331, 332, 333, 334, 996, 997, 1000,
	390, 1037, 335, 336, 0, 337, 338, 339, 340, 0,
	0, 0, 242, 341, 342, 344, 0, 1036, 343, 1005,
	1006, 0, 966, 0, 345, 1038, 998, 1039, 346, 347,
	348, 1040, 349, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 0, 356, 358, 357, 0, 359, 1033, 1041,
	360, 361, 1042, 0, 362, 363, 364, 989, 988, 365,
	366, 367, 368, 0, 369, 370, 372, 374, 371, 373,
	378, 375, 376, 377, 380, 0, 379, 1043, 381, 382,
	383, 386, 387, 385, 1044, 384, 929, 243, 1045, 388,
	951, 999, 389, 1013, 391, 392, 0, 0, 393, 0,
	934, 0, 395, 396, 397, 0, 0, 398, 399, 547,
	1046, 400, 1047, 1027, 401, 402, 394, 403, 404, 405,
	406, 407, 408, 409, 410, 0, 411, 412, 549, 550,
	1028, 413, 552, 414, 415, 0, 416, 0, 417, 418,
	419, 420, 421, 422, 423, 1009, 425, 424, 426, 0,
	0, 0, 0, 0, 0, 427, 0, 429, 430, 431,
	428, 432, 433, 434, 435, 0, 436, 437, 438, 1048,
	439, 440, 441, 442, 939, 443, 0, 444, 445, 451,
	452, 446, 447, 453, 454, 455, 456, 457, 0, 459,
	460, 458, 461, 462, 463, 992, 464, 448, 449, 465,
	466, 1049, 467, 468, 1007, 0, 469, 0, 470, 471,
	472, 473, 450, 474, 479, 1052, 475, 476, 477, 478,
	1029, 0, 481, 482, 927, 480, 0, 483, 484, 485,
	486, 487, 488, 313, 489, 0, 490, 1019, 1020, 1021,
	1022, 0, 497, 0, 491, 492, 1030, 493, 1031, 949,
	494, 495, 496, 0, 498, 499, 0, 933, 500, 501,
	502, 504, 505, 503, 506, 993, 507, 0, 0, 508,
	509, 510, 564, 1016, 1051, 0, 512, 511, 567, 0,
	0, 0, 0, 513, 514, 568, 515, 516, 517, 930,
	0, 0, 0, 0, 0, 0, 926, 0, 0, 0,
	0, 0, 0, 924, 925, 971, 943, 944, 945, 941,
	942, 954, 955, 0, 0, 0, 953, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 995, 959, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 519, 1008,
	0, 1015, 259, 1014, 0, 260, 261, 262, 263, 264,
	961, 994, 928, 265, 1053, 1054, 525, 0, 266, 267,
	1001, 0, 982, 0, 268, 269, 270, 271, 272, 273,
	274, 0, 0, 276, 277, 278, 275, 0, 279, 0,
	280, 281, 282, 0, 283, 1034, 284, 285, 985, 983,
	984, 991, 987, 986, 990, 286, 287, 288, 289, 1018,
	290, 1012, 1011, 932, 294, 291, 292, 0, 295, 293,
	0, 296, 297, 0, 0, 298, 1003, 300, 0, 301,
	302, 0, 303, 304, 305, 0, 306, 307, 938, 308,
	309, 310, 312, 314, 311, 315, 316, 317, 318, 1025,
	1026, 950, 241, 0, 0, 0, 0, 0, 319, 320,
	321, 1010, 0, 0, 0, 322, 0, 323, 0, 0,
	1035, 324, 325, 1023, 1024, 326, 327, 0, 328, 1032,
	0, 960, 329, 0, 330, 331, 332, 333, 334, 996,
	997, 1000, 390, 1037, 335, 336, 0, 337, 338, 339,
	340, 0, 0, 0, 2145, 341, 342, 344, 0, 1036,
	343, 1005, 1006, 0, 966, 0, 345, 1038, 998, 1039,
	346, 347, 348, 1040, 349, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 0, 356, 358, 357, 0, 359,
	1033, 1041, 360, 361, 1042, 0, 362, 363, 364, 989,
	988, 365, 366, 367, 368, 0, 369, 370, 372, 374,
	371, 373, 378, 375, 376, 377, 380, 0, 379, 1043,
	381, 382, 383, 386, 387, 385, 1044, 384, 929, 243,
	1045, 388, 951, 999, 389, 1013, 391, 392, 0, 0,
	393, 0, 0, 0, 395, 396, 397, 0, 0, 398,
	399, 547, 1046, 400, 1047, 1027, 401, 402, 394, 403,
	404, 405, 406, 407, 408, 409, 410, 0, 411, 412,
	549, 550, 1028, 413, 552, 414, 415, 2144, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 1009, 425, 424,
	426, 0, 0, 0, 0, 0, 0, 427, 0, 429,
	430, 431, 428, 432, 433, 434, 435, 0, 436, 437,
	438, 1048, 439, 440, 441, 442, 939, 443, 0, 444,
	445, 451, 452, 446, 447, 453, 454, 455, 456, 457,
	0, 459, 460, 458, 461, 462, 463, 992, 464, 448,
	449, 465, 466, 1049, 467, 468, 1007, 0, 469, 0,
	470, 471, 472, 473, 450, 474, 479, 1052, 475, 476,
	477, 478, 1029, 0, 481, 482, 927, 480, 0, 483,
	484, 485, 486, 487, 488, 313, 489, 0, 490, 1019,
	1020, 1021, 1022, 0, 497, 0, 491, 492, 1030, 493,
	1031, 949, 494, 495, 496, 0, 498, 499, 0, 933,
	500, 501, 502, 504, 505, 503, 506, 993, 507, 0,
	0, 508, 509, 510, 564, 1016, 1051, 0, 512, 511,
	567, 0, 0, 0, 0, 513, 514, 568, 515, 516,
	517, 930, 0, 0, 0, 0, 0, 0, 926, 0,
	0, 0, 0, 0, 0, 924, 925, 971, 943, 944,
	945, 941, 942, 954, 955, 0, 0, 0, 953, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 995, 959,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	519, 1008, 0, 1015, 259, 1014, 0, 260, 261, 262,
	263, 264, 961, 994, 928, 265, 1053, 1054, 525, 0,
	266, 267, 1001, 0, 982, 0, 268, 269, 270, 271,
	272, 273, 274, 0, 0, 276, 277, 278, 275, 0,
	279, 0, 280, 3714, 282, 0, 283, 1034, 284, 285,
	985, 983, 984, 991, 987, 986, 990, 286, 287, 288,
	289, 1018, 290, 1012, 1011, 932, 294, 291, 292, 0,
	295, 293, 0, 296, 297, 0, 0, 298, 1003, 300,
	0, 301, 302, 0, 303, 304, 305, 0, 306, 307,
	938, 308, 309, 310, 312, 314, 311, 315, 316, 317,
	318, 1025, 1026, 950, 241, 0, 0, 0, 0, 0,
	319, 320, 321, 1010, 0, 0, 0, 322, 0, 323,
	0, 0, 1035, 324, 325, 1023, 1024, 326, 327, 0,
	328, 1032, 0, 960, 329, 0, 330, 331, 332, 333,
	334, 996, 997, 1000, 390, 1037, 335, 336, 0, 337,
	338, 339, 340, 0, 0, 0, 242, 341, 342, 344,
	0, 1036, 343, 1005, 1006, 0, 966, 0, 345, 1038,
	998, 1039, 346, 347, 348, 1040, 349, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 0, 356, 358, 357,
	0, 359, 1033, 1041, 360, 361, 1042, 0, 362, 363,
	364, 989, 988, 365, 366, 367, 368, 0, 369, 370,
	372, 374, 371, 373, 378, 375, 376, 377, 380, 0,
	379, 1043, 381, 382, 383, 386, 387, 385, 1044, 384,
	929, 243, 1045, 388, 951, 999, 389, 1013, 391, 392,
	0, 0, 393, 0, 934, 0, 395, 396, 397, 0,
	0, 398, 399, 547, 1046, 400, 1047, 1027, 401, 402,
	394, 403, 404, 405, 406, 407, 408, 409, 410, 0,
	411, 412, 549, 550, 1028, 413, 552, 414, 415, 0,
	416, 0, 417, 418, 419, 420, 421, 422, 423, 1009,
	425, 424, 426, 0, 0, 0, 0, 0, 0, 427,
	0, 429, 430, 431, 428, 432, 433, 434, 435, 0,
	436, 437, 438, 1048, 439, 440, 441, 442, 939, 443,
	0, 444, 445, 451, 452, 446, 447, 453, 454, 455,
	456, 457, 0, 459, 460, 458, 461, 462, 463, 992,
	464, 448, 449, 465, 466, 1049, 467, 468, 1007, 0,
	469, 0, 470, 471, 472, 473, 450, 474, 479, 1052,
	475, 476, 477, 478, 1029, 0, 481, 482, 927, 480,
	0, 483, 484, 485, 486, 487, 488, 313, 489, 0,
	490, 1019, 1020, 1021, 1022, 0, 497, 0, 491, 492,
	1030, 493, 1031, 949, 494, 495, 496, 0, 498, 499,
	0, 933, 500, 501, 502, 504, 505, 503, 506, 993,
	507, 0, 0, 508, 509, 510, 564, 1016, 1051, 0,
	512, 511, 567, 0, 0, 0, 0, 513, 514, 568,
	515, 516, 517, 930, 0, 0, 0, 0, 0, 0,
	926, 0, 0, 0, 0, 0, 0, 924, 925, 971,
	943, 944, 945, 941, 942, 954, 955, 0, 0, 0,
	953, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	995, 959, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 519, 1008, 0, 1015, 259, 1014, 0, 260,
	261, 262, 263, 264, 961, 994, 928, 265, 1053, 1054,
	525, 0, 266, 267, 1001, 0, 982, 0, 268, 269,
	270, 271, 272, 273, 274, 0, 0, 276, 277, 278,
	275, 0, 279, 0, 280, 281, 282, 0, 283, 1034,
	284, 285, 985, 983, 984, 991, 987, 986, 990, 286,
	287, 288, 289, 1018, 290, 1012, 1011, 932, 294, 291,
	292, 0, 295, 293, 0, 296, 297, 0, 0, 298,
	1003, 300, 0, 301, 302, 0, 303, 304, 305, 0,
	306, 307, 938, 308, 309, 310, 312, 314, 311, 315,
	316, 317, 318, 1025, 1026, 950, 241, 0, 0, 0,
	0, 0, 319, 320, 321, 1010, 0, 0, 0, 322,
	0, 323, 0, 0, 1035, 324, 325, 1023, 1024, 326,
	327, 0, 328, 1032, 0, 960, 329, 0, 330, 331,
	332, 333, 334, 996, 997, 1000, 390, 1037, 335, 336,
	0, 337, 338, 339, 340, 0, 0, 0, 242, 341,
	342, 344, 0, 1036, 343, 1005, 1006, 0, 966, 0,
	345, 1038, 998, 1039, 346, 347, 348, 1040, 349, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 0, 356,
	358, 357, 0, 359, 1033, 1041, 360, 361, 1042, 0,
	362, 363, 364, 989, 988, 365, 366, 367, 368, 0,
	369, 370, 372, 374, 371, 373, 378, 375, 376, 377,
	380, 0, 379, 1043, 381, 382, 383, 386, 387, 385,
	1044, 384, 929, 3393, 1045, 388, 951, 999, 389, 1013,
	391, 392, 0, 0, 393, 0, 0, 0, 395, 396,
	397, 0, 0, 398, 399, 547, 1046, 400, 1047, 1027,
	401, 402, 394, 403, 404, 405, 406, 407, 408, 409,
	410, 0, 411, 412, 549, 550, 1028, 413, 552, 414,
	415, 0, 416, 0, 417, 418, 419, 420, 421, 422,
	423, 1009, 425, 424, 426, 0, 0, 0, 0, 0,
	0, 427, 0, 429, 430, 431, 428, 432, 433, 434,
	435, 0, 436, 437, 438, 1048, 439, 440, 441, 442,
	939, 443, 0, 444, 445, 451, 452, 446, 447, 453,
	454, 455, 456, 457, 0, 459, 460, 458, 461, 462,
	463, 992, 464, 448, 449, 465, 466, 1049, 467, 468,
	1007, 0, 469, 0, 470, 471, 472, 473, 450, 474,
	479, 1052, 475, 476, 477, 478, 1029, 0, 481, 482,
	927, 480, 0, 483, 484, 485, 486, 487, 488, 313,
	489, 0, 490, 1019, 1020, 1021, 1022, 0, 497, 0,
	491, 492, 1030, 493, 1031, 949, 494, 495, 496, 0,
	498, 499, 0, 933, 500, 501, 502, 504, 505, 503,
	506, 993, 507, 0, 0, 508, 509, 510, 564, 1016,
	1051, 0, 512, 511, 567, 0, 0, 0, 0, 513,
	514, 568, 515, 516, 517, 930, 0, 0, 0, 0,
	0, 0, 926, 0, 0, 0, 0, 0, 0, 924,
	925, 1726, 0, 0, 0, 0, 0, 0, 955, 0,
	0, 0, 953, 971, 943, 944, 945, 941, 942, 954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 995, 959, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 519, 1008, 0, 1015,
	259, 1014, 0, 260, 261, 262, 263, 264, 961, 994,
	928, 265, 1053, 1054, 525, 0, 266, 267, 1001, 0,
	982, 0, 268, 269, 270, 271, 272, 273, 274, 0,
	0, 276, 277, 278, 275, 0, 279, 0, 280, 281,
	282, 0, 283, 1034, 284, 285, 985, 983, 984, 991,
	987, 986, 990, 286, 287, 288, 289, 1018, 290, 1012,
	1011, 932, 294, 291, 292, 0, 295, 293, 0, 296,
	297, 0, 0, 298, 1003, 300, 0, 301, 302, 0,
	303, 304, 305, 0, 306, 307, 938, 308, 309, 310,
	312, 314, 311, 315, 316, 317, 318, 1025, 1026, 950,
	241, 0, 0, 0, 0, 0, 319, 320, 321, 1010,
	0, 0, 0, 322, 0, 323, 0, 0, 1035, 324,
	325, 1023, 1024, 326, 327, 0, 328, 1032, 0, 960,
	329, 0, 330, 331, 332, 333, 334, 996, 997, 1000,
	390, 1037, 335, 336, 0, 337, 338, 339, 340, 0,
	0, 0, 242, 341, 342, 344, 0, 1036, 343, 1005,
	1006, 0, 966, 0, 345, 1038, 998, 1039, 346, 347,
	348, 1040, 349, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 0, 356, 358, 357, 0, 359, 1033, 1041,
	360, 361, 1042, 0, 362, 363, 364, 989, 988, 365,
	366, 367, 368, 0, 369, 370, 372, 374, 371, 373,
	378, 375, 376, 377, 380, 0, 379, 1043, 381, 382,
	383, 386, 387, 385, 1044, 384, 929, 243, 1045, 388,
	951, 999, 389, 1013, 391, 392, 0, 0, 393, 0,
	0, 0, 395, 396, 397, 0, 0, 398, 399, 547,
	1046, 400, 1047, 1027, 401, 402, 394, 403, 404, 405,
	406, 407, 408, 409, 410, 0, 411, 412, 549, 550,
	1028, 413, 552, 414, 415, 0, 416, 0, 417, 418,
	419, 420, 421, 422, 423, 1009, 425, 424, 426, 0,
	0, 0, 0, 0, 0, 427, 0, 429, 430, 431,
	428, 432, 433, 434, 435, 0, 436, 437, 438, 1048,
	439, 440, 441, 442, 939, 443, 0, 444, 445, 451,
	452, 446, 447, 453, 454, 455, 456, 457, 0, 459,
	460, 458, 461, 462, 463, 992, 464, 448, 449, 465,
	466, 1049, 467, 468, 1007, 0, 469, 0, 470, 471,
	472, 473, 450, 474, 479, 1052, 475, 476, 477, 478,
	1029, 0, 481, 482, 927, 480, 0, 483, 484, 485,
	486, 487, 488, 313, 489, 0, 490, 1019, 1020, 1021,
	1022, 0, 497, 0, 491, 492, 1030, 493, 1031, 949,
	494, 495, 496, 0, 498, 499, 0, 933, 500, 501,
	502, 504, 505, 503, 506, 993, 507, 0, 0, 508,
	509, 510, 564, 1016, 1051, 3162, 512, 511, 567, 0,
	0, 0, 0, 513, 514, 568, 515, 516, 517, 930,
	0, 0, 0, 0, 0, 0, 926, 0, 0, 0,
	0, 0, 0, 924, 925, 971, 943, 944, 945, 941,
	942, 954, 955, 0, 0, 0, 953, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 995, 959, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 519, 1008,
	0, 1015, 259, 1014, 0, 260, 261, 262, 263, 264,
	961, 994, 928, 265, 1053, 1054, 525, 0, 266, 267,
	1001, 0, 982, 0, 268, 269, 270, 271, 272, 273,
	274, 0, 0, 276, 277, 278, 275, 0, 279, 0,
	280, 281, 282, 0, 283, 1034, 284, 285, 985, 983,
	984, 991, 987, 986, 990, 286, 287, 288, 289, 1018,
	290, 1012, 1011, 932, 294, 291, 292, 0, 295, 293,
	0, 296, 297, 0, 0, 298, 1003, 300, 0, 301,
	302, 0, 303, 304, 305, 0, 306, 307, 938, 308,
	309, 310, 312, 314, 311, 315, 316, 317, 318, 1025,
	1026, 950, 241, 0, 0, 0, 0, 0, 319, 320,
	321, 1010, 0, 0, 0, 322, 0, 323, 0, 0,
	1035, 324, 325, 1023, 1024, 326, 327, 0, 328, 1032,
	0, 960, 329, 0, 330, 331, 332, 333, 334, 996,
	997, 1000, 390, 1037, 335, 336, 0, 337, 338, 339,
	340, 0, 0, 0, 242, 341, 342, 344, 0, 1036,
	343, 1005, 1006, 0, 966, 0, 345, 1038, 998, 1039,
	346, 347, 348, 1040, 349, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 0, 356, 358, 357, 0, 359,
	1033, 1041, 360, 361, 1042, 0, 362, 363, 364, 989,
	988, 365, 366, 367, 368, 0, 369, 370, 372, 374,
	371, 373, 378, 375, 376, 377, 380, 0, 379, 1043,
	381, 382, 383, 386, 387, 385, 1044, 384, 929, 243,
	1045, 388, 951, 999, 389, 1013, 391, 392, 0, 0,
	393, 0, 934, 0, 395, 396, 397, 0, 0, 398,
	399, 547, 1046, 400, 1047, 1027, 401, 402, 394, 403,
	404, 405, 406, 407, 408, 409, 410, 0, 411, 412,
	549, 550, 1028, 413, 552, 414, 415, 0, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 1009, 425, 424,
	426, 0, 0, 0, 0, 0, 0, 427, 0, 429,
	430, 431, 428, 432, 433, 434, 435, 0, 436, 437,
	438, 1048, 439, 440, 441, 442, 939, 443, 0, 444,
	445, 451, 452, 446, 447, 453, 454, 455, 456, 457,
	0, 459, 460, 458, 461, 462, 463, 992, 464, 448,
	449, 465, 466, 1049, 467, 468, 1007, 0, 469, 0,
	470, 471, 472, 473, 450, 474, 479, 1052, 475, 476,
	477, 478, 1029, 0, 481, 482, 927, 480, 0, 483,
	484, 485, 486, 487, 488, 313, 489, 0, 490, 1019,
	1020, 1021, 1022, 0, 497, 0, 491, 492, 1030, 493,
	1031, 949, 494, 495, 496, 0, 498, 499, 0, 933,
	500, 501, 502, 504, 505, 503, 506, 993, 507, 0,
	0, 508, 509, 510, 564, 1016, 1051, 0, 512, 511,
	567, 0, 0, 0, 0, 513, 514, 568, 515, 516,
	517, 930, 0, 0, 0, 0, 0, 0, 926, 0,
	0, 0, 0, 0, 0, 924, 925, 971, 943, 944,
	945, 941, 942, 954, 955, 0, 0, 0, 953, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 995, 959,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	519, 1008, 0, 1015, 259, 1014, 0, 260, 261, 262,
	263, 264, 961, 994, 928, 265, 1053, 1054, 525, 0,
	266, 267, 1001, 0, 982, 0, 268, 269, 270, 271,
	272, 273, 274, 0, 0, 276, 277, 278, 275, 0,
	279, 0, 280, 281, 282, 0, 283, 1034, 284, 285,
	985, 983, 984, 991, 987, 986, 990, 286, 287, 288,
	289, 1018, 290, 1012, 1011, 932, 294, 291, 292, 0,
	295, 293, 0, 296, 297, 0, 0, 298, 1003, 300,
	0, 301, 302, 0, 303, 304, 305, 0, 306, 307,
	938, 308, 309, 310, 312, 314, 311, 315, 316, 317,
	318, 1025, 1026, 950, 241, 0, 0, 0, 0, 0,
	319, 320, 321, 1010, 0, 0, 0, 322, 0, 323,
	0, 0, 1035, 324, 325, 1023, 1024, 326, 327, 0,
	328, 1032, 0, 960, 329, 0, 330, 331, 332, 333,
	334, 996, 997, 1000, 390, 1037, 335, 336, 0, 337,
	338, 339, 340, 0, 0, 0, 242, 341, 342, 344,
	0, 1036, 343, 1005, 1006, 0, 966, 0, 345, 1038,
	998, 1039, 346, 347, 348, 1040, 349, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 0, 356, 358, 357,
	0, 359, 1033, 1041, 360, 361, 1042, 0, 362, 363,
	364, 989, 988, 365, 366, 367, 368, 0, 369, 370,
	372, 374, 371, 373, 378, 375, 376, 377, 380, 0,
	379, 1043, 381, 382, 383, 386, 387, 385, 1044, 384,
	929, 243, 1045, 388, 951, 999, 389, 1013, 391, 392,
	0, 0, 393, 0, 0, 0, 395, 396, 397, 0,
	0, 398, 399, 547, 1046, 400, 1047, 1027, 401, 402,
	394, 403, 404, 405, 406, 407, 408, 409, 410, 0,
	411, 412, 549, 550, 1028, 413, 552, 414, 415, 0,
	416, 0, 417, 418, 419, 420, 421, 422, 423, 1009,
	425, 424, 426, 0, 0, 0, 0, 0, 0, 427,
	0, 429, 430, 431, 428, 432, 433, 434, 435, 0,
	436, 437, 438, 1048, 439, 440, 441, 442, 939, 443,
	0, 444, 445, 451, 452, 446, 447, 453, 454, 455,
	456, 457, 0, 459, 460, 458, 461, 462, 463, 992,
	464, 448, 449, 465, 466, 1049, 467, 468, 1007, 0,
	469, 0, 470, 471, 472, 473, 450, 474, 479, 1052,
	475, 476, 477, 478, 1029, 0, 481, 482, 927, 480,
	0, 483, 484, 485, 486, 487, 488, 313, 489, 0,
	490, 1019, 1020, 1021, 1022, 0, 497, 0, 491, 492,
	1030, 493, 1031, 949, 494, 495, 496, 0, 498, 499,
	0, 933, 500, 501, 502, 504, 505, 503, 506, 993,
	507, 0, 0, 508, 509, 510, 564, 1016, 1051, 0,
	512, 511, 567, 0, 0, 0, 0, 513, 514, 568,
	515, 516, 517, 930, 0, 0, 0, 0, 0, 0,
	926, 0, 0, 0, 0, 0, 0, 924, 925, 1726,
	0, 0, 0, 0, 0, 0, 955, 0, 0, 0,
	953, 971, 943, 944, 945, 941, 942, 954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 995, 959, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 519, 1008, 0, 1015, 259, 1014,
	0, 260, 261, 262, 263, 264, 961, 994, 928, 265,
	1053, 1054, 525, 0, 266, 267, 1001, 0, 982, 0,
	268, 269, 270, 271, 272, 273, 274, 0, 0, 276,
	277, 278, 275, 0, 279, 0, 280, 281, 282, 0,
	283, 1034, 284, 285, 985, 983, 984, 991, 987, 986,
	990, 286, 287, 288, 289, 1018, 290, 1012, 1011, 932,
	294, 291, 292, 0, 295, 293, 0, 296, 297, 0,
	0, 298, 1003, 300, 0, 301, 302, 0, 303, 304,
	305, 0, 306, 307, 938, 308, 309, 310, 312, 314,
	311, 315, 316, 317, 318, 1025, 1026, 950, 241, 0,
	0, 0, 0, 0, 319, 320, 321, 1010, 0, 0,
	0, 322, 0, 323, 0, 2340, 1035, 324, 325, 1023,
	1024, 326, 327, 0, 328, 1032, 0, 960, 329, 0,
	330, 331, 332, 333, 334, 996, 997, 1000, 390, 1037,
	335, 336, 0, 337, 338, 339, 340, 0, 0, 0,
	242, 341, 342, 344, 0, 1036, 343, 1005, 1006, 0,
	966, 0, 345, 1038, 998, 1039, 346, 347, 348, 1040,
	349, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	0, 356, 358, 357, 0, 359, 1033, 1041, 360, 361,
	1042, 0, 362, 363, 364, 989, 988, 365, 366, 367,
	368, 0, 369, 370, 372, 374, 371, 373, 378, 375,
	376, 377, 380, 0, 379, 1043, 381, 382, 383, 386,
	387, 385, 1044, 384, 929, 243, 1045, 388, 951, 999,
	389, 1013, 391, 392, 0, 0, 393, 0, 0, 0,
	395, 396, 397, 0, 0, 398, 399, 547, 1046, 400,
	1047, 1027, 401, 402, 394, 403, 404, 405, 406, 407,
	408, 409, 410, 0, 411, 412, 549, 550, 1028, 413,
	552, 414, 415, 0, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 1009, 425, 424, 426, 0, 0, 0,
	0, 0, 0, 427, 0, 429, 430, 431, 428, 432,
	433, 434, 435, 0, 436, 437, 438, 1048, 439, 440,
	441, 442, 939, 443, 0, 444, 445, 451, 452, 446,
	447, 453, 454, 455, 456, 457, 0, 459, 460, 458,
	461, 462, 463, 992, 464, 448, 449, 465, 466, 1049,
	467, 468, 1007, 0, 469, 0, 470, 471, 472, 473,
	450, 474, 479, 1052, 475, 476, 477, 478, 1029, 0,
	481, 482, 927, 480, 0, 483, 484, 485, 486, 487,
	488, 313, 489, 0, 490, 1019, 1020, 1021, 1022, 0,
	497, 0, 491, 492, 1030, 493, 1031, 949, 494, 495,
	496, 0, 498, 499, 0, 933, 500, 501, 502, 504,
	505, 503, 506, 993, 507, 0, 0, 508, 509, 510,
	564, 1016, 1051, 0, 512, 511, 567, 0, 0, 0,
	0, 513, 514, 568, 515, 516, 517, 930, 0, 0,
	0, 0, 0, 0, 926, 0, 0, 0, 0, 0,
	0, 924, 925, 971, 943, 944, 945, 941, 942, 954,
	955, 0, 0, 0, 953, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 995, 959, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 519, 1008, 0, 1015,
	259, 1014, 0, 260, 261, 262, 263, 264, 961, 994,
	928, 265, 1053, 1054, 525, 0, 266, 267, 1001, 0,
	982, 0, 268, 269, 270, 271, 272, 273, 274, 0,
	0, 276, 277, 278, 275, 0, 279, 0, 280, 281,
	282, 0, 283, 1034, 284, 285, 985, 983, 984, 991,
	987, 986, 990, 286, 287, 288, 289, 1018, 290, 1012,
	1011, 932, 294, 291, 292, 0, 295, 293, 0, 296,
	297, 0, 0, 298, 1003, 300, 0, 301, 302, 0,
	303, 304, 305, 0, 306, 307, 938, 308, 309, 310,
	312, 314, 311, 315, 316, 317, 318, 1025, 1026, 950,
	241, 0, 0, 0, 0, 0, 319, 320, 321, 1010,
	0, 0, 0, 322, 0, 323, 0, 0, 1035, 324,
	325, 1023, 1024, 326, 327, 0, 328, 1032, 0, 960,
	329, 0, 330, 331, 332, 333, 334, 996, 997, 1000,
	390, 1037, 335, 336, 0, 337, 338, 339, 340, 0,
	0, 0, 242, 341, 342, 344, 0, 1036, 343, 1005,
	1006, 0, 966, 0, 345, 1038, 998, 1039, 346, 347,
	348, 1040, 349, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 0, 356, 358, 357, 0, 359, 1033, 1041,
	360, 361, 1042, 0, 362, 363, 364, 989, 988, 365,
	366, 367, 368, 0, 369, 370, 372, 374, 371, 373,
	378, 375, 376, 377, 380, 0, 379, 1043, 381, 382,
	383, 386, 387, 385, 1044, 384, 929, 243, 1045, 388,
	951, 999, 389, 1013, 391, 392, 0, 0, 393, 0,
	0, 0, 395, 396, 397, 0, 0, 398, 399, 547,
	1046, 400, 1047, 1027, 401, 402, 394, 403, 404, 405,
	406, 407, 408, 409, 410, 0, 411, 412, 549, 550,
	1028, 413, 552, 414, 415, 0, 416, 0, 417, 418,
	419, 420, 421, 422, 423, 1009, 425, 424, 426, 0,
	0, 0, 0, 0, 0, 427, 0, 429, 430, 431,
	428, 432, 433, 434, 435, 0, 436, 437, 438, 1048,
	439, 440, 441, 442, 939, 443, 0, 444, 445, 451,
	452, 446, 447, 453, 454, 455, 456, 457, 0, 459,
	460, 458, 461, 462, 463, 992, 464, 448, 449, 465,
	466, 1049, 467, 468, 1007, 0, 469, 0, 470, 471,
	472, 473, 450, 474, 479, 1052, 475, 476, 477, 478,
	1029, 0, 481, 482, 927, 480, 0, 483, 484, 485,
	486, 487, 488, 313, 489, 0, 490, 1019, 1020, 1021,
	1022, 0, 497, 0, 491, 492, 1030, 493, 1031, 949,
	494, 495, 496, 0, 498, 499, 0, 933, 500, 501,
	502, 504, 505, 503, 506, 993, 507, 0, 0, 508,
	509, 510, 564, 1016, 1051, 0, 512, 511, 567, 0,
	0, 0, 0, 513, 514, 568, 515, 516, 517, 930,
	0, 0, 0, 0, 0, 0, 926, 0, 0, 0,
	0, 0, 0, 924, 925, 0, 0, 0, 0, 0,
	0, 0, 955, 1656, 0, 2345, 953, 971, 943, 944,
	945, 941, 942, 954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 995, 959,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	519, 1008, 0, 1015, 259, 1014, 0, 260, 261, 262,
	263, 264, 961, 994, 928, 265, 1053, 1054, 525, 0,
	266, 267, 1001, 0, 982, 0, 268, 269, 270, 271,
	272, 273, 274, 0, 0, 276, 277, 278, 275, 0,
	279, 0, 280, 281, 282, 0, 283, 1034, 284, 285,
	985, 983, 984, 991, 987, 986, 990, 286, 287, 288,
	289, 1018, 290, 1012, 1011, 932, 294, 291, 292, 0,
	295, 293, 0, 296, 297, 0, 0, 298, 1003, 300,
	0, 301, 302, 0, 303, 304, 305, 0, 306, 307,
	938, 308, 309, 310, 312, 314, 311, 315, 316, 317,
	318, 1025, 1026, 950, 241, 0, 0, 0, 0, 0,
	319, 320, 321, 1010, 0, 0, 0, 322, 0, 323,
	0, 0, 1035, 324, 325, 1023, 1024, 326, 327, 0,
	328, 1032, 0, 960, 329, 0, 330, 331, 332, 333,
	334, 996, 997, 1000, 390, 1037, 335, 336, 0, 337,
	338, 339, 340, 0, 0, 0, 242, 341, 342, 344,
	0, 1036, 343, 1005, 1006, 0, 966, 0, 345, 1038,
	998, 1039, 346, 347, 348, 1040, 349, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 0, 356, 358, 357,
	0, 359, 1033, 1041, 360, 361, 1042, 0, 362, 363,
	364, 989, 988, 365, 366, 367, 368, 0, 369, 370,
	372, 374, 371, 373, 378, 375, 376, 377, 380, 0,
	379, 1043, 381, 382, 383, 386, 387, 385, 1044, 384,
	929, 243, 1045, 388, 951, 999, 389, 1013, 391, 392,
	0, 0, 393, 0, 0, 0, 395, 396, 397, 0,
	0, 398, 399, 547, 1046, 400, 1047, 1027, 401, 402,
	394, 403, 404, 405, 406, 407, 408, 409, 410, 0,
	411, 412, 549, 550, 1028, 413, 552, 414, 415, 0,
	416, 0, 417, 418, 419, 420, 421, 422, 423, 1009,
	425, 424, 426, 0, 0, 0, 0, 0, 0, 427,
	0, 429, 430, 431, 428, 432, 433, 434, 435, 0,
	436, 437, 438, 1048, 439, 440, 441, 442, 939, 443,
	0, 444, 445, 451, 452, 446, 447, 453, 454, 455,
	456, 457, 0, 459, 460, 458, 461, 462, 463, 992,
	464, 448, 449, 465, 466, 1049, 467, 468, 1007, 0,
	469, 0, 470, 471, 472, 473, 450, 474, 479, 1052,
	475, 476, 477, 478, 1029, 0, 481, 482, 927, 480,
	0, 483, 484, 485, 486, 487, 488, 313, 489, 0,
	490, 1019, 1020, 1021, 1022, 0, 497, 0, 491, 492,
	1030, 493, 1031, 949, 494, 495, 496, 0, 498, 499,
	0, 933, 500, 501, 502, 504, 505, 503, 506, 993,
	507, 0, 0, 508, 509, 510, 564, 1016, 1051, 0,
	512, 511, 567, 0, 0, 0, 0, 513, 514, 568,
	515, 516, 517, 930, 0, 0, 0, 0, 0, 0,
	926, 0, 0, 0, 0, 0, 0, 924, 925, 0,
	0, 0, 0, 0, 0, 0, 955, 0, 0, 2343,
	953, 971, 943, 944, 945, 941, 942, 954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 995, 959, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 519, 1008, 0, 1015, 259, 1014,
	0, 260, 261, 262, 263, 264, 961, 994, 928, 265,
	1053, 1054, 525, 0, 266, 267, 1001, 0, 982, 0,
	268, 269, 270, 271, 272, 273, 274, 0, 0, 276,
	277, 278, 275, 0, 279, 0, 280, 281, 282, 0,
	283, 1034, 284, 285, 985, 983, 984, 991, 987, 986,
	990, 286, 287, 288, 289, 1018, 290, 1012, 1011, 932,
	294, 291, 292, 0, 295, 293, 0, 296, 297, 0,
	0, 298, 1003, 300, 0, 301, 302, 0, 303, 304,
	305, 0, 306, 307, 938, 308, 309, 310, 312, 314,
	311, 315, 316, 317, 318, 1025, 1026, 950, 241, 0,
	0, 0, 0, 0, 319, 320, 321, 1010, 0, 0,
	0, 322, 0, 323, 0, 0, 1035, 324, 325, 1023,
	1024, 326, 327, 0, 328, 1032, 0, 960, 329, 0,
	330, 331, 332, 333, 334, 996, 997, 1000, 390, 1037,
	335, 336, 0, 337, 338, 339, 340, 0, 0, 0,
	242, 341, 342, 344, 0, 1036, 343, 1005, 1006, 0,
	966, 0, 345, 1038, 998, 1039, 346, 347, 348, 1040,
	349, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	0, 356, 358, 357, 0, 359, 1033, 1041, 360, 361,
	1042, 0, 362, 363, 364, 989, 988, 365, 366, 367,
	368, 0, 369, 370, 372, 374, 371, 373, 378, 375,
	376, 377, 380, 0, 379, 1043, 381, 382, 383, 386,
	387, 385, 1044, 384, 929, 243, 1045, 388, 951, 999,
	389, 1013, 391, 392, 0, 0, 393, 0, 0, 0,
	395, 396, 397, 0, 0, 398, 399, 547, 1046, 400,
	1047, 1027, 401, 402, 394, 403, 404, 405, 406, 407,
	408, 409, 410, 0, 411, 412, 549, 550, 1028, 413,
	552, 414, 415, 0, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 1009, 425, 424, 426, 0, 0, 0,
	0, 0, 0, 427, 0, 429, 430, 431, 428, 432,
	433, 434, 435, 0, 436, 437, 438, 1048, 439, 440,
	441, 442, 939, 443, 0, 444, 445, 451, 452, 446,
	447, 453, 454, 455, 456, 457, 0, 459, 460, 458,
	461, 462, 463, 992, 464, 448, 449, 465, 466, 1049,
	467, 468, 1007, 0, 469, 0, 470, 471, 472, 473,
	450, 474, 479, 1052, 475, 476, 477, 478, 1029, 0,
	481, 482, 927, 480, 0, 483, 484, 485, 486, 487,
	488, 313, 489, 0, 490, 1019, 1020, 1021, 1022, 0,
	497, 0, 491, 492, 1030, 493, 1031, 949, 494, 495,
	496, 0, 498, 499, 0, 933, 500, 501, 502, 504,
	505, 503, 506, 993, 507, 0, 0, 508, 509, 510,
	564, 1016, 1051, 0, 512, 511, 567, 0, 0, 0,
	0, 513, 514, 568, 515, 516, 517, 930, 0, 0,
	0, 0, 0, 0, 926, 0, 0, 0, 0, 0,
	0, 924, 925, 0, 0, 0, 0, 0, 0, 0,
	955, 0, 0, 2331, 953, 971, 943, 944, 945, 941,
	942, 954, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 995, 959, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 519, 1008,
	0, 1015, 259, 1014, 0, 260, 261, 262, 263, 264,
	961, 994, 928, 265, 1053, 1054, 525, 0, 266, 267,
	1001, 0, 982, 0, 268, 269, 270, 271, 272, 273,
	274, 0, 0, 276, 277, 278, 275, 0, 279, 0,
	280, 281, 282, 0, 283, 1034, 284, 285, 985, 983,
	984, 991, 987, 986, 990, 286, 287, 288, 289, 1018,
	290, 1012, 1011, 932, 294, 291, 292, 0, 295, 293,
	0, 296, 297, 0, 0, 298, 1003, 300, 0, 301,
	302, 0, 303, 304, 305, 0, 306, 307, 938, 308,
	309, 310, 312, 314, 311, 315, 316, 317, 318, 1025,
	1026, 950, 241, 0, 0, 0, 0, 0, 319, 320,
	321, 1010, 0, 0, 0, 322, 0, 323, 0, 0,
	1035, 324, 325, 1023, 1024, 326, 327, 0, 328, 1032,
	0, 960, 329, 0, 330, 331, 332, 333, 334, 996,
	997, 1000, 390, 1037, 335, 336, 0, 337, 338, 339,
	340, 0, 0, 0, 242, 341, 342, 344, 0, 1036,
	343, 1005, 1006, 0, 966, 0, 345, 1038, 998, 1039,
	346, 347, 348, 1040, 349, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 0, 356, 358, 357, 0, 359,
	1033, 1041, 360, 361, 1042, 0, 362, 363, 364, 989,
	988, 365, 366, 367, 368, 0, 369, 370, 372, 374,
	371, 373, 378, 375, 376, 377, 380, 0, 379, 1043,
	381, 382, 383, 386, 387, 385, 1044, 384, 929, 243,
	1045, 388, 951, 999, 389, 1013, 391, 392, 0, 0,
	393, 0, 0, 0, 395, 396, 397, 0, 0, 398,
	399, 547, 1046, 400, 1047, 1027, 401, 402, 394, 403,
	404, 405, 406, 407, 408, 409, 410, 0, 411, 412,
	549, 550, 1028, 413, 552, 414, 415, 0, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 1009, 425, 424,
	426, 0, 0, 0, 0, 0, 0, 427, 0, 429,
	430, 431, 428, 432, 433, 434, 435, 0, 436, 437,
	438, 1048, 439, 440, 441, 442, 939, 443, 0, 444,
	445, 451, 452, 446, 447, 453, 454, 455, 456, 457,
	0, 459, 460, 458, 461, 462, 463, 992, 464, 448,
	449, 465, 466, 1049, 467, 468, 1007, 0, 469, 0,
	470, 471, 472, 473, 450, 474, 479, 1052, 475, 476,
	477, 478, 1029, 0, 481, 482, 927, 480, 0, 483,
	484, 485, 486, 487, 488, 313, 489, 0, 490, 1019,
	1020, 1021, 1022, 0, 497, 0, 491, 492, 1030, 493,
	1031, 949, 494, 495, 496, 0, 498, 499, 0, 933,
	500, 501, 502, 504, 505, 503, 506, 993, 507, 0,
	0, 508, 509, 510, 564, 1016, 1051, 0, 512, 511,
	567, 0, 0, 0, 0, 513, 514, 568, 515, 516,
	517, 930, 0, 0, 0, 0, 0, 0, 926, 0,
	0, 0, 0, 0, 0, 924, 925, 0, 0, 0,
	0, 0, 0, 0, 955, 0, 0, 2320, 953, 971,
	943, 944, 945, 941, 942, 954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	995, 959, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 519, 1008, 0, 1015, 259, 1014, 0, 260,
	261, 262, 263, 264, 961, 994, 928, 265, 1053, 1054,
	525, 0, 266, 267, 1001, 0, 982, 0, 268, 269,
	270, 271, 272, 273, 274, 0, 0, 276, 277, 278,
	275, 0, 279, 0, 280, 281, 282, 0, 283, 1034,
	284, 285, 985, 983, 984, 991, 987, 986, 990, 286,
	287, 288, 289, 1018, 290, 1012, 1011, 932, 294, 291,
	292, 0, 295, 293, 0, 296, 297, 0, 0, 298,
	1003, 300, 0, 301, 302, 0, 303, 304, 305, 0,
	306, 307, 938, 308, 309, 310, 312, 314, 311, 315,
	316, 317, 318, 1025, 1026, 950, 241, 0, 0, 0,
	0, 0, 319, 320, 321, 1010, 0, 0, 0, 322,
	0, 323, 0, 0, 1035, 324, 325, 1023, 1024, 326,
	327, 0, 328, 1032, 0, 960, 329, 0, 330, 331,
	332, 333, 334, 996, 997, 1000, 390, 1037, 335, 336,
	0, 337, 338, 339, 340, 0, 0, 0, 242, 341,
	342, 344, 0, 1036, 343, 1005, 1006, 0, 966, 0,
	345, 1038, 998, 1039, 346, 347, 348, 1040, 349, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 0, 356,
	358, 357, 0, 359, 1033, 1041, 360, 361, 1042, 0,
	362, 363, 364, 989, 988, 365, 366, 367, 368, 0,
	369, 370, 372, 374, 371, 373, 378, 375, 376, 377,
	380, 0, 379, 1043, 381, 382, 383, 386, 387, 385,
	1044, 384, 929, 243, 1045, 388, 951, 999, 389, 1013,
	391, 392, 0, 0, 393, 0, 0, 0, 395, 396,
	397, 0, 0, 398, 399, 547, 1046, 400, 1047, 1027,
	401, 402, 394, 403, 404, 405, 406, 407, 408, 409,
	410, 0, 411, 412, 549, 550, 1028, 413, 552, 414,
	415, 0, 416, 0, 417, 418, 419, 420, 421, 422,
	423, 1009, 425, 424, 426, 0, 0, 0, 0, 0,
	0, 427, 0, 429, 430, 431, 428, 432, 433, 434,
	435, 0, 436, 437, 438, 1048, 439, 440, 441, 442,
	939, 443, 0, 444, 445, 451, 452, 446, 447, 453,
	454, 455, 456, 457, 0, 459, 460, 458, 461, 462,
	463, 992, 464, 448, 449, 465, 466, 1049, 467, 468,
	1007, 0, 469, 0, 470, 471, 472, 473, 450, 474,
	479, 1052, 475, 476, 477, 478, 1029, 0, 481, 482,
	927, 480, 0, 483, 484, 485, 486, 487, 488, 313,
	489, 0, 490, 1019, 1020, 1021, 1022, 0, 497, 0,
	491, 492, 1030, 493, 1031, 949, 494, 495, 496, 0,
	498, 499, 0, 933, 500, 501, 502, 504, 505, 503,
	506, 993, 507, 0, 0, 508, 509, 510, 564, 1016,
	1051, 0, 512, 511, 567, 0, 0, 0, 0, 513,
	514, 568, 515, 516, 517, 930, 0, 0, 0, 0,
	0, 0, 926, 0, 0, 0, 0, 0, 0, 924,
	925, 0, 0, 0, 0, 0, 0, 0, 955, 0,
	0, 2318, 953, 2309, 2316, 944, 945, 941, 942, 954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 995, 959, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 519, 1008, 0, 1015,
	259, 1014, 0, 260, 261, 262, 263, 264, 961, 994,
	928, 265, 1053, 1054, 525, 0, 266, 267, 1001, 0,
	982, 0, 268, 269, 270, 271, 272, 273, 274, 0,
	0, 276, 277, 278, 275, 0, 279, 0, 280, 281,
	282, 0, 283, 1034, 284, 285, 985, 983, 984, 991,
	987, 986, 990, 286, 287, 288, 289, 1018, 2312, 1012,
	1011, 932, 294, 291, 292, 0, 295, 293, 0, 296,
	297, 0, 0, 298, 1003, 300, 0, 301, 302, 0,
	303, 304, 305, 0, 306, 307, 938, 308, 309, 310,
	312, 314, 311, 315, 316, 317, 318, 1025, 1026, 950,
	241, 0, 0, 0, 0, 0, 319, 320, 321, 1010,
	0, 0, 0, 322, 0, 323, 0, 0, 1035, 324,
	325, 1023, 1024, 326, 327, 0, 328, 1032, 0, 960,
	329, 0, 330, 331, 332, 2313, 334, 996, 997, 1000,
	390, 1037, 335, 336, 0, 337, 338, 339, 340, 0,
	0, 0, 242, 341, 342, 344, 0, 1036, 343, 1005,
	1006, 0, 966, 0, 345, 1038, 998, 1039, 346, 347,
	348, 1040, 349, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 0, 356, 358, 357, 0, 359, 1033, 1041,
	360, 361, 1042, 0, 362, 363, 364, 989, 988, 365,
	366, 367, 368, 0, 369, 370, 372, 374, 371, 2314,
	2311, 375, 376, 377, 380, 0, 379, 1043, 381, 382,
	383, 386, 387, 385, 1044, 384, 929, 243, 1045, 388,
	951, 999, 389, 1013, 391, 392, 0, 0, 393, 0,
	0, 0, 395, 396, 397, 0, 0, 398, 399, 547,
	1046, 400, 1047, 1027, 401, 402, 394, 403, 404, 405,
	406, 407, 408, 409, 410, 0, 411, 412, 549, 550,
	1028, 413, 552, 414, 415, 0, 416, 0, 417, 418,
	419, 420, 421, 422, 423, 1009, 425, 424, 426, 0,
	0, 0, 0, 0, 0, 427, 0, 429, 430, 431,
	428, 432, 433, 434, 435, 0, 436, 437, 438, 1048,
	439, 440, 441, 442, 939, 443, 0, 444, 445, 451,
	452, 446, 447, 453, 454, 455, 456, 2315, 0, 459,
	460, 458, 461, 462, 463, 992, 464, 448, 449, 465,
	466, 1049, 467, 468, 1007, 0, 469, 0, 470, 471,
	472, 473, 450, 474, 479, 1052, 475, 476, 477, 478,
	1029, 0, 481, 482, 927, 480, 0, 483, 484, 485,
	486, 487, 488, 313, 489, 0, 490, 1019, 1020, 1021,
	1022, 0, 497, 0, 491, 492, 1030, 493, 1031, 949,
	494, 495, 496, 0, 498, 499, 0, 933, 500, 501,
	502, 504, 505, 503, 506, 993, 507, 0, 0, 508,
	509, 510, 564, 1016, 1051, 0, 512, 511, 567, 0,
	0, 0, 0, 513, 514, 568, 515, 2310, 517, 930,
	0, 0, 0, 0, 0, 0, 926, 0, 0, 0,
	0, 0, 0, 924, 925, 0, 0, 0, 0, 0,
	0, 0, 955, 0, 0, 2306, 953, 2309, 2316, 944,
	945, 941, 942, 954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 995, 959,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	519, 1008, 0, 1015, 259, 1014, 0, 260, 261, 262,
	263, 264, 961, 994, 928, 265, 1053, 1054, 525, 0,
	266, 267, 1001, 0, 982, 0, 268, 269, 270, 271,
	272, 273, 274, 0, 0, 276, 277, 278, 275, 0,
	279, 0, 280, 281, 282, 0, 283, 1034, 284, 285,
	985, 983, 984, 991, 987, 986, 990, 286, 287, 288,
	289, 1018, 2312, 1012, 1011, 932, 294, 291, 292, 0,
	295, 293, 0, 296, 297, 0, 0, 298, 1003, 300,
	0, 301, 302, 0, 303, 304, 305, 0, 306, 307,
	938, 308, 309, 310, 312, 314, 311, 315, 316, 317,
	318, 1025, 1026, 950, 241, 0, 0, 0, 0, 0,
	319, 320, 321, 1010, 0, 0, 0, 322, 0, 323,
	0, 0, 1035, 324, 325, 1023, 1024, 326, 327, 0,
	328, 1032, 0, 960, 329, 0, 330, 331, 332, 2313,
	334, 996, 997, 1000, 390, 1037, 335, 336, 0, 337,
	338, 339, 340, 0, 0, 0, 242, 341, 342, 344,
	0, 1036, 343, 1005, 1006, 0, 966, 0, 345, 1038,
	998, 1039, 346, 347, 348, 1040, 349, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 0, 356, 358, 357,
	0, 359, 1033, 1041, 360, 361, 1042, 0, 362, 363,
	364, 989, 988, 365, 366, 367, 368, 0, 369, 370,
	372, 374, 371, 2314, 2311, 375, 376, 377, 380, 0,
	379, 1043, 381, 382, 383, 386, 387, 385, 1044, 384,
	929, 243, 1045, 388, 951, 999, 389, 1013, 391, 392,
	0, 0, 393, 0, 0, 0, 395, 396, 397, 0,
	0, 398, 399, 547, 1046, 400, 1047, 1027, 401, 402,
	394, 403, 404, 405, 406, 407, 408, 409, 410, 0,
	411, 412, 549, 550, 1028, 413, 552, 414, 415, 0,
	416, 0, 417, 418, 419, 420, 421, 422, 423, 1009,
	425, 424, 426, 0, 0, 0, 0, 0, 0, 427,
	0, 429, 430, 431, 428, 432, 433, 434, 435, 0,
	436, 437, 438, 1048, 439, 440, 441, 442, 939, 443,
	0, 444, 445, 451, 452, 446, 447, 453, 454, 455,
	456, 2315, 0, 459, 460, 458, 461, 462, 463, 992,
	464, 448, 449, 465, 466, 1049, 467, 468, 1007, 0,
	469, 0, 470, 471, 472, 473, 450, 474, 479, 1052,
	475, 476, 477, 478, 1029, 0, 481, 482, 927, 480,
	0, 483, 484, 485, 486, 487, 488, 313, 489, 0,
	490, 1019, 1020, 1021, 1022, 0, 497, 0, 491, 492,
	1030, 493, 1031, 949, 494, 495, 496, 0, 498, 499,
	0, 933, 500, 501, 502, 504, 505, 503, 506, 993,
	507, 0, 0, 508, 509, 510, 564, 1016, 1051, 0,
	512, 511, 567, 0, 0, 0, 0, 513, 514, 568,
	515, 2310, 517, 930, 0, 0, 0, 0, 0, 0,
	926, 0, 0, 0, 0, 0, 0, 924, 925, 971,
	943, 944, 945, 941, 942, 954, 955, 0, 0, 0,
	953, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	995, 959, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 519, 1008, 0, 1015, 259, 1014, 0, 260,
	261, 262, 263, 264, 961, 994, 928, 265, 1053, 1054,
	525, 0, 266, 267, 1001, 0, 982, 0, 268, 269,
	270, 271, 272, 273, 274, 0, 0, 276, 277, 278,
	275, 0, 279, 0, 280, 281, 282, 0, 283, 1034,
	284, 285, 985, 983, 984, 991, 987, 986, 990, 286,
	287, 288, 289, 1018, 290, 1012, 1011, 932, 294, 291,
	292, 0, 295, 293, 0, 296, 297, 0, 0, 298,
	1003, 300, 0, 301, 302, 0, 303, 304, 305, 0,
	306, 307, 938, 308, 309, 310, 312, 314, 311, 315,
	316, 317, 318, 1025, 1026, 950, 241, 0, 0, 0,
	0, 0, 319, 320, 321, 1010, 0, 0, 0, 322,
	0, 323, 0, 0, 1035, 324, 325, 1023, 1024, 326,
	327, 0, 328, 1032, 0, 960, 329, 0, 330, 331,
	332, 333, 334, 996, 997, 1000, 390, 1037, 335, 336,
	0, 337, 338, 339, 340, 0, 0, 0, 242, 341,
	342, 344, 0, 1036, 343, 1005, 1006, 0, 966, 0,
	345, 1038, 998, 1039, 346, 347, 348, 1040, 349, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 0, 356,
	358, 357, 0, 359, 1033, 1041, 360, 361, 1042, 0,
	362, 363, 364, 989, 988, 365, 366, 367, 368, 0,
	369, 370, 372, 374, 371, 373, 378, 375, 376, 377,
	380, 0, 379, 1043, 381, 382, 383, 386, 387, 385,
	1044, 384, 929, 243, 1045, 388, 951, 999, 389, 1013,
	391, 392, 0, 0, 393, 0, 0, 0, 395, 396,
	397, 0, 0, 398, 399, 547, 1046, 400, 1047, 1027,
	401, 402, 394, 403, 404, 405, 406, 407, 408, 409,
	410, 0, 411, 412, 549, 550, 1028, 413, 552, 414,
	415, 0, 416, 0, 417, 418, 419, 420, 421, 422,
	423, 1009, 425, 424, 426, 0, 0, 0, 0, 0,
	0, 427, 0, 429, 430, 431, 428, 432, 433, 434,
	435, 0, 436, 437, 438, 1048, 439, 440, 441, 442,
	939, 443, 0, 444, 445, 451, 452, 446, 447, 453,
	454, 455, 456, 457, 0, 459, 460, 458, 461, 462,
	463, 992, 464, 448, 449, 465, 466, 1049, 467, 468,
	1007, 0, 469, 0, 470, 471, 472, 473, 450, 474,
	479, 1052, 475, 476, 477, 478, 1029, 0, 481, 482,
	927, 480, 0, 483, 484, 485, 486, 487, 488, 313,
	489, 0, 490, 1019, 1020, 1021, 1022, 0, 497, 0,
	491, 492, 1030, 493, 1031, 949, 494, 495, 496, 0,
	498, 499, 0, 933, 500, 501, 502, 504, 505, 503,
	506, 993, 507, 0, 0, 508, 509, 510, 564, 1016,
	1051, 0, 512, 511, 567, 0, 0, 0, 0, 513,
	514, 568, 515, 516, 517, 930, 0, 0, 0, 0,
	0, 0, 926, 0, 0, 0, 0, 0, 0, 924,
	925, 0, 0, 0, 0, 0, 1664, 0, 955, 0,
	0, 0, 953, 971, 943, 944, 945, 941, 942, 954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 2124, 250, 251, 0,
	0, 0, 0, 0, 995, 959, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 519, 1008, 0, 1015,
	259, 1014, 0, 260, 261, 262, 263, 264, 961, 994,
	928, 265, 1053, 1054, 525, 0, 266, 267, 1001, 0,
	982, 0, 268, 269, 270, 271, 272, 273, 274, 0,
	0, 276, 277, 278, 275, 0, 279, 0, 280, 281,
	282, 0, 283, 1034, 284, 285, 985, 983, 984, 991,
	987, 986, 990, 286, 287, 288, 289, 1018, 290, 1012,
	1011, 932, 294, 291, 292, 0, 295, 293, 0, 296,
	297, 0, 0, 298, 1003, 300, 0, 301, 302, 0,
	303, 304, 305, 0, 306, 307, 938, 308, 309, 310,
	312, 314, 311, 315, 316, 317, 318, 1025, 1026, 950,
	241, 0, 0, 0, 0, 0, 319, 320, 321, 1010,
	0, 0, 0, 322, 0, 323, 0, 0, 1035, 324,
	325, 1023, 1024, 326, 327, 0, 328, 1032, 0, 960,
	329, 0, 330, 331, 332, 333, 334, 996, 997, 1000,
	390, 1037, 335, 336, 0, 337, 338, 339, 340, 0,
	0, 0, 242, 341, 342, 344, 0, 1036, 343, 1005,
	1006, 0, 966, 0, 345, 1038, 998, 1039, 346, 347,
	348, 1040, 349, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 0, 356, 358, 357, 0, 359, 1033, 1041,
	360, 361, 1042, 0, 362, 363, 364, 989, 988, 365,
	366, 367, 368, 0, 369, 370, 372, 374, 371, 373,
	378, 375, 376, 377, 380, 0, 379, 1043, 381, 382,
	383, 386, 387, 385, 1044, 384, 929, 243, 1045, 388,
	951, 999, 389, 1013, 391, 392, 0, 0, 393, 0,
	0, 0, 395, 396, 397, 0, 0, 398, 399, 547,
	1046, 400, 1047, 1027, 401, 402, 394, 403, 404, 405,
	406, 407, 408, 409, 410, 0, 411, 412, 549, 550,
	1028, 413, 552, 414, 415, 0, 416, 0, 417, 418,
	419, 420, 421, 422, 423, 1009, 425, 424, 426, 0,
	0, 0, 0, 0, 0, 427, 0, 429, 430, 431,
	428, 432, 433, 434, 435, 0, 436, 437, 438, 1048,
	439, 440, 441, 442, 939, 443, 0, 444, 445, 451,
	452, 446, 447, 453, 454, 455, 456, 457, 0, 459,
	460, 458, 461, 462, 463, 992, 464, 448, 449, 465,
	466, 1049, 467, 468, 1007, 0, 469, 0, 470, 471,
	472, 473, 450, 474, 479, 1052, 475, 476, 477, 478,
	1029, 0, 481, 482, 927, 480, 0, 483, 484, 485,
	486, 487, 488, 313, 489, 0, 490, 1019, 1020, 1021,
	1022, 0, 497, 0, 491, 492, 1030, 493, 1031, 949,
	494, 495, 496, 0, 498, 499, 0, 933, 500, 501,
	502, 504, 505, 503, 506, 993, 507, 0, 0, 508,
	509, 510, 564, 1016, 1051, 0, 512, 511, 567, 0,
	0, 0, 0, 513, 514, 568, 515, 516, 517, 930,
	0, 0, 0, 0, 0, 0, 926, 0, 0, 0,
	0, 0, 0, 924, 925, 0, 0, 0, 0, 0,
	0, 0, 955, 0, 0, 1516, 953, 971, 943, 944,
	945, 941, 942, 954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 995, 959,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	519, 1008, 0, 1015, 259, 1014, 0, 260, 261, 262,
	263, 264, 961, 994, 928, 265, 1053, 1054, 525, 0,
	266, 267, 1001, 0, 982, 0, 268, 269, 270, 271,
	272, 273, 274, 0, 0, 276, 277, 278, 275, 0,
	279, 0, 280, 281, 282, 0, 283, 1034, 284, 285,
	985, 983, 984, 991, 987, 986, 990, 286, 287, 288,
	289, 1018, 290, 1012, 1011, 932, 294, 291, 292, 0,
	295, 293, 0, 296, 297, 0, 0, 298, 1003, 300,
	0, 301, 302, 0, 303, 304, 305, 0, 306, 307,
	938, 308, 309, 310, 312, 314, 311, 315, 316, 317,
	318, 1025, 1026, 950, 241, 0, 0, 0, 0, 0,
	319, 320, 321, 1010, 0, 0, 0, 322, 0, 323,
	0, 0, 1035, 324, 325, 1023, 1024, 326, 327, 0,
	328, 1032, 0, 960, 329, 0, 330, 331, 332, 333,
	334, 996, 997, 1000, 390, 1037, 335, 336, 0, 337,
	338, 339, 340, 0, 0, 0, 242, 341, 342, 344,
	0, 1036, 343, 1005, 1006, 0, 966, 0, 345, 1038,
	998, 1039, 346, 347, 348, 1040, 349, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 0, 356, 358, 357,
	0, 359, 1033, 1041, 360, 361, 1042, 0, 362, 363,
	364, 989, 988, 365, 366, 367, 368, 0, 369, 370,
	372, 374, 371, 373, 378, 375, 376, 377, 380, 0,
	379, 1043, 381, 382, 383, 386, 387, 385, 1044, 384,
	929, 243, 1045, 388, 951, 999, 389, 1013, 391, 392,
	0, 0, 393, 0, 0, 0, 395, 396, 397, 0,
	0, 398, 399, 547, 1046, 400, 1047, 1027, 401, 402,
	394, 403, 404, 405, 406, 407, 408, 409, 410, 0,
	411, 412, 549, 550, 1028, 413, 552, 414, 415, 0,
	416, 0, 417, 418, 419, 420, 421, 422, 423, 1009,
	425, 424, 426, 0, 0, 0, 0, 0, 0, 427,
	0, 429, 430, 431, 428, 432, 433, 434, 435, 0,
	436, 437, 438, 1048, 439, 440, 441, 442, 939, 443,
	0, 444, 445, 451, 452, 446, 447, 453, 454, 455,
	456, 457, 0, 459, 460, 458, 461, 462, 463, 992,
	464, 448, 449, 465, 466, 1049, 467, 468, 1007, 0,
	469, 0, 470, 471, 472, 473, 450, 474, 479, 1052,
	475, 476, 477, 478, 1029, 0, 481, 482, 927, 480,
	0, 483, 484, 485, 486, 487, 488, 313, 489, 0,
	490, 1019, 1020, 1021, 1022, 0, 497, 0, 491, 492,
	1030, 493, 1031, 949, 494, 495, 496, 0, 498, 499,
	0, 933, 500, 501, 502, 504, 505, 503, 506, 993,
	507, 0, 0, 508, 509, 510, 564, 1016, 1051, 0,
	512, 511, 567, 0, 0, 0, 0, 513, 514, 568,
	515, 516, 517, 930, 0, 0, 0, 0, 0, 0,
	926, 0, 0, 0, 0, 0, 0, 924, 925, 0,
	0, 0, 0, 0, 0, 0, 955, 0, 0, 1454,
	953, 971, 943, 944, 945, 941, 942, 954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 995, 959, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 519, 1008, 0, 1015, 259, 1014,
	0, 260, 261, 262, 263, 264, 961, 994, 928, 265,
	1053, 1054, 525, 0, 266, 267, 1001, 0, 982, 0,
	268, 269, 270, 271, 272, 273, 274, 0, 0, 276,
	277, 278, 275, 0, 279, 0, 280, 281, 282, 0,
	283, 1034, 284, 285, 985, 983, 984, 991, 987, 986,
	990, 286, 287, 288, 289, 1018, 290, 1012, 1011, 932,
	294, 291, 292, 0, 295, 293, 0, 296, 297, 0,
	0, 298, 1003, 300, 0, 301, 302, 0, 303, 304,
	305, 0, 306, 307, 938, 308, 309, 310, 312, 314,
	311, 315, 316, 317, 318, 1025, 1026, 950, 241, 0,
	0, 0, 0, 0, 319, 320, 321, 1010, 0, 0,
	0, 322, 0, 323, 0, 0, 1035, 324, 325, 1023,
	1024, 326, 327, 0, 328, 1032, 0, 960, 329, 0,
	330, 331, 332, 333, 334, 996, 997, 1000, 390, 1037,
	335, 336, 0, 337, 338, 339, 340, 0, 0, 0,
	242, 341, 342, 344, 0, 1036, 343, 1005, 1006, 0,
	966, 0, 345, 1038, 998, 1039, 346, 347, 348, 1040,
	349, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	0, 356, 358, 357, 0, 359, 1033, 1041, 360, 361,
	1042, 0, 362, 363, 364, 989, 988, 365, 366, 367,
	368, 0, 369, 370, 372, 374, 371, 373, 378, 375,
	376, 377, 380, 0, 379, 1043, 381, 382, 383, 386,
	387, 385, 1044, 384, 929, 243, 1045, 388, 951, 999,
	389, 1013, 391, 392, 0, 0, 393, 0, 0, 0,
	395, 396, 397, 0, 0, 398, 399, 547, 1046, 400,
	1047, 1027, 401, 402, 394, 403, 404, 405, 406, 407,
	408, 409, 410, 0, 411, 412, 549, 550, 1028, 413,
	552, 414, 415, 0, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 1009, 425, 424, 426, 0, 0, 0,
	0, 0, 0, 427, 0, 429, 430, 431, 428, 432,
	433, 434, 435, 0, 436, 437, 438, 1048, 439, 440,
	441, 442, 939, 443, 0, 444, 445, 451, 452, 446,
	447, 453, 454, 455, 456, 457, 0, 459, 460, 458,
	461, 462, 463, 992, 464, 448, 449, 465, 466, 1049,
	467, 468, 1007, 0, 469, 0, 470, 471, 472, 473,
	450, 474, 479, 1052, 475, 476, 477, 478, 1029, 0,
	481, 482, 927, 480, 0, 483, 484, 485, 486, 487,
	488, 313, 489, 0, 490, 1019, 1020, 1021, 1022, 0,
	497, 0, 491, 492, 1030, 493, 1031, 949, 494, 495,
	496, 0, 498, 499, 0, 933, 500, 501, 502, 504,
	505, 503, 506, 993, 507, 0, 0, 508, 509, 510,
	564, 1016, 1051, 0, 512, 511, 567, 0, 0, 0,
	0, 513, 514, 568, 515, 516, 517, 930, 0, 0,
	0, 0, 0, 0, 926, 0, 0, 0, 0, 0,
	0, 924, 925, 0, 0, 0, 0, 0, 0, 0,
	955, 0, 0, 1449, 953, 971, 943, 944, 945, 941,
	942, 954, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 995, 959, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 519, 1008,
	0, 1015, 259, 1014, 0, 260, 261, 262, 263, 264,
	961, 994, 928, 265, 1053, 1054, 525, 0, 266, 267,
	1001, 0, 982, 0, 268, 269, 270, 271, 272, 273,
	274, 0, 0, 276, 277, 278, 275, 0, 279, 0,
	280, 281, 282, 0, 283, 1034, 284, 285, 985, 983,
	984, 991, 987, 986, 990, 286, 287, 288, 289, 1018,
	290, 1012, 1011, 932, 294, 291, 292, 0, 295, 293,
	0, 296, 297, 0, 0, 298, 1003, 300, 0, 301,
	302, 0, 303, 304, 305, 0, 306, 307, 938, 308,
	309, 310, 312, 314, 311, 315, 316, 317, 318, 1025,
	1026, 950, 241, 0, 0, 0, 0, 0, 319, 320,
	321, 1010, 0, 0, 0, 322, 0, 323, 0, 0,
	1035, 324, 325, 1023, 1024, 326, 327, 0, 328, 1032,
	0, 960, 329, 0, 330, 331, 332, 333, 334, 996,
	997, 1000, 390, 1037, 335, 336, 0, 337, 338, 339,
	340, 0, 0, 0, 242, 341, 342, 344, 0, 1036,
	343, 1005, 1006, 0, 966, 0, 345, 1038, 998, 1039,
	346, 347, 348, 1040, 349, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 0, 356, 358, 357, 0, 359,
	1033, 1041, 360, 361, 1042, 0, 362, 363, 364, 989,
	988, 365, 366, 367, 368, 0, 369, 370, 372, 374,
	371, 373, 378, 375, 376, 377, 380, 0, 379, 1043,
	381, 382, 383, 386, 387, 385, 1044, 384, 929, 243,
	1045, 388, 951, 999, 389, 1013, 391, 392, 0, 0,
	393, 0, 0, 0, 395, 396, 397, 0, 0, 398,
	399, 547, 1046, 400, 1047, 1027, 401, 402, 394, 403,
	404, 405, 406, 407, 408, 409, 410, 0, 411, 412,
	549, 550, 1028, 413, 552, 414, 415, 0, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 1009, 425, 424,
	426, 0, 0, 0, 0, 0, 0, 427, 0, 429,
	430, 431, 428, 432, 433, 434, 435, 0, 436, 437,
	438, 1048, 439, 440, 441, 442, 939, 443, 0, 444,
	445, 451, 452, 446, 447, 453, 454, 455, 456, 457,
	0, 459, 460, 458, 461, 462, 463, 992, 464, 448,
	449, 465, 466, 1049, 467, 468, 1007, 0, 469, 0,
	470, 471, 472, 473, 450, 474, 479, 1052, 475, 476,
	477, 478, 1029, 0, 481, 482, 927, 480, 0, 483,
	484, 485, 486, 487, 488, 313, 489, 0, 490, 1019,
	1020, 1021, 1022, 0, 497, 0, 491, 492, 1030, 493,
	1031, 949, 494, 495, 496, 0, 498, 499, 0, 933,
	500, 501, 502, 504, 505, 503, 506, 993, 507, 0,
	0, 508, 509, 510, 564, 1016, 1051, 0, 512, 511,
	567, 0, 0, 0, 0, 513, 514, 568, 515, 516,
	517, 930, 0, 0, 0, 0, 0, 0, 926, 0,
	0, 0, 0, 0, 0, 924, 925, 0, 0, 0,
	0, 0, 0, 0, 955, 0, 0, 1440, 953, 971,
	943, 944, 945, 941, 942, 954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	995, 959, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 519, 1008, 0, 1015, 259, 1014, 0, 260,
	261, 262, 263, 264, 961, 994, 928, 265, 1053, 1054,
	525, 0, 266, 267, 1001, 0, 982, 0, 268, 269,
	270, 271, 272, 273, 274, 0, 0, 276, 277, 278,
	275, 0, 279, 0, 280, 281, 282, 0, 283, 1034,
	284, 285, 985, 983, 984, 991, 987, 986, 990, 286,
	287, 288, 289, 1018, 290, 1012, 1011, 932, 294, 291,
	292, 0, 295, 293, 0, 296, 297, 0, 0, 298,
	1003, 300, 0, 301, 302, 0, 303, 304, 305, 0,
	306, 307, 938, 308, 309, 310, 312, 314, 311, 315,
	316, 317, 318, 1025, 1026, 950, 241, 0, 0, 0,
	0, 0, 319, 320, 321, 1010, 0, 0, 0, 322,
	0, 323, 0, 0, 1035, 324, 325, 1023, 1024, 326,
	327, 0, 328, 1032, 0, 960, 329, 0, 330, 331,
	332, 333, 334, 996, 997, 1000, 390, 1037, 335, 336,
	0, 337, 338, 339, 340, 0, 0, 0, 242, 341,
	342, 344, 0, 1036, 343, 1005, 1006, 0, 966, 0,
	345, 1038, 998, 1039, 346, 347, 348, 1040, 349, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 0, 356,
	358, 357, 0, 359, 1033, 1041, 360, 361, 1042, 0,
	362, 363, 364, 989, 988, 365, 366, 367, 368, 0,
	369, 370, 372, 374, 371, 373, 378, 375, 376, 377,
	380, 0, 379, 1043, 381, 382, 383, 386, 387, 385,
	1044, 384, 929, 243, 1045, 388, 951, 999, 389, 1013,
	391, 392, 0, 0, 393, 0, 0, 0, 395, 396,
	397, 0, 0, 398, 399, 547, 1046, 400, 1047, 1027,
	401, 402, 394, 403, 404, 405, 406, 407, 408, 409,
	410, 0, 411, 412, 549, 550, 1028, 413, 552, 414,
	415, 0, 416, 0, 417, 418, 419, 420, 421, 422,
	423, 1009, 425, 424, 426, 0, 0, 0, 0, 0,
	0, 427, 0, 429, 430, 431, 428, 432, 433, 434,
	435, 0, 436, 437, 438, 1048, 439, 440, 441, 442,
	939, 443, 0, 444, 445, 451, 452, 446, 447, 453,
	454, 455, 456, 457, 0, 459, 460, 458, 461, 462,
	463, 992, 464, 448, 449, 465, 466, 1049, 467, 468,
	1007, 0, 469, 0, 470, 471, 472, 473, 450, 474,
	479, 1052, 475, 476, 477, 478, 1029, 0, 481, 482,
	927, 480, 0, 483, 484, 485, 486, 487, 488, 313,
	489, 0, 490, 1019, 1020, 1021, 1022, 0, 497, 0,
	491, 492, 1030, 493, 1031, 949, 494, 495, 496, 0,
	498, 499, 0, 933, 500, 501, 502, 504, 505, 503,
	506, 993, 507, 0, 0, 508, 509, 510, 564, 1016,
	1051, 0, 512, 511, 567, 0, 0, 0, 0, 513,
	514, 568, 515, 516, 517, 930, 0, 0, 0, 0,
	0, 0, 926, 0, 0, 0, 0, 0, 0, 924,
	925, 0, 0, 0, 0, 0, 0, 0, 955, 0,
	0, 1435, 953, 971, 943, 944, 945, 941, 942, 954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 995, 959, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 519, 1008, 0, 1015,
	259, 1014, 0, 260, 261, 262, 263, 264, 961, 994,
	928, 265, 1053, 1054, 525, 0, 266, 267, 1001, 0,
	982, 0, 268, 269, 270, 271, 272, 273, 274, 0,
	0, 276, 277, 278, 275, 0, 279, 0, 280, 281,
	282, 0, 283, 1034, 284, 285, 985, 983, 984, 991,
	987, 986, 990, 286, 287, 288, 289, 1018, 290, 1012,
	1011, 932, 294, 291, 292, 0, 295, 293, 0, 296,
	297, 0, 0, 298, 1003, 300, 0, 301, 302, 0,
	303, 304, 305, 0, 306, 307, 938, 308, 309, 310,
	312, 314, 311, 315, 316, 317, 318, 1025, 1026, 950,
	241, 0, 0, 0, 0, 0, 319, 320, 321, 1010,
	0, 0, 0, 322, 0, 323, 0, 0, 1035, 324,
	325, 1023, 1024, 326, 327, 0, 328, 1032, 0, 960,
	329, 0, 330, 331, 332, 333, 334, 996, 997, 1000,
	390, 1037, 335, 336, 0, 337, 338, 339, 340, 0,
	0, 0, 242, 341, 342, 344, 0, 1036, 343, 1005,
	1006, 0, 966, 0, 345, 1038, 998, 1039, 346, 347,
	348, 1040, 349, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 0, 356, 358, 357, 0, 359, 1033, 1041,
	360, 361, 1042, 0, 362, 363, 364, 989, 988, 365,
	366, 367, 368, 0, 369, 370, 372, 374, 371, 373,
	378, 375, 376, 377, 380, 0, 379, 1043, 381, 382,
	383, 386, 387, 385, 1044, 384, 929, 243, 1045, 388,
	951, 999, 389, 1013, 391, 392, 0, 0, 393, 0,
	0, 0, 395, 396, 397, 0, 0, 398, 399, 547,
	1046, 400, 1047, 1027, 401, 402, 394, 403, 404, 405,
	406, 407, 408, 409, 410, 0, 411, 412, 549, 550,
	1028, 413, 552, 414, 415, 0, 416, 0, 417, 418,
	419, 420, 421, 422, 423, 1009, 425, 424, 426, 0,
	0, 0, 0, 0, 0, 427, 0, 429, 430, 431,
	428, 432, 433, 434, 435, 0, 436, 437, 438, 1048,
	439, 440, 441, 442, 939, 443, 0, 444, 445, 451,
	452, 446, 447, 453, 454, 455, 456, 457, 0, 459,
	460, 458, 461, 462, 463, 992, 464, 448, 449, 465,
	466, 1049, 467, 468, 1007, 0, 469, 0, 470, 471,
	472, 473, 450, 474, 479, 1052, 475, 476, 477, 478,
	1029, 0, 481, 482, 927, 480, 0, 483, 484, 485,
	486, 487, 488, 313, 489, 0, 490, 1019, 1020, 1021,
	1022, 0, 497, 0, 491, 492, 1030, 493, 1031, 949,
	494, 495, 496, 0, 498, 499, 0, 933, 500, 501,
	502, 504, 505, 503, 506, 993, 507, 0, 0, 508,
	509, 510, 564, 1016, 1051, 0, 512, 511, 567, 0,
	0, 0, 0, 513, 514, 568, 515, 516, 517, 930,
	0, 0, 0, 0, 0, 0, 926, 0, 0, 0,
	0, 0, 0, 924, 925, 0, 0, 0, 0, 0,
	0, 0, 955, 0, 0, 1417, 953, 971, 943, 944,
	945, 941, 942, 954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 995, 959,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	519, 1008, 0, 1015, 259, 1014, 0, 260, 261, 262,
	263, 264, 961, 994, 928, 265, 1053, 1054, 525, 0,
	266, 267, 1001, 0, 982, 0, 268, 269, 270, 271,
	272, 273, 274, 0, 0, 276, 277, 278, 275, 0,
	279, 0, 280, 281, 282, 0, 283, 1034, 284, 285,
	985, 983, 984, 991, 987, 986, 990, 286, 287, 288,
	289, 1018, 290, 1012, 1011, 932, 294, 291, 292, 0,
	295, 293, 0, 296, 297, 0, 0, 298, 1003, 300,
	0, 301, 302, 0, 303, 304, 305, 0, 306, 307,
	938, 308, 309, 310, 312, 314, 311, 315, 316, 317,
	318, 1025, 1026, 950, 241, 0, 0, 0, 0, 0,
	319, 320, 321, 1010, 0, 0, 0, 322, 0, 323,
	0, 0, 1035, 324, 325, 1023, 1024, 326, 327, 0,
	328, 1032, 0, 960, 329, 0, 330, 331, 332, 333,
	334, 996, 997, 1000, 390, 1037, 335, 336, 0, 337,
	338, 339, 340, 0, 0, 0, 242, 341, 342, 344,
	0, 1036, 343, 1005, 1006, 0, 966, 0, 345, 1038,
	998, 1039, 346, 347, 348, 1040, 349, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 0, 356, 358, 357,
	0, 359, 1033, 1041, 360, 361, 1042, 0, 362, 363,
	364, 989, 988, 365, 366, 367, 368, 0, 369, 370,
	372, 374, 371, 373, 378, 375, 376, 377, 380, 0,
	379, 1043, 381, 382, 383, 386, 387, 385, 1044, 384,
	929, 243, 1045, 388, 951, 999, 389, 1013, 391, 392,
	0, 0, 393, 0, 0, 0, 395, 396, 397, 0,
	0, 398, 399, 547, 1046, 400, 1047, 1027, 401, 402,
	394, 403, 404, 405, 406, 407, 408, 409, 410, 0,
	411, 412, 549, 550, 1028, 413, 552, 414, 415, 0,
	416, 0, 417, 418, 419, 420, 421, 422, 423, 1009,
	425, 424, 426, 0, 0, 0, 0, 0, 0, 427,
	0, 429, 430, 431, 428, 432, 433, 434, 435, 0,
	436, 437, 438, 1048, 439, 440, 441, 442, 939, 443,
	0, 444, 445, 451, 452, 446, 447, 453, 454, 455,
	456, 457, 0, 459, 460, 458, 461, 462, 463, 992,
	464, 448, 449, 465, 466, 1049, 467, 468, 1007, 0,
	469, 0, 470, 471, 472, 473, 450, 474, 479, 1052,
	475, 476, 477, 478, 1029, 0, 481, 482, 927, 480,
	0, 483, 484, 485, 486, 487, 488, 313, 489, 0,
	490, 1019, 1020, 1021, 1022, 0, 497, 0, 491, 492,
	1030, 493, 1031, 949, 494, 495, 496, 0, 498, 499,
	0, 933, 500, 501, 502, 504, 505, 503, 506, 993,
	507, 0, 0, 508, 509, 510, 564, 1016, 1051, 0,
	512, 511, 567, 0, 0, 0, 0, 513, 514, 568,
	515, 516, 517, 930, 0, 0, 0, 0, 0, 0,
	926, 0, 0, 0, 0, 0, 0, 924, 925, 0,
	0, 0, 0, 0, 0, 0, 955, 0, 0, 1304,
	953, 971, 943, 944, 945, 941, 942, 954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 995, 959, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 519, 1008, 0, 1015, 259, 1014,
	0, 260, 261, 262, 263, 264, 961, 994, 928, 265,
	1053, 1054, 525, 0, 266, 267, 1001, 0, 982, 0,
	268, 269, 270, 271, 272, 273, 274, 0, 0, 276,
	277, 278, 275, 0, 279, 0, 280, 281, 282, 0,
	283, 1034, 284, 285, 985, 983, 984, 991, 987, 986,
	990, 286, 287, 288, 289, 1018, 290, 1012, 1011, 932,
	294, 291, 292, 0, 295, 293, 0, 296, 297, 0,
	0, 298, 1003, 300, 0, 301, 302, 0, 303, 304,
	305, 0, 306, 307, 938, 308, 309, 310, 312, 314,
	311, 315, 316, 317, 318, 1025, 1026, 950, 241, 0,
	0, 0, 0, 0, 319, 320, 321, 1010, 0, 0,
	0, 322, 0, 323, 0, 0, 1035, 324, 325, 1023,
	1024, 326, 327, 0, 328, 1032, 0, 960, 329, 0,
	330, 331, 332, 333, 334, 1303, 997, 1000, 390, 1037,
	335, 336, 0, 337, 338, 339, 340, 0, 0, 0,
	242, 341, 342, 344, 0, 1036, 343, 1005, 1006, 0,
	966, 0, 345, 1038, 998, 1039, 346, 347, 348, 1040,
	349, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	0, 356, 358, 357, 0, 359, 1033, 1041, 360, 361,
	1042, 0, 362, 363, 364, 989, 988, 365, 366, 367,
	368, 0, 369, 370, 372, 374, 371, 373, 378, 375,
	376, 377, 380, 0, 379, 1043, 381, 382, 383, 386,
	387, 385, 1044, 384, 929, 243, 1045, 388, 951, 999,
	389, 1013, 391, 392, 0, 0, 393, 0, 0, 0,
	395, 396, 397, 0, 0, 398, 399, 547, 1046, 400,
	1047, 1027, 401, 402, 394, 403, 404, 405, 406, 407,
	408, 409, 410, 0, 411, 412, 549, 550, 1028, 413,
	552, 414, 415, 0, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 1009, 425, 424, 426, 0, 0, 0,
	0, 0, 0, 427, 0, 429, 430, 431, 428, 432,
	433, 434, 435, 0, 436, 437, 438, 1048, 439, 440,
	441, 442, 939, 443, 0, 444, 445, 451, 452, 446,
	447, 453, 454, 455, 456, 457, 0, 459, 460, 458,
	461, 462, 463, 992, 464, 448, 449, 465, 466, 1049,
	467, 468, 1007, 0, 469, 0, 470, 471, 472, 473,
	450, 474, 479, 1052, 475, 476, 477, 478, 1029, 0,
	481, 482, 927, 480, 0, 483, 484, 485, 486, 487,
	488, 313, 489, 0, 490, 1019, 1020, 1021, 1022, 0,
	497, 0, 491, 492, 1030, 493, 1031, 949, 494, 495,
	496, 0, 498, 499, 0, 933, 500, 501, 502, 504,
	505, 503, 506, 993, 507, 0, 0, 508, 509, 510,
	564, 1016, 1051, 0, 512, 511, 567, 0, 0, 0,
	0, 513, 514, 568, 515, 516, 517, 930, 0, 0,
	0, 0, 0, 0, 926, 0, 0, 0, 0, 0,
	0, 924, 925, 0, 0, 0, 0, 0, 0, 0,
	955, 0, 0, 1298, 953, 971, 943, 944, 945, 941,
	942, 954, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 995, 959, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 519, 1008,
	0, 1015, 259, 1014, 0, 260, 261, 262, 263, 264,
	961, 994, 928, 265, 1053, 1054, 525, 0, 266, 267,
	1001, 0, 982, 0, 268, 269, 270, 271, 272, 273,
	274, 0, 0, 276, 277, 278, 275, 0, 279, 0,
	280, 281, 282, 0, 283, 1034, 284, 285, 985, 983,
	984, 991, 987, 986, 990, 286, 287, 288, 289, 1018,
	290, 1012, 1011, 932, 294, 291, 292, 0, 295, 293,
	0, 296, 297, 0, 0, 298, 1003, 300, 0, 301,
	302, 0, 303, 304, 305, 0, 306, 307, 938, 308,
	309, 310, 312, 314, 311, 315, 316, 317, 318, 1025,
	1026, 950, 241, 0, 0, 0, 0, 0, 319, 320,
	321, 1010, 0, 0, 0, 322, 0, 323, 0, 0,
	1035, 324, 325, 1023, 1024, 326, 327, 0, 328, 1032,
	0, 960, 329, 0, 330, 331, 332, 333, 334, 1297,
	997, 1000, 390, 1037, 335, 336, 0, 337, 338, 339,
	340, 0, 0, 0, 242, 341, 342, 344, 0, 1036,
	343, 1005, 1006, 0, 966, 0, 345, 1038, 998, 1039,
	346, 347, 348, 1040, 349, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 0, 356, 358, 357, 0, 359,
	1033, 1041, 360, 361, 1042, 0, 362, 363, 364, 989,
	988, 365, 366, 367, 368, 0, 369, 370, 372, 374,
	371, 373, 378, 375, 376, 377, 380, 0, 379, 1043,
	381, 382, 383, 386, 387, 385, 1044, 384, 929, 243,
	1045, 388, 951, 999, 389, 1013, 391, 392, 0, 0,
	393, 0, 0, 0, 395, 396, 397, 0, 0, 398,
	399, 547, 1046, 400, 1047, 1027, 401, 402, 394, 403,
	404, 405, 406, 407, 408, 409, 410, 0, 411, 412,
	549, 550, 1028, 413, 552, 414, 415, 0, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 1009, 425, 424,
	426, 0, 0, 0, 0, 0, 0, 427, 0, 429,
	430, 431, 428, 432, 433, 434, 435, 0, 436, 437,
	438, 1048, 439, 440, 441, 442, 939, 443, 0, 444,
	445, 451, 452, 446, 447, 453, 454, 455, 456, 457,
	0, 459, 460, 458, 461, 462, 463, 992, 464, 448,
	449, 465, 466, 1049, 467, 468, 1007, 0, 469, 0,
	470, 471, 472, 473, 450, 474, 479, 1052, 475, 476,
	477, 478, 1029, 0, 481, 482, 927, 480, 0, 483,
	484, 485, 486, 487, 488, 313, 489, 0, 490, 1019,
	1020, 1021, 1022, 0, 497, 0, 491, 492, 1030, 493,
	1031, 949, 494, 495, 496, 0, 498, 499, 0, 933,
	500, 501, 502, 504, 505, 503, 506, 993, 507, 0,
	0, 508, 509, 510, 564, 1016, 1051, 0, 512, 511,
	567, 0, 0, 0, 0, 513, 514, 568, 515, 516,
	517, 930, 0, 0, 0, 0, 0, 0, 926, 0,
	0, 0, 0, 0, 0, 924, 925, 0, 0, 0,
	0, 0, 0, 0, 955, 0, 0, 1291, 953, 971,
	943, 944, 945, 941, 942, 954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	995, 959, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 519, 1008, 0, 1015, 259, 1014, 0, 260,
	261, 262, 263, 264, 961, 994, 928, 265, 1053, 1054,
	525, 0, 266, 267, 1001, 0, 982, 0, 268, 269,
	270, 271, 272, 273, 274, 0, 0, 276, 277, 278,
	275, 0, 279, 0, 280, 281, 282, 0, 283, 1034,
	284, 285, 985, 983, 984, 991, 987, 986, 990, 286,
	287, 288, 289, 1018, 290, 1012, 1011, 932, 294, 291,
	292, 0, 295, 293, 0, 296, 297, 0, 0, 298,
	1003, 300, 0, 301, 302, 0, 303, 304, 305, 0,
	306, 307, 938, 308, 309, 310, 312, 314, 311, 315,
	316, 317, 318, 1025, 1026, 950, 241, 0, 0, 0,
	0, 0, 319, 320, 321, 1010, 0, 0, 0, 322,
	0, 323, 0, 0, 1035, 324, 325, 1023, 1024, 326,
	327, 0, 328, 1032, 0, 960, 329, 0, 330, 331,
	332, 333, 334, 996, 997, 1000, 390, 1037, 335, 336,
	0, 337, 338, 339, 340, 0, 0, 0, 242, 341,
	342, 344, 0, 1036, 343, 1005, 1006, 0, 966, 0,
	345, 1038, 998, 1039, 346, 347, 348, 1040, 349, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 0, 356,
	358, 357, 0, 359, 1033, 1041, 360, 361, 1042, 0,
	362, 363, 364, 989, 988, 365, 366, 367, 368, 0,
	369, 370, 372, 374, 371, 373, 378, 375, 376, 377,
	380, 0, 379, 1043, 381, 382, 383, 386, 387, 385,
	1044, 384, 929, 243, 1045, 388, 951, 999, 389, 1013,
	391, 392, 0, 0, 393, 0, 0, 0, 395, 396,
	397, 0, 0, 398, 399, 547, 1046, 400, 1047, 1027,
	401, 402, 394, 403, 404, 405, 406, 407, 408, 409,
	410, 0, 411, 412, 549, 550, 1028, 413, 552, 414,
	415, 0, 416, 0, 417, 418, 419, 420, 421, 422,
	423, 1009, 425, 424, 426, 0, 0, 0, 0, 0,
	0, 427, 0, 429, 430, 431, 428, 432, 433, 434,
	435, 0, 436, 437, 438, 1048, 439, 440, 441, 442,
	939, 443, 0, 444, 445, 451, 452, 446, 447, 453,
	454, 455, 456, 457, 0, 459, 460, 458, 461, 462,
	463, 992, 464, 448, 449, 465, 466, 1049, 467, 468,
	1007, 0, 469, 0, 470, 471, 472, 473, 450, 474,
	479, 1052, 475, 476, 477, 478, 1029, 0, 481, 482,
	927, 480, 0, 483, 484, 485, 486, 487, 488, 313,
	489, 0, 490, 1019, 1020, 1021, 1022, 0, 497, 0,
	491, 492, 1030, 493, 1031, 949, 494, 495, 496, 0,
	498, 499, 0, 933, 500, 501, 502, 504, 505, 503,
	506, 993, 507, 0, 0, 508, 509, 510, 564, 1016,
	1051, 0, 512, 511, 567, 0, 0, 0, 0, 513,
	514, 568, 515, 516, 517, 930, 0, 0, 0, 0,
	0, 0, 926, 0, 0, 0, 0, 0, 0, 924,
	925, 971, 943, 944, 945, 941, 942, 954, 955, 0,
	0, 0, 953, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 995, 959, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 519, 1008, 0, 1015, 259, 1014,
	0, 260, 261, 262, 263, 264, 961, 994, 928, 265,
	1053, 1054, 525, 0, 266, 267, 1001, 0, 982, 0,
	268, 269, 270, 271, 272, 273, 274, 0, 0, 276,
	277, 278, 275, 0, 279, 0, 280, 281, 282, 0,
	283, 1034, 284, 285, 985, 983, 984, 991, 987, 986,
	990, 286, 287, 288, 289, 1018, 290, 1012, 1011, 932,
	294, 291, 292, 0, 295, 293, 0, 296, 297, 0,
	0, 298, 1003, 300, 0, 301, 302, 0, 303, 304,
	305, 0, 306, 307, 938, 308, 309, 310, 312, 314,
	311, 315, 316, 317, 318, 1025, 1026, 950, 241, 0,
	0, 0, 0, 0, 319, 320, 321, 1010, 0, 0,
	0, 322, 0, 323, 0, 0, 1035, 324, 325, 1023,
	1024, 326, 327, 0, 328, 1032, 0, 960, 329, 0,
	330, 331, 332, 333, 334, 996, 997, 1000, 390, 1037,
	335, 336, 0, 337, 338, 339, 340, 0, 0, 0,
	242, 341, 342, 344, 0, 1036, 343, 1005, 1006, 0,
	966, 0, 345, 1038, 998, 1039, 346, 347, 348, 1040,
	349, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	0, 356, 358, 357, 0, 359, 1033, 1041, 360, 361,
	1042, 0, 362, 363, 364, 989, 988, 365, 366, 367,
	368, 0, 369, 370, 372, 374, 371, 373, 378, 375,
	376, 377, 380, 0, 379, 1043, 381, 382, 383, 386,
	387, 385, 1044, 384, 929, 243, 1045, 388, 951, 999,
	389, 1013, 391, 392, 0, 0, 393, 0, 0, 0,
	395, 396, 397, 0, 0, 398, 399, 547, 1046, 400,
	1047, 1027, 401, 402, 394, 403, 404, 405, 406, 407,
	408, 409, 410, 0, 411, 412, 549, 550, 1028, 413,
	552, 414, 415, 0, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 1009, 425, 424, 426, 0, 0, 0,
	0, 0, 0, 427, 0, 429, 430, 431, 428, 432,
	433, 434, 435, 0, 436, 437, 438, 1048, 439, 440,
	441, 442, 939, 443, 0, 444, 445, 451, 452, 446,
	447, 453, 454, 455, 456, 457, 0, 459, 460, 458,
	461, 462, 463, 992, 464, 448, 449, 465, 466, 1049,
	467, 468, 1007, 0, 469, 0, 470, 471, 472, 473,
	450, 474, 479, 1052, 475, 476, 477, 478, 1029, 0,
	481, 482, 927, 480, 0, 483, 484, 485, 486, 487,
	488, 313, 489, 0, 490, 1019, 1020, 1021, 1022, 0,
	497, 0, 491, 492, 1030, 493, 1031, 949, 494, 495,
	496, 0, 498, 499, 0, 933, 500, 501, 502, 504,
	505, 503, 506, 993, 507, 0, 0, 508, 509, 510,
	564, 1016, 1051, 0, 512, 511, 567, 0, 0, 0,
	0, 513, 514, 568, 515, 516, 517, 930, 0, 0,
	0, 0, 0, 0, 926, 0, 0, 0, 0, 0,
	0, 924, 925, 971, 943, 944, 945, 941, 942, 954,
	955, 0, 0, 0, 953, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 995, 959, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 519, 1008, 0, 1015,
	259, 1014, 0, 260, 261, 262, 263, 264, 961, 994,
	928, 265, 1053, 1054, 525, 0, 266, 267, 1001, 0,
	982, 0, 268, 269, 270, 271, 272, 273, 274, 0,
	0, 276, 277, 278, 275, 0, 279, 0, 280, 281,
	282, 0, 283, 1034, 284, 3954, 985, 983, 984, 991,
	987, 986, 990, 286, 287, 288, 289, 1018, 290, 1012,
	1011, 932, 294, 291, 292, 0, 295, 293, 0, 296,
	297, 0, 0, 298, 1003, 300, 0, 301, 302, 0,
	303, 304, 305, 0, 306, 307, 938, 308, 309, 310,
	312, 314, 311, 315, 316, 317, 318, 1025, 1026, 950,
	241, 0, 0, 0, 0, 0, 319, 320, 321, 1010,
	0, 0, 0, 322, 0, 323, 0, 0, 1035, 324,
	325, 1023, 1024, 326, 327, 0, 328, 1032, 0, 960,
	329, 0, 330, 331, 332, 333, 334, 996, 997, 1000,
	390, 1037, 335, 336, 0, 337, 338, 339, 340, 0,
	0, 0, 242, 341, 342, 344, 0, 1036, 343, 1005,
	1006, 0, 966, 0, 345, 1038, 998, 1039, 346, 347,
	348, 1040, 349, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 0, 356, 358, 357, 0, 359, 1033, 1041,
	360, 361, 1042, 0, 362, 363, 364, 989, 988, 365,
	366, 367, 368, 0, 369, 370, 372, 374, 371, 373,
	378, 375, 376, 377, 380, 0, 379, 1043, 381, 382,
	383, 386, 387, 385, 1044, 384, 929, 243, 1045, 388,
	951, 999, 389, 1013, 391, 392, 0, 0, 393, 0,
	0, 0, 395, 396, 397, 0, 0, 398, 399, 547,
	1046, 400, 1047, 1027, 401, 402, 394, 403, 404, 405,
	406, 407, 408, 409, 410, 0, 411, 412, 549, 550,
	1028, 413, 552, 414, 415, 0, 416, 0, 417, 418,
	419, 420, 421, 422, 423, 1009, 425, 424, 426, 0,
	0, 0, 0, 0, 0, 427, 0, 429, 430, 431,
	428, 432, 433, 434, 435, 0, 436, 437, 438, 1048,
	439, 440, 441, 442, 939, 443, 0, 444, 445, 451,
	452, 446, 447, 453, 454, 455, 456, 457, 0, 459,
	460, 458, 461, 462, 463, 992, 464, 448, 449, 465,
	466, 1049, 467, 468, 1007, 0, 469, 0, 470, 471,
	472, 473, 450, 474, 479, 1052, 475, 476, 477, 478,
	1029, 0, 481, 482, 927, 480, 0, 483, 484, 485,
	486, 487, 488, 313, 489, 0, 490, 1019, 1020, 1021,
	1022, 0, 497, 0, 491, 492, 1030, 493, 1031, 949,
	494, 495, 496, 0, 3953, 499, 0, 933, 500, 501,
	502, 504, 505, 503, 506, 993, 507, 0, 0, 508,
	509, 510, 564, 1016, 1051, 0, 512, 511, 567, 0,
	0, 0, 0, 513, 514, 568, 515, 516, 517, 930,
	0, 0, 0, 0, 0, 0, 926, 0, 0, 0,
	0, 0, 0, 924, 925, 971, 943, 944, 945, 941,
	942, 954, 955, 0, 0, 0, 953, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 995, 959, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 3952, 1008,
	0, 1015, 259, 1014, 0, 260, 261, 262, 263, 264,
	961, 994, 928, 265, 1053, 1054, 525, 0, 266, 267,
	1001, 0, 982, 0, 268, 269, 270, 271, 272, 273,
	274, 0, 0, 276, 277, 278, 275, 0, 279, 0,
	280, 281, 282, 0, 283, 1034, 284, 3954, 985, 983,
	984, 991, 987, 986, 990, 286, 287, 288, 289, 1018,
	290, 1012, 1011, 932, 294, 291, 292, 0, 295, 293,
	0, 296, 297, 0, 0, 298, 1003, 300, 0, 301,
	302, 0, 303, 304, 305, 0, 306, 307, 938, 308,
	309, 310, 312, 314, 311, 315, 316, 317, 318, 1025,
	1026, 950, 241, 0, 0, 0, 0, 0, 319, 320,
	321, 1010, 0, 0, 0, 322, 0, 323, 0, 0,
	1035, 324, 325, 1023, 1024, 326, 327, 0, 328, 1032,
	0, 960, 329, 0, 330, 331, 332, 333, 334, 996,
	997, 1000, 390, 1037, 335, 336, 0, 337, 338, 339,
	340, 0, 0, 0, 242, 341, 342, 344, 0, 1036,
	343, 1005, 1006, 0, 966, 0, 345, 1038, 998, 1039,
	346, 347, 348, 1040, 349, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 0, 356, 358, 357, 0, 359,
	1033, 1041, 360, 361, 1042, 0, 362, 363, 364, 989,
	988, 365, 366, 367, 368, 0, 369, 370, 372, 374,
	371, 373, 378, 375, 376, 377, 380, 0, 379, 1043,
	381, 382, 383, 386, 387, 385, 1044, 384, 929, 243,
	1045, 388, 951, 999, 389, 1013, 391, 392, 0, 0,
	393, 0, 0, 0, 395, 396, 397, 0, 0, 398,
	399, 547, 1046, 400, 1047, 1027, 401, 402, 394, 403,
	404, 405, 406, 407, 408, 409, 410, 0, 411, 412,
	549, 550, 1028, 413, 552, 414, 415, 0, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 1009, 425, 424,
	426, 0, 0, 0, 0, 0, 0, 427, 0, 429,
	430, 431, 428, 432, 433, 434, 435, 0, 436, 437,
	438, 1048, 439, 440, 441, 442, 939, 443, 0, 444,
	445, 451, 452, 446, 447, 453, 454, 455, 456, 457,
	0, 459, 460, 458, 461, 462, 463, 992, 464, 448,
	449, 465, 466, 1049, 467, 468, 1007, 0, 469, 0,
	470, 471, 472, 473, 450, 474, 479, 1052, 475, 476,
	477, 478, 1029, 0, 481, 482, 927, 480, 0, 483,
	484, 485, 486, 487, 488, 313, 489, 0, 490, 1019,
	1020, 1021, 1022, 0, 497, 0, 491, 492, 1030, 493,
	1031, 949, 494, 495, 496, 0, 3953, 499, 0, 933,
	500, 501, 502, 504, 505, 503, 506, 993, 507, 0,
	0, 508, 509, 510, 564, 1016, 1051, 0, 512, 511,
	567, 0, 0, 0, 0, 513, 514, 568, 515, 516,
	517, 930, 0, 0, 0, 0, 0, 0, 926, 0,
	0, 0, 0, 0, 0, 924, 925, 971, 943, 944,
	945, 2709, 2710, 954, 955, 0, 0, 0, 953, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 995, 959,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	519, 1008, 0, 1015, 259, 1014, 0, 260, 261, 262,
	263, 264, 961, 994, 928, 265, 1053, 1054, 525, 0,
	266, 267, 1001, 0, 982, 0, 268, 269, 270, 271,
	272, 273, 274, 0, 0, 276, 277, 278, 275, 0,
	279, 0, 280, 281, 282, 0, 283, 1034, 284, 285,
	985, 983, 984, 991, 987, 986, 990, 286, 287, 288,
	289, 1018, 290, 1012, 1011, 932, 294, 291, 292, 0,
	295, 293, 0, 296, 297, 0, 0, 298, 1003, 300,
	0, 301, 302, 0, 303, 304, 305, 0, 306, 307,
	938, 308, 309, 310, 312, 314, 311, 315, 316, 317,
	318, 1025, 1026, 950, 241, 0, 0, 0, 0, 0,
	319, 320, 321, 1010, 0, 0, 0, 322, 0, 323,
	0, 0, 1035, 324, 325, 1023, 1024, 326, 327, 0,
	328, 1032, 0, 960, 329, 0, 330, 331, 332, 333,
	334, 996, 997, 1000, 390, 1037, 335, 336, 0, 337,
	338, 339, 340, 0, 0, 0, 242, 341, 342, 344,
	0, 1036, 343, 1005, 1006, 0, 966, 0, 345, 1038,
	998, 1039, 346, 347, 348, 1040, 349, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 0, 356, 358, 357,
	0, 359, 1033, 1041, 360, 361, 1042, 0, 362, 363,
	364, 989, 988, 365, 366, 367, 368, 0, 369, 370,
	372, 374, 371, 373, 378, 375, 376, 377, 380, 0,
	379, 1043, 381, 382, 383, 386, 387, 385, 1044, 384,
	929, 243, 1045, 388, 951, 999, 389, 1013, 391, 392,
	0, 0, 393, 0, 0, 0, 395, 396, 397, 0,
	0, 398, 399, 547, 1046, 400, 1047, 1027, 401, 402,
	394, 403, 404, 405, 406, 407, 408, 409, 410, 0,
	411, 412, 549, 550, 1028, 413, 552, 414, 415, 0,
	416, 0, 417, 418, 419, 420, 421, 422, 423, 1009,
	425, 424, 426, 0, 0, 0, 0, 0, 0, 427,
	0, 429, 430, 431, 428, 432, 433, 434, 435, 0,
	436, 437, 438, 1048, 439, 440, 441, 442, 939, 443,
	0, 444, 445, 451, 452, 446, 447, 453, 454, 455,
	456, 457, 0, 459, 460, 458, 461, 462, 463, 992,
	464, 448, 449, 465, 466, 1049, 467, 468, 1007, 0,
	469, 0, 470, 471, 472, 473, 450, 474, 479, 1052,
	475, 476, 477, 478, 1029, 0, 481, 482, 927, 480,
	0, 483, 484, 485, 486, 487, 488, 313, 489, 0,
	490, 1019, 1020, 1021, 1022, 0, 497, 0, 491, 492,
	1030, 493, 1031, 949, 494, 495, 496, 0, 498, 499,
	0, 933, 500, 501, 502, 504, 505, 503, 506, 993,
	507, 0, 0, 508, 509, 510, 564, 1016, 1051, 0,
	512, 511, 567, 0, 0, 0, 0, 513, 514, 568,
	515, 516, 517, 930, 0, 0, 0, 0, 0, 0,
	926, 0, 0, 0, 0, 0, 0, 924, 925, 971,
	943, 944, 945, 2707, 2708, 954, 955, 0, 0, 0,
	953, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	995, 959, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 519, 1008, 0, 1015, 259, 1014, 0, 260,
	261, 262, 263, 264, 961, 994, 928, 265, 1053, 1054,
	525, 0, 266, 267, 1001, 0, 982, 0, 268, 269,
	270, 271, 272, 273, 274, 0, 0, 276, 277, 278,
	275, 0, 279, 0, 280, 281, 282, 0, 283, 1034,
	284, 285, 985, 983, 984, 991, 987, 986, 990, 286,
	287, 288, 289, 1018, 290, 1012, 1011, 932, 294, 291,
	292, 0, 295, 293, 0, 296, 297, 0, 0, 298,
	1003, 300, 0, 301, 302, 0, 303, 304, 305, 0,
	306, 307, 938, 308, 309, 310, 312, 314, 311, 315,
	316, 317, 318, 1025, 1026, 950, 241, 0, 0, 0,
	0, 0, 319, 320, 321, 1010, 0, 0, 0, 322,
	0, 323, 0, 0, 1035, 324, 325, 1023, 1024, 326,
	327, 0, 328, 1032, 0, 960, 329, 0, 330, 331,
	332, 333, 334, 996, 997, 1000, 390, 1037, 335, 336,
	0, 337, 338, 339, 340, 0, 0, 0, 242, 341,
	342, 344, 0, 1036, 343, 1005, 1006, 0, 966, 0,
	345, 1038, 998, 1039, 346, 347, 348, 1040, 349, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 0, 356,
	358, 357, 0, 359, 1033, 1041, 360, 361, 1042, 0,
	362, 363, 364, 989, 988, 365, 366, 367, 368, 0,
	369, 370, 372, 374, 371, 373, 378, 375, 376, 377,
	380, 0, 379, 1043, 381, 382, 383, 386, 387, 385,
	1044, 384, 929, 243, 1045, 388, 951, 999, 389, 1013,
	391, 392, 0, 0, 393, 0, 0, 0, 395, 396,
	397, 0, 0, 398, 399, 547, 1046, 400, 1047, 1027,
	401, 402, 394, 403, 404, 405, 406, 407, 408, 409,
	410, 0, 411, 412, 549, 550, 1028, 413, 552, 414,
	415, 0, 416, 0, 417, 418, 419, 420, 421, 422,
	423, 1009, 425, 424, 426, 0, 0, 0, 0, 0,
	0, 427, 0, 429, 430, 431, 428, 432, 433, 434,
	435, 0, 436, 437, 438, 1048, 439, 440, 441, 442,
	939, 443, 0, 444, 445, 451, 452, 446, 447, 453,
	454, 455, 456, 457, 0, 459, 460, 458, 461, 462,
	463, 992, 464, 448, 449, 465, 466, 1049, 467, 468,
	1007, 0, 469, 0, 470, 471, 472, 473, 450, 474,
	479, 1052, 475, 476, 477, 478, 1029, 0, 481, 482,
	927, 480, 0, 483, 484, 485, 486, 487, 488, 313,
	489, 0, 490, 1019, 1020, 1021, 1022, 0, 497, 0,
	491, 492, 1030, 493, 1031, 949, 494, 495, 496, 0,
	498, 499, 0, 933, 500, 501, 502, 504, 505, 503,
	506, 993, 507, 0, 0, 508, 509, 510, 564, 1016,
	1051, 0, 512, 511, 567, 0, 0, 0, 0, 513,
	514, 568, 515, 516, 517, 930, 0, 0, 0, 0,
	0, 0, 926, 0, 0, 0, 0, 0, 0, 924,
	925, 971, 943, 944, 945, 941, 942, 954, 955, 0,
	0, 0, 953, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 995, 959, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 519, 1008, 0, 1015, 259, 1014,
	0, 260, 261, 262, 263, 264, 961, 994, 928, 265,
	1053, 1054, 525, 0, 266, 267, 1001, 0, 982, 0,
	268, 269, 270, 271, 272, 273, 274, 0, 0, 276,
	277, 278, 275, 0, 279, 0, 280, 281, 282, 0,
	283, 1034, 284, 285, 985, 983, 984, 991, 987, 986,
	990, 286, 287, 288, 289, 1018, 290, 1012, 1011, 932,
	294, 291, 292, 0, 295, 293, 0, 296, 297, 0,
	0, 298, 1003, 300, 0, 301, 302, 0, 303, 304,
	305, 0, 306, 307, 938, 308, 309, 310, 312, 314,
	311, 315, 316, 317, 318, 1025, 1026, 950, 241, 0,
	0, 0, 0, 0, 319, 320, 321, 1010, 0, 0,
	0, 322, 0, 323, 0, 0, 1035, 324, 325, 1023,
	1024, 326, 327, 0, 328, 1032, 0, 960, 329, 0,
	330, 331, 332, 333, 334, 996, 997, 1000, 390, 1037,
	335, 336, 0, 337, 338, 339, 340, 0, 0, 0,
	242, 341, 342, 344, 0, 1036, 343, 1005, 1006, 0,
	966, 0, 345, 1038, 998, 1039, 346, 347, 348, 1040,
	349, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	0, 356, 358, 357, 0, 359, 1033, 1041, 360, 361,
	1042, 0, 362, 363, 364, 989, 988, 365, 366, 367,
	368, 0, 369, 370, 372, 374, 371, 373, 378, 375,
	376, 377, 380, 0, 379, 1043, 381, 382, 383, 386,
	387, 385, 1044, 384, 929, 243, 1045, 388, 951, 999,
	389, 1013, 391, 392, 0, 0, 393, 0, 0, 0,
	395, 396, 397, 0, 0, 398, 399, 547, 1046, 400,
	1047, 1027, 401, 402, 394, 403, 404, 405, 406, 407,
	408, 409, 410, 0, 411, 412, 549, 550, 1028, 413,
	552, 414, 415, 0, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 1009, 425, 424, 426, 0, 0, 0,
	0, 0, 0, 427, 0, 429, 430, 431, 428, 432,
	433, 434, 435, 0, 436, 437, 438, 1048, 439, 440,
	441, 442, 939, 443, 0, 444, 445, 451, 452, 446,
	447, 453, 454, 455, 456, 457, 0, 459, 460, 458,
	461, 462, 463, 992, 464, 448, 449, 465, 466, 1049,
	467, 468, 1007, 0, 469, 0, 470, 471, 472, 473,
	450, 474, 479, 1052, 475, 476, 477, 478, 1029, 0,
	481, 482, 927, 480, 0, 483, 484, 485, 486, 487,
	488, 313, 489, 0, 490, 1019, 1020, 1021, 1022, 0,
	497, 0, 491, 492, 1030, 493, 1031, 949, 494, 495,
	496, 0, 498, 499, 0, 933, 500, 501, 502, 504,
	505, 503, 506, 993, 507, 0, 0, 508, 509, 510,
	564, 1016, 1051, 0, 512, 511, 567, 0, 0, 0,
	0, 513, 514, 568, 515, 516, 517, 930, 0, 0,
	0, 0, 0, 0, 926, 0, 0, 0, 0, 0,
	0, 2132, 2133, 971, 943, 944, 945, 941, 942, 954,
	955, 0, 0, 0, 953, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 995, 959, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 519, 1008, 0, 1015,
	259, 1014, 0, 260, 261, 262, 263, 264, 961, 994,
	0, 265, 1053, 1054, 525, 0, 266, 267, 1001, 0,
	982, 0, 268, 269, 270, 271, 272, 273, 274, 0,
	0, 276, 277, 278, 275, 0, 279, 0, 280, 281,
	282, 0, 283, 1034, 284, 285, 985, 983, 984, 991,
	987, 986, 990, 286, 287, 288, 289, 1018, 290, 1012,
	1011, 0, 294, 291, 292, 0, 295, 293, 0, 296,
	297, 0, 0, 298, 1003, 300, 0, 301, 302, 0,
	303, 304, 305, 0, 306, 307, 938, 308, 309, 310,
	312, 314, 311, 315, 316, 317, 318, 1025, 1026, 950,
	241, 0, 0, 0, 0, 0, 319, 320, 321, 1010,
	0, 0, 0, 322, 0, 323, 0, 0, 1035, 324,
	325, 1023, 1024, 326, 327, 0, 328, 1032, 0, 960,
	329, 0, 330, 331, 332, 333, 334, 996, 997, 1000,
	390, 1037, 335, 336, 0, 337, 338, 339, 340, 0,
	0, 0, 242, 341, 342, 344, 0, 1036, 343, 1005,
	1006, 0, 966, 0, 345, 1038, 998, 1039, 346, 347,
	348, 1040, 349, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 0, 356, 358, 357, 0, 359, 1033, 1041,
	360, 361, 1042, 0, 362, 363, 364, 989, 988, 365,
	366, 367, 368, 0, 369, 370, 372, 374, 371, 373,
	378, 375, 376, 377, 380, 0, 379, 1043, 381, 382,
	383, 386, 387, 385, 1044, 384, 0, 243, 1045, 388,
	951, 999, 389, 1013, 391, 392, 0, 0, 393, 0,
	0, 0, 395, 396, 397, 0, 0, 398, 399, 547,
	1046, 400, 1047, 1027, 401, 402, 394, 403, 404, 405,
	406, 407, 408, 409, 410, 0, 411, 412, 549, 550,
	1028, 413, 552, 414, 415, 0, 416, 0, 417, 418,
	419, 420, 421, 422, 423, 1009, 425, 424, 426, 0,
	0, 0, 0, 0, 0, 427, 0, 429, 430, 431,
	428, 432, 433, 434, 435, 0, 436, 437, 438, 1048,
	439, 440, 441, 442, 939, 443, 0, 444, 445, 451,
	452, 446, 447, 453, 454, 455, 456, 457, 0, 459,
	460, 458, 461, 462, 463, 992, 464, 448, 449, 465,
	466, 1049, 467, 468, 1007, 0, 469, 0, 470, 471,
	472, 473, 450, 474, 479, 1052, 475, 476, 477, 478,
	1029, 0, 481, 482, 0, 480, 0, 483, 484, 485,
	486, 487, 488, 313, 489, 0, 490, 1019, 1020, 1021,
	1022, 0, 497, 0, 491, 492, 1030, 493, 1031, 949,
	494, 495, 496, 0, 498, 499, 0, 0, 500, 501,
	502, 504, 505, 503, 506, 993, 507, 0, 0, 508,
	509, 510, 564, 1016, 1051, 0, 512, 511, 567, 0,
	0, 0, 0, 513, 514, 568, 515, 516, 517, 971,
	943, 944, 945, 941, 942, 954, 2328, 0, 0, 0,
	0, 0, 0, 2326, 2327, 0, 244, 245, 246, 247,
	248, 249, 955, 250, 251, 0, 953, 0, 0, 0,
	995, 959, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 519, 1008, 0, 1015, 259, 1014, 0, 260,
	261, 262, 263, 264, 961, 994, 0, 265, 1053, 1054,
	525, 0, 266, 267, 1001, 0, 982, 0, 268, 269,
	270, 271, 272, 273, 274, 0, 0, 276, 277, 278,
	275, 0, 279, 0, 280, 281, 282, 0, 283, 1034,
	284, 285, 985, 983, 984, 991, 987, 986, 990, 286,
	287, 288, 289, 1018, 290, 1012, 1011, 0, 294, 291,
	292, 0, 295, 293, 0, 296, 297, 0, 0, 298,
	1003, 300, 0, 301, 302, 0, 303, 304, 305, 0,
	306, 307, 938, 308, 309, 310, 312, 314, 311, 315,
	316, 317, 318, 1025, 1026, 950, 241, 0, 0, 0,
	0, 0, 319, 320, 321, 1010, 0, 0, 0, 322,
	0, 323, 0, 0, 1035, 324, 325, 1023, 1024, 326,
	327, 0, 328, 1032, 0, 960, 329, 0, 330, 331,
	332, 333, 334, 996, 997, 1000, 390, 1037, 335, 336,
	0, 337, 338, 339, 340, 0, 0, 0, 242, 341,
	342, 344, 0, 1036, 343, 1005, 1006, 0, 966, 0,
	345, 1038, 998, 1039, 346, 347, 348, 1040, 349, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 0, 356,
	358, 357, 0, 359, 1033, 1041, 360, 361, 1042, 0,
	362, 363, 364, 989, 988, 365, 366, 367, 368, 0,
	369, 370, 372, 374, 371, 373, 378, 375, 376, 377,
	380, 0, 379, 1043, 381, 382, 383, 386, 387, 385,
	1044, 384, 0, 243, 1045, 388, 951, 999, 389, 1013,
	391, 392, 0, 0, 393, 0, 0, 0, 395, 396,
	397, 0, 0, 398, 399, 547, 1046, 400, 1047, 1027,
	401, 402, 394, 403, 404, 405, 406, 407, 408, 409,
	410, 0, 411, 412, 549, 550, 1028, 413, 552, 414,
	415, 0, 416, 0, 417, 418, 419, 420, 421, 422,
	423, 1009, 425, 424, 426, 0, 0, 0, 0, 0,
	0, 427, 0, 429, 430, 431, 428, 432, 433, 434,
	435, 0, 436, 437, 438, 1048, 439, 440, 441, 442,
	2702, 2703, 0, 444, 445, 451, 452, 446, 447, 453,
	454, 455, 456, 457, 0, 459, 460, 458, 461, 462,
	463, 992, 464, 448, 449, 465, 466, 1049, 467, 468,
	1007, 0, 469, 0, 470, 471, 472, 473, 450, 474,
	479, 1052, 475, 476, 477, 478, 1029, 0, 481, 482,
	0, 480, 0, 483, 484, 485, 486, 487, 488, 313,
	489, 0, 490, 1019, 1020, 1021, 1022, 0, 497, 0,
	491, 492, 1030, 493, 1031, 949, 494, 495, 496, 0,
	498, 499, 0, 0, 500, 501, 502, 504, 505, 503,
	506, 993, 507, 0, 0, 508, 509, 510, 564, 1016,
	1051, 0, 512, 511, 567, 0, 0, 0, 0, 513,
	514, 568, 515, 516, 517, 971, 943, 944, 945, 941,
	942, 954, 0, 0, 0, 0, 0, 0, 0, 1857,
	1858, 0, 244, 245, 246, 247, 248, 249, 955, 250,
	251, 0, 953, 0, 0, 0, 995, 959, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 0, 1008,
	0, 1015, 259, 1014, 0, 260, 261, 262, 263, 264,
	961, 994, 928, 265, 1053, 1054, 525, 0, 266, 267,
	1001, 0, 982, 0, 268, 269, 270, 271, 272, 273,
	274, 0, 0, 276, 277, 278, 275, 0, 279, 0,
	280, 281, 282, 0, 283, 1034, 284, 3954, 985, 983,
	984, 991, 987, 986, 990, 286, 287, 288, 289, 1018,
	290, 1012, 1011, 932, 294, 291, 292, 0, 295, 293,
	0, 296, 297, 0, 0, 298, 1003, 300, 0, 301,
	302, 0, 303, 304, 305, 0, 306, 307, 938, 308,
	309, 310, 312, 314, 311, 315, 316, 317, 318, 1025,
	1026, 950, 241, 0, 0, 0, 0, 0, 319, 320,
	321, 1010, 0, 0, 0, 322, 0, 323, 0, 0,
	1035, 324, 325, 1023, 1024, 326, 327, 0, 328, 1032,
	0, 960, 329, 0, 330, 331, 332, 333, 334, 996,
	997, 1000, 390, 0, 335, 336, 0, 337, 338, 339,
	340, 0, 0, 0, 242, 341, 342, 344, 0, 1036,
	343, 1005, 1006, 0, 966, 0, 345, 0, 998, 0,
	346, 347, 348, 1040, 349, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 0, 356, 358, 357, 0, 359,
	1033, 1041, 360, 361, 0, 0, 362, 363, 364, 989,
	988, 365, 366, 367, 368, 0, 369, 370, 372, 374,
	371, 373, 378, 375, 376, 377, 380, 0, 379, 1043,
	381, 382, 383, 386, 387, 385, 1044, 384, 929, 243,
	0, 388, 951, 999, 389, 1013, 391, 392, 0, 0,
	393, 0, 0, 0, 395, 396, 397, 0, 0, 398,
	399, 547, 1046, 400, 1047, 1027, 401, 402, 394, 403,
	404, 405, 406, 407, 408, 409, 410, 0, 411, 412,
	549, 550, 1028, 413, 552, 414, 415, 0, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 1009, 425, 424,
	426, 0, 0, 0, 0, 0, 0, 427, 0, 429,
	430, 431, 428, 432, 433, 434, 435, 0, 436, 437,
	438, 1048, 439, 440, 441, 442, 939, 443, 0, 444,
	445, 451, 452, 446, 447, 453, 454, 455, 456, 457,
	0, 459, 460, 458, 461, 462, 463, 992, 464, 448,
	449, 465, 466, 0, 467, 468, 1007, 0, 469, 0,
	470, 471, 472, 473, 450, 474, 479, 1052, 475, 476,
	477, 478, 1029, 0, 481, 482, 927, 480, 0, 483,
	484, 485, 486, 487, 488, 313, 489, 0, 490, 1019,
	1020, 1021, 1022, 0, 497, 0, 491, 492, 1030, 493,
	1031, 949, 494, 495, 496, 0, 3953, 499, 0, 933,
	500, 501, 502, 504, 505, 503, 506, 993, 507, 0,
	0, 508, 509, 510, 564, 1016, 1051, 0, 512, 511,
	567, 0, 0, 0, 0, 513, 514, 568, 515, 516,
	517, 971, 943, 944, 945, 941, 942, 954, 0, 0,
	0, 0, 0, 0, 0, 924, 925, 0, 244, 245,
	246, 247, 248, 249, 955, 250, 251, 0, 953, 0,
	0, 0, 995, 959, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 519, 1008, 0, 1015, 259, 1014,
	0, 260, 261, 262, 263, 264, 0, 994, 0, 265,
	1053, 1054, 525, 0, 266, 267, 1001, 0, 982, 0,
	268, 269, 270, 271, 272, 273, 274, 0, 0, 276,
	277, 278, 275, 0, 279, 0, 280, 281, 282, 0,
	283, 1034, 284, 285, 985, 983, 984, 991, 987, 986,
	990, 286, 287, 288, 289, 1018, 290, 1012, 1011, 0,
	294, 291, 292, 0, 295, 293, 0, 296, 297, 0,
	0, 298, 1003, 300, 0, 301, 302, 0, 303, 304,
	305, 0, 306, 307, 529, 308, 309, 310, 312, 314,
	311, 315, 316, 317, 318, 1025, 1026, 950, 241, 0,
	0, 0, 0, 0, 319, 320, 321, 1010, 0, 0,
	0, 322, 0, 323, 0, 0, 1035, 324, 325, 1023,
	1024, 326, 327, 0, 328, 1032, 0, 960, 329, 0,
	330, 331, 332, 333, 334, 996, 997, 1000, 390, 1037,
	335, 336, 0, 337, 338, 339, 340, 0, 0, 0,
	242, 341, 342, 344, 0, 1036, 343, 1005, 1006, 0,
	966, 0, 345, 1038, 998, 1039, 346, 347, 348, 1040,
	349, 0, 0, 0, 350, 351, 352, 353, 354, 355,
	0, 356, 358, 357, 0, 359, 1033, 1041, 360, 361,
	1042, 0, 362, 363, 364, 989, 988, 365, 366, 367,
	368, 0, 369, 370, 372, 374, 371, 373, 378, 375,
	376, 377, 380, 0, 379, 1043, 381, 382, 383, 386,
	387, 385, 1044, 384, 0, 243, 1045, 388, 951, 999,
	389, 1013, 391, 392, 0, 0, 393, 0, 0, 0,
	395, 396, 397, 0, 0, 398, 399, 547, 1046, 400,
	1047, 1027, 401, 402, 394, 403, 404, 405, 406, 407,
	408, 409, 410, 0, 411, 412, 549, 550, 1028, 413,
	552, 414, 415, 0, 416, 0, 417, 418, 419, 420,
	421, 422, 423, 1009, 425, 424, 426, 0, 0, 0,
	0, 0, 0, 427, 0, 429, 430, 431, 428, 432,
	433, 434, 435, 0, 436, 437, 438, 1048, 439, 440,
	441, 442, 939, 443, 0, 444, 445, 451, 452, 446,
	447, 453, 454, 455, 456, 457, 0, 459, 460, 458,
	461, 462, 463, 992, 464, 448, 449, 465, 466, 1049,
	467, 468, 1007, 0, 469, 0, 470, 471, 472, 473,
	450, 474, 479, 1052, 475, 476, 477, 478, 1029, 0,
	481, 482, 0, 480, 0, 483, 484, 485, 486, 487,
	488, 313, 489, 0, 490, 1019, 1020, 1021, 1022, 0,
	497, 0, 491, 492, 1030, 493, 1031, 949, 494, 495,
	496, 0, 498, 499, 0, 0, 500, 501, 502, 504,
	505, 503, 506, 993, 507, 0, 0, 508, 509, 510,
	564, 1016, 1051, 0, 512, 511, 567, 0, 917, 0,
	1091, 513, 514, 568, 515, 516, 517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	955, 995, 0, 0, 953, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 994, 0, 265, 523,
	524, 525, 0, 266, 267, 1001, 0, 982, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	1034, 284, 285, 985, 983, 984, 991, 987, 986, 990,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 1025, 1026, 0, 241, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 1035, 324, 325, 533, 534,
	326, 327, 0, 328, 1032, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 996, 997, 1000, 390, 1037, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 242,
	341, 342, 344, 0, 1036, 343, 540, 541, 0, 542,
	0, 345, 1038, 998, 1039, 346, 347, 348, 1040, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 1077,
	356, 358, 357, 0, 359, 1033, 1041, 360, 361, 1042,
	0, 362, 363, 364, 989, 988, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 1043, 381, 382, 383, 386, 387,
	385, 1044, 384, 0, 243, 1045, 388, 0, 999, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 1083, 395,
	396, 397, 0, 0, 398, 399, 547, 1046, 400, 1047,
	1027, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 1028, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 1048, 439, 440, 441,
	442, 554, 1085, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 206, 459, 460, 458, 461,
	462, 463, 992, 464, 448, 449, 465, 466, 1049, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 1029, 0, 481,
	482, 0, 480, 208, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 1030, 493, 1031, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 993, 507, 0, 0, 508, 509, 510, 1424,
	565, 566, 0, 512, 511, 567, 0, 1091, 0, 200,
	513, 514, 568, 515, 516, 517, 0, 201, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 1081, 995, 1750,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	519, 520, 0, 521, 259, 522, 0, 260, 261, 262,
	263, 264, 0, 994, 0, 265, 523, 524, 525, 0,
	266, 267, 1001, 0, 982, 0, 268, 269, 270, 271,
	272, 273, 274, 0, 0, 276, 277, 278, 275, 0,
	279, 0, 280, 281, 282, 0, 283, 1034, 284, 285,
	985, 983, 984, 991, 987, 986, 990, 286, 287, 288,
	289, 0, 290, 527, 528, 0, 294, 291, 292, 0,
	295, 293, 0, 296, 297, 0, 0, 298, 299, 300,
	0, 301, 302, 0, 303, 304, 305, 0, 306, 307,
	529, 308, 309, 310, 312, 314, 311, 315, 316, 317,
	318, 1025, 1026, 0, 241, 0, 0, 0, 0, 0,
	319, 320, 321, 532, 0, 0, 0, 322, 0, 323,
	0, 0, 1035, 324, 325, 533, 534, 326, 327, 0,
	328, 1032, 0, 536, 329, 0, 330, 331, 332, 333,
	334, 996, 997, 1000, 390, 1037, 335, 336, 0, 337,
	338, 339, 340, 0, 0, 0, 242, 341, 342, 344,
	0, 1036, 343, 540, 541, 0, 542, 0, 345, 1038,
	998, 1039, 346, 347, 348, 1040, 349, 0, 0, 0,
	350, 351, 352, 353, 354, 355, 1077, 356, 358, 357,
	0, 359, 1033, 1041, 360, 361, 1042, 0, 362, 363,
	364, 989, 988, 365, 366, 367, 368, 0, 369, 370,
	372, 374, 371, 373, 378, 375, 376, 377, 380, 0,
	379, 1043, 381, 382, 383, 386, 387, 385, 1044, 384,
	0, 243, 1045, 388, 0, 999, 389, 546, 391, 392,
	0, 0, 393, 0, 0, 1083, 395, 396, 397, 0,
	0, 398, 399, 547, 1046, 400, 1047, 1027, 401, 402,
	394, 403, 404, 405, 406, 407, 408, 409, 410, 0,
	411, 412, 549, 550, 1028, 413, 552, 414, 415, 0,
	416, 0, 417, 418, 419, 420, 421, 422, 423, 553,
	425, 424, 426, 0, 0, 0, 0, 0, 0, 427,
	0, 429, 430, 431, 428, 432, 433, 434, 435, 0,
	436, 437, 438, 1048, 439, 440, 441, 442, 554, 1085,
	0, 444, 445, 451, 452, 446, 447, 453, 454, 455,
	456, 457, 206, 459, 460, 458, 461, 462, 463, 992,
	464, 448, 449, 465, 466, 1049, 467, 468, 555, 0,
	469, 0, 470, 471, 472, 473, 450, 474, 479, 556,
	475, 476, 477, 478, 1029, 0, 481, 482, 0, 480,
	208, 483, 484, 485, 486, 487, 488, 313, 489, 0,
	490, 558, 559, 560, 561, 0, 497, 0, 491, 492,
	1030, 493, 1031, 0, 494, 495, 496, 0, 498, 499,
	0, 0, 500, 501, 502, 504, 505, 503, 506, 993,
	507, 0, 0, 508, 509, 510, 1424, 565, 566, 0,
	512, 511, 567, 0, 0, 0, 200, 513, 514, 568,
	515, 516, 517, 0, 201, 0, 0, 0, 2862, 0,
	1091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1081, 0, 1750, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 995, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 994, 0, 265, 523,
	524, 525, 0, 266, 267, 1001, 0, 982, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	1034, 284, 285, 985, 983, 984, 991, 987, 986, 990,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 1025, 1026, 0, 241, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 1035, 324, 325, 533, 534,
	326, 327, 0, 328, 1032, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 996, 997, 1000, 390, 1037, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 242,
	341, 342, 344, 0, 1036, 343, 540, 541, 0, 542,
	0, 345, 1038, 998, 1039, 346, 347, 348, 1040, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 1077,
	356, 358, 357, 0, 359, 1033, 1041, 360, 361, 1042,
	0, 362, 363, 364, 989, 988, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 1043, 381, 382, 383, 386, 387,
	385, 1044, 384, 0, 243, 1045, 388, 0, 999, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 1083, 395,
	396, 397, 0, 0, 398, 399, 547, 1046, 400, 1047,
	1027, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 1028, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 1048, 439, 440, 441,
	442, 554, 1085, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 0, 459, 460, 458, 461,
	462, 463, 992, 464, 448, 449, 465, 466, 1049, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 1029, 0, 481,
	482, 0, 480, 0, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 1030, 493, 1031, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 993, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 0, 512, 511, 567, 0, 1073, 0, 1091,
	513, 514, 568, 515, 516, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 1081, 0, 1079,
	995, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 519, 520, 0, 521, 259, 522, 0, 260,
	261, 262, 263, 264, 0, 994, 0, 265, 523, 524,
	525, 0, 266, 267, 1001, 0, 982, 0, 268, 269,
	270, 271, 272, 273, 274, 0, 0, 276, 277, 278,
	275, 0, 279, 0, 280, 281, 282, 0, 283, 1034,
	284, 285, 985, 983, 984, 991, 987, 986, 990, 286,
	287, 288, 289, 0, 290, 527, 528, 0, 294, 291,
	292, 0, 295, 293, 0, 296, 297, 0, 0, 298,
	299, 300, 0, 301, 302, 0, 303, 304, 305, 0,
	306, 307, 529, 308, 309, 310, 312, 314, 311, 315,
	316, 317, 318, 1025, 1026, 0, 241, 0, 0, 0,
	0, 0, 319, 320, 321, 532, 0, 0, 0, 322,
	0, 323, 0, 0, 1035, 324, 325, 533, 534, 326,
	327, 0, 328, 1032, 0, 536, 329, 0, 330, 331,
	332, 333, 334, 996, 997, 1000, 390, 1037, 335, 336,
	0, 337, 338, 339, 340, 0, 0, 0, 242, 341,
	342, 344, 0, 1036, 343, 540, 541, 0, 542, 0,
	345, 1038, 998, 1039, 346, 347, 348, 1040, 349, 0,
	0, 0, 350, 351, 352, 353, 354, 355, 1077, 356,
	358, 357, 0, 359, 1033, 1041, 360, 361, 1042, 0,
	362, 363, 364, 989, 988, 365, 366, 367, 368, 0,
	369, 370, 372, 374, 371, 373, 378, 375, 376, 377,
	380, 0, 379, 1043, 381, 382, 383, 386, 387, 385,
	1044, 384, 0, 243, 1045, 388, 0, 999, 389, 546,
	391, 392, 0, 0, 393, 0, 0, 1083, 395, 396,
	397, 0, 0, 398, 399, 547, 1046, 400, 1047, 1027,
	401, 402, 394, 403, 404, 405, 406, 407, 408, 409,
	410, 0, 411, 412, 549, 550, 1028, 413, 552, 414,
	415, 0, 416, 0, 417, 418, 419, 420, 421, 422,
	423, 553, 425, 424, 426, 0, 0, 0, 0, 0,
	0, 427, 0, 429, 430, 431, 428, 432, 433, 434,
	435, 0, 436, 437, 438, 1048, 439, 440, 441, 442,
	554, 1085, 0, 444, 445, 451, 452, 446, 447, 453,
	454, 455, 456, 457, 0, 459, 460, 458, 461, 462,
	463, 992, 464, 448, 449, 465, 466, 1049, 467, 468,
	555, 0, 469, 0, 470, 471, 472, 473, 450, 474,
	479, 556, 475, 476, 477, 478, 1029, 0, 481, 482,
	0, 480, 0, 483, 484, 485, 486, 487, 488, 313,
	489, 0, 490, 558, 559, 560, 561, 0, 497, 0,
	491, 492, 1030, 493, 1031, 0, 494, 495, 496, 0,
	498, 499, 0, 0, 500, 501, 502, 504, 505, 503,
	506, 993, 507, 0, 0, 508, 509, 510, 564, 565,
	566, 0, 512, 511, 567, 0, 1091, 0, 0, 513,
	514, 568, 515, 516, 517, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 1081, 995, 1079, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 519,
	520, 0, 521, 259, 522, 0, 260, 261, 262, 263,
	264, 0, 994, 0, 265, 523, 524, 525, 0, 266,
	267, 1001, 0, 982, 0, 268, 269, 270, 271, 272,
	273, 274, 0, 0, 276, 277, 278, 275, 0, 279,
	0, 280, 281, 282, 0, 283, 1034, 284, 285, 985,
	983, 984, 991, 987, 986, 990, 286, 287, 288, 289,
	0, 290, 527, 528, 0, 294, 291, 292, 0, 295,
	293, 0, 296, 297, 0, 0, 298, 299, 300, 0,
	301, 302, 0, 303, 304, 305, 0, 306, 307, 529,
	308, 309, 310, 312, 314, 311, 315, 316, 317, 318,
	1025, 1026, 0, 241, 0, 0, 0, 0, 0, 319,
	320, 321, 532, 0, 0, 0, 322, 0, 323, 0,
	0, 1035, 324, 325, 533, 534, 326, 327, 0, 328,
	1032, 0, 536, 329, 0, 330, 331, 332, 333, 334,
	996, 997, 1000, 390, 1037, 335, 336, 0, 337, 338,
	339, 340, 0, 0, 0, 242, 341, 342, 344, 0,
	1036, 343, 540, 541, 0, 542, 0, 345, 1038, 998,
	1039, 346, 347, 348, 1040, 349, 0, 0, 0, 350,
	351, 352, 353, 354, 355, 1077, 356, 358, 357, 0,
	359, 1033, 1041, 360, 361, 1042, 0, 362, 363, 364,
	989, 988, 365, 366, 367, 368, 0, 369, 370, 372,
	374, 371, 373, 378, 375, 376, 377, 380, 0, 379,
	1043, 381, 382, 383, 386, 387, 385, 1044, 384, 0,
	243, 1045, 388, 0, 999, 389, 546, 391, 392, 0,
	0, 393, 0, 0, 1083, 395, 396, 397, 0, 0,
	398, 399, 547, 1046, 400, 1047, 1027, 401, 402, 394,
	403, 404, 405, 406, 407, 408, 409, 410, 0, 411,
	412, 549, 550, 1028, 413, 552, 414, 415, 0, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 553, 425,
	424, 426, 0, 0, 0, 0, 0, 0, 427, 0,
	429, 430, 431, 428, 432, 433, 434, 435, 0, 436,
	437, 438, 1048, 439, 440, 441, 442, 554, 1085, 0,
	444, 445, 451, 452, 446, 447, 453, 454, 455, 456,
	457, 0, 459, 460, 458, 461, 462, 463, 992, 464,
	448, 449, 465, 466, 1049, 467, 468, 555, 0, 469,
	0, 470, 471, 472, 473, 450, 474, 479, 556, 475,
	476, 477, 478, 1029, 0, 481, 482, 0, 480, 0,
	483, 484, 485, 486, 487, 488, 313, 489, 0, 490,
	558, 559, 560, 561, 0, 497, 0, 491, 492, 1030,
	493, 1031, 0, 494, 495, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 504, 505, 503, 506, 993, 507,
	0, 0, 508, 509, 510, 564, 565, 566, 0, 512,
	511, 567, 0, 1091, 0, 0, 513, 514, 568, 515,
	516, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 1081, 995, 1079, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 519, 520, 0, 521,
	259, 522, 0, 260, 261, 262, 263, 264, 0, 994,
	0, 265, 523, 524, 525, 0, 266, 267, 1001, 0,
	982, 0, 268, 269, 270, 271, 272, 273, 274, 0,
	0, 276, 277, 278, 275, 0, 279, 0, 280, 281,
	282, 0, 283, 1034, 284, 285, 985, 983, 984, 991,
	987, 986, 990, 286, 287, 288, 289, 0, 290, 527,
	528, 0, 294, 291, 292, 0, 295, 293, 0, 296,
	297, 0, 0, 298, 299, 300, 0, 301, 302, 0,
	303, 304, 305, 0, 306, 307, 529, 308, 309, 310,
	312, 314, 311, 315, 316, 317, 318, 1025, 1026, 0,
	241, 0, 0, 0, 0, 0, 319, 320, 321, 532,
	0, 0, 0, 322, 0, 323, 0, 0, 1035, 324,
	325, 533, 534, 326, 327, 0, 328, 1032, 0, 536,
	329, 0, 330, 331, 332, 333, 334, 996, 997, 1000,
	390, 1037, 335, 336, 0, 337, 338, 339, 340, 0,
	0, 0, 242, 341, 342, 344, 0, 1036, 343, 540,
	541, 0, 542, 0, 345, 1038, 998, 1039, 346, 347,
	348, 1040, 349, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 0, 356, 358, 357, 0, 359, 1033, 1041,
	360, 361, 1042, 0, 362, 363, 364, 989, 988, 365,
	366, 367, 368, 0, 369, 370, 372, 374, 371, 373,
	378, 375, 376, 377, 380, 0, 379, 1043, 381, 382,
	383, 386, 387, 385, 1044, 384, 0, 243, 1045, 388,
	0, 999, 389, 546, 391, 392, 0, 0, 393, 0,
	0, 0, 395, 396, 397, 0, 0, 398, 399, 547,
	1046, 400, 1047, 1027, 401, 402, 394, 403, 404, 405,
	406, 407, 408, 409, 410, 0, 411, 412, 549, 550,
	1028, 413, 552, 414, 415, 0, 416, 0, 417, 418,
	419, 420, 421, 422, 423, 553, 425, 424, 426, 0,
	0, 0, 0, 0, 0, 427, 0, 429, 430, 431,
	428, 432, 433, 434, 435, 0, 436, 437, 438, 1048,
	439, 440, 441, 442, 554, 1085, 0, 444, 445, 451,
	452, 446, 447, 453, 454, 455, 456, 457, 0, 459,
	460, 458, 461, 462, 463, 992, 464, 448, 449, 465,
	466, 1049, 467, 468, 555, 0, 469, 0, 470, 471,
	472, 473, 450, 474, 479, 556, 475, 476, 477, 478,
	1029, 0, 481, 482, 0, 480, 0, 483, 484, 485,
	486, 487, 488, 313, 489, 0, 490, 558, 559, 560,
	561, 0, 497, 0, 491, 492, 1030, 493, 1031, 0,
	494, 495, 496, 0, 498, 499, 0, 0, 500, 501,
	502, 504, 505, 503, 506, 993, 507, 0, 0, 508,
	509, 510, 564, 565, 566, 0, 512, 511, 567, 0,
	917, 0, 1275, 513, 514, 568, 515, 516, 517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 1649, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 1241,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 1034, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 241,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 1035, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 537, 538, 539, 390,
	1037, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 0, 341, 342, 344, 0, 1036, 343, 540, 541,
	0, 542, 0, 345, 1038, 543, 1039, 346, 347, 348,
	1040, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 1041, 360,
	361, 1042, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 1043, 381, 382, 383,
	386, 387, 385, 1044, 384, 0, 0, 1045, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 1046,
	400, 1047, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 1048, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 206, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	1049, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 208, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 1424, 565, 566, 0, 512, 511, 567, 0, 0,
	0, 200, 513, 514, 568, 515, 516, 517, 0, 201,
	0, 0, 0, 1421, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 518, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 519, 520,
	0, 521, 259, 522, 0, 260, 261, 262, 263, 264,
	0, 0, 0, 265, 523, 524, 525, 0, 266, 267,
	526, 0, 1241, 0, 268, 269, 270, 271, 272, 273,
	274, 0, 0, 276, 277, 278, 275, 0, 279, 0,
	280, 281, 282, 0, 283, 1034, 284, 285, 0, 0,
	0, 0, 0, 0, 0, 286, 287, 288, 289, 0,
	290, 527, 528, 0, 294, 291, 292, 0, 295, 293,
	0, 296, 297, 0, 0, 298, 299, 300, 0, 301,
	302, 0, 303, 304, 305, 0, 306, 307, 529, 308,
	309, 310, 312, 314, 311, 315, 316, 317, 318, 530,
	531, 0, 241, 0, 0, 0, 0, 0, 319, 320,
	321, 532, 0, 0, 0, 322, 0, 323, 0, 0,
	1035, 324, 325, 533, 534, 326, 327, 0, 328, 535,
	0, 536, 329, 0, 330, 331, 332, 333, 334, 537,
	538, 539, 390, 1037, 335, 336, 0, 337, 338, 339,
	340, 0, 0, 0, 0, 341, 342, 344, 0, 1036,
	343, 540, 541, 0, 542, 0, 345, 1038, 543, 1039,
	346, 347, 348, 1040, 349, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 0, 356, 358, 357, 0, 359,
	544, 1041, 360, 361, 1042, 0, 362, 363, 364, 0,
	0, 365, 366, 367, 368, 0, 369, 370, 372, 374,
	371, 373, 378, 375, 376, 377, 380, 0, 379, 1043,
	381, 382, 383, 386, 387, 385, 1044, 384, 0, 0,
	1045, 388, 0, 545, 389, 546, 391, 392, 0, 0,
	393, 0, 0, 0, 395, 396, 397, 0, 0, 398,
	399, 547, 1046, 400, 1047, 548, 401, 402, 394, 403,
	404, 405, 406, 407, 408, 409, 410, 0, 411, 412,
	549, 550, 551, 413, 552, 414, 415, 0, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 553, 425, 424,
	426, 0, 0, 0, 0, 0, 0, 427, 0, 429,
	430, 431, 428, 432, 433, 434, 435, 0, 436, 437,
	438, 1048, 439, 440, 441, 442, 554, 443, 0, 444,
	445, 451, 452, 446, 447, 453, 454, 455, 456, 457,
	206, 459, 460, 458, 461, 462, 463, 0, 464, 448,
	449, 465, 466, 1049, 467, 468, 555, 0, 469, 0,
	470, 471, 472, 473, 450, 474, 479, 556, 475, 476,
	477, 478, 557, 0, 481, 482, 0, 480, 208, 483,
	484, 485, 486, 487, 488, 313, 489, 0, 490, 558,
	559, 560, 561, 0, 497, 0, 491, 492, 562, 493,
	563, 0, 494, 495, 496, 0, 498, 499, 0, 0,
	500, 501, 502, 504, 505, 503, 506, 0, 507, 0,
	0, 508, 509, 510, 1424, 565, 566, 0, 512, 511,
	567, 0, 0, 0, 200, 513, 514, 568, 515, 516,
	517, 0, 201, 0, 0, 0, 0, 0, 1275, 1274,
	0, 0, 0, 0, 1272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 519, 520, 0, 521, 259, 522, 0, 260, 261,
	262, 263, 264, 0, 0, 0, 265, 523, 524, 525,
	0, 266, 267, 526, 0, 1241, 0, 268, 269, 270,
	271, 272, 273, 274, 0, 0, 276, 277, 278, 275,
	0, 279, 0, 280, 281, 282, 0, 283, 1034, 284,
	285, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 289, 0, 290, 527, 528, 0, 294, 291, 292,
	0, 295, 293, 0, 296, 297, 0, 0, 298, 299,
	300, 0, 301, 302, 0, 303, 304, 305, 0, 306,
	307, 529, 308, 309, 310, 312, 314, 311, 315, 316,
	317, 318, 530, 531, 0, 241, 0, 0, 0, 0,
	0, 319, 320, 321, 532, 0, 0, 0, 322, 0,
	323, 0, 0, 1035, 324, 325, 533, 534, 326, 327,
	0, 328, 535, 0, 536, 329, 0, 330, 331, 332,
	333, 334, 537, 538, 539, 390, 1037, 335, 336, 0,
	337, 338, 339, 340, 0, 0, 0, 0, 341, 342,
	344, 0, 1036, 343, 540, 541, 0, 542, 0, 345,
	1038, 543, 1039, 346, 347, 348, 1040, 349, 0, 0,
	0, 350, 351, 352, 353, 354, 355, 0, 356, 358,
	357, 0, 359, 544, 1041, 360, 361, 1042, 0, 362,
	363, 364, 0, 0, 365, 366, 367, 368, 0, 369,
	370, 372, 374, 371, 373, 378, 375, 376, 377, 380,
	0, 379, 1043, 381, 382, 383, 386, 387, 385, 1044,
	384, 0, 0, 1045, 388, 0, 545, 389, 546, 391,
	392, 0, 0, 393, 0, 0, 0, 395, 396, 397,
	0, 0, 398, 399, 547, 1046, 400, 1047, 548, 401,
	402, 394, 403, 404, 405, 406, 407, 408, 409, 410,
	0, 411, 412, 549, 550, 551, 413, 552, 414, 415,
	0, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	553, 425, 424, 426, 0, 0, 0, 0, 0, 0,
	427, 0, 429, 430, 431, 428, 432, 433, 434, 435,
	0, 436, 437, 438, 1048, 439, 440, 441, 442, 554,
	443, 0, 444, 445, 451, 452, 446, 447, 453, 454,
	455, 456, 457, 0, 459, 460, 458, 461, 462, 463,
	0, 464, 448, 449, 465, 466, 1049, 467, 468, 555,
	0, 469, 0, 470, 471, 472, 473, 450, 474, 479,
	556, 475, 476, 477, 478, 557, 0, 481, 482, 0,
	480, 0, 483, 484, 485, 486, 487, 488, 313, 489,
	0, 490, 558, 559, 560, 561, 0, 497, 0, 491,
	492, 562, 493, 563, 0, 494, 495, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 504, 505, 503, 506,
	0, 507, 0, 0, 508, 509, 510, 564, 565, 566,
	0, 512, 511, 567, 0, 0, 0, 0, 513, 514,
	568, 515, 516, 517, 1275, 1274, 0, 0, 0, 0,
	1272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 1446, 250, 251,
	0, 0, 0, 0, 0, 518, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 519, 520, 0,
	521, 259, 522, 0, 260, 261, 262, 263, 264, 0,
	0, 0, 265, 523, 524, 525, 0, 266, 267, 526,
	0, 1241, 0, 268, 269, 270, 271, 272, 273, 274,
	0, 0, 276, 277, 278, 275, 0, 279, 0, 280,
	281, 282, 0, 283, 1034, 284, 285, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 289, 0, 290,
	527, 528, 0, 294, 291, 292, 0, 295, 293, 0,
	296, 297, 0, 0, 298, 299, 300, 0, 301, 302,
	0, 303, 304, 305, 0, 306, 307, 529, 308, 309,
	310, 312, 314, 311, 315, 316, 317, 318, 530, 531,
	0, 241, 0, 0, 0, 0, 0, 319, 320, 321,
	532, 0, 0, 0, 322, 0, 323, 0, 0, 1035,
	324, 325, 533, 534, 326, 327, 0, 328, 535, 0,
	536, 329, 0, 330, 331, 332, 333, 334, 537, 538,
	539, 390, 1037, 335, 336, 0, 337, 338, 339, 340,
	0, 0, 0, 0, 341, 342, 344, 0, 1036, 343,
	540, 541, 0, 542, 0, 345, 1038, 543, 1039, 346,
	347, 348, 1040, 349, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 0, 356, 358, 357, 0, 359, 544,
	1041, 360, 361, 1042, 0, 362, 363, 364, 0, 0,
	365, 366, 367, 368, 0, 369, 370, 372, 374, 371,
	373, 378, 375, 376, 377, 380, 0, 379, 1043, 381,
	382, 383, 386, 387, 385, 1044, 384, 0, 0, 1045,
	388, 0, 545, 389, 546, 391, 392, 0, 0, 393,
	0, 0, 0, 395, 396, 397, 0, 0, 398, 399,
	547, 1046, 400, 1047, 548, 401, 402, 394, 403, 404,
	405, 406, 407, 408, 409, 410, 0, 411, 412, 549,
	550, 551, 413, 552, 414, 415, 0, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 553, 425, 424, 426,
	0, 0, 0, 0, 0, 0, 427, 0, 429, 430,
	431, 428, 432, 433, 434, 435, 0, 436, 437, 438,
	1048, 439, 440, 441, 442, 554, 443, 0, 444, 445,
	451, 452, 446, 447, 453, 454, 455, 456, 457, 0,
	459, 460, 458, 461, 462, 463, 0, 464, 448, 449,
	465, 466, 1049, 467, 468, 555, 0, 469, 0, 470,
	471, 472, 473, 450, 474, 479, 556, 475, 476, 477,
	478, 557, 0, 481, 482, 0, 480, 0, 483, 484,
	485, 486, 487, 488, 313, 489, 0, 490, 558, 559,
	560, 561, 0, 497, 0, 491, 492, 562, 493, 563,
	0, 494, 495, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 504, 505, 503, 506, 0, 507, 0, 0,
	508, 509, 510, 564, 565, 566, 0, 512, 511, 567,
	0, 0, 0, 0, 513, 514, 568, 515, 516, 517,
	1275, 1274, 0, 0, 0, 0, 1272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 3098, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 525, 0, 266, 267, 526, 0, 1241, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	1034, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 241, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 1035, 324, 325, 533, 534,
	326, 327, 0, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 537, 538, 539, 390, 1037, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 0,
	341, 342, 344, 0, 1036, 343, 540, 541, 0, 542,
	0, 345, 1038, 543, 1039, 346, 347, 348, 1040, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	1933, 358, 357, 0, 359, 544, 1041, 360, 361, 1042,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 1043, 381, 382, 383, 386, 387,
	385, 1044, 384, 0, 0, 1045, 388, 0, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 1046, 400, 1047,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 1048, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 0, 459, 460, 458, 461,
	462, 463, 0, 464, 448, 449, 465, 466, 1049, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 0, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 0, 512, 511, 567, 0, 0, 0, 0,
	513, 514, 568, 515, 516, 517, 1275, 1274, 0, 0,
	0, 0, 1272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 1446,
	250, 251, 0, 0, 0, 0, 0, 518, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 519,
	520, 0, 521, 259, 522, 0, 260, 261, 262, 263,
	264, 0, 0, 0, 265, 523, 524, 525, 0, 266,
	267, 526, 0, 1241, 0, 268, 269, 270, 271, 272,
	273, 274, 0, 0, 276, 277, 278, 275, 0, 279,
	0, 280, 281, 282, 0, 283, 1034, 284, 285, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 289,
	0, 290, 527, 528, 0, 294, 291, 292, 0, 295,
	293, 0, 296, 297, 0, 0, 298, 299, 300, 0,
	301, 302, 0, 303, 304, 305, 0, 306, 307, 529,
	308, 309, 310, 312, 314, 311, 315, 316, 317, 318,
	530, 531, 0, 241, 0, 0, 0, 0, 0, 319,
	320, 321, 532, 0, 0, 0, 322, 0, 323, 0,
	0, 1035, 324, 325, 533, 534, 326, 327, 0, 328,
	535, 0, 536, 329, 0, 330, 331, 332, 333, 334,
	537, 538, 539, 390, 1037, 335, 336, 0, 337, 338,
	339, 340, 0, 0, 0, 0, 341, 342, 344, 0,
	1036, 343, 540, 541, 0, 542, 0, 345, 1038, 543,
	1039, 346, 347, 348, 1040, 349, 0, 0, 0, 350,
	351, 352, 353, 354, 355, 0, 356, 358, 357, 0,
	359, 544, 1041, 360, 361, 1042, 0, 362, 363, 364,
	0, 0, 365, 366, 367, 368, 0, 369, 370, 372,
	374, 371, 373, 378, 375, 376, 377, 380, 0, 379,
	1043, 381, 382, 383, 386, 387, 385, 1044, 384, 0,
	0, 1045, 388, 0, 545, 389, 546, 391, 392, 0,
	0, 393, 0, 0, 0, 395, 396, 397, 0, 0,
	398, 399, 547, 1046, 400, 1047, 548, 401, 402, 394,
	403, 404, 405, 406, 407, 408, 409, 410, 0, 411,
	412, 549, 550, 551, 413, 552, 414, 415, 0, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 553, 425,
	424, 426, 0, 0, 0, 0, 0, 0, 427, 0,
	429, 430, 431, 428, 432, 433, 434, 435, 0, 436,
	437, 438, 1048, 439, 440, 441, 442, 554, 443, 0,
	444, 445, 451, 452, 446, 447, 453, 454, 455, 456,
	457, 0, 459, 460, 458, 461, 462, 463, 0, 464,
	448, 449, 465, 466, 1049, 467, 468, 555, 0, 469,
	0, 470, 471, 472, 473, 450, 474, 479, 556, 475,
	476, 477, 478, 557, 0, 481, 482, 0, 480, 0,
	483, 484, 485, 486, 487, 488, 313, 489, 0, 490,
	558, 559, 560, 561, 0, 497, 0, 491, 492, 562,
	493, 563, 0, 494, 495, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 504, 505, 503, 506, 0, 507,
	0, 0, 508, 509, 510, 564, 565, 566, 0, 512,
	511, 567, 1091, 0, 0, 0, 513, 514, 568, 515,
	516, 517, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 995, 0, 1430, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 994, 0,
	265, 523, 524, 525, 0, 266, 267, 1001, 0, 982,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 1034, 284, 285, 985, 983, 984, 991, 987,
	986, 990, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 1025, 1026, 0, 241,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 1035, 324, 325,
	533, 534, 326, 327, 0, 328, 1032, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 996, 997, 1000, 390,
	1037, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 242, 341, 342, 344, 0, 1036, 343, 540, 541,
	0, 542, 0, 345, 1038, 998, 1039, 346, 347, 348,
	1040, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 1033, 1041, 360,
	361, 1042, 0, 362, 363, 364, 989, 988, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 1043, 381, 382, 383,
	386, 387, 385, 1044, 384, 0, 243, 1045, 388, 0,
	999, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 1046,
	400, 1047, 1027, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 1028,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 1048, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 992, 464, 448, 449, 465, 466,
	1049, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 1029,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 1030, 493, 1031, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 993, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 0, 512, 511, 567, 917, 0,
	238, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 525, 0, 266, 267, 526, 0, 0, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 0, 324, 325, 533, 534,
	326, 327, 0, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 537, 538, 539, 390, 0, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 0,
	341, 342, 344, 0, 0, 343, 540, 541, 0, 542,
	0, 345, 0, 543, 0, 346, 347, 348, 0, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	356, 358, 357, 0, 359, 544, 0, 360, 361, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 0, 381, 382, 383, 386, 387,
	385, 0, 384, 0, 0, 0, 388, 0, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 0, 400, 0,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 206, 459, 460, 458, 461,
	462, 463, 0, 464, 448, 449, 465, 466, 0, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 208, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 1424,
	565, 566, 0, 512, 511, 567, 238, 0, 0, 200,
	513, 514, 568, 515, 516, 517, 0, 201, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 518, 0, 172,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 519,
	520, 0, 521, 259, 522, 0, 260, 261, 262, 263,
	264, 0, 0, 0, 265, 523, 524, 525, 0, 266,
	267, 526, 0, 0, 0, 268, 269, 270, 271, 272,
	273, 274, 0, 0, 276, 277, 278, 275, 0, 279,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 289,
	0, 290, 527, 528, 0, 294, 291, 292, 0, 295,
	293, 0, 296, 297, 0, 0, 298, 299, 300, 0,
	301, 302, 0, 303, 304, 305, 0, 306, 307, 529,
	308, 309, 310, 312, 314, 311, 315, 316, 317, 318,
	530, 531, 0, 241, 0, 0, 0, 0, 0, 319,
	320, 321, 532, 0, 0, 0, 322, 0, 323, 0,
	0, 0, 324, 325, 533, 534, 326, 327, 0, 328,
	535, 0, 536, 329, 0, 330, 331, 332, 333, 334,
	537, 538, 539, 390, 0, 335, 336, 0, 337, 338,
	339, 340, 0, 0, 0, 242, 341, 342, 344, 0,
	0, 343, 540, 541, 0, 542, 0, 345, 0, 543,
	0, 346, 347, 348, 0, 349, 0, 0, 0, 350,
	351, 352, 353, 354, 355, 0, 356, 358, 357, 0,
	359, 544, 0, 360, 361, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 367, 368, 0, 369, 370, 372,
	374, 371, 373, 378, 375, 376, 377, 380, 0, 379,
	0, 381, 382, 383, 386, 387, 385, 0, 384, 0,
	243, 0, 388, 0, 545, 389, 546, 391, 392, 0,
	0, 393, 0, 0, 0, 395, 396, 397, 0, 0,
	398, 399, 547, 0, 400, 0, 548, 401, 402, 394,
	403, 404, 405, 406, 407, 408, 409, 410, 0, 411,
	412, 549, 550, 551, 413, 552, 414, 415, 0, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 553, 425,
	424, 426, 0, 0, 0, 0, 0, 0, 427, 0,
	429, 430, 431, 428, 432, 433, 434, 435, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 554, 443, 0,
	444, 445, 451, 452, 446, 447, 453, 454, 455, 456,
	457, 0, 459, 460, 458, 461, 462, 463, 0, 464,
	448, 449, 465, 466, 0, 467, 468, 555, 0, 469,
	0, 470, 471, 472, 473, 450, 474, 479, 556, 475,
	476, 477, 478, 557, 0, 481, 482, 0, 480, 0,
	483, 484, 485, 486, 487, 488, 313, 489, 0, 490,
	558, 559, 560, 561, 0, 497, 0, 491, 492, 562,
	493, 563, 0, 494, 495, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 504, 505, 503, 506, 0, 507,
	0, 0, 508, 509, 510, 564, 565, 566, 0, 512,
	511, 567, 0, 1365, 0, 238, 513, 514, 568, 515,
	516, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 1764, 518, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 519, 520,
	0, 521, 259, 522, 0, 260, 261, 262, 263, 264,
	0, 0, 0, 265, 523, 524, 525, 0, 266, 267,
	526, 0, 0, 0, 268, 269, 270, 271, 272, 273,
	274, 0, 0, 276, 277, 278, 275, 0, 279, 0,
	280, 281, 282, 0, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 0, 0, 286, 287, 288, 289, 0,
	290, 527, 528, 0, 294, 291, 292, 0, 295, 293,
	0, 296, 297, 0, 0, 298, 299, 300, 0, 301,
	302, 0, 303, 304, 305, 0, 306, 307, 529, 308,
	309, 310, 312, 314, 311, 315, 316, 317, 318, 530,
	531, 0, 241, 0, 0, 0, 0, 0, 319, 320,
	321, 532, 0, 0, 0, 322, 0, 323, 0, 0,
	0, 324, 325, 533, 534, 326, 327, 0, 328, 535,
	0, 536, 329, 0, 330, 331, 332, 333, 334, 537,
	538, 539, 390, 0, 335, 336, 0, 337, 338, 339,
	340, 0, 0, 0, 242, 341, 342, 344, 0, 0,
	343, 540, 541, 0, 542, 0, 345, 0, 543, 0,
	346, 347, 348, 0, 349, 0, 0, 0, 350, 351,
	352, 353, 354, 355, 0, 356, 358, 357, 0, 359,
	544, 0, 360, 361, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 367, 368, 0, 369, 370, 372, 374,
	371, 373, 378, 375, 376, 377, 380, 0, 379, 0,
	381, 382, 383, 386, 387, 385, 0, 384, 0, 243,
	0, 388, 0, 545, 389, 546, 391, 392, 0, 0,
	393, 0, 0, 0, 395, 396, 397, 0, 0, 398,
	399, 547, 0, 400, 0, 548, 401, 402, 394, 403,
	404, 405, 406, 407, 408, 409, 410, 0, 411, 412,
	549, 550, 551, 413, 552, 414, 415, 0, 416, 0,
	417, 418, 419, 420, 421, 422, 423, 553, 425, 424,
	426, 0, 0, 0, 0, 0, 0, 427, 0, 429,
	430, 431, 428, 432, 433, 434, 435, 0, 436, 437,
	438, 0, 439, 440, 441, 442, 554, 443, 0, 444,
	445, 451, 452, 446, 447, 453, 454, 455, 456, 457,
	0, 459, 460, 458, 461, 462, 463, 0, 464, 448,
	449, 465, 466, 0, 467, 468, 555, 0, 469, 0,
	470, 471, 472, 473, 450, 474, 479, 556, 475, 476,
	477, 478, 557, 0, 481, 482, 0, 480, 0, 483,
	484, 485, 486, 487, 488, 313, 489, 0, 490, 558,
	559, 560, 561, 0, 497, 0, 491, 492, 562, 493,
	563, 0, 494, 495, 496, 0, 498, 499, 0, 0,
	500, 501, 502, 504, 505, 503, 506, 0, 507, 0,
	0, 508, 509, 510, 564, 565, 566, 0, 512, 511,
	567, 0, 238, 2627, 0, 513, 514, 568, 515, 516,
	517, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 1369, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 0, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 537, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 0, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 0, 381, 382, 383,
	386, 387, 385, 0, 384, 0, 0, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 0, 512, 511, 567, 238, 0,
	0, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 518,
	0, 4102, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 519, 520, 0, 521, 259, 522, 0, 260, 261,
	262, 263, 264, 0, 0, 0, 265, 523, 524, 525,
	0, 266, 267, 526, 0, 0, 0, 268, 269, 270,
	271, 272, 273, 274, 0, 0, 276, 277, 278, 275,
	0, 279, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 289, 0, 290, 527, 528, 0, 294, 291, 292,
	0, 295, 293, 0, 296, 297, 0, 0, 298, 299,
	300, 0, 301, 302, 0, 303, 304, 305, 0, 306,
	307, 529, 308, 309, 310, 312, 314, 311, 315, 316,
	317, 318, 530, 531, 0, 241, 0, 0, 0, 0,
	0, 319, 320, 321, 532, 0, 0, 0, 322, 0,
	323, 0, 0, 0, 324, 325, 533, 534, 326, 327,
	0, 328, 535, 0, 536, 329, 0, 330, 331, 332,
	333, 334, 537, 538, 539, 390, 0, 335, 336, 0,
	337, 338, 339, 340, 0, 0, 0, 242, 341, 342,
	344, 0, 0, 343, 540, 541, 0, 542, 0, 345,
	0, 543, 0, 346, 347, 348, 0, 349, 0, 0,
	0, 350, 351, 352, 353, 354, 355, 0, 356, 358,
	357, 0, 359, 544, 0, 360, 361, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 367, 368, 0, 369,
	370, 372, 374, 371, 373, 378, 375, 376, 377, 380,
	0, 379, 0, 381, 382, 383, 386, 387, 385, 0,
	384, 0, 243, 0, 388, 0, 545, 389, 546, 391,
	392, 0, 0, 393, 0, 0, 0, 395, 396, 397,
	0, 0, 398, 399, 547, 0, 400, 0, 548, 401,
	402, 394, 403, 404, 405, 406, 407, 408, 409, 410,
	0, 411, 412, 549, 550, 551, 413, 552, 414, 415,
	0, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	553, 425, 424, 426, 0, 0, 0, 0, 0, 0,
	427, 0, 429, 430, 431, 428, 432, 433, 434, 435,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 554,
	443, 0, 444, 445, 451, 452, 446, 447, 453, 454,
	455, 456, 457, 0, 459, 460, 458, 461, 462, 463,
	0, 464, 448, 449, 465, 466, 0, 467, 468, 555,
	0, 469, 0, 470, 471, 472, 473, 450, 474, 479,
	556, 475, 476, 477, 478, 557, 0, 481, 482, 0,
	480, 0, 483, 484, 485, 486, 487, 488, 313, 489,
	0, 490, 558, 559, 560, 561, 0, 497, 0, 491,
	492, 562, 493, 563, 0, 494, 495, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 504, 505, 503, 506,
	0, 507, 0, 0, 508, 509, 510, 564, 565, 566,
	238, 512, 511, 567, 0, 0, 0, 0, 513, 514,
	568, 515, 516, 517, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 3045, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 525, 0, 266, 267, 526, 0, 0, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 241, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 0, 324, 325, 533, 534,
	326, 327, 0, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 537, 538, 539, 390, 0, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 242,
	341, 342, 344, 0, 0, 343, 540, 541, 0, 542,
	0, 345, 0, 543, 0, 346, 347, 348, 0, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	356, 358, 357, 0, 359, 544, 0, 360, 361, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 0, 381, 382, 383, 386, 387,
	385, 0, 384, 0, 243, 0, 388, 0, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 0, 400, 0,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 0, 459, 460, 458, 461,
	462, 463, 0, 464, 448, 449, 465, 466, 0, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 0, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 238, 512, 511, 567, 0, 0, 0, 0,
	513, 514, 568, 515, 516, 517, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 1369, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 0, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 537, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 0, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 0, 381, 382, 383,
	386, 387, 385, 0, 384, 0, 0, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 0, 512, 511, 567, 238, 0,
	0, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 518,
	0, 2600, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 519, 520, 0, 521, 259, 522, 0, 260, 261,
	262, 263, 264, 0, 0, 0, 265, 523, 524, 525,
	0, 266, 267, 526, 0, 0, 0, 268, 269, 270,
	271, 272, 273, 274, 0, 0, 276, 277, 278, 275,
	0, 279, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 289, 0, 290, 527, 528, 0, 294, 291, 292,
	0, 295, 293, 0, 296, 297, 0, 0, 298, 299,
	300, 0, 301, 302, 0, 303, 304, 305, 0, 306,
	307, 529, 308, 309, 310, 312, 314, 311, 315, 316,
	317, 318, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 321, 532, 0, 0, 0, 322, 0,
	323, 0, 0, 0, 324, 325, 533, 534, 326, 327,
	0, 328, 535, 0, 536, 329, 0, 330, 331, 332,
	333, 334, 537, 538, 539, 390, 0, 335, 336, 0,
	337, 338, 339, 340, 0, 0, 0, 0, 341, 342,
	344, 0, 0, 343, 540, 541, 0, 542, 0, 345,
	0, 543, 0, 346, 347, 348, 0, 349, 0, 0,
	0, 350, 351, 352, 353, 354, 355, 0, 356, 358,
	357, 0, 359, 544, 0, 360, 361, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 367, 368, 0, 369,
	370, 372, 374, 371, 373, 378, 375, 376, 377, 380,
	0, 379, 0, 381, 382, 383, 386, 387, 385, 0,
	384, 0, 0, 0, 388, 0, 545, 389, 546, 391,
	392, 0, 0, 393, 0, 0, 0, 395, 396, 397,
	0, 0, 398, 399, 547, 0, 400, 0, 548, 401,
	402, 394, 403, 404, 405, 406, 407, 408, 409, 410,
	0, 411, 412, 549, 550, 551, 413, 552, 414, 415,
	0, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	553, 425, 424, 426, 0, 0, 0, 0, 0, 0,
	427, 0, 429, 430, 431, 428, 432, 433, 434, 435,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 554,
	443, 0, 444, 445, 451, 452, 446, 447, 453, 454,
	455, 456, 457, 0, 459, 460, 458, 461, 462, 463,
	0, 464, 448, 449, 465, 466, 0, 467, 468, 555,
	0, 469, 0, 470, 471, 472, 473, 450, 474, 479,
	556, 475, 476, 477, 478, 557, 0, 481, 482, 0,
	480, 0, 483, 484, 485, 486, 487, 488, 313, 489,
	0, 490, 558, 559, 560, 561, 0, 497, 0, 491,
	492, 562, 493, 563, 0, 494, 495, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 504, 505, 503, 506,
	0, 507, 0, 0, 508, 509, 510, 564, 565, 566,
	0, 512, 511, 567, 238, 0, 0, 0, 513, 514,
	568, 515, 516, 517, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 518, 0, 3187, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 519, 520, 0,
	521, 259, 522, 0, 260, 261, 262, 263, 264, 0,
	0, 0, 265, 523, 524, 525, 0, 266, 267, 526,
	0, 0, 0, 268, 269, 270, 271, 272, 273, 274,
	0, 0, 276, 277, 278, 275, 0, 279, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 289, 0, 290,
	527, 528, 0, 294, 291, 292, 0, 295, 293, 0,
	296, 297, 0, 0, 298, 299, 300, 0, 301, 302,
	0, 303, 304, 305, 0, 306, 307, 529, 308, 309,
	310, 312, 314, 311, 315, 316, 317, 318, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 321,
	532, 0, 0, 0, 322, 0, 323, 0, 0, 0,
	324, 325, 533, 534, 326, 327, 0, 328, 535, 0,
	536, 329, 0, 330, 331, 332, 333, 334, 537, 538,
	539, 390, 0, 335, 336, 0, 337, 338, 339, 340,
	0, 0, 0, 0, 341, 342, 344, 0, 0, 343,
	540, 541, 0, 542, 0, 345, 0, 543, 0, 346,
	347, 348, 0, 349, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 0, 356, 358, 357, 0, 359, 544,
	0, 360, 361, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 367, 368, 0, 369, 370, 372, 374, 371,
	373, 378, 375, 376, 377, 380, 0, 379, 0, 381,
	382, 383, 386, 387, 385, 0, 384, 0, 0, 0,
	388, 0, 545, 389, 546, 391, 392, 0, 0, 393,
	0, 0, 0, 395, 396, 397, 0, 0, 398, 399,
	547, 0, 400, 0, 548, 401, 402, 394, 403, 404,
	405, 406, 407, 408, 409, 410, 0, 411, 412, 549,
	550, 551, 413, 552, 414, 415, 0, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 553, 425, 424, 426,
	0, 0, 0, 0, 0, 0, 427, 0, 429, 430,
	431, 428, 432, 433, 434, 435, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 554, 443, 0, 444, 445,
	451, 452, 446, 447, 453, 454, 455, 456, 457, 0,
	459, 460, 458, 461, 462, 463, 0, 464, 448, 449,
	465, 466, 0, 467, 468, 555, 0, 469, 0, 470,
	471, 472, 473, 450, 474, 479, 556, 475, 476, 477,
	478, 557, 0, 481, 482, 0, 480, 0, 483, 484,
	485, 486, 487, 488, 313, 489, 0, 490, 558, 559,
	560, 561, 0, 497, 0, 491, 492, 562, 493, 563,
	0, 494, 495, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 504, 505, 503, 506, 0, 507, 0, 0,
	508, 509, 510, 564, 565, 566, 0, 512, 511, 567,
	0, 767, 0, 651, 513, 514, 568, 515, 516, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 2030, 518, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 519, 520, 0, 521,
	259, 522, 0, 260, 261, 262, 263, 264, 0, 0,
	0, 265, 523, 524, 525, 0, 266, 267, 526, 0,
	0, 0, 268, 269, 270, 271, 272, 273, 274, 0,
	0, 276, 277, 278, 275, 0, 279, 0, 280, 281,
	282, 0, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 0, 0, 286, 287, 658, 289, 0, 290, 527,
	528, 0, 294, 291, 292, 0, 295, 293, 0, 296,
	297, 0, 0, 298, 299, 300, 0, 301, 302, 0,
	303, 304, 305, 0, 306, 307, 529, 308, 309, 310,
	312, 314, 311, 315, 316, 317, 318, 530, 531, 0,
	241, 0, 0, 0, 0, 0, 319, 320, 321, 532,
	0, 0, 0, 322, 0, 323, 0, 765, 0, 324,
	325, 533, 534, 326, 327, 0, 328, 535, 0, 536,
	329, 0, 330, 331, 332, 333, 334, 537, 538, 539,
	390, 0, 335, 336, 0, 337, 338, 339, 340, 0,
	0, 0, 242, 341, 342, 344, 0, 0, 343, 540,
	541, 0, 542, 0, 345, 0, 543, 0, 346, 347,
	348, 0, 349, 0, 0, 0, 350, 351, 352, 353,
	354, 355, 0, 356, 358, 357, 0, 359, 544, 0,
	360, 361, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 367, 368, 0, 369, 370, 372, 374, 371, 373,
	378, 375, 376, 377, 380, 0, 379, 0, 381, 382,
	383, 386, 387, 385, 0, 384, 0, 243, 0, 388,
	0, 545, 389, 546, 391, 392, 0, 0, 393, 0,
	0, 0, 395, 396, 397, 0, 0, 398, 399, 547,
	0, 400, 0, 548, 401, 402, 394, 403, 404, 405,
	406, 407, 408, 409, 410, 0, 411, 412, 549, 550,
	551, 413, 552, 414, 415, 0, 416, 0, 417, 418,
	419, 420, 421, 422, 423, 553, 425, 424, 426, 0,
	0, 0, 0, 0, 0, 427, 0, 429, 430, 431,
	428, 432, 433, 434, 435, 0, 436, 437, 438, 0,
	439, 440, 441, 442, 554, 443, 0, 444, 445, 451,
	452, 446, 447, 453, 454, 455, 456, 457, 0, 459,
	460, 458, 461, 462, 463, 0, 464, 448, 449, 465,
	466, 0, 467, 468, 555, 0, 469, 0, 470, 471,
	472, 473, 450, 474, 479, 556, 475, 476, 477, 478,
	557, 0, 481, 482, 0, 480, 656, 483, 484, 485,
	486, 657, 488, 313, 489, 0, 490, 558, 559, 560,
	561, 0, 497, 0, 491, 492, 562, 493, 563, 0,
	494, 495, 496, 0, 498, 499, 0, 0, 500, 501,
	502, 504, 505, 503, 506, 0, 507, 0, 0, 508,
	509, 510, 564, 565, 566, 0, 512, 511, 567, 0,
	649, 0, 651, 513, 514, 568, 515, 516, 517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 661, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 658, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 241,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 0, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 537, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 242, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 0, 381, 382, 383,
	386, 387, 385, 0, 384, 0, 243, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 656, 483, 484, 485, 486,
	657, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 651, 512, 511, 567, 0, 0,
	0, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 661, 518, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 519, 520, 0,
	521, 259, 522, 0, 260, 261, 262, 263, 264, 0,
	0, 0, 265, 523, 524, 525, 0, 266, 267, 526,
	0, 0, 0, 268, 269, 270, 271, 272, 273, 274,
	0, 0, 276, 277, 278, 275, 0, 279, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 658, 289, 0, 290,
	527, 528, 0, 294, 291, 292, 0, 295, 293, 0,
	296, 297, 0, 0, 298, 299, 300, 0, 301, 302,
	0, 303, 304, 305, 0, 306, 307, 529, 308, 309,
	310, 312, 314, 311, 315, 316, 317, 318, 530, 531,
	0, 241, 0, 0, 0, 0, 0, 319, 320, 321,
	532, 0, 0, 0, 322, 0, 323, 0, 0, 0,
	324, 325, 533, 534, 326, 327, 0, 328, 535, 0,
	536, 329, 0, 330, 331, 332, 333, 334, 537, 538,
	539, 390, 0, 335, 336, 0, 337, 338, 339, 340,
	0, 0, 0, 242, 341, 342, 344, 0, 0, 343,
	540, 541, 0, 542, 0, 345, 0, 543, 0, 346,
	347, 348, 0, 349, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 0, 356, 358, 357, 0, 359, 544,
	0, 360, 361, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 367, 368, 0, 369, 370, 372, 374, 371,
	373, 378, 375, 376, 377, 380, 0, 379, 0, 381,
	382, 383, 386, 387, 385, 0, 384, 0, 243, 0,
	388, 0, 545, 389, 546, 391, 392, 0, 0, 393,
	0, 0, 0, 395, 396, 397, 0, 0, 398, 399,
	547, 0, 400, 0, 548, 401, 402, 394, 403, 404,
	405, 406, 407, 408, 409, 410, 0, 411, 412, 549,
	550, 551, 413, 552, 414, 415, 0, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 553, 425, 424, 426,
	0, 0, 0, 0, 0, 0, 427, 0, 429, 430,
	431, 428, 432, 433, 434, 435, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 554, 443, 0, 444, 445,
	451, 452, 446, 447, 453, 454, 455, 456, 457, 0,
	459, 460, 458, 461, 462, 463, 0, 464, 448, 449,
	465, 466, 0, 467, 468, 555, 0, 469, 0, 470,
	471, 472, 473, 450, 474, 479, 556, 475, 476, 477,
	478, 557, 0, 481, 482, 0, 480, 656, 483, 484,
	485, 486, 657, 488, 313, 489, 0, 490, 558, 559,
	560, 561, 0, 497, 0, 491, 492, 562, 493, 563,
	0, 494, 495, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 504, 505, 503, 506, 0, 507, 0, 0,
	508, 509, 510, 564, 565, 566, 651, 512, 511, 567,
	0, 0, 0, 0, 513, 514, 568, 515, 516, 517,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 661, 518, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 519,
	520, 0, 521, 259, 522, 0, 260, 261, 262, 263,
	264, 0, 0, 0, 265, 523, 524, 525, 0, 266,
	267, 526, 0, 0, 0, 268, 269, 270, 271, 272,
	273, 274, 0, 0, 276, 277, 278, 275, 0, 279,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 658, 289,
	0, 290, 527, 528, 0, 294, 291, 292, 0, 295,
	293, 0, 296, 297, 0, 0, 298, 299, 300, 0,
	301, 302, 0, 303, 304, 305, 0, 306, 307, 529,
	308, 309, 310, 312, 314, 311, 315, 316, 317, 318,
	530, 531, 0, 241, 0, 0, 0, 0, 0, 319,
	320, 321, 532, 0, 0, 0, 322, 0, 323, 0,
	0, 0, 324, 325, 533, 534, 326, 327, 0, 328,
	535, 0, 536, 329, 0, 330, 331, 332, 333, 334,
	537, 538, 539, 390, 0, 335, 336, 0, 337, 338,
	339, 340, 0, 0, 0, 242, 341, 342, 344, 0,
	0, 343, 540, 541, 0, 542, 0, 345, 0, 543,
	0, 346, 347, 348, 0, 349, 0, 0, 0, 350,
	351, 352, 353, 354, 355, 0, 356, 358, 357, 0,
	359, 544, 0, 360, 361, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 367, 368, 0, 369, 370, 372,
	374, 371, 373, 378, 375, 376, 377, 380, 0, 379,
	0, 381, 382, 383, 386, 387, 385, 0, 384, 0,
	243, 0, 388, 0, 545, 389, 546, 391, 392, 0,
	0, 393, 0, 0, 0, 395, 396, 397, 0, 0,
	398, 399, 547, 0, 400, 0, 548, 401, 402, 394,
	403, 404, 405, 406, 407, 408, 409, 410, 0, 411,
	412, 549, 550, 551, 413, 552, 414, 415, 0, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 553, 425,
	424, 426, 0, 0, 0, 0, 0, 0, 427, 0,
	429, 430, 431, 428, 432, 433, 434, 435, 0, 436,
	437, 438, 0, 2067, 440, 441, 442, 554, 443, 0,
	444, 445, 451, 452, 446, 447, 453, 454, 455, 456,
	457, 0, 459, 460, 458, 461, 462, 463, 0, 464,
	448, 449, 465, 466, 0, 467, 468, 555, 0, 469,
	0, 470, 471, 472, 473, 450, 474, 479, 556, 475,
	476, 477, 478, 557, 0, 481, 482, 0, 480, 656,
	483, 484, 485, 486, 657, 488, 313, 489, 0, 490,
	558, 559, 560, 561, 0, 497, 0, 491, 492, 562,
	493, 563, 0, 494, 495, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 504, 505, 503, 506, 0, 507,
	0, 0, 508, 509, 510, 564, 565, 566, 1799, 512,
	511, 567, 0, 0, 0, 0, 513, 514, 568, 515,
	516, 517, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 661, 0,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 0, 1805, 0, 1795, 259, 1811, 0, 260, 261,
	262, 263, 264, 0, 0, 0, 265, 1820, 1821, 0,
	0, 266, 267, 0, 0, 1241, 0, 268, 269, 270,
	271, 272, 273, 274, 0, 0, 276, 277, 278, 275,
	0, 279, 0, 280, 281, 282, 0, 283, 1034, 284,
	285, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 289, 1018, 290, 1809, 1808, 0, 294, 291, 292,
	0, 295, 293, 0, 296, 297, 0, 0, 298, 1003,
	300, 0, 301, 302, 0, 303, 304, 305, 0, 306,
	307, 0, 308, 309, 310, 312, 314, 311, 315, 316,
	317, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 321, 1807, 0, 0, 0, 322, 0,
	323, 0, 0, 1035, 324, 325, 1816, 1817, 326, 327,
	0, 328, 0, 0, 0, 329, 0, 330, 331, 332,
	333, 334, 0, 0, 0, 390, 1037, 335, 336, 0,
	337, 338, 339, 340, 0, 0, 0, 0, 341, 342,
	344, 0, 1036, 343, 1802, 1803, 0, 1798, 0, 345,
	1038, 0, 1039, 346, 347, 348, 1040, 349, 0, 0,
	0, 350, 351, 352, 353, 354, 355, 0, 356, 358,
	357, 0, 359, 0, 1041, 360, 361, 1042, 0, 362,
	363, 364, 0, 0, 365, 366, 367, 368, 0, 369,
	370, 372, 374, 371, 373, 378, 375, 376, 377, 380,
	0, 379, 1043, 381, 382, 383, 386, 387, 385, 1044,
	384, 0, 0, 1045, 388, 0, 0, 389, 1810, 391,
	392, 0, 0, 393, 0, 0, 0, 395, 396, 397,
	0, 0, 398, 399, 0, 1046, 400, 1047, 0, 401,
	402, 394, 403, 404, 405, 406, 407, 408, 409, 410,
	0, 411, 412, 1792, 1793, 0, 413, 0, 414, 415,
	0, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	1806, 425, 424, 426, 0, 0, 0, 0, 0, 0,
	427, 0, 429, 430, 431, 428, 432, 433, 434, 435,
	0, 436, 437, 438, 1048, 439, 440, 441, 442, 0,
	443, 0, 444, 445, 451, 452, 446, 447, 453, 454,
	455, 456, 457, 0, 459, 460, 458, 461, 462, 463,
	0, 464, 448, 449, 465, 466, 1049, 467, 468, 1804,
	0, 469, 0, 470, 471, 472, 473, 450, 474, 479,
	1819, 475, 476, 477, 478, 0, 0, 481, 482, 0,
	480, 0, 483, 484, 485, 486, 487, 488, 313, 489,
	0, 490, 1812, 1813, 1814, 1815, 0, 497, 0, 491,
	492, 0, 493, 0, 0, 494, 495, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 504, 505, 503, 506,
	0, 507, 0, 0, 508, 509, 510, 0, 1796, 1818,
	0, 512, 511, 0, 0, 0, 0, 0, 513, 514,
	0, 515, 516, 517, 1275, 1274, 0, 0, 0, 0,
	1272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 1786, 0, 0, 0, 518, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 519, 520, 0,
	521, 259, 522, 0, 260, 261, 262, 263, 264, 0,
	0, 0, 265, 523, 524, 525, 0, 266, 267, 526,
	0, 1241, 0, 268, 269, 270, 271, 272, 273, 274,
	0, 0, 276, 277, 278, 275, 0, 279, 0, 280,
	281, 282, 0, 283, 1034, 284, 285, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 289, 0, 290,
	527, 528, 0, 294, 291, 292, 0, 295, 293, 0,
	296, 297, 0, 0, 298, 299, 300, 0, 301, 302,
	0, 303, 304, 305, 0, 306, 307, 529, 308, 309,
	310, 312, 314, 311, 315, 316, 317, 318, 530, 531,
	0, 241, 0, 0, 0, 0, 0, 319, 320, 321,
	532, 0, 0, 0, 322, 0, 323, 0, 0, 1035,
	324, 325, 533, 534, 326, 327, 0, 328, 535, 0,
	536, 329, 0, 330, 331, 332, 333, 334, 537, 538,
	539, 390, 1037, 335, 336, 0, 337, 338, 339, 340,
	0, 0, 0, 0, 341, 342, 344, 0, 1036, 343,
	540, 541, 0, 542, 0, 345, 1038, 543, 1039, 346,
	347, 348, 1040, 349, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 0, 356, 358, 357, 0, 359, 544,
	1041, 360, 361, 1042, 0, 362, 363, 364, 0, 0,
	365, 366, 367, 368, 0, 369, 370, 372, 374, 371,
	373, 378, 375, 376, 377, 380, 0, 379, 1043, 381,
	382, 383, 386, 387, 385, 1044, 384, 0, 0, 1045,
	388, 3346, 545, 389, 546, 391, 392, 0, 0, 393,
	0, 0, 0, 395, 396, 397, 0, 0, 398, 399,
	547, 1046, 400, 1047, 548, 401, 402, 394, 403, 404,
	405, 406, 407, 408, 409, 410, 0, 411, 412, 549,
	550, 551, 413, 552, 414, 415, 0, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 553, 425, 424, 426,
	0, 0, 0, 0, 0, 0, 427, 0, 429, 430,
	431, 428, 432, 433, 434, 435, 0, 436, 437, 438,
	1048, 439, 440, 441, 442, 554, 443, 0, 444, 445,
	451, 452, 446, 447, 453, 454, 455, 456, 457, 0,
	459, 460, 458, 461, 462, 463, 0, 464, 448, 449,
	465, 466, 1049, 467, 468, 555, 0, 469, 0, 470,
	471, 472, 473, 450, 474, 479, 556, 475, 476, 477,
	478, 557, 0, 481, 482, 0, 480, 0, 483, 484,
	485, 486, 487, 488, 313, 489, 0, 490, 558, 559,
	560, 561, 0, 497, 0, 491, 492, 562, 493, 563,
	0, 494, 495, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 504, 505, 503, 506, 0, 507, 0, 0,
	508, 509, 510, 564, 565, 566, 0, 512, 511, 567,
	0, 0, 0, 0, 513, 514, 568, 515, 516, 517,
	1275, 1274, 0, 0, 0, 0, 1272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 525, 0, 266, 267, 526, 0, 1241, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	1034, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 241, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 1035, 324, 325, 533, 534,
	326, 327, 0, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 537, 538, 539, 390, 1037, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 0,
	341, 342, 344, 0, 1036, 343, 540, 541, 0, 542,
	0, 345, 1038, 543, 1039, 346, 347, 348, 1040, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	356, 358, 357, 0, 359, 544, 1041, 360, 361, 1042,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 1043, 381, 382, 383, 386, 387,
	385, 1044, 384, 0, 0, 1045, 388, 3022, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 1046, 400, 1047,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 1048, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 0, 459, 460, 458, 461,
	462, 463, 0, 464, 448, 449, 465, 466, 1049, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 0, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 0, 512, 511, 567, 1275, 1274, 0, 0,
	513, 514, 568, 515, 516, 517, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 518, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 519,
	520, 0, 521, 259, 522, 0, 260, 261, 262, 263,
	264, 0, 0, 0, 265, 523, 524, 525, 0, 266,
	267, 526, 0, 1241, 0, 268, 269, 270, 271, 272,
	273, 274, 0, 0, 276, 277, 278, 275, 0, 279,
	0, 280, 281, 282, 0, 283, 1034, 284, 285, 0,
	0, 0, 0, 0, 0, 3011, 286, 287, 288, 289,
	0, 290, 527, 528, 0, 294, 291, 292, 0, 295,
	293, 0, 296, 297, 0, 0, 298, 299, 300, 0,
	301, 302, 0, 303, 304, 305, 0, 306, 307, 529,
	308, 309, 310, 312, 314, 311, 315, 316, 317, 318,
	530, 531, 0, 241, 0, 0, 0, 0, 0, 319,
	320, 321, 532, 0, 0, 0, 322, 0, 323, 0,
	0, 1035, 324, 325, 533, 534, 326, 327, 0, 328,
	535, 0, 536, 329, 0, 330, 331, 332, 333, 334,
	537, 538, 539, 390, 1037, 335, 336, 0, 337, 338,
	339, 340, 0, 0, 0, 0, 341, 342, 344, 0,
	1036, 343, 540, 541, 0, 542, 0, 345, 1038, 543,
	1039, 346, 347, 348, 1040, 349, 0, 0, 0, 350,
	351, 352, 353, 354, 355, 0, 356, 358, 357, 0,
	359, 544, 1041, 360, 361, 1042, 0, 362, 363, 364,
	0, 0, 365, 366, 367, 368, 0, 369, 370, 372,
	374, 371, 373, 378, 375, 376, 377, 380, 0, 379,
	1043, 381, 382, 383, 386, 387, 385, 1044, 384, 0,
	0, 1045, 388, 0, 545, 389, 546, 391, 392, 0,
	0, 393, 0, 0, 0, 395, 396, 397, 0, 0,
	398, 399, 547, 1046, 400, 1047, 548, 401, 402, 394,
	403, 404, 405, 406, 407, 408, 409, 410, 0, 411,
	412, 549, 550, 551, 413, 552, 414, 415, 0, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 553, 425,
	424, 426, 0, 0, 0, 0, 0, 0, 427, 0,
	429, 430, 431, 428, 432, 433, 434, 435, 0, 436,
	437, 438, 1048, 439, 440, 441, 442, 554, 443, 0,
	444, 445, 451, 452, 446, 447, 453, 454, 455, 456,
	457, 0, 459, 460, 458, 461, 462, 463, 3012, 464,
	448, 449, 465, 466, 1049, 467, 468, 555, 0, 469,
	0, 470, 471, 472, 473, 450, 474, 479, 556, 475,
	476, 477, 478, 557, 0, 481, 482, 0, 480, 0,
	483, 484, 485, 486, 487, 488, 313, 489, 0, 490,
	558, 559, 560, 561, 0, 497, 0, 491, 492, 562,
	493, 563, 0, 494, 495, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 504, 505, 503, 506, 0, 507,
	0, 0, 508, 509, 510, 564, 565, 566, 238, 512,
	511, 567, 0, 0, 0, 0, 513, 514, 568, 515,
	516, 517, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 519, 520, 0, 521, 259, 522, 0, 260, 261,
	262, 263, 264, 0, 0, 0, 265, 523, 524, 525,
	0, 266, 267, 526, 0, 0, 0, 268, 269, 270,
	271, 272, 273, 274, 0, 0, 276, 277, 278, 275,
	0, 279, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 289, 0, 290, 527, 528, 0, 294, 291, 292,
	0, 295, 293, 0, 296, 297, 0, 0, 298, 299,
	300, 0, 301, 302, 0, 303, 304, 305, 0, 306,
	307, 529, 308, 309, 310, 312, 314, 311, 315, 316,
	317, 318, 530, 531, 0, 241, 0, 0, 0, 0,
	0, 319, 320, 321, 532, 0, 0, 0, 322, 0,
	323, 0, 0, 0, 324, 325, 533, 534, 326, 327,
	0, 328, 535, 0, 536, 329, 0, 330, 331, 332,
	333, 334, 537, 538, 539, 390, 0, 335, 336, 0,
	337, 338, 339, 340, 0, 0, 0, 242, 341, 342,
	344, 0, 0, 343, 540, 541, 0, 542, 0, 345,
	0, 543, 0, 346, 347, 348, 0, 349, 0, 0,
	0, 350, 351, 352, 353, 354, 355, 0, 356, 358,
	357, 0, 359, 544, 0, 360, 361, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 367, 368, 0, 369,
	370, 372, 374, 371, 373, 378, 375, 376, 377, 380,
	0, 379, 0, 381, 382, 383, 386, 387, 385, 0,
	384, 0, 243, 0, 388, 0, 545, 389, 546, 391,
	392, 0, 0, 393, 0, 0, 0, 395, 396, 397,
	0, 0, 398, 399, 547, 0, 400, 0, 548, 401,
	402, 394, 403, 404, 405, 406, 407, 408, 409, 410,
	0, 411, 412, 549, 550, 551, 413, 552, 414, 415,
	0, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	553, 425, 424, 426, 0, 0, 0, 0, 0, 0,
	427, 0, 429, 430, 431, 428, 432, 433, 434, 435,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 554,
	443, 0, 444, 445, 451, 452, 446, 447, 453, 454,
	455, 456, 457, 0, 459, 460, 458, 461, 462, 463,
	0, 464, 448, 449, 465, 466, 0, 467, 468, 555,
	0, 469, 0, 470, 471, 472, 473, 450, 474, 479,
	556, 475, 476, 477, 478, 557, 0, 481, 482, 0,
	480, 0, 483, 484, 485, 486, 487, 488, 313, 489,
	0, 490, 558, 559, 560, 561, 0, 497, 0, 491,
	492, 562, 493, 563, 0, 494, 495, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 504, 505, 503, 506,
	0, 507, 0, 0, 508, 509, 510, 564, 565, 566,
	0, 512, 511, 567, 0, 0, 0, 0, 513, 514,
	568, 515, 516, 517, 1473, 0, 1275, 1274, 0, 0,
	0, 0, 1272, 0, 0, 0, 0, 0, 0, 0,
	661, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 518, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 519,
	520, 0, 521, 259, 522, 0, 260, 261, 262, 263,
	264, 0, 0, 0, 265, 523, 524, 525, 0, 266,
	267, 526, 0, 1241, 0, 268, 269, 270, 271, 272,
	273, 274, 0, 0, 276, 277, 278, 275, 0, 279,
	0, 280, 281, 282, 0, 283, 1034, 284, 285, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 289,
	0, 290, 527, 528, 0, 294, 291, 292, 0, 295,
	293, 0, 296, 297, 0, 0, 298, 299, 300, 0,
	301, 302, 0, 303, 304, 305, 0, 306, 307, 529,
	308, 309, 310, 312, 314, 311, 315, 316, 317, 318,
	530, 531, 0, 241, 0, 0, 0, 0, 0, 1472,
	320, 321, 532, 0, 0, 0, 322, 0, 323, 0,
	0, 1035, 324, 325, 533, 534, 326, 327, 0, 328,
	535, 0, 536, 329, 0, 330, 331, 332, 333, 334,
	537, 538, 539, 390, 1037, 335, 336, 0, 337, 338,
	339, 340, 0, 0, 0, 0, 341, 342, 344, 0,
	1036, 343, 540, 541, 0, 542, 0, 345, 1038, 543,
	1039, 346, 347, 348, 1040, 349, 0, 0, 0, 350,
	351, 352, 353, 354, 355, 0, 356, 358, 357, 0,
	359, 544, 1041, 360, 361, 1042, 0, 362, 363, 364,
	0, 0, 365, 366, 367, 368, 0, 369, 370, 372,
	374, 371, 373, 378, 375, 376, 377, 380, 0, 379,
	1043, 381, 382, 383, 386, 387, 385, 1044, 384, 0,
	0, 1045, 388, 0, 545, 389, 546, 391, 392, 0,
	0, 393, 0, 0, 0, 395, 396, 397, 0, 0,
	398, 399, 547, 1046, 400, 1047, 548, 401, 402, 394,
	403, 404, 405, 406, 407, 408, 409, 410, 0, 411,
	412, 549, 550, 551, 413, 552, 414, 415, 0, 416,
	0, 417, 418, 419, 420, 421, 1471, 423, 553, 425,
	424, 426, 0, 0, 0, 0, 0, 0, 427, 0,
	429, 430, 431, 428, 432, 433, 434, 435, 0, 436,
	437, 438, 1048, 439, 440, 441, 442, 554, 443, 0,
	444, 445, 451, 452, 446, 447, 453, 1470, 455, 456,
	457, 0, 459, 460, 458, 461, 462, 463, 0, 464,
	448, 449, 465, 466, 1049, 467, 468, 555, 0, 469,
	0, 470, 471, 472, 473, 450, 474, 479, 556, 475,
	476, 477, 478, 557, 0, 481, 482, 0, 480, 0,
	483, 484, 485, 486, 487, 488, 313, 489, 0, 490,
	558, 559, 560, 561, 0, 497, 0, 491, 492, 562,
	493, 563, 0, 494, 495, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 504, 505, 503, 506, 0, 507,
	0, 0, 508, 509, 510, 564, 565, 566, 0, 512,
	511, 567, 0, 0, 0, 0, 513, 514, 568, 515,
	516, 517, 1414, 0, 1275, 1274, 0, 0, 0, 0,
	1272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 518, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 519, 520, 0,
	521, 259, 522, 0, 260, 261, 262, 263, 264, 0,
	0, 0, 265, 523, 524, 525, 0, 266, 267, 526,
	0, 1241, 0, 268, 269, 270, 271, 272, 273, 274,
	0, 0, 276, 277, 278, 275, 0, 279, 0, 280,
	281, 282, 0, 283, 1034, 284, 285, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 289, 0, 290,
	527, 528, 0, 294, 291, 292, 0, 295, 293, 0,
	296, 297, 0, 0, 298, 299, 300, 0, 301, 302,
	0, 303, 304, 305, 0, 306, 307, 529, 308, 309,
	310, 312, 314, 311, 315, 316, 317, 318, 530, 531,
	0, 241, 0, 0, 0, 0, 0, 319, 320, 321,
	532, 0, 0, 0, 322, 0, 323, 0, 0, 1035,
	324, 325, 533, 534, 326, 327, 0, 328, 535, 0,
	536, 329, 0, 330, 331, 332, 333, 334, 1413, 538,
	539, 390, 1037, 335, 336, 0, 337, 338, 339, 340,
	0, 0, 0, 0, 341, 342, 344, 0, 1036, 343,
	540, 541, 0, 542, 0, 345, 1038, 543, 1039, 346,
	347, 348, 1040, 349, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 0, 356, 358, 357, 0, 359, 544,
	1041, 360, 361, 1042, 0, 362, 363, 364, 0, 0,
	365, 366, 367, 368, 0, 369, 370, 372, 374, 371,
	373, 378, 375, 376, 377, 380, 0, 379, 1043, 381,
	382, 383, 386, 387, 385, 1044, 384, 0, 0, 1045,
	388, 0, 545, 389, 546, 391, 392, 0, 0, 393,
	0, 0, 0, 395, 396, 397, 0, 0, 398, 399,
	547, 1046, 400, 1047, 548, 401, 402, 394, 403, 404,
	405, 406, 407, 408, 409, 410, 0, 411, 412, 549,
	550, 551, 413, 552, 414, 415, 0, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 553, 425, 424, 426,
	0, 0, 0, 0, 0, 0, 427, 0, 429, 430,
	431, 428, 432, 433, 434, 435, 0, 436, 437, 438,
	1048, 439, 440, 441, 442, 554, 443, 0, 444, 445,
	451, 452, 446, 447, 453, 454, 455, 456, 457, 0,
	459, 460, 458, 461, 462, 463, 0, 464, 448, 449,
	465, 466, 1049, 467, 468, 555, 0, 469, 0, 470,
	471, 472, 473, 450, 474, 479, 556, 475, 476, 477,
	478, 557, 0, 481, 482, 0, 480, 0, 483, 484,
	485, 486, 487, 488, 313, 489, 0, 490, 558, 559,
	560, 561, 0, 497, 0, 491, 492, 562, 493, 563,
	0, 494, 495, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 504, 505, 503, 506, 0, 507, 0, 0,
	508, 509, 510, 564, 565, 566, 0, 512, 511, 567,
	0, 0, 0, 0, 513, 514, 568, 515, 516, 517,
	1345, 0, 1275, 1274, 0, 0, 0, 0, 1272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 1241,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 1034, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 241,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 1035, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 1344, 538, 539, 390,
	1037, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 0, 341, 342, 344, 0, 1036, 343, 540, 541,
	0, 542, 0, 345, 1038, 543, 1039, 346, 347, 348,
	1040, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 1041, 360,
	361, 1042, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 1043, 381, 382, 383,
	386, 387, 385, 1044, 384, 0, 0, 1045, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 1046,
	400, 1047, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 1048, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	1049, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 0, 512, 511, 567, 0, 0,
	0, 0, 513, 514, 568, 515, 516, 517, 1309, 0,
	1275, 1274, 0, 0, 0, 0, 1272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 525, 0, 266, 267, 526, 0, 1241, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	1034, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 241, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 1035, 324, 325, 533, 534,
	326, 327, 0, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 537, 538, 539, 390, 1037, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 0,
	341, 342, 344, 0, 1036, 343, 540, 541, 0, 542,
	0, 345, 1038, 543, 1039, 346, 347, 348, 1040, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	356, 358, 357, 0, 359, 544, 1041, 360, 361, 1042,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 1043, 381, 382, 383, 386, 387,
	385, 1044, 384, 0, 0, 1045, 388, 0, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 1046, 400, 1047,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 1048, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 0, 459, 460, 458, 461,
	462, 463, 0, 464, 448, 449, 465, 466, 1049, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 0, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 0, 512, 511, 567, 0, 0, 0, 0,
	513, 514, 568, 515, 516, 517, 1270, 0, 1275, 1274,
	0, 0, 0, 0, 1272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 519, 520, 0, 521, 259, 522, 0, 260, 261,
	262, 263, 264, 0, 0, 0, 265, 523, 524, 525,
	0, 266, 267, 526, 0, 1241, 0, 268, 269, 270,
	271, 272, 273, 274, 0, 0, 276, 277, 278, 275,
	0, 279, 0, 280, 281, 282, 0, 283, 1034, 284,
	285, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 289, 0, 290, 527, 528, 0, 294, 291, 292,
	0, 295, 293, 0, 296, 297, 0, 0, 298, 299,
	300, 0, 301, 302, 0, 303, 304, 305, 0, 306,
	307, 529, 308, 309, 310, 312, 314, 311, 315, 316,
	317, 318, 530, 531, 0, 241, 0, 0, 0, 0,
	0, 319, 320, 321, 532, 0, 0, 0, 322, 0,
	323, 0, 0, 1035, 324, 325, 533, 534, 326, 327,
	0, 328, 535, 0, 536, 329, 0, 330, 331, 332,
	333, 334, 1269, 538, 539, 390, 1037, 335, 336, 0,
	337, 338, 339, 340, 0, 0, 0, 0, 341, 342,
	344, 0, 1036, 343, 540, 541, 0, 542, 0, 345,
	1038, 543, 1039, 346, 347, 348, 1040, 349, 0, 0,
	0, 350, 351, 352, 353, 354, 355, 0, 356, 358,
	357, 0, 359, 544, 1041, 360, 361, 1042, 0, 362,
	363, 364, 0, 0, 365, 366, 367, 368, 0, 369,
	370, 372, 374, 371, 373, 378, 375, 376, 377, 380,
	0, 379, 1043, 381, 382, 383, 386, 387, 385, 1044,
	384, 0, 0, 1045, 388, 0, 545, 389, 546, 391,
	392, 0, 0, 393, 0, 0, 0, 395, 396, 397,
	0, 0, 398, 399, 547, 1046, 400, 1047, 548, 401,
	402, 394, 403, 404, 405, 406, 407, 408, 409, 410,
	0, 411, 412, 549, 550, 551, 413, 552, 414, 415,
	0, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	553, 425, 424, 426, 0, 0, 0, 0, 0, 0,
	427, 0, 429, 430, 431, 428, 432, 433, 434, 435,
	0, 436, 437, 438, 1048, 439, 440, 441, 442, 554,
	443, 0, 444, 445, 451, 452, 446, 447, 453, 454,
	455, 456, 457, 0, 459, 460, 458, 461, 462, 463,
	0, 464, 448, 449, 465, 466, 1049, 467, 468, 555,
	0, 469, 0, 470, 471, 472, 473, 450, 474, 479,
	556, 475, 476, 477, 478, 557, 0, 481, 482, 0,
	480, 0, 483, 484, 485, 486, 487, 488, 313, 489,
	0, 490, 558, 559, 560, 561, 0, 497, 0, 491,
	492, 562, 493, 563, 0, 494, 495, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 504, 505, 503, 506,
	0, 507, 0, 0, 508, 509, 510, 564, 565, 566,
	0, 512, 511, 567, 0, 0, 0, 0, 513, 514,
	568, 515, 516, 517, 1275, 1274, 0, 0, 0, 0,
	1272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 518, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 519, 520, 0,
	521, 259, 522, 0, 260, 261, 262, 263, 264, 0,
	0, 0, 265, 523, 524, 525, 0, 266, 267, 526,
	0, 1241, 0, 268, 269, 270, 271, 272, 273, 274,
	0, 0, 276, 277, 278, 275, 0, 279, 0, 280,
	281, 282, 0, 283, 1034, 284, 285, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 289, 0, 290,
	527, 528, 0, 294, 291, 292, 0, 295, 293, 0,
	296, 297, 0, 0, 298, 299, 300, 0, 301, 302,
	0, 303, 304, 305, 0, 306, 307, 529, 308, 309,
	310, 312, 314, 311, 315, 316, 317, 318, 530, 531,
	0, 241, 0, 0, 0, 0, 0, 319, 320, 321,
	532, 0, 0, 0, 322, 0, 323, 0, 0, 1035,
	324, 325, 533, 534, 326, 327, 0, 328, 535, 0,
	536, 329, 0, 330, 331, 332, 333, 334, 537, 538,
	539, 390, 1037, 335, 336, 0, 337, 338, 339, 340,
	0, 0, 0, 0, 341, 342, 344, 0, 1036, 343,
	540, 541, 0, 542, 0, 345, 1038, 543, 1039, 346,
	347, 348, 1040, 349, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 0, 356, 358, 357, 0, 359, 544,
	1041, 360, 361, 1042, 0, 362, 363, 364, 0, 0,
	365, 366, 367, 368, 0, 369, 370, 372, 374, 371,
	373, 378, 375, 376, 377, 380, 0, 379, 1043, 381,
	382, 383, 386, 387, 385, 1044, 384, 0, 0, 1045,
	388, 0, 545, 389, 546, 391, 392, 0, 0, 393,
	0, 0, 0, 395, 396, 397, 0, 0, 398, 399,
	547, 1046, 400, 1047, 548, 401, 402, 394, 403, 404,
	405, 406, 407, 408, 409, 410, 0, 411, 412, 549,
	550, 551, 413, 552, 414, 415, 0, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 553, 425, 424, 426,
	0, 0, 0, 0, 0, 0, 427, 0, 429, 430,
	431, 428, 432, 433, 434, 435, 0, 436, 437, 438,
	1048, 439, 440, 441, 442, 554, 443, 0, 444, 445,
	451, 452, 446, 447, 453, 454, 455, 456, 457, 0,
	459, 460, 458, 461, 462, 463, 0, 464, 448, 449,
	465, 466, 1049, 467, 468, 555, 0, 469, 0, 470,
	471, 472, 473, 450, 474, 479, 556, 475, 476, 477,
	478, 557, 0, 481, 482, 0, 480, 0, 483, 484,
	485, 486, 487, 488, 313, 489, 0, 490, 558, 559,
	560, 561, 0, 497, 0, 491, 492, 562, 493, 563,
	0, 494, 495, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 504, 505, 503, 506, 0, 507, 0, 0,
	508, 509, 510, 564, 565, 566, 0, 512, 511, 567,
	1275, 1274, 0, 0, 513, 514, 568, 515, 516, 517,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 525, 0, 266, 267, 526, 0, 1241, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	1034, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 289, 0, 290, 527, 528, 1830, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 241, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 1035, 324, 325, 533, 534,
	326, 327, 0, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 537, 538, 539, 390, 1037, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 0,
	341, 342, 344, 0, 1036, 343, 540, 541, 0, 542,
	0, 345, 1038, 543, 1039, 346, 347, 348, 1040, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	356, 358, 357, 0, 359, 544, 1041, 360, 361, 1042,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 1043, 381, 382, 383, 386, 387,
	385, 1044, 384, 0, 0, 1045, 388, 0, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 1046, 400, 1047,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 1048, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 0, 459, 460, 458, 461,
	462, 463, 0, 464, 448, 449, 465, 466, 1049, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 0, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 0, 512, 511, 567, 1275, 1274, 0, 0,
	513, 514, 568, 515, 516, 517, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 518, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 519,
	520, 0, 521, 259, 522, 0, 260, 261, 262, 263,
	264, 0, 0, 0, 265, 523, 524, 525, 0, 266,
	267, 526, 0, 1241, 0, 268, 269, 270, 271, 272,
	273, 274, 0, 0, 276, 277, 278, 275, 0, 279,
	0, 280, 281, 282, 0, 283, 1034, 284, 285, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 289,
	0, 290, 527, 528, 0, 294, 291, 292, 0, 295,
	293, 0, 296, 297, 0, 0, 298, 299, 300, 0,
	301, 302, 0, 303, 304, 305, 0, 306, 307, 529,
	308, 309, 310, 312, 314, 311, 315, 316, 317, 318,
	530, 531, 0, 241, 0, 0, 0, 0, 0, 319,
	320, 321, 532, 0, 0, 0, 322, 0, 323, 0,
	0, 1035, 324, 325, 533, 534, 326, 327, 0, 328,
	535, 0, 536, 329, 0, 330, 331, 332, 333, 334,
	537, 538, 539, 390, 1037, 335, 336, 0, 337, 338,
	339, 340, 0, 0, 0, 0, 341, 342, 344, 0,
	1036, 343, 540, 541, 0, 542, 0, 345, 1038, 543,
	1039, 346, 347, 348, 1040, 349, 0, 0, 0, 350,
	351, 352, 353, 354, 355, 0, 356, 358, 357, 0,
	359, 544, 1041, 360, 361, 1042, 0, 362, 363, 364,
	0, 0, 365, 366, 367, 368, 0, 369, 370, 372,
	374, 371, 373, 378, 375, 376, 377, 380, 0, 379,
	1043, 381, 382, 383, 386, 387, 385, 1044, 384, 0,
	0, 1045, 388, 0, 545, 389, 546, 391, 392, 0,
	0, 393, 0, 0, 0, 395, 396, 397, 0, 0,
	398, 399, 547, 1046, 400, 1047, 548, 401, 402, 394,
	403, 404, 405, 406, 407, 408, 409, 410, 0, 411,
	412, 549, 550, 551, 413, 552, 414, 415, 0, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 553, 425,
	424, 426, 0, 0, 0, 0, 0, 0, 427, 0,
	429, 430, 431, 428, 432, 433, 434, 435, 0, 436,
	437, 438, 1048, 439, 440, 441, 442, 554, 443, 0,
	444, 445, 451, 452, 446, 447, 453, 454, 455, 456,
	457, 0, 459, 460, 458, 461, 462, 463, 0, 464,
	448, 449, 465, 466, 1049, 467, 468, 555, 0, 469,
	0, 470, 471, 472, 473, 450, 474, 479, 556, 475,
	476, 477, 478, 557, 0, 481, 482, 0, 480, 0,
	483, 484, 485, 486, 487, 488, 313, 489, 0, 490,
	558, 559, 560, 561, 0, 497, 0, 491, 492, 562,
	493, 563, 0, 494, 495, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 504, 505, 503, 506, 0, 507,
	0, 0, 508, 509, 510, 564, 565, 566, 1275, 512,
	511, 567, 0, 0, 0, 0, 513, 514, 568, 515,
	516, 517, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 519, 520, 0, 521, 259, 522, 0, 260, 261,
	262, 263, 264, 0, 0, 0, 265, 523, 524, 525,
	0, 266, 267, 526, 0, 1241, 0, 268, 269, 270,
	271, 272, 273, 274, 0, 0, 276, 277, 278, 275,
	0, 279, 0, 280, 281, 282, 0, 283, 1034, 284,
	285, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 289, 0, 290, 527, 528, 0, 294, 291, 292,
	0, 295, 293, 0, 296, 297, 0, 0, 298, 299,
	300, 0, 301, 302, 0, 303, 304, 305, 0, 306,
	307, 529, 308, 309, 310, 312, 314, 311, 315, 316,
	317, 318, 530, 531, 0, 241, 0, 0, 0, 0,
	0, 319, 320, 321, 532, 0, 0, 0, 322, 0,
	323, 0, 0, 1035, 324, 325, 533, 534, 326, 327,
	0, 328, 535, 0, 536, 329, 0, 330, 331, 332,
	333, 334, 537, 538, 539, 390, 1037, 335, 336, 0,
	337, 338, 339, 340, 0, 0, 0, 0, 341, 342,
	344, 0, 1036, 343, 540, 541, 0, 542, 0, 345,
	1038, 543, 1039, 346, 347, 348, 1040, 349, 0, 0,
	0, 350, 351, 352, 353, 354, 355, 0, 356, 358,
	357, 0, 359, 544, 1041, 360, 361, 1042, 0, 362,
	363, 364, 0, 0, 365, 366, 367, 368, 0, 369,
	370, 372, 374, 371, 373, 378, 375, 376, 377, 380,
	0, 379, 1043, 381, 382, 383, 386, 387, 385, 1044,
	384, 0, 0, 1045, 388, 0, 545, 389, 546, 391,
	392, 0, 0, 393, 0, 0, 0, 395, 396, 397,
	0, 0, 398, 399, 547, 1046, 400, 1047, 548, 401,
	402, 394, 403, 404, 405, 406, 407, 408, 409, 410,
	0, 411, 412, 549, 550, 551, 413, 552, 414, 415,
	0, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	553, 425, 424, 426, 0, 0, 0, 0, 0, 0,
	427, 0, 429, 430, 431, 428, 432, 433, 434, 435,
	0, 436, 437, 438, 1048, 439, 440, 441, 442, 554,
	443, 0, 444, 445, 451, 452, 446, 447, 453, 454,
	455, 456, 457, 0, 459, 460, 458, 461, 462, 463,
	0, 464, 448, 449, 465, 466, 1049, 467, 468, 555,
	0, 469, 0, 470, 471, 472, 473, 450, 474, 479,
	556, 475, 476, 477, 478, 557, 0, 481, 482, 0,
	480, 0, 483, 484, 485, 486, 487, 488, 313, 489,
	0, 490, 558, 559, 560, 561, 0, 497, 0, 491,
	492, 562, 493, 563, 0, 494, 495, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 504, 505, 503, 506,
	0, 507, 0, 0, 508, 509, 510, 564, 565, 566,
	238, 512, 511, 567, 0, 0, 0, 0, 513, 514,
	568, 515, 516, 517, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 525, 2459, 266, 267, 526, 0, 0, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 2456, 279, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 2463, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 2640, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 2462, 0, 0, 324, 325, 533, 534,
	326, 327, 0, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 537, 538, 539, 390, 0, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 2637,
	341, 342, 344, 0, 0, 343, 540, 541, 0, 542,
	0, 2639, 0, 543, 0, 346, 347, 348, 0, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	356, 358, 357, 0, 359, 544, 0, 360, 361, 2636,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 0, 381, 382, 383, 386, 387,
	385, 0, 384, 0, 0, 0, 388, 0, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 0, 400, 0,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 2461, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 0, 459, 460, 458, 461,
	462, 463, 0, 464, 448, 449, 465, 466, 0, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 0, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 2638, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 238, 512, 511, 567, 0, 0, 0, 0,
	513, 514, 568, 515, 516, 517, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 2459, 266, 267, 526, 0, 0,
	2453, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 2456, 279, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 2463, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 2462, 0, 0, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 2452, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 0, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 0, 381, 382, 383,
	386, 387, 385, 0, 384, 0, 0, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 2461, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 2460, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 0, 512, 511, 567, 1538, 0,
	238, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 525, 0, 266, 267, 526, 0, 0, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 241, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 0, 324, 325, 533, 534,
	326, 327, 0, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 537, 538, 539, 390, 0, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 242,
	341, 342, 344, 0, 0, 343, 540, 541, 0, 542,
	0, 345, 0, 543, 0, 346, 347, 348, 0, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	356, 358, 357, 0, 359, 544, 0, 360, 361, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 0, 381, 382, 383, 386, 387,
	385, 0, 384, 0, 243, 0, 388, 0, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 0, 400, 0,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 0, 1541, 460, 458, 461,
	462, 463, 0, 464, 448, 449, 465, 466, 0, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 1539, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 0, 1540, 511, 567, 1245, 0, 238, 0,
	513, 514, 568, 515, 516, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 519, 520, 0, 521, 259, 522, 0, 260, 261,
	262, 263, 264, 0, 0, 0, 265, 523, 524, 525,
	0, 266, 267, 526, 0, 0, 0, 268, 269, 270,
	271, 272, 273, 274, 0, 0, 276, 277, 278, 275,
	0, 279, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 289, 0, 290, 527, 528, 0, 294, 291, 292,
	0, 295, 293, 0, 296, 297, 0, 0, 298, 299,
	300, 0, 301, 302, 0, 303, 304, 305, 0, 306,
	307, 529, 308, 309, 310, 312, 314, 311, 315, 316,
	317, 318, 530, 531, 0, 241, 0, 0, 0, 0,
	0, 319, 320, 321, 532, 0, 0, 0, 322, 0,
	323, 0, 0, 0, 324, 325, 533, 534, 326, 327,
	0, 328, 535, 0, 536, 329, 0, 330, 331, 332,
	333, 334, 1247, 538, 539, 390, 0, 335, 336, 0,
	337, 338, 339, 340, 0, 0, 0, 242, 341, 342,
	344, 0, 0, 343, 540, 541, 0, 542, 0, 345,
	0, 543, 0, 346, 347, 348, 0, 349, 0, 0,
	0, 350, 351, 352, 353, 354, 355, 0, 356, 358,
	357, 0, 359, 544, 0, 360, 361, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 367, 368, 0, 369,
	370, 372, 374, 371, 373, 378, 375, 376, 377, 380,
	0, 379, 0, 381, 382, 383, 386, 387, 385, 0,
	384, 0, 243, 0, 388, 0, 545, 389, 546, 391,
	392, 0, 0, 393, 0, 0, 1083, 395, 396, 397,
	0, 0, 398, 399, 547, 0, 400, 0, 548, 401,
	402, 394, 403, 404, 405, 406, 407, 408, 409, 410,
	0, 411, 412, 549, 550, 551, 413, 552, 414, 415,
	0, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	553, 425, 424, 426, 0, 0, 0, 0, 0, 0,
	427, 0, 429, 430, 431, 428, 432, 433, 434, 435,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 554,
	443, 0, 444, 445, 451, 452, 446, 447, 453, 454,
	455, 456, 457, 0, 459, 460, 458, 461, 462, 463,
	0, 464, 448, 449, 465, 466, 0, 467, 468, 555,
	0, 469, 0, 470, 471, 472, 473, 450, 474, 479,
	556, 475, 476, 477, 478, 557, 0, 481, 482, 0,
	480, 0, 483, 484, 485, 486, 487, 488, 313, 489,
	0, 490, 558, 559, 560, 561, 0, 497, 0, 491,
	492, 562, 493, 563, 0, 494, 495, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 504, 505, 503, 506,
	0, 507, 0, 0, 508, 509, 510, 564, 565, 566,
	0, 512, 511, 567, 1242, 0, 238, 0, 513, 514,
	568, 515, 516, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 518, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 519,
	520, 0, 521, 259, 522, 0, 260, 261, 262, 263,
	264, 0, 0, 0, 265, 523, 524, 525, 0, 266,
	267, 526, 0, 0, 0, 268, 269, 270, 271, 272,
	273, 274, 0, 0, 276, 277, 278, 275, 0, 279,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 289,
	0, 290, 527, 528, 0, 294, 291, 292, 0, 295,
	293, 0, 296, 297, 0, 0, 298, 299, 300, 0,
	301, 302, 0, 303, 304, 305, 0, 306, 307, 529,
	308, 309, 310, 312, 314, 311, 315, 316, 317, 318,
	530, 531, 0, 241, 0, 0, 0, 0, 0, 319,
	320, 321, 532, 0, 0, 0, 322, 0, 323, 0,
	0, 0, 324, 325, 533, 534, 326, 327, 0, 328,
	535, 0, 536, 329, 0, 330, 331, 332, 333, 334,
	1244, 538, 539, 390, 0, 335, 336, 0, 337, 338,
	339, 340, 0, 0, 0, 242, 341, 342, 344, 0,
	0, 343, 540, 541, 0, 542, 0, 345, 0, 543,
	0, 346, 347, 348, 0, 349, 0, 0, 0, 350,
	351, 352, 353, 354, 355, 0, 356, 358, 357, 0,
	359, 544, 0, 360, 361, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 367, 368, 0, 369, 370, 372,
	374, 371, 373, 378, 375, 376, 377, 380, 0, 379,
	0, 381, 382, 383, 386, 387, 385, 0, 384, 0,
	243, 0, 388, 0, 545, 389, 546, 391, 392, 0,
	0, 393, 0, 0, 1083, 395, 396, 397, 0, 0,
	398, 399, 547, 0, 400, 0, 548, 401, 402, 394,
	403, 404, 405, 406, 407, 408, 409, 410, 0, 411,
	412, 549, 550, 551, 413, 552, 414, 415, 0, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 553, 425,
	424, 426, 0, 0, 0, 0, 0, 0, 427, 0,
	429, 430, 431, 428, 432, 433, 434, 435, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 554, 443, 0,
	444, 445, 451, 452, 446, 447, 453, 454, 455, 456,
	457, 0, 459, 460, 458, 461, 462, 463, 0, 464,
	448, 449, 465, 466, 0, 467, 468, 555, 0, 469,
	0, 470, 471, 472, 473, 450, 474, 479, 556, 475,
	476, 477, 478, 557, 0, 481, 482, 0, 480, 0,
	483, 484, 485, 486, 487, 488, 313, 489, 0, 490,
	558, 559, 560, 561, 0, 497, 0, 491, 492, 562,
	493, 563, 0, 494, 495, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 504, 505, 503, 506, 0, 507,
	0, 0, 508, 509, 510, 564, 565, 566, 0, 512,
	511, 567, 1148, 0, 238, 0, 513, 514, 568, 515,
	516, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 518, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 519, 520, 0,
	521, 259, 522, 0, 260, 261, 262, 263, 264, 0,
	0, 0, 265, 523, 524, 525, 0, 266, 267, 526,
	0, 0, 0, 268, 269, 270, 271, 272, 273, 274,
	0, 0, 276, 277, 278, 275, 0, 279, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 289, 0, 290,
	527, 528, 0, 294, 291, 292, 0, 295, 293, 0,
	296, 297, 0, 0, 298, 299, 300, 0, 301, 302,
	0, 303, 304, 305, 0, 306, 307, 529, 308, 309,
	310, 312, 314, 311, 315, 316, 317, 318, 530, 531,
	0, 241, 0, 0, 0, 0, 0, 319, 320, 321,
	532, 0, 0, 0, 322, 0, 323, 0, 0, 0,
	324, 325, 533, 534, 326, 327, 0, 328, 535, 0,
	536, 329, 0, 330, 331, 332, 333, 334, 1150, 538,
	539, 390, 0, 335, 336, 0, 337, 338, 339, 340,
	0, 0, 0, 242, 341, 342, 344, 0, 0, 343,
	540, 541, 0, 542, 0, 345, 0, 543, 0, 346,
	347, 348, 0, 349, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 0, 356, 358, 357, 0, 359, 544,
	0, 360, 361, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 367, 368, 0, 369, 370, 372, 374, 371,
	373, 378, 375, 376, 377, 380, 0, 379, 0, 381,
	382, 383, 386, 387, 385, 0, 384, 0, 243, 0,
	388, 0, 545, 389, 546, 391, 392, 0, 0, 393,
	0, 0, 1083, 395, 396, 397, 0, 0, 398, 399,
	547, 0, 400, 0, 548, 401, 402, 394, 403, 404,
	405, 406, 407, 408, 409, 410, 0, 411, 412, 549,
	550, 551, 413, 552, 414, 415, 0, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 553, 425, 424, 426,
	0, 0, 0, 0, 0, 0, 427, 0, 429, 430,
	431, 428, 432, 433, 434, 435, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 554, 443, 0, 444, 445,
	451, 452, 446, 447, 453, 454, 455, 456, 457, 0,
	459, 460, 458, 461, 462, 463, 0, 464, 448, 449,
	465, 466, 0, 467, 468, 555, 0, 469, 0, 470,
	471, 472, 473, 450, 474, 479, 556, 475, 476, 477,
	478, 557, 0, 481, 482, 0, 480, 0, 483, 484,
	485, 486, 487, 488, 313, 489, 0, 490, 558, 559,
	560, 561, 0, 497, 0, 491, 492, 562, 493, 563,
	0, 494, 495, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 504, 505, 503, 506, 0, 507, 0, 0,
	508, 509, 510, 564, 565, 566, 0, 512, 511, 567,
	600, 0, 238, 0, 513, 514, 568, 515, 516, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 599, 248, 249, 589, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	592, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 0, 324, 325,
	533, 534, 326, 327, 593, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 537, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 0, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 0, 381, 382, 383,
	386, 387, 385, 0, 384, 0, 0, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 594, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 0, 512, 511, 567, 588, 0,
	238, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 589, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 525, 0, 266, 267, 526, 0, 0, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 592, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 0, 324, 325, 533, 534,
	326, 327, 593, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 537, 538, 539, 390, 0, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 0,
	341, 342, 344, 0, 0, 343, 540, 541, 0, 542,
	0, 345, 0, 543, 0, 346, 347, 348, 0, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	356, 358, 357, 0, 359, 544, 0, 360, 361, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 0, 381, 382, 383, 386, 387,
	385, 0, 384, 0, 0, 0, 388, 0, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 0, 400, 0,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 594, 459, 460, 458, 461,
	462, 463, 0, 464, 448, 449, 465, 466, 0, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 0, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 238, 512, 511, 567, 0, 0, 0, 0,
	513, 514, 568, 515, 516, 517, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 241,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 0, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 537, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 242, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 0, 381, 382, 383,
	386, 387, 385, 2984, 384, 0, 243, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 238, 512, 511, 567, 0, 0,
	0, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 518, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 519, 520, 0,
	521, 259, 522, 0, 260, 261, 262, 263, 264, 0,
	0, 0, 265, 523, 524, 525, 0, 266, 267, 526,
	0, 0, 0, 268, 269, 270, 271, 272, 273, 274,
	0, 0, 276, 277, 278, 275, 0, 279, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 289, 0, 290,
	527, 528, 0, 294, 291, 292, 0, 295, 293, 0,
	296, 297, 0, 0, 298, 299, 300, 0, 301, 302,
	0, 303, 304, 305, 0, 306, 307, 529, 308, 309,
	310, 312, 314, 311, 315, 316, 317, 318, 530, 531,
	0, 241, 0, 0, 0, 0, 0, 319, 320, 321,
	532, 0, 0, 0, 322, 0, 323, 0, 0, 0,
	324, 325, 533, 534, 326, 327, 0, 328, 535, 0,
	536, 329, 0, 330, 331, 332, 333, 334, 537, 538,
	539, 390, 0, 335, 336, 0, 337, 338, 339, 340,
	0, 0, 0, 242, 341, 342, 344, 0, 0, 343,
	540, 541, 0, 542, 0, 345, 0, 543, 0, 346,
	347, 348, 0, 349, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 0, 356, 358, 357, 0, 359, 544,
	0, 360, 361, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 367, 368, 0, 369, 370, 372, 374, 371,
	373, 378, 375, 376, 377, 380, 0, 379, 0, 381,
	382, 383, 386, 387, 385, 0, 384, 0, 243, 0,
	388, 0, 545, 389, 546, 391, 392, 0, 0, 393,
	0, 0, 1083, 395, 396, 397, 0, 0, 398, 399,
	547, 0, 400, 0, 548, 401, 402, 394, 403, 404,
	405, 406, 407, 408, 409, 410, 0, 411, 412, 549,
	550, 551, 413, 552, 414, 415, 0, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 553, 425, 424, 426,
	0, 0, 0, 0, 0, 0, 427, 0, 429, 430,
	431, 428, 432, 433, 434, 435, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 554, 443, 0, 444, 445,
	451, 452, 446, 447, 453, 454, 455, 456, 457, 0,
	459, 460, 458, 461, 462, 463, 0, 464, 448, 449,
	465, 466, 0, 467, 468, 555, 0, 469, 0, 470,
	471, 472, 473, 450, 474, 479, 556, 475, 476, 477,
	478, 557, 0, 481, 482, 0, 480, 0, 483, 484,
	485, 486, 487, 488, 313, 489, 0, 490, 558, 559,
	560, 561, 0, 497, 0, 491, 492, 562, 493, 563,
	0, 494, 495, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 504, 505, 503, 506, 0, 507, 0, 0,
	508, 509, 510, 564, 565, 566, 0, 512, 511, 567,
	2572, 0, 238, 0, 513, 514, 568, 515, 516, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 241,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 0, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 2571, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 242, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 0, 381, 382, 383,
	386, 387, 385, 0, 384, 0, 243, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 0, 512, 511, 567, 2043, 0,
	238, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 525, 0, 266, 267, 526, 0, 0, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 241, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 0, 324, 325, 533, 534,
	326, 327, 0, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 537, 538, 539, 390, 0, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 242,
	341, 342, 344, 0, 0, 343, 540, 541, 0, 542,
	0, 345, 0, 543, 0, 346, 347, 348, 0, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	356, 358, 357, 0, 359, 544, 0, 360, 361, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 0, 381, 382, 383, 386, 387,
	385, 0, 384, 0, 243, 0, 388, 0, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 0, 400, 0,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 0, 459, 460, 458, 461,
	462, 463, 0, 464, 448, 449, 465, 466, 0, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 0, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 238, 512, 511, 567, 0, 0, 0, 0,
	513, 514, 568, 515, 516, 517, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 241,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 0, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 537, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 242, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 0, 381, 382, 383,
	386, 387, 385, 0, 384, 0, 243, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 1965, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 0, 512, 511, 567, 1970, 0,
	238, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 525, 0, 266, 267, 526, 0, 0, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 241, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 0, 324, 325, 533, 534,
	326, 327, 0, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 1969, 538, 539, 390, 0, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 242,
	341, 342, 344, 0, 0, 343, 540, 541, 0, 542,
	0, 345, 0, 543, 0, 346, 347, 348, 0, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	356, 358, 357, 0, 359, 544, 0, 360, 361, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 0, 381, 382, 383, 386, 387,
	385, 0, 384, 0, 243, 0, 388, 0, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 0, 400, 0,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 0, 459, 460, 458, 461,
	462, 463, 0, 464, 448, 449, 465, 466, 0, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 0, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 0, 512, 511, 567, 1958, 0, 238, 0,
	513, 514, 568, 515, 516, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 519, 520, 0, 521, 259, 522, 0, 260, 261,
	262, 263, 264, 0, 0, 0, 265, 523, 524, 525,
	0, 266, 267, 526, 0, 0, 0, 268, 269, 270,
	271, 272, 273, 274, 0, 0, 276, 277, 278, 275,
	0, 279, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 289, 0, 290, 527, 528, 0, 294, 291, 292,
	0, 295, 293, 0, 296, 297, 0, 0, 298, 299,
	300, 0, 301, 302, 0, 303, 304, 305, 0, 306,
	307, 529, 308, 309, 310, 312, 314, 311, 315, 316,
	317, 318, 530, 531, 0, 241, 0, 0, 0, 0,
	0, 319, 320, 321, 532, 0, 0, 0, 322, 0,
	323, 0, 0, 0, 324, 325, 533, 534, 326, 327,
	0, 328, 535, 0, 536, 329, 0, 330, 331, 332,
	333, 334, 1960, 538, 539, 390, 0, 335, 336, 0,
	337, 338, 339, 340, 0, 0, 0, 242, 341, 342,
	344, 0, 0, 343, 540, 541, 0, 542, 0, 345,
	0, 543, 0, 346, 347, 348, 0, 349, 0, 0,
	0, 350, 351, 352, 353, 354, 355, 0, 356, 358,
	357, 0, 359, 544, 0, 360, 361, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 367, 368, 0, 369,
	370, 372, 374, 371, 373, 378, 375, 376, 377, 380,
	0, 379, 0, 381, 382, 383, 386, 387, 385, 0,
	384, 0, 243, 0, 388, 0, 545, 389, 546, 391,
	392, 0, 0, 393, 0, 0, 0, 395, 396, 397,
	0, 0, 398, 399, 547, 0, 400, 0, 548, 401,
	402, 394, 403, 404, 405, 406, 407, 408, 409, 410,
	0, 411, 412, 549, 550, 551, 413, 552, 414, 415,
	0, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	553, 425, 424, 426, 0, 0, 0, 0, 0, 0,
	427, 0, 429, 430, 431, 428, 432, 433, 434, 435,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 554,
	443, 0, 444, 445, 451, 452, 446, 447, 453, 454,
	455, 456, 457, 0, 459, 460, 458, 461, 462, 463,
	0, 464, 448, 449, 465, 466, 0, 467, 468, 555,
	0, 469, 0, 470, 471, 472, 473, 450, 474, 479,
	556, 475, 476, 477, 478, 557, 0, 481, 482, 0,
	480, 0, 483, 484, 485, 486, 487, 488, 313, 489,
	0, 490, 558, 559, 560, 561, 0, 497, 0, 491,
	492, 562, 493, 563, 0, 494, 495, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 504, 505, 503, 506,
	0, 507, 0, 0, 508, 509, 510, 564, 565, 566,
	0, 512, 511, 567, 1406, 0, 238, 0, 513, 514,
	568, 515, 516, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 518, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 519,
	520, 0, 521, 259, 522, 0, 260, 261, 262, 263,
	264, 0, 0, 0, 265, 523, 524, 525, 0, 266,
	267, 526, 0, 0, 0, 268, 269, 270, 271, 272,
	273, 274, 0, 0, 276, 277, 278, 275, 0, 279,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 289,
	0, 290, 527, 528, 0, 294, 291, 292, 0, 295,
	293, 0, 296, 297, 0, 0, 298, 299, 300, 0,
	301, 302, 0, 303, 304, 305, 0, 306, 307, 529,
	308, 309, 310, 312, 314, 311, 315, 316, 317, 318,
	530, 531, 0, 241, 0, 0, 0, 0, 0, 319,
	320, 321, 532, 0, 0, 0, 322, 0, 323, 0,
	0, 0, 324, 325, 533, 534, 326, 327, 0, 328,
	535, 0, 536, 329, 0, 330, 331, 332, 333, 334,
	1405, 538, 539, 390, 0, 335, 336, 0, 337, 338,
	339, 340, 0, 0, 0, 242, 341, 342, 344, 0,
	0, 343, 540, 541, 0, 542, 0, 345, 0, 543,
	0, 346, 347, 348, 0, 349, 0, 0, 0, 350,
	351, 352, 353, 354, 355, 0, 356, 358, 357, 0,
	359, 544, 0, 360, 361, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 367, 368, 0, 369, 370, 372,
	374, 371, 373, 378, 375, 376, 377, 380, 0, 379,
	0, 381, 382, 383, 386, 387, 385, 0, 384, 0,
	243, 0, 388, 0, 545, 389, 546, 391, 392, 0,
	0, 393, 0, 0, 0, 395, 396, 397, 0, 0,
	398, 399, 547, 0, 400, 0, 548, 401, 402, 394,
	403, 404, 405, 406, 407, 408, 409, 410, 0, 411,
	412, 549, 550, 551, 413, 552, 414, 415, 0, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 553, 425,
	424, 426, 0, 0, 0, 0, 0, 0, 427, 0,
	429, 430, 431, 428, 432, 433, 434, 435, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 554, 443, 0,
	444, 445, 451, 452, 446, 447, 453, 454, 455, 456,
	457, 0, 459, 460, 458, 461, 462, 463, 0, 464,
	448, 449, 465, 466, 0, 467, 468, 555, 0, 469,
	0, 470, 471, 472, 473, 450, 474, 479, 556, 475,
	476, 477, 478, 557, 0, 481, 482, 0, 480, 0,
	483, 484, 485, 486, 487, 488, 313, 489, 0, 490,
	558, 559, 560, 561, 0, 497, 0, 491, 492, 562,
	493, 563, 0, 494, 495, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 504, 505, 503, 506, 0, 507,
	0, 0, 508, 509, 510, 564, 565, 566, 0, 512,
	511, 567, 1397, 0, 238, 0, 513, 514, 568, 515,
	516, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 518, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 519, 520, 0,
	521, 259, 522, 0, 260, 261, 262, 263, 264, 0,
	0, 0, 265, 523, 524, 525, 0, 266, 267, 526,
	0, 0, 0, 268, 269, 270, 271, 272, 273, 274,
	0, 0, 276, 277, 278, 275, 0, 279, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 289, 0, 290,
	527, 528, 0, 294, 291, 292, 0, 295, 293, 0,
	296, 297, 0, 0, 298, 299, 300, 0, 301, 302,
	0, 303, 304, 305, 0, 306, 307, 529, 308, 309,
	310, 312, 314, 311, 315, 316, 317, 318, 530, 531,
	0, 241, 0, 0, 0, 0, 0, 319, 320, 321,
	532, 0, 0, 0, 322, 0, 323, 0, 0, 0,
	324, 325, 533, 534, 326, 327, 0, 328, 535, 0,
	536, 329, 0, 330, 331, 332, 333, 334, 1396, 538,
	539, 390, 0, 335, 336, 0, 337, 338, 339, 340,
	0, 0, 0, 242, 341, 342, 344, 0, 0, 343,
	540, 541, 0, 542, 0, 345, 0, 543, 0, 346,
	347, 348, 0, 349, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 0, 356, 358, 357, 0, 359, 544,
	0, 360, 361, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 367, 368, 0, 369, 370, 372, 374, 371,
	373, 378, 375, 376, 377, 380, 0, 379, 0, 381,
	382, 383, 386, 387, 385, 0, 384, 0, 243, 0,
	388, 0, 545, 389, 546, 391, 392, 0, 0, 393,
	0, 0, 0, 395, 396, 397, 0, 0, 398, 399,
	547, 0, 400, 0, 548, 401, 402, 394, 403, 404,
	405, 406, 407, 408, 409, 410, 0, 411, 412, 549,
	550, 551, 413, 552, 414, 415, 0, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 553, 425, 424, 426,
	0, 0, 0, 0, 0, 0, 427, 0, 429, 430,
	431, 428, 432, 433, 434, 435, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 554, 443, 0, 444, 445,
	451, 452, 446, 447, 453, 454, 455, 456, 457, 0,
	459, 460, 458, 461, 462, 463, 0, 464, 448, 449,
	465, 466, 0, 467, 468, 555, 0, 469, 0, 470,
	471, 472, 473, 450, 474, 479, 556, 475, 476, 477,
	478, 557, 0, 481, 482, 0, 480, 0, 483, 484,
	485, 486, 487, 488, 313, 489, 0, 490, 558, 559,
	560, 561, 0, 497, 0, 491, 492, 562, 493, 563,
	0, 494, 495, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 504, 505, 503, 506, 0, 507, 0, 0,
	508, 509, 510, 564, 565, 566, 0, 512, 511, 567,
	1394, 0, 238, 0, 513, 514, 568, 515, 516, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 241,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 0, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 1393, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 242, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 0, 381, 382, 383,
	386, 387, 385, 0, 384, 0, 243, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 0, 512, 511, 567, 1390, 0,
	238, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 525, 0, 266, 267, 526, 0, 0, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 241, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 0, 324, 325, 533, 534,
	326, 327, 0, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 1389, 538, 539, 390, 0, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 242,
	341, 342, 344, 0, 0, 343, 540, 541, 0, 542,
	0, 345, 0, 543, 0, 346, 347, 348, 0, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	356, 358, 357, 0, 359, 544, 0, 360, 361, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 0, 381, 382, 383, 386, 387,
	385, 0, 384, 0, 243, 0, 388, 0, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 0, 400, 0,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 0, 459, 460, 458, 461,
	462, 463, 0, 464, 448, 449, 465, 466, 0, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 0, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 0, 512, 511, 567, 1347, 0, 238, 0,
	513, 514, 568, 515, 516, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 519, 520, 0, 521, 259, 522, 0, 260, 261,
	262, 263, 264, 0, 0, 0, 265, 523, 524, 525,
	0, 266, 267, 526, 0, 0, 0, 268, 269, 270,
	271, 272, 273, 274, 0, 0, 276, 277, 278, 275,
	0, 279, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 289, 0, 290, 527, 528, 0, 294, 291, 292,
	0, 295, 293, 0, 296, 297, 0, 0, 298, 299,
	300, 0, 301, 302, 0, 303, 304, 305, 0, 306,
	307, 529, 308, 309, 310, 312, 314, 311, 315, 316,
	317, 318, 530, 531, 0, 241, 0, 0, 0, 0,
	0, 319, 320, 321, 532, 0, 0, 0, 322, 0,
	323, 0, 0, 0, 324, 325, 533, 534, 326, 327,
	0, 328, 535, 0, 536, 329, 0, 330, 331, 332,
	333, 334, 537, 538, 539, 390, 0, 335, 336, 0,
	337, 338, 339, 340, 0, 0, 0, 242, 341, 342,
	344, 0, 0, 343, 540, 541, 0, 542, 0, 345,
	0, 543, 0, 346, 347, 348, 0, 349, 0, 0,
	0, 350, 351, 352, 353, 354, 355, 0, 356, 358,
	357, 0, 359, 544, 0, 360, 361, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 367, 368, 0, 369,
	370, 372, 374, 371, 373, 378, 375, 376, 377, 380,
	0, 379, 0, 381, 382, 383, 386, 387, 385, 0,
	384, 0, 243, 0, 388, 0, 545, 389, 546, 391,
	392, 0, 0, 393, 0, 0, 0, 395, 396, 397,
	0, 0, 398, 399, 547, 0, 400, 0, 548, 401,
	402, 394, 403, 404, 405, 406, 407, 408, 409, 410,
	0, 411, 412, 549, 550, 551, 413, 552, 414, 415,
	0, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	553, 425, 424, 426, 0, 0, 0, 0, 0, 0,
	427, 0, 429, 430, 431, 428, 432, 433, 434, 435,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 554,
	443, 0, 444, 445, 451, 452, 446, 447, 453, 454,
	455, 456, 457, 0, 459, 460, 458, 461, 462, 463,
	0, 464, 448, 449, 465, 466, 0, 467, 468, 555,
	0, 469, 0, 470, 471, 472, 473, 450, 474, 479,
	556, 475, 476, 477, 478, 557, 0, 481, 482, 0,
	480, 0, 483, 484, 485, 486, 487, 488, 313, 489,
	0, 490, 558, 559, 560, 561, 0, 497, 0, 491,
	492, 562, 493, 563, 0, 494, 495, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 504, 505, 503, 506,
	0, 507, 0, 0, 508, 509, 510, 564, 565, 566,
	0, 512, 511, 567, 1263, 0, 238, 0, 513, 514,
	568, 515, 516, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 518, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 519,
	520, 0, 521, 259, 522, 0, 260, 261, 262, 263,
	264, 0, 0, 0, 265, 523, 524, 525, 0, 266,
	267, 526, 0, 0, 0, 268, 269, 270, 271, 272,
	273, 274, 0, 0, 276, 277, 278, 275, 0, 279,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 289,
	0, 290, 527, 528, 0, 294, 291, 292, 0, 295,
	293, 0, 296, 297, 0, 0, 298, 299, 300, 0,
	301, 302, 0, 303, 304, 305, 0, 306, 307, 529,
	308, 309, 310, 312, 314, 311, 315, 316, 317, 318,
	530, 531, 0, 241, 0, 0, 0, 0, 0, 319,
	320, 321, 532, 0, 0, 0, 322, 0, 323, 0,
	0, 0, 324, 325, 533, 534, 326, 327, 0, 328,
	535, 0, 536, 329, 0, 330, 331, 332, 333, 334,
	537, 538, 539, 390, 0, 335, 336, 0, 337, 338,
	339, 340, 0, 0, 0, 242, 341, 342, 344, 0,
	0, 343, 540, 541, 0, 542, 0, 345, 0, 543,
	0, 346, 347, 348, 0, 349, 0, 0, 0, 350,
	351, 352, 353, 354, 355, 0, 356, 358, 357, 0,
	359, 544, 0, 360, 361, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 367, 368, 0, 369, 370, 372,
	374, 371, 373, 378, 375, 376, 377, 380, 0, 379,
	0, 381, 382, 383, 386, 387, 385, 0, 384, 0,
	243, 0, 388, 0, 545, 389, 546, 391, 392, 0,
	0, 393, 0, 0, 0, 395, 396, 397, 0, 0,
	398, 399, 547, 0, 400, 0, 548, 401, 402, 394,
	403, 404, 405, 406, 407, 408, 409, 410, 0, 411,
	412, 549, 550, 551, 413, 552, 414, 415, 0, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 553, 425,
	424, 426, 0, 0, 0, 0, 0, 0, 427, 0,
	429, 430, 431, 428, 432, 433, 434, 435, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 554, 443, 0,
	444, 445, 451, 452, 446, 447, 453, 454, 455, 456,
	457, 0, 459, 460, 458, 461, 462, 463, 0, 464,
	448, 449, 465, 466, 0, 467, 468, 555, 0, 469,
	0, 470, 471, 472, 473, 450, 474, 479, 556, 475,
	476, 477, 478, 557, 0, 481, 482, 0, 480, 0,
	483, 484, 485, 486, 487, 488, 313, 489, 0, 490,
	558, 559, 560, 561, 0, 497, 0, 491, 492, 562,
	493, 563, 0, 494, 495, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 504, 505, 503, 506, 0, 507,
	0, 0, 508, 509, 510, 564, 565, 566, 0, 512,
	511, 567, 1256, 0, 238, 0, 513, 514, 568, 515,
	516, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 518, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 519, 520, 0,
	521, 259, 522, 0, 260, 261, 262, 263, 264, 0,
	0, 0, 265, 523, 524, 525, 0, 266, 267, 526,
	0, 0, 0, 268, 269, 270, 271, 272, 273, 274,
	0, 0, 276, 277, 278, 275, 0, 279, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 289, 0, 290,
	527, 528, 0, 294, 291, 292, 0, 295, 293, 0,
	296, 297, 0, 0, 298, 299, 300, 0, 301, 302,
	0, 303, 304, 305, 0, 306, 307, 529, 308, 309,
	310, 312, 314, 311, 315, 316, 317, 318, 530, 531,
	0, 241, 0, 0, 0, 0, 0, 319, 320, 321,
	532, 0, 0, 0, 322, 0, 323, 0, 0, 0,
	324, 325, 533, 534, 326, 327, 0, 328, 535, 0,
	536, 329, 0, 330, 331, 332, 333, 334, 1258, 538,
	539, 390, 0, 335, 336, 0, 337, 338, 339, 340,
	0, 0, 0, 242, 341, 342, 344, 0, 0, 343,
	540, 541, 0, 542, 0, 345, 0, 543, 0, 346,
	347, 348, 0, 349, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 0, 356, 358, 357, 0, 359, 544,
	0, 360, 361, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 367, 368, 0, 369, 370, 372, 374, 371,
	373, 378, 375, 376, 377, 380, 0, 379, 0, 381,
	382, 383, 386, 387, 385, 0, 384, 0, 243, 0,
	388, 0, 545, 389, 546, 391, 392, 0, 0, 393,
	0, 0, 0, 395, 396, 397, 0, 0, 398, 399,
	547, 0, 400, 0, 548, 401, 402, 394, 403, 404,
	405, 406, 407, 408, 409, 410, 0, 411, 412, 549,
	550, 551, 413, 552, 414, 415, 0, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 553, 425, 424, 426,
	0, 0, 0, 0, 0, 0, 427, 0, 429, 430,
	431, 428, 432, 433, 434, 435, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 554, 443, 0, 444, 445,
	451, 452, 446, 447, 453, 454, 455, 456, 457, 0,
	459, 460, 458, 461, 462, 463, 0, 464, 448, 449,
	465, 466, 0, 467, 468, 555, 0, 469, 0, 470,
	471, 472, 473, 450, 474, 479, 556, 475, 476, 477,
	478, 557, 0, 481, 482, 0, 480, 0, 483, 484,
	485, 486, 487, 488, 313, 489, 0, 490, 558, 559,
	560, 561, 0, 497, 0, 491, 492, 562, 493, 563,
	0, 494, 495, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 504, 505, 503, 506, 0, 507, 0, 0,
	508, 509, 510, 564, 565, 566, 0, 512, 511, 567,
	570, 0, 238, 0, 513, 514, 568, 515, 516, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 241,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 0, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 537, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 242, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 0, 381, 382, 383,
	386, 387, 385, 0, 384, 0, 243, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 0, 512, 511, 567, 229, 0,
	238, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 525, 0, 266, 267, 526, 0, 0, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 241, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 0, 324, 325, 533, 534,
	326, 327, 0, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 537, 538, 539, 390, 0, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 242,
	341, 342, 344, 0, 0, 343, 540, 541, 0, 542,
	0, 345, 0, 543, 0, 346, 347, 348, 0, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	356, 358, 357, 0, 359, 544, 0, 360, 361, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 0, 381, 382, 383, 386, 387,
	385, 0, 384, 0, 243, 0, 388, 0, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 0, 400, 0,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 0, 459, 460, 458, 461,
	462, 463, 0, 464, 448, 449, 465, 466, 0, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 0, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 238, 512, 511, 567, 0, 0, 0, 0,
	513, 514, 568, 515, 516, 517, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 241,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 0, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 537, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 242, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 0, 381, 382, 383,
	386, 387, 385, 0, 384, 0, 243, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 238, 512, 511, 567, 0, 0,
	0, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 518, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 519, 520, 0,
	521, 259, 522, 0, 260, 261, 262, 263, 264, 0,
	0, 0, 265, 523, 524, 525, 0, 266, 267, 526,
	0, 0, 0, 268, 269, 270, 271, 272, 273, 274,
	0, 0, 276, 277, 278, 275, 0, 279, 0, 280,
	281, 282, 592, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 289, 0, 290,
	527, 528, 0, 294, 291, 292, 0, 295, 293, 0,
	296, 297, 0, 0, 298, 299, 300, 0, 301, 302,
	0, 303, 304, 305, 0, 306, 307, 529, 308, 309,
	310, 312, 314, 311, 315, 316, 317, 318, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 321,
	532, 0, 0, 0, 322, 0, 323, 0, 0, 0,
	324, 325, 533, 534, 326, 327, 593, 328, 535, 0,
	536, 329, 0, 330, 331, 332, 333, 334, 537, 538,
	539, 390, 0, 335, 336, 0, 337, 338, 339, 340,
	0, 0, 0, 0, 341, 342, 344, 0, 0, 343,
	540, 541, 0, 542, 0, 345, 0, 543, 0, 346,
	347, 348, 0, 349, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 0, 356, 358, 357, 0, 359, 544,
	0, 360, 361, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 367, 368, 0, 369, 370, 372, 374, 371,
	373, 378, 375, 376, 377, 380, 0, 379, 0, 381,
	382, 383, 386, 387, 385, 0, 384, 0, 0, 0,
	388, 0, 545, 389, 546, 391, 392, 0, 0, 393,
	0, 0, 0, 395, 396, 397, 0, 0, 398, 399,
	547, 0, 400, 0, 548, 401, 402, 394, 403, 404,
	405, 406, 407, 408, 409, 410, 0, 411, 412, 549,
	550, 551, 413, 552, 414, 415, 0, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 553, 425, 424, 426,
	0, 0, 0, 0, 0, 0, 427, 0, 429, 430,
	431, 428, 432, 433, 434, 435, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 554, 443, 0, 444, 445,
	451, 452, 446, 447, 453, 454, 455, 456, 457, 594,
	459, 460, 458, 461, 462, 463, 0, 464, 448, 449,
	465, 466, 0, 467, 468, 555, 0, 469, 0, 470,
	471, 472, 473, 450, 474, 479, 556, 475, 476, 477,
	478, 557, 0, 481, 482, 0, 480, 0, 483, 484,
	485, 486, 487, 488, 313, 489, 0, 490, 558, 559,
	560, 561, 0, 497, 0, 491, 492, 562, 493, 563,
	0, 494, 495, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 504, 505, 503, 506, 0, 507, 0, 0,
	508, 509, 510, 564, 565, 566, 238, 512, 511, 567,
	0, 0, 0, 0, 513, 514, 568, 515, 516, 517,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 518, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 519,
	520, 0, 521, 259, 522, 0, 260, 261, 262, 263,
	264, 0, 0, 0, 265, 523, 524, 525, 0, 266,
	267, 526, 0, 0, 0, 268, 269, 270, 271, 272,
	273, 274, 0, 0, 276, 277, 278, 275, 0, 279,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 2074, 289,
	0, 290, 527, 528, 0, 294, 291, 292, 0, 295,
	293, 0, 296, 297, 0, 0, 298, 299, 300, 0,
	301, 302, 0, 303, 304, 305, 0, 306, 307, 529,
	308, 309, 310, 312, 314, 311, 315, 316, 317, 318,
	530, 531, 0, 241, 0, 0, 0, 0, 0, 319,
	320, 321, 532, 0, 0, 0, 322, 0, 323, 0,
	0, 0, 324, 325, 533, 534, 326, 327, 0, 328,
	535, 0, 536, 329, 0, 330, 331, 332, 333, 334,
	537, 538, 539, 390, 0, 335, 336, 0, 337, 338,
	339, 340, 0, 0, 0, 242, 341, 342, 344, 0,
	0, 343, 540, 541, 0, 542, 0, 345, 0, 543,
	0, 346, 347, 348, 0, 349, 0, 0, 0, 350,
	351, 352, 353, 354, 355, 0, 356, 358, 357, 0,
	359, 544, 0, 360, 361, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 367, 368, 0, 369, 370, 372,
	374, 371, 373, 378, 375, 376, 377, 380, 0, 379,
	0, 381, 382, 383, 386, 387, 385, 0, 384, 0,
	243, 0, 388, 0, 545, 389, 546, 391, 392, 0,
	0, 393, 0, 0, 0, 395, 396, 397, 0, 0,
	398, 399, 547, 0, 400, 0, 548, 401, 402, 394,
	403, 404, 405, 406, 407, 408, 409, 410, 0, 411,
	412, 549, 550, 551, 413, 552, 414, 415, 0, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 553, 425,
	424, 426, 0, 0, 0, 0, 0, 0, 427, 0,
	429, 430, 431, 428, 432, 433, 434, 435, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 554, 443, 0,
	444, 445, 451, 452, 446, 447, 453, 454, 455, 456,
	457, 0, 459, 460, 458, 461, 462, 463, 0, 464,
	448, 449, 465, 466, 0, 467, 468, 555, 0, 469,
	0, 470, 471, 472, 473, 450, 474, 479, 556, 475,
	476, 477, 478, 557, 0, 481, 482, 0, 480, 0,
	483, 484, 485, 486, 487, 488, 313, 489, 0, 490,
	558, 559, 560, 561, 0, 497, 0, 491, 492, 562,
	493, 563, 0, 494, 495, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 504, 505, 503, 506, 0, 507,
	0, 0, 508, 509, 510, 564, 565, 566, 238, 512,
	511, 567, 0, 0, 0, 0, 513, 514, 568, 515,
	516, 517, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 519, 520, 0, 521, 259, 522, 0, 260, 261,
	262, 263, 264, 0, 0, 0, 265, 523, 524, 525,
	0, 266, 267, 526, 0, 0, 0, 268, 269, 270,
	271, 272, 273, 274, 0, 0, 276, 277, 278, 275,
	0, 279, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	2072, 289, 0, 290, 527, 528, 0, 294, 291, 292,
	0, 295, 293, 0, 296, 297, 0, 0, 298, 299,
	300, 0, 301, 302, 0, 303, 304, 305, 0, 306,
	307, 529, 308, 309, 310, 312, 314, 311, 315, 316,
	317, 318, 530, 531, 0, 241, 0, 0, 0, 0,
	0, 319, 320, 321, 532, 0, 0, 0, 322, 0,
	323, 0, 0, 0, 324, 325, 533, 534, 326, 327,
	0, 328, 535, 0, 536, 329, 0, 330, 331, 332,
	333, 334, 537, 538, 539, 390, 0, 335, 336, 0,
	337, 338, 339, 340, 0, 0, 0, 242, 341, 342,
	344, 0, 0, 343, 540, 541, 0, 542, 0, 345,
	0, 543, 0, 346, 347, 348, 0, 349, 0, 0,
	0, 350, 351, 352, 353, 354, 355, 0, 356, 358,
	357, 0, 359, 544, 0, 360, 361, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 367, 368, 0, 369,
	370, 372, 374, 371, 373, 378, 375, 376, 377, 380,
	0, 379, 0, 381, 382, 383, 386, 387, 385, 0,
	384, 0, 243, 0, 388, 0, 545, 389, 546, 391,
	392, 0, 0, 393, 0, 0, 0, 395, 396, 397,
	0, 0, 398, 399, 547, 0, 400, 0, 548, 401,
	402, 394, 403, 404, 405, 406, 407, 408, 409, 410,
	0, 411, 412, 549, 550, 551, 413, 552, 414, 415,
	0, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	553, 425, 424, 426, 0, 0, 0, 0, 0, 0,
	427, 0, 429, 430, 431, 428, 432, 433, 434, 435,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 554,
	443, 0, 444, 445, 451, 452, 446, 447, 453, 454,
	455, 456, 457, 0, 459, 460, 458, 461, 462, 463,
	0, 464, 448, 449, 465, 466, 0, 467, 468, 555,
	0, 469, 0, 470, 471, 472, 473, 450, 474, 479,
	556, 475, 476, 477, 478, 557, 0, 481, 482, 0,
	480, 0, 483, 484, 485, 486, 487, 488, 313, 489,
	0, 490, 558, 559, 560, 561, 0, 497, 0, 491,
	492, 562, 493, 563, 0, 494, 495, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 504, 505, 503, 506,
	0, 507, 0, 0, 508, 509, 510, 564, 565, 566,
	238, 512, 511, 567, 0, 0, 0, 0, 513, 514,
	568, 515, 516, 517, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 525, 0, 266, 267, 526, 0, 0, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 2070, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 241, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 0, 324, 325, 533, 534,
	326, 327, 0, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 537, 538, 539, 390, 0, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 242,
	341, 342, 344, 0, 0, 343, 540, 541, 0, 542,
	0, 345, 0, 543, 0, 346, 347, 348, 0, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	356, 358, 357, 0, 359, 544, 0, 360, 361, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 0, 381, 382, 383, 386, 387,
	385, 0, 384, 0, 243, 0, 388, 0, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 0, 400, 0,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 0, 459, 460, 458, 461,
	462, 463, 0, 464, 448, 449, 465, 466, 0, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 0, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 238, 512, 511, 567, 0, 0, 0, 0,
	513, 514, 568, 515, 516, 517, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 241,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 0, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 2008, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 242, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 0, 381, 382, 383,
	386, 387, 385, 0, 384, 0, 243, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 0, 512, 511, 567, 754, 0,
	238, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 525, 0, 266, 267, 526, 0, 0, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 0, 324, 325, 533, 534,
	326, 327, 0, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 537, 538, 539, 390, 0, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 0,
	341, 342, 344, 0, 0, 343, 540, 541, 0, 542,
	753, 345, 0, 543, 0, 346, 347, 348, 0, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	356, 358, 357, 0, 359, 544, 0, 360, 361, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 0, 381, 382, 383, 386, 387,
	385, 0, 384, 0, 0, 0, 388, 0, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 0, 400, 0,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 0, 459, 460, 458, 461,
	462, 463, 0, 464, 448, 449, 465, 466, 0, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 752, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 238, 512, 511, 567, 0, 0, 0, 0,
	513, 514, 568, 515, 516, 517, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 2640,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 0, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 537, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 0, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 0, 381, 382, 383,
	386, 387, 385, 0, 384, 0, 0, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 3584, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 0, 512, 511, 567, 579, 0,
	238, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 578, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 525, 0, 266, 267, 526, 0, 0, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 0, 324, 325, 533, 534,
	326, 327, 0, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 537, 538, 539, 390, 0, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 0,
	341, 342, 344, 0, 0, 343, 540, 541, 0, 542,
	0, 345, 0, 543, 0, 346, 347, 348, 0, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	356, 358, 357, 0, 359, 544, 0, 360, 361, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 0, 381, 382, 383, 386, 387,
	385, 0, 384, 0, 0, 0, 388, 0, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 0, 400, 0,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	577, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 0, 459, 460, 458, 461,
	462, 463, 0, 464, 448, 449, 465, 466, 0, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 0, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 0, 512, 511, 567, 238, 2627, 0, 0,
	513, 514, 568, 515, 516, 517, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 518, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 519,
	520, 0, 521, 259, 522, 0, 260, 261, 262, 263,
	264, 0, 0, 0, 265, 523, 524, 525, 0, 266,
	267, 526, 0, 0, 0, 268, 269, 270, 271, 272,
	273, 274, 0, 0, 276, 277, 278, 275, 0, 279,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 289,
	0, 290, 527, 528, 0, 294, 291, 292, 0, 295,
	293, 0, 296, 297, 0, 0, 298, 299, 300, 0,
	301, 302, 0, 303, 304, 305, 0, 306, 307, 529,
	308, 309, 310, 312, 314, 311, 315, 316, 317, 318,
	530, 531, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 321, 532, 0, 0, 0, 322, 0, 323, 0,
	0, 0, 324, 325, 533, 534, 326, 327, 0, 328,
	535, 0, 536, 329, 0, 330, 331, 332, 333, 334,
	537, 538, 539, 390, 0, 335, 336, 0, 337, 338,
	339, 340, 0, 0, 0, 0, 341, 342, 344, 0,
	0, 343, 540, 541, 0, 542, 0, 345, 0, 543,
	0, 346, 347, 348, 0, 349, 0, 0, 0, 350,
	351, 352, 353, 354, 355, 0, 356, 358, 357, 0,
	359, 544, 0, 360, 361, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 367, 368, 0, 369, 370, 372,
	374, 371, 373, 378, 375, 376, 377, 380, 0, 379,
	0, 381, 382, 383, 386, 387, 385, 0, 384, 0,
	0, 0, 388, 0, 545, 389, 546, 391, 392, 0,
	0, 393, 0, 0, 0, 395, 396, 397, 0, 0,
	398, 399, 547, 0, 400, 0, 548, 401, 402, 394,
	403, 404, 405, 406, 407, 408, 409, 410, 0, 411,
	412, 549, 550, 551, 413, 552, 414, 415, 0, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 553, 425,
	424, 426, 0, 0, 0, 0, 0, 0, 427, 0,
	429, 430, 431, 428, 432, 433, 434, 435, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 554, 443, 0,
	444, 445, 451, 452, 446, 447, 453, 454, 455, 456,
	457, 0, 459, 460, 458, 461, 462, 463, 0, 464,
	448, 449, 465, 466, 0, 467, 468, 555, 0, 469,
	0, 470, 471, 472, 473, 450, 474, 479, 556, 475,
	476, 477, 478, 557, 0, 481, 482, 0, 480, 0,
	483, 484, 485, 486, 487, 488, 313, 489, 0, 490,
	558, 559, 560, 561, 0, 497, 0, 491, 492, 562,
	493, 563, 0, 494, 495, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 504, 505, 503, 506, 0, 507,
	0, 0, 508, 509, 510, 564, 565, 566, 0, 512,
	511, 567, 238, 3593, 0, 0, 513, 514, 568, 515,
	516, 517, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 0, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 537, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 0, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 0, 381, 382, 383,
	386, 387, 385, 0, 384, 0, 0, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 238, 512, 511, 567, 0, 0,
	0, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 518, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 519, 520, 0,
	521, 259, 522, 0, 260, 261, 262, 263, 264, 0,
	0, 0, 265, 523, 524, 525, 0, 266, 267, 526,
	0, 0, 0, 268, 269, 270, 271, 272, 273, 274,
	0, 0, 276, 277, 278, 275, 0, 279, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 289, 0, 290,
	527, 528, 3321, 294, 291, 292, 0, 295, 293, 0,
	296, 297, 0, 0, 298, 299, 300, 0, 301, 302,
	0, 303, 304, 305, 0, 306, 307, 529, 308, 309,
	310, 312, 314, 311, 315, 316, 317, 318, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 321,
	532, 0, 0, 0, 322, 0, 323, 0, 0, 0,
	324, 325, 533, 534, 326, 327, 0, 328, 535, 0,
	536, 329, 0, 330, 331, 332, 333, 334, 537, 538,
	539, 390, 0, 335, 336, 0, 337, 338, 339, 340,
	0, 0, 0, 0, 341, 342, 344, 0, 0, 343,
	540, 541, 0, 542, 0, 345, 0, 543, 0, 346,
	347, 348, 0, 349, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 0, 356, 358, 357, 0, 359, 544,
	0, 360, 361, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 367, 368, 0, 369, 370, 372, 374, 371,
	373, 378, 375, 376, 377, 380, 0, 379, 0, 381,
	382, 383, 386, 387, 385, 0, 384, 0, 0, 0,
	388, 0, 545, 389, 546, 391, 392, 0, 0, 393,
	0, 0, 0, 395, 396, 397, 0, 0, 398, 399,
	547, 0, 400, 0, 548, 401, 402, 394, 403, 404,
	405, 406, 407, 408, 409, 410, 0, 411, 412, 549,
	550, 551, 413, 552, 414, 415, 0, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 553, 425, 424, 426,
	0, 0, 0, 0, 0, 0, 427, 0, 429, 430,
	431, 428, 432, 433, 434, 435, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 554, 443, 0, 444, 445,
	451, 452, 446, 447, 453, 454, 455, 456, 457, 0,
	459, 460, 458, 461, 462, 463, 0, 464, 448, 449,
	465, 466, 0, 467, 468, 555, 0, 469, 0, 470,
	471, 472, 473, 450, 474, 479, 556, 475, 476, 477,
	478, 557, 0, 481, 482, 0, 480, 0, 483, 484,
	485, 486, 487, 488, 313, 489, 0, 490, 558, 559,
	560, 561, 0, 497, 0, 491, 492, 562, 493, 563,
	0, 494, 495, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 504, 505, 503, 506, 0, 507, 0, 0,
	508, 509, 510, 564, 565, 566, 238, 512, 511, 567,
	0, 0, 0, 0, 513, 514, 568, 515, 516, 517,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 518, 0, 2379,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 519,
	520, 0, 521, 259, 522, 0, 260, 261, 262, 263,
	264, 0, 0, 0, 265, 523, 524, 525, 0, 266,
	267, 526, 0, 0, 0, 268, 269, 270, 271, 272,
	273, 274, 0, 0, 276, 277, 278, 275, 0, 279,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 289,
	0, 290, 527, 528, 0, 294, 291, 292, 0, 295,
	293, 0, 296, 297, 0, 0, 298, 299, 300, 0,
	301, 302, 0, 303, 304, 305, 0, 306, 307, 529,
	308, 309, 310, 312, 314, 311, 315, 316, 317, 318,
	530, 531, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 321, 532, 0, 0, 0, 322, 0, 323, 0,
	0, 0, 324, 325, 533, 534, 326, 327, 0, 328,
	535, 0, 536, 329, 0, 330, 331, 332, 333, 334,
	537, 538, 539, 390, 0, 335, 336, 0, 337, 338,
	339, 340, 0, 0, 0, 0, 341, 342, 344, 0,
	0, 343, 540, 541, 0, 542, 0, 345, 0, 543,
	0, 346, 347, 348, 0, 349, 0, 0, 0, 350,
	351, 352, 353, 354, 355, 0, 356, 358, 357, 0,
	359, 544, 0, 360, 361, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 367, 368, 0, 369, 370, 372,
	374, 371, 373, 378, 375, 376, 377, 380, 0, 379,
	0, 381, 382, 383, 386, 387, 385, 0, 384, 0,
	0, 0, 388, 0, 545, 389, 546, 391, 392, 0,
	0, 393, 0, 0, 0, 395, 396, 397, 0, 0,
	398, 399, 547, 0, 400, 0, 548, 401, 402, 394,
	403, 404, 405, 406, 407, 408, 409, 410, 0, 411,
	412, 549, 550, 551, 413, 552, 414, 415, 0, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 553, 425,
	424, 426, 0, 0, 0, 0, 0, 0, 427, 0,
	429, 430, 431, 428, 432, 433, 434, 435, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 554, 443, 0,
	444, 445, 451, 452, 446, 447, 453, 454, 455, 456,
	457, 0, 459, 460, 458, 461, 462, 463, 0, 464,
	448, 449, 465, 466, 0, 467, 468, 555, 0, 469,
	0, 470, 471, 472, 473, 450, 474, 479, 556, 475,
	476, 477, 478, 557, 0, 481, 482, 0, 480, 0,
	483, 484, 485, 486, 487, 488, 313, 489, 0, 490,
	558, 559, 560, 561, 0, 497, 0, 491, 492, 562,
	493, 563, 0, 494, 495, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 504, 505, 503, 506, 0, 507,
	0, 0, 508, 509, 510, 564, 565, 566, 0, 512,
	511, 567, 238, 2627, 0, 0, 513, 514, 568, 515,
	516, 517, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 0, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 537, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 0, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 0, 381, 382, 383,
	386, 387, 385, 0, 384, 0, 0, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 2624, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 238, 512, 511, 567, 0, 0,
	0, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 2051, 250, 251,
	0, 0, 0, 0, 0, 518, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 519, 520, 0,
	521, 259, 522, 0, 260, 261, 262, 263, 264, 0,
	0, 0, 265, 523, 524, 525, 0, 266, 267, 526,
	0, 0, 0, 268, 269, 270, 271, 272, 273, 274,
	0, 0, 276, 277, 278, 275, 0, 279, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 289, 0, 290,
	527, 528, 0, 294, 291, 292, 0, 295, 293, 0,
	296, 297, 0, 0, 298, 299, 300, 0, 301, 302,
	0, 303, 304, 305, 0, 306, 307, 529, 308, 309,
	310, 312, 314, 311, 315, 316, 317, 318, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 321,
	532, 0, 0, 0, 322, 0, 323, 0, 0, 0,
	324, 325, 533, 534, 326, 327, 0, 328, 535, 0,
	536, 329, 0, 330, 331, 332, 333, 334, 537, 538,
	539, 390, 0, 335, 336, 0, 337, 338, 339, 340,
	0, 0, 0, 0, 341, 342, 344, 0, 0, 343,
	540, 541, 0, 542, 0, 345, 0, 543, 0, 346,
	347, 348, 0, 349, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 0, 356, 358, 357, 0, 359, 544,
	0, 360, 361, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 367, 368, 0, 369, 370, 372, 374, 371,
	373, 378, 375, 376, 377, 380, 0, 379, 0, 381,
	382, 383, 386, 387, 385, 0, 384, 0, 0, 0,
	388, 0, 545, 389, 546, 391, 392, 0, 0, 393,
	0, 0, 0, 395, 396, 397, 0, 0, 398, 399,
	547, 0, 400, 0, 548, 401, 402, 394, 403, 404,
	405, 406, 407, 408, 409, 410, 0, 411, 412, 549,
	550, 551, 413, 552, 414, 415, 0, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 553, 425, 424, 426,
	0, 0, 0, 0, 0, 0, 427, 0, 429, 430,
	431, 428, 432, 433, 434, 435, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 554, 443, 0, 444, 445,
	451, 452, 446, 447, 453, 454, 455, 456, 457, 0,
	459, 460, 458, 461, 462, 463, 0, 464, 448, 449,
	465, 466, 0, 467, 468, 555, 0, 469, 0, 470,
	471, 472, 473, 450, 474, 479, 556, 475, 476, 477,
	478, 557, 0, 481, 482, 0, 480, 0, 483, 484,
	485, 486, 487, 488, 313, 489, 0, 490, 558, 559,
	560, 561, 0, 497, 0, 491, 492, 562, 493, 563,
	0, 494, 495, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 504, 505, 503, 506, 0, 507, 0, 0,
	508, 509, 510, 564, 565, 566, 0, 512, 511, 567,
	2041, 0, 238, 0, 513, 514, 568, 515, 516, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 0, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 537, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 0, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 0, 381, 382, 383,
	386, 387, 385, 0, 384, 0, 0, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 0, 512, 511, 567, 620, 0,
	238, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 252, 253, 1122, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 1120, 0, 266, 267, 526, 0, 0, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 0, 324, 325, 533, 534,
	326, 327, 0, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 537, 538, 539, 390, 0, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 0,
	341, 342, 344, 0, 0, 343, 540, 541, 0, 542,
	0, 345, 0, 543, 0, 346, 347, 348, 0, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	356, 358, 357, 0, 359, 544, 0, 360, 361, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 621, 0, 381, 382, 383, 386, 387,
	385, 0, 384, 0, 0, 0, 388, 0, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 0, 400, 0,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	617, 454, 455, 456, 457, 0, 459, 460, 458, 461,
	1123, 463, 0, 464, 448, 449, 465, 466, 0, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 0, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 616, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 0, 512, 511, 567, 620, 0, 238, 0,
	513, 514, 568, 515, 516, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 519, 520, 0, 521, 259, 522, 0, 260, 261,
	262, 263, 264, 0, 0, 0, 265, 523, 524, 525,
	0, 266, 610, 526, 0, 0, 0, 268, 269, 270,
	271, 272, 273, 274, 0, 0, 276, 277, 278, 275,
	0, 279, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 289, 0, 290, 527, 528, 0, 294, 291, 292,
	0, 295, 293, 0, 296, 297, 0, 0, 298, 299,
	300, 0, 301, 302, 0, 303, 304, 305, 0, 306,
	307, 529, 308, 309, 310, 312, 314, 311, 315, 316,
	317, 318, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 321, 532, 0, 0, 0, 322, 0,
	323, 0, 0, 0, 324, 325, 533, 534, 326, 327,
	0, 328, 535, 0, 536, 329, 0, 330, 331, 332,
	333, 334, 537, 538, 539, 390, 0, 335, 336, 0,
	337, 338, 339, 340, 0, 0, 0, 0, 341, 342,
	344, 0, 0, 343, 540, 541, 0, 542, 0, 345,
	0, 543, 0, 346, 347, 348, 0, 349, 0, 0,
	0, 350, 351, 352, 353, 354, 355, 0, 356, 358,
	357, 0, 359, 544, 0, 360, 361, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 367, 368, 0, 369,
	370, 372, 374, 371, 373, 378, 375, 376, 377, 380,
	0, 621, 0, 381, 382, 383, 386, 387, 385, 0,
	384, 0, 0, 0, 388, 0, 545, 389, 546, 391,
	392, 0, 0, 393, 0, 0, 0, 395, 396, 397,
	0, 0, 398, 399, 547, 0, 400, 0, 548, 401,
	402, 394, 403, 404, 405, 406, 407, 408, 409, 410,
	0, 411, 412, 549, 550, 551, 413, 552, 414, 415,
	0, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	553, 425, 424, 426, 0, 0, 0, 0, 0, 0,
	427, 0, 429, 430, 431, 428, 432, 433, 434, 435,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 554,
	443, 0, 444, 445, 451, 452, 446, 447, 617, 454,
	455, 456, 457, 0, 459, 460, 458, 461, 1429, 463,
	0, 464, 448, 449, 465, 466, 0, 467, 468, 555,
	0, 469, 0, 470, 471, 472, 473, 450, 474, 479,
	556, 475, 476, 477, 478, 557, 0, 481, 482, 0,
	480, 0, 483, 484, 485, 486, 487, 488, 313, 489,
	0, 490, 616, 559, 560, 561, 0, 497, 0, 491,
	492, 562, 493, 563, 0, 494, 495, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 504, 505, 503, 506,
	0, 507, 0, 0, 508, 509, 510, 564, 565, 566,
	0, 512, 511, 567, 1410, 0, 238, 0, 513, 514,
	568, 515, 516, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 518, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 519,
	520, 0, 521, 259, 522, 0, 260, 261, 262, 263,
	264, 0, 0, 0, 265, 523, 524, 525, 0, 266,
	267, 526, 0, 0, 0, 268, 269, 270, 271, 272,
	273, 274, 0, 0, 276, 277, 278, 275, 0, 279,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 289,
	0, 290, 527, 528, 0, 294, 291, 292, 0, 295,
	293, 0, 296, 297, 0, 0, 298, 299, 300, 0,
	301, 302, 0, 303, 304, 305, 0, 306, 307, 529,
	308, 309, 310, 312, 314, 311, 315, 316, 317, 318,
	530, 531, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 321, 532, 0, 0, 0, 322, 0, 323, 0,
	0, 0, 324, 325, 533, 534, 326, 327, 0, 328,
	535, 0, 536, 329, 0, 330, 331, 332, 333, 334,
	1409, 538, 539, 390, 0, 335, 336, 0, 337, 338,
	339, 340, 0, 0, 0, 0, 341, 342, 344, 0,
	0, 343, 540, 541, 0, 542, 0, 345, 0, 543,
	0, 346, 347, 348, 0, 349, 0, 0, 0, 350,
	351, 352, 353, 354, 355, 0, 356, 358, 357, 0,
	359, 544, 0, 360, 361, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 367, 368, 0, 369, 370, 372,
	374, 371, 373, 378, 375, 376, 377, 380, 0, 379,
	0, 381, 382, 383, 386, 387, 385, 0, 384, 0,
	0, 0, 388, 0, 545, 389, 546, 391, 392, 0,
	0, 393, 0, 0, 0, 395, 396, 397, 0, 0,
	398, 399, 547, 0, 400, 0, 548, 401, 402, 394,
	403, 404, 405, 406, 407, 408, 409, 410, 0, 411,
	412, 549, 550, 551, 413, 552, 414, 415, 0, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 553, 425,
	424, 426, 0, 0, 0, 0, 0, 0, 427, 0,
	429, 430, 431, 428, 432, 433, 434, 435, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 554, 443, 0,
	444, 445, 451, 452, 446, 447, 453, 454, 455, 456,
	457, 0, 459, 460, 458, 461, 462, 463, 0, 464,
	448, 449, 465, 466, 0, 467, 468, 555, 0, 469,
	0, 470, 471, 472, 473, 450, 474, 479, 556, 475,
	476, 477, 478, 557, 0, 481, 482, 0, 480, 0,
	483, 484, 485, 486, 487, 488, 313, 489, 0, 490,
	558, 559, 560, 561, 0, 497, 0, 491, 492, 562,
	493, 563, 0, 494, 495, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 504, 505, 503, 506, 0, 507,
	0, 0, 508, 509, 510, 564, 565, 566, 0, 512,
	511, 567, 1403, 0, 238, 0, 513, 514, 568, 515,
	516, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 518, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 519, 520, 0,
	521, 259, 522, 0, 260, 261, 262, 263, 264, 0,
	0, 0, 265, 523, 524, 525, 0, 266, 267, 526,
	0, 0, 0, 268, 269, 270, 271, 272, 273, 274,
	0, 0, 276, 277, 278, 275, 0, 279, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 289, 0, 290,
	527, 528, 0, 294, 291, 292, 0, 295, 293, 0,
	296, 297, 0, 0, 298, 299, 300, 0, 301, 302,
	0, 303, 304, 305, 0, 306, 307, 529, 308, 309,
	310, 312, 314, 311, 315, 316, 317, 318, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 321,
	532, 0, 0, 0, 322, 0, 323, 0, 0, 0,
	324, 325, 533, 534, 326, 327, 0, 328, 535, 0,
	536, 329, 0, 330, 331, 332, 333, 334, 1402, 538,
	539, 390, 0, 335, 336, 0, 337, 338, 339, 340,
	0, 0, 0, 0, 341, 342, 344, 0, 0, 343,
	540, 541, 0, 542, 0, 345, 0, 543, 0, 346,
	347, 348, 0, 349, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 0, 356, 358, 357, 0, 359, 544,
	0, 360, 361, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 367, 368, 0, 369, 370, 372, 374, 371,
	373, 378, 375, 376, 377, 380, 0, 379, 0, 381,
	382, 383, 386, 387, 385, 0, 384, 0, 0, 0,
	388, 0, 545, 389, 546, 391, 392, 0, 0, 393,
	0, 0, 0, 395, 396, 397, 0, 0, 398, 399,
	547, 0, 400, 0, 548, 401, 402, 394, 403, 404,
	405, 406, 407, 408, 409, 410, 0, 411, 412, 549,
	550, 551, 413, 552, 414, 415, 0, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 553, 425, 424, 426,
	0, 0, 0, 0, 0, 0, 427, 0, 429, 430,
	431, 428, 432, 433, 434, 435, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 554, 443, 0, 444, 445,
	451, 452, 446, 447, 453, 454, 455, 456, 457, 0,
	459, 460, 458, 461, 462, 463, 0, 464, 448, 449,
	465, 466, 0, 467, 468, 555, 0, 469, 0, 470,
	471, 472, 473, 450, 474, 479, 556, 475, 476, 477,
	478, 557, 0, 481, 482, 0, 480, 0, 483, 484,
	485, 486, 487, 488, 313, 489, 0, 490, 558, 559,
	560, 561, 0, 497, 0, 491, 492, 562, 493, 563,
	0, 494, 495, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 504, 505, 503, 506, 0, 507, 0, 0,
	508, 509, 510, 564, 565, 566, 0, 512, 511, 567,
	1353, 0, 238, 0, 513, 514, 568, 515, 516, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 0, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 1352, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 0, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 0, 381, 382, 383,
	386, 387, 385, 0, 384, 0, 0, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 0, 512, 511, 567, 1339, 0,
	238, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 525, 0, 266, 267, 526, 0, 0, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 0, 324, 325, 533, 534,
	326, 327, 0, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 1338, 538, 539, 390, 0, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 0,
	341, 342, 344, 0, 0, 343, 540, 541, 0, 542,
	0, 345, 0, 543, 0, 346, 347, 348, 0, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	356, 358, 357, 0, 359, 544, 0, 360, 361, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 0, 381, 382, 383, 386, 387,
	385, 0, 384, 0, 0, 0, 388, 0, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 0, 400, 0,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 0, 459, 460, 458, 461,
	462, 463, 0, 464, 448, 449, 465, 466, 0, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 0, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 0, 512, 511, 567, 1334, 0, 238, 0,
	513, 514, 568, 515, 516, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 519, 520, 0, 521, 259, 522, 0, 260, 261,
	262, 263, 264, 0, 0, 0, 265, 523, 524, 525,
	0, 266, 267, 526, 0, 0, 0, 268, 269, 270,
	271, 272, 273, 274, 0, 0, 276, 277, 278, 275,
	0, 279, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 289, 0, 290, 527, 528, 0, 294, 291, 292,
	0, 295, 293, 0, 296, 297, 0, 0, 298, 299,
	300, 0, 301, 302, 0, 303, 304, 305, 0, 306,
	307, 529, 308, 309, 310, 312, 314, 311, 315, 316,
	317, 318, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 321, 532, 0, 0, 0, 322, 0,
	323, 0, 0, 0, 324, 325, 533, 534, 326, 327,
	0, 328, 535, 0, 536, 329, 0, 330, 331, 332,
	333, 334, 537, 538, 539, 390, 0, 335, 336, 0,
	337, 338, 339, 340, 0, 0, 0, 0, 341, 342,
	344, 0, 0, 343, 540, 541, 0, 542, 0, 345,
	0, 543, 0, 346, 347, 348, 0, 349, 0, 0,
	0, 350, 351, 352, 353, 354, 355, 0, 356, 358,
	357, 0, 359, 544, 0, 360, 361, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 367, 368, 0, 369,
	370, 372, 374, 371, 373, 378, 375, 376, 377, 380,
	0, 379, 0, 381, 382, 383, 386, 387, 385, 0,
	384, 0, 0, 0, 388, 0, 545, 389, 546, 391,
	392, 0, 0, 393, 0, 0, 0, 395, 396, 397,
	0, 0, 398, 399, 547, 0, 400, 0, 548, 401,
	402, 394, 403, 404, 405, 406, 407, 408, 409, 410,
	0, 411, 412, 549, 550, 551, 413, 552, 414, 415,
	0, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	553, 425, 424, 426, 0, 0, 0, 0, 0, 0,
	427, 0, 429, 430, 431, 428, 432, 433, 434, 435,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 554,
	443, 0, 444, 445, 451, 452, 446, 447, 453, 454,
	455, 456, 457, 0, 459, 460, 458, 461, 462, 463,
	0, 464, 448, 449, 465, 466, 0, 467, 468, 555,
	0, 469, 0, 470, 471, 472, 473, 450, 474, 479,
	556, 475, 476, 477, 478, 557, 0, 481, 482, 0,
	480, 0, 483, 484, 485, 486, 487, 488, 313, 489,
	0, 490, 558, 559, 560, 561, 0, 497, 0, 491,
	492, 562, 493, 563, 0, 494, 495, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 504, 505, 503, 506,
	0, 507, 0, 0, 508, 509, 510, 564, 565, 566,
	0, 512, 511, 567, 1266, 0, 238, 0, 513, 514,
	568, 515, 516, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 518, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 519,
	520, 0, 521, 259, 522, 0, 260, 261, 262, 263,
	264, 0, 0, 0, 265, 523, 524, 525, 0, 266,
	267, 526, 0, 0, 0, 268, 269, 270, 271, 272,
	273, 274, 0, 0, 276, 277, 278, 275, 0, 279,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 289,
	0, 290, 527, 528, 0, 294, 291, 292, 0, 295,
	293, 0, 296, 297, 0, 0, 298, 299, 300, 0,
	301, 302, 0, 303, 304, 305, 0, 306, 307, 529,
	308, 309, 310, 312, 314, 311, 315, 316, 317, 318,
	530, 531, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 321, 532, 0, 0, 0, 322, 0, 323, 0,
	0, 0, 324, 325, 533, 534, 326, 327, 0, 328,
	535, 0, 536, 329, 0, 330, 331, 332, 333, 334,
	537, 538, 539, 390, 0, 335, 336, 0, 337, 338,
	339, 340, 0, 0, 0, 0, 341, 342, 344, 0,
	0, 343, 540, 541, 0, 542, 0, 345, 0, 543,
	0, 346, 347, 348, 0, 349, 0, 0, 0, 350,
	351, 352, 353, 354, 355, 0, 356, 358, 357, 0,
	359, 544, 0, 360, 361, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 367, 368, 0, 369, 370, 372,
	374, 371, 373, 378, 375, 376, 377, 380, 0, 379,
	0, 381, 382, 383, 386, 387, 385, 0, 384, 0,
	0, 0, 388, 0, 545, 389, 546, 391, 392, 0,
	0, 393, 0, 0, 0, 395, 396, 397, 0, 0,
	398, 399, 547, 0, 400, 0, 548, 401, 402, 394,
	403, 404, 405, 406, 407, 408, 409, 410, 0, 411,
	412, 549, 550, 551, 413, 552, 414, 415, 0, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 553, 425,
	424, 426, 0, 0, 0, 0, 0, 0, 427, 0,
	429, 430, 431, 428, 432, 433, 434, 435, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 554, 443, 0,
	444, 445, 451, 452, 446, 447, 453, 454, 455, 456,
	457, 0, 459, 460, 458, 461, 462, 463, 0, 464,
	448, 449, 465, 466, 0, 467, 468, 555, 0, 469,
	0, 470, 471, 472, 473, 450, 474, 479, 556, 475,
	476, 477, 478, 557, 0, 481, 482, 0, 480, 0,
	483, 484, 485, 486, 487, 488, 313, 489, 0, 490,
	558, 559, 560, 561, 0, 497, 0, 491, 492, 562,
	493, 563, 0, 494, 495, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 504, 505, 503, 506, 0, 507,
	0, 0, 508, 509, 510, 564, 565, 566, 0, 512,
	511, 567, 1250, 0, 238, 0, 513, 514, 568, 515,
	516, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 518, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 519, 520, 0,
	521, 259, 522, 0, 260, 261, 262, 263, 264, 0,
	0, 0, 265, 523, 524, 525, 0, 266, 267, 526,
	0, 0, 0, 268, 269, 270, 271, 272, 273, 274,
	0, 0, 276, 277, 278, 275, 0, 279, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 289, 0, 290,
	527, 528, 0, 294, 291, 292, 0, 295, 293, 0,
	296, 297, 0, 0, 298, 299, 300, 0, 301, 302,
	0, 303, 304, 305, 0, 306, 307, 529, 308, 309,
	310, 312, 314, 311, 315, 316, 317, 318, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 321,
	532, 0, 0, 0, 322, 0, 323, 0, 0, 0,
	324, 325, 533, 534, 326, 327, 0, 328, 535, 0,
	536, 329, 0, 330, 331, 332, 333, 334, 537, 538,
	539, 390, 0, 335, 336, 0, 337, 338, 339, 340,
	0, 0, 0, 0, 341, 342, 344, 0, 0, 343,
	540, 541, 0, 542, 0, 345, 0, 543, 0, 346,
	347, 348, 0, 349, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 0, 356, 358, 357, 0, 359, 544,
	0, 360, 361, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 367, 368, 0, 369, 370, 372, 374, 371,
	373, 378, 375, 376, 377, 380, 0, 379, 0, 381,
	382, 383, 386, 387, 385, 0, 384, 0, 0, 0,
	388, 0, 545, 389, 546, 391, 392, 0, 0, 393,
	0, 0, 0, 395, 396, 397, 0, 0, 398, 399,
	547, 0, 400, 0, 548, 401, 402, 394, 403, 404,
	405, 406, 407, 408, 409, 410, 0, 411, 412, 549,
	550, 551, 413, 552, 414, 415, 0, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 553, 425, 424, 426,
	0, 0, 0, 0, 0, 0, 427, 0, 429, 430,
	431, 428, 432, 433, 434, 435, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 554, 443, 0, 444, 445,
	451, 452, 446, 447, 453, 454, 455, 456, 457, 0,
	459, 460, 458, 461, 462, 463, 0, 464, 448, 449,
	465, 466, 0, 467, 468, 555, 0, 469, 0, 470,
	471, 472, 473, 450, 474, 479, 556, 475, 476, 477,
	478, 557, 0, 481, 482, 0, 480, 0, 483, 484,
	485, 486, 487, 488, 313, 489, 0, 490, 558, 559,
	560, 561, 0, 497, 0, 491, 492, 562, 493, 563,
	0, 494, 495, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 504, 505, 503, 506, 0, 507, 0, 0,
	508, 509, 510, 564, 565, 566, 0, 512, 511, 567,
	620, 0, 238, 0, 513, 514, 568, 515, 516, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 252, 253,
	1122, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 1120, 0, 266, 267, 526, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 0, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 537, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 0, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 621, 0, 381, 382, 383,
	386, 387, 385, 0, 384, 0, 0, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 617, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 1123, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 616, 559, 560, 561,
	0, 497, 0, 491, 1121, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 238, 512, 511, 567, 0, 0,
	0, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 1104, 250, 251,
	0, 0, 0, 0, 0, 518, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 519, 520, 0,
	521, 259, 522, 0, 260, 261, 262, 263, 264, 0,
	0, 0, 265, 523, 524, 525, 0, 266, 267, 526,
	0, 0, 0, 268, 269, 270, 271, 272, 273, 274,
	0, 0, 276, 277, 278, 275, 0, 279, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 289, 0, 290,
	527, 528, 0, 294, 291, 292, 0, 295, 293, 0,
	296, 297, 0, 0, 298, 299, 300, 0, 301, 302,
	0, 303, 304, 305, 0, 306, 307, 529, 308, 309,
	310, 312, 314, 311, 315, 316, 317, 318, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 321,
	532, 0, 0, 0, 322, 0, 323, 0, 0, 0,
	324, 325, 533, 534, 326, 327, 0, 328, 535, 0,
	536, 329, 0, 330, 331, 332, 333, 334, 537, 538,
	539, 390, 0, 335, 336, 0, 337, 338, 339, 340,
	0, 0, 0, 0, 341, 342, 344, 0, 0, 343,
	540, 541, 0, 542, 0, 345, 0, 543, 0, 346,
	347, 348, 0, 349, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 0, 356, 358, 357, 0, 359, 544,
	0, 360, 361, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 367, 368, 0, 369, 370, 372, 374, 371,
	373, 378, 375, 376, 377, 380, 0, 379, 0, 381,
	382, 383, 386, 387, 385, 0, 384, 0, 0, 0,
	388, 0, 545, 389, 546, 391, 392, 0, 0, 393,
	0, 0, 0, 395, 396, 397, 0, 0, 398, 399,
	547, 0, 400, 0, 548, 401, 402, 394, 403, 404,
	405, 406, 407, 408, 409, 410, 0, 411, 412, 549,
	550, 551, 413, 552, 414, 415, 0, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 553, 425, 424, 426,
	0, 0, 0, 0, 0, 0, 427, 0, 429, 430,
	431, 428, 432, 433, 434, 435, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 554, 443, 0, 444, 445,
	451, 452, 446, 447, 453, 454, 455, 456, 457, 0,
	459, 460, 458, 461, 462, 463, 0, 464, 448, 449,
	465, 466, 0, 467, 468, 555, 0, 469, 0, 470,
	471, 472, 473, 450, 474, 479, 556, 475, 476, 477,
	478, 557, 0, 481, 482, 0, 480, 0, 483, 484,
	485, 486, 487, 488, 313, 489, 0, 490, 558, 559,
	560, 561, 0, 497, 0, 491, 492, 562, 493, 563,
	0, 494, 495, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 504, 505, 503, 506, 0, 507, 0, 0,
	508, 509, 510, 564, 565, 566, 238, 512, 511, 567,
	0, 0, 0, 0, 513, 514, 568, 515, 516, 517,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 626,
	250, 251, 0, 0, 0, 0, 0, 518, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 519,
	520, 0, 521, 259, 522, 0, 260, 261, 262, 263,
	264, 0, 0, 0, 265, 523, 524, 525, 0, 266,
	267, 526, 0, 0, 0, 268, 269, 270, 271, 272,
	273, 274, 0, 0, 276, 277, 278, 275, 0, 279,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 289,
	0, 290, 527, 528, 0, 294, 291, 292, 0, 295,
	293, 0, 296, 297, 0, 0, 298, 299, 300, 0,
	301, 302, 0, 303, 304, 305, 0, 306, 307, 529,
	308, 309, 310, 312, 314, 311, 315, 316, 317, 318,
	530, 531, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 321, 532, 0, 0, 0, 322, 0, 323, 0,
	0, 0, 324, 325, 533, 534, 326, 327, 0, 328,
	535, 0, 536, 329, 0, 330, 331, 332, 333, 334,
	537, 538, 539, 390, 0, 335, 336, 0, 337, 338,
	339, 340, 0, 0, 0, 0, 341, 342, 344, 0,
	0, 343, 540, 541, 0, 542, 0, 345, 0, 543,
	0, 346, 347, 348, 0, 349, 0, 0, 0, 350,
	351, 352, 353, 354, 355, 0, 356, 358, 357, 0,
	359, 544, 0, 360, 361, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 367, 368, 0, 369, 370, 372,
	374, 371, 373, 378, 375, 376, 377, 380, 0, 379,
	0, 381, 382, 383, 386, 387, 385, 0, 384, 0,
	0, 0, 388, 0, 545, 389, 546, 391, 392, 0,
	0, 393, 0, 0, 0, 395, 396, 397, 0, 0,
	398, 399, 547, 0, 400, 0, 548, 401, 402, 394,
	403, 404, 405, 406, 407, 408, 409, 410, 0, 411,
	412, 549, 550, 551, 413, 552, 414, 415, 0, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 553, 425,
	424, 426, 0, 0, 0, 0, 0, 0, 427, 0,
	429, 430, 431, 428, 432, 433, 434, 435, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 554, 443, 0,
	444, 445, 451, 452, 446, 447, 453, 454, 455, 456,
	457, 0, 459, 460, 458, 461, 462, 463, 0, 464,
	448, 449, 465, 466, 0, 467, 468, 555, 0, 469,
	0, 470, 471, 472, 473, 450, 474, 479, 556, 475,
	476, 477, 478, 557, 0, 481, 482, 0, 480, 0,
	483, 484, 485, 486, 487, 488, 313, 489, 0, 490,
	558, 559, 560, 561, 0, 497, 0, 491, 492, 562,
	493, 563, 0, 494, 495, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 504, 505, 503, 506, 0, 507,
	0, 0, 508, 509, 510, 564, 565, 566, 0, 512,
	511, 567, 620, 0, 238, 0, 513, 514, 568, 515,
	516, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 518, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 519, 520, 0,
	521, 259, 522, 0, 260, 261, 262, 263, 264, 0,
	0, 0, 265, 523, 524, 525, 0, 266, 610, 526,
	0, 0, 0, 268, 269, 270, 271, 272, 273, 274,
	0, 0, 276, 277, 278, 275, 0, 608, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 289, 0, 290,
	527, 528, 0, 294, 291, 292, 0, 295, 293, 0,
	296, 297, 0, 0, 298, 299, 300, 0, 301, 302,
	0, 303, 304, 305, 0, 306, 307, 529, 308, 309,
	310, 312, 314, 311, 315, 316, 317, 318, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 321,
	532, 0, 0, 0, 322, 0, 323, 0, 0, 0,
	324, 325, 533, 534, 326, 327, 0, 328, 535, 0,
	536, 329, 0, 330, 331, 332, 333, 334, 537, 538,
	539, 390, 0, 335, 336, 0, 337, 338, 339, 340,
	0, 0, 0, 0, 341, 342, 344, 0, 0, 343,
	540, 541, 0, 542, 0, 345, 0, 543, 0, 346,
	347, 348, 0, 349, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 0, 356, 358, 357, 0, 359, 544,
	0, 360, 361, 0, 0, 362, 363, 609, 0, 0,
	365, 366, 367, 368, 0, 369, 370, 372, 374, 371,
	373, 378, 375, 376, 377, 380, 0, 621, 0, 381,
	382, 383, 386, 387, 385, 0, 384, 0, 0, 0,
	388, 0, 545, 389, 546, 391, 392, 0, 0, 393,
	0, 0, 0, 395, 396, 397, 0, 0, 398, 399,
	547, 0, 400, 0, 548, 401, 402, 394, 403, 404,
	405, 406, 407, 408, 409, 410, 0, 411, 412, 549,
	550, 551, 413, 552, 414, 415, 0, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 553, 425, 424, 426,
	0, 0, 0, 0, 0, 0, 427, 0, 429, 430,
	431, 428, 432, 433, 434, 435, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 611, 443, 0, 444, 445,
	451, 452, 446, 447, 617, 454, 455, 456, 457, 0,
	459, 460, 458, 461, 612, 463, 0, 464, 448, 449,
	465, 466, 0, 467, 468, 555, 0, 469, 0, 470,
	471, 472, 473, 450, 474, 479, 556, 475, 476, 477,
	478, 557, 0, 481, 482, 0, 480, 0, 483, 484,
	485, 486, 487, 488, 313, 489, 0, 490, 616, 559,
	560, 561, 0, 497, 0, 491, 614, 562, 493, 563,
	0, 494, 495, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 504, 505, 503, 506, 0, 507, 0, 0,
	508, 509, 510, 564, 565, 566, 0, 512, 511, 567,
	604, 0, 238, 0, 513, 514, 568, 515, 516, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 0, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 537, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 0, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 0, 381, 382, 383,
	386, 387, 385, 0, 384, 0, 0, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 605, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 0, 512, 511, 567, 602, 0,
	238, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 525, 0, 266, 267, 526, 0, 0, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 0, 324, 325, 533, 534,
	326, 327, 0, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 537, 538, 539, 390, 0, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 0,
	341, 342, 344, 0, 0, 343, 540, 541, 0, 542,
	0, 345, 0, 543, 0, 346, 347, 348, 0, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	356, 358, 357, 0, 359, 544, 0, 360, 361, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 0, 381, 382, 383, 386, 387,
	385, 0, 384, 0, 0, 0, 388, 0, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 0, 400, 0,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 0, 459, 460, 458, 461,
	462, 463, 0, 464, 448, 449, 465, 466, 0, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 0, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 0, 512, 511, 567, 596, 0, 238, 0,
	513, 514, 568, 515, 516, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 519, 520, 0, 521, 259, 522, 0, 260, 261,
	262, 263, 264, 0, 0, 0, 265, 523, 524, 525,
	0, 266, 267, 526, 0, 0, 0, 268, 269, 270,
	271, 272, 273, 274, 0, 0, 276, 277, 278, 275,
	0, 279, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 289, 0, 290, 527, 528, 0, 294, 291, 292,
	0, 295, 293, 0, 296, 297, 0, 0, 298, 299,
	300, 0, 301, 302, 0, 303, 304, 305, 0, 306,
	307, 529, 308, 309, 310, 312, 314, 311, 315, 316,
	317, 318, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 321, 532, 0, 0, 0, 322, 0,
	323, 0, 0, 0, 324, 325, 533, 534, 326, 327,
	0, 328, 535, 0, 536, 329, 0, 330, 331, 332,
	333, 334, 537, 538, 539, 390, 0, 335, 336, 0,
	337, 338, 339, 340, 0, 0, 0, 0, 341, 342,
	344, 0, 0, 343, 540, 541, 0, 542, 0, 345,
	0, 543, 0, 346, 347, 348, 0, 349, 0, 0,
	0, 350, 351, 352, 353, 354, 355, 0, 356, 358,
	357, 0, 359, 544, 0, 360, 361, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 367, 368, 0, 369,
	370, 372, 374, 371, 373, 378, 375, 376, 377, 380,
	0, 379, 0, 381, 382, 383, 386, 387, 385, 0,
	384, 0, 0, 0, 388, 0, 545, 389, 546, 391,
	392, 0, 0, 393, 0, 0, 0, 395, 396, 397,
	0, 0, 398, 399, 547, 0, 400, 0, 548, 401,
	402, 394, 403, 404, 405, 406, 407, 408, 409, 410,
	0, 411, 412, 549, 550, 551, 413, 552, 414, 415,
	0, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	553, 425, 424, 426, 0, 0, 0, 0, 0, 0,
	427, 0, 429, 430, 431, 428, 432, 433, 434, 435,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 554,
	443, 0, 444, 445, 451, 452, 446, 447, 453, 454,
	455, 456, 457, 0, 459, 460, 458, 461, 462, 463,
	0, 464, 448, 449, 465, 466, 0, 467, 468, 555,
	0, 469, 0, 470, 471, 472, 473, 450, 474, 479,
	556, 475, 476, 477, 478, 557, 0, 481, 482, 0,
	480, 0, 483, 484, 485, 486, 487, 488, 313, 489,
	0, 490, 558, 559, 560, 561, 0, 497, 0, 491,
	492, 562, 493, 563, 0, 494, 495, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 504, 505, 503, 506,
	0, 507, 0, 0, 508, 509, 510, 564, 565, 566,
	0, 512, 511, 567, 574, 0, 238, 0, 513, 514,
	568, 515, 516, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 518, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 519,
	520, 0, 521, 259, 522, 0, 260, 261, 262, 263,
	264, 0, 0, 0, 265, 523, 524, 525, 0, 266,
	267, 526, 0, 0, 0, 268, 269, 270, 271, 272,
	273, 274, 0, 0, 276, 277, 278, 275, 0, 279,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 289,
	0, 290, 527, 528, 0, 294, 291, 292, 0, 295,
	293, 0, 296, 297, 0, 0, 298, 299, 300, 0,
	301, 302, 0, 303, 304, 305, 0, 306, 307, 529,
	308, 309, 310, 312, 314, 311, 315, 316, 317, 318,
	530, 531, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 321, 532, 0, 0, 0, 322, 0, 323, 0,
	0, 0, 324, 325, 533, 534, 326, 327, 0, 328,
	535, 0, 536, 329, 0, 330, 331, 332, 333, 334,
	537, 538, 539, 390, 0, 335, 336, 0, 337, 338,
	339, 340, 0, 0, 0, 0, 341, 342, 344, 0,
	0, 343, 540, 541, 0, 542, 0, 345, 0, 543,
	0, 346, 347, 348, 0, 349, 0, 0, 0, 350,
	351, 352, 353, 354, 355, 0, 356, 358, 357, 0,
	359, 544, 0, 360, 361, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 367, 368, 0, 369, 370, 372,
	374, 371, 373, 378, 375, 376, 377, 380, 0, 379,
	0, 381, 382, 383, 386, 387, 385, 0, 384, 0,
	0, 0, 388, 0, 545, 389, 546, 391, 392, 0,
	0, 393, 0, 0, 0, 395, 396, 397, 0, 0,
	398, 399, 547, 0, 400, 0, 548, 401, 402, 394,
	403, 404, 405, 406, 407, 408, 409, 410, 0, 411,
	412, 549, 550, 551, 413, 552, 414, 415, 0, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 553, 425,
	424, 426, 0, 0, 0, 0, 0, 0, 427, 0,
	429, 430, 431, 428, 432, 433, 434, 435, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 554, 443, 0,
	444, 445, 451, 452, 446, 447, 453, 454, 455, 456,
	457, 0, 459, 460, 458, 461, 462, 463, 0, 464,
	448, 449, 465, 466, 0, 467, 468, 555, 0, 469,
	0, 470, 471, 472, 473, 450, 474, 479, 556, 475,
	476, 477, 478, 557, 0, 481, 482, 0, 480, 0,
	483, 484, 485, 486, 487, 488, 313, 489, 0, 490,
	558, 559, 560, 561, 0, 497, 0, 491, 492, 562,
	493, 563, 0, 494, 495, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 504, 505, 503, 506, 0, 507,
	0, 0, 508, 509, 510, 564, 565, 566, 238, 512,
	511, 567, 0, 0, 0, 0, 513, 514, 568, 515,
	516, 517, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 519, 520, 0, 521, 259, 522, 0, 260, 261,
	262, 263, 264, 0, 0, 0, 265, 523, 524, 525,
	0, 266, 267, 526, 0, 0, 0, 268, 269, 270,
	271, 272, 273, 274, 0, 0, 276, 277, 278, 275,
	0, 279, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 289, 0, 290, 527, 528, 0, 294, 291, 292,
	0, 295, 293, 0, 296, 297, 0, 0, 298, 299,
	300, 0, 301, 302, 0, 303, 304, 305, 0, 306,
	307, 529, 308, 309, 310, 312, 314, 311, 315, 316,
	317, 318, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 321, 532, 0, 0, 0, 322, 0,
	323, 0, 0, 0, 324, 325, 533, 534, 326, 327,
	0, 328, 535, 0, 536, 329, 0, 330, 331, 332,
	333, 334, 537, 538, 539, 390, 0, 335, 336, 0,
	337, 338, 339, 340, 0, 0, 0, 0, 341, 342,
	344, 0, 0, 343, 540, 541, 0, 542, 0, 345,
	0, 543, 0, 346, 347, 348, 0, 349, 0, 0,
	0, 350, 351, 352, 353, 354, 355, 0, 356, 358,
	357, 0, 359, 544, 0, 360, 361, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 367, 368, 0, 369,
	370, 372, 374, 371, 373, 378, 375, 376, 377, 380,
	0, 379, 0, 381, 382, 383, 386, 387, 385, 0,
	384, 0, 0, 0, 388, 0, 545, 389, 546, 391,
	392, 0, 0, 393, 0, 0, 0, 395, 396, 397,
	0, 0, 398, 399, 547, 0, 400, 0, 548, 401,
	402, 394, 403, 404, 405, 406, 407, 408, 409, 410,
	0, 411, 412, 549, 550, 551, 413, 552, 414, 415,
	0, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	553, 425, 424, 426, 0, 0, 0, 0, 0, 0,
	427, 0, 429, 430, 431, 428, 432, 433, 434, 435,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 554,
	443, 0, 444, 445, 451, 452, 446, 447, 453, 454,
	455, 456, 457, 0, 459, 460, 458, 461, 462, 463,
	0, 464, 448, 449, 465, 466, 0, 467, 468, 555,
	0, 469, 0, 470, 471, 472, 473, 450, 474, 479,
	556, 475, 476, 477, 478, 557, 0, 481, 482, 0,
	480, 0, 483, 484, 485, 486, 487, 488, 313, 489,
	0, 490, 558, 559, 560, 561, 0, 497, 0, 491,
	492, 562, 493, 563, 0, 494, 495, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 504, 505, 503, 506,
	0, 507, 0, 0, 508, 509, 510, 564, 565, 566,
	238, 512, 511, 567, 0, 0, 0, 0, 513, 514,
	568, 515, 516, 517, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 525, 0, 266, 267, 526, 0, 0, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 0, 324, 325, 533, 534,
	326, 327, 0, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 3060, 538, 539, 390, 0, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 0,
	341, 342, 344, 0, 0, 343, 540, 541, 0, 542,
	0, 345, 0, 543, 0, 346, 347, 348, 0, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	356, 358, 357, 0, 359, 544, 0, 360, 361, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 0, 381, 382, 383, 386, 387,
	385, 0, 384, 0, 0, 0, 388, 0, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 0, 400, 0,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 0, 459, 460, 458, 461,
	462, 463, 0, 464, 448, 449, 465, 466, 0, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 0, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 238, 512, 511, 567, 0, 0, 0, 0,
	513, 514, 568, 515, 516, 517, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 0, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 3016, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 0, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 0, 381, 382, 383,
	386, 387, 385, 0, 384, 0, 0, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 238, 512, 511, 567, 0, 0,
	0, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 518, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 519, 520, 0,
	521, 259, 522, 0, 260, 261, 262, 263, 264, 0,
	0, 0, 265, 523, 524, 525, 0, 266, 267, 526,
	0, 0, 0, 268, 269, 270, 271, 272, 273, 274,
	0, 0, 276, 277, 278, 275, 0, 279, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 289, 0, 290,
	527, 528, 0, 294, 291, 292, 0, 295, 293, 0,
	296, 297, 0, 0, 298, 299, 300, 0, 301, 302,
	0, 303, 304, 305, 0, 306, 307, 529, 308, 309,
	310, 312, 314, 311, 315, 316, 317, 318, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 321,
	532, 0, 0, 0, 322, 0, 323, 0, 0, 0,
	324, 325, 533, 534, 326, 327, 0, 328, 535, 0,
	536, 329, 0, 330, 331, 332, 333, 334, 2957, 538,
	539, 390, 0, 335, 336, 0, 337, 338, 339, 340,
	0, 0, 0, 0, 341, 342, 344, 0, 0, 343,
	540, 541, 0, 542, 0, 345, 0, 543, 0, 346,
	347, 348, 0, 349, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 0, 356, 358, 357, 0, 359, 544,
	0, 360, 361, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 367, 368, 0, 369, 370, 372, 374, 371,
	373, 378, 375, 376, 377, 380, 0, 379, 0, 381,
	382, 383, 386, 387, 385, 0, 384, 0, 0, 0,
	388, 0, 545, 389, 546, 391, 392, 0, 0, 393,
	0, 0, 0, 395, 396, 397, 0, 0, 398, 399,
	547, 0, 400, 0, 548, 401, 402, 394, 403, 404,
	405, 406, 407, 408, 409, 410, 0, 411, 412, 549,
	550, 551, 413, 552, 414, 415, 0, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 553, 425, 424, 426,
	0, 0, 0, 0, 0, 0, 427, 0, 429, 430,
	431, 428, 432, 433, 434, 435, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 554, 443, 0, 444, 445,
	451, 452, 446, 447, 453, 454, 455, 456, 457, 0,
	459, 460, 458, 461, 462, 463, 0, 464, 448, 449,
	465, 466, 0, 467, 468, 555, 0, 469, 0, 470,
	471, 472, 473, 450, 474, 479, 556, 475, 476, 477,
	478, 557, 0, 481, 482, 0, 480, 0, 483, 484,
	485, 486, 487, 488, 313, 489, 0, 490, 558, 559,
	560, 561, 0, 497, 0, 491, 492, 562, 493, 563,
	0, 494, 495, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 504, 505, 503, 506, 0, 507, 0, 0,
	508, 509, 510, 564, 565, 566, 238, 512, 511, 567,
	0, 0, 0, 0, 513, 514, 568, 515, 516, 517,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 518, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 519,
	520, 0, 521, 259, 522, 0, 260, 261, 262, 263,
	264, 0, 0, 0, 265, 523, 524, 525, 0, 266,
	267, 526, 0, 0, 0, 268, 269, 270, 271, 272,
	273, 274, 0, 0, 276, 277, 278, 275, 0, 279,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 289,
	0, 290, 527, 528, 0, 294, 291, 292, 0, 295,
	293, 0, 296, 297, 0, 0, 298, 299, 300, 0,
	301, 302, 0, 303, 304, 305, 0, 306, 307, 529,
	308, 309, 310, 312, 314, 311, 315, 316, 317, 318,
	530, 531, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 321, 532, 0, 0, 0, 322, 0, 323, 0,
	0, 0, 324, 325, 533, 534, 326, 327, 0, 328,
	535, 0, 536, 329, 0, 330, 331, 332, 333, 334,
	2955, 538, 539, 390, 0, 335, 336, 0, 337, 338,
	339, 340, 0, 0, 0, 0, 341, 342, 344, 0,
	0, 343, 540, 541, 0, 542, 0, 345, 0, 543,
	0, 346, 347, 348, 0, 349, 0, 0, 0, 350,
	351, 352, 353, 354, 355, 0, 356, 358, 357, 0,
	359, 544, 0, 360, 361, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 367, 368, 0, 369, 370, 372,
	374, 371, 373, 378, 375, 376, 377, 380, 0, 379,
	0, 381, 382, 383, 386, 387, 385, 0, 384, 0,
	0, 0, 388, 0, 545, 389, 546, 391, 392, 0,
	0, 393, 0, 0, 0, 395, 396, 397, 0, 0,
	398, 399, 547, 0, 400, 0, 548, 401, 402, 394,
	403, 404, 405, 406, 407, 408, 409, 410, 0, 411,
	412, 549, 550, 551, 413, 552, 414, 415, 0, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 553, 425,
	424, 426, 0, 0, 0, 0, 0, 0, 427, 0,
	429, 430, 431, 428, 432, 433, 434, 435, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 554, 443, 0,
	444, 445, 451, 452, 446, 447, 453, 454, 455, 456,
	457, 0, 459, 460, 458, 461, 462, 463, 0, 464,
	448, 449, 465, 466, 0, 467, 468, 555, 0, 469,
	0, 470, 471, 472, 473, 450, 474, 479, 556, 475,
	476, 477, 478, 557, 0, 481, 482, 0, 480, 0,
	483, 484, 485, 486, 487, 488, 313, 489, 0, 490,
	558, 559, 560, 561, 0, 497, 0, 491, 492, 562,
	493, 563, 0, 494, 495, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 504, 505, 503, 506, 0, 507,
	0, 0, 508, 509, 510, 564, 565, 566, 238, 512,
	511, 567, 0, 0, 0, 0, 513, 514, 568, 515,
	516, 517, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 519, 520, 0, 521, 259, 522, 0, 260, 261,
	262, 263, 264, 0, 0, 0, 265, 523, 524, 525,
	0, 266, 267, 526, 0, 0, 0, 268, 269, 270,
	271, 272, 273, 274, 0, 0, 276, 277, 278, 275,
	0, 279, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 289, 0, 290, 527, 528, 0, 294, 291, 292,
	0, 295, 293, 0, 296, 297, 0, 0, 298, 299,
	300, 0, 301, 302, 0, 303, 304, 305, 0, 306,
	307, 529, 308, 309, 310, 312, 314, 311, 315, 316,
	317, 318, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 321, 532, 0, 0, 0, 322, 0,
	323, 0, 0, 0, 324, 325, 533, 534, 326, 327,
	0, 328, 535, 0, 536, 329, 0, 330, 331, 332,
	333, 334, 2941, 538, 539, 390, 0, 335, 336, 0,
	337, 338, 339, 340, 0, 0, 0, 0, 341, 342,
	344, 0, 0, 343, 540, 541, 0, 542, 0, 345,
	0, 543, 0, 346, 347, 348, 0, 349, 0, 0,
	0, 350, 351, 352, 353, 354, 355, 0, 356, 358,
	357, 0, 359, 544, 0, 360, 361, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 367, 368, 0, 369,
	370, 372, 374, 371, 373, 378, 375, 376, 377, 380,
	0, 379, 0, 381, 382, 383, 386, 387, 385, 0,
	384, 0, 0, 0, 388, 0, 545, 389, 546, 391,
	392, 0, 0, 393, 0, 0, 0, 395, 396, 397,
	0, 0, 398, 399, 547, 0, 400, 0, 548, 401,
	402, 394, 403, 404, 405, 406, 407, 408, 409, 410,
	0, 411, 412, 549, 550, 551, 413, 552, 414, 415,
	0, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	553, 425, 424, 426, 0, 0, 0, 0, 0, 0,
	427, 0, 429, 430, 431, 428, 432, 433, 434, 435,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 554,
	443, 0, 444, 445, 451, 452, 446, 447, 453, 454,
	455, 456, 457, 0, 459, 460, 458, 461, 462, 463,
	0, 464, 448, 449, 465, 466, 0, 467, 468, 555,
	0, 469, 0, 470, 471, 472, 473, 450, 474, 479,
	556, 475, 476, 477, 478, 557, 0, 481, 482, 0,
	480, 0, 483, 484, 485, 486, 487, 488, 313, 489,
	0, 490, 558, 559, 560, 561, 0, 497, 0, 491,
	492, 562, 493, 563, 0, 494, 495, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 504, 505, 503, 506,
	0, 507, 0, 0, 508, 509, 510, 564, 565, 566,
	238, 512, 511, 567, 0, 0, 0, 0, 513, 514,
	568, 515, 516, 517, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 525, 0, 266, 267, 526, 0, 0, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 0, 324, 325, 533, 534,
	326, 327, 0, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 2580, 538, 539, 390, 0, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 0,
	341, 342, 344, 0, 0, 343, 540, 541, 0, 542,
	0, 345, 0, 543, 0, 346, 347, 348, 0, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	356, 358, 357, 0, 359, 544, 0, 360, 361, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 0, 381, 382, 383, 386, 387,
	385, 0, 384, 0, 0, 0, 388, 0, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 0, 400, 0,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 425, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 0, 459, 460, 458, 461,
	462, 463, 0, 464, 448, 449, 465, 466, 0, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 0, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 238, 512, 511, 567, 0, 0, 0, 0,
	513, 514, 568, 515, 516, 517, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 0, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 329,
	0, 330, 331, 332, 333, 334, 537, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 0, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 0, 381, 382, 383,
	386, 387, 385, 0, 384, 0, 0, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 405, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 421, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 443, 0, 444, 445, 605, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 238, 512, 511, 567, 0, 0,
	0, 0, 513, 514, 568, 515, 516, 517, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 518, 0, 1990, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 519, 520, 0,
	521, 259, 522, 0, 260, 261, 262, 263, 264, 0,
	0, 0, 265, 523, 524, 525, 0, 266, 267, 526,
	0, 0, 0, 268, 269, 270, 271, 272, 273, 274,
	0, 0, 276, 277, 278, 275, 0, 279, 0, 280,
	281, 282, 0, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 0, 0, 286, 287, 288, 289, 0, 290,
	527, 528, 0, 294, 291, 292, 0, 295, 293, 0,
	296, 297, 0, 0, 298, 299, 300, 0, 301, 302,
	0, 303, 304, 305, 0, 306, 307, 529, 308, 309,
	310, 312, 314, 311, 315, 316, 317, 318, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 319, 320, 321,
	532, 0, 0, 0, 322, 0, 323, 0, 0, 0,
	324, 325, 533, 534, 326, 327, 0, 328, 535, 0,
	536, 329, 0, 330, 331, 332, 333, 334, 537, 538,
	539, 390, 0, 335, 336, 0, 337, 338, 339, 340,
	0, 0, 0, 0, 341, 342, 344, 0, 0, 343,
	540, 541, 0, 542, 0, 345, 0, 543, 0, 346,
	347, 348, 0, 349, 0, 0, 0, 350, 351, 352,
	353, 354, 355, 0, 356, 358, 357, 0, 359, 544,
	0, 360, 361, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 367, 368, 0, 369, 370, 372, 374, 371,
	373, 378, 375, 376, 377, 380, 0, 379, 0, 381,
	382, 383, 386, 387, 385, 0, 384, 0, 0, 0,
	388, 0, 545, 389, 546, 391, 392, 0, 0, 393,
	0, 0, 0, 395, 396, 397, 0, 0, 398, 399,
	547, 0, 400, 0, 548, 401, 402, 394, 403, 404,
	405, 406, 407, 408, 409, 410, 0, 411, 412, 549,
	550, 551, 413, 552, 414, 415, 0, 416, 0, 417,
	418, 419, 420, 421, 422, 423, 553, 425, 424, 426,
	0, 0, 0, 0, 0, 0, 427, 0, 429, 430,
	431, 428, 432, 433, 434, 435, 0, 436, 437, 438,
	0, 439, 440, 441, 442, 554, 443, 0, 444, 445,
	451, 452, 446, 447, 453, 454, 455, 456, 457, 0,
	459, 460, 458, 461, 462, 463, 0, 0, 448, 449,
	465, 466, 0, 467, 468, 555, 0, 469, 0, 470,
	471, 472, 473, 450, 474, 479, 556, 475, 476, 477,
	478, 557, 0, 481, 482, 0, 480, 0, 483, 484,
	485, 486, 487, 488, 313, 489, 0, 490, 558, 559,
	560, 561, 0, 497, 0, 491, 492, 562, 493, 563,
	0, 494, 495, 496, 0, 498, 499, 0, 0, 500,
	501, 502, 504, 505, 503, 506, 0, 507, 0, 0,
	508, 509, 510, 564, 565, 566, 238, 512, 511, 567,
	0, 0, 0, 0, 513, 514, 568, 515, 516, 517,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 518, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 519,
	520, 0, 521, 259, 522, 0, 260, 261, 262, 263,
	264, 0, 0, 0, 265, 523, 524, 525, 0, 266,
	267, 526, 0, 0, 0, 268, 269, 270, 271, 272,
	273, 274, 0, 0, 276, 277, 278, 275, 0, 279,
	0, 280, 281, 282, 0, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 0, 0, 286, 287, 288, 289,
	0, 290, 527, 528, 0, 294, 291, 292, 0, 295,
	293, 0, 296, 297, 0, 0, 298, 299, 300, 0,
	301, 302, 0, 303, 304, 305, 0, 306, 307, 529,
	308, 309, 310, 312, 314, 311, 315, 316, 317, 318,
	530, 531, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 321, 532, 0, 0, 0, 322, 0, 323, 0,
	0, 0, 324, 325, 533, 534, 326, 327, 0, 328,
	535, 0, 536, 329, 0, 330, 331, 332, 333, 334,
	1375, 538, 539, 390, 0, 335, 336, 0, 337, 338,
	339, 340, 0, 0, 0, 0, 341, 342, 344, 0,
	0, 343, 540, 541, 0, 542, 0, 345, 0, 543,
	0, 346, 347, 348, 0, 349, 0, 0, 0, 350,
	351, 352, 353, 354, 355, 0, 356, 358, 357, 0,
	359, 544, 0, 360, 361, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 367, 368, 0, 369, 370, 372,
	374, 371, 373, 378, 375, 376, 377, 380, 0, 379,
	0, 381, 382, 383, 386, 387, 385, 0, 384, 0,
	0, 0, 388, 0, 545, 389, 546, 391, 392, 0,
	0, 393, 0, 0, 0, 395, 396, 397, 0, 0,
	398, 399, 547, 0, 400, 0, 548, 401, 402, 394,
	403, 404, 405, 406, 407, 408, 409, 410, 0, 411,
	412, 549, 550, 551, 413, 552, 414, 415, 0, 416,
	0, 417, 418, 419, 420, 421, 422, 423, 553, 425,
	424, 426, 0, 0, 0, 0, 0, 0, 427, 0,
	429, 430, 431, 428, 432, 433, 434, 435, 0, 436,
	437, 438, 0, 439, 440, 441, 442, 554, 443, 0,
	444, 445, 451, 452, 446, 447, 453, 454, 455, 456,
	457, 0, 459, 460, 458, 461, 462, 463, 0, 464,
	448, 449, 465, 466, 0, 467, 468, 555, 0, 469,
	0, 470, 471, 472, 473, 450, 474, 479, 556, 475,
	476, 477, 478, 557, 0, 481, 482, 0, 480, 0,
	483, 484, 485, 486, 487, 488, 313, 489, 0, 490,
	558, 559, 560, 561, 0, 497, 0, 491, 492, 562,
	493, 563, 0, 494, 495, 496, 0, 498, 499, 0,
	0, 500, 501, 502, 504, 505, 503, 506, 0, 507,
	0, 0, 508, 509, 510, 564, 565, 566, 238, 512,
	511, 567, 0, 0, 0, 0, 513, 514, 568, 515,
	516, 517, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 519, 520, 0, 521, 259, 522, 0, 260, 261,
	262, 263, 264, 0, 0, 0, 265, 523, 524, 525,
	0, 266, 267, 526, 0, 0, 0, 268, 269, 270,
	271, 272, 273, 274, 0, 0, 276, 277, 278, 275,
	0, 279, 0, 280, 281, 282, 0, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	288, 289, 0, 290, 527, 528, 0, 294, 291, 292,
	0, 295, 293, 0, 296, 297, 0, 0, 298, 299,
	300, 0, 301, 302, 0, 303, 304, 305, 0, 306,
	307, 529, 308, 309, 310, 312, 314, 311, 315, 316,
	317, 318, 530, 531, 0, 0, 0, 0, 0, 0,
	0, 319, 320, 321, 532, 0, 0, 0, 322, 0,
	323, 0, 0, 0, 324, 325, 533, 534, 326, 327,
	0, 328, 535, 0, 536, 329, 0, 330, 331, 332,
	333, 334, 1316, 538, 539, 390, 0, 335, 336, 0,
	337, 338, 339, 340, 0, 0, 0, 0, 341, 342,
	344, 0, 0, 343, 540, 541, 0, 542, 0, 345,
	0, 543, 0, 346, 347, 348, 0, 349, 0, 0,
	0, 350, 351, 352, 353, 354, 355, 0, 356, 358,
	357, 0, 359, 544, 0, 360, 361, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 367, 368, 0, 369,
	370, 372, 374, 371, 373, 378, 375, 376, 377, 380,
	0, 379, 0, 381, 382, 383, 386, 387, 385, 0,
	384, 0, 0, 0, 388, 0, 545, 389, 546, 391,
	392, 0, 0, 393, 0, 0, 0, 395, 396, 397,
	0, 0, 398, 399, 547, 0, 400, 0, 548, 401,
	402, 394, 403, 404, 405, 406, 407, 408, 409, 410,
	0, 411, 412, 549, 550, 551, 413, 552, 414, 415,
	0, 416, 0, 417, 418, 419, 420, 421, 422, 423,
	553, 425, 424, 426, 0, 0, 0, 0, 0, 0,
	427, 0, 429, 430, 431, 428, 432, 433, 434, 435,
	0, 436, 437, 438, 0, 439, 440, 441, 442, 554,
	443, 0, 444, 445, 451, 452, 446, 447, 453, 454,
	455, 456, 457, 0, 459, 460, 458, 461, 462, 463,
	0, 464, 448, 449, 465, 466, 0, 467, 468, 555,
	0, 469, 0, 470, 471, 472, 473, 450, 474, 479,
	556, 475, 476, 477, 478, 557, 0, 481, 482, 0,
	480, 0, 483, 484, 485, 486, 487, 488, 313, 489,
	0, 490, 558, 559, 560, 561, 0, 497, 0, 491,
	492, 562, 493, 563, 0, 494, 495, 496, 0, 498,
	499, 0, 0, 500, 501, 502, 504, 505, 503, 506,
	0, 507, 0, 0, 508, 509, 510, 564, 565, 566,
	238, 512, 511, 567, 0, 0, 0, 0, 513, 514,
	568, 515, 516, 517, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 519, 520, 0, 521, 259, 522, 0,
	260, 261, 262, 263, 264, 0, 0, 0, 265, 523,
	524, 525, 0, 266, 267, 526, 0, 0, 0, 268,
	269, 270, 271, 272, 273, 274, 0, 0, 276, 277,
	278, 275, 0, 279, 0, 280, 281, 282, 0, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 0, 0,
	286, 287, 288, 289, 0, 290, 527, 528, 0, 294,
	291, 292, 0, 295, 293, 0, 296, 297, 0, 0,
	298, 299, 300, 0, 301, 302, 0, 303, 304, 305,
	0, 306, 307, 529, 308, 309, 310, 312, 314, 311,
	315, 316, 317, 318, 530, 531, 0, 0, 0, 0,
	0, 0, 0, 319, 320, 321, 532, 0, 0, 0,
	322, 0, 323, 0, 0, 0, 324, 325, 533, 534,
	326, 327, 0, 328, 535, 0, 536, 329, 0, 330,
	331, 332, 333, 334, 537, 538, 539, 390, 0, 335,
	336, 0, 337, 338, 339, 340, 0, 0, 0, 0,
	341, 342, 344, 0, 0, 343, 540, 541, 0, 542,
	0, 345, 0, 543, 0, 346, 347, 348, 0, 349,
	0, 0, 0, 350, 351, 352, 353, 354, 355, 0,
	356, 358, 357, 0, 359, 544, 0, 360, 361, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 367, 368,
	0, 369, 370, 372, 374, 371, 373, 378, 375, 376,
	377, 380, 0, 379, 0, 381, 382, 383, 386, 387,
	385, 0, 384, 0, 0, 0, 388, 0, 545, 389,
	546, 391, 392, 0, 0, 393, 0, 0, 0, 395,
	396, 397, 0, 0, 398, 399, 547, 0, 400, 0,
	548, 401, 402, 394, 403, 404, 405, 406, 407, 408,
	409, 410, 0, 411, 412, 549, 550, 551, 413, 552,
	414, 415, 0, 416, 0, 417, 418, 419, 420, 421,
	422, 423, 553, 1056, 424, 426, 0, 0, 0, 0,
	0, 0, 427, 0, 429, 430, 431, 428, 432, 433,
	434, 435, 0, 436, 437, 438, 0, 439, 440, 441,
	442, 554, 443, 0, 444, 445, 451, 452, 446, 447,
	453, 454, 455, 456, 457, 0, 459, 460, 458, 461,
	462, 463, 0, 464, 448, 449, 465, 466, 0, 467,
	468, 555, 0, 469, 0, 470, 471, 472, 473, 450,
	474, 479, 556, 475, 476, 477, 478, 557, 0, 481,
	482, 0, 480, 0, 483, 484, 485, 486, 487, 488,
	313, 489, 0, 490, 558, 559, 560, 561, 0, 497,
	0, 491, 492, 562, 493, 563, 0, 494, 495, 496,
	0, 498, 499, 0, 0, 500, 501, 502, 504, 505,
	503, 506, 0, 507, 0, 0, 508, 509, 510, 564,
	565, 566, 238, 512, 511, 567, 0, 0, 0, 0,
	513, 514, 568, 515, 516, 517, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 519, 520, 0, 521, 259,
	522, 0, 260, 261, 262, 263, 264, 0, 0, 0,
	265, 523, 524, 525, 0, 266, 267, 526, 0, 0,
	0, 268, 269, 270, 271, 272, 273, 274, 0, 0,
	276, 277, 278, 275, 0, 279, 0, 280, 281, 282,
	0, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 288, 289, 0, 290, 527, 528,
	0, 294, 291, 292, 0, 295, 293, 0, 296, 297,
	0, 0, 298, 299, 300, 0, 301, 302, 0, 303,
	304, 305, 0, 306, 307, 529, 308, 309, 310, 312,
	314, 311, 315, 316, 317, 318, 530, 531, 0, 0,
	0, 0, 0, 0, 0, 319, 320, 321, 532, 0,
	0, 0, 322, 0, 323, 0, 0, 0, 324, 325,
	533, 534, 326, 327, 0, 328, 535, 0, 536, 0,
	0, 330, 331, 332, 333, 334, 537, 538, 539, 390,
	0, 335, 336, 0, 337, 338, 339, 340, 0, 0,
	0, 0, 341, 342, 344, 0, 0, 343, 540, 541,
	0, 542, 0, 345, 0, 543, 0, 346, 347, 348,
	0, 349, 0, 0, 0, 350, 351, 352, 353, 354,
	355, 0, 356, 358, 357, 0, 359, 544, 0, 360,
	361, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	367, 368, 0, 369, 370, 372, 374, 371, 373, 378,
	375, 376, 377, 380, 0, 379, 0, 381, 382, 383,
	386, 387, 385, 0, 384, 0, 0, 0, 388, 0,
	545, 389, 546, 391, 392, 0, 0, 393, 0, 0,
	0, 395, 396, 397, 0, 0, 398, 399, 547, 0,
	400, 0, 548, 401, 402, 394, 403, 404, 0, 406,
	407, 408, 409, 410, 0, 411, 412, 549, 550, 551,
	413, 552, 414, 415, 0, 416, 0, 417, 418, 419,
	420, 0, 422, 423, 553, 425, 424, 426, 0, 0,
	0, 0, 0, 0, 427, 0, 429, 430, 431, 428,
	432, 433, 434, 435, 0, 436, 437, 438, 0, 439,
	440, 441, 442, 554, 0, 0, 444, 445, 451, 452,
	446, 447, 453, 454, 455, 456, 457, 0, 459, 460,
	458, 461, 462, 463, 0, 464, 448, 449, 465, 466,
	0, 467, 468, 555, 0, 469, 0, 470, 471, 472,
	473, 450, 474, 479, 556, 475, 476, 477, 478, 557,
	0, 481, 482, 0, 480, 0, 483, 484, 485, 486,
	487, 488, 313, 489, 0, 490, 558, 559, 560, 561,
	0, 497, 0, 491, 492, 562, 493, 563, 0, 494,
	495, 496, 0, 498, 499, 0, 0, 500, 501, 502,
	504, 505, 503, 506, 0, 507, 0, 0, 508, 509,
	510, 564, 565, 566, 0, 512, 511, 567, 0, 0,
	0, 0, 513, 514, 568, 515, 516, 517, 1583, 1584,
	0, 1616, 1617, 1618, 1626, 1627, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1619,
	1614, 0, 0, 0, 0, 0, 0, 1586, 0, 0,
	0, 0, 0, 0, 1632, 0, 0, 0, 0, 0,
	0, 1583, 1584, 0, 1616, 1617, 1618, 1626, 1627, 1628,
	0, 0, 0, 0, 0, 0, 0, 1585, 0, 0,
	0, 0, 1619, 1614, 0, 0, 0, 1605, 0, 0,
	1586, 0, 0, 0, 0, 1602, 0, 1632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1605, 0, 0, 0, 0, 0, 0, 0, 1602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1608, 1609, 1610, 1611, 0, 0, 0, 0, 0, 0,
	1591, 1583, 1584, 0, 1616, 1617, 1618, 1626, 1627, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1619, 1614, 0, 0, 0, 0, 0, 1623,
	1586, 0, 1633, 1608, 1609, 1610, 1611, 1632, 1613, 1615,
	0, 0, 0, 1591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1629, 0, 1630, 0, 0, 0, 0,
	1585, 0, 1600, 1601, 0, 0, 0, 0, 0, 0,
	1605, 0, 1623, 0, 0, 1633, 0, 0, 1602, 0,
	1621, 1613, 1615, 0, 0, 0, 0, 0, 0, 0,
	0, 1606, 0, 0, 0, 0, 1629, 0, 1630, 0,
	0, 0, 0, 0, 0, 1600, 1601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1631, 0, 0, 0,
	0, 0, 0, 1621, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1620, 1606, 0, 0, 0, 0, 0,
	0, 0, 0, 1608, 1609, 1610, 1611, 0, 0, 0,
	0, 0, 0, 1591, 0, 0, 0, 0, 0, 1631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1620, 0, 0, 0,
	0, 0, 1623, 0, 1612, 1633, 0, 0, 0, 0,
	0, 1613, 1615, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1607, 0, 1629, 0, 1630, 0,
	0, 0, 0, 0, 0, 1600, 1601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1612, 0, 1624,
	0, 0, 0, 1621, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1606, 0, 0, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1631,
	0, 0, 1624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1622, 0, 0,
	0, 1597, 1598, 1604, 1625, 1603, 1599, 0, 1596, 1594,
	1595, 1587, 1588, 1589, 1590, 1592, 1593, 1612, 0, 0,
	0, 0, 0, 0, 0, 2785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1607, 0, 0,
	1622, 0, 0, 0, 1597, 1598, 1604, 1625, 1603, 1599,
	0, 1596, 1594, 1595, 1587, 1588, 1589, 1590, 1592, 1593,
	0, 0, 1624, 0, 0, 0, 1583, 1584, 2784, 1616,
	1617, 1618, 1626, 1627, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1619, 1614, 0,
	0, 0, 0, 0, 0, 1586, 0, 0, 0, 0,
	0, 0, 1632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1583, 1584, 0, 1616,
	1617, 1618, 1626, 1627, 1628, 1585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1605, 0, 1619, 1614, 0,
	0, 0, 0, 1602, 0, 1586, 0, 0, 0, 0,
	1622, 0, 1632, 0, 1597, 1598, 1604, 1625, 1603, 1599,
	0, 1596, 1594, 1595, 1587, 1588, 1589, 1590, 1592, 1593,
	0, 0, 0, 0, 0, 1585, 0, 0, 2233, 0,
	0, 0, 0, 0, 0, 1605, 0, 0, 0, 0,
	0, 0, 0, 1602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1608, 1609,
	1610, 1611, 0, 0, 0, 0, 0, 0, 1591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1623, 0, 0,
	1633, 0, 0, 0, 0, 0, 1613, 1615, 1608, 1609,
	1610, 1611, 0, 0, 0, 0, 0, 0, 1591, 0,
	0, 1629, 0, 1630, 0, 0, 0, 0, 0, 0,
	1600, 1601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1623, 1621, 0,
	1633, 0, 0, 0, 0, 0, 1613, 1615, 0, 1606,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 1630, 0, 0, 0, 0, 0, 0,
	1600, 1601, 0, 0, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 0,
	0, 1620, 0, 0, 0, 0, 0, 0, 0, 1606,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1620, 1612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1607, 0, 1583, 1584, 0, 1616, 1617, 1618,
	1626, 1627, 1628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1619, 1614, 1624, 0, 0,
	0, 0, 1612, 1586, 0, 0, 0, 0, 0, 0,
	1632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1607, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1605, 0, 0, 0, 1624, 0, 0,
	0, 1602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1622, 0, 0, 0, 1597,
	1598, 1604, 1625, 1603, 1599, 0, 1596, 1594, 1595, 1587,
	1588, 1589, 1590, 1592, 1593, 0, 0, 0, 0, 3895,
	0, 0, 0, 0, 0, 0, 1608, 1609, 1610, 1611,
	0, 0, 0, 0, 0, 0, 1591, 0, 0, 0,
	0, 0, 0, 0, 0, 1622, 0, 0, 0, 1597,
	1598, 1604, 1625, 1603, 1599, 0, 1596, 1594, 1595, 1587,
	1588, 1589, 1590, 1592, 1593, 1623, 0, 0, 1633, 3891,
	0, 0, 0, 0, 1613, 1615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1629,
	0, 1630, 0, 0, 0, 0, 0, 0, 1600, 1601,
	0, 0, 0, 0, 0, 0, 0, 1583, 1584, 0,
	1616, 1617, 1618, 1626, 1627, 1628, 1621, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1606, 1619, 1614,
	0, 0, 0, 0, 0, 0, 1586, 0, 0, 0,
	0, 0, 0, 1632, 0, 0, 0, 0, 0, 0,
	0, 0, 1631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1585, 0, 0, 1620,
	0, 0, 0, 0, 0, 0, 1605, 0, 0, 0,
	0, 0, 0, 0, 1602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1607, 0, 0, 0, 0, 0, 0, 0, 0, 1608,
	1609, 1610, 1611, 0, 0, 0, 0, 0, 0, 1591,
	0, 0, 0, 0, 0, 1624, 0, 0, 0, 0,
	0, 1583, 1584, 0, 1616, 1617, 1618, 1626, 1627, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 1623, 0,
	0, 1633, 1619, 1614, 0, 0, 0, 1613, 1615, 0,
	1586, 0, 0, 0, 0, 0, 0, 1632, 0, 0,
	0, 0, 1629, 0, 1630, 0, 0, 0, 0, 0,
	0, 1600, 1601, 0, 0, 0, 0, 0, 0, 0,
	1585, 0, 0, 0, 0, 0, 0, 0, 0, 1621,
	1605, 0, 0, 0, 0, 0, 0, 0, 1602, 0,
	1606, 0, 0, 1622, 0, 0, 0, 1597, 1598, 1604,
	1625, 1603, 1599, 0, 1596, 1594, 1595, 1587, 1588, 1589,
	1590, 1592, 1593, 0, 0, 1631, 0, 3802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1608, 1609, 1610, 1611, 0, 0, 0,
	0, 0, 0, 1591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1612, 0, 0, 0, 0, 0, 0,
	0, 0, 1623, 0, 0, 1633, 0, 0, 0, 0,
	0, 1613, 1615, 1607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1629, 0, 1630, 0,
	0, 0, 0, 0, 0, 1600, 1601, 0, 1624, 0,
	0, 0, 0, 0, 1583, 1584, 0, 1616, 1617, 1618,
	1626, 1627, 1628, 1621, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1606, 1619, 1614, 0, 0, 0,
	0, 0, 0, 1586, 0, 0, 0, 0, 0, 0,
	1632, 0, 0, 0, 0, 0, 0, 0, 0, 1631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1585, 0, 0, 1620, 0, 0, 0,
	0, 0, 0, 1605, 0, 0, 0, 0, 0, 0,
	0, 1602, 0, 0, 0, 0, 1622, 0, 0, 0,
	1597, 1598, 1604, 1625, 1603, 1599, 0, 1596, 1594, 1595,
	1587, 1588, 1589, 1590, 1592, 1593, 0, 0, 0, 0,
	3801, 0, 0, 0, 0, 0, 0, 1612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 1608, 1609, 1610, 1611,
	0, 0, 0, 0, 0, 0, 1591, 0, 0, 0,
	0, 0, 1624, 0, 0, 0, 0, 0, 1583, 1584,
	0, 1616, 1617, 1618, 1626, 1627, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 1623, 0, 0, 1633, 1619,
	1614, 0, 0, 0, 1613, 1615, 0, 1586, 0, 0,
	0, 0, 0, 0, 1632, 0, 0, 0, 0, 1629,
	0, 1630, 0, 0, 0, 0, 0, 0, 1600, 1601,
	0, 0, 0, 0, 0, 0, 0, 1585, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 1605, 0, 0,
	0, 0, 0, 0, 0, 1602, 0, 1606, 0, 0,
	1622, 0, 0, 0, 1597, 1598, 1604, 1625, 1603, 1599,
	0, 1596, 1594, 1595, 1587, 1588, 1589, 1590, 1592, 1593,
	0, 0, 1631, 0, 3655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1620,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1608, 1609, 1610, 1611, 0, 0, 0, 0, 0, 0,
	1591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 1633, 0, 0, 0, 0, 0, 1613, 1615,
	1607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1629, 0, 1630, 0, 0, 0, 0,
	0, 0, 1600, 1601, 0, 1624, 0, 0, 0, 0,
	0, 1583, 1584, 0, 1616, 1617, 1618, 1626, 1627, 1628,
	1621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1606, 1619, 1614, 0, 0, 0, 0, 0, 0,
	1586, 0, 0, 0, 0, 0, 0, 1632, 0, 0,
	0, 0, 0, 0, 0, 0, 1631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1585, 0, 0, 1620, 0, 0, 0, 0, 0, 0,
	1605, 0, 0, 0, 0, 0, 0, 0, 1602, 0,
	0, 0, 0, 1622, 0, 0, 0, 1597, 1598, 1604,
	1625, 1603, 1599, 0, 1596, 1594, 1595, 1587, 1588, 1589,
	1590, 1592, 1593, 0, 0, 0, 0, 3526, 0, 0,
	0, 0, 0, 0, 1612, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1607, 0, 0, 0, 0, 0,
	0, 0, 0, 1608, 1609, 1610, 1611, 0, 0, 0,
	0, 0, 0, 1591, 0, 0, 0, 0, 0, 1624,
	0, 0, 0, 0, 0, 1583, 1584, 0, 1616, 1617,
	1618, 1626, 1627, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 1623, 0, 0, 1633, 1619, 1614, 0, 0,
	0, 1613, 1615, 0, 1586, 0, 0, 0, 0, 0,
	0, 1632, 0, 0, 0, 0, 1629, 0, 1630, 0,
	0, 0, 0, 0, 0, 1600, 1601, 0, 0, 0,
	0, 0, 0, 0, 1585, 0, 0, 0, 0, 0,
	0, 0, 0, 1621, 1605, 0, 0, 0, 0, 0,
	0, 0, 1602, 0, 1606, 0, 0, 1622, 0, 0,
	0, 1597, 1598, 1604, 1625, 1603, 1599, 0, 1596, 1594,
	1595, 1587, 1588, 1589, 1590, 1592, 1593, 0, 0, 1631,
	0, 3472, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1608, 1609, 1610,
	1611, 0, 0, 0, 0, 0, 0, 1591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1612, 0, 0,
	0, 0, 0, 0, 0, 0, 1623, 0, 0, 1633,
	0, 0, 0, 0, 0, 1613, 1615, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 0, 1630, 0, 0, 0, 0, 0, 0, 1600,
	1601, 0, 1624, 0, 0, 0, 0, 0, 1583, 1584,
	0, 1616, 1617, 1618, 1626, 1627, 1628, 1621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1606, 1619,
	1614, 0, 0, 0, 0, 0, 0, 1586, 0, 0,
	0, 0, 0, 0, 1632, 0, 0, 0, 0, 0,
	0, 0, 0, 1631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1585, 0, 0,
	1620, 0, 0, 0, 0, 0, 0, 1605, 0, 0,
	0, 0, 0, 0, 0, 1602, 0, 0, 0, 0,
	1622, 0, 0, 0, 1597, 1598, 1604, 1625, 1603, 1599,
	0, 1596, 1594, 1595, 1587, 1588, 1589, 1590, 1592, 1593,
	0, 0, 0, 0, 3471, 0, 0, 0, 0, 0,
	0, 1612, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1607, 0, 0, 0, 0, 0, 0, 0, 0,
	1608, 1609, 1610, 1611, 0, 0, 0, 0, 0, 0,
	1591, 0, 0, 0, 0, 0, 1624, 0, 0, 0,
	0, 0, 1583, 1584, 0, 1616, 1617, 1618, 1626, 1627,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 1633, 1619, 1614, 0, 0, 0, 1613, 1615,
	0, 1586, 0, 0, 0, 0, 0, 0, 1632, 0,
	0, 0, 0, 1629, 0, 1630, 0, 0, 0, 0,
	0, 0, 1600, 1601, 0, 0, 0, 0, 0, 0,
	0, 1585, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 1605, 0, 0, 0, 0, 0, 0, 0, 1602,
	0, 1606, 0, 0, 1622, 0, 0, 0, 1597, 1598,
	1604, 1625, 1603, 1599, 0, 1596, 1594, 1595, 1587, 1588,
	1589, 1590, 1592, 1593, 0, 0, 1631, 0, 3470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1608, 1609, 1610, 1611, 0, 0,
	0, 0, 0, 0, 1591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1612, 0, 0, 0, 0, 0,
	0, 0, 0, 1623, 0, 0, 1633, 0, 0, 0,
	0, 0, 1613, 1615, 1607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 1630,
	0, 0, 0, 0, 0, 0, 1600, 1601, 0, 1624,
	0, 0, 0, 0, 0, 1583, 1584, 0, 1616, 1617,
	1618, 1626, 1627, 1628, 1621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1606, 1619, 1614, 0, 0,
	0, 0, 0, 0, 1586, 0, 0, 0, 0, 0,
	0, 1632, 0, 0, 0, 0, 0, 0, 0, 0,
	1631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1585, 0, 0, 1620, 0, 0,
	0, 0, 0, 0, 1605, 0, 0, 0, 0, 0,
	0, 0, 1602, 0, 0, 0, 0, 1622, 0, 0,
	0, 1597, 1598, 1604, 1625, 1603, 1599, 0, 1596, 1594,
	1595, 1587, 1588, 1589, 1590, 1592, 1593, 0, 0, 0,
	0, 3192, 0, 0, 0, 0, 0, 0, 1612, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 1608, 1609, 1610,
	1611, 0, 0, 0, 0, 0, 0, 1591, 0, 0,
	0, 0, 0, 1624, 0, 0, 0, 0, 0, 1583,
	1584, 0, 1616, 1617, 1618, 1626, 1627, 1628, 0, 0,
	0, 0, 0, 0, 0, 0, 1623, 0, 0, 1633,
	1619, 1614, 0, 0, 0, 1613, 1615, 0, 1586, 0,
	0, 0, 0, 0, 0, 1632, 0, 0, 0, 0,
	1629, 0, 1630, 0, 0, 0, 0, 0, 0, 1600,
	1601, 0, 0, 0, 0, 0, 0, 0, 1585, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 1605, 0,
	0, 0, 0, 0, 0, 0, 1602, 0, 1606, 0,
	0, 1622, 0, 0, 0, 1597, 1598, 1604, 1625, 1603,
	1599, 0, 1596, 1594, 1595, 1587, 1588, 1589, 1590, 1592,
	1593, 0, 0, 1631, 0, 2782, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1620, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1608, 1609, 1610, 1611, 0, 0, 0, 0, 0,
	0, 1591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1612, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 1633, 0, 0, 0, 0, 0, 1613,
	1615, 1607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 0, 1630, 0, 0, 0,
	0, 0, 0, 1600, 1601, 0, 1624, 0, 0, 0,
	0, 0, 1583, 1584, 0, 1616, 1617, 1618, 1626, 1627,
	1628, 1621, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1606, 1619, 1614, 0, 0, 0, 0, 0,
	0, 1586, 0, 0, 0, 0, 0, 0, 1632, 0,
	0, 0, 0, 0, 0, 0, 0, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1585, 0, 0, 1620, 0, 0, 0, 0, 0,
	0, 1605, 0, 0, 0, 0, 0, 0, 0, 1602,
	0, 0, 0, 0, 1622, 0, 0, 0, 1597, 1598,
	1604, 1625, 1603, 1599, 0, 1596, 1594, 1595, 1587, 1588,
	1589, 1590, 1592, 1593, 0, 0, 0, 0, 2781, 0,
	0, 0, 0, 0, 0, 1612, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1607, 0, 0, 0, 0,
	0, 0, 0, 0, 1608, 1609, 1610, 1611, 0, 0,
	0, 0, 0, 0, 1591, 0, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 0, 1583, 1584, 0, 1616,
	1617, 1618, 1626, 1627, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 1623, 0, 0, 1633, 1619, 1614, 0,
	0, 0, 1613, 1615, 0, 1586, 0, 0, 0, 0,
	0, 0, 1632, 0, 0, 0, 0, 1629, 0, 1630,
	0, 0, 0, 0, 0, 0, 1600, 1601, 0, 0,
	0, 0, 0, 0, 0, 1585, 0, 0, 0, 0,
	0, 0, 0, 0, 1621, 1605, 0, 0, 0, 0,
	0, 0, 0, 1602, 0, 1606, 0, 0, 1622, 0,
	0, 0, 1597, 1598, 1604, 1625, 1603, 1599, 0, 1596,
	1594, 1595, 1587, 1588, 1589, 1590, 1592, 1593, 0, 0,
	1631, 0, 2780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1608, 1609,
	1610, 1611, 0, 0, 0, 0, 0, 0, 1591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1612, 0,
	0, 0, 0, 0, 0, 0, 0, 1623, 0, 0,
	1633, 0, 0, 0, 0, 0, 1613, 1615, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 1630, 0, 0, 0, 0, 0, 0,
	1600, 1601, 0, 1624, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1606,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1620, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1622, 0, 0, 0, 1597, 1598, 1604, 1625, 1603,
	1599, 0, 1596, 1594, 1595, 1587, 1588, 1589, 1590, 1592,
	1593, 0, 0, 0, 0, 2779, 0, 0, 0, 0,
	0, 0, 1612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1583, 1584, 1607, 1616, 1617, 1618, 1626, 1627, 1628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1619, 1614, 0, 0, 0, 0, 1624, 0, 1586,
	0, 0, 0, 0, 0, 0, 1632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1605,
	0, 0, 0, 0, 0, 0, 0, 1602, 0, 0,
	0, 1583, 1584, 0, 1616, 1617, 1618, 1626, 1627, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1619, 1614, 0, 0, 0, 0, 2717, 0,
	1586, 0, 0, 0, 0, 1622, 0, 1632, 0, 1597,
	1598, 1604, 1625, 1603, 1599, 0, 1596, 1594, 1595, 1587,
	1588, 1589, 1590, 1592, 1593, 0, 0, 2746, 0, 0,
	1585, 0, 1608, 1609, 1610, 1611, 0, 0, 0, 0,
	1605, 0, 1591, 4016, 0, 0, 0, 0, 1602, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1623, 0, 0, 1633, 0, 0, 0, 0, 2718,
	1613, 1615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 0, 1630, 0, 0,
	0, 0, 0, 0, 1600, 1601, 0, 0, 0, 0,
	0, 0, 0, 1608, 1609, 1610, 1611, 0, 0, 0,
	0, 0, 1621, 1591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1606, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1623, 0, 0, 1633, 0, 0, 1631, 0,
	0, 1613, 1615, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1620, 1629, 0, 1630, 0,
	0, 0, 0, 0, 0, 1600, 1601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4015, 0, 1621, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1606, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1631,
	0, 0, 0, 0, 0, 0, 1607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1624, 0, 0, 0, 0, 0, 0, 0, 1583,
	1584, 0, 1616, 1617, 1618, 1626, 1627, 1628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1619, 1614, 0, 0, 0, 0, 0, 1612, 1586, 0,
	0, 0, 0, 0, 0, 1632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1605, 0,
	0, 0, 1624, 0, 0, 0, 1602, 0, 0, 1622,
	0, 0, 0, 1597, 1598, 1604, 1625, 1603, 1599, 0,
	1596, 1594, 1595, 1587, 1588, 1589, 1590, 1592, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1608, 1609, 1610, 1611, 0, 0, 0, 0, 0,
	0, 1591, 0, 2842, 0, 0, 2841, 0, 0, 0,
	1622, 0, 0, 0, 1597, 1598, 1604, 1625, 1603, 1599,
	0, 1596, 1594, 1595, 1587, 1588, 1589, 1590, 1592, 1593,
	1623, 0, 0, 1633, 0, 0, 0, 0, 0, 1613,
	1615, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 0, 1630, 0, 0, 0,
	0, 0, 0, 1600, 1601, 2353, 0, 0, 0, 0,
	0, 0, 1583, 1584, 0, 1616, 1617, 1618, 1626, 1627,
	1628, 1621, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1606, 1619, 1614, 0, 0, 0, 2352, 0,
	0, 1586, 0, 0, 0, 0, 0, 0, 1632, 0,
	0, 0, 0, 0, 0, 0, 0, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1585, 0, 0, 1620, 0, 0, 0, 0, 0,
	0, 1605, 0, 0, 0, 0, 0, 0, 0, 1602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1612, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1607, 0, 0, 0, 0,
	0, 0, 0, 0, 1608, 1609, 1610, 1611, 0, 0,
	0, 0, 0, 0, 1591, 0, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 0, 1583, 1584, 0, 1616,
	1617, 1618, 1626, 1627, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 1623, 0, 0, 1633, 1619, 1614, 0,
	0, 0, 1613, 1615, 0, 1586, 0, 0, 0, 0,
	0, 0, 1632, 0, 0, 0, 0, 1629, 0, 1630,
	0, 0, 0, 0, 0, 0, 1600, 1601, 0, 0,
	0, 0, 0, 0, 0, 1585, 0, 0, 0, 0,
	0, 0, 0, 0, 1621, 1605, 0, 0, 0, 0,
	0, 0, 0, 1602, 0, 1606, 0, 0, 1622, 0,
	0, 0, 1597, 1598, 1604, 1625, 1603, 1599, 0, 1596,
	1594, 1595, 1587, 1588, 1589, 1590, 1592, 1593, 0, 0,
	1631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1608, 1609,
	1610, 1611, 0, 0, 0, 0, 0, 0, 1591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1612, 0,
	0, 0, 0, 0, 0, 0, 0, 1623, 0, 0,
	1633, 0, 0, 0, 0, 0, 1613, 1615, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 1630, 0, 0, 0, 0, 0, 0,
	1600, 1601, 0, 1624, 0, 0, 0, 0, 0, 1583,
	1584, 0, 1616, 1617, 1618, 1626, 1627, 1628, 1621, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1606,
	1619, 1614, 0, 0, 0, 0, 0, 0, 1586, 0,
	0, 0, 0, 0, 0, 1632, 0, 0, 0, 0,
	0, 0, 0, 0, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1585, 0,
	0, 1620, 914, 0, 0, 0, 0, 0, 1605, 0,
	0, 0, 0, 0, 0, 0, 1602, 0, 0, 0,
	0, 1622, 0, 0, 0, 1597, 1598, 1604, 1625, 1603,
	1599, 0, 1596, 1594, 1595, 1587, 1588, 1589, 1590, 1592,
	1593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1607, 0, 0, 0, 0, 0, 0, 0,
	0, 1608, 1609, 1610, 1611, 0, 0, 0, 0, 0,
	0, 1591, 0, 0, 0, 0, 0, 1624, 0, 0,
	0, 0, 0, 1583, 1584, 0, 1616, 1617, 1618, 1626,
	1627, 1628, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 1633, 1619, 1614, 0, 0, 0, 1613,
	1615, 0, 1586, 0, 0, 0, 0, 0, 0, 1632,
	0, 0, 0, 0, 1629, 0, 1630, 0, 0, 0,
	0, 0, 0, 1600, 1601, 0, 0, 0, 0, 0,
	0, 0, 1585, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 1605, 0, 0, 0, 0, 0, 0, 0,
	1602, 0, 1606, 0, 0, 1622, 0, 0, 0, 1597,
	1598, 1604, 1625, 1603, 1599, 0, 1596, 1594, 1595, 1587,
	1588, 1589, 1590, 1592, 1593, 0, 0, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1620, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1608, 1609, 1610, 1611, 0,
	0, 0, 0, 0, 0, 1591, 0, 0, 0, 0,
	2848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1612, 0, 0, 0, 0,
	0, 0, 0, 0, 1623, 0, 0, 1633, 0, 0,
	0, 0, 0, 1613, 1615, 1607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1629, 0,
	1630, 0, 0, 0, 0, 0, 0, 1600, 1601, 0,
	1624, 0, 0, 0, 0, 0, 1583, 1584, 0, 1616,
	1617, 1618, 1626, 1627, 1628, 1621, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1606, 1619, 1614, 0,
	0, 0, 2843, 0, 3173, 1586, 0, 0, 0, 0,
	0, 0, 1632, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1585, 0, 0, 1620, 0,
	0, 0, 0, 0, 0, 1605, 0, 0, 0, 0,
	0, 0, 0, 1602, 0, 0, 0, 0, 1622, 0,
	0, 0, 1597, 1598, 1604, 1625, 1603, 1599, 0, 1596,
	1594, 1595, 1587, 1588, 1589, 1590, 1592, 1593, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1612,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 1608, 1609,
	1610, 1611, 0, 0, 0, 0, 0, 0, 1591, 0,
	0, 0, 0, 0, 1624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1623, 0, 0,
	1633, 0, 0, 0, 0, 0, 1613, 1615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 1630, 0, 0, 0, 0, 0, 0,
	1600, 1601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1606,
	0, 0, 1622, 0, 0, 0, 1597, 1598, 1604, 1625,
	1603, 1599, 0, 1596, 1594, 1595, 1587, 1588, 1589, 1590,
	1592, 1593, 0, 0, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1620, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1583, 1584, 0, 1616, 1617, 1618,
	1626, 1627, 1628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1619, 1614, 0, 0, 0,
	0, 0, 1612, 1586, 0, 0, 0, 0, 0, 0,
	1632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1607, 0, 1583, 1584, 0, 1616, 1617, 1618,
	1626, 1627, 1628, 1585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1605, 0, 1619, 1614, 1624, 0, 0,
	2783, 1602, 0, 1586, 0, 0, 0, 0, 0, 0,
	1632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1605, 0, 0, 0, 0, 0, 0,
	0, 1602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1608, 1609, 1610, 1611,
	0, 0, 0, 0, 0, 0, 1591, 0, 0, 0,
	0, 0, 0, 0, 0, 1622, 0, 0, 0, 1597,
	1598, 1604, 1625, 1603, 1599, 0, 1596, 1594, 1595, 1587,
	1588, 1589, 1590, 1592, 1593, 1623, 0, 0, 1633, 0,
	0, 0, 0, 0, 1613, 1615, 1608, 1609, 1610, 1611,
	0, 0, 0, 0, 0, 0, 1591, 0, 0, 1629,
	0, 1630, 0, 0, 0, 0, 0, 0, 1600, 1601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1623, 1621, 0, 1633, 0,
	0, 0, 0, 0, 1613, 1615, 0, 1606, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1629,
	0, 1630, 0, 0, 0, 0, 0, 0, 1600, 1601,
	0, 0, 1631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 0, 0, 1620,
	0, 0, 0, 0, 0, 0, 0, 1606, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1620,
	1612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1607, 0, 1583, 1584, 0, 1616, 1617, 1618, 1626, 1627,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1619, 1614, 1624, 0, 0, 0, 0,
	1612, 1586, 0, 0, 0, 0, 0, 0, 1632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1605, 0, 0, 0, 1624, 0, 0, 0, 1602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1622, 0, 0, 0, 1597, 1598, 1604,
	1625, 1603, 1599, 0, 1596, 1594, 1595, 1587, 1588, 1589,
	1590, 1592, 1593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1608, 1609, 1610, 1611, 0, 0,
	0, 0, 0, 0, 1591, 0, 0, 0, 0, 0,
	0, 0, 0, 1622, 0, 0, 0, 1597, 1598, 1604,
	1625, 1603, 1599, 0, 1596, 1594, 1595, 1587, 1588, 1589,
	1590, 1592, 1593, 1623, 0, 0, 1633, 0, 0, 0,
	0, 0, 1613, 1615, 0, 0, 0, 1583, 1584, 0,
	1616, 1617, 1618, 1626, 1627, 1628, 0, 1629, 0, 1630,
	0, 0, 0, 0, 0, 0, 1600, 1601, 1619, 1614,
	0, 0, 0, 0, 0, 0, 1586, 0, 0, 0,
	0, 0, 0, 1632, 1621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1606, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1605, 0, 0, 0,
	1631, 0, 0, 0, 1602, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1612, 1608,
	1609, 1610, 1611, 0, 0, 0, 0, 0, 0, 1591,
	0, 0, 0, 0, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1623, 0,
	0, 1633, 0, 1624, 0, 0, 0, 1613, 1615, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1629, 0, 1630, 0, 0, 0, 0, 0,
	0, 1600, 1601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1621,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1606, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 0, 0, 0, 0,
	0, 1622, 0, 0, 0, 1597, 1598, 1604, 1625, 1603,
	1599, 0, 1596, 1594, 1595, 1587, 1588, 1589, 1590, 1592,
	1593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1612, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	1597, 1598, 1604, 1625, 1603, 1599, 0, 1596, 1594, 1595,
	1587, 1588, 1589, 1590, 1592, 1593,
}
var sqlPact = [...]int{

	6319, -1000, -1000, -1000, -1000, 262, -1000, -1000, 261, 255,
	253, 245, 244, 243, 241, 240, -1000, -1000, -1000, -1000,
	-1000, -1000, 239, -1000, -1000, 238, -1000, 235, 233, 226,
	-1000, -1000, 216, -1000, 196, -1000, -1000, -1000, -1000, 193,
	185, 182, 72736, 72268, 73198, 2098, 88102, 76906, 2185, 65266,
	87634, 64798, 87166, 86698, 181, -1000, 86230, 180, 179, 178,
	-1000, 85762, -1000, 1882, -1000, 177, 4273, 54008, 175, 174,
	173, 2388, 167, -1000, 165, 163, -1000, 11131, 1416, -1000,
	161, 154, -1000, 8275, 1354, 75976, 153, 152, 2636, 151,
	149, 53539, 144, 142, 2578, 2647, -1000, -1000, 1851, -1000,
	-1000, 141, 140, 138, 137, 136, 134, 132, 130, 127,
	124, -1000, 123, 121, 120, 119, 117, 115, 113, 110,
	-1000, 109, 106, 105, 104, 102, 99, 98, 96, 92,
	91, 90, 88, -1000, 8723, 87, 1794, 1550, 1542, 1540,
	1537, 1523, 917, 86, 84, 82, 80, 79, 78, 75,
	72, 70, -1000, 69, 68, 67, 66, 65, 64, 62,
	61, 186, 60, 55, 44, 42, 41, 38, 36, 2612,
	-1000, 1441, 1481, 24847, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	93646, 88564, 35, -16, 33, -1000, 3033, 981, 44615, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 342, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 517, 1992, 743, -1000, -1000, -1000, 85300, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2095, -12, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 740, -1000, 2092, 192, 2053,
	-1000, -1000, -1000, -1000, -1000, 88564, -1000, -1000, 3432, 3431,
	1906, 735, 84838, -1000, 1484, -1000, 900, 27811, -1000, 1209,
	-1000, 27811, 325, -1000, -1000, -1000, -1000, -1000, -1000, 3427,
	3423, 3421, 3420, -1000, -1000, 64330, 18889, 63862, 63394, 84370,
	18411, 71800, 71332, 83902, 59664, -1000, -1000, -1000, 1315, -1000,
	-1000, -1000, -1000, -1000, -1000, 5, 57274, 3235, 88564, -1000,
	296, -1000, -1000, -1000, -1000, -1000, -1000, 37855, 1057, 37351,
	761, 36847, 587, -1000, -1000, -1000, 59186, -1000, 3419, 3414,
	1085, 3413, 2961, 93184, 1786, 3410, 1755, 1190, 992, 3408,
	3407, 3406, 3404, 3402, 3401, 1387, 83434, 2740, 82966, 1671,
	58708, 70864, 73198, 2463, 82498, 1417, 1410, -1000, -1000, -1000,
	-1000, 2801, 2639, 2634, 50281, -1000, -1000, 3400, 3399, 3398,
	3392, 3391, 92722, 1675, 3389, 2282, 3387, 3385, 3384, 3372,
	3370, 3369, 3368, -1000, 70396, 69928, 69460, 3084, 82030, 68992,
	81562, 58230, 36343, 1408, -1000, -1000, -1000, 46501, 7966, 6915,
	81094, 48412, 73198, 73198, -1000, -1000, -1000, -1000, -1000, 35839,
	1015, 35335, 1070, -1000, -1000, 46984, 2670, -1000, -1000, -1000,
	-1000, 34831, 796, 34327, 795, 88564, -1000, 2713, 1761, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2748, 1491, 3259, 57752, 1876, 1407, 3032, 2800, 2799,
	1393, 3366, 2354, 2793, 2786, 2777, 2775, 2754, 1686, 2386,
	858, 24343, 2699, 1664, 33823, 1414, 1373, 2741, 2735, 3270,
	1908, 1820, 1918, 62926, 3365, 3363, 2992, 2734, 2708, 2668,
	-1000, -1000, -1000, -1000, 1349, -1000, -1000, -1000, -1000, -1000,
	66190, -1000, -1000, 1168, -1000, -1000, 1168, -1000, -1000, -1000,
	-1000, -1000, 1266, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1441, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1756, -1000, 1901, -1000, -1000,
	2301, 3007, 3007, 3007, 3068, 474, 465, -1000, 186, -1000,
	-1000, 100201, -1000, -1000, 38347, 38347, 38347, 38347, 38347, 38347,
	38347, 1997, -1000, 733, -1000, -1000, 781, -1000, 729, 615,
	-1000, -1000, -1000, -1000, -1000, -1000, 728, -1000, -1000, -1000,
	-1000, -1000, -1000, 3235, -1000, 21331, -1000, -1000, -1000, 439,
	725, 38347, -1000, -1000, 3282, 3281, 915, -1000, 295, 909,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2705, 724, 723, -1000, 722, 718, 715, 714,
	712, -1000, -1000, -1000, 708, 707, 706, 705, 704, 703,
	702, 700, -1000, 1933, -1000, -1000, -1000, -1000, -1000, -1000,
	656, 655, 655, 655, -1000, 967, -1000, -1000, -1000, 371,
	654, 353, 651, 650, 646, 699, 698, 694, 691, 689,
	686, 683, 682, 681, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	965, -1000, -1000, -1000, -1000, 2, 88564, -1000, 517, 2,
	-1000, -1000, 680, -1000, 28303, 28303, 28303, -1000, -1000, 2091,
	38347, -1000, 2173, -1000, 18, 18, 853, 45549, -1000, 43663,
	853, 487, 787, 49812, -1000, 2644, -1000, -1000, 679, 290,
	-1000, -1000, -1000, -1000, 19365, 2642, 88564, 88564, 73198, 73198,
	73198, 2902, 38347, -1000, -1000, 54470, 88564, 73660, 3201, 55394,
	54470, 88564, 2704, -1000, -1000, -1000, 88564, -1000, 38347, -1000,
	3200, 1483, 60606, 3095, -6, -1000, -1000, -1000, -1000, -1000,
	-1000, 2256, 2255, 1040, 2118, 1930, -1000, 27811, 2953, -1000,
	-1000, -1000, 289, 19365, -1000, -1000, -1000, -1000, -1000, 1974,
	2883, 1305, -1000, 2114, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1639, 2882, -1000, 2059, 2881, 1607, -1000,
	-1000, 2099, -1000, -1000, 2977, -1000, -1000, 1978, 2880, 25,
	-1000, -1000, 2394, -1000, -1000, 1899, -1000, -1000, 942, 2875,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 47936,
	46984, 57274, -3, -1000, -1000, -1000, -1000, -11, -1000, 17933,
	100201, -1000, -1000, -1000, -1000, 1708, 100201, 854, -1000, -1000,
	2870, -1000, 100201, 840, -1000, -1000, 2869, -1000, 2701, -1000,
	-1000, -1000, -1000, 3361, -1000, 3353, 2196, 3351, 3350, 3347,
	-1000, 1529, 1914, 3345, -1000, 3343, -1000, -1000, -1000, -1000,
	-1000, -1000, 68524, 2089, -1000, -1000, 67588, -1000, 2193, -1000,
	68056, 989, -1000, 942, 2192, -1000, 948, -1000, 3338, 3080,
	2464, 942, 2190, -1000, -1000, -1000, -1000, -1000, 51676, -1000,
	51676, -1000, 51676, -1000, 1507, -1000, 92260, 18, 18, 3235,
	-1000, -1000, -1000, -1000, -1000, 2867, 3337, 3336, 3335, -1000,
	88564, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 201, 2864,
	-1000, -1000, 201, 2860, -1000, 201, 2858, -1000, 75508, -1000,
	-1000, 2139, 2857, -1000, 198, 2855, -1000, -1000, 197, 2852,
	-1000, -1000, -63, 2851, -1000, -1000, 100201, -1000, -1000, -1000,
	-19, -1000, -1000, -1000, 981, -1000, 46018, -1000, 46018, 80626,
	60140, 933, 701, 53070, 100201, -1000, -1000, -1000, -1000, 100201,
	-1000, -1000, -1000, -136, -1000, -1000, 60140, 46984, 100201, -1000,
	-1000, -1000, -1000, 100201, -1000, -1000, -1000, 60140, 67588, -1000,
	80158, 67126, -1000, -1000, 1336, 2353, -1000, -1000, -1000, 933,
	60140, 60140, 60140, -1000, 79690, -1000, -1000, 1891, 1626, 2982,
	1880, 73198, -1000, 1753, -1000, -1000, -1000, 3018, -1000, 2700,
	-1000, 54932, 75046, -1000, 74584, -1000, 74122, -1000, 73198, -1000,
	73198, -1000, 3334, 3333, 3328, -1000, 3327, 2999, -1000, 100201,
	2998, -1000, 3326, 3091, 2699, 100201, -1000, 2848, 1555, 1534,
	88564, -1000, -1000, 88564, -1000, 88564, -1000, -1000, -1000, 1463,
	-1000, -1000, 2247, -1000, -1000, -1000, -1000, 73198, -1000, -1000,
	-1000, -1000, -1000, -1000, 2698, -1000, 1554, -1000, 1749, -1000,
	1331, -1000, -1000, 202, -1000, -1000, -6, -1000, 91798, -1000,
	2301, -1000, 88564, -1000, 2260, 2674, 2697, 1806, 2084, 2325,
	-1000, 33319, 2328, 40807, 2113, 186, -1000, -1000, 186, 186,
	25831, -1000, -1000, 55394, 55394, 19365, 1303, 38347, 38347, 38347,
	38347, 38347, 38347, 38347, 38347, 38347, 38347, 38347, 38347, 38347,
	38347, 38347, 38347, 38347, 38347, 38347, 38347, 38347, 38347, 38347,
	38347, 38347, 38347, 38347, 38347, 38347, 38347, 38347, 38347, 38347,
	38347, 38347, 1963, 38347, 1265, 38347, 38347, 38347, 38347, 1698,
	-1000, -1000, 1819, 546, 1845, -1000, 3240, 3240, 3240, 476,
	476, 10862, 10862, 611, 3324, 781, -1000, 38347, -1000, 128,
	38347, 19843, -1000, 465, 7079, 2278, -1000, 463, 20347, -1000,
	-1000, -1000, 21331, 615, 32815, 38347, 949, 100201, -1000, -1000,
	1271, 3248, 17457, 2646, 2523, 676, 788, 736, 23839, 23335,
	22831, 22327, 659, 38347, 38347, 38347, 38347, 38347, 38347, 38347,
	38347, -1000, -1000, 3262, -1000, 3248, -1000, -1000, -1000, -1000,
	3248, 1302, 1277, 3248, -1000, 3248, 3248, 3117, 3117, 32323,
	31819, 31315, 41299, 30811, 38347, 21823, 30307, 29803, -1000, 88564,
	2, 3198, 38347, 170, -1000, 98761, -1000, 170, 170, 673,
	-28, 100201, 2291, 2291, 45082, 2083, 2024, 2024, 2024, -1000,
	853, 13620, 853, 78762, 2035, 853, 853, 283, 350, 461,
	43196, 2173, 78762, 755, 666, 31, 30, 29, -1000, -1000,
	28, 27, -1000, -1000, 73198, 663, 19843, 19365, 281, 1412,
	-31, 2410, 2405, 2404, -1000, 2399, 1733, -34, 1261, -29,
	-1000, 5672, -37, -1000, 1220, 271, 3248, -1000, -1000, -1000,
	-1000, -1000, 3323, 3322, -1000, 960, 662, 661, 678, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 656, 655, 655,
	655, -1000, 371, 654, 353, 651, 650, 646, -1000, -1000,
	-1000, -1000, 2638, -11, 73660, 852, -39, 1091, -6, -1000,
	-1000, -1000, 60606, 1168, -1000, 1866, -1000, -1000, -1000, -1000,
	-1000, -1000, 1401, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	915, -1000, -1000, -1000, -1000, -1000, -1000, 3251, 3245, 0,
	-1000, -1000, 19365, -1000, -7, 1636, 1661, -1000, 62458, 2204,
	2981, 2969, 1489, -1000, 1424, 3064, 66190, 3130, 3144, 234,
	-1000, 2632, -1000, -1000, 897, 1541, 1656, 1245, 66190, 2059,
	-1000, 55394, -1000, 2406, 3062, 1312, 1319, 1312, 1312, 1281,
	-1000, 66190, 1650, 1238, -1000, 1236, -1000, -9, 3096, 3142,
	114, -1000, 2628, 1232, -1000, -1000, 73198, 19365, 1448, 1421,
	1638, 1229, -2, -1000, 3119, 3109, 1228, 1226, -1000, 1781,
	-1000, 60140, 843, 2486, 843, -3, 57274, 88564, 268, -1000,
	128, 38347, 38347, 128, 38347, 128, 3089, -1000, -1000, 2850,
	-1000, -1000, -1000, 3321, 1889, 2281, -1000, -1000, -1000, 640,
	2186, 2626, 88564, 2396, -4, 73198, -1000, 2849, 2059, 2184,
	-1000, -1000, 66658, -1000, 2847, 567, 3320, -1000, 91336, -1000,
	2991, 1314, 2846, 1051, 1043, 3195, -1000, 1043, 52138, -1000,
	88564, -1000, -1000, 88564, -1000, -1000, -1000, 3314, -1000, 73198,
	-1000, -1000, 73198, -1000, 73198, -1000, 73198, 195, 2843, -1000,
	-1000, 88564, -1000, 73198, 73198, -1000, 88564, 88564, 60140, 60140,
	4536, 61534, -42, -44, 459, -1000, 79228, 88564, 1049, 61996,
	88564, 2942, 933, 46984, -1000, -45, -136, 2484, 933, 933,
	843, -1000, 843, -1000, 73198, 2694, -1000, 933, 933, 933,
	-1000, -1000, -1000, -1000, 3313, 3312, -1000, -1000, -1000, 941,
	73198, 88564, 73198, -1000, -1000, 88564, -1000, 88564, -1000, 941,
	88564, 941, 88564, 941, 88564, -1000, -1000, -1000, -1000, -1000,
	-1000, 128, 38347, -1000, -1000, 3311, 1563, -1000, 2690, -1000,
	2682, -1000, 53, -1000, -1000, -1000, -1000, -1000, 1694, 73198,
	73198, 73198, 73198, 88564, 73198, -1000, 66190, -1000, 2260, 2674,
	-1000, -1000, -1000, -1000, -1000, -1000, 1284, 2062, -1000, 2338,
	-1000, 1461, -1000, -1000, -1000, 100201, 41775, -1000, -1000, 100201,
	1738, -1000, 40315, 39823, -1000, -1000, 1604, 73198, 2419, -1000,
	2419, -127, -1000, 98230, 2329, 73198, -1000, -1000, -1000, -1000,
	-1000, 885, 595, 595, 1179, 1179, 1179, 1179, 3185, 5730,
	4467, 5077, 5827, 5827, 946, 946, 946, 946, 946, 5827,
	874, 476, 476, 874, 874, 874, 874, 874, 476, 476,
	476, 5827, 5827, 5827, 10862, 100396, 7709, 38347, 38347, 1225,
	1813, 546, 6968, 38347, 7801, 7801, 7801, 7801, -1000, 1390,
	-1000, -1000, -1000, -1000, 2614, 638, 41299, 41299, -1000, -1000,
	-1000, -1000, 20839, 38347, -1000, -1000, -1000, -1000, 29299, -1000,
	-1000, 97795, -266, 455, -117, 19, -1000, 38347, 38347, 38347,
	450, -1000, 265, 38347, 88564, -1000, 94730, 752, -79, -1000,
	-52, 1299, -1000, 38347, -1000, -1000, 1215, -1000, 1150, 1148,
	1145, -1000, 636, 448, -1000, 264, -1000, 2014, 634, 633,
	38347, -1000, -1000, -1000, -1000, -1000, 97631, -1000, -1000, 97408,
	-1000, -1000, 97244, -1000, -1000, 97021, -1000, -1000, -1000, 99893,
	94620, 94577, 13034, 4266, 12677, 12330, -53, 447, -61, 444,
	876, 873, 443, 441, 433, -66, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -67, 432, -1000, 2610, -117, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 431, -1000, 429,
	-1000, 99843, -117, 428, 4209, -1000, 41299, 41299, 41299, -1000,
	418, -1000, 98538, -1000, 99535, 28807, 28807, 28807, 415, 99312,
	38347, -117, -68, -1000, -69, -1000, -1000, 515, -76, 952,
	28303, 44146, 19365, -1000, 952, 952, 38347, -1000, 38347, 2371,
	-1000, -1000, -1000, 2361, 1791, 2291, 45082, -1000, -1000, -1000,
	-1000, 78762, -1000, 3235, 2686, -1000, 78762, -1000, -1000, 88564,
	517, -1000, 78762, 78762, 19365, 853, -1000, 853, 78762, 612,
	-1000, -1000, -1000, -1000, -1000, 409, 48878, 19, 203, 19365,
	933, -1000, 2415, 2415, 2415, 2415, -1000, -1000, 88564, 3217,
	-1000, 1943, -1000, 55394, -1000, 778, 1134, 19365, -1000, -1000,
	-1000, 632, -1000, 3248, 3248, -1000, 3248, 88564, 156, 27811,
	-1000, 1168, -1000, -1000, 1449, -1000, 1904, -1000, 1273, -1000,
	-1000, -1000, -1000, 27811, -1000, 2078, 88564, 88564, 73198, -1000,
	88564, -1000, 2177, 90874, 2175, 55394, 88564, -1000, -1000, 628,
	626, 2323, 2310, 1046, 88564, 88564, 2309, 90412, 89950, 88564,
	1946, 38347, 2032, 1944, 128, 128, -1000, -1000, 128, 624,
	1214, 73198, 73198, 88564, 73198, 1598, -1000, -1000, -1000, -1000,
	-1000, 65728, -1000, -1000, 3261, 3258, -1000, 1312, -1000, -1000,
	-1000, 1312, 2059, 1564, 88564, 73198, 88564, 1961, 128, 128,
	-1000, -1000, 128, 623, 19365, 1862, -1000, 2680, 88564, 3280,
	88564, 88564, 88564, 56812, 3002, 89488, 88564, 88564, 56812, 1781,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 56346, 1056, 942,
	940, 46984, 2469, -1000, -1000, 16981, -1000, 100201, 100201, -1000,
	100201, -1000, 54470, 88564, -1000, 988, 88564, 61996, 913, 2842,
	51214, -11, 933, 60140, 73198, -4, 88564, -1000, 2059, 2841,
	517, 2171, -1000, -1000, 60140, 621, 3310, 3309, -1000, 2088,
	2168, -1000, -1000, 89026, 2802, 810, 88564, 952, 45082, 1926,
	-1000, 49346, 1013, 88564, 1783, 155, -1000, -1000, -1000, 52,
	88564, -1000, 3308, -1000, -1000, 201, 201, 201, -1000, 73198,
	73198, 2139, -1000, 198, -1000, 197, -1000, -63, -1000, -1000,
	4536, 4536, 933, -146, 618, -1000, 838, 837, 47460, 60140,
	-82, -1000, -1000, -1000, -1000, -1000, 73198, 88564, 713, 2448,
	88564, -83, -1000, 199, 617, -1000, -1000, -1000, 933, 46984,
	2608, -1000, -1000, 947, -1000, 1320, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 17, -11, -11, -1000, 941,
	-1000, 941, -1000, 941, -1000, 100201, -1000, -1000, 1535, 1533,
	88564, -1000, 19365, 88564, 73198, 19365, 73198, 2615, 2581, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1063, -1000, 1738,
	2058, -1000, 615, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2226, -1000, -5, 25831, 2136, -1000, -1000, 73198,
	14, 38347, 38347, 6396, 5128, 38347, 41299, 41299, -1000, 38347,
	5068, -1000, -1000, -1000, -1000, -1000, 2590, 614, 38347, 55394,
	6080, 5104, -1000, 408, 11819, 874, -1000, 38347, -1000, 407,
	27319, -1000, 98925, 4, -89, -1000, 14109, -117, -90, -1000,
	-1000, 777, -1000, 2891, -1000, 38347, 99148, 2189, 1740, 1798,
	1546, 3248, 3279, 16505, -1000, 52604, 954, 2042, 96857, -1000,
	-1000, -1000, -1000, 55394, 55394, 38347, 38347, -1000, 38347, 38347,
	38347, -1000, -1000, -1000, 3248, 916, -1000, -1000, -1000, 916,
	-1000, -1000, 1312, -1000, 1312, -1000, 38347, -1000, -1000, 2587,
	38347, -1000, 55394, 55394, 41299, 41299, 41299, 41299, 41299, 41299,
	41299, 41299, 41299, 41299, 41299, 41299, 41299, 41299, 41299, 41299,
	41299, 41299, 41299, 2320, 41299, 3237, 3237, 3237, -1000, 2580,
	2587, 38347, 38347, 55394, 406, 405, 404, -1000, 38347, -117,
	-1000, -1000, 4536, 604, -1000, 2203, -1000, 2522, -1000, 38347,
	-1000, -128, -1000, 2173, -1000, -1000, 2522, 2522, -91, 100201,
	45082, 45082, -1000, 601, 38347, 2356, -1000, -1000, 750, -256,
	-1000, 826, -1000, -1000, -1000, -1000, -1000, 517, -1000, -1000,
	-1000, 187, 78762, 78762, 749, -1000, -99, -1000, -1000, -102,
	-1000, 3190, 401, 19365, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -11, 2052, 3278, -1000, 3257, 773, 745, 171,
	3248, 398, 395, 394, -11, 88564, -1000, -6, -1000, -1000,
	-1000, 38347, -1000, -1000, 2980, 1138, 1136, -1000, -1000, 2836,
	-1000, 2163, -1000, 1017, -1000, 1654, -1000, 38347, 38347, 594,
	593, 3306, 1892, 3304, 1047, 2835, 2139, 2834, 2139, -1000,
	-1000, 860, -1000, 100201, 585, 584, -1000, -7, 1597, 1635,
	944, -1000, -1000, 38347, 38347, 78300, -1000, 416, 2977, 13,
	-1000, -1000, 1603, 1132, -1000, -1000, -1000, -1000, 2059, 1590,
	1131, -1000, -1000, -1000, -1000, 943, -1000, -1000, 38347, -1000,
	-9, 1130, 3113, 2160, 73198, 1129, -1000, 1127, -1000, -1000,
	-1000, -1000, -1000, -1000, 3099, 2139, 2826, 1307, -1000, -1000,
	-1000, -1000, -1000, 55870, -1000, -1000, 2080, 843, 940, 2579,
	-1000, 1121, 3302, 73198, 3301, 391, -104, -10, 55394, 3158,
	2102, 586, 73198, 881, -1000, 3235, -1000, -1000, -1000, -1000,
	73198, 3155, 2818, 942, 3277, -1000, -1000, 73198, 2815, 2087,
	2159, 2263, 810, 61072, -1000, 942, 2038, -62, -1000, 1783,
	26815, 2974, -105, -1000, -1000, -1000, 952, 52138, 45082, 38347,
	3300, -107, -1000, -1000, -1000, -1000, -1000, 195, -1000, -1000,
	-1000, -1000, -1000, -1000, 77372, 77372, 60140, 60140, 60140, 933,
	88564, 88564, 61996, -1000, 583, 88564, 88564, 582, -1000, 88564,
	88564, 3299, 60140, -1000, -136, 128, -1000, 2050, 73198, 16029,
	-1000, -1000, -1000, -1000, -1000, 941, -1000, -1000, 1967, 2111,
	1967, 1760, 1757, -1000, 2056, -1000, -1000, -1000, -1000, 2368,
	2995, 19365, 3094, 7801, 38347, 38347, 328, 4303, 548, 7801,
	38347, 38347, 55394, 5034, -112, 38347, 38347, -1000, 38347, 737,
	100201, 3275, 38347, 388, 387, -1000, -1000, -1000, 3238, -1000,
	-1000, -1000, 100201, 38347, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 384, -1000, 157, -1000, -1000, -1000, 94108, -1000, 38347,
	383, 3054, -1000, 380, 379, 10212, 232, 96634, 96470, 96247,
	376, -1000, -1000, 375, 373, 100201, 2580, 100201, -1000, -1000,
	851, 851, 1259, 1259, 1259, 1259, 3237, 906, 969, 315,
	286, 286, 286, 346, 511, 511, 286, 286, 286, 2566,
	2294, 579, 5392, -1000, -1000, 100201, 100201, 372, -1000, -1000,
	-1000, -117, 369, 4536, -1000, 2516, 3049, 100201, -1000, 45082,
	2516, 2516, -1000, -1000, 1791, 88564, 100201, 45082, -1000, 2686,
	-1000, 14596, -1000, 19365, -1000, -1000, -1000, -1000, 3235, -1000,
	48878, -1000, 578, -1000, 129, -1000, -1000, 660, 3296, 762,
	19365, 368, -1000, -1000, -1000, -11, 100201, 88564, 88564, 88564,
	2804, -1000, 4466, -1000, 1046, 96083, -114, -1000, 98230, 38347,
	88564, -1000, -1000, 1784, 2346, 1078, -1000, 3020, 88564, -1000,
	88564, -1000, -1000, 88564, 88564, 73198, 88564, 2762, -115, 100201,
	-14, -1000, 818, -1000, 1283, -1000, 15553, 88564, 73198, 88564,
	73198, 2707, -125, 19365, -1000, 3274, 3273, 2803, 3026, 3272,
	88564, -1000, 88564, 73198, 2940, -1000, -1000, -40, 576, -1000,
	817, -1000, -1000, 816, 940, -1000, 60140, 46984, -1000, 517,
	-1000, 2438, -1000, 76438, 2108, 128, -1000, 77838, 3295, 574,
	-1000, 2049, -1000, 596, 2059, 128, 73198, -1000, 364, -54,
	-1000, 1033, 19365, 73198, 2796, 2274, 810, 61072, -1000, 1314,
	2325, -1000, -55, -1000, 580, 128, 2038, -1000, -62, 100201,
	-1000, 815, -1000, -1000, -126, -1000, -1000, 361, -1000, 2939,
	2933, -1000, 2536, 38347, 571, 561, 88564, 2932, -1000, -1000,
	-131, 933, -1000, 2201, -1000, -1000, -1000, -1000, -1000, 19365,
	1524, -1000, 560, 559, -1000, -1000, -1000, -1000, 2995, 7801,
	7801, 38347, 38347, 38347, 7801, 5034, -133, -1000, 7801, 7801,
	-117, -1000, -1000, 98925, -1000, -1000, -1000, 100201, -1000, 15077,
	1983, -1000, 95860, -1000, 25831, -1000, -1000, 38347, 38347, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 41299, 2563, 558,
	55394, -1000, -1000, 355, 918, 38347, 38347, 2173, 918, 918,
	-1000, -134, -1000, -1000, -1000, 3235, 129, -1000, -1000, 3293,
	19365, 760, -1000, 3292, -1000, -1000, -1000, -1000, -1000, 88564,
	-1000, 88564, -1000, 19365, 88564, 2533, 2147, -1000, -1000, 2308,
	555, 41299, 73198, 859, -1000, 3211, 2518, 1810, 38347, 2136,
	-139, -141, 2142, -1000, -1000, 2140, 38347, -1000, 55394, 554,
	2139, 2139, -149, -155, -1000, -1000, 38347, 1117, 88564, 26323,
	-1000, 3291, 2977, -1000, -1000, -1000, -1000, 38347, 1115, -1000,
	-1000, -1000, 3271, 2139, 19365, -1000, 2139, 2139, 3026, 1055,
	2182, 2182, 60140, 46984, -1000, -63, 940, 3152, 1961, 2481,
	-1000, -1000, -1000, -1000, 2299, -1000, -1000, 88564, 2296, 934,
	-157, -1000, 814, 811, -1000, 61996, 913, 896, -1000, -1000,
	-1000, 517, -1000, 3268, 551, 88564, 2085, 550, 19365, -1000,
	810, 61072, -1000, 2802, 1783, -1000, 2899, 88564, 2968, -1000,
	2325, 546, -1000, 933, 545, 535, 2297, 2297, -160, 38347,
	38347, -163, 533, 933, -1000, -78, -1000, 830, 823, -1000,
	-1000, 73198, 73198, 38347, 38347, -1000, 7801, 7801, 7801, -1000,
	354, -1000, -1000, 2038, 3046, -1000, -96, 95696, 95473, 503,
	41299, 55394, -171, -1000, -1000, 88564, 100201, -117, -1000, -1000,
	-1000, 549, -1000, 3290, -1000, -1000, 1768, -1000, -1000, -1000,
	88564, 2155, -1000, 1044, 38347, 5392, 532, 38347, -1000, 3151,
	-1000, 2435, 2577, 2438, 528, -1000, -1000, -1000, -1000, -1000,
	1023, 1846, -1000, -1000, 100201, 3026, 38347, -1000, -1000, 527,
	524, 100201, 522, 808, 2547, -1000, -1000, -1000, 100201, 521,
	3113, -1000, -1000, -1000, -1000, 2139, 73198, -1000, -172, -1000,
	-1000, 1864, 128, 913, -1000, 2006, 2108, 519, -1000, -1000,
	2069, 2357, -1000, 77838, 42727, 42727, 351, 3150, 896, -1000,
	3236, -1000, 3149, -1000, 38347, -1000, 73198, 38347, 2082, 61072,
	-1000, 2263, -1000, 1244, -173, 88564, 1783, -1000, -1000, 60140,
	60140, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1023, -174, -179, -1000, 60140, -1000, 2201, -1000,
	88564, -1000, 88564, -1000, -1000, -187, -189, -1000, 2041, 38347,
	25831, -1000, -1000, 503, -190, -1000, -101, -1000, 3148, -1000,
	-1000, -1000, -1000, 2779, 2514, 95165, 2202, 88564, 95115, -1000,
	2570, -1000, -1000, 1961, 88564, 2438, 2505, 73198, 1039, -195,
	1967, 1967, 38347, 25339, 2004, 38347, -1000, -1000, 3026, -1000,
	2538, 2539, -1000, 2069, 73198, 88564, -1000, 3008, -1000, 2931,
	-1000, -1000, -1000, 2438, 128, -1000, -1000, 128, -197, 1033,
	-198, 73198, -1000, 2274, 1488, -1000, 952, -1000, -1000, -200,
	-205, 1810, 1023, 952, -208, -1000, -213, -214, -1000, -1000,
	344, 39331, 39331, 39331, -117, -127, -1000, 88564, 518, 2722,
	939, -1000, 2072, 1730, 329, 1021, -1000, -1000, 2518, -215,
	-1000, 936, 517, -1000, 38347, 1023, -220, -1000, 1007, -221,
	-1000, 1006, -222, -1000, 2541, -1000, -223, 2139, 935, 3088,
	-1000, -1000, -1000, -1000, -1000, 516, -228, -1000, -1000, 2180,
	-1000, 1961, 934, -1000, 1023, 510, 1810, 509, -1000, 52138,
	-1000, 933, 933, 2438, 1810, -1000, 933, -1000, -1000, -1000,
	2710, -1000, 42251, 2086, 1747, 98149, 2710, 2710, -1000, -1000,
	88564, 3079, -1000, 2079, 2075, 1395, -1000, -1000, -1000, -1000,
	-1000, -1000, 952, -1000, 3076, 2202, 100201, 2438, -1000, 1967,
	2476, -1000, 1967, 2537, -1000, 1999, -1000, -1000, -1000, 2767,
	3234, 88564, -1000, 88564, 1712, 1691, 3287, 913, 2069, 1810,
	38347, 2438, 38347, -203, -1000, -1000, 1961, 2438, -1000, -1000,
	1754, 3147, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	805, -1000, 2911, -1000, 1062, 1947, 1947, -1000, 801, 2072,
	-1000, -1000, 490, -1000, 489, -1000, 1678, -1000, -1000, -230,
	-1000, -1000, 3286, -1000, 2069, -1000, 2438, -231, 1961, -233,
	-1000, 952, 1961, 1687, -1000, -1000, 2033, 38839, 38347, -1000,
	3220, -1000, -1000, 2321, -1000, 38347, 2518, 38347, 38347, 2045,
	2101, -1000, -1000, 1961, 1023, 952, 1810, -1000, 952, -1000,
	-1000, -1000, 100201, -1000, -1000, -1000, 100201, -1000, -238, -241,
	50748, -1000, -1000, -1000, 952, 1810, -1000, 2438, -1000, 1961,
	1096, -146, 77372, -1000, 2438, 1961, -1000, 481, -246, 1961,
	952, 38347, -1000, 952, -1000, -247, -1000, 1961, -1000,
}
var sqlPgo = [...]int{

	0, 4046, 4044, 4043, 4042, 4041, 4040, 4039, 4034, 4033,
	4032, 4031, 4030, 4029, 4028, 4025, 4024, 4021, 4019, 4016,
	4015, 4013, 4004, 4002, 4000, 3998, 3996, 3993, 3992, 3990,
	3989, 3983, 3977, 3976, 3971, 3970, 3967, 3963, 3962, 3961,
	3960, 3959, 3956, 3955, 3952, 3950, 3949, 3944, 3943, 3942,
	3941, 3940, 38, 3939, 3938, 3936, 3935, 3934, 3932, 3931,
	3930, 3929, 3927, 3926, 3925, 3923, 3922, 3921, 3912, 3911,
	3909, 42, 3904, 236, 3903, 3900, 3899, 3898, 3896, 3894,
	3890, 3889, 3886, 3885, 3879, 3877, 235, 3876, 140, 3873,
	3872, 3871, 3870, 3869, 233, 3867, 3866, 3865, 3864, 242,
	3863, 3861, 3860, 3857, 3856, 3855, 3854, 3853, 3851, 61,
	118, 3849, 180, 3848, 3847, 3844, 3842, 3841, 3840, 3837,
	3835, 3832, 3831, 205, 3829, 232, 3828, 3826, 3824, 3821,
	3820, 3819, 3818, 3817, 3816, 3815, 3813, 3810, 3808, 3807,
	3803, 3799, 3798, 3796, 3795, 3794, 3789, 3786, 3784, 3783,
	3782, 3779, 3777, 3776, 3773, 3769, 3768, 240, 181, 3766,
	3765, 228, 226, 3763, 3762, 3761, 3759, 3754, 99, 7,
	80, 3753, 3752, 62, 63, 77, 120, 46, 3751, 16,
	149, 214, 7923, 194, 3749, 3748, 3744, 211, 160, 3743,
	199, 3742, 3740, 3739, 3738, 79, 66, 148, 143, 127,
	147, 350, 3737, 3734, 76, 52, 40, 31, 3733, 3732,
	3730, 2867, 124, 3729, 222, 202, 128, 3725, 3723, 3722,
	2088, 3721, 41, 3717, 162, 56, 122, 32, 113, 3713,
	125, 27, 3710, 141, 48, 3709, 114, 78, 81, 7276,
	7517, 3706, 93, 53, 82, 51, 142, 139, 165, 90,
	164, 179, 172, 130, 155, 3705, 208, 3702, 3139, 72,
	121, 3701, 3700, 3699, 55, 161, 83, 3697, 3696, 49,
	8, 4, 1, 138, 14, 95, 19, 3695, 12, 3693,
	3692, 3691, 3690, 25, 116, 3689, 239, 3686, 87, 37,
	17, 3684, 18, 178, 3683, 187, 102, 3682, 3680, 219,
	170, 157, 3672, 74, 191, 3669, 3668, 3667, 3664, 3663,
	104, 29, 100, 3659, 3658, 109, 201, 166, 3657, 45,
	3655, 134, 86, 106, 237, 97, 190, 96, 185, 153,
	196, 3654, 3652, 3650, 154, 3633, 3626, 183, 156, 3625,
	3624, 169, 238, 33, 60, 195, 58, 159, 137, 3623,
	168, 3622, 3616, 3614, 241, 150, 173, 2, 9, 71,
	126, 30, 13, 198, 110, 269, 88, 3611, 4067, 1346,
	65, 47, 3605, 129, 98, 54, 91, 112, 224, 94,
	3601, 3600, 384, 3599, 3597, 3594, 3593, 145, 3592, 3591,
	3589, 107, 111, 184, 3588, 67, 69, 11, 119, 206,
	227, 89, 186, 167, 220, 3586, 151, 3585, 39, 103,
	3583, 163, 213, 3580, 3578, 218, 3577, 115, 735, 43,
	146, 3568, 182, 3559, 3557, 3555, 3552, 3545, 3544, 3542,
	614, 193, 3540, 3538, 3536, 131, 158, 3535, 223, 136,
	175, 75, 34, 3534, 70, 946, 3533, 197, 216, 44,
	3531, 543, 35, 0, 9866, 8431, 6310, 9090, 3530, 3094,
	3528, 3527, 3525, 171, 105, 3523, 3521, 3517, 84, 3516,
	57, 3515, 3513, 50, 3512, 15, 6, 10, 21, 22,
	2046, 1936, 3504, 3500, 85, 101, 132, 3499, 229, 189,
	3498, 3497, 3496, 3495, 73, 3494, 28, 3493, 26, 3491,
	3490, 36, 5, 23, 3489, 3488, 200, 3485, 203, 3483,
	117, 3482, 3125, 108, 3479, 3477, 221, 64, 3476, 215,
	3474, 3063, 3472, 3471, 20, 3470, 3467, 204, 144, 177,
	3464, 123, 3463, 135, 3462, 3457, 3456, 212, 3455, 3454,
	24, 3452, 3, 3450, 3449, 176, 2947, 3447, 3441, 59,
	3440, 152,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 11, 11, 7, 7, 7, 8, 8, 8,
	8, 39, 39, 9, 9, 9, 10, 10, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 16, 16, 28,
	28, 17, 17, 30, 30, 18, 18, 31, 31, 516,
	516, 21, 33, 22, 34, 15, 517, 517, 517, 517,
	27, 23, 35, 25, 25, 25, 25, 25, 171, 171,
	171, 171, 20, 20, 29, 29, 198, 198, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	515, 515, 200, 200, 199, 194, 194, 518, 518, 201,
	201, 201, 203, 203, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 419, 419, 419, 531, 531, 531, 532,
	532, 533, 533, 533, 533, 533, 41, 41, 41, 41,
	510, 510, 173, 173, 173, 175, 175, 174, 174, 174,
	174, 62, 62, 523, 523, 524, 524, 522, 522, 525,
	525, 525, 172, 172, 172, 108, 108, 108, 108, 109,
	109, 110, 110, 176, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 90, 90, 451, 451, 452, 452, 167,
	167, 168, 168, 168, 168, 169, 169, 170, 170, 170,
	55, 43, 43, 43, 43, 43, 43, 43, 44, 44,
	44, 44, 44, 45, 45, 45, 45, 45, 45, 46,
	46, 46, 46, 46, 46, 53, 53, 53, 53, 158,
	158, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	535, 535, 536, 536, 537, 537, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 68, 68, 285, 285, 257, 257, 69, 69,
	69, 70, 70, 71, 71, 57, 57, 508, 508, 300,
	300, 410, 410, 73, 73, 320, 320, 74, 74, 74,
	74, 74, 74, 75, 75, 75, 75, 75, 75, 75,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 83, 83, 83, 84, 84, 84,
	81, 81, 81, 78, 78, 78, 77, 77, 77, 82,
	82, 82, 248, 248, 80, 80, 80, 250, 250, 79,
	79, 79, 301, 301, 85, 85, 85, 85, 258, 86,
	86, 86, 86, 86, 86, 86, 86, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	412, 412, 87, 87, 87, 380, 380, 91, 91, 91,
	335, 335, 92, 92, 92, 92, 92, 93, 93, 93,
	93, 111, 111, 111, 111, 512, 512, 293, 293, 214,
	214, 214, 214, 101, 101, 101, 101, 102, 102, 102,
	103, 103, 163, 163, 117, 117, 117, 117, 117, 116,
	116, 116, 116, 116, 116, 47, 47, 47, 48, 48,
	49, 49, 50, 50, 51, 51, 52, 52, 52, 52,
	52, 119, 119, 528, 528, 121, 118, 118, 118, 120,
	120, 120, 120, 122, 123, 123, 123, 123, 123, 123,
	123, 123, 124, 124, 444, 444, 309, 309, 442, 442,
	460, 460, 443, 443, 262, 262, 262, 262, 262, 263,
	263, 263, 450, 450, 450, 450, 450, 450, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 164, 164,
	165, 166, 166, 166, 166, 145, 145, 145, 157, 157,
	157, 157, 157, 157, 157, 148, 148, 148, 135, 135,
	126, 126, 126, 126, 126, 130, 130, 130, 130, 130,
	130, 130, 130, 127, 127, 137, 137, 137, 137, 137,
	131, 131, 132, 132, 134, 134, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 128, 128, 128, 128, 139,
	139, 139, 139, 342, 342, 342, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 156, 156, 156,
	156, 156, 156, 526, 526, 527, 527, 152, 152, 152,
	152, 152, 152, 394, 394, 146, 146, 146, 146, 151,
	151, 151, 151, 325, 325, 143, 143, 143, 144, 144,
	144, 149, 149, 150, 147, 147, 153, 153, 153, 153,
	129, 129, 129, 539, 539, 539, 154, 154, 142, 142,
	155, 155, 155, 155, 155, 155, 155, 155, 141, 141,
	141, 140, 140, 140, 140, 133, 509, 509, 506, 506,
	506, 506, 506, 506, 506, 506, 507, 507, 511, 511,
	96, 96, 96, 96, 96, 104, 104, 104, 104, 104,
	97, 97, 97, 97, 97, 99, 99, 98, 98, 98,
	98, 63, 63, 63, 14, 14, 14, 64, 64, 179,
	179, 179, 179, 270, 270, 270, 270, 177, 177, 178,
	178, 65, 65, 540, 540, 540, 519, 519, 519, 520,
	520, 520, 520, 520, 520, 264, 264, 265, 265, 360,
	360, 360, 360, 360, 268, 268, 268, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 271, 271, 202, 202,
	202, 274, 275, 275, 272, 272, 273, 273, 273, 277,
	277, 276, 279, 279, 278, 359, 469, 469, 471, 471,
	471, 471, 471, 471, 471, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 541, 541, 467, 467,
	467, 468, 463, 463, 464, 464, 464, 464, 464, 266,
	266, 267, 267, 267, 267, 465, 466, 291, 291, 397,
	470, 470, 472, 472, 474, 542, 542, 542, 542, 542,
	542, 543, 543, 543, 358, 358, 357, 357, 283, 283,
	475, 475, 475, 475, 476, 476, 476, 476, 476, 479,
	478, 477, 477, 477, 477, 477, 67, 67, 67, 322,
	322, 321, 321, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 160, 160,
	217, 217, 61, 61, 61, 12, 12, 12, 521, 521,
	521, 66, 66, 66, 66, 216, 216, 216, 216, 216,
	216, 514, 514, 513, 513, 218, 218, 545, 545, 72,
	72, 72, 72, 72, 72, 72, 413, 413, 414, 414,
	60, 60, 60, 60, 60, 343, 343, 341, 341, 340,
	340, 290, 290, 396, 222, 222, 195, 195, 195, 26,
	19, 19, 24, 24, 37, 37, 40, 40, 36, 36,
	38, 38, 32, 32, 529, 529, 530, 530, 100, 100,
	105, 105, 105, 105, 105, 106, 106, 106, 106, 107,
	107, 107, 107, 115, 115, 159, 159, 159, 159, 159,
	159, 159, 42, 42, 42, 42, 54, 54, 54, 54,
	113, 547, 547, 547, 114, 114, 114, 546, 546, 215,
	215, 354, 354, 355, 355, 548, 548, 356, 356, 356,
	356, 209, 208, 210, 210, 59, 59, 59, 204, 204,
	205, 205, 206, 206, 207, 207, 549, 549, 94, 94,
	94, 162, 162, 256, 256, 256, 350, 350, 350, 284,
	284, 228, 228, 353, 353, 351, 351, 351, 351, 319,
	319, 319, 161, 161, 298, 298, 311, 311, 312, 312,
	407, 407, 313, 112, 112, 182, 182, 180, 180, 180,
	180, 180, 180, 180, 180, 187, 187, 188, 188, 189,
	189, 190, 191, 191, 191, 191, 302, 302, 192, 192,
	192, 181, 181, 181, 183, 183, 183, 183, 183, 183,
	183, 186, 186, 186, 186, 193, 193, 193, 185, 185,
	486, 486, 486, 488, 488, 490, 490, 489, 489, 485,
	485, 487, 487, 544, 544, 324, 324, 324, 281, 282,
	280, 280, 288, 288, 286, 287, 287, 289, 289, 395,
	395, 395, 196, 196, 196, 316, 316, 316, 316, 317,
	317, 346, 346, 344, 344, 344, 344, 345, 345, 347,
	347, 347, 348, 348, 349, 349, 315, 315, 376, 376,
	184, 184, 184, 295, 295, 295, 296, 296, 366, 366,
	366, 366, 366, 366, 367, 367, 365, 365, 365, 365,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 399,
	400, 400, 297, 297, 401, 352, 352, 504, 504, 504,
	505, 505, 393, 393, 402, 402, 402, 402, 402, 402,
	391, 391, 392, 392, 408, 409, 409, 328, 328, 328,
	328, 326, 326, 329, 329, 329, 329, 327, 327, 403,
	403, 403, 403, 318, 318, 404, 404, 404, 404, 405,
	361, 362, 362, 415, 415, 415, 415, 417, 294, 294,
	294, 294, 294, 462, 461, 461, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 431, 431, 431, 431, 431,
	431, 431, 431, 432, 432, 432, 432, 432, 432, 418,
	418, 418, 418, 418, 422, 422, 422, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 423, 423,
	428, 428, 429, 429, 429, 424, 425, 430, 430, 430,
	430, 550, 550, 434, 434, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 420, 420, 420, 427, 427, 427,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 336, 336, 338, 338, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 370, 370, 370, 370, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 480, 480, 480, 480, 480, 480, 480,
	480, 372, 372, 483, 483, 484, 484, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 491, 491, 492, 492,
	494, 494, 495, 495, 496, 497, 497, 497, 498, 499,
	499, 493, 493, 500, 500, 500, 500, 501, 501, 502,
	502, 502, 502, 502, 503, 503, 503, 503, 503, 382,
	382, 383, 383, 389, 389, 389, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 219, 219, 219, 219, 219, 307, 307, 305,
	305, 305, 308, 308, 306, 306, 304, 304, 303, 303,
	379, 379, 377, 377, 381, 381, 330, 330, 433, 433,
	433, 433, 433, 433, 433, 433, 331, 331, 331, 339,
	332, 332, 333, 333, 333, 333, 333, 373, 374, 334,
	334, 334, 375, 375, 384, 388, 388, 387, 386, 386,
	385, 385, 363, 363, 364, 364, 314, 314, 551, 551,
	310, 310, 406, 406, 406, 406, 260, 260, 299, 299,
	259, 259, 251, 251, 252, 252, 252, 252, 292, 292,
	390, 390, 435, 435, 436, 436, 437, 437, 438, 438,
	439, 440, 441, 378, 378, 238, 237, 225, 226, 236,
	235, 234, 224, 227, 231, 232, 233, 229, 230, 244,
	243, 242, 249, 240, 241, 411, 223, 253, 253, 254,
	254, 254, 255, 255, 255, 255, 220, 220, 221, 221,
	245, 245, 246, 247, 247, 239, 239, 239, 211, 211,
	211, 212, 212, 213, 213, 449, 449, 446, 446, 446,
	447, 447, 447, 448, 448, 448, 448, 445, 445, 445,
	445, 445, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 454, 454, 455,
	455, 455, 455, 455, 455, 455, 455, 455, 455, 455,
	455, 455, 455, 455, 455, 455, 456, 458, 458, 458,
	458, 458, 458, 458, 458, 458, 458, 458, 458, 458,
	458, 458, 458, 458, 458, 458, 458, 458, 458, 458,
	458, 458, 458, 458, 458, 458, 458, 458, 458, 458,
	458, 458, 458, 458, 458, 458, 458, 458, 458, 458,
	458, 458, 458, 458, 458, 458, 458, 458, 458, 458,
	458, 458, 458, 458, 458, 458, 458, 458, 458, 458,
	458, 458, 458, 458, 458, 458, 458, 458, 458, 458,
	458, 458, 458, 458, 458, 458, 458, 459, 459,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 3, 1, 1, 1,
	3, 4, 6, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 5, 5, 6, 6, 4, 4, 4, 4, 3,
	4, 4, 4, 7, 7, 9, 8, 9, 5, 3,
	5, 7, 4, 12, 4, 12, 1, 3, 5, 5,
	2, 5, 3, 6, 4, 6, 5, 6, 6, 4,
	8, 3, 4, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 8, 6, 6, 6,
	9, 4, 3, 2, 2, 0, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 6, 8, 7, 2,
	0, 1, 2, 5, 0, 1, 3, 3, 1, 1,
	3, 12, 3, 1, 0, 1, 1, 2, 2, 3,
	3, 0, 5, 7, 0, 5, 6, 8, 2, 1,
	3, 1, 3, 1, 6, 4, 9, 7, 12, 12,
	12, 9, 2, 7, 2, 1, 1, 1, 3, 3,
	0, 3, 1, 3, 1, 1, 3, 2, 5, 0,
	6, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	3, 3, 4, 3, 4, 7, 4, 4, 4, 3,
	5, 7, 4, 3, 3, 4, 3, 3, 3, 3,
	2, 0, 1, 0, 1, 0, 3, 3, 3, 3,
	3, 6, 4, 4, 4, 3, 5, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 1, 2, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 9, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 6, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 3, 4, 6, 3, 1, 3, 3,
	5, 3, 1, 3, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 3, 5, 7, 2, 3, 0, 3, 5, 2,
	3, 0, 2, 3, 2, 3, 2, 6, 4, 7,
	2, 6, 4, 7, 2, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 1, 1, 5, 3, 2, 6, 3,
	3, 4, 4, 3, 1, 3, 2, 3, 3, 1,
	3, 1, 2, 1, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 2, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 2,
	1, 3, 3, 3, 3, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 5, 5, 5, 3, 4, 4, 3, 4, 4,
	3, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 2, 3, 4, 3, 5, 3, 6, 5,
	6, 3, 5, 6, 3, 4, 3, 4, 3, 3,
	4, 4, 5, 0, 1, 1, 3, 2, 4, 3,
	3, 5, 3, 4, 3, 5, 3, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 5, 4, 6,
	4, 6, 4, 1, 0, 3, 4, 4, 5, 7,
	5, 3, 3, 2, 0, 4, 2, 3, 4, 2,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	3, 4, 3, 1, 1, 1, 2, 3, 2, 3,
	6, 6, 7, 9, 7, 9, 3, 4, 10, 10,
	3, 5, 5, 5, 3, 5, 2, 0, 1, 1,
	1, 1, 3, 2, 2, 2, 2, 1, 2, 0,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 6, 3, 6, 6, 3, 11, 14, 0,
	2, 4, 3, 0, 4, 5, 4, 3, 3, 1,
	3, 10, 13, 0, 2, 3, 1, 1, 0, 1,
	2, 2, 2, 2, 1, 1, 0, 1, 3, 1,
	1, 1, 1, 3, 3, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 8, 0, 1, 1,
	0, 2, 1, 0, 1, 0, 9, 9, 3, 1,
	3, 7, 1, 3, 11, 3, 2, 0, 3, 1,
	2, 2, 3, 2, 6, 2, 1, 1, 2, 8,
	4, 2, 5, 5, 5, 2, 1, 3, 10, 11,
	7, 5, 3, 1, 5, 9, 7, 11, 3, 3,
	0, 2, 4, 3, 3, 1, 5, 1, 3, 1,
	2, 0, 1, 2, 2, 0, 1, 3, 3, 2,
	2, 1, 1, 1, 4, 0, 6, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 4, 2,
	2, 2, 4, 7, 3, 4, 6, 3, 1, 1,
	1, 8, 10, 11, 5, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 3, 0, 1, 8,
	3, 6, 6, 5, 3, 4, 1, 0, 1, 3,
	16, 19, 15, 18, 4, 2, 0, 1, 0, 1,
	0, 1, 3, 3, 2, 0, 1, 1, 0, 6,
	6, 8, 6, 8, 6, 8, 6, 8, 6, 8,
	6, 8, 6, 8, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 2, 3, 2, 2, 8, 11, 3, 3, 0,
	3, 0, 3, 0, 3, 0, 1, 0, 6, 7,
	3, 6, 3, 1, 3, 1, 1, 4, 2, 1,
	3, 1, 3, 8, 5, 3, 4, 3, 0, 2,
	2, 0, 10, 3, 2, 0, 1, 3, 1, 1,
	3, 3, 5, 1, 1, 3, 3, 1, 2, 4,
	4, 2, 3, 5, 5, 1, 3, 1, 0, 1,
	2, 3, 2, 4, 2, 3, 0, 2, 0, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 8, 8, 8, 2, 4, 4, 4, 2, 2,
	2, 2, 3, 1, 3, 1, 2, 6, 7, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 3, 3, 5, 1, 3, 3,
	4, 5, 2, 2, 0, 2, 2, 1, 1, 1,
	0, 1, 0, 2, 2, 5, 4, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 2, 0,
	4, 2, 5, 3, 2, 0, 1, 3, 3, 5,
	1, 1, 1, 1, 1, 3, 2, 4, 4, 0,
	4, 4, 3, 4, 1, 5, 3, 4, 5, 5,
	1, 5, 1, 3, 2, 0, 3, 0, 2, 3,
	1, 3, 2, 0, 3, 5, 6, 4, 6, 4,
	3, 2, 1, 0, 5, 1, 0, 2, 2, 2,
	1, 1, 0, 1, 1, 1, 0, 4, 2, 1,
	2, 2, 4, 1, 3, 1, 2, 3, 2, 2,
	2, 1, 0, 2, 5, 7, 2, 1, 2, 4,
	3, 5, 0, 1, 3, 5, 1, 2, 1, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 6, 6, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 3, 0,
	5, 4, 1, 2, 1, 4, 1, 1, 2, 1,
	1, 1, 1, 1, 0, 1, 2, 5, 1, 4,
	2, 5, 1, 4, 3, 3, 0, 1, 2, 4,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 1, 0, 1, 4, 1, 3, 3,
	3, 5, 2, 2, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	5, 6, 6, 7, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	2, 1, 5, 5, 6, 3, 1, 1, 1, 2,
	2, 2, 4, 3, 5, 6, 8, 6, 5, 4,
	3, 2, 2, 4, 1, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	6, 8, 8, 6, 4, 6, 6, 6, 4, 1,
	3, 3, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 1,
	2, 3, 2, 3, 2, 3, 1, 0, 1, 3,
	1, 3, 3, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 2,
	3, 0, 3, 3, 2, 2, 1, 2, 2, 3,
	2, 1, 1, 1, 5, 1, 2, 4, 2, 0,
	1, 0, 3, 5, 1, 0, 1, 2, 1, 0,
	1, 3, 3, 2, 1, 1, 1, 3, 1, 3,
	3, 1, 1, 1, 1, 5, 3, 1, 1, 3,
	1, 1, 1, 1, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 506, -88, -85, -55, -53, -91, -92,
	-74, -93, -87, -111, -115, -100, -117, -159, -164, -165,
	-166, -3, -41, -43, -56, -73, -75, -86, -95, -94,
	-96, -101, -108, -104, -90, -47, -112, -116, -125, -160,
	-161, -162, 31, 30, 90, 74, 138, 114, 121, 176,
	324, 359, 370, 351, -120, -121, 387, -42, -54, -114,
	-113, 67, 115, 346, -4, -12, 28, 44, -44, -45,
	-46, 57, -61, -58, -68, -62, -534, 92, -487, -76,
	-79, -107, -538, 126, 145, 194, -97, -98, 313, -102,
	-103, 353, -105, -106, 355, 146, -49, -48, 140, -180,
	-182, -118, -119, -163, -126, -127, -128, -129, -130, -131,
	-132, -133, -134, -135, -136, -137, -138, -156, -139, -140,
	-141, -142, -147, -143, -144, -145, -146, -148, -149, -151,
	-152, -153, -154, -155, 391, -150, 441, 46, 401, 76,
	130, 363, 21, -5, -6, -7, -8, -9, -10, -11,
	-14, -13, -57, -59, -60, -63, -64, -65, -72, -66,
	-67, -486, -77, -78, -81, -83, -84, -80, -82, 352,
	-183, -181, 503, 455, -16, -21, -22, -17, -18, -20,
	-23, -19, -24, -28, -33, -34, -30, -31, -29, -32,
	-35, -36, -37, -38, -39, -40, -26, -27, -15, -25,
	473, 481, -186, -184, -185, -193, 379, 463, 417, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, -258, 2,
	-240, -245, -246, -247, -239, -211, -456, -459, 4, -453,
	-457, 151, 203, 278, 21, 22, 23, 24, 25, 26,
	28, 29, 40, 41, 43, 42, 44, 45, 46, 51,
	54, 55, 56, 57, 58, 62, 67, 68, 73, 74,
	75, 76, 77, 78, 79, 85, 82, 83, 84, 87,
	89, 90, 91, 93, 95, 96, 104, 105, 106, 107,
	109, 114, 115, 118, 113, 117, 120, 121, 124, 125,
	126, 128, 129, 131, 132, 133, 135, 136, 138, 139,
	140, 143, 141, 424, 142, 144, 145, 146, 147, 157,
	158, 159, 164, 166, 170, 171, 174, 175, 177, 181,
	183, 184, 185, 186, 187, 193, 194, 196, 197, 198,
	199, 204, 205, 209, 206, 215, 219, 220, 221, 223,
	227, 228, 229, 230, 231, 232, 234, 236, 235, 238,
	241, 242, 245, 246, 247, 250, 251, 252, 253, 255,
	256, 259, 257, 260, 258, 262, 263, 264, 261, 267,
	265, 269, 270, 271, 276, 274, 272, 273, 280, 283,
	191, 285, 286, 289, 307, 293, 294, 295, 298, 299,
	302, 305, 306, 308, 309, 310, 311, 312, 313, 314,
	315, 317, 318, 322, 324, 325, 327, 329, 330, 331,
	332, 333, 334, 335, 338, 337, 339, 346, 351, 348,
	349, 350, 352, 353, 354, 355, 357, 358, 359, 361,
	362, 363, 364, 366, 368, 369, 372, 373, 388, 389,
	403, 370, 371, 374, 375, 376, 377, 378, 382, 380,
	381, 383, 384, 385, 387, 390, 391, 393, 394, 397,
	399, 400, 401, 402, 404, 407, 408, 409, 410, 405,
	416, 413, 414, 418, 419, 420, 421, 422, 423, 425,
	427, 435, 436, 438, 441, 442, 443, 433, 445, 446,
	449, 450, 451, 454, 452, 453, 455, 457, 460, 461,
	462, 468, 467, 474, 475, 477, 478, 479, 35, 47,
	48, 50, 52, 63, 64, 65, 69, 110, 111, 137,
	148, 149, 160, 172, 173, 178, 180, 188, 189, 190,
	210, 211, 213, 217, 239, 282, 284, 300, 304, 319,
	320, 321, 323, 336, 365, 395, 406, 411, 428, 429,
	430, 431, 437, 439, 463, 464, 465, 469, 476, -258,
	2, -240, 291, -233, 2, -211, -211, 324, 27, 2,
	27, 318, 381, 419, 421, 2, -512, -293, 2, 27,
	-214, -211, 92, 176, 379, -233, 2, -512, -293, 24,
	2, -211, 2, -215, 2, 370, -211, 506, 87, 247,
	68, 365, 384, -123, 436, -122, 428, 374, -124, -444,
	2, 267, -211, 506, 506, 506, 27, -223, -211, 417,
	203, 106, 414, 506, 2, 417, 310, 467, 380, 106,
	333, 203, 443, 374, -521, 361, 179, 456, -510, 2,
	-506, 4, -457, -453, -252, -251, 417, 422, 106, -247,
	-239, 496, -246, 506, 506, 506, 2, 220, 221, 332,
	331, 384, 385, 506, 506, 506, 372, 2, 26, 60,
	86, 89, 112, 147, 167, 170, 296, -535, 256, 307,
	330, 383, 416, 425, 438, -520, 402, 62, 374, -519,
	-521, 443, 124, -340, 106, 247, 175, 450, 421, 419,
	448, 118, 209, 453, 452, 506, 506, 26, 60, 71,
	89, 124, 147, 167, 170, -537, 307, 330, 368, 383,
	416, 425, 438, 2, 467, 380, 417, 203, 106, 443,
	374, -521, 372, 373, 328, -88, 2, 503, 31, 30,
	387, -176, 417, 214, 2, -211, 506, 506, 2, 220,
	221, 372, 373, 506, 506, 168, -506, 2, 506, 506,
	2, 220, 221, 372, 373, 214, 2, 62, 376, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 2,
	-157, 384, 402, 185, 44, 68, 27, 329, 73, 311,
	107, 132, 177, 203, 204, 228, 86, 87, -342, 43,
	221, 220, 373, -526, 372, -394, 418, 375, 381, 413,
	232, 370, 436, 92, 457, 362, 479, 333, 334, 141,
	4, 106, 267, 386, 428, 247, 369, 314, 78, 506,
	-544, 2, 417, -546, 2, 436, 436, 2, -546, 2,
	-546, 2, -546, 2, -547, 436, 476, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, -181, -183, -182, 506, 506, 506,
	506, 506, 506, 506, -157, 384, 2, 68, 27, -286,
	-288, 447, 212, 134, 297, -180, -182, 2, -486, -442,
	2, -368, -460, -370, 494, 495, 487, 415, 61, 277,
	480, -382, 112, 448, 291, -459, -371, -384, 137, 365,
	-308, 8, 9, 5, 6, 7, -220, -372, -378, 440,
	150, 281, -255, 507, 10, 503, -483, -182, -383, 36,
	180, 59, -446, -254, -221, -418, 213, -253, -239, -480,
	-481, 4, -453, -454, -447, -421, -429, -425, -426, -432,
	-211, -456, 71, 98, 99, 97, 102, 101, 249, 248,
	103, 100, 386, 456, 60, 35, 188, 189, 217, 282,
	190, 69, -482, 125, -455, 210, 211, 395, 48, 336,
	160, 111, 110, 284, 52, 50, 464, -430, 108, 428,
	429, 430, 431, 172, 173, 148, 149, 304, 321, 411,
	437, 439, 178, 239, 94, 169, 208, 192, 216, 218,
	222, 240, 243, 268, 275, 279, 301, 303, 360, 392,
	-550, 465, 406, 63, 64, -488, 337, -489, -233, -488,
	506, 506, 508, 506, -280, -281, -282, 2, 27, 122,
	503, 2, -398, 2, -399, -403, -182, 233, -402, 503,
	-400, 501, -240, 292, -484, 366, -480, -481, -220, -239,
	-254, 4, -453, -455, 505, -283, 503, 106, 417, 72,
	203, -335, 503, -211, 27, 291, 432, 508, -380, 503,
	291, 168, 294, -211, 2, 2, 388, 2, 503, -123,
	65, 436, 42, 384, -355, 2, -356, -208, -209, -210,
	-408, 219, 327, 335, 482, 479, -442, -528, 168, 486,
	432, -442, -309, 505, 2, 2, 2, 2, 2, -403,
	188, -240, 2, -237, -445, 4, -453, -457, -454, -458,
	-456, 27, 30, 31, 32, 34, 36, 37, 38, 39,
	53, 59, 60, 66, 70, 72, 81, 86, 92, 97,
	98, 100, 99, 101, 102, 103, 112, 116, 119, 122,
	123, 127, 130, 134, 150, 152, 165, 167, 168, 176,
	179, 182, 195, 207, 212, 214, 233, 237, 244, 248,
	249, 277, 281, 287, 291, 292, 296, 297, 316, 326,
	340, 356, 379, 386, 398, 412, 417, 426, 432, 434,
	440, 447, 448, 456, 458, 466, 470, 471, 472, 473,
	-459, 71, 2, -403, 188, 2, -242, 188, -403, -245,
	2, -224, -211, 2, -236, -445, 2, -259, 188, -240,
	-241, -245, -243, 2, -245, -249, 2, -211, -451, 188,
	2, -449, 10, -448, 5, 4, -453, -457, -454, 214,
	432, 508, -299, -251, -252, -441, 8, -292, -211, 505,
	-368, 2, -112, -99, 2, 165, -368, 188, 2, -112,
	188, 2, -368, 188, 2, -112, 188, 2, -523, 2,
	-451, 2, 2, 438, 2, 89, 188, -211, 417, 105,
	2, 350, -536, 368, 442, 467, 2, 2, 2, 2,
	2, 2, 417, -229, 2, -211, 165, -249, 188, 2,
	380, -545, 337, -451, 188, 2, -243, 2, -243, 203,
	215, -224, 188, 2, 421, 419, 421, 419, 168, 2,
	214, 2, 214, 2, -404, 2, -405, -399, -240, 501,
	2, 2, 2, 2, 2, 188, -211, 417, 105, 2,
	231, 2, 2, 2, 2, 2, 2, 2, -301, 188,
	2, -240, -301, 188, 2, -301, 188, 2, -341, 2,
	81, -224, 188, 2, -248, 188, 2, -243, -250, 188,
	2, -249, -452, 188, 2, -451, -368, 2, -112, 2,
	-412, 2, -411, -448, 463, -88, 503, -88, 503, 384,
	503, -451, -240, -240, -368, 2, -112, -99, 2, -368,
	2, -112, 2, -110, -109, -451, 503, 168, -368, 2,
	-112, -99, 2, -368, 2, -112, 2, -176, 165, 2,
	106, 417, -157, 2, 165, 458, 2, 8, 2, -451,
	375, 334, 157, 2, 388, 2, 389, 68, -342, 479,
	68, 168, 2, 168, 2, -325, 2, 473, 2, -509,
	2, 291, 168, 2, 168, 2, 168, 2, 168, 2,
	168, 2, 331, 385, 221, 2, -112, 470, -99, -368,
	470, 2, -527, 165, 373, -368, 2, 435, 230, 142,
	168, -325, 2, 168, 2, 168, 2, 5, 2, 332,
	403, 2, 219, 327, 403, 2, -240, -539, 2, 417,
	467, 380, 2, 2, 82, 83, 168, 2, 168, 2,
	168, 479, 2, -318, -403, -354, -355, -354, 432, -286,
	-288, -157, 388, 2, -187, -316, -189, 165, -344, -345,
	-190, 244, 152, 287, -191, -324, 27, 122, -324, -324,
	55, 504, 504, 11, 12, 70, 40, 494, 495, 496,
	497, 163, 498, 499, 492, 493, 491, 484, 485, 489,
	225, 226, 88, 488, 486, 80, 254, 367, 153, 154,
	155, 156, 347, 201, 33, 202, 14, 15, 16, 32,
	296, 243, 480, 192, 392, 487, 17, 18, 19, 216,
	218, 279, 47, 195, -219, -261, -368, -368, -368, -368,
	-368, -368, -368, 303, 503, -314, -363, 501, -182, 503,
	503, 503, -441, -182, -368, -382, 504, -306, 503, -182,
	-382, -377, 503, 365, 501, 503, -385, -368, 5, 5,
	5, 503, 505, -491, 474, 165, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 323, -423, 503, -422, 503, -422, -422, 468, -420,
	503, 481, 475, 503, -420, 503, 503, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 503, 503, 468, 508,
	-488, -283, 503, -310, -406, -368, 496, -310, -310, 291,
	-303, -368, 94, -328, 222, 268, 169, 240, 360, 208,
	-365, 507, -365, -393, 481, -182, -400, -239, -182, -402,
	503, -398, -393, -89, -441, -73, -86, -94, -112, -125,
	-161, -162, 496, -240, 503, 168, 503, 505, -445, 168,
	-292, -224, -240, -253, -254, -259, 121, -303, -506, -292,
	-214, 37, -379, -415, -416, -462, 507, -461, -418, -428,
	-424, -427, 319, 320, -447, 50, 464, -430, 213, 4,
	-453, -455, 210, 211, 395, 48, 336, 160, 111, 110,
	284, 52, 428, 429, 430, 431, 172, 173, 465, 406,
	63, 64, -506, -292, 165, -444, -303, 37, -355, 2,
	112, -449, 42, -548, 508, 242, -263, 253, 276, 184,
	292, 477, 285, -450, 5, 4, -378, -390, 112, 247,
	213, -435, -437, 8, -436, 9, -438, 494, 495, -443,
	-442, 96, 505, -445, -198, 348, 387, -197, 23, 28,
	126, 461, 143, -273, 205, 310, 137, 399, 451, -516,
	-517, 371, 423, 424, 84, 285, 387, 348, 137, -321,
	-323, 37, 104, 271, 305, 56, 198, 258, 259, 401,
	469, 137, 387, 348, -517, 348, -517, -200, 399, 451,
	-516, -517, 371, 348, -199, -273, 137, 507, 23, 348,
	387, 306, -532, -533, 126, 28, 348, 306, -513, -485,
	473, 137, -109, 234, -109, -299, 508, 508, -445, 496,
	373, 372, 137, 137, 137, 137, 165, 2, 2, 277,
	2, 2, 2, 170, -519, -537, 2, 2, 2, -240,
	188, -285, 291, -508, -300, 417, -240, 277, -242, 188,
	2, -245, 467, -513, 277, 37, 503, 2, -341, 2,
	203, -485, 277, -404, -256, -240, -399, -256, 387, -233,
	37, -365, -365, 137, 2, 2, 2, -211, -201, 508,
	58, 354, 137, -201, 137, -201, 137, -260, 188, -259,
	-201, 137, -201, 508, 137, -201, 508, 137, 508, 137,
	504, 508, -412, -412, -451, -170, 473, 168, 92, 503,
	503, -176, -409, 508, -408, -452, -110, -451, -451, -508,
	-224, 2, -240, 2, 417, 223, -170, -451, -451, -451,
	-444, 27, 389, 2, 331, 385, 83, 389, 2, -240,
	417, 106, 203, 74, -511, 165, -507, 361, -506, -240,
	106, -240, 106, -240, 106, -240, -240, 2, 2, 2,
	2, 79, 79, 2, 44, -527, 165, 2, 435, 2,
	435, 2, -211, -211, -211, 402, 242, -240, 165, 417,
	203, 417, 203, 106, 417, -201, 508, -215, -187, -316,
	-444, -317, -316, -188, -187, -190, 165, 335, 452, 271,
	390, 227, -345, -344, 27, -368, -349, 159, 270, -368,
	-347, -370, 494, 495, -436, -438, -302, 285, -181, -181,
	-181, -289, -395, -368, 326, 203, -417, -415, -415, -238,
	-445, 428, -368, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, 243, 192, 392,
	47, 195, -368, 432, -368, -368, -368, -368, 265, 277,
	281, 440, 150, 449, 122, 285, -551, 412, 39, -375,
	-182, -307, 503, -389, 34, 398, 27, -382, 503, 2,
	-363, -368, -364, -304, -303, -303, 504, 466, 27, 122,
	496, 2, 504, 508, 37, 504, -368, -304, -381, -377,
	-303, -388, -387, 470, -336, -337, 478, 261, 109, 186,
	260, -338, 378, -439, 8, -445, 496, -492, 158, 179,
	503, 504, 2, 504, 2, 504, -368, 2, 504, -368,
	2, 504, -368, 2, 504, -368, 2, 504, 2, -368,
	-368, -368, -368, -368, -368, -368, -303, 8, -439, -439,
	428, 428, -439, -439, -439, -431, 319, 245, 320, 174,
	264, 262, 263, 173, -431, -330, 2, -433, -303, 4,
	478, 261, 109, 186, 260, 378, 5, -330, 2, -331,
	2, -368, -303, -332, -369, -370, 494, 495, 487, -382,
	-333, 2, -368, -304, -368, 53, 237, 434, -334, -368,
	168, -303, -303, 2, -303, 2, -489, 37, -303, -295,
	508, 168, 37, 4, -295, -295, 503, 504, 508, -329,
	183, 257, 252, -329, -398, -328, 222, -326, 301, -326,
	-326, -393, -225, 501, 509, -445, -393, -392, -391, 37,
	-233, 298, -393, -393, 505, 504, -392, 502, -504, 503,
	506, 506, 506, 506, 506, -240, 503, -303, -445, 505,
	404, 504, 216, 216, 216, 216, 366, 504, 432, 473,
	-88, 293, 504, 508, -294, 36, 501, 505, -439, 2,
	2, -434, 468, 503, 503, -337, 503, 168, -293, -528,
	504, 436, -356, -262, 335, 397, 349, 382, 414, 8,
	9, 8, 9, 508, -445, 508, -529, 86, 432, 72,
	374, -359, 188, 72, -463, -227, 86, -464, -211, 66,
	448, 326, 167, 135, -529, 86, 326, -529, 86, 86,
	387, 402, 55, -403, 40, 40, 27, -112, 238, 168,
	479, 417, 203, 374, 432, -403, -323, -415, 104, 258,
	259, 55, -440, -435, 494, 495, -440, 55, -440, -440,
	-440, 473, -242, -403, 374, 432, 432, 508, 40, 40,
	27, -112, 238, 168, 432, -259, -225, 462, 41, 462,
	432, 41, 374, 432, 508, 41, 41, 432, 432, -514,
	-216, 93, 272, 251, 273, -217, -218, 312, 460, -451,
	-409, 195, -409, -251, -211, 505, -112, -368, -368, -112,
	-368, -112, 44, 137, 2, -545, 231, 503, -266, 277,
	168, -292, -410, 214, 508, -300, 137, -322, -321, 277,
	-244, 188, 2, -240, 137, 131, 503, 333, 2, -226,
	188, -212, -211, -341, -204, 420, 137, -320, 458, -350,
	-112, 503, 112, 37, -350, -311, -312, -407, -313, -227,
	503, -233, -211, 2, -240, -301, -301, -301, -201, 508,
	137, -224, -243, -248, -249, -250, -451, -452, -88, -411,
	504, 504, 504, -169, 295, -168, -211, 5, -176, 458,
	-265, -360, -359, -467, -468, -463, 243, 203, 448, 215,
	151, -284, -228, -227, 105, -170, -109, 504, -409, 195,
	-170, -170, -409, -409, -240, 165, -170, -170, -170, 2,
	2, -325, -240, -224, -259, -240, -292, -292, -325, -224,
	-325, -224, -325, -224, -112, -368, 2, 384, 165, 165,
	505, -325, 333, 106, 417, 310, 203, -240, -259, -240,
	-259, -224, -240, -403, -317, -188, 292, 227, 390, -347,
	-348, -370, 365, 366, -348, 365, 366, 8, 9, 8,
	9, -192, 394, 280, -301, 508, -195, 38, 119, 227,
	-240, 479, 133, -368, -368, 432, -551, 412, -375, 133,
	-368, 265, 281, 440, 150, 449, 122, 285, 168, 503,
	-369, -369, 504, -305, -368, -368, 502, 511, 504, -288,
	508, -286, -368, -303, -303, 504, 505, -303, -292, 502,
	502, 508, 504, -386, -387, 127, -368, 432, 432, 432,
	432, 503, 504, 505, -497, 302, 503, 503, -368, 504,
	504, 504, 504, 37, 508, 508, 508, 504, 508, 508,
	508, 504, 504, 504, 508, 504, 479, 479, 504, 504,
	504, 504, 508, 504, 508, 504, 168, 504, 504, -339,
	316, 504, 11, 12, 494, 495, 496, 497, 163, 498,
	499, 492, 493, 491, 484, 485, 486, 80, 254, 367,
	14, 15, 16, 216, 195, -369, -369, -369, 504, -373,
	-374, 168, 165, 37, -334, -334, -334, 504, 168, -303,
	504, 504, 503, -490, 256, 277, 504, -362, -361, 471,
	-406, -296, 2, -398, -235, -445, -362, -362, -303, -368,
	222, 222, -327, 458, 291, -329, -398, -392, -441, -367,
	-366, 166, 38, 119, 274, 191, -392, -233, -283, -392,
	-392, -445, -393, -393, -391, 504, -505, -441, 504, -297,
	-401, -484, -288, 505, -445, -170, -158, 5, 281, -158,
	-158, -158, -292, 24, 317, -415, 501, 502, 8, -445,
	503, -439, -439, -439, -292, 168, -442, -355, 446, 77,
	335, 428, -442, -197, 348, -227, -227, -240, -249, 277,
	-359, 188, -203, 277, -415, -234, -211, 503, 503, 227,
	227, 458, -227, -234, 227, 188, -227, 188, -234, -234,
	-515, 335, 286, -368, 246, 333, 278, -198, 348, 387,
	-112, -112, -112, 503, -528, 458, 121, -240, -259, -240,
	-249, -244, 387, 348, 275, -253, -440, -440, -321, 387,
	348, -249, -242, -224, -199, -112, -112, -112, 503, -225,
	-200, 348, 5, 188, -227, 5, -211, -227, -249, -531,
	-449, 103, 386, -533, 23, -227, 188, -227, -249, -531,
	-216, -451, 281, 454, -513, -173, 473, -109, -167, 199,
	496, -510, -211, 467, -211, -264, -267, -265, -227, -179,
	475, 473, 137, -257, -240, 501, -170, -451, -240, -249,
	137, -283, 277, -451, 503, 2, 2, 291, 277, -226,
	188, -205, 128, -549, 486, -224, -362, -296, -319, -353,
	356, 291, -284, 463, -233, -319, -298, 508, 168, 486,
	505, -284, 2, -201, -201, -201, -259, -260, -201, -201,
	-201, -88, -88, -170, 508, 503, 486, 486, 503, -451,
	-451, 504, 508, -240, -226, 203, 203, -232, -212, 504,
	508, 505, 503, -170, -110, 168, -50, 473, 417, 507,
	-325, -325, -325, 384, 384, -211, -236, -224, -240, -237,
	-259, 165, 165, 452, -348, 292, 250, -395, -196, 283,
	-240, 507, -368, -368, 133, 133, -368, -369, -369, -368,
	133, 168, 503, -368, -379, 32, 32, 504, 508, -364,
	-368, 504, 466, -288, -288, 504, 496, -445, 507, 504,
	-377, 130, -368, 426, 261, 186, 260, -338, 260, -338,
	-338, -439, 5, -445, 496, -498, -230, 503, -211, 471,
	-287, 297, 504, -417, -415, -368, -368, -368, -368, -368,
	-439, -420, -420, -435, -435, -368, -373, -368, -417, -415,
	-369, -369, -369, -369, -369, -369, -369, -369, -369, -369,
	-369, -369, -369, -369, -369, -369, -369, -369, -369, 122,
	277, 285, -369, -374, -373, -368, -368, -415, 504, 504,
	504, -303, -88, 503, 256, -315, 179, -368, -409, 508,
	-315, -315, 504, -398, -398, 503, -368, 222, 502, 508,
	510, 486, -283, 505, -391, -392, 502, 504, 508, 504,
	508, -352, 37, 504, -445, 294, 5, 8, 501, 502,
	505, -439, 504, 504, 504, -292, -368, 432, 432, 137,
	277, 460, -469, -464, 135, -368, -290, -396, -368, 503,
	503, 2, -194, 126, 387, -530, 2, 458, 137, -201,
	137, -201, 477, 503, 503, 432, 374, 473, -303, -368,
	-171, 112, -444, -517, 507, -517, 507, 374, 432, 374,
	432, 473, -303, 432, -419, 45, 25, 277, -243, 432,
	432, -201, 137, 443, 387, -451, 281, -175, 295, -174,
	129, 358, 120, 229, -409, -173, 168, 432, 2, -244,
	2, 504, 504, 508, -470, 37, 289, 503, 289, -240,
	-69, 473, -408, -441, -242, 37, 137, -513, -413, -414,
	5, -240, 137, 291, 277, -206, 236, -549, -449, -485,
	-288, -319, -310, 278, 85, 504, -362, -312, -296, -368,
	2, 504, -201, -168, -169, -451, -451, -451, -170, -176,
	-176, -360, -268, 503, -226, -212, 503, -176, -228, 2,
	-452, -409, -112, 295, -240, 496, -325, -275, -274, 310,
	285, -275, 365, 365, 292, 159, 232, -195, -225, -368,
	-368, 133, 32, 32, -368, -368, -379, 504, -368, -368,
	-303, 502, 5, -368, 504, 504, 8, -368, 504, 505,
	-499, -211, -368, 504, 55, 504, 504, 508, 508, 504,
	504, 504, 504, 504, 504, 504, -374, 168, 122, 285,
	503, 504, 504, -88, -376, 182, 55, -398, -376, -376,
	-327, -292, -398, -366, -225, 501, -445, -441, -401, 503,
	505, 502, 2, 501, -445, 504, -227, -227, -359, 137,
	-471, 86, -473, 70, 151, 92, 277, 281, 448, 326,
	66, 112, 340, -541, 37, 483, 504, 504, 508, -195,
	-290, -292, 277, 409, 112, 277, 112, 105, 443, 73,
	-227, -234, -292, -292, -240, -249, 144, 504, 508, 486,
	2, 496, 496, -249, -244, -249, -242, 144, 504, -225,
	5, 5, 137, -222, 70, 5, -227, -227, -243, 105,
	508, 503, 486, 486, -173, -452, -109, -283, -271, 206,
	-227, -468, -465, -466, 326, -472, -474, 151, 326, -112,
	-178, -177, -211, 5, 2, 503, -266, 295, 502, -322,
	-112, -244, 504, 508, -343, 458, -225, -240, 137, -207,
	235, -549, -449, -204, -346, -344, -351, 503, 291, -112,
	-288, 486, 504, 504, 105, 105, 197, 136, -290, 503,
	503, -292, 105, 504, -170, -51, -52, 203, 86, 315,
	-237, 417, 203, 503, 503, -195, -368, -368, -368, 504,
	-288, -445, 496, -493, 310, 504, -395, -368, -368, -369,
	168, 503, -379, 504, -494, 472, -368, -303, -494, -494,
	504, -441, 2, 501, 2, -359, -234, -238, -231, -211,
	151, 188, 281, 227, 503, -369, -240, 503, 2, 29,
	-542, 116, 207, -358, -543, 91, 410, 196, -396, -196,
	504, 504, 281, 281, -368, -415, 503, -201, -201, 504,
	504, -368, 432, -444, 90, -442, 2, -517, -368, 432,
	5, -201, -238, -201, -201, -222, 443, -174, -175, -451,
	-109, -173, 37, -272, -273, 195, -470, 227, -231, 227,
	-540, 473, 504, 508, 486, 486, -264, -179, -70, -71,
	433, -408, -283, 5, 503, -211, 291, 503, -225, -549,
	-449, -205, -319, 123, -292, 86, -346, -375, -170, 503,
	503, -269, 75, 87, 113, 187, 171, 204, 402, 407,
	27, -269, 504, -290, -290, 504, 503, -170, 508, 27,
	503, 27, 503, -240, -259, -303, -303, 504, -288, 55,
	508, 504, 504, -369, -379, 504, -495, -496, -230, 502,
	2, -473, -231, 277, 458, -368, -213, 503, -368, 37,
	207, 117, 193, -271, 503, -357, 458, 340, -222, -290,
	503, 503, 503, 486, 168, 503, -419, -201, -243, 504,
	-522, 338, -112, -179, 308, 503, -270, 291, 105, 271,
	-177, -371, -371, 504, 37, -71, 9, 37, -290, -240,
	-290, 291, -449, -206, 452, 278, 504, -234, -319, -452,
	-452, -357, 504, 504, -452, -52, -292, -292, 504, 504,
	-500, 333, 366, 181, -303, -289, 504, 508, 37, 137,
	183, 504, -475, 255, -211, 504, 117, 193, -272, -292,
	-271, 183, -240, -518, 458, 504, -277, -276, -274, -279,
	-278, -274, -303, -442, 90, 308, -303, -222, -525, 169,
	269, -524, 5, 10, -270, -240, -291, -397, -227, 76,
	105, -271, -112, -112, 504, -343, 504, -240, -207, 387,
	-361, 504, 504, -358, -357, -362, 504, 504, 504, 504,
	-501, -502, 47, 445, 96, -368, -501, -501, -496, -498,
	151, 473, -476, -479, -478, 291, 393, 169, 309, 504,
	409, 469, -542, 504, 473, -283, -368, -357, 504, 508,
	463, 504, 508, 463, 504, 168, 504, -201, -172, 473,
	44, 503, 504, 508, 325, 118, 126, -272, -540, -357,
	503, -358, 503, -311, -170, -170, -271, -358, -170, -503,
	135, -502, 322, 164, 365, 322, 164, -503, -503, -231,
	51, -478, 291, -479, 291, 452, 118, -362, 51, -475,
	-271, -276, 195, -278, 168, 308, 140, -524, 29, -292,
	-397, 366, 366, 2, -179, -270, -358, -290, -271, -290,
	-362, -272, -271, 96, 179, 427, 271, 32, 486, -477,
	271, 354, 58, 387, -477, 486, -476, 503, 503, 372,
	504, 2, -270, -271, 504, -272, 504, -362, -272, 365,
	299, -502, -368, 22, 281, 112, -368, -542, -303, -303,
	295, -202, 58, 354, -272, -357, -362, -358, -362, 504,
	504, -169, 503, -362, -358, -271, -272, 432, -169, -271,
	-272, 503, 504, -272, -362, -303, -362, 504, -272,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 25, 26, 27,
	28, 447, 448, 450, 451, 452, 454, 455, 457, 459,
	461, 462, 463, 465, 466, 468, 469, 470, 471, 472,
	474, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 534, 536, 0, 1125, 1127, 1129,
	1131, 0, 670, 0, 30, 31, 0, -2, 251, 253,
	255, 0, 281, 283, 284, 286, 288, -2, 0, 383,
	384, 386, 388, -2, -2, 0, 830, 832, 0, 523,
	525, 0, 835, 837, 0, 0, 545, 546, 0, 1213,
	-2, 539, 541, 543, 608, 610, 612, 614, 616, 618,
	620, 622, 623, 625, 627, 629, 631, 633, 635, 637,
	639, 640, 642, 644, 646, 648, 650, 652, 654, 656,
	658, 660, 662, 664, -2, 666, -2, -2, 0, -2,
	-2, -2, 1143, 34, 36, 38, 40, 42, 44, 46,
	48, 50, 334, 335, 337, 339, 341, 343, 346, 348,
	350, 1271, 390, 392, 394, 396, 398, 400, 402, 0,
	-2, 1283, 0, 0, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 78, 79, 80, 81, 82, 83, 84,
	85, 64, 65, 67, 68, 69, 73, 74, 76, 62,
	0, 0, 1244, 1246, 1248, 1250, -2, 0, 0, 5,
	9, 11, 13, 15, 17, 19, 21, 23, 449, 453,
	456, 458, 460, 464, 467, 473, 475, 477, 434, 435,
	438, 1903, 1920, 1921, 1922, 1925, 1926, 1927, 1928, 1929,
	1930, 2296, 2377, 2378, 1952, 1953, 1954, 1955, 1956, 1957,
	1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967,
	1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977,
	1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987,
	1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997,
	1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
	2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017,
	2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027,
	2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037,
	2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047,
	2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057,
	2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067,
	2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077,
	2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087,
	2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097,
	2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107,
	2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117,
	2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127,
	2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137,
	2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147,
	2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157,
	2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167,
	2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177,
	2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187,
	2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197,
	2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207,
	2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217,
	2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227,
	2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237,
	2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247,
	2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257,
	2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267,
	2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 436,
	437, 989, 0, 501, 499, 1896, 502, 2122, 504, 506,
	377, 378, 379, 380, 381, 382, 0, 516, 510, 515,
	517, 519, 520, 521, 522, 496, 494, 0, 516, 1955,
	514, 1123, 1124, 1108, 1109, 2159, 1150, 535, -2, -2,
	-2, 2262, -2, 567, -2, 574, 2266, 2161, 579, 0,
	581, -2, 584, 1126, 1128, 1130, 668, 669, 1906, 0,
	0, 0, 0, 32, 33, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1038, 1039, 1040, 0, 189,
	191, -2, -2, -2, -2, 0, 0, 2195, 1996, 1864,
	1922, 1867, 1862, 252, 254, 256, 257, 0, 0, 0,
	0, 0, 0, 282, 285, 287, -2, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 884, 876, 877,
	1079, 0, 0, 0, 0, 385, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 314, 439, 440, 0, 1272, 1272,
	0, 0, 0, 0, 232, 223, 831, 833, 834, 0,
	0, 0, 0, 524, 526, 0, 0, 218, 836, 838,
	839, 0, 0, 0, 0, 0, 234, 0, 0, 540,
	542, 544, 609, 611, 613, 615, 617, 619, 621, 624,
	626, 628, 630, 632, 634, 636, 638, 641, 643, 645,
	647, 649, 651, 653, 655, 657, 659, 661, 663, 665,
	675, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 755, 0, 0, 0, -2, -2, -2, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	678, 680, 681, 682, 0, 735, 753, 754, 763, 667,
	0, 1029, 1273, 1152, 1133, 1147, 1152, 1135, 1136, 1137,
	1138, 1139, 1144, 1146, 1140, 1141, 1142, 35, 37, 39,
	41, 43, 45, 47, 49, 51, 336, 338, 340, 342,
	344, 347, 349, 351, -2, 1242, 1243, 391, 393, 395,
	397, 399, 401, 403, 527, 0, 529, 0, 679, -2,
	0, 1277, 1277, 1277, 0, 0, 1243, 1241, 0, 532,
	533, 588, 589, 1507, 0, 0, 0, 0, 0, 0,
	0, 1761, 1593, 0, 590, -2, 1624, 1626, 2237, 2262,
	1760, 1628, 1629, 1630, 1631, 1632, 0, 1634, 1635, 1636,
	1637, 1638, 1639, 0, 1641, 0, 1646, 1647, 1648, 0,
	2244, 1841, 1916, -2, 0, 0, 2250, 1912, 0, 1727,
	1664, -2, -2, 1939, 1918, 1439, 1440, 1441, 1442, 1443,
	-2, -2, 2279, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 0, 2226, 2245, 2246, 2251, 2253,
	2247, 2234, 1689, 2007, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1466, 1475, -2,
	-2, -2, -2, -2, -2, 2238, 2239, 2256, 2259, 2265,
	2270, 2271, 2243, 2252, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	1467, -2, -2, -2, -2, 1260, 2133, 1263, 989, 1261,
	1245, 1247, 0, 1249, 0, 0, 0, 1254, 1280, 1278,
	0, 1321, 1258, 1259, 1339, 1339, 1363, 0, 1344, 0,
	1363, 1272, 1389, 0, 1350, 2151, 1665, 1666, 0, 1922,
	1917, -2, -2, 2277, 0, 0, 0, 0, 0, 0,
	0, 497, 0, 503, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 1149, 537, 538, 0, 562, 0, 566,
	2233, -2, 1963, 2170, -2, 570, 1153, 1157, 1158, 1159,
	1160, 0, 0, 0, 0, 0, 576, 0, 0, 563,
	564, 582, 585, 0, 671, 672, 673, 674, 61, 0,
	2245, 1389, 63, 0, 1886, 1947, 1948, 1949, 1950, 1951,
	2278, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315,
	2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325,
	2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335,
	2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345,
	2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355,
	2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365,
	2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375,
	2376, 2279, 66, 0, 2245, 70, 0, 2245, 0, -2,
	75, 0, 1892, 77, 0, 1889, 86, 0, 2245, 0,
	1861, -2, 0, 172, 1900, 0, 856, 1902, -2, 2245,
	1037, 235, 236, 1935, 1936, 1943, 1944, 1945, 1946, 0,
	0, 0, 823, 1858, 1863, 824, 1882, 825, 1868, 0,
	258, 259, 260, 261, 262, 0, 263, 2245, 265, 266,
	0, 268, 269, 2245, 271, 272, 0, 274, 0, 202,
	203, 290, 291, 0, 293, 0, 2245, 0, 0, 0,
	299, -2, 315, 0, 312, 0, 303, 304, 306, 307,
	308, 309, 0, 355, 353, 1897, 0, 851, 2245, 853,
	0, 0, 1058, -2, 2245, 1034, 1064, 1060, 0, -2,
	0, 1270, 2245, 1167, 880, 881, 882, 883, 0, 374,
	0, 1180, 0, 1182, 0, 1203, 1395, 1339, 1339, 0,
	316, 317, 318, 319, 320, 2245, 0, 0, 0, 325,
	0, 327, 328, 329, 330, 331, 332, 333, 161, 2245,
	406, 432, 161, 2245, 409, 161, 2245, 412, 0, 415,
	1077, 161, 2245, 418, 161, 2245, 421, 422, 161, 2245,
	426, 427, 429, 2245, 431, 237, 1119, 1120, 1121, 1122,
	0, -2, 490, 1905, -2, 442, 0, 443, 0, -2,
	0, 249, 0, 0, 840, 841, 842, 843, 844, 847,
	848, 849, 850, 1376, 221, 219, 0, 0, 1110, 1111,
	1112, 1113, 1114, 1115, 1116, 1117, 1118, 0, 0, 547,
	0, 0, 676, 677, 0, 0, 687, 688, 689, 249,
	2162, 2130, 2027, 694, 0, 697, 700, -2, 0, 0,
	0, 0, 704, 0, 709, 710, 711, 0, 713, 829,
	715, 0, 0, 717, 0, 721, 0, 724, 0, 726,
	0, 728, -2, -2, -2, 739, -2, 0, 742, 744,
	0, 746, -2, 0, 755, 751, 752, 0, 0, 0,
	0, 771, 772, 0, 777, 0, 780, 781, 782, 0,
	784, 785, 0, 787, 788, 789, 790, 0, 792, 793,
	-2, -2, 797, 799, 0, 806, 0, 810, 0, 814,
	0, 683, 684, 161, 1393, 1132, -2, 1134, 0, -2,
	0, 528, 0, 531, 1300, 1228, 1225, 0, 1297, 1298,
	1229, 0, 0, 0, 1236, 0, 1275, 1276, 0, 0,
	0, 1215, 1216, 0, 0, 0, 0, 1766, 1767, 1768,
	1769, 1770, 1771, 1774, 1775, 1772, 1773, 1776, 1777, 0,
	0, 0, 0, 0, 1778, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1779, 1780, 1781, 0,
	0, 1783, 0, 1785, 0, 0, 0, 0, 0, 0,
	1572, 1574, 1849, 0, 0, 1782, 1512, 1513, 1514, 1515,
	1516, 1551, 1552, 0, 0, 1625, 1846, 1845, 1627, 0,
	1797, 0, 1640, -2, 0, 1761, 1792, 0, 0, 1649,
	1650, 1651, 0, 0, 1797, 0, 0, 1840, 1661, 1662,
	1504, 0, 0, 1729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1453, 1452, 0, 1454, 0, 1455, 1456, 1463, 1476,
	0, 0, 0, 0, 1480, 0, 0, 0, 0, 0,
	0, 0, 1821, -2, 0, 0, 0, 0, 1468, 0,
	1262, 0, 0, 1325, 1850, 1854, 1855, 1325, 1325, 0,
	0, 1798, 1386, 1386, 0, 0, 1382, 1382, 1382, 1380,
	1363, 0, 1363, 1373, 0, 1363, 1363, 0, -2, 1344,
	0, 0, 1373, 0, 1357, 478, 480, 482, 484, 485,
	486, 488, 1390, 1391, 0, 0, 0, 0, 1923, 0,
	0, 0, 0, 0, 1908, 0, 0, 0, 0, 508,
	518, 1272, 0, 1800, 1412, 1416, 0, 1418, 1419, 1420,
	1421, 1422, 0, 0, 1413, -2, 1464, 1466, 1487, 1940,
	1941, 1942, 1447, 1448, 1449, 1450, 1451, 1459, 1446, 1446,
	1446, 1457, 1486, 1478, 1486, 1482, 1433, 1434, 1469, 1470,
	1471, 1472, 0, 512, 0, 0, 0, 0, -2, 572,
	577, 578, 0, 0, 1155, 0, 1161, 599, 600, 601,
	1163, 1164, 0, 575, 602, 603, 604, 605, 606, 607,
	0, 1870, 1871, 1872, 1873, 1876, 1877, 0, 0, 573,
	592, 580, 0, 586, 87, 1105, 0, 126, 0, 1105,
	1105, 0, 0, 148, 0, 0, 0, 0, 0, 0,
	111, 122, 99, 100, 0, 0, 0, 0, 0, 71,
	1011, 0, 1014, 0, 0, 0, 0, 0, 0, 0,
	1027, 0, 0, 0, 110, 0, 105, 89, 0, 0,
	0, 112, 124, 0, 152, 154, 0, 0, 0, 0,
	0, 0, 171, 179, 0, 0, 0, 0, 1035, 0,
	1269, 0, 1376, 2064, 1376, 822, 0, 0, 1923, 1866,
	0, 0, 0, 0, 0, 0, 0, 292, 294, 0,
	296, 297, 298, 0, 1057, 0, 305, 302, 345, 960,
	2245, 0, 0, 372, 367, 0, 369, 0, 1010, 2245,
	1008, 1901, 0, 1032, 0, 0, 0, 1065, 1932, 1074,
	1078, 1169, 0, 376, 0, 1183, 1185, 0, 0, 1396,
	0, 1398, 1399, 0, 322, 323, 324, 0, 404, 0,
	159, 160, 0, 407, 0, 410, 0, 161, 2245, 1856,
	416, 0, 419, 0, 0, 424, 0, 0, 0, 0,
	1272, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 249, 0, 1375, 0, 1376, 219, 249, 249,
	1376, 549, 1376, 551, 0, 0, 690, 249, 249, 249,
	695, 696, 698, 699, -2, -2, 807, 701, 702, 774,
	0, 0, 0, 773, 714, 0, 816, 2147, 827, 774,
	1996, 774, 1996, 774, 1996, 725, 727, 730, 766, 738,
	743, 0, 0, 748, 756, -2, 0, 758, 0, 760,
	0, 762, 774, 775, 778, 783, 786, 791, 0, 0,
	0, 0, 0, 0, 0, 1028, 0, 1145, 1300, 1228,
	530, 1219, 1299, 1220, 1227, 1230, 0, 0, 1232, 0,
	1234, 0, 1295, 1296, 1303, 1304, 0, 1314, 1315, 1307,
	0, -2, 0, 0, 1310, 1311, 1238, 0, 1255, 1256,
	1257, 1284, 1287, 1088, 0, 2377, 1508, 1407, 1509, 1510,
	1885, 0, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, -2, -2, -2, -2, -2, -2, -2, -2,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, -2, -2, -2, 1549, 1550, -2, 1784, 1786, 0,
	1849, 0, -2, 0, -2, -2, -2, -2, 1569, 0,
	1571, 1576, 1578, 1580, 0, 0, 0, 0, 1848, 1590,
	1832, 1833, 0, 0, 1763, 1764, 1765, 1575, 0, 1594,
	1847, 1844, 0, 0, 1796, 1283, 1653, 0, 0, 0,
	0, 1660, 1645, 1794, 0, 1793, 0, 0, 0, 1804,
	0, 1839, 1835, 0, 1883, 1503, 1490, 1491, 1492, 1493,
	1494, 1495, 1505, 0, 1880, 1909, 1915, 1737, 0, 0,
	0, 1690, 1691, 1692, 1693, 1694, 0, 1696, 1697, 0,
	1699, 1700, 0, 1702, 1703, 0, 1705, 1706, 1707, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 0, 0, 1709, 0, 1807, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 1711, 0,
	1713, 1798, 1818, 0, 0, 1595, 0, 0, 0, 1761,
	0, 1716, 1798, 1826, 0, 0, 0, 0, 0, 1798,
	0, 1831, 0, 1723, 0, 1725, 1264, 0, 0, 1402,
	0, 0, 0, 1853, 1402, 1402, 0, 1320, 0, 0,
	1383, 1384, 1385, 0, 0, 1386, 0, 1377, 1381, 1378,
	1379, 1373, 1336, 0, 0, 1887, 1373, 1342, 1372, 0,
	989, 1362, 1373, 1373, 0, -2, 1346, 1363, 0, 0,
	479, 481, 483, 487, 489, 0, 0, 1283, -2, 0,
	249, 988, 0, 0, 0, 0, 498, 500, 0, 0,
	492, 0, 495, 0, 1403, 1406, 0, 0, 1417, 1423,
	1424, 0, -2, 0, 0, 1488, 0, 0, 0, 0,
	565, 0, 1154, 1162, 0, 596, 0, 598, 0, 1874,
	1878, 1875, 1879, 0, 587, 0, 0, 0, 0, 1104,
	0, 130, 2245, 0, 163, 0, 0, 953, 1893, 0,
	0, 0, 0, 2014, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 96, 101, 0, 0,
	0, 0, 0, 0, 0, 0, 1012, 1013, 1015, 1022,
	1024, 0, 1018, 1881, 0, 0, 1019, 0, 1021, 1023,
	1025, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	98, 102, 0, 0, 0, 0, 1860, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1053,
	1051, 1045, 1046, 1047, 1048, 1049, 1050, 0, 0, -2,
	194, 0, 240, 1859, 1869, 0, 845, 846, 264, 267,
	270, 273, 190, 0, 300, 0, 0, 886, 859, 0,
	0, 354, 249, 0, 0, 368, 0, 1006, 1009, 0,
	989, 2245, 1044, 1899, 0, 0, 0, 0, 1063, 0,
	2245, 1888, 1931, 1932, 1171, 1177, 0, 1402, 0, 1201,
	1186, 0, 0, 0, 1201, 1205, 1206, 1208, 1209, 0,
	0, 1397, 0, 326, 433, 161, 161, 161, 413, 0,
	0, 161, 423, 161, 428, 161, 238, 430, 441, 491,
	1272, 1272, 249, 247, 2105, 245, 242, 244, 0, 0,
	0, 887, 889, 890, 891, 892, 0, 1932, 0, 2053,
	1932, 0, 1189, 1191, 0, 215, 222, 220, 249, 0,
	0, 366, 548, 553, 685, 0, 691, 692, 693, 732,
	768, 703, 705, 706, 707, 0, 828, 826, 716, 774,
	719, 774, 722, 774, 741, 745, 750, 757, 0, 0,
	0, 770, 0, 0, 0, 0, 0, 0, 0, 811,
	812, 813, 815, 1394, 1223, 1224, 1226, 0, 1235, 0,
	0, 1309, -2, -2, 1308, 1312, 1313, -2, -2, -2,
	-2, 1231, 0, 1240, 1237, 0, 1294, 1086, 1087, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 1591, 0,
	-2, 1570, 1573, 1577, 1579, 1581, 0, 0, 0, 0,
	0, 0, 1787, 0, 1789, 1592, 1842, 1845, 1759, 0,
	0, 1282, 1283, 1283, 0, 1659, 0, 1795, 0, 1802,
	1803, 0, 1652, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1663, 0, 0, 0, 0, 1695,
	1698, 1701, 1704, 0, 0, 0, 0, 1684, 0, 0,
	0, 1688, 1458, 1444, 0, 1486, 1484, 1485, 1479, 1486,
	1483, 1436, 0, 1435, 0, 1708, 0, 1710, 1712, 0,
	0, 1714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1598, 1599, 1600, 1715, 1824,
	1825, 0, 0, 0, 0, 0, 0, 1721, 0, 1830,
	1722, 1724, 1272, 0, 1265, 0, 1322, 1317, 1401, 0,
	1851, 1376, 1324, 1326, 1852, 1890, 1317, 1317, 0, 1799,
	0, 0, 1367, 0, 0, 0, 1369, 1340, 0, 0,
	1334, 0, 1330, 1331, 1332, 1333, 1341, 989, 1371, 1343,
	1347, 1909, 0, 1373, 0, 1358, 0, 1360, 1392, 0,
	1352, 1355, 0, 0, 1924, 250, 275, 279, 280, 276,
	277, 278, 507, 0, 0, 1801, 0, 1408, 0, 1414,
	0, 0, 0, 0, 511, 0, 561, -2, 594, 595,
	597, 0, 593, 127, 1105, 0, 0, 1090, 1092, 0,
	132, 2245, 141, 0, 927, 0, 1891, 0, 0, 0,
	0, 0, 1107, 0, 0, 2245, 161, 2245, 161, 144,
	147, 0, 151, 149, 0, 0, 918, 88, 1105, 0,
	91, 95, 103, 0, 0, 0, 109, 0, 0, 0,
	1094, 1098, 0, 0, 1016, 1017, 1020, 1026, 72, 0,
	0, 1096, 1100, 1089, 153, 93, 97, 104, 0, 1102,
	90, 0, 175, 0, 0, 0, 167, 0, 168, 169,
	176, 177, 178, 180, 0, 161, 2245, 0, 854, 855,
	1052, 1030, 1031, 0, 1036, 186, 0, 1376, 194, 0,
	1865, 0, 0, 0, 0, 0, 0, 885, 971, 0,
	0, 0, 0, 360, 356, 0, 365, 371, 370, 852,
	0, 0, 0, -2, 1067, 1061, 1062, 0, 0, 0,
	2245, 1173, 1177, 0, 1176, 1270, 1283, 375, 1178, 1201,
	0, 0, 0, 1188, 1184, 1181, 1402, 0, 0, 0,
	0, 0, 321, 405, 408, 411, 1857, 161, 417, 420,
	425, 444, 445, 224, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 896, 0, 1932, 1932, 0, 1895, 0,
	0, 0, 0, 216, 1376, 0, 550, 0, 0, 0,
	718, 720, 723, 759, 761, 774, 800, 801, 913, 0,
	913, 0, 0, 1233, 0, 1306, 1239, 1288, 1289, 0,
	1088, 0, 1511, 1554, 0, 0, -2, 0, 0, 1558,
	0, 0, 0, -2, 0, 0, 0, 1788, 1790, 0,
	1844, 1654, 0, 0, 0, 1658, 1642, 1643, 0, 1762,
	1805, 1834, 1838, 0, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 0, 1884, 1910, 1914, 1735, 1736, 1740, 1898, 0,
	0, 0, 1667, 0, 0, 0, 0, 0, 0, 0,
	0, 1477, 1481, 0, 0, 1806, 1817, 1819, 1596, 1597,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	-2, -2, -2, 1614, 1615, 1616, -2, -2, -2, 0,
	0, 0, 1820, 1822, 1823, 1827, 1828, 0, 1718, 1719,
	1720, 1829, 0, 1272, 1266, 1319, 0, 1400, 1323, 0,
	1319, 1319, 1279, 1365, 0, 0, 1388, 0, 1337, 0,
	1338, 0, 1370, 0, 1345, 1348, 1349, 1359, 0, 1351,
	0, 1354, 0, 1654, -2, 509, 493, 0, 0, 1410,
	0, 0, 1461, 1465, 1489, 513, 1374, 0, 0, 0,
	0, 162, 925, 952, 0, 0, 0, 1081, 1088, 0,
	0, 958, 134, 0, 0, 0, 142, 0, 0, 139,
	0, 146, 150, 0, 0, 0, 0, 0, 0, 106,
	107, 108, 0, 113, 0, 114, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 1085, 0,
	0, 182, 0, 0, 0, 1055, 1056, 192, 0, 195,
	0, 198, 199, 0, 194, 188, 0, 0, 295, 989,
	301, 907, 959, 0, 961, 0, 860, 0, 0, 960,
	352, 0, 359, 0, 1010, 0, 0, 1033, 0, 1066,
	1068, 1076, 0, 0, 0, 1175, 1177, 0, 1168, 1169,
	1302, 1179, 1199, -2, 1198, 0, 1283, 1207, 1204, 1210,
	1211, 0, 414, 246, 0, 241, 243, 0, 227, 0,
	0, 888, 893, 0, 0, 0, 0, 0, 1190, 1192,
	0, 249, 233, 0, 686, 708, 769, 802, 912, 0,
	0, 804, 0, 0, 1305, 1292, 1293, 1290, 1088, 1556,
	1560, 0, 0, 0, 1562, -2, 0, 1584, -2, -2,
	1791, 1843, 1633, 1283, 1655, 1657, 1644, 1837, 1506, 0,
	1742, 1739, 0, 1726, 0, 1679, 1680, 0, 0, 1683,
	1685, 1686, 1687, 1445, 1438, 1437, 1816, 0, 0, 0,
	0, 1717, 1267, 0, 1731, 0, 0, 1327, 1731, 1731,
	1366, 0, 1368, 1335, 1328, 0, 1910, 1361, 1353, 0,
	0, 1404, 1409, 0, 1415, 1460, 128, 129, 131, 0,
	926, 0, 929, 0, 0, 0, 0, 936, 937, 0,
	0, 0, 0, 0, 946, 0, 975, 985, 0, 1294,
	0, 0, 0, 136, 156, 0, 0, 1106, 0, 0,
	161, 161, 0, 0, 1091, 1093, 0, 0, 0, 0,
	116, 0, 0, 1095, 1099, 1097, 1101, 0, 0, 1103,
	173, 174, 0, 161, 0, 166, 161, 161, 1085, 0,
	0, 0, 0, 0, 187, 239, 194, 0, 915, 0,
	971, 963, 964, 965, 0, 970, 972, 0, 0, 873,
	0, 869, 0, 0, 862, 886, 859, 0, 357, 1007,
	1041, 989, 1059, 0, 0, 0, 0, 0, 0, 1165,
	1177, 0, 1170, 1171, 1201, 1301, 0, 0, 0, 1187,
	1302, 0, 248, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 217, 552, 554, 0, 0, 560,
	911, 0, 0, 0, 0, 1291, 1564, -2, -2, 1585,
	0, 1911, 1913, 1283, 0, 1728, 1285, 0, 0, -2,
	0, 0, 0, 1268, 1251, 0, 1318, 1316, 1252, 1253,
	1387, 0, 1356, 0, 1411, 133, 0, 930, 931, 1894,
	933, 0, 935, 938, 0, 941, 1934, 0, 945, 0,
	954, 976, 0, 907, 0, 981, 982, 983, 1082, 1083,
	987, 0, 135, 137, 155, 1085, 0, 138, 145, 0,
	0, 92, 0, 0, 1989, 119, 117, 115, 94, 0,
	175, 181, 1084, 170, 183, 161, 0, 196, 0, 197,
	200, 0, 0, 859, 914, 0, 962, 0, 973, 974,
	863, 0, 861, 0, 0, 0, 0, 0, 358, 361,
	0, 364, 0, 1069, 0, 1075, 0, 0, 0, 0,
	1172, 1173, 373, 0, 0, 0, 1201, 1212, 226, 0,
	0, 894, 897, 898, 899, 900, 901, 902, 903, 904,
	905, 895, 987, 0, 0, 951, 0, 231, 0, 556,
	0, 558, 0, 803, 805, 0, 0, 1656, 1746, 0,
	0, 1681, 1682, -2, 0, 1622, 1730, 1732, 0, 1329,
	1405, 928, 932, 0, 0, 0, 993, 0, 0, 947,
	0, 979, 980, 915, 0, 907, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 165, 184, 1085, 193,
	211, 0, 1042, 863, 0, 0, 871, 0, 874, 0,
	870, 867, 868, 907, 0, 362, 363, 0, 0, 1076,
	0, 0, 1174, 1175, 0, 1194, 1195, 1197, 1202, 0,
	0, 985, 987, 1402, 0, 555, 0, 0, 808, 809,
	0, 0, 0, 0, 1741, 1286, 1623, 0, 0, 0,
	0, 940, 998, 0, 0, 0, 977, 978, 975, 0,
	956, 0, 989, 140, 0, 987, 0, 919, 0, 0,
	922, 0, 0, 120, 1989, 118, 0, 161, 214, 0,
	207, 208, 205, 206, 857, 0, 0, 967, 969, 0,
	875, 915, 873, 1043, 987, 0, 985, 0, 1166, 0,
	1196, 249, 249, 907, 985, 950, 249, 557, 559, 1738,
	1758, 1747, -2, 2206, 1993, 0, 1758, 1758, 1733, 1734,
	0, 0, 942, 994, 995, 0, 990, 991, 992, 1933,
	943, 944, 1402, 984, 0, 993, 157, 907, 916, 0,
	0, 917, 0, 0, 123, 0, 125, 185, 201, 0,
	0, 0, 966, 0, 0, 0, 0, 859, 863, 985,
	0, 907, 0, 1402, 228, 229, 915, 907, 230, 1743,
	0, 0, 1749, 1750, 1751, 1752, 1753, 1744, 1745, 934,
	0, 996, 0, 997, 0, 0, 0, 955, 0, 998,
	143, 920, 0, 923, 0, 121, 0, 209, 210, 0,
	968, 864, 0, 866, 863, 872, 907, 0, 915, 0,
	1193, 1402, 915, 0, 1755, 1756, 0, 0, 0, 999,
	0, 1002, 1003, 0, 1000, 0, 975, 0, 0, 0,
	910, 865, 858, 915, 987, 1402, 985, 948, 1402, 1754,
	1757, 1748, 939, 1001, 1004, 1005, 986, 957, 0, 0,
	0, 906, 908, 909, 1402, 985, 1072, 907, 949, 915,
	0, 212, 0, 1070, 907, 915, 921, 0, 0, 915,
	1402, 0, 213, 1402, 1073, 0, 1071, 915, 924,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 492, 3, 498, 493, 3,
	503, 504, 496, 494, 508, 495, 505, 497, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 511, 3,
	484, 486, 485, 489, 507, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 501, 3, 502, 499, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 509, 491, 510, 487,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 488, 57827, 490, 57828, 500, 57829, 506,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1197
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1202
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1204
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1207
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1208
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1209
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1210
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1211
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1212
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1213
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1214
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1221
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1230
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1231
		{
			return helpWith(sqllex, "ALTER")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1234
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1235
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1236
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1237
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1238
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1239
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1240
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1241
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1242
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1298
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1324
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1337
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1354
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1358
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 72:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1362
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1376
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1395
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 86:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1427
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1431
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1435
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1441
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1445
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1451
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1460
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1471
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1475
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1481
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1489
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1499
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1503
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1513
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1524
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1531
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1543
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1550
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1558
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1563
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1567
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1572
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1578
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1586
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1597
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1607
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 114:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1617
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1626
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1637
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1643
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1651
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1655
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1659
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1663
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1669
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1674
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1685
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1689
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1695
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1699
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1706
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1711
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1716
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1726
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1731
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1746
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1751
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1765
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1777
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1787
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1794
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 143:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1798
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1806
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1813
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1822
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1843
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1852
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1860
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1874
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1878
		{
			sqlVAL.union.val = nil
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1888
		{
			sqlVAL.union.val = nil
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1903
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1909
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1913
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 164:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1938
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1949
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1960
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1970
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1979
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1988
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 170:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1992
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1996
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1999
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2003
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2017
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2072
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2083
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2092
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2096
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2100
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2108
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2112
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2116
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2123
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2127
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2136
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleName:    sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2240
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2245
		{
			sqlVAL.union.val = nil
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2257
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2265
		{
			sqlVAL.union.val = nil
		}
	case 208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2271
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2279
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2283
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2287
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 213:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2297
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2301
		{
			sqlVAL.union.val = nil
		}
	case 215:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(), Subdir: sqlDollar[4].union.expr(), From: sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf: sqlDollar[7].union.asOfClause(), Options: sqlDollar[8].union.kvOptions(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2347
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2365
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2371
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2408
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2417
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2423
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2428
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2433
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2438
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2443
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2447
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2463
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2466
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2474
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2482
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2486
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2492
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2502
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2510
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2514
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2524
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2544
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2558
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2559
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2560
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2561
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2571
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2579
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2581
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2585
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2588
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2598
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2607
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2615
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2621
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2624
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2634
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2651
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2657
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2660
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2672
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2691
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2696
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2708
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2710
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2711
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2712
		{
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2713
		{
			return helpWith(sqllex, "CREATE")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2716
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2717
		{
			return unimplemented(sqllex, "create cast")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2718
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2719
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2720
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2721
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2722
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2723
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2724
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2725
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2726
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 301:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2727
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2728
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2729
		{
			return unimplemented(sqllex, "create operator")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2730
		{
			return unimplemented(sqllex, "create publication")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2731
		{
			return unimplemented(sqllex, "create rule")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2732
		{
			return unimplemented(sqllex, "create server")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2733
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2734
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2735
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2738
		{
		}
	case 311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2739
		{
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2742
		{
		}
	case 313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2743
		{
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2746
		{
		}
	case 315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2747
		{
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2750
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2751
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2752
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2753
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2754
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2755
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2756
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2757
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2758
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2759
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2760
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2761
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2762
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2763
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2764
		{
			return unimplemented(sqllex, "drop server")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2765
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2766
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2767
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2771
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2772
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2773
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2774
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2775
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2777
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2778
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2779
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2780
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2798
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2802
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2806
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2812
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2816
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2825
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2848
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2859
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2879
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2887
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2897
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2922
		{

			sqlVAL.union.val = nil
		}
	case 373:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2946
		{
			return helpWith(sqllex, "DELETE")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2949
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2950
		{
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2958
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2961
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2962
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2963
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2964
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2965
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2974
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2975
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2976
		{
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2977
		{
			return helpWith(sqllex, "DROP")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2980
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2981
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2982
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2983
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2984
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2985
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2986
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3001
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3016
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3028
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3031
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3039
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3056
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3072
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3079
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3086
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3094
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3101
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3118
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3133
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3137
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3158
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3162
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3167
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3180
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3185
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3187
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3192
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3196
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3218
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3225
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3227
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3235
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3243
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3251
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3259
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3270
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3274
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3277
		{
			return helpWith(sqllex, "DELETE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3279
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3280
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3281
		{
			return helpWith(sqllex, "INSERT")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3284
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3286
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3294
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3295
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3296
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3301
		{
			return helpWith(sqllex, "DELETE")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3302
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3303
		{
			return helpWith(sqllex, "INSERT")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3305
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3309
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3310
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3314
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3318
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3328
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3336
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3344
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3369
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3377
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3399
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3403
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3407
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3410
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3434
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3438
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3441
		{
			return helpWith(sqllex, "GRANT")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3461
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3469
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3472
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3477
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3481
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3491
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3495
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3509
		{
			return helpWith(sqllex, "RESET")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3510
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3518
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3522
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3525
		{
			return helpWith(sqllex, "RESET")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3536
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "USE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3555
		{
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3556
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3557
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3561
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3562
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "USE")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3579
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3594
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3597
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3615
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3623
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 553:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3637
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3641
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3647
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3651
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3655
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3677
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3687
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3703
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 568:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3712
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3729
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3732
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3734
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3737
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3741
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3760
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3767
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3772
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3777
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3782
		{
			return unimplemented(sqllex, "set from current")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3783
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3791
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3796
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3824
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3845
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3855
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3859
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3863
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3867
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3871
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3877
		{
			sqlVAL.union.val = tree.Low
		}
	case 600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3881
		{
			sqlVAL.union.val = tree.Normal
		}
	case 601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3885
		{
			sqlVAL.union.val = tree.High
		}
	case 602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3896
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3900
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3904
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3927
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3928
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3929
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3930
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3931
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3932
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3933
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3935
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3936
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3937
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3938
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3939
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3940
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3941
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3942
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3944
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3945
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3946
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3947
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3948
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3949
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3950
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3951
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3952
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3953
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3954
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3955
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3957
		{
			return helpWith(sqllex, "SHOW")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3958
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3963
		{
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3964
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3967
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3971
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3976
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3981
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3986
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3998
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.str = "client_encoding"
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.str = "timezone"
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4013
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4027
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4031
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4035
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4046
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4054
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4062
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4070
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4079
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4088
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4096
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4106
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4110
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4113
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4115
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4118
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4120
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4124
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4135
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4138
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4146
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4150
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4154
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4161
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4172
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4179
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4182
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4195
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4214
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4216
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4229
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4236
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4244
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4247
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4249
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4252
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4263
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4265
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4268
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = true
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4274
		{
			sqlVAL.union.val = true
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4276
		{
			sqlVAL.union.val = false
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4287
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4291
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4294
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4295
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4297
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4308
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4310
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4318
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4326
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4336
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4342
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4344
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4350
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4358
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4362
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4366
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 755:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4376
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4390
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4395
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4397
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4401
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4404
		{
			sqlVAL.union.val = true
		}
	case 764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4405
		{
			sqlVAL.union.val = false
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4413
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4416
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4418
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4421
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4439
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4452
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4455
		{
			sqlVAL.union.val = true
		}
	case 774:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.union.val = false
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4470
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4477
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4481
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4484
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4491
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4495
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4502
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4515
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4523
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4528
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4533
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4537
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4549
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4553
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4569
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4577
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4580
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4584
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4588
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4592
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4600
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4608
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4615
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4626
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4637
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4645
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4651
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4660
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4672
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4676
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4683
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 817:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4688
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4816
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4855
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4859
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4864
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4868
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4876
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 829:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4911
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4922
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4923
		{
			return helpWith(sqllex, "RESUME")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4933
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4941
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4943
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4950
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4959
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4974
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4982
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4990
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4998
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5004
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5010
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5021
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5030
		{
			return unimplementedWithIssueDetail(sqllex, 50882, "ALTER SCHEMA OWNER TO")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5033
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5072
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5087
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5104
		{
			sqlVAL.union.val = nil
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5108
		{

			sqlVAL.union.val = nil
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5114
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5119
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5129
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5134
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5139
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5146
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5150
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5160
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 871:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5166
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5179
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5193
		{
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5194
		{
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5195
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = true
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5214
		{
			sqlVAL.union.val = true
		}
	case 878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5215
		{
			sqlVAL.union.val = false
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5219
		{
			sqlVAL.union.val = true
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5220
		{
			sqlVAL.union.val = true
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = true
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = true
		}
	case 884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5223
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5228
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5234
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5238
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5267
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5278
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5280
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5281
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5284
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5285
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5291
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5307
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5312
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 910:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5317
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 913:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.str = ""
		}
	case 915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5337
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 916:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5343
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5350
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 921:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5373
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5383
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5387
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 924:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5393
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5407
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 927:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5452
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5478
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5493
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5497
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5501
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5511
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5515
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5519
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5526
		{
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5527
		{
		}
	case 948:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
				Predicate:   sqlDollar[10].union.expr(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5544
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
					Predicate:   sqlDollar[11].union.expr(),
				},
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:      tree.Name(sqlDollar[3].str),
				Columns:   sqlDollar[5].union.idxElems(),
				Inverted:  true,
				Predicate: sqlDollar[7].union.expr(),
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5569
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5581
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5598
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5622
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5633
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5640
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5650
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5660
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5671
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5675
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5699
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5703
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 971:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5719
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5725
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5729
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5740
		{
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5741
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5742
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5743
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5744
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5745
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 986:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5779
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5785
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5809
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5813
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5817
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5852
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5870
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5874
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5878
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5901
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5910
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5918
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5922
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5925
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5926
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5929
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5930
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5932
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5933
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5934
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5944
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5947
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5949
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5951
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5953
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5954
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5957
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5959
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5961
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5969
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5972
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5976
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5994
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5997
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6005
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6012
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = true
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6022
		{

			sqlVAL.union.val = true
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6027
		{
			sqlVAL.union.val = false
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6037
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6051
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Temporary:   sqlDollar[4].union.persistenceType(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6063
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6074
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6102
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = nil
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6118
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6127
		{
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6128
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6144
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6146
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6148
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6150
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6152
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6154
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6158
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6162
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6190
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[5].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Columns:      sqlDollar[10].union.idxElems(),
				Sharded:      sqlDollar[12].union.shardedIndexDef(),
				Storing:      sqlDollar[13].union.nameList(),
				Interleave:   sqlDollar[14].union.interleave(),
				PartitionBy:  sqlDollar[15].union.partitionBy(),
				Predicate:    sqlDollar[16].union.expr(),
				Inverted:     sqlDollar[8].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6207
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[8].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Sharded:      sqlDollar[15].union.shardedIndexDef(),
				Storing:      sqlDollar[16].union.nameList(),
				Interleave:   sqlDollar[17].union.interleave(),
				PartitionBy:  sqlDollar[18].union.partitionBy(),
				Inverted:     sqlDollar[11].union.bool(),
				Predicate:    sqlDollar[19].union.expr(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6225
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[6].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				Columns:      sqlDollar[10].union.idxElems(),
				Storing:      sqlDollar[12].union.nameList(),
				Interleave:   sqlDollar[13].union.interleave(),
				PartitionBy:  sqlDollar[14].union.partitionBy(),
				Predicate:    sqlDollar[15].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:6241
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[9].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Storing:      sqlDollar[15].union.nameList(),
				Interleave:   sqlDollar[16].union.interleave(),
				PartitionBy:  sqlDollar[17].union.partitionBy(),
				Predicate:    sqlDollar[18].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6257
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6261
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = false
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6282
		{
			sqlVAL.union.val = true
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6286
		{
			sqlVAL.union.val = false
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6292
		{
			sqlVAL.union.val = true
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.union.val = false
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6302
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6306
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6315
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6337
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.str = ""
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6356
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6362
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6368
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6382
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6418
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6424
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6432
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6438
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6450
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6455
		{
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6456
		{
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6459
		{
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6460
		{
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6468
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6471
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6489
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6498
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6519
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6527
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6548
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6550
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6556
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6567
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6571
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6572
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6573
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6592
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6597
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6607
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6610
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6615
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6619
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6624
		{
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6625
		{
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6626
		{
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6640
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6643
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6646
		{
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6647
		{
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6661
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6671
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6675
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6688
		{
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6690
		{
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6694
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6699
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6713
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6759
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.str = ""
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.str = ""
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6787
		{
			sqlVAL.str = ""
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6793
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6797
		{
			sqlVAL.str = ""
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6802
		{
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6803
		{
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6829
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6847
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6851
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6860
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6871
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6885
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6909
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6913
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6926
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6927
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6935
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6940
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6944
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6961
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6973
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6979
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7005
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7058
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7062
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7097
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7115
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7119
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7123
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7138
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7139
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7145
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7150
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7155
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7190
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7191
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7192
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7227
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7253
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7297
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7313
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7324
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = true
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = false
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7366
		{
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7367
		{
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = nil
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7380
		{
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7381
		{
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = true
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = false
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = false
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = true
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7410
		{
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7411
		{
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7452
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7473
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7478
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7507
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7540
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7554
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7595
		{
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7596
		{
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7599
		{
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7600
		{
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7617
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7621
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7650
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7653
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7655
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7667
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7670
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7672
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7678
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7692
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7697
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7702
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7713
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7725
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7744
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7783
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7793
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7820
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7828
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7839
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7869
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7902
		{
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7904
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = nil
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7917
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = true
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = false
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7951
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7963
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7997
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.str = tree.AstFull
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.str = tree.AstRight
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.str = tree.AstInner
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8021
		{
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8022
		{
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.str = tree.AstHash
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.str = ""
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8072
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8084
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8089
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8107
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8113
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8119
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8129
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8146
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8158
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8171
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8179
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8180
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8198
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8200
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8208
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8221
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8228
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8237
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8277
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.IDTypeReference{ID: uint32(id)}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8289
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8290
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8296
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = types.Geography
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8304
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8314
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8322
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8348
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8356
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = nil
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = types.Int2
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = types.Int
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = types.Float4
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = types.Float
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8399
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8407
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8415
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = types.Bool
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8429
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = types.Float
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8448
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8454
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8476
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = types.String
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = true
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = false
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = types.Date
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8525
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8533
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8547
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8556
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8564
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8581
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = true
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = false
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = false
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = types.Interval
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8605
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8689
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8704
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8720
		{
			sqlVAL.union.val = nil
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8726
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8734
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8794
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8947
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9046
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9068
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9112
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9134
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9222
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9226
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9328
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9333
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9359
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9368
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9383
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9413
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9424
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9425
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9440
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9449
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9515
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9640
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9645
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9647
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9654
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9663
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9672
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9681
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9686
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9691
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9696
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9701
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9710
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9711
		{
			return unimplemented(sqllex, "treat")
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9732
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9737
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9753
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9764
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9784
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.str = ""
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9851
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9873
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9886
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9954
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9983
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = tree.Any
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = tree.Some
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = tree.All
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = tree.Div
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = tree.LT
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = tree.GT
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = tree.LE
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.union.val = tree.GE
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = tree.NE
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = tree.Like
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10082
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10086
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10103
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10230
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10234
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10344
		{
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10345
		{
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10417
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10425
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10498
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10514
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10523
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10534
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10543
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10551
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10563
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10664
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10723
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10741
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10754
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10761
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.str = ""
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
