// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:78

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:724
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE = lex.FORCE
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lex.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NON_VOTERS = lex.NON_VOTERS
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCANS = lex.SCANS
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_LOCALITIES_CHECK = lex.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const VOTERS = lex.VOTERS
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12903

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1495,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	259, 397,
	-2, 0,
	-1, 74,
	241, 234,
	508, 234,
	-2, 0,
	-1, 87,
	229, 1255,
	243, 1255,
	259, 393,
	386, 393,
	396, 1025,
	432, 393,
	445, 1025,
	492, 1025,
	519, 393,
	545, 1025,
	-2, 0,
	-1, 93,
	132, 1495,
	236, 1495,
	530, 1495,
	531, 1495,
	-2, 0,
	-1, 109,
	150, 1466,
	169, 1466,
	182, 1466,
	239, 1466,
	272, 1466,
	338, 1466,
	348, 1466,
	525, 1466,
	-2, 1437,
	-1, 148,
	158, 882,
	258, 882,
	389, 849,
	450, 849,
	491, 849,
	511, 882,
	513, 849,
	-2, 0,
	-1, 151,
	4, 1497,
	21, 1497,
	22, 1497,
	23, 1497,
	24, 1497,
	25, 1497,
	26, 1497,
	27, 1497,
	29, 1497,
	30, 1497,
	36, 1497,
	41, 1497,
	42, 1497,
	44, 1497,
	45, 1497,
	46, 1497,
	47, 1497,
	48, 1497,
	49, 1497,
	50, 1497,
	51, 1497,
	53, 1497,
	54, 1497,
	55, 1497,
	56, 1497,
	58, 1497,
	59, 1497,
	60, 1497,
	61, 1497,
	62, 1497,
	63, 1497,
	64, 1497,
	68, 1497,
	69, 1497,
	70, 1497,
	71, 1497,
	73, 1497,
	74, 1497,
	75, 1497,
	79, 1497,
	80, 1497,
	81, 1497,
	82, 1497,
	83, 1497,
	84, 1497,
	85, 1497,
	88, 1497,
	89, 1497,
	90, 1497,
	91, 1497,
	92, 1497,
	94, 1497,
	96, 1497,
	97, 1497,
	98, 1497,
	99, 1497,
	100, 1497,
	101, 1497,
	103, 1497,
	104, 1497,
	105, 1497,
	107, 1497,
	108, 1497,
	109, 1497,
	117, 1497,
	118, 1497,
	119, 1497,
	120, 1497,
	121, 1497,
	123, 1497,
	124, 1497,
	125, 1497,
	127, 1497,
	128, 1497,
	129, 1497,
	131, 1497,
	132, 1497,
	133, 1497,
	135, 1497,
	136, 1497,
	137, 1497,
	140, 1497,
	141, 1497,
	142, 1497,
	144, 1497,
	145, 1497,
	147, 1497,
	148, 1497,
	149, 1497,
	151, 1497,
	152, 1497,
	153, 1497,
	154, 1497,
	155, 1497,
	156, 1497,
	157, 1497,
	158, 1497,
	159, 1497,
	160, 1497,
	161, 1497,
	162, 1497,
	163, 1497,
	164, 1497,
	165, 1497,
	166, 1497,
	168, 1497,
	174, 1497,
	175, 1497,
	176, 1497,
	177, 1497,
	181, 1497,
	183, 1497,
	184, 1497,
	188, 1497,
	189, 1497,
	190, 1497,
	191, 1497,
	192, 1497,
	193, 1497,
	194, 1497,
	195, 1497,
	196, 1497,
	197, 1497,
	198, 1497,
	199, 1497,
	200, 1497,
	202, 1497,
	203, 1497,
	205, 1497,
	206, 1497,
	208, 1497,
	209, 1497,
	210, 1497,
	211, 1497,
	212, 1497,
	213, 1497,
	214, 1497,
	215, 1497,
	216, 1497,
	218, 1497,
	219, 1497,
	221, 1497,
	222, 1497,
	223, 1497,
	224, 1497,
	225, 1497,
	229, 1497,
	230, 1497,
	231, 1497,
	232, 1497,
	233, 1497,
	236, 1497,
	237, 1497,
	238, 1497,
	240, 1497,
	242, 1497,
	243, 1497,
	245, 1497,
	247, 1497,
	248, 1497,
	249, 1497,
	251, 1497,
	255, 1497,
	256, 1497,
	257, 1497,
	258, 1497,
	259, 1497,
	260, 1497,
	262, 1497,
	263, 1497,
	264, 1497,
	266, 1497,
	267, 1497,
	269, 1497,
	270, 1497,
	273, 1497,
	277, 1497,
	278, 1497,
	279, 1497,
	282, 1497,
	283, 1497,
	284, 1497,
	285, 1497,
	287, 1497,
	288, 1497,
	289, 1497,
	290, 1497,
	291, 1497,
	292, 1497,
	293, 1497,
	294, 1497,
	295, 1497,
	296, 1497,
	297, 1497,
	298, 1497,
	299, 1497,
	300, 1497,
	301, 1497,
	302, 1497,
	303, 1497,
	304, 1497,
	305, 1497,
	306, 1497,
	307, 1497,
	308, 1497,
	310, 1497,
	312, 1497,
	313, 1497,
	314, 1497,
	315, 1497,
	316, 1497,
	317, 1497,
	318, 1497,
	319, 1497,
	320, 1497,
	321, 1497,
	322, 1497,
	323, 1497,
	325, 1497,
	326, 1497,
	328, 1497,
	330, 1497,
	331, 1497,
	333, 1497,
	334, 1497,
	335, 1497,
	336, 1497,
	337, 1497,
	340, 1497,
	343, 1497,
	344, 1497,
	345, 1497,
	346, 1497,
	349, 1497,
	350, 1497,
	351, 1497,
	353, 1497,
	355, 1497,
	356, 1497,
	357, 1497,
	358, 1497,
	359, 1497,
	360, 1497,
	361, 1497,
	362, 1497,
	363, 1497,
	364, 1497,
	365, 1497,
	366, 1497,
	368, 1497,
	369, 1497,
	370, 1497,
	371, 1497,
	372, 1497,
	373, 1497,
	374, 1497,
	375, 1497,
	376, 1497,
	377, 1497,
	378, 1497,
	379, 1497,
	380, 1497,
	381, 1497,
	382, 1497,
	384, 1497,
	385, 1497,
	387, 1497,
	388, 1497,
	389, 1497,
	390, 1497,
	391, 1497,
	392, 1497,
	393, 1497,
	394, 1497,
	395, 1497,
	396, 1497,
	397, 1497,
	398, 1497,
	400, 1497,
	402, 1497,
	403, 1497,
	404, 1497,
	409, 1497,
	411, 1497,
	412, 1497,
	413, 1497,
	414, 1497,
	415, 1497,
	416, 1497,
	417, 1497,
	418, 1497,
	419, 1497,
	421, 1497,
	422, 1497,
	423, 1497,
	425, 1497,
	426, 1497,
	427, 1497,
	428, 1497,
	429, 1497,
	430, 1497,
	432, 1497,
	433, 1497,
	434, 1497,
	435, 1497,
	436, 1497,
	437, 1497,
	438, 1497,
	439, 1497,
	440, 1497,
	441, 1497,
	442, 1497,
	443, 1497,
	445, 1497,
	446, 1497,
	447, 1497,
	448, 1497,
	449, 1497,
	450, 1497,
	452, 1497,
	453, 1497,
	454, 1497,
	455, 1497,
	456, 1497,
	457, 1497,
	459, 1497,
	460, 1497,
	461, 1497,
	462, 1497,
	463, 1497,
	464, 1497,
	465, 1497,
	466, 1497,
	468, 1497,
	470, 1497,
	471, 1497,
	472, 1497,
	473, 1497,
	474, 1497,
	475, 1497,
	476, 1497,
	477, 1497,
	478, 1497,
	479, 1497,
	480, 1497,
	481, 1497,
	482, 1497,
	483, 1497,
	484, 1497,
	485, 1497,
	487, 1497,
	488, 1497,
	490, 1497,
	491, 1497,
	493, 1497,
	494, 1497,
	495, 1497,
	496, 1497,
	497, 1497,
	498, 1497,
	499, 1497,
	500, 1497,
	501, 1497,
	503, 1497,
	504, 1497,
	505, 1497,
	506, 1497,
	507, 1497,
	509, 1497,
	511, 1497,
	512, 1497,
	513, 1497,
	514, 1497,
	515, 1497,
	516, 1497,
	518, 1497,
	519, 1497,
	520, 1497,
	521, 1497,
	523, 1497,
	524, 1497,
	527, 1497,
	528, 1497,
	529, 1497,
	530, 1497,
	531, 1497,
	532, 1497,
	533, 1497,
	535, 1497,
	538, 1497,
	539, 1497,
	540, 1497,
	541, 1497,
	542, 1497,
	543, 1497,
	545, 1497,
	546, 1497,
	547, 1497,
	548, 1497,
	550, 1497,
	555, 1497,
	556, 1497,
	557, 1497,
	558, 1497,
	559, 1497,
	560, 1497,
	-2, 0,
	-1, 152,
	1, 1352,
	130, 1352,
	247, 1352,
	327, 1352,
	384, 1352,
	393, 1352,
	564, 1352,
	588, 1352,
	-2, 0,
	-1, 154,
	1, 1352,
	588, 1352,
	-2, 0,
	-1, 155,
	1, 1352,
	588, 1352,
	-2, 0,
	-1, 156,
	1, 1352,
	508, 1352,
	588, 1352,
	-2, 0,
	-1, 184,
	150, 1465,
	169, 1465,
	182, 1465,
	239, 1465,
	272, 1465,
	338, 1465,
	348, 1465,
	525, 1465,
	-2, 1440,
	-1, 230,
	4, 1504,
	5, 1504,
	6, 1504,
	7, 1504,
	8, 1504,
	9, 1504,
	10, 1504,
	21, 1504,
	22, 1504,
	23, 1504,
	24, 1504,
	25, 1504,
	26, 1504,
	27, 1504,
	29, 1504,
	30, 1504,
	36, 1504,
	37, 1504,
	41, 1504,
	42, 1504,
	43, 1504,
	44, 1504,
	45, 1504,
	46, 1504,
	47, 1504,
	48, 1504,
	49, 1504,
	50, 1504,
	51, 1504,
	53, 1504,
	54, 1504,
	55, 1504,
	56, 1504,
	58, 1504,
	59, 1504,
	60, 1504,
	61, 1504,
	62, 1504,
	63, 1504,
	64, 1504,
	65, 1504,
	66, 1504,
	67, 1504,
	68, 1504,
	69, 1504,
	70, 1504,
	71, 1504,
	73, 1504,
	74, 1504,
	75, 1504,
	77, 1504,
	79, 1504,
	80, 1504,
	81, 1504,
	82, 1504,
	83, 1504,
	84, 1504,
	85, 1504,
	88, 1504,
	89, 1504,
	90, 1504,
	91, 1504,
	92, 1504,
	94, 1504,
	96, 1504,
	97, 1504,
	98, 1504,
	99, 1504,
	100, 1504,
	101, 1504,
	103, 1504,
	104, 1504,
	105, 1504,
	106, 1504,
	107, 1504,
	108, 1504,
	109, 1504,
	110, 1504,
	111, 1504,
	112, 1504,
	113, 1504,
	114, 1504,
	115, 1504,
	116, 1504,
	117, 1504,
	118, 1504,
	119, 1504,
	120, 1504,
	121, 1504,
	122, 1504,
	123, 1504,
	124, 1504,
	125, 1504,
	126, 1504,
	127, 1504,
	128, 1504,
	129, 1504,
	131, 1504,
	132, 1504,
	133, 1504,
	135, 1504,
	136, 1504,
	137, 1504,
	140, 1504,
	141, 1504,
	142, 1504,
	144, 1504,
	145, 1504,
	147, 1504,
	148, 1504,
	149, 1504,
	151, 1504,
	152, 1504,
	153, 1504,
	154, 1504,
	155, 1504,
	156, 1504,
	157, 1504,
	158, 1504,
	159, 1504,
	160, 1504,
	161, 1504,
	162, 1504,
	163, 1504,
	164, 1504,
	165, 1504,
	166, 1504,
	167, 1504,
	168, 1504,
	174, 1504,
	175, 1504,
	176, 1504,
	177, 1504,
	181, 1504,
	183, 1504,
	184, 1504,
	187, 1504,
	188, 1504,
	189, 1504,
	190, 1504,
	191, 1504,
	192, 1504,
	193, 1504,
	194, 1504,
	195, 1504,
	196, 1504,
	197, 1504,
	198, 1504,
	199, 1504,
	200, 1504,
	202, 1504,
	203, 1504,
	205, 1504,
	206, 1504,
	208, 1504,
	209, 1504,
	210, 1504,
	211, 1504,
	212, 1504,
	213, 1504,
	214, 1504,
	215, 1504,
	216, 1504,
	217, 1504,
	218, 1504,
	219, 1504,
	221, 1504,
	222, 1504,
	223, 1504,
	224, 1504,
	225, 1504,
	229, 1504,
	230, 1504,
	231, 1504,
	232, 1504,
	233, 1504,
	235, 1504,
	236, 1504,
	237, 1504,
	238, 1504,
	240, 1504,
	242, 1504,
	243, 1504,
	244, 1504,
	245, 1504,
	246, 1504,
	247, 1504,
	248, 1504,
	249, 1504,
	250, 1504,
	251, 1504,
	255, 1504,
	256, 1504,
	257, 1504,
	258, 1504,
	259, 1504,
	260, 1504,
	262, 1504,
	263, 1504,
	264, 1504,
	266, 1504,
	267, 1504,
	268, 1504,
	269, 1504,
	270, 1504,
	271, 1504,
	273, 1504,
	277, 1504,
	278, 1504,
	279, 1504,
	280, 1504,
	281, 1504,
	282, 1504,
	283, 1504,
	284, 1504,
	285, 1504,
	287, 1504,
	288, 1504,
	289, 1504,
	290, 1504,
	291, 1504,
	292, 1504,
	293, 1504,
	294, 1504,
	295, 1504,
	296, 1504,
	297, 1504,
	298, 1504,
	299, 1504,
	300, 1504,
	301, 1504,
	302, 1504,
	303, 1504,
	304, 1504,
	305, 1504,
	306, 1504,
	307, 1504,
	308, 1504,
	310, 1504,
	311, 1504,
	312, 1504,
	313, 1504,
	314, 1504,
	315, 1504,
	316, 1504,
	317, 1504,
	318, 1504,
	319, 1504,
	320, 1504,
	321, 1504,
	322, 1504,
	323, 1504,
	324, 1504,
	325, 1504,
	326, 1504,
	327, 1504,
	328, 1504,
	329, 1504,
	330, 1504,
	331, 1504,
	332, 1504,
	333, 1504,
	334, 1504,
	335, 1504,
	336, 1504,
	337, 1504,
	340, 1504,
	344, 1504,
	345, 1504,
	346, 1504,
	349, 1504,
	350, 1504,
	351, 1504,
	352, 1504,
	353, 1504,
	354, 1504,
	355, 1504,
	356, 1504,
	357, 1504,
	358, 1504,
	359, 1504,
	360, 1504,
	361, 1504,
	362, 1504,
	363, 1504,
	364, 1504,
	365, 1504,
	366, 1504,
	368, 1504,
	369, 1504,
	370, 1504,
	371, 1504,
	372, 1504,
	373, 1504,
	374, 1504,
	375, 1504,
	376, 1504,
	377, 1504,
	378, 1504,
	379, 1504,
	380, 1504,
	381, 1504,
	382, 1504,
	384, 1504,
	385, 1504,
	387, 1504,
	388, 1504,
	389, 1504,
	390, 1504,
	391, 1504,
	392, 1504,
	393, 1504,
	394, 1504,
	395, 1504,
	396, 1504,
	397, 1504,
	398, 1504,
	400, 1504,
	402, 1504,
	403, 1504,
	404, 1504,
	409, 1504,
	411, 1504,
	412, 1504,
	413, 1504,
	414, 1504,
	415, 1504,
	416, 1504,
	417, 1504,
	418, 1504,
	419, 1504,
	421, 1504,
	422, 1504,
	423, 1504,
	424, 1504,
	425, 1504,
	426, 1504,
	427, 1504,
	428, 1504,
	429, 1504,
	430, 1504,
	432, 1504,
	433, 1504,
	434, 1504,
	435, 1504,
	436, 1504,
	437, 1504,
	438, 1504,
	439, 1504,
	440, 1504,
	441, 1504,
	442, 1504,
	443, 1504,
	445, 1504,
	446, 1504,
	447, 1504,
	448, 1504,
	449, 1504,
	450, 1504,
	451, 1504,
	452, 1504,
	453, 1504,
	454, 1504,
	455, 1504,
	456, 1504,
	457, 1504,
	458, 1504,
	459, 1504,
	460, 1504,
	461, 1504,
	462, 1504,
	463, 1504,
	464, 1504,
	465, 1504,
	466, 1504,
	468, 1504,
	470, 1504,
	471, 1504,
	472, 1504,
	473, 1504,
	474, 1504,
	475, 1504,
	476, 1504,
	477, 1504,
	478, 1504,
	479, 1504,
	480, 1504,
	481, 1504,
	482, 1504,
	483, 1504,
	484, 1504,
	485, 1504,
	487, 1504,
	488, 1504,
	489, 1504,
	490, 1504,
	491, 1504,
	493, 1504,
	494, 1504,
	495, 1504,
	496, 1504,
	497, 1504,
	498, 1504,
	499, 1504,
	500, 1504,
	501, 1504,
	503, 1504,
	504, 1504,
	505, 1504,
	506, 1504,
	507, 1504,
	509, 1504,
	511, 1504,
	512, 1504,
	513, 1504,
	514, 1504,
	515, 1504,
	516, 1504,
	517, 1504,
	518, 1504,
	519, 1504,
	520, 1504,
	521, 1504,
	523, 1504,
	524, 1504,
	526, 1504,
	527, 1504,
	528, 1504,
	529, 1504,
	530, 1504,
	531, 1504,
	532, 1504,
	533, 1504,
	534, 1504,
	535, 1504,
	538, 1504,
	539, 1504,
	540, 1504,
	541, 1504,
	542, 1504,
	543, 1504,
	545, 1504,
	546, 1504,
	547, 1504,
	548, 1504,
	550, 1504,
	555, 1504,
	556, 1504,
	557, 1504,
	558, 1504,
	559, 1504,
	560, 1504,
	561, 1504,
	569, 1504,
	576, 1504,
	577, 1504,
	578, 1504,
	585, 1504,
	589, 1504,
	-2, 0,
	-1, 729,
	4, 1253,
	21, 1253,
	22, 1253,
	23, 1253,
	24, 1253,
	25, 1253,
	26, 1253,
	27, 1253,
	29, 1253,
	30, 1253,
	36, 1253,
	41, 1253,
	42, 1253,
	44, 1253,
	45, 1253,
	46, 1253,
	47, 1253,
	48, 1253,
	49, 1253,
	50, 1253,
	51, 1253,
	53, 1253,
	54, 1253,
	55, 1253,
	56, 1253,
	58, 1253,
	59, 1253,
	60, 1253,
	61, 1253,
	62, 1253,
	63, 1253,
	64, 1253,
	68, 1253,
	69, 1253,
	70, 1253,
	71, 1253,
	73, 1253,
	74, 1253,
	75, 1253,
	79, 1253,
	80, 1253,
	81, 1253,
	82, 1253,
	83, 1253,
	84, 1253,
	85, 1253,
	88, 1253,
	89, 1253,
	90, 1253,
	91, 1253,
	92, 1253,
	94, 1253,
	96, 1253,
	97, 1253,
	98, 1253,
	99, 1253,
	100, 1253,
	101, 1253,
	103, 1253,
	104, 1253,
	105, 1253,
	107, 1253,
	108, 1253,
	109, 1253,
	117, 1253,
	118, 1253,
	119, 1253,
	120, 1253,
	121, 1253,
	123, 1253,
	124, 1253,
	125, 1253,
	127, 1253,
	128, 1253,
	129, 1253,
	131, 1253,
	132, 1253,
	133, 1253,
	135, 1253,
	136, 1253,
	137, 1253,
	140, 1253,
	141, 1253,
	142, 1253,
	144, 1253,
	145, 1253,
	147, 1253,
	148, 1253,
	149, 1253,
	151, 1253,
	152, 1253,
	153, 1253,
	154, 1253,
	155, 1253,
	156, 1253,
	157, 1253,
	158, 1253,
	159, 1253,
	160, 1253,
	161, 1253,
	162, 1253,
	163, 1253,
	164, 1253,
	165, 1253,
	166, 1253,
	168, 1253,
	174, 1253,
	175, 1253,
	176, 1253,
	177, 1253,
	181, 1253,
	183, 1253,
	184, 1253,
	188, 1253,
	189, 1253,
	190, 1253,
	191, 1253,
	192, 1253,
	193, 1253,
	194, 1253,
	195, 1253,
	196, 1253,
	197, 1253,
	198, 1253,
	199, 1253,
	200, 1253,
	202, 1253,
	203, 1253,
	205, 1253,
	206, 1253,
	208, 1253,
	209, 1253,
	210, 1253,
	211, 1253,
	212, 1253,
	213, 1253,
	214, 1253,
	215, 1253,
	216, 1253,
	218, 1253,
	219, 1253,
	221, 1253,
	222, 1253,
	223, 1253,
	224, 1253,
	225, 1253,
	229, 1253,
	230, 1253,
	231, 1253,
	232, 1253,
	233, 1253,
	236, 1253,
	237, 1253,
	238, 1253,
	240, 1253,
	242, 1253,
	243, 1253,
	245, 1253,
	247, 1253,
	248, 1253,
	249, 1253,
	251, 1253,
	255, 1253,
	256, 1253,
	257, 1253,
	258, 1253,
	259, 1253,
	260, 1253,
	262, 1253,
	263, 1253,
	264, 1253,
	266, 1253,
	267, 1253,
	269, 1253,
	270, 1253,
	273, 1253,
	277, 1253,
	278, 1253,
	279, 1253,
	282, 1253,
	283, 1253,
	284, 1253,
	285, 1253,
	287, 1253,
	288, 1253,
	289, 1253,
	290, 1253,
	291, 1253,
	292, 1253,
	293, 1253,
	294, 1253,
	295, 1253,
	296, 1253,
	297, 1253,
	298, 1253,
	299, 1253,
	300, 1253,
	301, 1253,
	302, 1253,
	303, 1253,
	304, 1253,
	305, 1253,
	306, 1253,
	307, 1253,
	308, 1253,
	310, 1253,
	312, 1253,
	313, 1253,
	314, 1253,
	315, 1253,
	316, 1253,
	317, 1253,
	318, 1253,
	319, 1253,
	320, 1253,
	321, 1253,
	322, 1253,
	323, 1253,
	325, 1253,
	326, 1253,
	328, 1253,
	330, 1253,
	331, 1253,
	333, 1253,
	334, 1253,
	335, 1253,
	336, 1253,
	337, 1253,
	340, 1253,
	344, 1253,
	345, 1253,
	346, 1253,
	349, 1253,
	350, 1253,
	351, 1253,
	353, 1253,
	355, 1253,
	356, 1253,
	357, 1253,
	358, 1253,
	359, 1253,
	360, 1253,
	361, 1253,
	362, 1253,
	363, 1253,
	364, 1253,
	365, 1253,
	366, 1253,
	368, 1253,
	369, 1253,
	370, 1253,
	371, 1253,
	372, 1253,
	373, 1253,
	374, 1253,
	375, 1253,
	376, 1253,
	377, 1253,
	378, 1253,
	379, 1253,
	380, 1253,
	381, 1253,
	382, 1253,
	384, 1253,
	385, 1253,
	387, 1253,
	388, 1253,
	389, 1253,
	390, 1253,
	391, 1253,
	392, 1253,
	393, 1253,
	394, 1253,
	395, 1253,
	396, 1253,
	397, 1253,
	398, 1253,
	400, 1253,
	402, 1253,
	403, 1253,
	404, 1253,
	409, 1253,
	411, 1253,
	412, 1253,
	413, 1253,
	414, 1253,
	415, 1253,
	416, 1253,
	417, 1253,
	418, 1253,
	419, 1253,
	421, 1253,
	422, 1253,
	423, 1253,
	425, 1253,
	426, 1253,
	427, 1253,
	428, 1253,
	429, 1253,
	430, 1253,
	432, 1253,
	433, 1253,
	434, 1253,
	435, 1253,
	436, 1253,
	437, 1253,
	438, 1253,
	439, 1253,
	440, 1253,
	441, 1253,
	442, 1253,
	443, 1253,
	445, 1253,
	446, 1253,
	447, 1253,
	448, 1253,
	449, 1253,
	450, 1253,
	452, 1253,
	453, 1253,
	454, 1253,
	455, 1253,
	456, 1253,
	457, 1253,
	459, 1253,
	460, 1253,
	461, 1253,
	462, 1253,
	463, 1253,
	464, 1253,
	465, 1253,
	466, 1253,
	468, 1253,
	470, 1253,
	471, 1253,
	472, 1253,
	473, 1253,
	474, 1253,
	475, 1253,
	476, 1253,
	477, 1253,
	478, 1253,
	479, 1253,
	480, 1253,
	481, 1253,
	482, 1253,
	483, 1253,
	484, 1253,
	485, 1253,
	487, 1253,
	488, 1253,
	490, 1253,
	491, 1253,
	493, 1253,
	494, 1253,
	495, 1253,
	496, 1253,
	497, 1253,
	498, 1253,
	499, 1253,
	500, 1253,
	501, 1253,
	503, 1253,
	504, 1253,
	505, 1253,
	506, 1253,
	507, 1253,
	509, 1253,
	511, 1253,
	512, 1253,
	513, 1253,
	514, 1253,
	515, 1253,
	516, 1253,
	518, 1253,
	519, 1253,
	520, 1253,
	521, 1253,
	523, 1253,
	524, 1253,
	527, 1253,
	528, 1253,
	529, 1253,
	530, 1253,
	531, 1253,
	532, 1253,
	533, 1253,
	535, 1253,
	538, 1253,
	539, 1253,
	540, 1253,
	541, 1253,
	542, 1253,
	543, 1253,
	545, 1253,
	546, 1253,
	547, 1253,
	548, 1253,
	550, 1253,
	555, 1253,
	556, 1253,
	557, 1253,
	558, 1253,
	559, 1253,
	560, 1253,
	-2, 0,
	-1, 748,
	186, 2261,
	508, 2261,
	568, 2261,
	587, 2261,
	-2, 0,
	-1, 749,
	186, 2367,
	508, 2367,
	568, 2367,
	587, 2367,
	-2, 0,
	-1, 750,
	186, 2248,
	508, 2248,
	568, 2248,
	587, 2248,
	-2, 0,
	-1, 752,
	186, 2499,
	508, 2499,
	568, 2499,
	587, 2499,
	-2, 0,
	-1, 754,
	186, 2540,
	508, 2540,
	568, 2540,
	587, 2540,
	-2, 0,
	-1, 761,
	186, 2394,
	508, 2394,
	568, 2394,
	587, 2394,
	-2, 683,
	-1, 794,
	587, 2197,
	590, 2197,
	-2, 956,
	-1, 795,
	587, 2199,
	590, 2199,
	-2, 957,
	-1, 796,
	587, 2198,
	590, 2198,
	-2, 958,
	-1, 797,
	590, 2124,
	-2, 959,
	-1, 820,
	182, 249,
	-2, 0,
	-1, 844,
	43, 2171,
	-2, 0,
	-1, 845,
	545, 1231,
	-2, 1026,
	-1, 861,
	4, 1633,
	21, 1633,
	22, 1633,
	23, 1633,
	24, 1633,
	25, 1633,
	26, 1633,
	27, 1633,
	29, 1633,
	30, 1633,
	36, 1633,
	41, 1633,
	42, 1633,
	44, 1633,
	45, 1633,
	46, 1633,
	47, 1633,
	48, 1633,
	49, 1633,
	50, 1633,
	51, 1633,
	53, 1633,
	54, 1633,
	55, 1633,
	56, 1633,
	58, 1633,
	59, 1633,
	60, 1633,
	61, 1633,
	62, 1633,
	63, 1633,
	64, 1633,
	68, 1633,
	69, 1633,
	70, 1633,
	71, 1633,
	73, 1633,
	74, 1633,
	75, 1633,
	79, 1633,
	80, 1633,
	81, 1633,
	82, 1633,
	83, 1633,
	84, 1633,
	85, 1633,
	88, 1633,
	89, 1633,
	90, 1633,
	91, 1633,
	92, 1633,
	94, 1633,
	96, 1633,
	97, 1633,
	98, 1633,
	99, 1633,
	100, 1633,
	101, 1633,
	103, 1633,
	104, 1633,
	105, 1633,
	107, 1633,
	108, 1633,
	109, 1633,
	117, 1633,
	118, 1633,
	119, 1633,
	120, 1633,
	121, 1633,
	123, 1633,
	124, 1633,
	125, 1633,
	127, 1633,
	128, 1633,
	129, 1633,
	131, 1633,
	132, 1633,
	133, 1633,
	135, 1633,
	136, 1633,
	137, 1633,
	140, 1633,
	141, 1633,
	142, 1633,
	144, 1633,
	145, 1633,
	147, 1633,
	148, 1633,
	149, 1633,
	151, 1633,
	152, 1633,
	153, 1633,
	154, 1633,
	155, 1633,
	156, 1633,
	157, 1633,
	158, 1633,
	159, 1633,
	160, 1633,
	161, 1633,
	162, 1633,
	163, 1633,
	164, 1633,
	165, 1633,
	166, 1633,
	168, 1633,
	174, 1633,
	175, 1633,
	176, 1633,
	177, 1633,
	181, 1633,
	183, 1633,
	184, 1633,
	188, 1633,
	189, 1633,
	190, 1633,
	191, 1633,
	192, 1633,
	193, 1633,
	194, 1633,
	195, 1633,
	196, 1633,
	197, 1633,
	198, 1633,
	199, 1633,
	200, 1633,
	202, 1633,
	203, 1633,
	205, 1633,
	206, 1633,
	208, 1633,
	209, 1633,
	210, 1633,
	211, 1633,
	212, 1633,
	213, 1633,
	214, 1633,
	215, 1633,
	216, 1633,
	218, 1633,
	219, 1633,
	221, 1633,
	222, 1633,
	223, 1633,
	224, 1633,
	225, 1633,
	229, 1633,
	230, 1633,
	231, 1633,
	232, 1633,
	233, 1633,
	236, 1633,
	237, 1633,
	238, 1633,
	240, 1633,
	242, 1633,
	243, 1633,
	245, 1633,
	247, 1633,
	248, 1633,
	249, 1633,
	251, 1633,
	255, 1633,
	256, 1633,
	257, 1633,
	258, 1633,
	259, 1633,
	260, 1633,
	262, 1633,
	263, 1633,
	264, 1633,
	266, 1633,
	267, 1633,
	269, 1633,
	270, 1633,
	273, 1633,
	277, 1633,
	278, 1633,
	279, 1633,
	282, 1633,
	283, 1633,
	284, 1633,
	285, 1633,
	287, 1633,
	288, 1633,
	289, 1633,
	290, 1633,
	291, 1633,
	292, 1633,
	293, 1633,
	294, 1633,
	295, 1633,
	296, 1633,
	297, 1633,
	298, 1633,
	299, 1633,
	300, 1633,
	301, 1633,
	302, 1633,
	303, 1633,
	304, 1633,
	305, 1633,
	306, 1633,
	307, 1633,
	308, 1633,
	310, 1633,
	312, 1633,
	313, 1633,
	314, 1633,
	315, 1633,
	316, 1633,
	317, 1633,
	318, 1633,
	319, 1633,
	320, 1633,
	321, 1633,
	322, 1633,
	323, 1633,
	325, 1633,
	326, 1633,
	328, 1633,
	330, 1633,
	331, 1633,
	333, 1633,
	334, 1633,
	335, 1633,
	336, 1633,
	337, 1633,
	340, 1633,
	344, 1633,
	345, 1633,
	346, 1633,
	349, 1633,
	350, 1633,
	351, 1633,
	353, 1633,
	355, 1633,
	356, 1633,
	357, 1633,
	358, 1633,
	359, 1633,
	360, 1633,
	361, 1633,
	362, 1633,
	363, 1633,
	364, 1633,
	365, 1633,
	366, 1633,
	368, 1633,
	369, 1633,
	370, 1633,
	371, 1633,
	372, 1633,
	373, 1633,
	374, 1633,
	375, 1633,
	376, 1633,
	377, 1633,
	378, 1633,
	379, 1633,
	380, 1633,
	381, 1633,
	382, 1633,
	384, 1633,
	385, 1633,
	387, 1633,
	388, 1633,
	389, 1633,
	390, 1633,
	391, 1633,
	392, 1633,
	393, 1633,
	394, 1633,
	395, 1633,
	396, 1633,
	397, 1633,
	398, 1633,
	400, 1633,
	402, 1633,
	403, 1633,
	404, 1633,
	409, 1633,
	411, 1633,
	412, 1633,
	413, 1633,
	414, 1633,
	415, 1633,
	416, 1633,
	417, 1633,
	418, 1633,
	419, 1633,
	421, 1633,
	422, 1633,
	423, 1633,
	425, 1633,
	426, 1633,
	427, 1633,
	428, 1633,
	429, 1633,
	430, 1633,
	432, 1633,
	433, 1633,
	434, 1633,
	435, 1633,
	436, 1633,
	437, 1633,
	438, 1633,
	439, 1633,
	440, 1633,
	441, 1633,
	442, 1633,
	443, 1633,
	445, 1633,
	446, 1633,
	447, 1633,
	448, 1633,
	449, 1633,
	450, 1633,
	452, 1633,
	453, 1633,
	454, 1633,
	455, 1633,
	456, 1633,
	457, 1633,
	459, 1633,
	460, 1633,
	461, 1633,
	462, 1633,
	463, 1633,
	464, 1633,
	465, 1633,
	466, 1633,
	468, 1633,
	470, 1633,
	471, 1633,
	472, 1633,
	473, 1633,
	474, 1633,
	475, 1633,
	476, 1633,
	477, 1633,
	478, 1633,
	479, 1633,
	480, 1633,
	481, 1633,
	482, 1633,
	483, 1633,
	484, 1633,
	485, 1633,
	487, 1633,
	488, 1633,
	490, 1633,
	491, 1633,
	493, 1633,
	494, 1633,
	495, 1633,
	496, 1633,
	497, 1633,
	498, 1633,
	499, 1633,
	500, 1633,
	501, 1633,
	503, 1633,
	504, 1633,
	505, 1633,
	506, 1633,
	507, 1633,
	509, 1633,
	511, 1633,
	512, 1633,
	513, 1633,
	514, 1633,
	515, 1633,
	516, 1633,
	518, 1633,
	519, 1633,
	520, 1633,
	521, 1633,
	523, 1633,
	524, 1633,
	527, 1633,
	528, 1633,
	529, 1633,
	530, 1633,
	531, 1633,
	532, 1633,
	533, 1633,
	535, 1633,
	538, 1633,
	539, 1633,
	540, 1633,
	541, 1633,
	542, 1633,
	543, 1633,
	545, 1633,
	546, 1633,
	547, 1633,
	548, 1633,
	550, 1633,
	555, 1633,
	556, 1633,
	557, 1633,
	558, 1633,
	559, 1633,
	560, 1633,
	-2, 0,
	-1, 871,
	259, 397,
	-2, 0,
	-1, 942,
	389, 850,
	450, 850,
	491, 850,
	513, 850,
	-2, 0,
	-1, 943,
	389, 849,
	450, 849,
	491, 849,
	513, 849,
	-2, 789,
	-1, 947,
	1, 896,
	584, 896,
	586, 896,
	588, 896,
	-2, 0,
	-1, 948,
	1, 824,
	584, 824,
	586, 824,
	588, 824,
	-2, 0,
	-1, 949,
	1, 828,
	584, 828,
	586, 828,
	588, 828,
	-2, 0,
	-1, 950,
	1, 955,
	182, 955,
	584, 955,
	586, 955,
	588, 955,
	-2, 0,
	-1, 958,
	1, 855,
	584, 855,
	586, 855,
	588, 855,
	-2, 0,
	-1, 964,
	1, 896,
	584, 896,
	586, 896,
	588, 896,
	-2, 0,
	-1, 965,
	1, 898,
	584, 898,
	586, 898,
	588, 898,
	-2, 0,
	-1, 966,
	1, 901,
	584, 901,
	586, 901,
	588, 901,
	-2, 0,
	-1, 972,
	1, 919,
	584, 919,
	586, 919,
	588, 919,
	-2, 0,
	-1, 973,
	1, 921,
	584, 921,
	586, 921,
	588, 921,
	-2, 0,
	-1, 978,
	1, 949,
	584, 949,
	586, 949,
	588, 949,
	-2, 0,
	-1, 1025,
	169, 1508,
	182, 1508,
	272, 1508,
	338, 1508,
	-2, 1444,
	-1, 1040,
	169, 1507,
	182, 1507,
	272, 1507,
	338, 1507,
	-2, 1441,
	-1, 1066,
	587, 2196,
	-2, 691,
	-1, 1094,
	5, 2188,
	585, 2186,
	-2, 2177,
	-1, 1102,
	5, 2209,
	585, 2206,
	-2, 2197,
	-1, 1103,
	5, 2210,
	585, 2207,
	-2, 2198,
	-1, 1111,
	587, 2194,
	-2, 2176,
	-1, 1112,
	585, 2623,
	-2, 2195,
	-1, 1135,
	585, 2622,
	-2, 2211,
	-1, 1136,
	5, 1708,
	-2, 2593,
	-1, 1137,
	5, 1709,
	-2, 2594,
	-1, 1138,
	5, 1710,
	-2, 2608,
	-1, 1139,
	5, 1711,
	-2, 2572,
	-1, 1140,
	5, 1712,
	-2, 2606,
	-1, 1141,
	5, 1720,
	-2, 2585,
	-1, 1142,
	5, 1707,
	-2, 2581,
	-1, 1143,
	5, 1707,
	-2, 2580,
	-1, 1144,
	5, 1707,
	-2, 2599,
	-1, 1145,
	5, 1718,
	-2, 2574,
	-1, 1146,
	5, 1723,
	-2, 2573,
	-1, 1147,
	5, 1725,
	-2, 2618,
	-1, 1150,
	5, 1747,
	-2, 2611,
	-1, 1151,
	5, 1739,
	-2, 2612,
	-1, 1152,
	5, 1747,
	-2, 2613,
	-1, 1153,
	5, 1743,
	-2, 2614,
	-1, 1154,
	5, 1693,
	-2, 2586,
	-1, 1155,
	5, 1694,
	-2, 2587,
	-1, 1156,
	5, 1695,
	-2, 2575,
	-1, 1184,
	5, 1730,
	-2, 2619,
	-1, 1185,
	5, 1731,
	-2, 2609,
	-1, 1186,
	5, 1732,
	546, 1732,
	-2, 2576,
	-1, 1187,
	5, 1733,
	546, 1733,
	-2, 2577,
	-1, 1224,
	585, 2206,
	-2, 2197,
	-1, 1225,
	585, 2207,
	-2, 2198,
	-1, 1325,
	186, 2540,
	508, 2540,
	568, 2540,
	587, 2540,
	-2, 0,
	-1, 1328,
	1, 669,
	588, 669,
	-2, 1360,
	-1, 1456,
	357, 2172,
	411, 2172,
	452, 2172,
	578, 2172,
	-2, 2162,
	-1, 1467,
	589, 2172,
	-2, 2173,
	-1, 1476,
	1, 1228,
	584, 1228,
	586, 1228,
	588, 1228,
	-2, 1493,
	-1, 1524,
	396, 1025,
	545, 1025,
	-2, 392,
	-1, 1541,
	43, 2170,
	-2, 991,
	-1, 1548,
	1, 1228,
	584, 1228,
	586, 1228,
	588, 1228,
	-2, 1493,
	-1, 1556,
	4, 1253,
	21, 1253,
	22, 1253,
	23, 1253,
	24, 1253,
	25, 1253,
	26, 1253,
	27, 1253,
	29, 1253,
	30, 1253,
	36, 1253,
	41, 1253,
	42, 1253,
	44, 1253,
	45, 1253,
	46, 1253,
	47, 1253,
	48, 1253,
	49, 1253,
	50, 1253,
	51, 1253,
	53, 1253,
	54, 1253,
	55, 1253,
	56, 1253,
	58, 1253,
	59, 1253,
	60, 1253,
	61, 1253,
	62, 1253,
	63, 1253,
	64, 1253,
	68, 1253,
	69, 1253,
	70, 1253,
	71, 1253,
	73, 1253,
	74, 1253,
	75, 1253,
	79, 1253,
	80, 1253,
	81, 1253,
	82, 1253,
	83, 1253,
	84, 1253,
	85, 1253,
	88, 1253,
	89, 1253,
	90, 1253,
	91, 1253,
	92, 1253,
	94, 1253,
	96, 1253,
	97, 1253,
	98, 1253,
	99, 1253,
	100, 1253,
	101, 1253,
	103, 1253,
	104, 1253,
	105, 1253,
	107, 1253,
	108, 1253,
	109, 1253,
	117, 1253,
	118, 1253,
	119, 1253,
	120, 1253,
	121, 1253,
	123, 1253,
	124, 1253,
	125, 1253,
	127, 1253,
	128, 1253,
	129, 1253,
	131, 1253,
	132, 1253,
	133, 1253,
	135, 1253,
	136, 1253,
	137, 1253,
	140, 1253,
	141, 1253,
	142, 1253,
	144, 1253,
	145, 1253,
	147, 1253,
	148, 1253,
	149, 1253,
	151, 1253,
	152, 1253,
	153, 1253,
	154, 1253,
	155, 1253,
	156, 1253,
	157, 1253,
	158, 1253,
	159, 1253,
	160, 1253,
	161, 1253,
	162, 1253,
	163, 1253,
	164, 1253,
	165, 1253,
	166, 1253,
	174, 1253,
	175, 1253,
	176, 1253,
	177, 1253,
	181, 1253,
	183, 1253,
	184, 1253,
	188, 1253,
	189, 1253,
	190, 1253,
	191, 1253,
	192, 1253,
	193, 1253,
	194, 1253,
	195, 1253,
	196, 1253,
	197, 1253,
	198, 1253,
	199, 1253,
	200, 1253,
	202, 1253,
	203, 1253,
	205, 1253,
	206, 1253,
	208, 1253,
	209, 1253,
	210, 1253,
	211, 1253,
	212, 1253,
	213, 1253,
	214, 1253,
	215, 1253,
	216, 1253,
	218, 1253,
	219, 1253,
	221, 1253,
	222, 1253,
	223, 1253,
	224, 1253,
	225, 1253,
	230, 1253,
	231, 1253,
	232, 1253,
	233, 1253,
	236, 1253,
	237, 1253,
	238, 1253,
	240, 1253,
	242, 1253,
	243, 1253,
	245, 1253,
	247, 1253,
	248, 1253,
	249, 1253,
	251, 1253,
	255, 1253,
	256, 1253,
	257, 1253,
	258, 1253,
	259, 1253,
	260, 1253,
	262, 1253,
	263, 1253,
	264, 1253,
	266, 1253,
	267, 1253,
	269, 1253,
	270, 1253,
	273, 1253,
	277, 1253,
	278, 1253,
	279, 1253,
	282, 1253,
	283, 1253,
	284, 1253,
	285, 1253,
	287, 1253,
	288, 1253,
	289, 1253,
	290, 1253,
	291, 1253,
	292, 1253,
	293, 1253,
	294, 1253,
	295, 1253,
	296, 1253,
	297, 1253,
	298, 1253,
	299, 1253,
	300, 1253,
	301, 1253,
	302, 1253,
	303, 1253,
	304, 1253,
	305, 1253,
	306, 1253,
	307, 1253,
	308, 1253,
	310, 1253,
	312, 1253,
	313, 1253,
	314, 1253,
	315, 1253,
	316, 1253,
	317, 1253,
	318, 1253,
	319, 1253,
	320, 1253,
	321, 1253,
	322, 1253,
	323, 1253,
	325, 1253,
	326, 1253,
	330, 1253,
	331, 1253,
	333, 1253,
	334, 1253,
	335, 1253,
	336, 1253,
	337, 1253,
	340, 1253,
	342, 1253,
	344, 1253,
	345, 1253,
	346, 1253,
	349, 1253,
	350, 1253,
	351, 1253,
	353, 1253,
	355, 1253,
	356, 1253,
	357, 1253,
	358, 1253,
	359, 1253,
	360, 1253,
	361, 1253,
	362, 1253,
	363, 1253,
	364, 1253,
	365, 1253,
	366, 1253,
	368, 1253,
	369, 1253,
	370, 1253,
	371, 1253,
	372, 1253,
	373, 1253,
	374, 1253,
	375, 1253,
	376, 1253,
	377, 1253,
	378, 1253,
	379, 1253,
	380, 1253,
	381, 1253,
	382, 1253,
	384, 1253,
	385, 1253,
	387, 1253,
	388, 1253,
	389, 1253,
	390, 1253,
	391, 1253,
	392, 1253,
	393, 1253,
	394, 1253,
	395, 1253,
	396, 1253,
	397, 1253,
	398, 1253,
	400, 1253,
	402, 1253,
	403, 1253,
	404, 1253,
	409, 1253,
	411, 1253,
	412, 1253,
	413, 1253,
	414, 1253,
	415, 1253,
	416, 1253,
	417, 1253,
	418, 1253,
	419, 1253,
	421, 1253,
	422, 1253,
	423, 1253,
	425, 1253,
	426, 1253,
	427, 1253,
	428, 1253,
	429, 1253,
	430, 1253,
	432, 1253,
	433, 1253,
	434, 1253,
	435, 1253,
	436, 1253,
	437, 1253,
	438, 1253,
	439, 1253,
	440, 1253,
	441, 1253,
	442, 1253,
	443, 1253,
	445, 1253,
	446, 1253,
	447, 1253,
	448, 1253,
	449, 1253,
	450, 1253,
	452, 1253,
	453, 1253,
	454, 1253,
	455, 1253,
	456, 1253,
	457, 1253,
	459, 1253,
	460, 1253,
	461, 1253,
	462, 1253,
	463, 1253,
	464, 1253,
	465, 1253,
	466, 1253,
	468, 1253,
	470, 1253,
	471, 1253,
	472, 1253,
	473, 1253,
	474, 1253,
	475, 1253,
	476, 1253,
	477, 1253,
	478, 1253,
	479, 1253,
	480, 1253,
	481, 1253,
	482, 1253,
	483, 1253,
	484, 1253,
	485, 1253,
	487, 1253,
	488, 1253,
	490, 1253,
	491, 1253,
	493, 1253,
	494, 1253,
	495, 1253,
	496, 1253,
	497, 1253,
	498, 1253,
	499, 1253,
	500, 1253,
	501, 1253,
	503, 1253,
	504, 1253,
	505, 1253,
	506, 1253,
	507, 1253,
	509, 1253,
	511, 1253,
	512, 1253,
	513, 1253,
	514, 1253,
	515, 1253,
	516, 1253,
	518, 1253,
	519, 1253,
	520, 1253,
	521, 1253,
	523, 1253,
	524, 1253,
	527, 1253,
	528, 1253,
	529, 1253,
	530, 1253,
	531, 1253,
	532, 1253,
	533, 1253,
	535, 1253,
	538, 1253,
	539, 1253,
	540, 1253,
	541, 1253,
	542, 1253,
	543, 1253,
	545, 1253,
	546, 1253,
	547, 1253,
	548, 1253,
	550, 1253,
	555, 1253,
	556, 1253,
	557, 1253,
	558, 1253,
	559, 1253,
	560, 1253,
	-2, 0,
	-1, 1579,
	1, 537,
	584, 537,
	586, 537,
	588, 537,
	-2, 1464,
	-1, 1582,
	4, 2617,
	11, 2617,
	12, 2617,
	14, 2617,
	15, 2617,
	16, 2617,
	17, 2617,
	18, 2617,
	19, 2617,
	21, 2617,
	22, 2617,
	23, 2617,
	24, 2617,
	25, 2617,
	26, 2617,
	27, 2617,
	29, 2617,
	30, 2617,
	33, 2617,
	34, 2617,
	36, 2617,
	38, 2617,
	41, 2617,
	42, 2617,
	44, 2617,
	45, 2617,
	46, 2617,
	47, 2617,
	48, 2617,
	49, 2617,
	50, 2617,
	51, 2617,
	53, 2617,
	54, 2617,
	55, 2617,
	56, 2617,
	58, 2617,
	59, 2617,
	60, 2617,
	61, 2617,
	62, 2617,
	63, 2617,
	64, 2617,
	68, 2617,
	69, 2617,
	70, 2617,
	71, 2617,
	73, 2617,
	74, 2617,
	75, 2617,
	76, 2617,
	79, 2617,
	80, 2617,
	81, 2617,
	82, 2617,
	83, 2617,
	84, 2617,
	85, 2617,
	86, 2617,
	88, 2617,
	89, 2617,
	90, 2617,
	91, 2617,
	92, 2617,
	94, 2617,
	95, 2617,
	96, 2617,
	97, 2617,
	98, 2617,
	99, 2617,
	100, 2617,
	101, 2617,
	103, 2617,
	104, 2617,
	105, 2617,
	106, 2617,
	107, 2617,
	108, 2617,
	109, 2617,
	117, 2617,
	118, 2617,
	119, 2617,
	120, 2617,
	121, 2617,
	123, 2617,
	124, 2617,
	125, 2617,
	127, 2617,
	128, 2617,
	129, 2617,
	131, 2617,
	132, 2617,
	133, 2617,
	135, 2617,
	136, 2617,
	137, 2617,
	140, 2617,
	141, 2617,
	142, 2617,
	144, 2617,
	145, 2617,
	147, 2617,
	148, 2617,
	149, 2617,
	151, 2617,
	152, 2617,
	153, 2617,
	154, 2617,
	155, 2617,
	156, 2617,
	157, 2617,
	158, 2617,
	159, 2617,
	160, 2617,
	161, 2617,
	162, 2617,
	163, 2617,
	164, 2617,
	165, 2617,
	166, 2617,
	170, 2617,
	171, 2617,
	172, 2617,
	173, 2617,
	174, 2617,
	175, 2617,
	176, 2617,
	177, 2617,
	180, 2617,
	181, 2617,
	183, 2617,
	184, 2617,
	187, 2617,
	188, 2617,
	189, 2617,
	190, 2617,
	191, 2617,
	192, 2617,
	193, 2617,
	194, 2617,
	195, 2617,
	196, 2617,
	197, 2617,
	198, 2617,
	199, 2617,
	200, 2617,
	202, 2617,
	203, 2617,
	205, 2617,
	206, 2617,
	208, 2617,
	209, 2617,
	210, 2617,
	211, 2617,
	212, 2617,
	213, 2617,
	214, 2617,
	215, 2617,
	216, 2617,
	217, 2617,
	218, 2617,
	219, 2617,
	220, 2617,
	221, 2617,
	222, 2617,
	223, 2617,
	224, 2617,
	225, 2617,
	227, 2617,
	228, 2617,
	230, 2617,
	231, 2617,
	232, 2617,
	233, 2617,
	235, 2617,
	236, 2617,
	237, 2617,
	238, 2617,
	240, 2617,
	242, 2617,
	243, 2617,
	244, 2617,
	245, 2617,
	246, 2617,
	247, 2617,
	248, 2617,
	249, 2617,
	250, 2617,
	251, 2617,
	253, 2617,
	254, 2617,
	255, 2617,
	256, 2617,
	257, 2617,
	258, 2617,
	259, 2617,
	260, 2617,
	262, 2617,
	263, 2617,
	264, 2617,
	266, 2617,
	267, 2617,
	268, 2617,
	269, 2617,
	270, 2617,
	271, 2617,
	273, 2617,
	277, 2617,
	278, 2617,
	279, 2617,
	282, 2617,
	283, 2617,
	284, 2617,
	285, 2617,
	286, 2617,
	287, 2617,
	288, 2617,
	289, 2617,
	290, 2617,
	291, 2617,
	292, 2617,
	293, 2617,
	294, 2617,
	295, 2617,
	296, 2617,
	297, 2617,
	298, 2617,
	299, 2617,
	300, 2617,
	301, 2617,
	302, 2617,
	303, 2617,
	304, 2617,
	305, 2617,
	306, 2617,
	307, 2617,
	308, 2617,
	310, 2617,
	311, 2617,
	312, 2617,
	313, 2617,
	314, 2617,
	315, 2617,
	316, 2617,
	317, 2617,
	318, 2617,
	319, 2617,
	320, 2617,
	321, 2617,
	322, 2617,
	323, 2617,
	325, 2617,
	326, 2617,
	329, 2617,
	330, 2617,
	331, 2617,
	333, 2617,
	334, 2617,
	335, 2617,
	336, 2617,
	337, 2617,
	340, 2617,
	344, 2617,
	345, 2617,
	346, 2617,
	347, 2617,
	349, 2617,
	350, 2617,
	351, 2617,
	353, 2617,
	355, 2617,
	356, 2617,
	357, 2617,
	358, 2617,
	359, 2617,
	360, 2617,
	361, 2617,
	362, 2617,
	363, 2617,
	364, 2617,
	365, 2617,
	366, 2617,
	368, 2617,
	369, 2617,
	370, 2617,
	371, 2617,
	372, 2617,
	373, 2617,
	374, 2617,
	375, 2617,
	376, 2617,
	377, 2617,
	378, 2617,
	379, 2617,
	380, 2617,
	381, 2617,
	382, 2617,
	384, 2617,
	385, 2617,
	387, 2617,
	388, 2617,
	389, 2617,
	390, 2617,
	391, 2617,
	392, 2617,
	393, 2617,
	394, 2617,
	395, 2617,
	396, 2617,
	397, 2617,
	398, 2617,
	400, 2617,
	402, 2617,
	403, 2617,
	404, 2617,
	409, 2617,
	410, 2617,
	411, 2617,
	412, 2617,
	413, 2617,
	414, 2617,
	415, 2617,
	416, 2617,
	417, 2617,
	418, 2617,
	419, 2617,
	421, 2617,
	422, 2617,
	423, 2617,
	424, 2617,
	425, 2617,
	426, 2617,
	427, 2617,
	428, 2617,
	429, 2617,
	430, 2617,
	431, 2617,
	432, 2617,
	433, 2617,
	434, 2617,
	435, 2617,
	436, 2617,
	437, 2617,
	438, 2617,
	439, 2617,
	440, 2617,
	441, 2617,
	442, 2617,
	443, 2617,
	445, 2617,
	446, 2617,
	447, 2617,
	448, 2617,
	449, 2617,
	450, 2617,
	452, 2617,
	453, 2617,
	454, 2617,
	455, 2617,
	456, 2617,
	457, 2617,
	458, 2617,
	459, 2617,
	460, 2617,
	461, 2617,
	462, 2617,
	463, 2617,
	464, 2617,
	465, 2617,
	466, 2617,
	468, 2617,
	470, 2617,
	471, 2617,
	472, 2617,
	473, 2617,
	474, 2617,
	475, 2617,
	476, 2617,
	477, 2617,
	478, 2617,
	479, 2617,
	480, 2617,
	481, 2617,
	482, 2617,
	483, 2617,
	484, 2617,
	485, 2617,
	487, 2617,
	488, 2617,
	490, 2617,
	491, 2617,
	493, 2617,
	494, 2617,
	495, 2617,
	496, 2617,
	497, 2617,
	498, 2617,
	499, 2617,
	500, 2617,
	501, 2617,
	503, 2617,
	504, 2617,
	505, 2617,
	506, 2617,
	507, 2617,
	509, 2617,
	511, 2617,
	512, 2617,
	513, 2617,
	514, 2617,
	515, 2617,
	516, 2617,
	518, 2617,
	519, 2617,
	520, 2617,
	521, 2617,
	523, 2617,
	524, 2617,
	527, 2617,
	528, 2617,
	529, 2617,
	530, 2617,
	531, 2617,
	532, 2617,
	533, 2617,
	535, 2617,
	538, 2617,
	539, 2617,
	540, 2617,
	541, 2617,
	542, 2617,
	543, 2617,
	545, 2617,
	546, 2617,
	547, 2617,
	548, 2617,
	550, 2617,
	555, 2617,
	556, 2617,
	557, 2617,
	558, 2617,
	559, 2617,
	560, 2617,
	561, 2617,
	563, 2617,
	566, 2617,
	567, 2617,
	568, 2617,
	569, 2617,
	570, 2617,
	571, 2617,
	573, 2617,
	574, 2617,
	575, 2617,
	576, 2617,
	577, 2617,
	578, 2617,
	579, 2617,
	580, 2617,
	581, 2617,
	583, 2617,
	586, 2617,
	587, 2617,
	589, 2617,
	590, 2617,
	-2, 0,
	-1, 1587,
	186, 2499,
	508, 2499,
	568, 2499,
	587, 2499,
	-2, 0,
	-1, 1636,
	389, 850,
	450, 850,
	491, 850,
	513, 850,
	-2, 0,
	-1, 1663,
	1, 845,
	584, 845,
	586, 845,
	588, 845,
	-2, 0,
	-1, 1664,
	1, 883,
	584, 883,
	586, 883,
	588, 883,
	-2, 0,
	-1, 1665,
	1, 891,
	584, 891,
	586, 891,
	588, 891,
	-2, 0,
	-1, 1668,
	1, 854,
	584, 854,
	586, 854,
	588, 854,
	-2, 0,
	-1, 1670,
	1, 858,
	584, 858,
	586, 858,
	588, 858,
	-2, 0,
	-1, 1676,
	1, 865,
	584, 865,
	586, 865,
	588, 865,
	-2, 0,
	-1, 1705,
	1, 2562,
	584, 2562,
	586, 2562,
	587, 2562,
	588, 2562,
	-2, 917,
	-1, 1706,
	1, 2496,
	584, 2496,
	586, 2496,
	587, 2496,
	588, 2496,
	-2, 918,
	-1, 1710,
	1, 930,
	584, 930,
	586, 930,
	588, 930,
	-2, 0,
	-1, 1725,
	1, 1355,
	588, 1355,
	-2, 1360,
	-1, 1728,
	169, 1507,
	182, 1507,
	272, 1507,
	338, 1507,
	-2, 1445,
	-1, 1822,
	150, 1466,
	169, 1466,
	182, 1466,
	239, 1466,
	272, 1466,
	338, 1466,
	348, 1466,
	525, 1466,
	-2, 1908,
	-1, 1882,
	586, 2058,
	-2, 0,
	-1, 1917,
	150, 1466,
	169, 1466,
	182, 1466,
	239, 1466,
	272, 1466,
	338, 1466,
	348, 1466,
	525, 1466,
	-2, 1594,
	-1, 1951,
	508, 2496,
	587, 2496,
	590, 2496,
	-2, 0,
	-1, 1968,
	585, 1735,
	-2, 1723,
	-1, 1999,
	186, 2496,
	587, 2496,
	590, 2496,
	-2, 0,
	-1, 2047,
	1, 671,
	588, 671,
	-2, 1360,
	-1, 2173,
	220, 250,
	-2, 2205,
	-1, 2174,
	220, 251,
	-2, 300,
	-1, 2278,
	1, 847,
	584, 847,
	586, 847,
	588, 847,
	-2, 0,
	-1, 2279,
	1, 885,
	584, 885,
	586, 885,
	588, 885,
	-2, 0,
	-1, 2280,
	1, 893,
	584, 893,
	586, 893,
	588, 893,
	-2, 0,
	-1, 2281,
	1, 932,
	584, 932,
	586, 932,
	588, 932,
	-2, 0,
	-1, 2314,
	1, 867,
	584, 867,
	586, 867,
	588, 867,
	-2, 0,
	-1, 2370,
	429, 1534,
	430, 1534,
	-2, 1768,
	-1, 2401,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1788,
	-1, 2402,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1789,
	-1, 2403,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1790,
	-1, 2404,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1791,
	-1, 2405,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1792,
	-1, 2406,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1793,
	-1, 2407,
	95, 0,
	253, 0,
	254, 0,
	570, 0,
	571, 0,
	-2, 1794,
	-1, 2408,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1795,
	-1, 2420,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1807,
	-1, 2421,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1808,
	-1, 2422,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1809,
	-1, 2425,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1814,
	-1, 2431,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1818,
	-1, 2433,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1826,
	-1, 2434,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1827,
	-1, 2435,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1828,
	-1, 2436,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1829,
	-1, 2572,
	5, 2209,
	186, 2069,
	585, 2206,
	-2, 2197,
	-1, 2573,
	186, 2070,
	-2, 2568,
	-1, 2574,
	186, 2071,
	-2, 2393,
	-1, 2575,
	186, 2072,
	-2, 2279,
	-1, 2576,
	186, 2073,
	-2, 2333,
	-1, 2577,
	186, 2074,
	-2, 2378,
	-1, 2578,
	186, 2075,
	-2, 2494,
	-1, 2579,
	186, 2076,
	-2, 1891,
	-1, 2649,
	1, 1595,
	2, 1595,
	106, 1595,
	150, 1595,
	169, 1595,
	182, 1595,
	187, 1595,
	204, 1595,
	207, 1595,
	235, 1595,
	239, 1595,
	250, 1595,
	268, 1595,
	272, 1595,
	311, 1595,
	338, 1595,
	342, 1595,
	348, 1595,
	420, 1595,
	424, 1595,
	525, 1595,
	536, 1595,
	552, 1595,
	553, 1595,
	554, 1595,
	564, 1595,
	584, 1595,
	586, 1595,
	588, 1595,
	590, 1595,
	-2, 1594,
	-1, 2662,
	585, 2178,
	-2, 2192,
	-1, 2664,
	1, 317,
	552, 317,
	-2, 1493,
	-1, 2691,
	585, 1734,
	-2, 1724,
	-1, 2868,
	1, 1228,
	584, 1228,
	586, 1228,
	588, 1228,
	-2, 1493,
	-1, 3037,
	343, 1537,
	-2, 2607,
	-1, 3038,
	343, 1538,
	-2, 2479,
	-1, 3042,
	429, 2135,
	430, 2135,
	-2, 1889,
	-1, 3043,
	429, 2139,
	430, 2139,
	-2, 1890,
	-1, 3044,
	429, 2136,
	430, 2136,
	-2, 1889,
	-1, 3045,
	429, 2140,
	430, 2140,
	-2, 1890,
	-1, 3058,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1816,
	-1, 3059,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1820,
	-1, 3065,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1822,
	-1, 3281,
	1, 668,
	584, 668,
	586, 668,
	588, 668,
	-2, 1360,
	-1, 3435,
	43, 2170,
	-2, 992,
	-1, 3440,
	1, 1228,
	584, 1228,
	586, 1228,
	588, 1228,
	-2, 1493,
	-1, 3546,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1824,
	-1, 3553,
	244, 0,
	246, 0,
	329, 0,
	-2, 1843,
	-1, 3620,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1872,
	-1, 3621,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1873,
	-1, 3622,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1874,
	-1, 3626,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1878,
	-1, 3627,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1879,
	-1, 3628,
	14, 0,
	15, 0,
	16, 0,
	566, 0,
	567, 0,
	568, 0,
	-2, 1880,
	-1, 3674,
	585, 2179,
	-2, 2193,
	-1, 3836,
	587, 2725,
	-2, 1419,
	-1, 3894,
	244, 0,
	246, 0,
	329, 0,
	-2, 1844,
	-1, 3897,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1847,
	-1, 3898,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1849,
	-1, 3990,
	587, 2194,
	-2, 1263,
	-1, 4134,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1848,
	-1, 4135,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 1850,
	-1, 4146,
	244, 0,
	-2, 1881,
	-1, 4315,
	244, 0,
	-2, 1882,
	-1, 4497,
	50, 0,
	217, 0,
	271, 0,
	458, 0,
	561, 0,
	569, 0,
	-2, 2571,
}

const sqlPrivate = 57344

const sqlLast = 122661

var sqlAct = [...]int{
	266, 4593, 3424, 4549, 4679, 3192, 2946, 4490, 3423, 2933,
	4189, 4372, 4350, 4496, 4237, 4478, 4507, 4342, 4620, 4465,
	2095, 4393, 4368, 4446, 2170, 4429, 4449, 3877, 4562, 4489,
	4508, 2753, 4509, 2797, 2817, 4268, 4175, 4244, 3585, 1488,
	1228, 4319, 4090, 4085, 4051, 4194, 4031, 4495, 4155, 4123,
	2380, 3538, 3828, 4072, 3820, 4253, 4065, 4074, 3457, 3986,
	1050, 3763, 1955, 3987, 3363, 2448, 1094, 1290, 2604, 3971,
	4282, 4095, 3303, 3051, 1301, 796, 2830, 3451, 3783, 2029,
	3801, 1603, 3419, 3306, 2254, 3785, 3409, 1737, 1361, 2955,
	2388, 1283, 1923, 759, 1041, 3496, 2103, 2252, 3292, 3498,
	4151, 796, 2968, 2892, 2922, 2903, 2957, 1297, 3677, 3235,
	1453, 3207, 3215, 3933, 3876, 2954, 2965, 1956, 2381, 3198,
	3175, 2948, 2165, 2218, 869, 4, 2919, 2934, 2917, 873,
	2164, 1892, 3645, 3196, 1049, 175, 2114, 3325, 4594, 2755,
	2642, 1644, 3174, 2641, 1217, 2385, 4320, 1868, 1830, 2490,
	2461, 3300, 3035, 1543, 2964, 864, 791, 1460, 2896, 260,
	2160, 259, 1295, 2644, 2845, 2141, 2148, 2904, 2083, 2027,
	1098, 2622, 1105, 2087, 1725, 1344, 2796, 1269, 3242, 2481,
	2445, 1893, 2369, 2352, 2073, 2350, 3421, 1292, 1103, 1580,
	2927, 1101, 2675, 2004, 1208, 1280, 2205, 797, 1546, 1601,
	798, 2778, 4394, 2601, 2958, 2741, 1330, 2674, 793, 1912,
	690, 1863, 1211, 676, 1190, 1902, 2484, 698, 1815, 1909,
	2631, 2462, 2568, 2492, 184, 1738, 1148, 2534, 175, 1739,
	741, 2351, 2612, 1225, 802, 1676, 805, 1303, 1207, 1663,
	185, 2353, 753, 2231, 1578, 2204, 1483, 2245, 4550, 1571,
	2102, 2374, 1079, 2005, 2002, 693, 1213, 1188, 44, 43,
	802, 41, 805, 32, 30, 701, 716, 1744, 28, 936,
	3086, 1494, 1724, 956, 845, 3659, 3082, 3660, 3194, 2018,
	2018, 108, 2018, 4692, 4682, 4667, 3467, 2621, 3476, 2621,
	1752, 1753, 1045, 3265, 3264, 2614, 1795, 1796, 1797, 1223,
	2018, 4666, 4656, 2018, 2018, 2621, 2179, 4638, 4636, 888,
	4581, 4193, 4193, 1783, 2179, 4538, 3466, 4531, 4529, 4539,
	1755, 2621, 2621, 4526, 4523, 3476, 4493, 4527, 4524, 1801,
	2179, 4492, 4491, 4486, 4485, 2179, 2039, 2039, 2039, 4476,
	4474, 4471, 4444, 4193, 4193, 4256, 4193, 4418, 1247, 4411,
	4410, 2682, 1205, 2621, 2621, 1754, 4405, 4404, 4398, 4364,
	4193, 4193, 2179, 4042, 2179, 1774, 4317, 4299, 1752, 1753,
	2682, 3863, 4296, 4293, 1771, 4246, 2179, 4193, 4210, 4247,
	4209, 4200, 2179, 4199, 2179, 2179, 4192, 4193, 1191, 1191,
	4193, 1783, 4162, 4136, 3954, 1487, 2179, 2682, 1755, 4114,
	1026, 4103, 4026, 2039, 2175, 3476, 2621, 4011, 1339, 3250,
	3896, 2621, 1752, 1753, 2682, 3844, 1025, 3838, 3799, 3493,
	1339, 3493, 3800, 3669, 1220, 3667, 1045, 3670, 3652, 3668,
	2179, 2702, 2621, 1754, 2253, 1783, 3569, 3565, 1240, 3095,
	2179, 2621, 1755, 1774, 3492, 3096, 3649, 3050, 3493, 1777,
	1778, 1779, 1780, 1035, 3483, 2621, 1040, 3191, 3484, 1760,
	3186, 2621, 2678, 4419, 2621, 3185, 3147, 3148, 1046, 2621,
	3138, 3136, 3128, 4321, 3139, 3137, 3129, 1754, 1752, 1753,
	3126, 3097, 2972, 1192, 2621, 2621, 2039, 4312, 2944, 2943,
	2725, 2036, 2241, 2241, 2621, 1194, 1792, 1195, 2179, 1802,
	2681, 1783, 3147, 3148, 2682, 2672, 1782, 1784, 1755, 2621,
	2666, 2620, 2240, 2701, 2179, 2621, 2241, 4300, 4256, 2039,
	1241, 3649, 2613, 4083, 4042, 4012, 3863, 1777, 1778, 1779,
	1780, 3484, 1769, 1770, 2621, 2820, 2740, 1760, 2052, 2017,
	2033, 3162, 2036, 1754, 2898, 2178, 2840, 2738, 93, 1888,
	1790, 2107, 1482, 1774, 3748, 3541, 3517, 1910, 2153, 230,
	3468, 1646, 1771, 2658, 2657, 1775, 2656, 1752, 1753, 2655,
	1785, 1786, 1787, 1795, 1796, 1797, 2654, 2487, 230, 3469,
	3949, 1760, 1196, 1193, 1782, 1784, 1034, 1033, 1032, 1788,
	1783, 1031, 1030, 1029, 3012, 3147, 3148, 1755, 3165, 3166,
	3167, 1028, 3147, 3148, 1024, 1023, 1801, 232, 1022, 1021,
	1020, 1019, 1018, 1017, 1016, 1015, 3890, 3892, 1014, 1013,
	1012, 1011, 1010, 1752, 1753, 1009, 232, 1008, 1782, 1784,
	934, 933, 1754, 2019, 2019, 3153, 2019, 1777, 1778, 1779,
	1780, 932, 1774, 1775, 931, 930, 929, 1760, 928, 927,
	926, 1771, 925, 1755, 2019, 924, 231, 2019, 2019, 923,
	922, 921, 920, 919, 918, 2488, 4514, 917, 3085, 224,
	3162, 3153, 916, 915, 914, 231, 913, 912, 225, 911,
	910, 909, 1100, 908, 907, 906, 905, 1775, 1754, 1781,
	3466, 904, 1752, 1753, 1782, 1784, 4494, 1241, 2036, 2613,
	186, 903, 902, 3804, 901, 891, 890, 886, 885, 879,
	1776, 878, 863, 862, 819, 1783, 818, 817, 816, 186,
	1769, 1770, 1755, 808, 807, 806, 1777, 1778, 1779, 1780,
	774, 765, 1669, 764, 1306, 1103, 1760, 1793, 2016, 763,
	747, 3163, 254, 1610, 253, 252, 251, 2489, 250, 2486,
	3908, 1077, 1241, 1775, 249, 248, 247, 1754, 1103, 246,
	245, 244, 1103, 243, 3153, 242, 241, 1781, 240, 239,
	238, 3153, 237, 1792, 236, 235, 1802, 3163, 1364, 234,
	233, 3690, 1364, 1782, 1784, 3663, 3494, 3238, 1776, 4097,
	1306, 1487, 1760, 3108, 3189, 3091, 2995, 2879, 2686, 2663,
	1798, 1913, 1799, 2248, 2648, 2712, 2017, 1871, 2036, 1769,
	1770, 1103, 2517, 1103, 1870, 1103, 1871, 2081, 1343, 3147,
	3148, 1306, 1348, 1870, 1751, 2503, 2033, 1790, 3168, 2701,
	2345, 230, 1776, 3190, 2038, 2501, 1874, 2912, 4473, 1334,
	1791, 1936, 1775, 1841, 148, 1869, 1490, 1306, 1794, 1772,
	1768, 1468, 1765, 1763, 1764, 1756, 1757, 1758, 1759, 1761,
	1762, 1760, 1463, 1832, 1350, 1227, 4379, 1306, 4309, 4303,
	3163, 4150, 1458, 4324, 1306, 4187, 4301, 1781, 4104, 232,
	4082, 3959, 1103, 1596, 1103, 1800, 3164, 2247, 1306, 3931,
	3930, 3924, 3923, 1486, 1103, 3922, 1103, 2491, 1776, 3915,
	3914, 3912, 3907, 1789, 3904, 1274, 1277, 3903, 1782, 1784,
	3798, 3694, 1496, 3693, 3692, 1219, 1552, 1555, 3673, 3640,
	3639, 3638, 3164, 1496, 1287, 3561, 3557, 3233, 231, 1328,
	1765, 1763, 1764, 1756, 1757, 1758, 1759, 1761, 1762, 1752,
	1753, 224, 1306, 1558, 3182, 3173, 3146, 3143, 3805, 1832,
	225, 1474, 3147, 3148, 3142, 3140, 3135, 3134, 3133, 802,
	1103, 805, 1783, 1103, 3130, 3127, 1781, 1775, 3107, 1755,
	3090, 1357, 186, 1450, 1455, 1763, 1764, 1756, 1757, 1758,
	1759, 1761, 1762, 3083, 1221, 1508, 2945, 1776, 3153, 1839,
	1502, 2649, 4099, 2474, 1751, 1323, 1204, 1485, 2221, 2186,
	1484, 2930, 175, 175, 1754, 1834, 4686, 1541, 2184, 1750,
	4630, 4629, 3805, 2485, 1793, 3164, 4595, 1833, 4548, 1831,
	4546, 1229, 3587, 1583, 1585, 4436, 4371, 1615, 3158, 3156,
	3157, 3149, 3150, 3151, 3152, 3154, 3155, 1772, 1768, 2695,
	1765, 1763, 1764, 1756, 1757, 1758, 1759, 1761, 1762, 4360,
	3746, 1495, 2684, 4357, 4356, 4355, 1103, 1103, 1103, 1103,
	1103, 1103, 1103, 1496, 3158, 3156, 3157, 3149, 3150, 3151,
	3152, 3154, 3155, 4336, 4323, 4322, 3256, 4297, 4281, 1334,
	4280, 2914, 1334, 2451, 865, 1614, 1600, 1103, 1314, 4266,
	4263, 3187, 4262, 1103, 3163, 4257, 4206, 4183, 4148, 4131,
	1574, 4130, 1048, 4111, 1581, 2457, 1685, 4110, 1760, 4068,
	4043, 73, 1776, 868, 867, 3948, 3929, 1791, 3864, 3858,
	1729, 3153, 1766, 1767, 1773, 1794, 1772, 1768, 74, 1765,
	1763, 1764, 1756, 1757, 1758, 1759, 1761, 1762, 1300, 3855,
	3734, 4325, 3918, 3733, 78, 3717, 3917, 3716, 1046, 3714,
	3159, 3160, 3161, 3655, 1595, 1782, 1784, 3158, 3156, 3157,
	3149, 3150, 3151, 3152, 3154, 3155, 1609, 3149, 3150, 3151,
	3152, 3154, 3155, 3643, 230, 3552, 4071, 1821, 1819, 3147,
	3148, 3495, 3477, 3443, 87, 230, 1723, 3378, 1756, 1757,
	1758, 1759, 1761, 1762, 1476, 3338, 1507, 3955, 1103, 1103,
	1103, 1501, 3305, 3258, 1103, 3112, 3111, 1620, 3106, 3074,
	2891, 1225, 1877, 1225, 1775, 1876, 1875, 1637, 1872, 1864,
	1862, 2693, 232, 2692, 871, 1511, 2660, 3163, 1364, 2653,
	1672, 1496, 1890, 232, 2619, 4098, 49, 1103, 107, 3164,
	796, 2499, 1935, 93, 104, 1891, 1973, 796, 1886, 1885,
	1306, 1548, 1884, 1883, 1765, 1763, 1764, 1756, 1757, 1758,
	1759, 1761, 1762, 1882, 1881, 1880, 1572, 1879, 1878, 1939,
	1726, 231, 1899, 1734, 1026, 2913, 1859, 1223, 1589, 1223,
	1952, 1671, 231, 1733, 224, 1858, 2249, 2000, 1857, 1856,
	1025, 1855, 1602, 225, 1854, 224, 1728, 1853, 1852, 1943,
	1873, 94, 1851, 1850, 225, 1947, 1730, 1849, 1848, 1847,
	1846, 1747, 1748, 1944, 1845, 186, 1306, 1834, 1820, 230,
	1818, 1813, 1940, 1103, 1322, 230, 186, 1306, 1752, 1753,
	1896, 1897, 1920, 1245, 1236, 3900, 3689, 3666, 3658, 3094,
	2651, 1577, 4167, 3957, 3688, 1103, 1628, 1833, 3153, 175,
	3254, 1364, 1816, 1191, 2072, 1865, 1866, 4014, 1755, 1776,
	3472, 1347, 3147, 3148, 1931, 2097, 2072, 232, 1046, 3230,
	3147, 3148, 3164, 232, 1345, 4627, 2070, 4619, 1339, 2818,
	4358, 4258, 3156, 3157, 3149, 3150, 3151, 3152, 3154, 3155,
	4249, 2045, 4248, 1754, 4102, 4045, 2516, 4044, 4013, 802,
	3951, 805, 1220, 1942, 1220, 2079, 802, 2072, 805, 2502,
	1334, 3867, 3866, 3865, 2044, 3661, 231, 3479, 1967, 2500,
	3478, 1346, 231, 1921, 3808, 1918, 4304, 230, 1911, 224,
	4254, 1854, 230, 4302, 1339, 224, 1871, 1913, 225, 3539,
	1854, 1721, 3758, 1870, 225, 3132, 97, 1889, 1948, 3131,
	3056, 2021, 3370, 1636, 3163, 1996, 2783, 1342, 4186, 2801,
	2929, 2058, 3731, 3307, 1843, 3341, 186, 1915, 3426, 1006,
	3425, 2150, 1970, 1930, 1929, 232, 1928, 4560, 1926, 1925,
	232, 1306, 1306, 1924, 3488, 1339, 1686, 2008, 2246, 2270,
	1645, 1364, 4245, 230, 1046, 3194, 4534, 1953, 183, 100,
	2047, 103, 4519, 1764, 1756, 1757, 1758, 1759, 1761, 1762,
	4506, 3589, 3410, 2043, 1007, 2969, 3157, 3149, 3150, 3151,
	3152, 3154, 3155, 1646, 231, 2166, 230, 230, 230, 231,
	230, 3153, 3812, 3795, 872, 3760, 3755, 224, 4152, 148,
	3739, 232, 224, 3514, 230, 2222, 225, 2487, 3100, 3279,
	2482, 225, 4515, 2008, 2826, 2135, 2691, 2140, 1887, 1867,
	2145, 3417, 2171, 2176, 2008, 2215, 1551, 1479, 186, 1840,
	2041, 1317, 1273, 186, 232, 232, 232, 4528, 232, 1203,
	2050, 1576, 2837, 4525, 4202, 1306, 4179, 1306, 3462, 1306,
	231, 2780, 232, 2834, 2075, 2065, 3709, 4351, 2685, 3164,
	151, 4086, 4443, 224, 3402, 1306, 1306, 1577, 2832, 4333,
	3310, 3726, 225, 2825, 2952, 187, 1306, 1096, 4578, 4516,
	2107, 2113, 1624, 231, 231, 231, 2926, 231, 1306, 3533,
	1306, 1306, 1306, 3773, 186, 2488, 224, 224, 224, 4609,
	224, 231, 802, 4227, 805, 225, 225, 225, 4579, 225,
	2779, 4001, 3255, 796, 224, 3999, 2211, 987, 1518, 1004,
	1002, 2133, 3997, 225, 1526, 1000, 3283, 866, 186, 186,
	1684, 186, 2048, 2726, 2168, 4681, 2059, 2360, 1480, 2216,
	1485, 2228, 998, 1484, 4220, 186, 4212, 995, 2744, 2195,
	4040, 2320, 4039, 3771, 2318, 3770, 1347, 3762, 3754, 1329,
	3753, 3772, 3751, 2742, 3750, 3738, 3704, 2132, 3703, 2744,
	2262, 3406, 2256, 3405, 2144, 3249, 3105, 2489, 3104, 2486,
	3103, 2251, 3102, 3060, 2742, 2843, 2842, 2274, 2839, 2177,
	2828, 2816, 2815, 1683, 2811, 858, 2358, 2236, 2810, 2757,
	3285, 1103, 2809, 1103, 3149, 3150, 3151, 3152, 3154, 3155,
	1103, 1527, 2225, 1973, 1973, 1364, 1346, 1103, 1103, 1103,
	1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103,
	1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103,
	1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103,
	1103, 1103, 2197, 1103, 2238, 1103, 1103, 1103, 1103, 2196,
	1340, 4203, 1622, 4180, 1574, 2257, 2233, 2788, 2233, 3368,
	2787, 3307, 802, 2234, 805, 2230, 2748, 1103, 3712, 2530,
	1103, 1103, 1581, 2246, 1581, 2349, 2362, 1340, 1103, 2242,
	1323, 2243, 1103, 1682, 1103, 1103, 1347, 2673, 2781, 859,
	2432, 4610, 1364, 1752, 1753, 1727, 4614, 1576, 1103, 1103,
	1103, 1103, 2760, 1103, 1103, 1103, 1103, 1103, 1103, 1103,
	1103, 2296, 2261, 3996, 3340, 2529, 1046, 2491, 1046, 2107,
	2386, 2387, 2390, 1755, 2923, 2781, 2269, 2278, 2359, 1103,
	1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103, 2463, 2464,
	1340, 2327, 1103, 1219, 4129, 1219, 1346, 1564, 1762, 1563,
	2805, 1617, 2463, 2479, 1225, 2064, 2063, 992, 1754, 2072,
	2074, 1364, 1044, 1667, 2314, 3964, 1562, 1336, 1561, 2337,
	1225, 3515, 2798, 2799, 2342, 1967, 1967, 2373, 2525, 3151,
	3152, 3154, 3155, 4015, 2798, 2799, 1103, 1364, 2286, 1638,
	3155, 4615, 1667, 2785, 1336, 1481, 1522, 2571, 2571, 2585,
	1259, 2463, 2357, 2334, 2605, 2607, 2482, 2266, 2346, 1719,
	2611, 2348, 1221, 2361, 1221, 2354, 2104, 3369, 3983, 1026,
	1223, 2347, 1026, 1026, 2279, 2798, 2799, 1535, 3963, 1970,
	1970, 2733, 2478, 2485, 2447, 2377, 1223, 2636, 2378, 2379,
	2138, 2447, 2587, 2244, 2975, 1540, 856, 1341, 855, 1720,
	2100, 1043, 3979, 1664, 2661, 39, 2771, 1336, 1695, 1300,
	2258, 2324, 1760, 2023, 2665, 1666, 2025, 3048, 3033, 1618,
	2260, 2283, 2030, 2628, 1341, 4344, 2032, 2067, 2336, 2105,
	2106, 2035, 2268, 2459, 2271, 2272, 2273, 2280, 1646, 1920,
	1306, 1306, 1646, 3015, 1666, 3995, 4578, 2287, 2836, 1732,
	2759, 4617, 1191, 4512, 1337, 2476, 3980, 2455, 1699, 2101,
	1321, 4640, 3723, 1338, 2453, 2650, 1665, 2770, 2235, 2115,
	1232, 688, 3147, 3148, 2627, 3165, 3166, 3167, 2277, 2679,
	2835, 1337, 1364, 3523, 2360, 3998, 1681, 1341, 2527, 175,
	1338, 2833, 2119, 2528, 3891, 1220, 2531, 683, 2532, 2533,
	1046, 2715, 2580, 2609, 2596, 2567, 2831, 3282, 1931, 1046,
	1045, 1220, 1230, 1046, 3578, 1634, 1973, 2154, 3735, 2635,
	2629, 2640, 2161, 2714, 2646, 2647, 3522, 2633, 2634, 2617,
	2618, 3009, 1918, 861, 860, 1873, 1334, 2491, 2676, 2743,
	2151, 2069, 4038, 2358, 1337, 4346, 3047, 3162, 2721, 2116,
	3752, 2747, 3018, 1338, 1364, 1234, 1623, 4128, 2747, 1547,
	2443, 892, 3749, 2729, 3404, 3780, 3366, 2723, 1306, 996,
	996, 2838, 880, 2808, 772, 996, 1678, 3357, 2749, 2068,
	3721, 2786, 2731, 2687, 1103, 1103, 2698, 1103, 2694, 2441,
	2147, 2088, 997, 2758, 1865, 1866, 2089, 996, 2706, 2717,
	2319, 1046, 2709, 2317, 2710, 2697, 2784, 2343, 1545, 796,
	899, 1306, 2700, 3983, 4590, 2146, 2333, 2732, 809, 3781,
	2724, 1233, 2356, 4598, 2746, 2718, 4513, 2716, 2183, 2182,
	4597, 3358, 2829, 2791, 1339, 2155, 2806, 2671, 2730, 4643,
	4616, 3153, 1306, 2895, 3040, 3041, 3993, 3979, 4567, 2142,
	2790, 3972, 3882, 3881, 1306, 2120, 1306, 3975, 2727, 2910,
	3779, 1339, 3976, 1054, 2491, 982, 3459, 2937, 3970, 2874,
	3460, 1306, 3356, 1524, 2876, 4425, 4171, 3974, 2105, 2106,
	1901, 4415, 2966, 770, 3017, 2359, 2819, 1042, 1967, 1039,
	2429, 2335, 4670, 2752, 2774, 2762, 2765, 2800, 2802, 2803,
	2804, 3980, 4623, 1696, 2813, 3168, 3575, 2789, 2143, 2090,
	2285, 3736, 1103, 3978, 3014, 2163, 2812, 4352, 2745, 1521,
	2807, 2121, 2122, 1258, 1339, 4511, 2094, 1547, 2018, 3981,
	2437, 2996, 4366, 2997, 2151, 2970, 2088, 2814, 802, 2906,
	805, 2089, 1970, 3973, 1693, 2117, 2824, 3163, 3459, 2438,
	4480, 3294, 4481, 3071, 2439, 2973, 3284, 737, 2444, 2357,
	2978, 1905, 2979, 1243, 3322, 3788, 1103, 2993, 802, 2162,
	805, 2139, 1103, 1103, 3786, 175, 1485, 2951, 2992, 2877,
	3349, 983, 3069, 1860, 3381, 3252, 2151, 2118, 3576, 4566,
	3001, 1619, 3003, 3506, 3005, 2889, 2941, 993, 2091, 2096,
	3994, 2939, 3499, 2899, 2902, 2098, 4345, 893, 894, 1908,
	1758, 1759, 1761, 1762, 3020, 3016, 3022, 2900, 881, 882,
	3321, 3878, 2870, 2921, 1903, 2932, 2990, 1103, 1103, 3023,
	3062, 2942, 3025, 1103, 3350, 4060, 2953, 2446, 684, 3000,
	1697, 3002, 1906, 3004, 2720, 1300, 1103, 1103, 2008, 4141,
	2158, 3790, 1103, 1103, 2090, 2971, 3977, 2427, 1103, 2940,
	2430, 2344, 4589, 3013, 810, 811, 4413, 1103, 1103, 1103,
	4463, 2094, 706, 1103, 2282, 3348, 2871, 2076, 2077, 1581,
	1694, 2092, 2998, 1103, 1231, 1904, 3789, 2664, 2999, 4125,
	3722, 2744, 3164, 771, 2130, 3984, 3063, 4454, 2454, 3501,
	1103, 1731, 3975, 2123, 2156, 4414, 2763, 3976, 2976, 2977,
	4023, 2426, 1320, 3093, 3500, 685, 3209, 2869, 2473, 2983,
	2984, 2985, 3039, 3066, 3332, 1812, 2127, 1621, 2098, 982,
	1698, 2276, 3030, 3029, 3110, 2110, 3088, 3089, 2491, 2440,
	3028, 3092, 773, 2091, 2096, 2157, 769, 3067, 3034, 2442,
	2373, 3072, 4621, 1039, 3049, 3295, 2632, 4644, 3978, 3084,
	2107, 2645, 1045, 4541, 686, 3591, 687, 1633, 1635, 2136,
	4631, 984, 2868, 4542, 3981, 3784, 4070, 3872, 3330, 2124,
	2128, 3326, 3685, 900, 3788, 3883, 1219, 4565, 1248, 2111,
	1103, 1103, 1103, 3786, 3535, 1905, 895, 896, 1907, 1103,
	1103, 1103, 1219, 3497, 1103, 813, 812, 883, 884, 3031,
	3061, 1651, 2131, 4373, 1103, 1225, 1364, 4510, 4577, 3331,
	1103, 2126, 1103, 3201, 3202, 4124, 2092, 3159, 3160, 3161,
	2109, 1225, 3328, 4575, 3158, 3156, 3157, 3149, 3150, 3151,
	3152, 3154, 3155, 1908, 4392, 983, 4671, 4265, 4075, 1364,
	4061, 3787, 3826, 3447, 3803, 1221, 4622, 2203, 2630, 1898,
	3099, 1225, 1246, 1239, 1364, 814, 815, 4076, 675, 2086,
	3790, 1221, 3184, 2098, 1741, 2982, 1906, 1742, 3879, 2376,
	2108, 1223, 2019, 1973, 2060, 3223, 4649, 1364, 3203, 3679,
	4624, 3927, 3243, 4201, 1901, 3327, 4274, 1223, 2428, 4332,
	3827, 3977, 1306, 1306, 3766, 3789, 2093, 2057, 3629, 3708,
	3208, 3301, 985, 3248, 3448, 1741, 3439, 3297, 3507, 3502,
	3503, 3504, 3505, 2084, 2911, 1103, 2905, 1223, 1736, 2893,
	3213, 2229, 3068, 1046, 2223, 4374, 3262, 2217, 2209, 1103,
	3984, 1313, 3070, 3680, 2189, 2366, 3232, 3574, 2097, 1306,
	3211, 3700, 2792, 1515, 1973, 1250, 3237, 3644, 746, 4430,
	2707, 3536, 4126, 2747, 2085, 986, 2711, 4395, 3829, 3681,
	2325, 3678, 1103, 3289, 3290, 1905, 1741, 1740, 2053, 3212,
	2722, 4091, 2097, 2055, 3221, 3280, 2890, 3241, 1306, 1261,
	3224, 3225, 3273, 3229, 3311, 3195, 2764, 3315, 4243, 3286,
	3253, 3210, 3179, 3180, 3181, 3236, 1220, 3222, 2267, 3884,
	1306, 1334, 1306, 4540, 4241, 3657, 4182, 1493, 1740, 1500,
	3217, 1506, 1220, 1908, 2056, 2670, 3313, 2129, 2150, 1364,
	3309, 3308, 1907, 3054, 1812, 984, 3312, 2150, 1903, 3317,
	1306, 3298, 3319, 1742, 1306, 3032, 3206, 3245, 3246, 3247,
	3205, 2093, 1220, 2139, 3371, 1967, 1906, 1668, 2669, 3227,
	3794, 3228, 1943, 1961, 3384, 3343, 3386, 1306, 2623, 3390,
	3787, 3302, 2668, 3396, 1306, 2667, 1306, 4073, 3365, 1740,
	1364, 2137, 2367, 3274, 1742, 3345, 3270, 796, 1594, 3928,
	1599, 1062, 4648, 3885, 1570, 3266, 3267, 3630, 1306, 1904,
	1608, 3281, 1613, 2626, 1556, 3379, 3631, 3359, 3367, 1970,
	1306, 2897, 3347, 1043, 3287, 3218, 3259, 3260, 1557, 3261,
	4190, 3361, 2134, 3422, 2793, 2794, 1967, 1225, 4339, 4238,
	4375, 3455, 4052, 2768, 3715, 3489, 2227, 3391, 3413, 2008,
	2008, 3397, 3296, 3329, 2625, 3705, 3701, 3438, 4586, 2624,
	1568, 1652, 1306, 1306, 2138, 3408, 4108, 3411, 3453, 3339,
	898, 2966, 4370, 4169, 1670, 3216, 3352, 2974, 3682, 2875,
	2966, 2873, 258, 2255, 3355, 1306, 985, 1627, 3353, 4433,
	1970, 3346, 3354, 4340, 3446, 4177, 2008, 3372, 3382, 3646,
	4440, 3464, 4427, 1223, 3934, 3380, 2498, 3220, 1715, 3403,
	4458, 3393, 4588, 3360, 1717, 3362, 2329, 1714, 1712, 3399,
	1690, 4530, 1907, 1688, 1662, 1364, 3454, 1660, 1364, 3244,
	1658, 1656, 4359, 4147, 4191, 2008, 3926, 4107, 1654, 986,
	4178, 1648, 1643, 3392, 1641, 1566, 3793, 3398, 2497, 3176,
	3551, 2790, 3512, 3415, 745, 3511, 802, 2008, 805, 2008,
	3449, 1103, 3263, 3141, 3073, 3436, 2894, 1103, 1103, 3434,
	3456, 1103, 1103, 1103, 3435, 1103, 4434, 3407, 2827, 3508,
	4341, 2316, 2782, 2696, 1103, 1973, 3509, 2008, 175, 175,
	2338, 2008, 1938, 1103, 3461, 1934, 1103, 1718, 1605, 3487,
	3491, 2088, 1364, 3470, 3177, 3463, 2089, 3531, 3529, 3473,
	3474, 1103, 3530, 1736, 3219, 3706, 3528, 3526, 3011, 1364,
	3485, 3010, 2981, 2355, 1677, 2291, 3532, 2208, 1220, 1973,
	1973, 1103, 1103, 2188, 1103, 1103, 1103, 2001, 1844, 1616,
	4505, 1539, 4024, 1569, 3757, 3756, 4025, 3554, 4010, 4426,
	4089, 4030, 1103, 3519, 3431, 3520, 1103, 3521, 1973, 1973,
	1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103,
	1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103, 3537,
	1103, 3603, 3525, 3604, 3510, 4291, 994, 1103, 1103, 1973,
	3968, 3825, 3563, 3564, 1103, 4563, 2331, 3534, 1716, 1567,
	2330, 1713, 1711, 3475, 1689, 1103, 3383, 1687, 1661, 897,
	3816, 1659, 3769, 3729, 1657, 1655, 1225, 1225, 3727, 2090,
	1103, 1046, 1653, 3707, 3442, 1647, 1642, 3437, 1640, 1565,
	1927, 3427, 4084, 2924, 2916, 2909, 2094, 2901, 4283, 2887,
	3516, 2872, 2713, 3559, 2708, 2187, 2386, 3594, 2185, 1364,
	2167, 4284, 2152, 2125, 2112, 3570, 3675, 1967, 2099, 2040,
	2037, 2315, 3641, 3577, 3579, 3580, 2034, 3586, 2031, 2026,
	2024, 2020, 2011, 3662, 3593, 2386, 3609, 3571, 3452, 4554,
	3394, 3400, 1223, 1223, 4285, 2161, 1745, 1946, 3601, 2061,
	4579, 4075, 3602, 3026, 1200, 3024, 1103, 3606, 3052, 3683,
	3684, 1967, 1967, 3608, 3648, 3633, 3637, 1219, 2091, 2096,
	4076, 1970, 3432, 3695, 3696, 3697, 1103, 4468, 2341, 4113,
	1201, 4106, 3642, 1219, 3440, 4105, 4037, 3960, 3634, 2967,
	1967, 1967, 175, 2080, 1520, 3653, 3654, 4276, 2769, 2744,
	3581, 999, 1001, 1003, 3650, 3651, 4287, 2744, 3837, 1103,
	1103, 2281, 4269, 1219, 2742, 1970, 1970, 2107, 1709, 1710,
	2226, 1967, 2766, 3600, 2339, 1282, 3481, 3482, 733, 4286,
	2311, 2310, 4002, 1111, 2288, 1281, 1221, 4467, 3664, 4032,
	1961, 1961, 3665, 1639, 1970, 1970, 4311, 4288, 3935, 1103,
	3506, 2092, 1221, 3053, 3913, 3324, 1746, 2773, 3395, 3499,
	2795, 1752, 1753, 2772, 1752, 1753, 1749, 1220, 1220, 1315,
	2340, 1249, 4582, 1306, 4573, 1970, 1306, 3740, 689, 262,
	262, 262, 1221, 678, 679, 3765, 694, 678, 694, 704,
	1202, 1755, 744, 1973, 4535, 2773, 762, 255, 2098, 3813,
	2886, 768, 789, 2313, 3744, 1282, 3759, 3764, 262, 3745,
	3747, 2210, 1326, 3711, 2834, 3269, 846, 3761, 3271, 3272,
	1282, 2832, 3767, 3275, 1306, 3276, 1754, 3277, 877, 1754,
	1103, 2841, 3732, 700, 262, 2821, 2775, 4420, 1225, 1103,
	3737, 3839, 2823, 4386, 672, 2777, 4380, 4338, 3288, 1306,
	1306, 1306, 3691, 4260, 3846, 2822, 3501, 3830, 2776, 4236,
	4170, 3823, 2790, 3815, 3802, 3672, 1306, 3441, 2937, 3792,
	2931, 3500, 2610, 3776, 2046, 1954, 3782, 4618, 4188, 3791,
	4460, 3251, 1306, 3809, 4647, 4461, 4382, 3834, 1364, 3147,
	3148, 1752, 1753, 3810, 4460, 2966, 2736, 2737, 3831, 4461,
	3778, 2734, 2735, 1626, 1223, 4592, 1487, 3905, 2493, 1625,
	3302, 3796, 1364, 3687, 2736, 1103, 1103, 1037, 3814, 982,
	3833, 1103, 1103, 1973, 2734, 2526, 1103, 1103, 1692, 1103,
	3822, 1691, 4261, 1103, 4221, 4034, 3819, 4029, 4028, 3901,
	3686, 3817, 3582, 1039, 1103, 3388, 3385, 3832, 1838, 1837,
	4633, 4599, 4424, 4423, 4422, 4326, 4239, 4216, 678, 678,
	1103, 3835, 4168, 3870, 3840, 1967, 262, 4166, 3845, 3777,
	3853, 3841, 4164, 3862, 4063, 4049, 2093, 4000, 3869, 1219,
	3860, 3868, 3851, 3852, 3886, 3895, 3857, 3856, 3887, 1038,
	4289, 3956, 3859, 3861, 3843, 3797, 4290, 3899, 3725, 3718,
	3445, 3444, 3318, 3268, 3008, 2989, 2988, 2987, 2986, 2915,
	2888, 2767, 2704, 2008, 3880, 2699, 2689, 1183, 2688, 1970,
	1225, 2677, 2458, 2332, 2312, 2309, 1752, 1753, 1225, 1220,
	2308, 2307, 1364, 2306, 1364, 983, 3875, 2305, 2224, 2198,
	2194, 1225, 2193, 2192, 2191, 2190, 2014, 2013, 1221, 1783,
	2012, 2010, 1306, 1306, 1945, 1708, 1755, 1707, 1649, 1534,
	1533, 1364, 1532, 1531, 1530, 3940, 1529, 1528, 1523, 1519,
	1517, 1516, 1473, 1472, 1291, 3507, 3502, 3503, 3504, 3505,
	1471, 1470, 1355, 1354, 1353, 1225, 1223, 1225, 1352, 1351,
	1319, 1754, 1318, 1268, 1223, 1967, 1267, 3925, 1266, 3850,
	1265, 1264, 1263, 1961, 1262, 3961, 3962, 1223, 3943, 1306,
	1260, 1255, 1254, 1253, 1252, 1251, 870, 8, 2051, 1364,
	1005, 1306, 1456, 991, 1306, 1467, 1291, 3992, 4343, 4003,
	3982, 3946, 2328, 1364, 3937, 3938, 3939, 1701, 3932, 3936,
	92, 3965, 3942, 4005, 4006, 1525, 3991, 3941, 175, 1970,
	3947, 1223, 832, 1223, 86, 3950, 2159, 3724, 961, 4457,
	1509, 4365, 840, 4442, 1306, 1306, 3811, 3967, 3320, 2844,
	2290, 4033, 4004, 4035, 1650, 2292, 3231, 3774, 2652, 4412,
	3909, 3109, 4318, 4140, 1306, 3236, 2496, 1842, 3188, 88,
	1087, 1291, 1291, 1133, 4059, 1760, 1364, 4058, 3969, 3710,
	2956, 1306, 4053, 4056, 4055, 4008, 1958, 4050, 1960, 4027,
	4036, 1220, 1053, 1367, 4479, 2062, 1093, 2078, 4017, 1220,
	2071, 4020, 2690, 2570, 1110, 984, 1225, 1107, 1962, 3988,
	4081, 3988, 1220, 1964, 4092, 4022, 1306, 1306, 1306, 4041,
	1109, 1108, 1782, 1784, 1963, 4019, 4048, 1861, 4046, 1364,
	1106, 1957, 3821, 3847, 3848, 3849, 2935, 3471, 1219, 1219,
	1575, 1103, 1103, 1103, 1573, 963, 2066, 2452, 4112, 2480,
	1300, 4047, 4087, 3098, 1835, 4093, 1220, 4054, 1220, 1364,
	4069, 1068, 1089, 2477, 1103, 4109, 1244, 1103, 1103, 1078,
	4078, 4096, 1223, 1067, 3214, 3193, 3458, 1103, 3671, 2365,
	1973, 1775, 4009, 850, 4101, 1103, 1103, 4094, 3144, 2483,
	4080, 1235, 2593, 2586, 4018, 2582, 3278, 4021, 4118, 2925,
	1364, 1722, 1306, 4154, 1814, 2936, 1349, 1221, 1221, 1071,
	4116, 4132, 2450, 4115, 1826, 3078, 2375, 4127, 4121, 3465,
	3234, 2683, 4120, 1364, 4464, 3590, 2008, 2202, 1824, 1199,
	1198, 1103, 1829, 1242, 1197, 4448, 4445, 2149, 2008, 3854,
	1103, 2008, 4149, 3420, 1036, 2054, 985, 4137, 1103, 2728,
	3988, 1804, 1973, 3428, 1083, 1466, 2370, 4077, 3199, 3698,
	3490, 1103, 1536, 3699, 1103, 767, 4195, 1095, 1803, 2865,
	2864, 4335, 1335, 1333, 1332, 1331, 1103, 4606, 4669, 3720,
	3719, 229, 4143, 1364, 3046, 1743, 4198, 4163, 4160, 4161,
	1306, 1735, 226, 4173, 1237, 1306, 1306, 1220, 228, 986,
	227, 2008, 4064, 3676, 3728, 3240, 3730, 4533, 4172, 264,
	3742, 4181, 3412, 4174, 23, 22, 21, 112, 42, 20,
	150, 128, 147, 146, 4215, 120, 1776, 1257, 4251, 145,
	144, 143, 142, 4226, 149, 141, 3952, 3953, 140, 262,
	1364, 262, 262, 1306, 1286, 262, 1296, 4242, 135, 139,
	3422, 138, 1967, 137, 136, 134, 4213, 1316, 132, 133,
	127, 1225, 1225, 4217, 131, 4218, 762, 130, 129, 4205,
	126, 4259, 4232, 4223, 125, 3768, 4270, 4234, 4231, 124,
	123, 1103, 1103, 122, 4240, 4235, 121, 4228, 4275, 119,
	262, 118, 262, 262, 1286, 2588, 262, 262, 1103, 1973,
	1219, 4250, 1296, 117, 4273, 4255, 1970, 116, 115, 114,
	113, 758, 755, 262, 4230, 1489, 4267, 4271, 4278, 61,
	4294, 4295, 4272, 4277, 1967, 60, 111, 1223, 1223, 4292,
	110, 19, 40, 14, 1103, 65, 1513, 1103, 2880, 4096,
	66, 2883, 18, 2885, 1225, 13, 35, 91, 1300, 4307,
	4308, 102, 101, 36, 99, 1538, 1467, 1225, 1296, 4306,
	98, 4316, 262, 262, 4331, 1286, 34, 17, 16, 1221,
	15, 1756, 1757, 1758, 1759, 1761, 1762, 96, 1970, 95,
	33, 31, 11, 4229, 4327, 4310, 762, 2928, 262, 262,
	2928, 9, 37, 4330, 1922, 2097, 12, 1066, 5, 1103,
	1103, 180, 4353, 1467, 179, 3988, 3988, 4347, 4369, 1103,
	1223, 877, 182, 178, 1225, 181, 4354, 1225, 90, 4348,
	4117, 1306, 4119, 1223, 177, 176, 89, 2008, 29, 10,
	172, 1306, 1306, 4361, 4252, 3807, 81, 174, 173, 171,
	170, 169, 82, 79, 168, 4363, 85, 167, 1306, 80,
	1961, 84, 1220, 1220, 4376, 83, 4403, 27, 4381, 4377,
	4378, 4384, 1103, 1103, 4383, 6, 3006, 4388, 64, 7,
	4122, 1967, 1103, 4389, 3513, 4397, 4391, 105, 106, 38,
	1223, 77, 1219, 1223, 76, 262, 4400, 4255, 3988, 75,
	1219, 26, 4408, 63, 4409, 4396, 25, 213, 212, 4399,
	4407, 3988, 4279, 1219, 211, 262, 4165, 4435, 1103, 1103,
	210, 1103, 4298, 4417, 209, 4439, 208, 207, 206, 201,
	4421, 1961, 200, 205, 203, 1970, 202, 4462, 204, 199,
	4416, 216, 215, 4447, 4450, 1220, 221, 220, 4401, 4402,
	219, 4459, 218, 217, 214, 4438, 223, 1219, 1220, 1219,
	4437, 1221, 198, 4466, 4484, 4406, 197, 196, 3988, 1221,
	4456, 3988, 194, 190, 1103, 1103, 1103, 4488, 189, 4452,
	193, 4487, 1221, 195, 4469, 192, 4451, 191, 188, 4455,
	4482, 222, 72, 165, 4475, 166, 71, 164, 3075, 3076,
	4483, 163, 162, 161, 1103, 160, 159, 158, 70, 4233,
	24, 2, 1, 0, 0, 1220, 0, 4522, 1220, 4504,
	0, 4503, 4501, 4502, 0, 4517, 1221, 0, 1221, 0,
	0, 0, 0, 0, 4536, 0, 4518, 0, 0, 0,
	0, 0, 4520, 0, 4543, 0, 0, 4545, 0, 0,
	0, 0, 4559, 0, 4547, 0, 0, 0, 1103, 0,
	0, 0, 4557, 0, 0, 0, 4558, 0, 4544, 0,
	0, 4564, 0, 0, 4551, 0, 4552, 0, 2214, 4553,
	0, 0, 0, 0, 0, 0, 0, 0, 4580, 0,
	4570, 4571, 0, 0, 0, 0, 0, 4584, 1219, 0,
	4576, 4574, 4572, 0, 0, 0, 4583, 1225, 4585, 1225,
	0, 2097, 4447, 678, 4587, 4450, 4601, 0, 0, 4596,
	4591, 0, 4604, 4602, 4369, 4613, 4600, 0, 0, 0,
	0, 4466, 0, 4612, 262, 4608, 262, 2639, 0, 0,
	262, 0, 3170, 3171, 3172, 0, 4626, 4611, 0, 0,
	0, 4607, 0, 1489, 1286, 262, 0, 262, 4625, 0,
	4628, 0, 0, 262, 1489, 694, 4603, 1221, 4605, 4634,
	262, 1489, 0, 1223, 4641, 1223, 0, 4635, 0, 1103,
	1103, 0, 0, 0, 4639, 2015, 0, 0, 1103, 3036,
	1103, 1103, 4645, 0, 4637, 4632, 0, 262, 4654, 4651,
	4660, 0, 4642, 4662, 262, 4665, 4657, 4664, 0, 4659,
	4663, 0, 0, 0, 0, 0, 4661, 0, 0, 4672,
	0, 4673, 4668, 0, 0, 4658, 4675, 0, 0, 4677,
	0, 4678, 2937, 0, 4680, 0, 4676, 4674, 0, 4683,
	0, 0, 0, 0, 762, 1300, 1300, 1103, 4688, 4684,
	4690, 3988, 1961, 3988, 4691, 0, 4693, 4694, 4652, 4653,
	4680, 0, 1300, 0, 2456, 0, 4685, 0, 0, 2588,
	2588, 0, 0, 0, 4687, 0, 0, 0, 0, 1824,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4555, 4556, 0, 1961, 1961, 1220, 4561,
	1220, 0, 4207, 4208, 0, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 4689, 0, 0, 0, 0,
	0, 0, 0, 74, 0, 1961, 1961, 0, 0, 0,
	4222, 0, 4224, 2592, 4225, 0, 0, 0, 0, 78,
	0, 3333, 3334, 0, 3335, 3336, 3337, 0, 0, 0,
	0, 0, 0, 1219, 1219, 0, 1961, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1066, 0, 87,
	0, 1066, 0, 0, 0, 0, 0, 3373, 3374, 0,
	3375, 3376, 3377, 0, 0, 0, 0, 1448, 0, 0,
	0, 1448, 0, 262, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 2588, 2588, 2588, 0, 0, 0, 871,
	0, 0, 1221, 1221, 0, 0, 0, 0, 0, 0,
	0, 49, 0, 107, 0, 0, 1219, 0, 93, 104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 1291, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 262, 0, 0, 94, 678, 0, 262,
	0, 1215, 0, 0, 0, 1221, 1219, 0, 0, 1219,
	0, 762, 0, 0, 0, 877, 0, 0, 1221, 2860,
	0, 0, 0, 0, 0, 4362, 0, 0, 0, 0,
	1291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 1286, 262, 0, 0, 0, 257, 257, 674,
	0, 0, 2852, 2850, 0, 0, 0, 762, 0, 2854,
	2856, 2846, 0, 0, 262, 0, 1291, 1291, 0, 0,
	0, 2289, 0, 0, 0, 1221, 262, 262, 1221, 262,
	0, 262, 0, 262, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 0, 2321, 0,
	0, 2322, 0, 2323, 3547, 3548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 744, 0, 0, 0, 762, 0, 0, 1456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1467, 0, 0, 0, 0,
	0, 0, 0, 183, 100, 0, 103, 0, 0, 0,
	0, 0, 3610, 3611, 3612, 3613, 3614, 3615, 3616, 3617,
	3618, 3619, 3620, 3621, 3622, 3623, 3624, 3625, 3626, 3627,
	3628, 230, 3632, 0, 0, 0, 0, 0, 0, 872,
	1961, 0, 0, 0, 148, 0, 0, 0, 0, 2848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2862, 0, 0, 0, 0, 4532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 2861, 2853, 2851, 2855, 2857, 2847, 2849, 2863, 0,
	0, 0, 0, 0, 0, 0, 2859, 0, 0, 1219,
	0, 1219, 0, 0, 0, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 678, 0, 0, 0, 0, 2592, 231, 2866,
	1467, 0, 0, 0, 0, 0, 0, 262, 1291, 0,
	0, 224, 0, 0, 0, 0, 678, 0, 0, 0,
	225, 0, 0, 262, 0, 678, 0, 1448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 1221, 0,
	1221, 0, 186, 0, 0, 0, 0, 1467, 0, 1467,
	0, 0, 0, 262, 1296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2588, 2588, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2592, 2592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1362, 0, 0, 0, 1461,
	0, 262, 1296, 0, 0, 694, 0, 3147, 3148, 0,
	3165, 3166, 3167, 0, 0, 2703, 0, 0, 0, 0,
	0, 262, 0, 0, 262, 0, 0, 0, 262, 0,
	262, 0, 0, 0, 0, 1286, 0, 262, 262, 0,
	1296, 1296, 2719, 0, 1066, 0, 0, 262, 0, 0,
	1448, 0, 0, 2588, 2588, 2588, 2588, 2588, 2588, 2588,
	2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588,
	2588, 2588, 0, 2588, 2867, 0, 0, 0, 0, 0,
	0, 0, 3162, 2858, 0, 0, 0, 3818, 0, 0,
	0, 0, 2756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 73, 262, 46, 45, 0,
	0, 2592, 2592, 2592, 0, 0, 0, 0, 0, 262,
	0, 0, 74, 0, 0, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 78, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 3871, 67,
	0, 0, 1752, 1753, 0, 0, 48, 0, 154, 0,
	0, 0, 0, 0, 0, 0, 3153, 0, 0, 0,
	0, 0, 262, 2878, 0, 1783, 47, 1961, 87, 0,
	1448, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	262, 0, 262, 0, 50, 68, 0, 0, 0, 262,
	0, 0, 0, 51, 0, 0, 0, 1754, 57, 2920,
	0, 0, 155, 0, 0, 0, 0, 1774, 0, 2756,
	49, 678, 107, 0, 0, 0, 1771, 93, 104, 0,
	2949, 877, 0, 2756, 2756, 0, 0, 0, 0, 1961,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3163, 0, 0, 0, 0, 52, 0, 262,
	1286, 262, 0, 0, 0, 1489, 0, 1489, 1296, 262,
	3550, 0, 1286, 0, 1286, 94, 1286, 1272, 0, 1272,
	1272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 1778, 1779, 1780, 1467, 1467, 0, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 262, 262, 262,
	262, 1286, 0, 0, 1286, 0, 262, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 1359, 0,
	0, 0, 0, 0, 1465, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1782, 1784,
	262, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 3147, 3148, 0, 3165, 3166, 3167, 0, 1467, 0,
	0, 0, 0, 0, 1769, 1770, 1961, 0, 0, 0,
	0, 0, 0, 3556, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2214, 0, 0, 0, 3164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 1937, 0, 0, 4062, 0,
	97, 0, 0, 0, 1448, 0, 1590, 1591, 0, 0,
	0, 4079, 0, 0, 0, 0, 3162, 53, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 56, 0, 0, 4100, 0, 59, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 0, 0, 0, 0,
	0, 58, 183, 100, 0, 103, 0, 0, 0, 54,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 0,
	55, 0, 0, 0, 0, 0, 0, 0, 0, 1291,
	230, 0, 0, 0, 0, 0, 0, 0, 62, 0,
	0, 1448, 0, 148, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1700, 0, 0, 0, 0, 153, 4146,
	3153, 1781, 3159, 3160, 3161, 0, 0, 0, 2082, 3158,
	3156, 3157, 3149, 3150, 3151, 3152, 3154, 3155, 232, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2592, 2592, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 0, 0, 0, 0,
	1448, 0, 0, 4184, 0, 0, 0, 0, 262, 187,
	0, 0, 0, 0, 3168, 0, 0, 231, 0, 0,
	0, 1467, 0, 0, 262, 0, 1448, 0, 0, 678,
	224, 0, 0, 0, 678, 0, 0, 678, 0, 225,
	678, 678, 0, 0, 0, 0, 678, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 3163, 0, 0, 0,
	0, 186, 0, 0, 3, 0, 0, 1489, 0, 0,
	0, 2592, 2592, 2592, 2592, 2592, 2592, 2592, 2592, 2592,
	2592, 2592, 2592, 2592, 2592, 2592, 2592, 2592, 2592, 2592,
	1489, 2592, 0, 0, 0, 0, 0, 0, 2180, 0,
	0, 0, 262, 0, 0, 0, 262, 262, 0, 0,
	0, 1772, 1768, 0, 1765, 1763, 1764, 1756, 1757, 1758,
	1759, 1761, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2756, 2756, 262, 0, 3293,
	0, 0, 0, 0, 0, 2756, 0, 0, 3304, 0,
	0, 0, 0, 0, 0, 0, 2756, 3304, 0, 2756,
	3304, 0, 0, 3304, 0, 0, 0, 0, 0, 0,
	4315, 1448, 0, 0, 0, 0, 0, 0, 262, 262,
	3293, 0, 262, 0, 0, 0, 0, 0, 1932, 0,
	0, 0, 0, 2563, 2564, 2565, 2566, 2559, 2560, 2561,
	2562, 3164, 3293, 1941, 262, 1465, 3364, 3364, 0, 0,
	1286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2588, 0, 0, 0, 0, 0, 2756, 0, 2756, 0,
	3389, 2756, 3293, 0, 0, 2756, 3293, 0, 0, 0,
	0, 0, 0, 1448, 0, 1272, 0, 0, 0, 0,
	0, 0, 1465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 4367, 0, 2588, 2539, 2540, 2541, 2542, 0,
	262, 3416, 0, 0, 3418, 2756, 0, 0, 262, 0,
	0, 0, 262, 0, 0, 1296, 4387, 0, 2551, 2552,
	2553, 2554, 2547, 2548, 2549, 2550, 2555, 2556, 2557, 2558,
	262, 0, 0, 0, 0, 2920, 0, 0, 1286, 0,
	262, 0, 0, 2756, 0, 678, 0, 0, 0, 1752,
	1753, 0, 2756, 0, 0, 0, 3159, 3160, 3161, 0,
	0, 0, 0, 3158, 3156, 3157, 3149, 3150, 3151, 3152,
	3154, 3155, 1783, 262, 2920, 0, 0, 2920, 0, 1755,
	0, 0, 2389, 0, 3147, 3148, 0, 3165, 3166, 3167,
	0, 0, 2535, 2536, 2537, 2538, 2543, 2544, 2545, 2546,
	1900, 0, 0, 0, 0, 0, 3555, 1291, 0, 3518,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 0, 3524, 0, 0, 1286,
	262, 0, 262, 1771, 0, 0, 4470, 0, 1286, 0,
	0, 0, 4472, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3162,
	2214, 2588, 0, 0, 0, 0, 0, 0, 262, 2494,
	0, 0, 73, 0, 1752, 1753, 0, 1785, 1786, 1787,
	1795, 1796, 1797, 0, 0, 0, 0, 3545, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 1755, 78, 0, 0, 1777, 1778,
	1779, 1780, 0, 1801, 0, 0, 0, 0, 1760, 0,
	0, 0, 0, 0, 3588, 0, 0, 2200, 0, 0,
	0, 2207, 0, 0, 0, 0, 0, 3147, 3148, 1754,
	3165, 3166, 3167, 2220, 0, 87, 0, 0, 0, 1774,
	0, 0, 0, 3153, 0, 0, 0, 0, 1771, 2232,
	0, 2232, 0, 0, 2662, 1782, 1784, 2239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 871, 0, 0, 1052, 0,
	0, 1769, 1770, 0, 0, 0, 0, 0, 0, 107,
	0, 0, 0, 0, 93, 104, 0, 0, 2207, 0,
	0, 2264, 3162, 0, 0, 0, 0, 3168, 0, 262,
	262, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 2284, 1777, 1778, 1779, 1780, 0, 0, 0,
	0, 678, 678, 1760, 0, 2297, 0, 2299, 0, 2301,
	0, 2303, 0, 2304, 0, 0, 0, 0, 0, 3163,
	0, 0, 94, 1489, 1489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1489, 1489, 1489,
	1792, 0, 0, 1802, 0, 0, 0, 0, 0, 0,
	1782, 1784, 0, 2326, 0, 0, 0, 0, 0, 775,
	0, 0, 0, 0, 0, 0, 3153, 0, 0, 2739,
	0, 0, 0, 0, 0, 0, 1769, 1770, 0, 0,
	0, 0, 0, 0, 786, 1448, 0, 0, 0, 0,
	0, 0, 0, 0, 1790, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3169, 0, 1781, 1775,
	0, 0, 0, 0, 762, 0, 0, 0, 1448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	3168, 0, 0, 1448, 0, 0, 0, 2214, 0, 0,
	0, 0, 0, 0, 0, 3364, 0, 2680, 0, 0,
	0, 0, 0, 0, 0, 1291, 1448, 0, 262, 0,
	0, 0, 0, 0, 3164, 0, 0, 97, 0, 0,
	0, 0, 3163, 0, 0, 0, 0, 780, 3293, 0,
	262, 0, 0, 787, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 1066, 0, 0, 785, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 1066, 0,
	0, 262, 0, 0, 0, 0, 262, 0, 0, 183,
	100, 262, 103, 0, 0, 0, 0, 0, 2592, 0,
	0, 0, 0, 1781, 0, 0, 0, 0, 0, 0,
	2756, 262, 0, 0, 0, 784, 0, 230, 0, 0,
	2949, 2949, 0, 0, 1776, 872, 877, 877, 2756, 0,
	148, 739, 2920, 2920, 0, 0, 877, 2756, 1772, 1768,
	0, 1765, 1763, 1764, 1756, 1757, 1758, 1759, 1761, 1762,
	0, 1793, 2592, 0, 0, 2659, 782, 0, 0, 262,
	0, 0, 0, 0, 0, 232, 0, 0, 1448, 3159,
	3160, 3161, 0, 0, 0, 0, 3158, 3156, 3157, 3149,
	3150, 3151, 3152, 3154, 3155, 0, 0, 3164, 0, 0,
	0, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 231, 790, 0, 0, 0, 1448,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 3910, 0, 0, 0, 0, 225, 0, 0, 2705,
	0, 0, 1272, 0, 1135, 0, 1272, 0, 1272, 0,
	0, 0, 0, 0, 1791, 0, 0, 0, 186, 1766,
	1767, 1773, 1794, 1772, 1768, 2220, 1765, 1763, 1764, 1756,
	1757, 1758, 1759, 1761, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 777, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 1489,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 781, 2592,
	0, 0, 3159, 3160, 3161, 0, 0, 0, 0, 3158,
	3156, 3157, 3149, 3150, 3151, 3152, 3154, 3155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2756, 2756, 0,
	3364, 2756, 738, 0, 1448, 0, 0, 1448, 3990, 0,
	3990, 1489, 0, 0, 0, 1311, 788, 0, 0, 0,
	0, 2756, 779, 3304, 1465, 0, 0, 1489, 1489, 262,
	3293, 0, 1467, 0, 0, 0, 0, 0, 1052, 0,
	0, 0, 1052, 3293, 0, 262, 3293, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2756, 0, 2756, 262, 0, 0, 776,
	0, 0, 0, 0, 0, 0, 0, 0, 2207, 0,
	0, 1448, 0, 0, 0, 0, 0, 2220, 0, 0,
	0, 1491, 0, 1497, 2756, 1503, 0, 783, 1448, 4066,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 740, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 778, 3200, 0, 0, 0, 1226, 0, 0,
	1291, 0, 0, 0, 0, 0, 0, 0, 2980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3990,
	0, 0, 1489, 0, 0, 0, 3226, 2991, 0, 2994,
	0, 0, 1592, 0, 1597, 0, 0, 0, 0, 0,
	0, 3239, 0, 0, 1606, 0, 1611, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3019, 1465, 3021, 1465, 0,
	0, 0, 0, 0, 3027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1752, 1753, 0, 0, 1448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1673, 3147, 3148, 1679, 3165, 3166, 3167, 1783, 1272, 0,
	0, 0, 0, 0, 1755, 0, 3055, 0, 0, 0,
	0, 0, 2756, 0, 3304, 0, 0, 4176, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 4196, 0, 4196, 0, 0, 0, 0, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 0, 0, 762, 0, 1771, 0,
	0, 0, 0, 0, 0, 0, 3162, 1286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3293, 0, 262, 0, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4176, 0, 0, 0, 0, 0,
	0, 0, 2756, 0, 0, 0, 0, 1823, 0, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 0,
	4264, 0, 0, 1777, 1778, 1779, 1780, 3239, 0, 0,
	0, 0, 1489, 1760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3990, 3990, 0, 0, 0, 0,
	3153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 262, 0, 0, 0, 0, 0, 0,
	0, 1752, 1753, 0, 1785, 1786, 1787, 1795, 1796, 1797,
	1782, 1784, 0, 0, 0, 0, 3588, 0, 0, 0,
	0, 0, 0, 1788, 1783, 0, 0, 0, 0, 0,
	0, 1755, 0, 3364, 4329, 0, 1769, 1770, 0, 0,
	1801, 4176, 0, 0, 3168, 0, 0, 0, 1894, 1894,
	1894, 0, 0, 0, 0, 0, 0, 3990, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 1775,
	3990, 0, 0, 0, 0, 0, 1774, 1448, 0, 0,
	0, 0, 0, 0, 0, 1771, 3163, 0, 0, 0,
	0, 262, 1461, 0, 0, 1362, 0, 0, 0, 0,
	0, 1448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3990, 0, 262,
	3990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1272, 0, 0, 0, 1465, 1465, 0, 0, 0, 0,
	1777, 1778, 1779, 1780, 0, 0, 1489, 0, 1489, 3567,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3291, 3583, 0, 0, 0,
	0, 0, 0, 1781, 0, 1052, 0, 0, 1226, 0,
	4431, 0, 0, 0, 0, 0, 0, 1792, 0, 0,
	1802, 0, 0, 4196, 1776, 0, 262, 1782, 1784, 0,
	0, 1448, 0, 1448, 0, 0, 3342, 3344, 0, 0,
	2220, 3164, 0, 0, 1798, 2756, 1799, 0, 0, 0,
	0, 0, 1226, 1769, 1770, 0, 1226, 0, 0, 0,
	1448, 0, 0, 0, 1226, 0, 262, 0, 0, 0,
	0, 1790, 0, 0, 1752, 1753, 0, 1785, 1786, 1787,
	1795, 1796, 1797, 0, 0, 0, 1775, 0, 0, 0,
	0, 0, 0, 3588, 0, 1226, 1788, 1783, 0, 0,
	0, 0, 0, 0, 1755, 0, 0, 0, 0, 0,
	1489, 0, 0, 1801, 0, 0, 0, 0, 1448, 0,
	0, 1226, 0, 0, 0, 0, 3674, 0, 0, 1800,
	0, 0, 1448, 0, 0, 0, 0, 262, 0, 1754,
	0, 1226, 0, 0, 0, 0, 3429, 1789, 1226, 1774,
	3433, 0, 0, 0, 0, 0, 0, 0, 1771, 0,
	0, 0, 1226, 1772, 1768, 0, 1765, 1763, 1764, 1756,
	1757, 1758, 1759, 1761, 1762, 0, 3159, 3160, 3161, 4176,
	0, 0, 0, 3158, 3156, 3157, 3149, 3150, 3151, 3152,
	3154, 3155, 0, 0, 0, 1448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 3486, 0, 2756, 0, 0, 1226, 0, 0, 0,
	3990, 0, 3990, 0, 0, 1489, 0, 0, 0, 0,
	0, 1776, 0, 1777, 1778, 1779, 1780, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 0, 0, 1448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3527, 1489,
	1465, 0, 0, 0, 0, 0, 0, 0, 1448, 0,
	1792, 0, 0, 1802, 0, 0, 0, 0, 0, 0,
	1782, 1784, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2949, 3540, 1798, 0, 1799,
	0, 0, 0, 0, 2756, 0, 1769, 1770, 0, 1448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2949,
	0, 0, 0, 0, 1790, 0, 0, 0, 0, 0,
	0, 0, 1448, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 0, 0, 0, 0, 1766, 1767, 1773, 1794,
	1772, 1768, 0, 1765, 1763, 1764, 1756, 1757, 1758, 1759,
	1761, 1762, 0, 1066, 0, 0, 3122, 0, 0, 0,
	3123, 0, 1800, 0, 0, 0, 0, 0, 0, 0,
	0, 2364, 1448, 2368, 0, 0, 0, 0, 0, 0,
	2382, 0, 0, 0, 0, 0, 0, 2391, 2392, 2393,
	2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403,
	2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413,
	2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423,
	2424, 2425, 0, 2431, 0, 2433, 2434, 2435, 2436, 1448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 0, 0, 0, 2460, 0, 0,
	0, 0, 0, 0, 0, 1226, 0, 1226, 1823, 0,
	0, 0, 2475, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 1226, 0, 0, 0, 0, 0, 2505, 2508,
	2511, 2514, 0, 2518, 2519, 2520, 2521, 2522, 2523, 2524,
	1974, 1793, 0, 0, 1226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2584, 0, 2595, 2597, 2602, 0, 0, 0, 0,
	0, 3945, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3958, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1066, 1066,
	0, 0, 0, 0, 1791, 1226, 0, 0, 0, 1766,
	1767, 1773, 1794, 1772, 1768, 0, 1765, 1763, 1764, 1756,
	1757, 1758, 1759, 1761, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1752, 1753, 0, 2220, 0,
	0, 0, 0, 0, 0, 0, 1088, 109, 0, 2220,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 3806,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 2220, 0, 0, 0, 0, 3824,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 1066, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1226, 1226, 0, 0, 0,
	109, 0, 0, 0, 0, 1226, 1362, 3873, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1752, 1753, 74, 1785, 1786, 1787, 1795,
	1796, 1797, 0, 3544, 0, 0, 4138, 0, 0, 0,
	0, 78, 0, 0, 0, 1788, 1783, 0, 0, 0,
	0, 0, 0, 1755, 1777, 1778, 1779, 1780, 0, 0,
	0, 0, 1801, 0, 1760, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4138, 0, 0,
	0, 87, 1027, 0, 2881, 2882, 0, 2884, 1754, 0,
	0, 0, 0, 1047, 0, 0, 0, 0, 1774, 1226,
	2389, 1226, 0, 1226, 0, 0, 0, 1771, 0, 0,
	0, 1782, 1784, 0, 0, 0, 0, 0, 0, 1226,
	1226, 871, 0, 0, 0, 0, 0, 0, 0, 0,
	1226, 0, 0, 49, 0, 107, 0, 1769, 1770, 1209,
	93, 104, 1226, 0, 1226, 1226, 1226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 1778, 1779, 1780, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3007, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4007, 0, 1792,
	0, 0, 1802, 0, 0, 0, 0, 0, 0, 1782,
	1784, 0, 0, 2220, 0, 0, 0, 0, 0, 0,
	0, 1752, 1753, 0, 0, 0, 1798, 0, 1799, 0,
	0, 0, 0, 0, 0, 1769, 1770, 1974, 1974, 1226,
	0, 0, 1805, 1806, 1783, 0, 0, 0, 0, 0,
	0, 1755, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2220, 0,
	0, 0, 0, 0, 0, 1776, 1754, 0, 4088, 0,
	0, 0, 0, 0, 0, 0, 1774, 3058, 3059, 0,
	0, 0, 0, 3065, 0, 1771, 0, 0, 0, 0,
	0, 1800, 0, 97, 0, 0, 0, 0, 0, 0,
	0, 0, 3079, 3080, 0, 0, 1226, 0, 2475, 1789,
	0, 0, 0, 0, 0, 0, 0, 3087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3101, 0, 0, 0, 0, 0, 3064,
	0, 0, 0, 0, 0, 183, 100, 0, 103, 0,
	3113, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 1778, 1779, 1780, 0, 0, 0, 0, 1226, 0,
	1760, 0, 1781, 230, 0, 1226, 0, 0, 0, 0,
	0, 872, 0, 0, 1226, 0, 148, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 1226, 0, 0, 1772, 1768, 0, 1765, 1763, 1764,
	1756, 1757, 1758, 1759, 1761, 1762, 0, 1782, 1784, 0,
	1793, 232, 0, 4185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1769, 1770, 0, 0, 151, 0, 2602,
	2602, 2602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 1894, 0, 0, 0, 0, 0,
	231, 0, 3204, 0, 0, 0, 1775, 0, 0, 0,
	0, 0, 2220, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1226, 1226, 0, 0, 0, 0,
	0, 0, 0, 0, 1586, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 1766, 1767,
	1773, 1794, 1772, 1768, 0, 1765, 1763, 1764, 1756, 1757,
	1758, 1759, 1761, 1762, 0, 0, 1226, 0, 2471, 0,
	0, 0, 2472, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4305, 1465, 0, 0, 0, 1052, 0, 0, 0, 0,
	1974, 0, 0, 0, 0, 0, 0, 0, 0, 1052,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1226, 0,
	0, 1776, 3323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1226, 0, 0, 0, 0, 1752, 1753, 0,
	1785, 1786, 1787, 1795, 1796, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	1783, 0, 0, 0, 0, 0, 0, 1755, 109, 0,
	109, 0, 109, 0, 0, 1226, 1801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 0, 1226, 4390, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 0, 1226, 0,
	1226, 1771, 0, 1047, 109, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1226, 0, 0, 0, 109,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 109, 0, 0, 0, 0, 0, 0,
	1772, 1768, 0, 1765, 1763, 1764, 1756, 1757, 1758, 1759,
	1761, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4441, 0, 1777, 1778, 1779, 1780,
	0, 0, 0, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4477, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 0, 0, 1802, 0, 0, 0,
	0, 0, 0, 1782, 1784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1798, 0, 1799, 0, 0, 0, 0, 0, 0, 1769,
	1770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 2382, 0, 0, 0, 4537, 1027, 3542, 3543, 0,
	0, 3546, 1775, 0, 0, 3549, 0, 0, 0, 0,
	0, 0, 0, 0, 3553, 0, 1817, 0, 0, 0,
	0, 0, 0, 3560, 0, 0, 3204, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 1828, 0, 0,
	0, 3572, 0, 0, 0, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3595, 3596, 1789, 3597, 3598, 3599, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3605, 0, 0, 0, 3607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3635, 3636, 0,
	0, 0, 0, 0, 0, 0, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 3647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	3656, 0, 0, 0, 0, 0, 0, 1914, 0, 1917,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 1226,
	1226, 0, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1226, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1226, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1226, 0, 0, 1226, 0,
	0, 78, 0, 0, 0, 0, 3702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 1226, 0, 0, 0, 0, 3713, 0, 0, 0,
	0, 1752, 1753, 0, 0, 0, 1226, 1226, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 1791, 0, 0,
	3741, 1755, 1766, 1767, 1773, 1794, 1772, 1768, 0, 1765,
	1763, 1764, 1756, 1757, 1758, 1759, 1761, 1762, 1112, 0,
	0, 871, 0, 1226, 0, 0, 3916, 0, 1974, 0,
	0, 0, 0, 49, 0, 107, 1754, 0, 0, 0,
	93, 104, 0, 0, 0, 0, 1774, 0, 0, 0,
	0, 0, 0, 0, 0, 1771, 0, 0, 0, 0,
	0, 0, 1226, 0, 263, 263, 263, 0, 0, 1752,
	1753, 0, 1785, 1786, 1787, 1795, 1796, 1797, 0, 0,
	0, 0, 0, 0, 1226, 0, 1226, 0, 0, 0,
	0, 1788, 1783, 263, 0, 0, 0, 0, 94, 1755,
	0, 0, 0, 1226, 0, 0, 0, 0, 1801, 3057,
	0, 0, 0, 0, 1226, 0, 0, 0, 1226, 263,
	1894, 0, 0, 0, 0, 0, 0, 0, 0, 3842,
	1777, 1778, 1779, 1780, 1754, 0, 0, 0, 0, 0,
	1760, 1226, 0, 0, 1774, 0, 0, 0, 1226, 0,
	1226, 0, 0, 1771, 1226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1226, 0, 0, 1782, 1784, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 1226, 0, 0, 0, 3888, 3889, 0, 0, 74,
	0, 3893, 3894, 1769, 1770, 0, 3897, 3898, 0, 0,
	0, 0, 0, 3902, 0, 78, 1226, 1226, 1777, 1778,
	1779, 1780, 0, 0, 3906, 0, 0, 0, 1760, 0,
	0, 0, 0, 97, 0, 0, 1775, 0, 0, 1226,
	3911, 1047, 0, 1047, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1792, 0, 0, 1802, 0,
	0, 0, 0, 0, 0, 1782, 1784, 0, 0, 1226,
	0, 0, 1226, 0, 0, 183, 100, 0, 103, 0,
	0, 0, 1798, 0, 1799, 871, 0, 0, 0, 0,
	0, 1769, 1770, 0, 0, 0, 0, 0, 0, 107,
	0, 0, 0, 230, 93, 104, 0, 0, 0, 1790,
	0, 872, 0, 0, 0, 0, 148, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 1974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1226, 0, 0, 0,
	1781, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 1226, 0, 0, 0, 1800, 0, 0,
	0, 1776, 0, 1974, 1974, 0, 0, 151, 0, 0,
	0, 0, 0, 0, 0, 1789, 0, 0, 0, 0,
	0, 1027, 187, 0, 1027, 1027, 0, 0, 0, 0,
	231, 0, 1974, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1584, 0, 0, 0, 1781, 2449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1226, 1226, 0, 0, 0, 1047, 0, 0, 0, 1776,
	0, 0, 0, 0, 1822, 0, 0, 0, 1822, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1226, 0, 0, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 0,
	1772, 1768, 0, 1765, 1763, 1764, 1756, 1757, 1758, 1759,
	1761, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4133, 4134, 4135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1209, 0, 0, 0, 2382, 0, 0, 4144, 4145, 183,
	100, 0, 103, 0, 0, 0, 1917, 0, 0, 0,
	0, 0, 0, 0, 0, 4153, 4156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 872, 0, 0, 0, 1791,
	148, 109, 0, 0, 1766, 1767, 1773, 1794, 1772, 1768,
	0, 1765, 1763, 1764, 1756, 1757, 1758, 1759, 1761, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 3558, 0,
	4197, 0, 0, 0, 0, 232, 0, 0, 4204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4211, 0, 0, 1052, 0, 0, 1226, 0, 0,
	1226, 151, 0, 0, 0, 0, 4219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 1974, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 1226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1226, 0, 263, 0, 263, 263, 186, 0,
	263, 0, 1309, 1226, 1226, 1226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1226, 0, 0, 0,
	0, 0, 1226, 0, 0, 263, 1309, 263, 263, 0,
	1309, 263, 263, 0, 0, 0, 0, 0, 1309, 0,
	0, 0, 0, 0, 0, 0, 1226, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1309,
	0, 0, 0, 0, 4334, 0, 0, 4337, 0, 109,
	0, 0, 109, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1309, 0, 263, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1309, 0, 0, 0, 0,
	0, 0, 1309, 263, 263, 0, 0, 0, 109, 0,
	0, 109, 0, 0, 0, 0, 1309, 109, 0, 1052,
	1052, 0, 0, 0, 0, 0, 0, 0, 0, 4385,
	0, 0, 0, 0, 1226, 0, 0, 0, 0, 0,
	0, 0, 1226, 0, 0, 0, 1226, 0, 1226, 0,
	0, 0, 0, 0, 0, 1226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1226, 1226, 0, 0,
	1309, 0, 0, 0, 0, 1226, 0, 0, 0, 0,
	0, 0, 0, 2382, 0, 0, 0, 109, 0, 0,
	0, 0, 4156, 0, 724, 0, 0, 0, 0, 1226,
	263, 1226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 707, 0, 0, 0, 0, 708,
	263, 0, 0, 1226, 0, 0, 0, 0, 0, 1052,
	0, 0, 0, 1226, 0, 1226, 0, 0, 1226, 0,
	0, 0, 0, 0, 0, 0, 0, 1226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 710,
	0, 0, 0, 0, 0, 0, 0, 0, 1226, 1226,
	0, 0, 0, 0, 4500, 4500, 4500, 0, 0, 0,
	711, 0, 0, 0, 0, 0, 0, 0, 1226, 0,
	0, 0, 0, 0, 0, 0, 0, 2449, 0, 0,
	1226, 0, 730, 0, 4521, 1226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1822, 0,
	0, 0, 712, 0, 0, 0, 0, 0, 0, 0,
	1226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1226, 1226, 1226, 0, 0, 713, 0, 0, 0, 0,
	0, 0, 0, 1226, 0, 0, 0, 0, 4500, 0,
	0, 0, 0, 0, 0, 0, 0, 714, 0, 0,
	715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1226, 0, 0, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1974, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1226, 0, 1226, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1309, 1226, 0, 0,
	263, 263, 263, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 1309, 0,
	726, 0, 0, 0, 0, 0, 1974, 0, 0, 4500,
	4646, 1209, 0, 0, 0, 0, 0, 0, 4650, 0,
	0, 0, 263, 0, 0, 0, 0, 1209, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 1226, 0, 0,
	0, 0, 0, 0, 1226, 0, 0, 0, 0, 1226,
	1226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1309, 0, 0, 0, 736, 0,
	717, 0, 0, 0, 0, 1309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1226, 0, 0, 1226, 737, 1309,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1226, 1226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 738, 0, 0,
	0, 0, 0, 0, 719, 0, 0, 0, 0, 734,
	735, 732, 0, 1974, 0, 0, 0, 727, 0, 0,
	720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 109, 0, 109, 109, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1226, 0,
	0, 0, 721, 0, 728, 0, 0, 0, 0, 0,
	0, 1226, 0, 722, 0, 0, 0, 0, 109, 109,
	0, 109, 109, 109, 0, 0, 0, 723, 263, 1309,
	1309, 263, 731, 0, 0, 0, 0, 0, 0, 1309,
	0, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 725, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1226, 0,
	0, 1226, 0, 0, 0, 1226, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 1226, 1226, 0, 263, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	263, 0, 1226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 263, 724,
	0, 0, 0, 1209, 263, 0, 1047, 0, 0, 0,
	0, 0, 0, 1309, 0, 1309, 0, 1309, 1099, 707,
	109, 109, 0, 0, 708, 0, 0, 0, 0, 0,
	0, 0, 0, 1309, 1309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1309, 263, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 1309, 0, 1309, 1309,
	1309, 0, 0, 709, 261, 261, 261, 0, 0, 263,
	0, 0, 0, 0, 710, 0, 0, 0, 0, 0,
	0, 263, 263, 0, 263, 0, 263, 0, 263, 0,
	263, 0, 0, 803, 0, 711, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 821, 0, 0, 712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 823, 0, 0, 0, 0, 824,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1752, 1753, 0, 1785, 1786, 1787, 1795,
	1796, 1797, 714, 1309, 0, 715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1788, 1783, 0, 825, 0,
	842, 739, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 826, 729, 0, 0, 0,
	827, 1226, 0, 1226, 0, 0, 0, 0, 1754, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 1222, 851, 0, 0, 0, 0, 1771, 828, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	1309, 0, 849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1209, 1209, 0, 726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 822, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 829, 0, 0,
	830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 853, 1777, 1778, 1779, 1780, 739, 0, 0, 1309,
	0, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 717, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 1309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 1792,
	0, 0, 1802, 737, 0, 718, 0, 0, 0, 1782,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1798, 0, 1799, 0,
	852, 0, 0, 0, 0, 1769, 1770, 0, 0, 0,
	847, 0, 738, 0, 0, 0, 263, 0, 0, 719,
	0, 0, 0, 1790, 734, 735, 732, 0, 0, 0,
	0, 0, 727, 0, 0, 720, 263, 0, 1775, 263,
	0, 0, 0, 263, 0, 263, 0, 0, 0, 0,
	0, 0, 263, 263, 0, 0, 0, 0, 1309, 1309,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 831,
	0, 0, 0, 0, 0, 0, 0, 721, 0, 728,
	833, 1800, 0, 0, 0, 0, 0, 0, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1789,
	1309, 0, 723, 0, 0, 0, 0, 731, 109, 0,
	834, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 725, 0, 1209, 0, 843, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 820,
	0, 844, 1781, 0, 0, 0, 0, 0, 0, 0,
	835, 263, 1309, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 1776, 0, 0, 1309, 0, 0, 0,
	0, 0, 0, 0, 0, 841, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 0, 836, 0, 0, 0, 837, 856, 0, 855,
	0, 0, 0, 838, 0, 263, 0, 263, 0, 1309,
	0, 0, 0, 0, 263, 0, 0, 839, 0, 0,
	0, 0, 848, 0, 0, 0, 0, 0, 857, 0,
	854, 0, 0, 0, 0, 0, 740, 0, 0, 0,
	1309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1309, 0, 1309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 1309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 263, 0, 0, 0,
	109, 0, 0, 1791, 263, 0, 1209, 0, 1766, 1767,
	1773, 1794, 1772, 1768, 1209, 1765, 1763, 1764, 1756, 1757,
	1758, 1759, 1761, 1762, 261, 0, 261, 261, 0, 0,
	261, 0, 3125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 263, 263, 263, 0, 0, 0, 0,
	0, 263, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 261, 261, 0,
	0, 261, 261, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 261, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1309, 0, 0,
	0, 0, 0, 0, 0, 0, 795, 0, 0, 0,
	0, 0, 1309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1104, 0,
	0, 0, 795, 0, 0, 1309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1309, 1309, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 263, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 1309, 0, 2449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1752, 1753,
	0, 1785, 1786, 1787, 1795, 1796, 1797, 0, 0, 0,
	0, 0, 0, 263, 263, 0, 1309, 263, 0, 0,
	1788, 1783, 0, 0, 263, 0, 0, 0, 1755, 1916,
	0, 1222, 0, 0, 0, 261, 0, 1801, 1309, 263,
	1309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 1916, 261, 0, 0, 0, 0, 1309, 803, 0,
	0, 0, 0, 1754, 0, 803, 0, 0, 1309, 0,
	0, 0, 1309, 1774, 0, 0, 0, 0, 0, 0,
	0, 0, 1771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 1309, 0, 0, 0, 261,
	0, 263, 1309, 0, 1309, 0, 0, 0, 1309, 0,
	0, 0, 0, 109, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 1309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 1309, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1777, 1778, 1779,
	1780, 0, 0, 0, 0, 0, 0, 1760, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1309, 1309, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1309, 1792, 0, 0, 1802, 0, 0,
	0, 0, 0, 0, 1782, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1798, 0, 1799, 0, 0, 0, 0, 0, 0,
	1769, 1770, 0, 1309, 0, 263, 1309, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 1790, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1800, 0, 0, 0,
	1309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1789, 0, 0, 1309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 261, 0,
	0, 0, 0, 0, 261, 0, 0, 1781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 1309, 0, 0,
	0, 803, 261, 0, 261, 0, 261, 0, 261, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1307, 0, 0, 1791, 0,
	0, 0, 0, 1766, 1767, 1773, 1794, 1772, 1768, 0,
	1765, 1763, 1764, 1756, 1757, 1758, 1759, 1761, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 3124, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1365,
	0, 0, 0, 1365, 0, 0, 0, 0, 0, 0,
	0, 1307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1309, 1307, 0, 1309, 263, 0, 0, 0, 0,
	0, 0, 1308, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 1307, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 263, 0, 1307, 0,
	0, 0, 1309, 0, 0, 1307, 1366, 0, 0, 0,
	1366, 0, 0, 0, 0, 0, 0, 0, 1308, 1307,
	0, 0, 0, 0, 0, 0, 0, 1309, 1309, 1309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1222, 0, 1309, 0, 0, 0, 0, 1308,
	0, 0, 0, 0, 0, 0, 0, 0, 1222, 0,
	1309, 0, 0, 0, 263, 0, 1309, 0, 0, 0,
	0, 0, 261, 1307, 0, 1308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	1309, 0, 0, 0, 0, 1308, 0, 0, 0, 0,
	0, 0, 1308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 261,
	0, 0, 0, 261, 0, 261, 0, 0, 0, 0,
	1308, 0, 261, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1309, 0, 1309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1309, 1309, 0, 0, 0, 0, 0, 0, 261, 1309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 1309, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 1309, 0, 1309,
	263, 0, 1309, 263, 0, 0, 0, 0, 0, 0,
	0, 1309, 0, 0, 0, 0, 0, 803, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1309, 1309, 0, 261, 0, 803, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 1365,
	0, 0, 1309, 0, 0, 263, 0, 0, 0, 0,
	0, 795, 0, 0, 1309, 263, 0, 0, 795, 1309,
	0, 1307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 1309, 1309, 1309, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 261, 1309, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1307, 0, 0,
	0, 0, 0, 0, 0, 0, 1366, 1309, 1307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 261, 261, 261, 0, 0, 1308, 0,
	0, 261, 1365, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1309, 0,
	1309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 1309, 0, 261, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1308, 0, 0, 0, 0,
	0, 0, 1752, 1753, 0, 1785, 1786, 1787, 1795, 1796,
	1797, 0, 0, 0, 0, 0, 0, 0, 0, 1366,
	0, 1309, 0, 0, 1788, 1783, 0, 0, 1309, 263,
	0, 0, 1755, 1309, 1309, 0, 0, 0, 0, 0,
	0, 1801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1307, 1307, 0, 0, 0, 0, 0, 0,
	0, 0, 1365, 0, 0, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 1309, 0,
	0, 1309, 0, 0, 0, 0, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1308,
	1308, 0, 0, 0, 0, 0, 1307, 0, 1307, 1366,
	1307, 1777, 1778, 1779, 1780, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 0, 1307, 1307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1307, 0, 0,
	0, 0, 0, 1222, 0, 0, 0, 0, 0, 1307,
	0, 1307, 1307, 1307, 0, 0, 0, 0, 1792, 1222,
	0, 1802, 0, 0, 0, 0, 263, 0, 1782, 1784,
	0, 0, 0, 0, 795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 0, 1799, 0, 1916,
	0, 0, 0, 0, 1769, 1770, 0, 0, 0, 0,
	0, 0, 0, 1308, 263, 1308, 0, 1308, 0, 1309,
	0, 0, 1790, 0, 0, 0, 0, 0, 0, 1309,
	1309, 0, 0, 1308, 1308, 0, 0, 1775, 0, 0,
	0, 0, 0, 0, 1308, 0, 1309, 261, 0, 0,
	0, 261, 261, 0, 0, 0, 1308, 0, 1308, 1308,
	1308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1800, 0, 261, 0, 0, 0, 1365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1789, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 261, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 1916, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1365, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 1366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	0, 261, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 803, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 261, 0, 0,
	0, 0, 1365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1222, 0, 0, 1365, 0,
	1366, 0, 1752, 1753, 0, 1785, 1786, 1787, 1795, 1796,
	1797, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1788, 1783, 0, 0, 261, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 1801, 1791, 0, 0, 0, 0, 1766, 1767, 1773,
	1794, 1772, 1768, 0, 1765, 1763, 1764, 1756, 1757, 1758,
	1759, 1761, 1762, 0, 0, 0, 0, 1754, 0, 1366,
	0, 3121, 0, 0, 0, 0, 0, 1774, 0, 0,
	0, 0, 0, 0, 0, 261, 1771, 261, 0, 0,
	0, 0, 0, 0, 0, 1366, 0, 0, 0, 0,
	0, 1307, 1307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 1752, 1753,
	0, 1785, 1786, 1787, 1795, 1796, 1797, 0, 0, 0,
	0, 0, 0, 1365, 0, 0, 0, 0, 0, 0,
	1788, 1783, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 1777, 1778, 1779, 1780, 0, 0, 1801, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1754, 0, 0, 0, 0, 1308, 1308,
	0, 0, 0, 1774, 0, 0, 0, 0, 1792, 0,
	0, 1802, 1771, 0, 0, 1365, 0, 0, 1782, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1307,
	0, 0, 0, 0, 0, 1798, 0, 1799, 0, 0,
	1366, 0, 0, 0, 1769, 1770, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 0, 0, 0,
	795, 0, 1307, 0, 1222, 1222, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1777, 1778, 1779,
	1780, 0, 0, 0, 0, 0, 0, 1760, 0, 0,
	0, 0, 0, 1307, 0, 0, 0, 0, 0, 0,
	0, 0, 1366, 0, 0, 1307, 0, 1307, 0, 0,
	1800, 0, 0, 0, 0, 0, 1308, 0, 0, 0,
	0, 0, 1307, 0, 1792, 0, 0, 1802, 1789, 0,
	0, 0, 0, 0, 1782, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1798, 0, 1799, 0, 0, 0, 0, 0, 1308,
	1769, 1770, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1308, 1781, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 1308, 0, 1308, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 1308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1800, 0, 0, 1793,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1789, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1781, 0, 0,
	0, 0, 0, 0, 0, 0, 1222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 1791, 0, 0, 0, 0, 1766, 1767, 1773,
	1794, 1772, 1768, 0, 1765, 1763, 1764, 1756, 1757, 1758,
	1759, 1761, 1762, 0, 0, 1793, 0, 0, 0, 0,
	0, 3120, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1365, 1791, 0,
	0, 0, 0, 1766, 1767, 1773, 1794, 1772, 1768, 0,
	1765, 1763, 1764, 1756, 1757, 1758, 1759, 1761, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 3119, 0, 0,
	1365, 0, 0, 0, 0, 0, 0, 0, 1222, 0,
	0, 0, 0, 0, 0, 1365, 1222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1916,
	0, 0, 0, 0, 0, 0, 0, 0, 1365, 1752,
	1753, 0, 1785, 1786, 1787, 1795, 1796, 1797, 0, 0,
	0, 0, 0, 1307, 1307, 0, 0, 0, 0, 0,
	0, 1788, 1783, 0, 1366, 0, 0, 0, 0, 1755,
	0, 0, 0, 1916, 0, 1916, 0, 0, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 1366, 0, 0,
	1307, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	261, 0, 1366, 261, 1774, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 1366, 0, 0, 0, 1307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1308, 1308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1307, 0, 1307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	1365, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 1307, 0, 0, 0, 1307, 0, 1308, 1777, 1778,
	1779, 1780, 0, 0, 0, 0, 0, 0, 1760, 0,
	0, 0, 0, 0, 1916, 0, 0, 0, 1307, 0,
	0, 0, 0, 0, 0, 1307, 0, 1307, 0, 0,
	0, 1365, 0, 0, 0, 0, 1308, 0, 795, 0,
	0, 0, 0, 0, 0, 1792, 0, 0, 1802, 1307,
	0, 0, 0, 0, 0, 1782, 1784, 0, 1308, 0,
	1308, 1307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 0, 1799, 0, 0, 1366, 0, 0,
	0, 1769, 1770, 0, 0, 0, 0, 0, 1308, 0,
	0, 0, 1308, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 1307, 1307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 1308, 0, 0, 0, 0,
	0, 0, 1308, 0, 1308, 0, 1307, 0, 1366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 1308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 1308, 0,
	0, 0, 0, 0, 0, 0, 1365, 0, 0, 1365,
	0, 0, 0, 0, 0, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	1308, 1308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1752, 1753, 0, 1785, 1786, 1787,
	1795, 1796, 1797, 1308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 1783, 1781, 0,
	0, 0, 0, 1365, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 1776,
	1365, 0, 0, 1366, 0, 0, 1366, 0, 0, 1916,
	1916, 0, 0, 0, 0, 0, 0, 0, 0, 1754,
	0, 0, 0, 0, 0, 0, 1793, 261, 261, 1774,
	0, 0, 0, 0, 0, 0, 0, 0, 1771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1916, 0, 0, 0, 0, 1366, 0, 0,
	0, 0, 0, 0, 0, 1916, 0, 0, 0, 0,
	0, 0, 0, 1777, 1778, 1779, 1780, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 261, 0, 0, 1791,
	1365, 0, 0, 0, 1766, 1767, 1773, 1794, 1772, 1768,
	0, 1765, 1763, 1764, 1756, 1757, 1758, 1759, 1761, 1762,
	0, 0, 0, 0, 0, 0, 0, 0, 2472, 0,
	1792, 0, 1916, 1802, 261, 1916, 0, 0, 0, 0,
	1782, 1784, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1798, 0, 1799,
	0, 0, 0, 0, 0, 0, 1769, 1770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1790, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1366, 0, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1789, 261, 0, 0, 1307, 0, 0, 1307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1307, 0, 0, 0, 0,
	0, 0, 0, 1781, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	1307, 1307, 1307, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1307, 0, 0,
	0, 1308, 0, 0, 1308, 0, 0, 0, 0, 0,
	0, 1793, 0, 1307, 0, 0, 0, 0, 0, 1365,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1365, 0, 0, 0, 0, 0, 0,
	0, 0, 1308, 0, 0, 1916, 0, 1916, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1308, 1308, 1308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1308, 0, 0, 0, 1791, 0, 1366, 0, 0, 1766,
	1767, 1773, 1794, 1772, 1768, 0, 1765, 1763, 1764, 1756,
	1757, 1758, 1759, 1761, 1762, 0, 0, 0, 0, 4432,
	1366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1365, 0, 1365, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1307, 1307, 0, 0, 0, 0, 0,
	0, 0, 1365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1752, 1753,
	1307, 1785, 1786, 1787, 1795, 1796, 1797, 0, 0, 0,
	1365, 0, 1307, 0, 0, 1307, 0, 0, 0, 0,
	1366, 1783, 1366, 0, 1365, 0, 0, 0, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 0, 0,
	1308, 1308, 0, 0, 0, 0, 0, 0, 0, 1366,
	0, 0, 0, 0, 0, 1307, 1307, 0, 0, 0,
	0, 0, 0, 1754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 0, 1307, 0, 0, 0, 0,
	0, 0, 1771, 0, 0, 0, 0, 1365, 0, 0,
	0, 0, 1307, 0, 0, 0, 0, 1308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1366, 0, 1308,
	0, 0, 1308, 0, 0, 0, 0, 0, 0, 0,
	0, 1366, 0, 0, 0, 0, 0, 1307, 1307, 1307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1365, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1308, 1308, 0, 0, 0, 1777, 1778, 1779,
	1780, 0, 0, 0, 0, 0, 0, 1760, 0, 0,
	1365, 0, 1308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1366, 0, 0, 0, 0, 1308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1792, 0, 0, 1802, 0, 0,
	0, 1365, 0, 1307, 1782, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 1308, 1308, 1308, 0, 0, 0,
	0, 1798, 0, 1799, 1365, 0, 0, 1366, 0, 0,
	1769, 1770, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 0,
	0, 0, 0, 0, 0, 0, 0, 1366, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1365, 0, 0, 0, 0, 0,
	0, 1307, 0, 0, 0, 0, 1307, 1307, 1366, 0,
	1308, 0, 0, 0, 0, 0, 1800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1365, 0, 0, 1307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1366, 0, 0, 0, 0, 0, 1781, 1308, 0,
	0, 0, 0, 1308, 1308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 1366, 0,
	0, 1308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1307, 1307, 0, 0, 0, 0, 1791, 0,
	0, 0, 0, 1766, 1767, 1773, 1794, 1772, 1768, 1307,
	1765, 1763, 1764, 1756, 1757, 1758, 1759, 1761, 1762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1363, 0, 0, 1308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1308,
	1308, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	1368, 278, 279, 1369, 1370, 1371, 1308, 1372, 620, 1373,
	1374, 1375, 1376, 280, 281, 1166, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 1377,
	625, 290, 291, 292, 293, 294, 295, 1378, 1379, 0,
	296, 626, 627, 628, 1380, 297, 298, 629, 1381, 1310,
	1382, 299, 300, 301, 302, 303, 304, 305, 0, 1383,
	307, 308, 309, 306, 310, 1384, 311, 0, 312, 313,
	314, 315, 316, 317, 1385, 318, 319, 320, 1167, 321,
	322, 323, 1386, 1387, 1389, 1388, 1390, 1391, 1392, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 1393, 333,
	330, 331, 1394, 334, 332, 335, 1395, 336, 337, 338,
	1396, 1397, 339, 340, 341, 1398, 342, 343, 1399, 344,
	345, 346, 1400, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 1401,
	268, 1402, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 1403, 365, 366, 1404, 1405, 1168,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 1406, 378, 638, 1407, 639, 379, 1408,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 1170,
	385, 386, 1409, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 1410, 1169, 395, 643,
	644, 1411, 645, 1412, 397, 398, 1171, 646, 1172, 399,
	400, 401, 1173, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 1413, 409, 411, 410, 1414, 412, 647,
	1174, 413, 414, 1175, 1415, 415, 0, 0, 0, 416,
	417, 420, 1416, 1417, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1176, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1177, 459, 449, 1418,
	270, 1178, 460, 461, 1419, 648, 462, 649, 464, 465,
	1420, 0, 466, 0, 1421, 1422, 468, 469, 470, 1423,
	1424, 471, 472, 650, 1179, 473, 1180, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 1425,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 1426, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 1427, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 1428, 522, 523, 524, 1181, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 1429, 546, 547, 545,
	548, 549, 550, 1430, 551, 552, 534, 535, 553, 554,
	1182, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 1431, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 1432, 578,
	579, 0, 575, 566, 1433, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 1434, 588, 661, 662, 663, 664,
	1435, 597, 1436, 589, 590, 591, 665, 592, 666, 1437,
	593, 594, 595, 596, 0, 598, 599, 1438, 1439, 600,
	601, 602, 604, 605, 603, 606, 1440, 607, 1441, 0,
	608, 609, 610, 667, 668, 669, 1442, 612, 611, 613,
	670, 1443, 614, 1444, 1445, 1446, 1447, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1363, 0, 0,
	0, 0, 0, 0, 0, 2637, 0, 0, 0, 0,
	0, 0, 0, 2638, 271, 273, 272, 274, 275, 276,
	277, 1368, 278, 279, 1369, 1370, 1371, 0, 1372, 620,
	1373, 1374, 1375, 1376, 280, 281, 1166, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	1377, 625, 290, 291, 292, 293, 294, 295, 1378, 1379,
	0, 296, 626, 627, 628, 1380, 297, 298, 629, 1381,
	1310, 1382, 299, 300, 301, 302, 303, 304, 305, 0,
	1383, 307, 308, 309, 306, 310, 1384, 311, 0, 312,
	313, 314, 315, 316, 317, 1385, 318, 319, 320, 1167,
	321, 322, 323, 1386, 1387, 1389, 1388, 1390, 1391, 1392,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 1393,
	333, 330, 331, 1394, 334, 332, 335, 1395, 336, 337,
	338, 1396, 1397, 339, 340, 341, 1398, 342, 343, 1399,
	344, 345, 346, 1400, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	1401, 268, 1402, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 1403, 365, 366, 1404, 1405,
	1168, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 1406, 378, 638, 1407, 639, 379,
	1408, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	1170, 385, 386, 1409, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 1410, 1169, 395,
	643, 644, 1411, 645, 1412, 397, 398, 1171, 646, 1172,
	399, 400, 401, 1173, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 1413, 409, 411, 410, 1414, 412,
	647, 1174, 413, 414, 1175, 1415, 415, 0, 0, 0,
	416, 417, 420, 1416, 1417, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1176, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1177, 459, 449,
	1418, 270, 1178, 460, 461, 1419, 648, 462, 649, 464,
	465, 1420, 0, 466, 0, 1421, 1422, 468, 469, 470,
	1423, 1424, 471, 472, 650, 1179, 473, 1180, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	1425, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 1426, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 1427, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 1428, 522, 523, 524, 1181, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 1429, 546, 547,
	545, 548, 549, 550, 1430, 551, 552, 534, 535, 553,
	554, 1182, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 1431, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 1432,
	578, 579, 0, 575, 566, 1433, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 1434, 588, 661, 662, 663,
	664, 1435, 597, 1436, 589, 590, 591, 665, 592, 666,
	1437, 593, 594, 595, 596, 0, 598, 599, 1438, 1439,
	600, 601, 602, 604, 605, 603, 606, 1440, 607, 1441,
	0, 608, 609, 610, 667, 668, 669, 1442, 612, 611,
	613, 670, 1443, 614, 1444, 1445, 1446, 1447, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1363, 0, 0, 0,
	0, 3566, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3568, 271, 273, 272, 274, 275, 276, 277,
	1368, 278, 279, 1369, 1370, 1371, 0, 1372, 620, 1373,
	1374, 1375, 1376, 280, 281, 1166, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 1377,
	625, 290, 291, 292, 293, 294, 295, 1378, 1379, 0,
	296, 626, 627, 628, 1380, 297, 298, 629, 1381, 1310,
	1382, 299, 300, 301, 302, 303, 304, 305, 0, 1383,
	307, 308, 309, 306, 310, 1384, 311, 0, 312, 313,
	314, 315, 316, 317, 1385, 318, 319, 320, 1167, 321,
	322, 323, 1386, 1387, 1389, 1388, 1390, 1391, 1392, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 1393, 333,
	330, 331, 1394, 334, 332, 335, 1395, 336, 337, 338,
	1396, 1397, 339, 340, 341, 1398, 342, 343, 1399, 344,
	345, 346, 1400, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 1401,
	268, 1402, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 1403, 365, 366, 1404, 1405, 1168,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 1406, 378, 638, 1407, 639, 379, 1408,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 1170,
	385, 386, 1409, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 1410, 1169, 395, 643,
	644, 1411, 645, 1412, 397, 398, 1171, 646, 1172, 399,
	400, 401, 1173, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 1413, 409, 411, 410, 1414, 412, 647,
	1174, 413, 414, 1175, 1415, 415, 0, 0, 0, 416,
	417, 420, 1416, 1417, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1176, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1177, 459, 449, 1418,
	270, 1178, 460, 461, 1419, 648, 462, 649, 464, 465,
	1420, 0, 466, 0, 1421, 1422, 468, 469, 470, 1423,
	1424, 471, 472, 650, 1179, 473, 1180, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 1425,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 1426, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 1427, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 1428, 522, 523, 524, 1181, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 1429, 546, 547, 545,
	548, 549, 550, 1430, 551, 552, 534, 535, 553, 554,
	1182, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 1431, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 1432, 578,
	579, 0, 575, 566, 1433, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 1434, 588, 661, 662, 663, 664,
	1435, 597, 1436, 589, 590, 591, 665, 592, 666, 1437,
	593, 594, 595, 596, 0, 598, 599, 1438, 1439, 600,
	601, 602, 604, 605, 603, 606, 1440, 607, 1441, 0,
	608, 609, 610, 667, 668, 669, 1442, 612, 611, 613,
	670, 1443, 614, 1444, 1445, 1446, 1447, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 1363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3944, 271, 273, 272, 274,
	275, 276, 277, 1368, 278, 279, 1369, 1370, 1371, 0,
	1372, 620, 1373, 1374, 1375, 1376, 280, 281, 1166, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 1377, 625, 290, 291, 292, 293, 294, 295,
	1378, 1379, 0, 296, 626, 627, 628, 1380, 297, 298,
	629, 1381, 1310, 1382, 299, 300, 301, 302, 303, 304,
	305, 0, 1383, 307, 308, 309, 306, 310, 1384, 311,
	0, 312, 313, 314, 315, 316, 317, 1385, 318, 319,
	320, 1167, 321, 322, 323, 1386, 1387, 1389, 1388, 1390,
	1391, 1392, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 1393, 333, 330, 331, 1394, 334, 332, 335, 1395,
	336, 337, 338, 1396, 1397, 339, 340, 341, 1398, 342,
	343, 1399, 344, 345, 346, 1400, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 1401, 268, 1402, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 1403, 365, 366,
	1404, 1405, 1168, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 1406, 378, 638, 1407,
	639, 379, 1408, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 1170, 385, 386, 1409, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 1410,
	1169, 395, 643, 644, 1411, 645, 1412, 397, 398, 1171,
	646, 1172, 399, 400, 401, 1173, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 1413, 409, 411, 410,
	1414, 412, 647, 1174, 413, 414, 1175, 1415, 415, 0,
	0, 0, 416, 417, 420, 1416, 1417, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1176, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1177,
	459, 449, 1418, 270, 1178, 460, 461, 1419, 648, 462,
	649, 464, 465, 1420, 0, 466, 0, 1421, 1422, 468,
	469, 470, 1423, 1424, 471, 472, 650, 1179, 473, 1180,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 1425, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 1426, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 1427, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 1428, 522, 523, 524, 1181,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 1429,
	546, 547, 545, 548, 549, 550, 1430, 551, 552, 534,
	535, 553, 554, 1182, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 1431, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 1432, 578, 579, 0, 575, 566, 1433, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 1434, 588, 661,
	662, 663, 664, 1435, 597, 1436, 589, 590, 591, 665,
	592, 666, 1437, 593, 594, 595, 596, 0, 598, 599,
	1438, 1439, 600, 601, 602, 604, 605, 603, 606, 1440,
	607, 1441, 0, 608, 609, 610, 667, 668, 669, 1442,
	612, 611, 613, 670, 1443, 614, 1444, 1445, 1446, 1447,
	615, 616, 671, 617, 618, 619, 0, 1363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4139, 271, 273, 272, 274, 275, 276,
	277, 1368, 278, 279, 1369, 1370, 1371, 0, 1372, 620,
	1373, 1374, 1375, 1376, 280, 281, 1166, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	1377, 625, 290, 291, 292, 293, 294, 295, 1378, 1379,
	0, 296, 626, 627, 628, 1380, 297, 298, 629, 1381,
	1310, 1382, 299, 300, 301, 302, 303, 304, 305, 0,
	1383, 307, 308, 309, 306, 310, 1384, 311, 0, 312,
	313, 314, 315, 316, 317, 1385, 318, 319, 320, 1167,
	321, 322, 323, 1386, 1387, 1389, 1388, 1390, 1391, 1392,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 1393,
	333, 330, 331, 1394, 334, 332, 335, 1395, 336, 337,
	338, 1396, 1397, 339, 340, 341, 1398, 342, 343, 1399,
	344, 345, 346, 1400, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	1401, 268, 1402, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 1403, 365, 366, 1404, 1405,
	1168, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 1406, 378, 638, 1407, 639, 379,
	1408, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	1170, 385, 386, 1409, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 1410, 1169, 395,
	643, 644, 1411, 645, 1412, 397, 398, 1171, 646, 1172,
	399, 400, 401, 1173, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 1413, 409, 411, 410, 1414, 412,
	647, 1174, 413, 414, 1175, 1415, 415, 0, 0, 0,
	416, 417, 420, 1416, 1417, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1176, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1177, 459, 449,
	1418, 270, 1178, 460, 461, 1419, 648, 462, 649, 464,
	465, 1420, 0, 466, 0, 1421, 1422, 468, 469, 470,
	1423, 1424, 471, 472, 650, 1179, 473, 1180, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	1425, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 1426, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 1427, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 1428, 522, 523, 524, 1181, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 1429, 546, 547,
	545, 548, 549, 550, 1430, 551, 552, 534, 535, 553,
	554, 1182, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 1431, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 1432,
	578, 579, 0, 575, 566, 1433, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 1434, 588, 661, 662, 663,
	664, 1435, 597, 1436, 589, 590, 591, 665, 592, 666,
	1437, 593, 594, 595, 596, 0, 598, 599, 1438, 1439,
	600, 601, 602, 604, 605, 603, 606, 1440, 607, 1441,
	0, 608, 609, 610, 667, 668, 669, 1442, 612, 611,
	613, 670, 1443, 614, 1444, 1445, 1446, 1447, 615, 616,
	671, 617, 618, 619, 0, 1363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4016, 271, 273, 272, 274, 275, 276, 277, 1368,
	278, 279, 1369, 1370, 1371, 0, 1372, 620, 1373, 1374,
	1375, 1376, 280, 281, 1166, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 1377, 625,
	290, 291, 292, 293, 294, 295, 1378, 1379, 0, 296,
	626, 627, 628, 1380, 297, 298, 629, 1381, 1310, 1382,
	299, 300, 301, 302, 303, 304, 305, 0, 1383, 307,
	308, 309, 306, 310, 1384, 311, 0, 312, 313, 314,
	315, 316, 317, 1385, 318, 319, 320, 1167, 321, 322,
	323, 1386, 1387, 1389, 1388, 1390, 1391, 1392, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 1393, 333, 330,
	331, 1394, 334, 332, 335, 1395, 336, 337, 338, 1396,
	1397, 339, 340, 341, 1398, 342, 343, 1399, 344, 345,
	346, 1400, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 1401, 268,
	1402, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 1403, 365, 366, 1404, 1405, 1168, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 1406, 378, 638, 1407, 639, 379, 1408, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 1170, 385,
	386, 1409, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 1410, 1169, 395, 643, 644,
	1411, 645, 1412, 397, 398, 1171, 646, 1172, 399, 400,
	401, 1173, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 1413, 409, 411, 410, 1414, 412, 647, 1174,
	413, 414, 1175, 1415, 415, 0, 0, 0, 416, 417,
	420, 1416, 1417, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1176, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1177, 459, 449, 1418, 270,
	1178, 460, 461, 1419, 648, 462, 649, 464, 465, 1420,
	0, 466, 0, 1421, 1422, 468, 469, 470, 1423, 1424,
	471, 472, 650, 1179, 473, 1180, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 1425, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 1426, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	1427, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 1428, 522, 523, 524, 1181, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 1429, 546, 547, 545, 548,
	549, 550, 1430, 551, 552, 534, 535, 553, 554, 1182,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	1431, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 1432, 578, 579,
	0, 575, 566, 1433, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 1434, 588, 661, 662, 663, 664, 1435,
	597, 1436, 589, 590, 591, 665, 592, 666, 1437, 593,
	594, 595, 596, 0, 598, 599, 1438, 1439, 600, 601,
	602, 604, 605, 603, 606, 1440, 607, 1441, 0, 608,
	609, 610, 667, 668, 669, 1442, 612, 611, 613, 670,
	1443, 614, 1444, 1445, 1446, 1447, 615, 616, 671, 617,
	618, 619, 0, 1363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3874,
	271, 273, 272, 274, 275, 276, 277, 1368, 278, 279,
	1369, 1370, 1371, 0, 1372, 620, 1373, 1374, 1375, 1376,
	280, 281, 1166, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 1377, 625, 290, 291,
	292, 293, 294, 295, 1378, 1379, 0, 296, 626, 627,
	628, 1380, 297, 298, 629, 1381, 1310, 1382, 299, 300,
	301, 302, 303, 304, 305, 0, 1383, 307, 308, 309,
	306, 310, 1384, 311, 0, 312, 313, 314, 315, 316,
	317, 1385, 318, 319, 320, 1167, 321, 322, 323, 1386,
	1387, 1389, 1388, 1390, 1391, 1392, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 1393, 333, 330, 331, 1394,
	334, 332, 335, 1395, 336, 337, 338, 1396, 1397, 339,
	340, 341, 1398, 342, 343, 1399, 344, 345, 346, 1400,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 1401, 268, 1402, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 1403, 365, 366, 1404, 1405, 1168, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	1406, 378, 638, 1407, 639, 379, 1408, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 1170, 385, 386, 1409,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 1410, 1169, 395, 643, 644, 1411, 645,
	1412, 397, 398, 1171, 646, 1172, 399, 400, 401, 1173,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	1413, 409, 411, 410, 1414, 412, 647, 1174, 413, 414,
	1175, 1415, 415, 0, 0, 0, 416, 417, 420, 1416,
	1417, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1176, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1177, 459, 449, 1418, 270, 1178, 460,
	461, 1419, 648, 462, 649, 464, 465, 1420, 0, 466,
	0, 1421, 1422, 468, 469, 470, 1423, 1424, 471, 472,
	650, 1179, 473, 1180, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 1425, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 1426, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 1427, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 1428,
	522, 523, 524, 1181, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 1429, 546, 547, 545, 548, 549, 550,
	1430, 551, 552, 534, 535, 553, 554, 1182, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 1431, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 1432, 578, 579, 0, 575,
	566, 1433, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 1434, 588, 661, 662, 663, 664, 1435, 597, 1436,
	589, 590, 591, 665, 592, 666, 1437, 593, 594, 595,
	596, 0, 598, 599, 1438, 1439, 600, 601, 602, 604,
	605, 603, 606, 1440, 607, 1441, 0, 608, 609, 610,
	667, 668, 669, 1442, 612, 611, 613, 670, 1443, 614,
	1444, 1445, 1446, 1447, 615, 616, 671, 617, 618, 619,
	0, 1363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3584, 271, 273,
	272, 274, 275, 276, 277, 1368, 278, 279, 1369, 1370,
	1371, 0, 1372, 620, 1373, 1374, 1375, 1376, 280, 281,
	1166, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 1377, 625, 290, 291, 292, 293,
	294, 295, 1378, 1379, 0, 296, 626, 627, 628, 1380,
	297, 298, 629, 1381, 1310, 1382, 299, 300, 301, 302,
	303, 304, 305, 0, 1383, 307, 308, 309, 306, 310,
	1384, 311, 0, 312, 313, 314, 315, 316, 317, 1385,
	318, 319, 320, 1167, 321, 322, 323, 1386, 1387, 1389,
	1388, 1390, 1391, 1392, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 1393, 333, 330, 331, 1394, 334, 332,
	335, 1395, 336, 337, 338, 1396, 1397, 339, 340, 341,
	1398, 342, 343, 1399, 344, 345, 346, 1400, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 1401, 268, 1402, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 1403,
	365, 366, 1404, 1405, 1168, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 1406, 378,
	638, 1407, 639, 379, 1408, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1170, 385, 386, 1409, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 1410, 1169, 395, 643, 644, 1411, 645, 1412, 397,
	398, 1171, 646, 1172, 399, 400, 401, 1173, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 1413, 409,
	411, 410, 1414, 412, 647, 1174, 413, 414, 1175, 1415,
	415, 0, 0, 0, 416, 417, 420, 1416, 1417, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1176, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1177, 459, 449, 1418, 270, 1178, 460, 461, 1419,
	648, 462, 649, 464, 465, 1420, 0, 466, 0, 1421,
	1422, 468, 469, 470, 1423, 1424, 471, 472, 650, 1179,
	473, 1180, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 1425, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	1426, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 1427, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 1428, 522, 523,
	524, 1181, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 1429, 546, 547, 545, 548, 549, 550, 1430, 551,
	552, 534, 535, 553, 554, 1182, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 1431, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 1432, 578, 579, 0, 575, 566, 1433,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 1434,
	588, 661, 662, 663, 664, 1435, 597, 1436, 589, 590,
	591, 665, 592, 666, 1437, 593, 594, 595, 596, 0,
	598, 599, 1438, 1439, 600, 601, 602, 604, 605, 603,
	606, 1440, 607, 1441, 0, 608, 609, 610, 667, 668,
	669, 1442, 612, 611, 613, 670, 1443, 614, 1444, 1445,
	1446, 1447, 615, 616, 671, 617, 618, 619, 0, 1363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3414, 271, 273, 272, 274,
	275, 276, 277, 1368, 278, 279, 1369, 1370, 1371, 0,
	1372, 620, 1373, 1374, 1375, 1376, 280, 281, 1166, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 1377, 625, 290, 291, 292, 293, 294, 295,
	1378, 1379, 0, 296, 626, 627, 628, 1380, 297, 298,
	629, 1381, 1310, 1382, 299, 300, 301, 302, 303, 304,
	305, 0, 1383, 307, 308, 309, 306, 310, 1384, 311,
	0, 312, 313, 314, 315, 316, 317, 1385, 318, 319,
	320, 1167, 321, 322, 323, 1386, 1387, 1389, 1388, 1390,
	1391, 1392, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 1393, 333, 330, 331, 1394, 334, 332, 335, 1395,
	336, 337, 338, 1396, 1397, 339, 340, 341, 1398, 342,
	343, 1399, 344, 345, 346, 1400, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 1401, 268, 1402, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 1403, 365, 366,
	1404, 1405, 1168, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 1406, 378, 638, 1407,
	639, 379, 1408, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 1170, 385, 386, 1409, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 1410,
	1169, 395, 643, 644, 1411, 645, 1412, 397, 398, 1171,
	646, 1172, 399, 400, 401, 1173, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 1413, 409, 411, 410,
	1414, 412, 647, 1174, 413, 414, 1175, 1415, 415, 0,
	0, 0, 416, 417, 420, 1416, 1417, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1176, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1177,
	459, 449, 1418, 270, 1178, 460, 461, 1419, 648, 462,
	649, 464, 465, 1420, 0, 466, 0, 1421, 1422, 468,
	469, 470, 1423, 1424, 471, 472, 650, 1179, 473, 1180,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 1425, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 1426, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 1427, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 1428, 522, 523, 524, 1181,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 1429,
	546, 547, 545, 548, 549, 550, 1430, 551, 552, 534,
	535, 553, 554, 1182, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 1431, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 1432, 578, 579, 0, 575, 566, 1433, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 1434, 588, 661,
	662, 663, 664, 1435, 597, 1436, 589, 590, 591, 665,
	592, 666, 1437, 593, 594, 595, 596, 0, 598, 599,
	1438, 1439, 600, 601, 602, 604, 605, 603, 606, 1440,
	607, 1441, 0, 608, 609, 610, 667, 668, 669, 1442,
	612, 611, 613, 670, 1443, 614, 1444, 1445, 1446, 1447,
	615, 616, 671, 617, 618, 619, 0, 1363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2495, 271, 273, 272, 274, 275, 276,
	277, 1368, 278, 279, 1369, 1370, 1371, 0, 1372, 620,
	1373, 1374, 1375, 1376, 280, 281, 1166, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	1377, 625, 290, 291, 292, 293, 294, 295, 1378, 1379,
	0, 296, 626, 627, 628, 1380, 297, 298, 629, 1381,
	1310, 1382, 299, 300, 301, 302, 303, 304, 305, 0,
	1383, 307, 308, 309, 306, 310, 1384, 311, 0, 312,
	313, 314, 315, 316, 317, 1385, 318, 319, 320, 1167,
	321, 322, 323, 1386, 1387, 1389, 1388, 1390, 1391, 1392,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 1393,
	333, 330, 331, 1394, 334, 332, 335, 1395, 336, 337,
	338, 1396, 1397, 339, 340, 341, 1398, 342, 343, 1399,
	344, 345, 346, 1400, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	1401, 268, 1402, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 1403, 365, 366, 1404, 1405,
	1168, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 1406, 378, 638, 1407, 639, 379,
	1408, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	1170, 385, 386, 1409, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 1410, 1169, 395,
	643, 644, 1411, 645, 1412, 397, 398, 1171, 646, 1172,
	399, 400, 401, 1173, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 1413, 409, 411, 410, 1414, 412,
	647, 1174, 413, 414, 1175, 1415, 415, 0, 0, 0,
	416, 417, 420, 1416, 1417, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1176, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1177, 459, 449,
	1418, 270, 1178, 460, 461, 1419, 648, 462, 649, 464,
	465, 1420, 0, 466, 0, 1421, 1422, 468, 469, 470,
	1423, 1424, 471, 472, 650, 1179, 473, 1180, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	1425, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 1426, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 1427, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 1428, 522, 523, 524, 1181, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 1429, 546, 547,
	545, 548, 549, 550, 1430, 551, 552, 534, 535, 553,
	554, 1182, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 1431, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 1432,
	578, 579, 0, 575, 566, 1433, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 1434, 588, 661, 662, 663,
	664, 1435, 597, 1436, 589, 590, 591, 665, 592, 666,
	1437, 593, 594, 595, 596, 0, 598, 599, 1438, 1439,
	600, 601, 602, 604, 605, 603, 606, 1440, 607, 1441,
	0, 608, 609, 610, 667, 668, 669, 1442, 612, 611,
	613, 670, 1443, 614, 1444, 1445, 1446, 1447, 615, 616,
	671, 617, 618, 619, 1459, 0, 1363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2181, 0, 271, 273, 272, 274, 275, 276, 277,
	1368, 278, 279, 1369, 1370, 1371, 0, 1372, 620, 1373,
	1374, 1375, 1376, 280, 281, 1166, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 1377,
	625, 290, 291, 292, 293, 294, 295, 1378, 1379, 0,
	296, 626, 627, 628, 1380, 297, 298, 629, 1381, 1310,
	1382, 299, 300, 301, 302, 303, 304, 305, 0, 1383,
	307, 308, 309, 306, 310, 1384, 311, 0, 312, 313,
	314, 315, 316, 317, 1385, 318, 319, 320, 1167, 321,
	322, 323, 1386, 1387, 1389, 1388, 1390, 1391, 1392, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 1393, 333,
	330, 331, 1394, 334, 332, 335, 1395, 336, 337, 338,
	1396, 1397, 339, 340, 341, 1398, 342, 343, 1399, 344,
	345, 346, 1400, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 1401,
	268, 1402, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 1403, 365, 366, 1404, 1405, 1168,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 1406, 378, 638, 1407, 639, 379, 1408,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 1170,
	385, 386, 1409, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 1410, 1169, 395, 643,
	644, 1411, 645, 1412, 397, 398, 1171, 646, 1172, 399,
	400, 401, 1173, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 1413, 409, 411, 410, 1414, 412, 647,
	1174, 413, 414, 1175, 1415, 415, 0, 0, 0, 416,
	417, 420, 1416, 1417, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1176, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1177, 459, 449, 1418,
	270, 1178, 460, 461, 1419, 648, 462, 649, 464, 465,
	1420, 0, 466, 0, 1421, 1422, 468, 469, 470, 1423,
	1424, 471, 472, 650, 1179, 473, 1180, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 1425,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 1426, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 1427, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 1428, 522, 523, 524, 1181, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 1429, 546, 547, 545,
	548, 549, 550, 1430, 551, 552, 534, 535, 553, 554,
	1182, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 1431, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 1432, 578,
	579, 0, 575, 566, 1433, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 1434, 588, 661, 662, 663, 664,
	1435, 597, 1436, 589, 590, 591, 665, 592, 666, 1437,
	593, 594, 595, 596, 0, 598, 599, 1438, 1439, 600,
	601, 602, 604, 605, 603, 606, 1440, 607, 1441, 0,
	608, 609, 610, 667, 668, 669, 1442, 612, 611, 613,
	670, 1443, 614, 1444, 1445, 1446, 1447, 615, 616, 671,
	617, 618, 619, 1360, 0, 1363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 1368,
	278, 279, 1369, 1370, 1371, 0, 1372, 620, 1373, 1374,
	1375, 1376, 280, 281, 1166, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 1377, 625,
	290, 291, 292, 293, 294, 295, 1378, 1379, 0, 296,
	626, 627, 628, 1380, 297, 298, 629, 1381, 1310, 1382,
	299, 300, 301, 302, 303, 304, 305, 0, 1383, 307,
	308, 309, 306, 310, 1384, 311, 0, 312, 313, 314,
	315, 316, 317, 1385, 318, 319, 320, 1167, 321, 322,
	323, 1386, 1387, 1389, 1388, 1390, 1391, 1392, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 1393, 333, 330,
	331, 1394, 334, 332, 335, 1395, 336, 337, 338, 1396,
	1397, 339, 340, 341, 1398, 342, 343, 1399, 344, 345,
	346, 1400, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 1401, 268,
	1402, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 1403, 365, 366, 1404, 1405, 1168, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 1406, 378, 638, 1407, 639, 379, 1408, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 1170, 385,
	386, 1409, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 1410, 1169, 395, 643, 644,
	1411, 645, 1412, 397, 398, 1171, 646, 1172, 399, 400,
	401, 1173, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 1413, 409, 411, 410, 1414, 412, 647, 1174,
	413, 414, 1175, 1415, 415, 0, 0, 0, 416, 417,
	420, 1416, 1417, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1176, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1177, 459, 449, 1418, 270,
	1178, 460, 461, 1419, 648, 462, 649, 464, 465, 1420,
	0, 466, 0, 1421, 1422, 468, 469, 470, 1423, 1424,
	471, 472, 650, 1179, 473, 1180, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 1425, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 1426, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	1427, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 1428, 522, 523, 524, 1181, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 1429, 546, 547, 545, 548,
	549, 550, 1430, 551, 552, 534, 535, 553, 554, 1182,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	1431, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 1432, 578, 579,
	0, 575, 566, 1433, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 1434, 588, 661, 662, 663, 664, 1435,
	597, 1436, 589, 590, 591, 665, 592, 666, 1437, 593,
	594, 595, 596, 0, 598, 599, 1438, 1439, 600, 601,
	602, 604, 605, 603, 606, 1440, 607, 1441, 0, 608,
	609, 610, 667, 668, 669, 1442, 612, 611, 613, 670,
	1443, 614, 1444, 1445, 1446, 1447, 615, 616, 671, 617,
	618, 619, 1363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 1368, 278, 279, 1369,
	1370, 1371, 0, 1372, 620, 1373, 1374, 1375, 1376, 280,
	281, 1166, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 1377, 625, 290, 291, 292,
	293, 294, 295, 1378, 1379, 0, 296, 626, 627, 628,
	1380, 297, 298, 629, 1381, 1310, 1382, 299, 300, 301,
	302, 303, 304, 305, 0, 1383, 307, 308, 309, 306,
	310, 1384, 311, 0, 312, 313, 314, 315, 316, 317,
	1385, 318, 319, 320, 1167, 321, 322, 323, 1386, 1387,
	1389, 1388, 1390, 1391, 1392, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 1393, 333, 330, 331, 1394, 334,
	332, 335, 1395, 336, 337, 338, 1396, 1397, 339, 340,
	341, 1398, 342, 343, 1399, 344, 345, 346, 1400, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 1401, 268, 1402, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	1403, 365, 366, 1404, 1405, 1168, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 1406,
	378, 638, 1407, 639, 379, 1408, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 1170, 385, 386, 1409, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 1410, 1169, 395, 643, 644, 1411, 645, 1412,
	397, 398, 1171, 646, 1172, 399, 400, 401, 1173, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 1413,
	409, 411, 410, 1414, 412, 647, 1174, 413, 414, 1175,
	1415, 415, 0, 0, 0, 416, 417, 420, 1416, 1417,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1176,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1177, 459, 449, 1418, 270, 1178, 460, 461,
	1419, 648, 462, 649, 464, 465, 1420, 0, 466, 0,
	1421, 1422, 468, 469, 470, 1423, 1424, 471, 472, 650,
	1179, 473, 1180, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 1425, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 1426, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 1427, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 1428, 522,
	523, 524, 1181, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 1429, 546, 547, 545, 548, 549, 550, 1430,
	551, 552, 534, 535, 553, 554, 1182, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 1431, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 1432, 578, 579, 0, 575, 566,
	1433, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	1434, 588, 661, 662, 663, 664, 1435, 597, 1436, 589,
	590, 591, 665, 592, 666, 1437, 593, 594, 595, 596,
	0, 598, 599, 1438, 1439, 600, 601, 602, 604, 605,
	603, 606, 1440, 607, 1441, 0, 608, 609, 610, 667,
	668, 669, 1442, 612, 611, 613, 670, 1443, 614, 1444,
	1445, 1446, 1447, 615, 616, 671, 617, 618, 619, 2470,
	0, 1102, 1074, 1075, 1076, 1072, 1073, 1085, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 2467, 278, 279, 0, 0,
	0, 0, 0, 1126, 1090, 0, 0, 0, 280, 281,
	1166, 282, 283, 284, 285, 286, 287, 621, 1139, 0,
	288, 1146, 289, 1145, 0, 1156, 290, 291, 292, 293,
	294, 295, 1092, 1125, 1059, 296, 1186, 1187, 628, 0,
	297, 298, 1132, 0, 1113, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1167, 321, 322, 323, 1116, 1114, 1115,
	1122, 1118, 1117, 1121, 324, 325, 326, 327, 328, 1149,
	329, 1143, 1142, 1063, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 2468, 0, 339, 1134, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1069, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1157, 1158, 360, 1081, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1141, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1168, 367, 368, 1154, 1155, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1164, 0, 1091, 379, 0, 380, 381, 382, 383, 384,
	1127, 1128, 1131, 463, 1170, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1169, 395, 1136, 1137, 0, 1097, 0, 397,
	398, 1171, 1129, 1172, 399, 400, 401, 1173, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1165, 1174, 413, 414, 1175, 0,
	415, 0, 0, 0, 416, 417, 420, 1120, 1119, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1176, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1177, 459, 449, 1060, 270, 1178, 460, 461, 1082,
	1130, 462, 1144, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1179,
	473, 1180, 1159, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1160, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1140, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1181, 525, 526, 527, 528, 1070, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1123, 551,
	552, 534, 535, 553, 554, 1182, 555, 556, 557, 558,
	559, 560, 561, 1138, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1185, 569, 570, 571, 572,
	1161, 576, 577, 0, 578, 579, 1058, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1150, 1151, 1152, 1153, 0, 597, 0, 589, 590,
	591, 1162, 592, 1163, 1080, 593, 594, 595, 596, 0,
	598, 599, 0, 1064, 600, 601, 602, 604, 605, 603,
	606, 1124, 607, 0, 0, 608, 609, 610, 667, 1147,
	1184, 2466, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1061, 0,
	0, 0, 0, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 0, 1055, 1056, 2469, 0, 0, 0, 0,
	0, 0, 1086, 2465, 0, 1048, 1084, 1102, 1074, 1075,
	1076, 1072, 1073, 1085, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1126,
	1090, 0, 0, 0, 280, 281, 1166, 282, 283, 284,
	285, 286, 287, 621, 1139, 0, 288, 1146, 289, 1145,
	0, 1156, 290, 291, 292, 293, 294, 295, 1092, 1125,
	1059, 296, 1186, 1187, 628, 0, 297, 298, 1132, 0,
	1113, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1167,
	321, 322, 323, 1116, 1114, 1115, 1122, 1118, 1117, 1121,
	324, 325, 326, 327, 328, 1149, 329, 1143, 1142, 1063,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1134, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1069, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1157, 1158, 360,
	1081, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1141, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1168, 367, 368, 1154, 1155, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1164, 0, 1091, 379,
	0, 380, 381, 382, 383, 384, 1127, 1128, 1131, 463,
	1170, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1169, 395,
	1136, 1137, 0, 1097, 0, 397, 398, 1171, 1129, 1172,
	399, 400, 401, 1173, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1165, 1174, 413, 414, 1175, 0, 415, 0, 0, 0,
	416, 417, 420, 1120, 1119, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1176, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1177, 459, 449,
	1060, 270, 1178, 460, 461, 1082, 1130, 462, 1144, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1179, 473, 1180, 1159, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1160, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1140, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1181, 525, 526,
	527, 528, 1070, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 230, 546, 547,
	545, 548, 549, 550, 1123, 551, 552, 534, 535, 553,
	554, 1182, 555, 556, 557, 558, 559, 560, 561, 1138,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1185, 569, 570, 571, 572, 1161, 576, 577, 0,
	578, 579, 1058, 575, 566, 232, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1150, 1151, 1152,
	1153, 0, 597, 0, 589, 590, 591, 1162, 592, 1163,
	1080, 593, 594, 595, 596, 0, 598, 599, 0, 1064,
	600, 601, 602, 604, 605, 603, 606, 1124, 607, 0,
	0, 608, 609, 610, 1582, 1147, 1184, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 224, 615, 616,
	671, 617, 618, 619, 1061, 0, 225, 0, 0, 0,
	0, 0, 1057, 0, 0, 0, 0, 0, 0, 1055,
	1056, 1102, 1074, 1075, 1076, 1072, 1073, 1085, 1827, 1825,
	0, 0, 1084, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1126, 1090, 0, 0, 0, 280, 281,
	1166, 282, 283, 284, 285, 286, 287, 621, 1139, 0,
	288, 1146, 289, 1145, 0, 1156, 290, 291, 292, 293,
	294, 295, 1092, 1125, 1059, 296, 1186, 1187, 628, 0,
	297, 298, 1132, 0, 1113, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1167, 321, 322, 323, 1116, 1114, 1115,
	1122, 1118, 1117, 1121, 324, 325, 326, 327, 328, 1149,
	329, 1143, 1142, 1063, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1134, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1069, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1157, 1158, 360, 1081, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1141, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1168, 367, 368, 1154, 1155, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1164, 0, 1091, 379, 0, 380, 381, 382, 383, 384,
	1127, 1128, 1131, 463, 1170, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1169, 395, 1136, 1137, 0, 1097, 0, 397,
	398, 1171, 1129, 1172, 399, 400, 401, 1173, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1165, 1174, 413, 414, 1175, 0,
	415, 0, 0, 0, 416, 417, 420, 1120, 1119, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1176, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1177, 459, 449, 1060, 270, 1178, 460, 461, 1082,
	1130, 462, 1144, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1179,
	473, 1180, 1159, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1160, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1140, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1181, 525, 526, 527, 528, 1070, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 230, 546, 547, 545, 548, 549, 550, 1123, 551,
	552, 534, 535, 553, 554, 1182, 555, 556, 557, 558,
	559, 560, 561, 1138, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1185, 569, 570, 571, 572,
	1161, 576, 577, 0, 578, 579, 1058, 575, 566, 232,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1150, 1151, 1152, 1153, 0, 597, 0, 589, 590,
	591, 1162, 592, 1163, 1080, 593, 594, 595, 596, 0,
	598, 599, 0, 1064, 600, 601, 602, 604, 605, 603,
	606, 1124, 607, 0, 0, 608, 609, 610, 1582, 1147,
	1184, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 224, 615, 616, 671, 617, 618, 619, 1061, 0,
	225, 0, 0, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 0, 1055, 1056, 1102, 1074, 1075, 1076, 1072,
	1073, 1085, 1827, 3077, 0, 0, 1084, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1126, 1090, 0,
	0, 0, 280, 281, 1166, 282, 283, 284, 285, 286,
	287, 621, 1139, 0, 288, 1146, 289, 1145, 0, 1156,
	290, 291, 292, 293, 294, 295, 1092, 1125, 1059, 296,
	1186, 1187, 628, 0, 297, 298, 1132, 0, 1113, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1167, 321, 322,
	323, 1116, 1114, 1115, 1122, 1118, 1117, 1121, 324, 325,
	326, 327, 328, 1149, 329, 1143, 1142, 1063, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1134, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1069, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1157, 1158, 360, 1081, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1141, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1168, 367,
	368, 1154, 1155, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1164, 0, 1091, 379, 0, 380,
	381, 382, 383, 384, 1127, 1128, 1131, 463, 1170, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1169, 395, 1136, 1137,
	0, 1097, 0, 397, 398, 1171, 1129, 1172, 399, 400,
	401, 1173, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1165, 1174,
	413, 414, 1175, 0, 415, 0, 0, 0, 416, 417,
	420, 1120, 1119, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1176, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1177, 459, 449, 1060, 270,
	1178, 460, 461, 1082, 1130, 462, 1144, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1179, 473, 1180, 1159, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1160,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1140, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1181, 525, 526, 527, 528,
	1070, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 230, 546, 547, 545, 548,
	549, 550, 1123, 551, 552, 534, 535, 553, 554, 1182,
	555, 556, 557, 558, 559, 560, 561, 1138, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1185,
	569, 570, 571, 572, 1161, 576, 577, 0, 578, 579,
	1058, 575, 566, 232, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1150, 1151, 1152, 1153, 0,
	597, 0, 589, 590, 591, 1162, 592, 1163, 1080, 593,
	594, 595, 596, 0, 598, 599, 0, 1064, 600, 601,
	602, 604, 605, 603, 606, 1124, 607, 0, 0, 608,
	609, 610, 1582, 1147, 1184, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 224, 615, 616, 671, 617,
	618, 619, 1061, 0, 225, 0, 0, 0, 0, 0,
	1057, 0, 0, 0, 0, 0, 0, 1055, 1056, 1102,
	1074, 1075, 1076, 1072, 1073, 1085, 1827, 1825, 0, 0,
	1084, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1126, 1090, 0, 0, 0, 280, 281, 1166, 282,
	283, 284, 285, 286, 287, 621, 1139, 0, 288, 1146,
	289, 1145, 2598, 1156, 290, 291, 292, 293, 294, 295,
	1092, 1125, 1059, 296, 1186, 1187, 628, 0, 297, 298,
	1132, 0, 1113, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1167, 321, 322, 323, 1116, 1114, 1115, 1122, 1118,
	1117, 1121, 324, 325, 326, 327, 328, 1149, 329, 1143,
	1142, 1063, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1134, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1069, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1157,
	1158, 360, 1081, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1141, 0, 0, 0, 364, 0, 365, 366,
	0, 2603, 1168, 367, 368, 1154, 1155, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1164, 0,
	1091, 379, 0, 380, 381, 382, 383, 384, 1127, 1128,
	1131, 463, 1170, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1169, 395, 1136, 1137, 0, 1097, 0, 397, 398, 1171,
	1129, 1172, 399, 400, 401, 1173, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	2599, 412, 1165, 1174, 413, 414, 1175, 0, 415, 0,
	0, 0, 416, 417, 420, 1120, 1119, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1176, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1177,
	459, 449, 1060, 270, 1178, 460, 461, 1082, 1130, 462,
	1144, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1179, 473, 1180,
	1159, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1160, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1140,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1181,
	525, 526, 527, 528, 1070, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1123, 551, 552, 534,
	535, 553, 554, 1182, 555, 556, 557, 558, 559, 560,
	561, 1138, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1185, 569, 570, 571, 572, 1161, 576,
	577, 0, 578, 579, 1058, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1150,
	1151, 1152, 1153, 0, 597, 2600, 589, 590, 591, 1162,
	592, 1163, 1080, 593, 594, 595, 596, 0, 598, 599,
	0, 1064, 600, 601, 602, 604, 605, 603, 606, 1124,
	607, 0, 0, 608, 609, 610, 667, 1147, 1184, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1061, 0, 0, 0,
	0, 0, 0, 0, 1057, 0, 0, 0, 0, 0,
	0, 1055, 1056, 0, 0, 0, 0, 0, 0, 0,
	1086, 0, 0, 2515, 1084, 1102, 1074, 1075, 1076, 1072,
	1073, 1085, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1126, 1090, 0,
	0, 0, 280, 281, 1166, 282, 283, 284, 285, 286,
	287, 621, 1139, 0, 288, 1146, 289, 1145, 0, 1156,
	290, 291, 292, 293, 294, 295, 1092, 1125, 1059, 296,
	1186, 1187, 628, 0, 297, 298, 1132, 0, 1113, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1167, 321, 322,
	323, 1116, 1114, 1115, 1122, 1118, 1117, 1121, 324, 325,
	326, 327, 328, 1149, 329, 1143, 1142, 1063, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1134, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1069, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1157, 1158, 360, 1081, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1141, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1168, 367,
	368, 1154, 1155, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1164, 0, 1091, 379, 0, 380,
	381, 382, 383, 384, 1127, 1128, 1131, 463, 1170, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1169, 395, 1136, 1137,
	0, 1097, 0, 397, 398, 1171, 1129, 1172, 399, 400,
	401, 1173, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1165, 1174,
	413, 414, 1175, 0, 415, 0, 0, 0, 416, 417,
	420, 1120, 1119, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1176, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1177, 459, 449, 1060, 270,
	1178, 460, 461, 1082, 1130, 462, 1144, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1179, 473, 1180, 1159, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1160,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1140, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1181, 525, 526, 527, 528,
	1070, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1123, 551, 552, 534, 535, 553, 554, 1182,
	555, 556, 557, 558, 559, 560, 561, 1138, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1185,
	569, 570, 571, 572, 1161, 576, 577, 0, 578, 579,
	1058, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1150, 1151, 1152, 1153, 0,
	597, 0, 589, 590, 591, 1162, 592, 1163, 1080, 593,
	594, 595, 596, 0, 598, 599, 0, 1064, 600, 601,
	602, 604, 605, 603, 606, 1124, 607, 0, 0, 608,
	609, 610, 667, 1147, 1184, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1061, 0, 0, 0, 0, 0, 0, 0,
	1057, 0, 0, 0, 0, 0, 0, 1055, 1056, 0,
	0, 0, 0, 0, 0, 0, 1086, 2513, 0, 2512,
	1084, 1102, 1074, 1075, 1076, 1072, 1073, 1085, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1126, 1090, 0, 0, 0, 280, 281,
	1166, 282, 283, 284, 285, 286, 287, 621, 1139, 0,
	288, 1146, 289, 1145, 0, 1156, 290, 291, 292, 293,
	294, 295, 1092, 1125, 1059, 296, 1186, 1187, 628, 0,
	297, 298, 1132, 0, 1113, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1167, 321, 322, 323, 1116, 1114, 1115,
	1122, 1118, 1117, 1121, 324, 325, 326, 327, 328, 1149,
	329, 1143, 1142, 1063, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1134, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1069, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1157, 1158, 360, 1081, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1141, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1168, 367, 368, 1154, 1155, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1164, 0, 1091, 379, 0, 380, 381, 382, 383, 384,
	1127, 1128, 1131, 463, 1170, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1169, 395, 1136, 1137, 0, 1097, 0, 397,
	398, 1171, 1129, 1172, 399, 400, 401, 1173, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1165, 1174, 413, 414, 1175, 0,
	415, 0, 0, 0, 416, 417, 420, 1120, 1119, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1176, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1177, 459, 449, 1060, 270, 1178, 460, 461, 1082,
	1130, 462, 1144, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1179,
	473, 1180, 1159, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1160, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1140, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1181, 525, 526, 527, 528, 1070, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1123, 551,
	552, 534, 535, 553, 554, 1182, 555, 556, 557, 558,
	559, 560, 561, 1138, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1185, 569, 570, 571, 572,
	1161, 576, 577, 0, 578, 579, 1058, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1150, 1151, 1152, 1153, 0, 597, 0, 589, 590,
	591, 1162, 592, 1163, 1080, 593, 594, 595, 596, 0,
	598, 599, 0, 1064, 600, 601, 602, 604, 605, 603,
	606, 1124, 607, 0, 0, 608, 609, 610, 667, 1147,
	1184, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1061, 0,
	0, 0, 0, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 0, 1055, 1056, 0, 0, 0, 0, 0,
	0, 0, 1086, 2510, 0, 2509, 1084, 1102, 1074, 1075,
	1076, 1072, 1073, 1085, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1126,
	1090, 0, 0, 0, 280, 281, 1166, 282, 283, 284,
	285, 286, 287, 621, 1139, 0, 288, 1146, 289, 1145,
	0, 1156, 290, 291, 292, 293, 294, 295, 1092, 1125,
	1059, 296, 1186, 1187, 628, 0, 297, 298, 1132, 0,
	1113, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1167,
	321, 322, 323, 1116, 1114, 1115, 1122, 1118, 1117, 1121,
	324, 325, 326, 327, 328, 1149, 329, 1143, 1142, 1063,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1134, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1069, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1157, 1158, 360,
	1081, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1141, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1168, 367, 368, 1154, 1155, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1164, 0, 1091, 379,
	0, 380, 381, 382, 383, 384, 1127, 1128, 1131, 463,
	1170, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1169, 395,
	1136, 1137, 0, 1097, 0, 397, 398, 1171, 1129, 1172,
	399, 400, 401, 1173, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1165, 1174, 413, 414, 1175, 0, 415, 0, 0, 0,
	416, 417, 420, 1120, 1119, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1176, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1177, 459, 449,
	1060, 270, 1178, 460, 461, 1082, 1130, 462, 1144, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1179, 473, 1180, 1159, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1160, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1140, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1181, 525, 526,
	527, 528, 1070, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1123, 551, 552, 534, 535, 553,
	554, 1182, 555, 556, 557, 558, 559, 560, 561, 1138,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1185, 569, 570, 571, 572, 1161, 576, 577, 0,
	578, 579, 1058, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1150, 1151, 1152,
	1153, 0, 597, 0, 589, 590, 591, 1162, 592, 1163,
	1080, 593, 594, 595, 596, 0, 598, 599, 0, 1064,
	600, 601, 602, 604, 605, 603, 606, 1124, 607, 0,
	0, 608, 609, 610, 667, 1147, 1184, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1061, 0, 0, 0, 0, 0,
	0, 0, 1057, 0, 0, 0, 0, 0, 0, 1055,
	1056, 0, 0, 0, 0, 0, 0, 0, 1086, 2507,
	0, 2506, 1084, 1102, 1074, 1075, 1076, 1072, 1073, 1085,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1126, 1090, 0, 0, 0,
	280, 281, 1166, 282, 283, 284, 285, 286, 287, 621,
	1139, 0, 288, 1146, 289, 1145, 0, 1156, 290, 291,
	292, 293, 294, 295, 1092, 1125, 1059, 296, 1186, 1187,
	628, 0, 297, 298, 1132, 0, 1113, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1167, 321, 322, 323, 1116,
	1114, 1115, 1122, 1118, 1117, 1121, 324, 325, 326, 327,
	328, 1149, 329, 1143, 1142, 1063, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1134, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1069, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1157, 1158, 360, 1081, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1141, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1168, 367, 368, 1154,
	1155, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1164, 0, 1091, 379, 0, 380, 381, 382,
	383, 384, 1127, 1128, 1131, 463, 1170, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1169, 395, 1136, 1137, 0, 1097,
	0, 397, 398, 1171, 1129, 1172, 399, 400, 401, 1173,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1165, 1174, 413, 414,
	1175, 0, 415, 0, 0, 0, 416, 417, 420, 1120,
	1119, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1176, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1177, 459, 449, 1060, 270, 1178, 460,
	461, 1082, 1130, 462, 1144, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1179, 473, 1180, 1159, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1160, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1140, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1181, 525, 526, 527, 528, 1070, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1123, 551, 552, 534, 535, 553, 554, 1182, 555, 556,
	557, 558, 559, 560, 561, 1138, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1185, 569, 570,
	571, 572, 1161, 576, 577, 0, 578, 579, 1058, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1150, 1151, 1152, 1153, 0, 597, 0,
	589, 590, 591, 1162, 592, 1163, 1080, 593, 594, 595,
	596, 0, 598, 599, 0, 1064, 600, 601, 602, 604,
	605, 603, 606, 1124, 607, 0, 0, 608, 609, 610,
	667, 1147, 1184, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1061, 0, 0, 0, 0, 0, 0, 0, 1057, 0,
	0, 0, 0, 0, 0, 1055, 1056, 0, 0, 0,
	0, 0, 0, 0, 1086, 2504, 0, 1675, 1084, 1102,
	1074, 1075, 1076, 1072, 1073, 1085, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1126, 1090, 0, 0, 0, 280, 281, 1166, 282,
	283, 284, 285, 286, 287, 621, 1139, 0, 288, 1146,
	289, 1145, 0, 1156, 290, 291, 292, 293, 294, 295,
	1092, 1125, 1059, 296, 1186, 1187, 628, 0, 297, 298,
	1132, 0, 1113, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1167, 321, 322, 323, 1116, 1114, 1115, 1122, 1118,
	1117, 1121, 324, 325, 326, 327, 328, 1149, 329, 1143,
	1142, 1063, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1134, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1069, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1157,
	1158, 360, 1081, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1141, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1168, 367, 368, 1154, 1155, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1164, 0,
	1091, 379, 0, 380, 381, 382, 383, 384, 1127, 1128,
	1131, 463, 1170, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1169, 395, 1136, 1137, 0, 1097, 0, 397, 398, 1171,
	1129, 1172, 399, 400, 401, 1173, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1165, 1174, 413, 414, 1175, 0, 415, 0,
	0, 0, 416, 417, 420, 1120, 1119, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1176, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1177,
	459, 449, 1060, 270, 1178, 460, 461, 1082, 1130, 462,
	1144, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1179, 473, 1180,
	1159, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1160, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1140,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1181,
	525, 526, 527, 528, 1070, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1123, 551, 552, 534,
	535, 553, 554, 1182, 555, 556, 557, 558, 559, 560,
	561, 1138, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1185, 569, 570, 571, 572, 1161, 576,
	577, 0, 578, 579, 1058, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1150,
	1151, 1152, 1153, 0, 597, 0, 589, 590, 591, 1162,
	592, 1163, 1080, 593, 594, 595, 596, 0, 598, 599,
	0, 1064, 600, 601, 602, 604, 605, 603, 606, 1124,
	607, 0, 0, 608, 609, 610, 667, 1147, 1184, 0,
	612, 611, 613, 670, 0, 614, 1674, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1061, 0, 0, 0,
	0, 0, 0, 0, 1057, 0, 0, 0, 0, 0,
	0, 1055, 1056, 0, 0, 0, 0, 0, 0, 0,
	1086, 0, 0, 1051, 1084, 1102, 1074, 1075, 1076, 1072,
	1073, 1085, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1126, 1090, 0,
	0, 0, 280, 281, 1166, 282, 283, 284, 285, 286,
	287, 621, 1139, 0, 288, 1146, 289, 1145, 0, 1156,
	290, 291, 292, 293, 294, 295, 1092, 1125, 1059, 296,
	1186, 1187, 628, 0, 297, 298, 1132, 0, 1113, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1167, 321, 322,
	323, 1116, 1114, 1115, 1122, 1118, 1117, 1121, 324, 325,
	326, 327, 328, 1149, 329, 1143, 1142, 1063, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1134, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1069, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1157, 1158, 360, 1081, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1141, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1168, 367,
	368, 1154, 1155, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1164, 0, 1091, 379, 0, 380,
	381, 382, 383, 384, 1127, 1128, 1131, 463, 1170, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1169, 395, 1136, 1137,
	0, 1097, 0, 397, 398, 1171, 1129, 1172, 399, 400,
	401, 1173, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1165, 1174,
	413, 414, 1175, 0, 415, 0, 0, 0, 416, 417,
	420, 1120, 1119, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1176, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1177, 459, 449, 1060, 270,
	1178, 460, 461, 1082, 1130, 462, 1144, 464, 465, 0,
	0, 466, 0, 1065, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1179, 473, 1180, 1159, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1160,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1140, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1181, 525, 526, 527, 528,
	1070, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1123, 551, 552, 534, 535, 553, 554, 1182,
	555, 556, 557, 558, 559, 560, 561, 1138, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1185,
	569, 570, 571, 572, 1161, 576, 577, 0, 578, 579,
	1058, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1150, 1151, 1152, 1153, 0,
	597, 0, 589, 590, 591, 1162, 592, 1163, 1080, 593,
	594, 595, 596, 0, 598, 599, 0, 1064, 600, 601,
	602, 604, 605, 603, 606, 1124, 607, 0, 0, 608,
	609, 610, 667, 1147, 1184, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1061, 0, 0, 0, 0, 0, 0, 0,
	1057, 0, 0, 0, 0, 0, 0, 1055, 1056, 1102,
	1074, 1075, 1076, 1072, 1073, 1085, 1086, 0, 0, 0,
	1084, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1126, 1090, 0, 0, 0, 280, 281, 1166, 282,
	283, 284, 285, 286, 287, 621, 1139, 0, 288, 1146,
	289, 1145, 0, 1156, 290, 291, 292, 293, 294, 295,
	1092, 1125, 1059, 296, 1186, 1187, 628, 0, 297, 298,
	1132, 0, 1113, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 4453, 317, 0, 318, 319,
	320, 1167, 321, 322, 323, 1116, 1114, 1115, 1122, 1118,
	1117, 1121, 324, 325, 326, 327, 328, 1149, 329, 1143,
	1142, 1063, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1134, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1069, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1157,
	1158, 360, 1081, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1141, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1168, 367, 368, 1154, 1155, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1164, 0,
	1091, 379, 0, 380, 381, 382, 383, 384, 1127, 1128,
	1131, 463, 1170, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1169, 395, 1136, 1137, 0, 1097, 0, 397, 398, 1171,
	1129, 1172, 399, 400, 401, 1173, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1165, 1174, 413, 414, 1175, 0, 415, 0,
	0, 0, 416, 417, 420, 1120, 1119, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1176, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1177,
	459, 449, 1060, 270, 1178, 460, 461, 1082, 1130, 462,
	1144, 464, 465, 0, 0, 466, 0, 1065, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1179, 473, 1180,
	1159, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1160, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1140,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1181,
	525, 526, 527, 528, 1070, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1123, 551, 552, 534,
	535, 553, 554, 1182, 555, 556, 557, 558, 559, 560,
	561, 1138, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1185, 569, 570, 571, 572, 1161, 576,
	577, 0, 578, 579, 1058, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1150,
	1151, 1152, 1153, 0, 597, 0, 589, 590, 591, 1162,
	592, 1163, 1080, 593, 594, 595, 596, 0, 598, 599,
	0, 1064, 600, 601, 602, 604, 605, 603, 606, 1124,
	607, 0, 0, 608, 609, 610, 667, 1147, 1184, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1061, 0, 0, 0,
	0, 0, 0, 0, 1057, 0, 0, 0, 0, 0,
	0, 1055, 1056, 1102, 1074, 1075, 1076, 1072, 1073, 1085,
	1086, 0, 0, 0, 1084, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1126, 1090, 0, 0, 0,
	280, 281, 1166, 282, 283, 284, 285, 286, 287, 621,
	1139, 0, 288, 1146, 289, 1145, 0, 1156, 290, 291,
	292, 293, 294, 295, 1092, 1125, 1059, 296, 1186, 1187,
	628, 0, 297, 298, 1132, 0, 1113, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1167, 321, 322, 323, 1116,
	1114, 1115, 1122, 1118, 1117, 1121, 324, 325, 326, 327,
	328, 1149, 329, 1143, 1142, 1063, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1134, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1069, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1157, 1158, 360, 1081, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1141, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1168, 367, 368, 1154,
	1155, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1164, 0, 1091, 379, 0, 380, 381, 382,
	383, 384, 1127, 1128, 1131, 463, 1170, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 2384, 392,
	393, 394, 396, 0, 1169, 395, 1136, 1137, 0, 1097,
	0, 397, 398, 1171, 1129, 1172, 399, 400, 401, 1173,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1165, 1174, 413, 414,
	1175, 0, 415, 0, 0, 0, 416, 417, 420, 1120,
	1119, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1176, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1177, 459, 449, 1060, 270, 1178, 460,
	461, 1082, 1130, 462, 1144, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1179, 473, 1180, 1159, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1160, 492, 655,
	493, 494, 2383, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1140, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1181, 525, 526, 527, 528, 1070, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1123, 551, 552, 534, 535, 553, 554, 1182, 555, 556,
	557, 558, 559, 560, 561, 1138, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1185, 569, 570,
	571, 572, 1161, 576, 577, 0, 578, 579, 1058, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1150, 1151, 1152, 1153, 0, 597, 0,
	589, 590, 591, 1162, 592, 1163, 1080, 593, 594, 595,
	596, 0, 598, 599, 0, 1064, 600, 601, 602, 604,
	605, 603, 606, 1124, 607, 0, 0, 608, 609, 610,
	667, 1147, 1184, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1061, 0, 0, 0, 0, 0, 0, 0, 1057, 0,
	0, 0, 0, 0, 0, 1055, 1056, 1102, 1074, 1075,
	1076, 1072, 1073, 1085, 1086, 0, 0, 0, 1084, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1126,
	1090, 0, 0, 0, 280, 281, 1166, 282, 283, 284,
	285, 286, 287, 621, 1139, 0, 288, 1146, 289, 1145,
	0, 1156, 290, 291, 292, 293, 294, 295, 1092, 1125,
	1059, 296, 1186, 1187, 628, 0, 297, 298, 1132, 0,
	1113, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1167,
	321, 322, 323, 1116, 1114, 1115, 1122, 1118, 1117, 1121,
	324, 325, 326, 327, 328, 1149, 329, 1143, 1142, 1063,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1134, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1069, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1157, 1158, 360,
	1081, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1141, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1168, 367, 368, 1154, 1155, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1164, 0, 1091, 379,
	0, 380, 381, 382, 383, 384, 1127, 1128, 1131, 463,
	1170, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1169, 395,
	1136, 1137, 0, 1097, 0, 397, 398, 1171, 1129, 1172,
	399, 400, 401, 1173, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1165, 1174, 413, 414, 1175, 0, 415, 0, 0, 0,
	416, 417, 420, 1120, 1119, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1176, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1177, 459, 449,
	1060, 270, 1178, 460, 461, 1082, 1130, 462, 1144, 464,
	465, 0, 0, 466, 0, 1065, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1179, 473, 1180, 1159, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1160, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1140, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1181, 525, 526,
	527, 528, 1070, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1123, 551, 552, 534, 535, 553,
	554, 1182, 555, 556, 557, 558, 559, 560, 561, 1138,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1185, 569, 570, 571, 572, 1161, 576, 577, 0,
	578, 579, 1058, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1150, 1151, 1152,
	1153, 0, 597, 0, 589, 590, 591, 1162, 592, 1163,
	1080, 593, 594, 595, 596, 0, 598, 599, 0, 1064,
	600, 601, 602, 604, 605, 603, 606, 1124, 607, 0,
	0, 608, 609, 610, 667, 1147, 1184, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1061, 0, 0, 0, 0, 0,
	0, 0, 1057, 0, 0, 0, 0, 0, 0, 1055,
	1056, 1102, 1074, 1075, 1076, 1072, 1073, 1085, 1086, 0,
	0, 0, 1084, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1126, 1090, 0, 0, 0, 280, 281,
	1166, 282, 283, 284, 285, 286, 287, 621, 1139, 0,
	288, 1146, 289, 1145, 0, 1156, 290, 291, 292, 293,
	294, 295, 1092, 1125, 1059, 296, 1186, 1187, 628, 0,
	297, 298, 1132, 0, 1113, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 4214, 317, 0,
	318, 319, 320, 1167, 321, 322, 323, 1116, 1114, 1115,
	1122, 1118, 1117, 1121, 324, 325, 326, 327, 328, 1149,
	329, 1143, 1142, 1063, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1134, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1069, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1157, 1158, 360, 1081, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1141, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1168, 367, 368, 1154, 1155, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1164, 0, 1091, 379, 0, 380, 381, 382, 383, 384,
	1127, 1128, 1131, 463, 1170, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1169, 395, 1136, 1137, 0, 1097, 0, 397,
	398, 1171, 1129, 1172, 399, 400, 401, 1173, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1165, 1174, 413, 414, 1175, 0,
	415, 0, 0, 0, 416, 417, 420, 1120, 1119, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1176, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1177, 459, 449, 1060, 270, 1178, 460, 461, 1082,
	1130, 462, 1144, 464, 465, 0, 0, 466, 0, 1065,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1179,
	473, 1180, 1159, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1160, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1140, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1181, 525, 526, 527, 528, 1070, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1123, 551,
	552, 534, 535, 553, 554, 1182, 555, 556, 557, 558,
	559, 560, 561, 1138, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1185, 569, 570, 571, 572,
	1161, 576, 577, 0, 578, 579, 1058, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1150, 1151, 1152, 1153, 0, 597, 0, 589, 590,
	591, 1162, 592, 1163, 1080, 593, 594, 595, 596, 0,
	598, 599, 0, 1064, 600, 601, 602, 604, 605, 603,
	606, 1124, 607, 0, 0, 608, 609, 610, 667, 1147,
	1184, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1061, 0,
	0, 0, 0, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 0, 1055, 1056, 1102, 1074, 1075, 1076, 1072,
	1073, 1085, 1086, 0, 0, 0, 1084, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1126, 1090, 0,
	0, 0, 280, 281, 1166, 282, 283, 284, 285, 286,
	287, 621, 1139, 0, 288, 1146, 289, 1145, 0, 1156,
	290, 291, 292, 293, 294, 295, 1092, 1125, 1059, 296,
	1186, 1187, 628, 0, 297, 298, 1132, 0, 1113, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1167, 321, 322,
	323, 1116, 1114, 1115, 1122, 1118, 1117, 1121, 324, 325,
	326, 327, 328, 1149, 329, 1143, 1142, 1063, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1134, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1069, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1157, 1158, 360, 1081, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1141, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1168, 367,
	368, 1154, 1155, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1164, 0, 1091, 379, 0, 380,
	381, 382, 383, 384, 1127, 1128, 1131, 463, 1170, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1169, 395, 1136, 1137,
	0, 1097, 0, 397, 398, 1171, 1129, 1172, 399, 400,
	401, 1173, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1165, 1174,
	413, 414, 1175, 0, 415, 0, 0, 0, 416, 417,
	420, 1120, 1119, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1176, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1177, 459, 449, 1060, 3836,
	1178, 460, 461, 1082, 1130, 462, 1144, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1179, 473, 1180, 1159, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1160,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1140, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1181, 525, 526, 527, 528,
	1070, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1123, 551, 552, 534, 535, 553, 554, 1182,
	555, 556, 557, 558, 559, 560, 561, 1138, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1185,
	569, 570, 571, 572, 1161, 576, 577, 0, 578, 579,
	1058, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1150, 1151, 1152, 1153, 0,
	597, 0, 589, 590, 591, 1162, 592, 1163, 1080, 593,
	594, 595, 596, 0, 598, 599, 0, 1064, 600, 601,
	602, 604, 605, 603, 606, 1124, 607, 0, 0, 608,
	609, 610, 667, 1147, 1184, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1061, 0, 0, 0, 0, 0, 0, 0,
	1057, 0, 0, 0, 0, 0, 0, 1055, 1056, 1895,
	0, 0, 0, 0, 0, 0, 1086, 0, 0, 0,
	1084, 1102, 1074, 1075, 1076, 1072, 1073, 1085, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1126, 1090, 0, 0, 0, 280, 281,
	1166, 282, 283, 284, 285, 286, 287, 621, 1139, 0,
	288, 1146, 289, 1145, 0, 1156, 290, 291, 292, 293,
	294, 295, 1092, 1125, 1059, 296, 1186, 1187, 628, 0,
	297, 298, 1132, 0, 1113, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1167, 321, 322, 323, 1116, 1114, 1115,
	1122, 1118, 1117, 1121, 324, 325, 326, 327, 328, 1149,
	329, 1143, 1142, 1063, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1134, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1069, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1157, 1158, 360, 1081, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1141, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1168, 367, 368, 1154, 1155, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1164, 0, 1091, 379, 0, 380, 381, 382, 383, 384,
	1127, 1128, 1131, 463, 1170, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1169, 395, 1136, 1137, 0, 1097, 0, 397,
	398, 1171, 1129, 1172, 399, 400, 401, 1173, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1165, 1174, 413, 414, 1175, 0,
	415, 0, 0, 0, 416, 417, 420, 1120, 1119, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1176, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1177, 459, 449, 1060, 270, 1178, 460, 461, 1082,
	1130, 462, 1144, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1179,
	473, 1180, 1159, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1160, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1140, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1181, 525, 526, 527, 528, 1070, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1123, 551,
	552, 534, 535, 553, 554, 1182, 555, 556, 557, 558,
	559, 560, 561, 1138, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1185, 569, 570, 571, 572,
	1161, 576, 577, 0, 578, 579, 1058, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1150, 1151, 1152, 1153, 0, 597, 0, 589, 590,
	591, 1162, 592, 1163, 1080, 593, 594, 595, 596, 0,
	598, 599, 0, 1064, 600, 601, 602, 604, 605, 603,
	606, 1124, 607, 0, 0, 608, 609, 610, 667, 1147,
	1184, 3562, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1061, 0,
	0, 0, 0, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 0, 1055, 1056, 1102, 1074, 1075, 1076, 1072,
	1073, 1085, 1086, 0, 0, 0, 1084, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1126, 1090, 0,
	0, 0, 280, 281, 1166, 282, 283, 284, 285, 286,
	287, 621, 1139, 0, 288, 1146, 289, 1145, 0, 1156,
	290, 291, 292, 293, 294, 295, 1092, 1125, 1059, 296,
	1186, 1187, 628, 0, 297, 298, 1132, 0, 1113, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1167, 321, 322,
	323, 1116, 1114, 1115, 1122, 1118, 1117, 1121, 324, 325,
	326, 327, 328, 1149, 329, 1143, 1142, 1063, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1134, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1069, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1157, 1158, 360, 1081, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1141, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1168, 367,
	368, 1154, 1155, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1164, 0, 1091, 379, 0, 380,
	381, 382, 383, 384, 1127, 1128, 1131, 463, 1170, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1169, 395, 1136, 1137,
	0, 1097, 0, 397, 398, 1171, 1129, 1172, 399, 400,
	401, 1173, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1165, 1174,
	413, 414, 1175, 0, 415, 0, 0, 0, 416, 417,
	420, 1120, 1119, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1176, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1177, 459, 449, 1060, 270,
	1178, 460, 461, 1082, 1130, 462, 1144, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1179, 473, 1180, 1159, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1160,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1140, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1181, 525, 526, 527, 528,
	1070, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1123, 551, 552, 534, 535, 553, 554, 1182,
	555, 556, 557, 558, 559, 560, 561, 1138, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1185,
	569, 570, 571, 572, 1161, 576, 577, 0, 578, 579,
	1058, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1150, 1151, 1152, 1153, 0,
	597, 0, 589, 590, 591, 1162, 592, 1163, 1080, 593,
	594, 595, 596, 0, 598, 599, 0, 1064, 600, 601,
	602, 604, 605, 603, 606, 1124, 607, 0, 0, 608,
	609, 610, 667, 1147, 1184, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1061, 0, 0, 0, 0, 0, 0, 0,
	1057, 0, 0, 0, 0, 0, 0, 1055, 1056, 1895,
	0, 0, 0, 0, 0, 0, 1086, 0, 0, 0,
	1084, 1102, 1074, 1075, 1076, 1072, 1073, 1085, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1126, 1090, 0, 0, 0, 280, 281,
	1166, 282, 283, 284, 285, 286, 287, 621, 1139, 0,
	288, 1146, 289, 1145, 0, 1156, 290, 291, 292, 293,
	294, 295, 1092, 1125, 1059, 296, 1186, 1187, 628, 0,
	297, 298, 1132, 0, 1113, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1167, 321, 322, 323, 1116, 1114, 1115,
	1122, 1118, 1117, 1121, 324, 325, 326, 327, 328, 1149,
	329, 1143, 1142, 1063, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1134, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1069, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1157, 1158, 360, 1081, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1141, 0, 0, 0, 364, 0,
	365, 366, 0, 2603, 1168, 367, 368, 1154, 1155, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1164, 0, 1091, 379, 0, 380, 381, 382, 383, 384,
	1127, 1128, 1131, 463, 1170, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1169, 395, 1136, 1137, 0, 1097, 0, 397,
	398, 1171, 1129, 1172, 399, 400, 401, 1173, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1165, 1174, 413, 414, 1175, 0,
	415, 0, 0, 0, 416, 417, 420, 1120, 1119, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1176, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1177, 459, 449, 1060, 270, 1178, 460, 461, 1082,
	1130, 462, 1144, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1179,
	473, 1180, 1159, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1160, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1140, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1181, 525, 526, 527, 528, 1070, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1123, 551,
	552, 534, 535, 553, 554, 1182, 555, 556, 557, 558,
	559, 560, 561, 1138, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1185, 569, 570, 571, 572,
	1161, 576, 577, 0, 578, 579, 1058, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1150, 1151, 1152, 1153, 0, 597, 0, 589, 590,
	591, 1162, 592, 1163, 1080, 593, 594, 595, 596, 0,
	598, 599, 0, 1064, 600, 601, 602, 604, 605, 603,
	606, 1124, 607, 0, 0, 608, 609, 610, 667, 1147,
	1184, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1061, 0,
	0, 0, 0, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 0, 1055, 1056, 1102, 1074, 1075, 1076, 1072,
	1073, 1085, 1086, 0, 0, 0, 1084, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1126, 1090, 0,
	0, 0, 280, 281, 1166, 282, 283, 284, 285, 286,
	287, 621, 1139, 0, 288, 1146, 289, 1145, 0, 1156,
	290, 291, 292, 293, 294, 295, 1092, 1125, 1059, 296,
	1186, 1187, 628, 0, 297, 298, 1132, 0, 1113, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1167, 321, 322,
	323, 1116, 1114, 1115, 1122, 1118, 1117, 1121, 324, 325,
	326, 327, 328, 1149, 329, 1143, 1142, 1063, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1134, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1069, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1157, 1158, 360, 1081, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1141, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1168, 367,
	368, 1154, 1155, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1164, 0, 1091, 379, 0, 380,
	381, 382, 383, 384, 1127, 1128, 1131, 463, 1170, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1169, 395, 1136, 1137,
	0, 1097, 0, 397, 398, 1171, 1129, 1172, 399, 400,
	401, 1173, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1165, 1174,
	413, 414, 1175, 0, 415, 0, 0, 0, 416, 417,
	420, 1120, 1119, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1176, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1177, 459, 449, 1060, 270,
	1178, 460, 461, 1082, 1130, 462, 1144, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1179, 473, 1180, 1159, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1160,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1140, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1181, 525, 526, 527, 528,
	1070, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1123, 551, 552, 534, 535, 553, 554, 1182,
	555, 556, 557, 558, 559, 560, 561, 1138, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1185,
	569, 570, 571, 572, 1161, 576, 577, 0, 578, 579,
	1058, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1150, 1151, 1152, 1153, 0,
	597, 0, 589, 590, 591, 1162, 592, 1163, 1080, 593,
	594, 595, 596, 0, 598, 599, 0, 1064, 600, 601,
	602, 604, 605, 603, 606, 1124, 607, 0, 0, 608,
	609, 610, 667, 1147, 1184, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1061, 0, 0, 0, 0, 0, 0, 0,
	1057, 0, 0, 0, 0, 0, 0, 1055, 1056, 0,
	0, 0, 0, 0, 0, 0, 1086, 1825, 0, 2608,
	1084, 1102, 1074, 1075, 1076, 1072, 1073, 1085, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1126, 1090, 0, 0, 0, 280, 281,
	1166, 282, 283, 284, 285, 286, 287, 621, 1139, 0,
	288, 1146, 289, 1145, 0, 1156, 290, 291, 292, 293,
	294, 295, 1092, 1125, 1059, 296, 1186, 1187, 628, 0,
	297, 298, 1132, 0, 1113, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1167, 321, 322, 323, 1116, 1114, 1115,
	1122, 1118, 1117, 1121, 324, 325, 326, 327, 328, 1149,
	329, 1143, 1142, 1063, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1134, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1069, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1157, 1158, 360, 1081, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1141, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1168, 367, 368, 1154, 1155, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1164, 0, 1091, 379, 0, 380, 381, 382, 383, 384,
	1127, 1128, 1131, 463, 1170, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1169, 395, 1136, 1137, 0, 1097, 0, 397,
	398, 1171, 1129, 1172, 399, 400, 401, 1173, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1165, 1174, 413, 414, 1175, 0,
	415, 0, 0, 0, 416, 417, 420, 1120, 1119, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1176, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1177, 459, 449, 1060, 270, 1178, 460, 461, 1082,
	1130, 462, 1144, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1179,
	473, 1180, 1159, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1160, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1140, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1181, 525, 526, 527, 528, 1070, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1123, 551,
	552, 534, 535, 553, 554, 1182, 555, 556, 557, 558,
	559, 560, 561, 1138, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1185, 569, 570, 571, 572,
	1161, 576, 577, 0, 578, 579, 1058, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1150, 1151, 1152, 1153, 0, 597, 0, 589, 590,
	591, 1162, 592, 1163, 1080, 593, 594, 595, 596, 0,
	598, 599, 0, 1064, 600, 601, 602, 604, 605, 603,
	606, 1124, 607, 0, 0, 608, 609, 610, 667, 1147,
	1184, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1061, 0,
	0, 0, 0, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 0, 1055, 1056, 0, 0, 0, 0, 0,
	0, 0, 1086, 0, 0, 2606, 1084, 1102, 1074, 1075,
	1076, 1072, 1073, 1085, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1126,
	1090, 0, 0, 0, 280, 281, 1166, 282, 283, 284,
	285, 286, 287, 621, 1139, 0, 288, 1146, 289, 1145,
	0, 1156, 290, 291, 292, 293, 294, 295, 1092, 1125,
	1059, 296, 1186, 1187, 628, 0, 297, 298, 1132, 0,
	1113, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1167,
	321, 322, 323, 1116, 1114, 1115, 1122, 1118, 1117, 1121,
	324, 325, 326, 327, 328, 1149, 329, 1143, 1142, 1063,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1134, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1069, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1157, 1158, 360,
	1081, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1141, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1168, 367, 368, 1154, 1155, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1164, 0, 1091, 379,
	0, 380, 381, 382, 383, 384, 1127, 1128, 1131, 463,
	1170, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1169, 395,
	1136, 1137, 0, 1097, 0, 397, 398, 1171, 1129, 1172,
	399, 400, 401, 1173, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1165, 1174, 413, 414, 1175, 0, 415, 0, 0, 0,
	416, 417, 420, 1120, 1119, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1176, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1177, 459, 449,
	1060, 270, 1178, 460, 461, 1082, 1130, 462, 1144, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1179, 473, 1180, 1159, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1160, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1140, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1181, 525, 526,
	527, 528, 1070, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1123, 551, 552, 534, 535, 553,
	554, 1182, 555, 556, 557, 558, 559, 560, 561, 1138,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1185, 569, 570, 571, 572, 1161, 576, 577, 0,
	578, 579, 1058, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1150, 1151, 1152,
	1153, 0, 597, 0, 589, 590, 591, 1162, 592, 1163,
	1080, 593, 594, 595, 596, 0, 598, 599, 0, 1064,
	600, 601, 602, 604, 605, 603, 606, 1124, 607, 0,
	0, 608, 609, 610, 667, 1147, 1184, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1061, 0, 0, 0, 0, 0,
	0, 0, 1057, 0, 0, 0, 0, 0, 0, 1055,
	1056, 0, 0, 0, 0, 0, 0, 0, 1086, 0,
	0, 2594, 1084, 1102, 1074, 1075, 1076, 1072, 1073, 1085,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1126, 1090, 0, 0, 0,
	280, 281, 1166, 282, 283, 284, 285, 286, 287, 621,
	1139, 0, 288, 1146, 289, 1145, 0, 1156, 290, 291,
	292, 293, 294, 295, 1092, 1125, 1059, 296, 1186, 1187,
	628, 0, 297, 298, 1132, 0, 1113, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1167, 321, 322, 323, 1116,
	1114, 1115, 1122, 1118, 1117, 1121, 324, 325, 326, 327,
	328, 1149, 329, 1143, 1142, 1063, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1134, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1069, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1157, 1158, 360, 1081, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1141, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1168, 367, 368, 1154,
	1155, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1164, 0, 1091, 379, 0, 380, 381, 382,
	383, 384, 1127, 1128, 1131, 463, 1170, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1169, 395, 1136, 1137, 0, 1097,
	0, 397, 398, 1171, 1129, 1172, 399, 400, 401, 1173,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1165, 1174, 413, 414,
	1175, 0, 415, 0, 0, 0, 416, 417, 420, 1120,
	1119, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1176, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1177, 459, 449, 1060, 270, 1178, 460,
	461, 1082, 1130, 462, 1144, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1179, 473, 1180, 1159, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1160, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1140, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1181, 525, 526, 527, 528, 1070, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1123, 551, 552, 534, 535, 553, 554, 1182, 555, 556,
	557, 558, 559, 560, 561, 1138, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1185, 569, 570,
	571, 572, 1161, 576, 577, 0, 578, 579, 1058, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1150, 1151, 1152, 1153, 0, 597, 0,
	589, 590, 591, 1162, 592, 1163, 1080, 593, 594, 595,
	596, 0, 598, 599, 0, 1064, 600, 601, 602, 604,
	605, 603, 606, 1124, 607, 0, 0, 608, 609, 610,
	667, 1147, 1184, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1061, 0, 0, 0, 0, 0, 0, 0, 1057, 0,
	0, 0, 0, 0, 0, 1055, 1056, 0, 0, 0,
	0, 0, 0, 0, 1086, 0, 0, 2583, 1084, 1102,
	1074, 1075, 1076, 1072, 1073, 1085, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1126, 1090, 0, 0, 0, 280, 281, 1166, 282,
	283, 284, 285, 286, 287, 621, 1139, 0, 288, 1146,
	289, 1145, 0, 1156, 290, 291, 292, 293, 294, 295,
	1092, 1125, 1059, 296, 1186, 1187, 628, 0, 297, 298,
	1132, 0, 1113, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1167, 321, 322, 323, 1116, 1114, 1115, 1122, 1118,
	1117, 1121, 324, 325, 326, 327, 328, 1149, 329, 1143,
	1142, 1063, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1134, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1069, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1157,
	1158, 360, 1081, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1141, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1168, 367, 368, 1154, 1155, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1164, 0,
	1091, 379, 0, 380, 381, 382, 383, 384, 1127, 1128,
	1131, 463, 1170, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1169, 395, 1136, 1137, 0, 1097, 0, 397, 398, 1171,
	1129, 1172, 399, 400, 401, 1173, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1165, 1174, 413, 414, 1175, 0, 415, 0,
	0, 0, 416, 417, 420, 1120, 1119, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1176, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1177,
	459, 449, 1060, 270, 1178, 460, 461, 1082, 1130, 462,
	1144, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1179, 473, 1180,
	1159, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1160, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1140,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1181,
	525, 526, 527, 528, 1070, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1123, 551, 552, 534,
	535, 553, 554, 1182, 555, 556, 557, 558, 559, 560,
	561, 1138, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1185, 569, 570, 571, 572, 1161, 576,
	577, 0, 578, 579, 1058, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1150,
	1151, 1152, 1153, 0, 597, 0, 589, 590, 591, 1162,
	592, 1163, 1080, 593, 594, 595, 596, 0, 598, 599,
	0, 1064, 600, 601, 602, 604, 605, 603, 606, 1124,
	607, 0, 0, 608, 609, 610, 667, 1147, 1184, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1061, 0, 0, 0,
	0, 0, 0, 0, 1057, 0, 0, 0, 0, 0,
	0, 1055, 1056, 0, 0, 0, 0, 0, 0, 0,
	1086, 0, 0, 2581, 1084, 2572, 2579, 1075, 1076, 1072,
	1073, 1085, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1126, 1090, 0,
	0, 0, 280, 281, 1166, 282, 283, 284, 285, 286,
	287, 621, 1139, 0, 288, 1146, 289, 1145, 0, 1156,
	290, 291, 292, 293, 294, 295, 1092, 1125, 1059, 296,
	1186, 1187, 628, 0, 297, 298, 1132, 0, 1113, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1167, 321, 322,
	323, 1116, 1114, 1115, 1122, 1118, 1117, 1121, 324, 325,
	326, 327, 328, 1149, 2575, 1143, 1142, 1063, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1134, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1069, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1157, 1158, 360, 1081, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1141, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1168, 367,
	368, 1154, 1155, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1164, 0, 1091, 379, 0, 380,
	381, 382, 2576, 384, 1127, 1128, 1131, 463, 1170, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1169, 395, 1136, 1137,
	0, 1097, 0, 397, 398, 1171, 1129, 1172, 399, 400,
	401, 1173, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1165, 1174,
	413, 414, 1175, 0, 415, 0, 0, 0, 416, 417,
	420, 1120, 1119, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 2577, 430, 2574, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1176, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1177, 459, 449, 1060, 270,
	1178, 460, 461, 1082, 1130, 462, 1144, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1179, 473, 1180, 1159, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1160,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1140, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1181, 525, 526, 527, 528,
	1070, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 2578, 0, 546, 547, 545, 548,
	549, 550, 1123, 551, 552, 534, 535, 553, 554, 1182,
	555, 556, 557, 558, 559, 560, 561, 1138, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1185,
	569, 570, 571, 572, 1161, 576, 577, 0, 578, 579,
	1058, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1150, 1151, 1152, 1153, 0,
	597, 0, 589, 590, 591, 1162, 592, 1163, 1080, 593,
	594, 595, 596, 0, 598, 599, 0, 1064, 600, 601,
	602, 604, 605, 603, 606, 1124, 607, 0, 0, 608,
	609, 610, 667, 1147, 1184, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	2573, 619, 1061, 0, 0, 0, 0, 0, 0, 0,
	1057, 0, 0, 0, 0, 0, 0, 1055, 1056, 0,
	0, 0, 0, 0, 0, 0, 1086, 0, 0, 2569,
	1084, 2572, 2579, 1075, 1076, 1072, 1073, 1085, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1126, 1090, 0, 0, 0, 280, 281,
	1166, 282, 283, 284, 285, 286, 287, 621, 1139, 0,
	288, 1146, 289, 1145, 0, 1156, 290, 291, 292, 293,
	294, 295, 1092, 1125, 1059, 296, 1186, 1187, 628, 0,
	297, 298, 1132, 0, 1113, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1167, 321, 322, 323, 1116, 1114, 1115,
	1122, 1118, 1117, 1121, 324, 325, 326, 327, 328, 1149,
	2575, 1143, 1142, 1063, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1134, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1069, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1157, 1158, 360, 1081, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1141, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1168, 367, 368, 1154, 1155, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1164, 0, 1091, 379, 0, 380, 381, 382, 2576, 384,
	1127, 1128, 1131, 463, 1170, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1169, 395, 1136, 1137, 0, 1097, 0, 397,
	398, 1171, 1129, 1172, 399, 400, 401, 1173, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1165, 1174, 413, 414, 1175, 0,
	415, 0, 0, 0, 416, 417, 420, 1120, 1119, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	2577, 430, 2574, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1176, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1177, 459, 449, 1060, 270, 1178, 460, 461, 1082,
	1130, 462, 1144, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1179,
	473, 1180, 1159, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1160, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1140, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1181, 525, 526, 527, 528, 1070, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	2578, 0, 546, 547, 545, 548, 549, 550, 1123, 551,
	552, 534, 535, 553, 554, 1182, 555, 556, 557, 558,
	559, 560, 561, 1138, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1185, 569, 570, 571, 572,
	1161, 576, 577, 0, 578, 579, 1058, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1150, 1151, 1152, 1153, 0, 597, 0, 589, 590,
	591, 1162, 592, 1163, 1080, 593, 594, 595, 596, 0,
	598, 599, 0, 1064, 600, 601, 602, 604, 605, 603,
	606, 1124, 607, 0, 0, 608, 609, 610, 667, 1147,
	1184, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 2573, 619, 1061, 0,
	0, 0, 0, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 0, 1055, 1056, 1102, 1074, 1075, 1076, 1072,
	1073, 1085, 1086, 0, 0, 0, 1084, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1126, 1090, 0,
	0, 0, 280, 281, 1166, 282, 283, 284, 285, 286,
	287, 621, 1139, 0, 288, 1146, 289, 1145, 0, 1156,
	290, 291, 292, 293, 294, 295, 1092, 1125, 1059, 296,
	1186, 1187, 628, 0, 297, 298, 1132, 0, 1113, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1167, 321, 322,
	323, 1116, 1114, 1115, 1122, 1118, 1117, 1121, 324, 325,
	326, 327, 328, 1149, 329, 1143, 1142, 1063, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1134, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1069, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1157, 1158, 360, 1081, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1141, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1168, 367,
	368, 1154, 1155, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1164, 0, 1091, 379, 0, 380,
	381, 382, 383, 384, 1127, 1128, 1131, 463, 1170, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1169, 395, 1136, 1137,
	0, 1097, 0, 397, 398, 1171, 1129, 1172, 399, 400,
	401, 1173, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1165, 1174,
	413, 414, 1175, 0, 415, 0, 0, 0, 416, 417,
	420, 1120, 1119, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1176, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1177, 459, 449, 1060, 270,
	1178, 460, 461, 1082, 1130, 462, 1144, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1179, 473, 1180, 1159, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1160,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1140, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1181, 525, 526, 527, 528,
	1070, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1123, 551, 552, 534, 535, 553, 554, 1182,
	555, 556, 557, 558, 559, 560, 561, 1138, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1185,
	569, 570, 571, 572, 1161, 576, 577, 0, 578, 579,
	1058, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1150, 1151, 1152, 1153, 0,
	597, 0, 589, 590, 591, 1162, 592, 1163, 1080, 593,
	594, 595, 596, 0, 598, 599, 0, 1064, 600, 601,
	602, 604, 605, 603, 606, 1124, 607, 0, 0, 608,
	609, 610, 667, 1147, 1184, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1061, 0, 0, 0, 0, 0, 0, 0,
	1057, 0, 0, 0, 0, 0, 0, 1055, 1056, 0,
	0, 0, 0, 0, 1833, 0, 1086, 0, 0, 0,
	1084, 1102, 1074, 1075, 1076, 1072, 1073, 1085, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 2363, 278, 279, 0, 0,
	0, 0, 0, 1126, 1090, 0, 0, 0, 280, 281,
	1166, 282, 283, 284, 285, 286, 287, 621, 1139, 0,
	288, 1146, 289, 1145, 0, 1156, 290, 291, 292, 293,
	294, 295, 1092, 1125, 1059, 296, 1186, 1187, 628, 0,
	297, 298, 1132, 0, 1113, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1167, 321, 322, 323, 1116, 1114, 1115,
	1122, 1118, 1117, 1121, 324, 325, 326, 327, 328, 1149,
	329, 1143, 1142, 1063, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1134, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1069, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1157, 1158, 360, 1081, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1141, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1168, 367, 368, 1154, 1155, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1164, 0, 1091, 379, 0, 380, 381, 382, 383, 384,
	1127, 1128, 1131, 463, 1170, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1169, 395, 1136, 1137, 0, 1097, 0, 397,
	398, 1171, 1129, 1172, 399, 400, 401, 1173, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1165, 1174, 413, 414, 1175, 0,
	415, 0, 0, 0, 416, 417, 420, 1120, 1119, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1176, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1177, 459, 449, 1060, 270, 1178, 460, 461, 1082,
	1130, 462, 1144, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1179,
	473, 1180, 1159, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1160, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1140, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1181, 525, 526, 527, 528, 1070, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1123, 551,
	552, 534, 535, 553, 554, 1182, 555, 556, 557, 558,
	559, 560, 561, 1138, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1185, 569, 570, 571, 572,
	1161, 576, 577, 0, 578, 579, 1058, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1150, 1151, 1152, 1153, 0, 597, 0, 589, 590,
	591, 1162, 592, 1163, 1080, 593, 594, 595, 596, 0,
	598, 599, 0, 1064, 600, 601, 602, 604, 605, 603,
	606, 1124, 607, 0, 0, 608, 609, 610, 667, 1147,
	1184, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1061, 0,
	0, 0, 0, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 0, 1055, 1056, 0, 0, 0, 0, 0,
	0, 0, 1086, 0, 0, 1680, 1084, 1102, 1074, 1075,
	1076, 1072, 1073, 1085, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1126,
	1090, 0, 0, 0, 280, 281, 1166, 282, 283, 284,
	285, 286, 287, 621, 1139, 0, 288, 1146, 289, 1145,
	0, 1156, 290, 291, 292, 293, 294, 295, 1092, 1125,
	1059, 296, 1186, 1187, 628, 0, 297, 298, 1132, 0,
	1113, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1167,
	321, 322, 323, 1116, 1114, 1115, 1122, 1118, 1117, 1121,
	324, 325, 326, 327, 328, 1149, 329, 1143, 1142, 1063,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1134, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1069, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1157, 1158, 360,
	1081, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1141, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1168, 367, 368, 1154, 1155, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1164, 0, 1091, 379,
	0, 380, 381, 382, 383, 384, 1127, 1128, 1131, 463,
	1170, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1169, 395,
	1136, 1137, 0, 1097, 0, 397, 398, 1171, 1129, 1172,
	399, 400, 401, 1173, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1165, 1174, 413, 414, 1175, 0, 415, 0, 0, 0,
	416, 417, 420, 1120, 1119, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1176, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1177, 459, 449,
	1060, 270, 1178, 460, 461, 1082, 1130, 462, 1144, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1179, 473, 1180, 1159, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1160, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1140, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1181, 525, 526,
	527, 528, 1070, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1123, 551, 552, 534, 535, 553,
	554, 1182, 555, 556, 557, 558, 559, 560, 561, 1138,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1185, 569, 570, 571, 572, 1161, 576, 577, 0,
	578, 579, 1058, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1150, 1151, 1152,
	1153, 0, 597, 0, 589, 590, 591, 1162, 592, 1163,
	1080, 593, 594, 595, 596, 0, 598, 599, 0, 1064,
	600, 601, 602, 604, 605, 603, 606, 1124, 607, 0,
	0, 608, 609, 610, 667, 1147, 1184, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1061, 0, 0, 0, 0, 0,
	0, 0, 1057, 0, 0, 0, 0, 0, 0, 1055,
	1056, 0, 0, 0, 0, 0, 0, 0, 1086, 0,
	0, 1612, 1084, 1102, 1074, 1075, 1076, 1072, 1073, 1085,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1126, 1090, 0, 0, 0,
	280, 281, 1166, 282, 283, 284, 285, 286, 287, 621,
	1139, 0, 288, 1146, 289, 1145, 0, 1156, 290, 291,
	292, 293, 294, 295, 1092, 1125, 1059, 296, 1186, 1187,
	628, 0, 297, 298, 1132, 0, 1113, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1167, 321, 322, 323, 1116,
	1114, 1115, 1122, 1118, 1117, 1121, 324, 325, 326, 327,
	328, 1149, 329, 1143, 1142, 1063, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1134, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1069, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1157, 1158, 360, 1081, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1141, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1168, 367, 368, 1154,
	1155, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1164, 0, 1091, 379, 0, 380, 381, 382,
	383, 384, 1127, 1128, 1131, 463, 1170, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1169, 395, 1136, 1137, 0, 1097,
	0, 397, 398, 1171, 1129, 1172, 399, 400, 401, 1173,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1165, 1174, 413, 414,
	1175, 0, 415, 0, 0, 0, 416, 417, 420, 1120,
	1119, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1176, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1177, 459, 449, 1060, 270, 1178, 460,
	461, 1082, 1130, 462, 1144, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1179, 473, 1180, 1159, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1160, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1140, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1181, 525, 526, 527, 528, 1070, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1123, 551, 552, 534, 535, 553, 554, 1182, 555, 556,
	557, 558, 559, 560, 561, 1138, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1185, 569, 570,
	571, 572, 1161, 576, 577, 0, 578, 579, 1058, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1150, 1151, 1152, 1153, 0, 597, 0,
	589, 590, 591, 1162, 592, 1163, 1080, 593, 594, 595,
	596, 0, 598, 599, 0, 1064, 600, 601, 602, 604,
	605, 603, 606, 1124, 607, 0, 0, 608, 609, 610,
	667, 1147, 1184, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1061, 0, 0, 0, 0, 0, 0, 0, 1057, 0,
	0, 0, 0, 0, 0, 1055, 1056, 0, 0, 0,
	0, 0, 0, 0, 1086, 0, 0, 1607, 1084, 1102,
	1074, 1075, 1076, 1072, 1073, 1085, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1126, 1090, 0, 0, 0, 280, 281, 1166, 282,
	283, 284, 285, 286, 287, 621, 1139, 0, 288, 1146,
	289, 1145, 0, 1156, 290, 291, 292, 293, 294, 295,
	1092, 1125, 1059, 296, 1186, 1187, 628, 0, 297, 298,
	1132, 0, 1113, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1167, 321, 322, 323, 1116, 1114, 1115, 1122, 1118,
	1117, 1121, 324, 325, 326, 327, 328, 1149, 329, 1143,
	1142, 1063, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1134, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1069, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1157,
	1158, 360, 1081, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1141, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1168, 367, 368, 1154, 1155, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1164, 0,
	1091, 379, 0, 380, 381, 382, 383, 384, 1127, 1128,
	1131, 463, 1170, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1169, 395, 1136, 1137, 0, 1097, 0, 397, 398, 1171,
	1129, 1172, 399, 400, 401, 1173, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1165, 1174, 413, 414, 1175, 0, 415, 0,
	0, 0, 416, 417, 420, 1120, 1119, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1176, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1177,
	459, 449, 1060, 270, 1178, 460, 461, 1082, 1130, 462,
	1144, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1179, 473, 1180,
	1159, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1160, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1140,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1181,
	525, 526, 527, 528, 1070, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1123, 551, 552, 534,
	535, 553, 554, 1182, 555, 556, 557, 558, 559, 560,
	561, 1138, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1185, 569, 570, 571, 572, 1161, 576,
	577, 0, 578, 579, 1058, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1150,
	1151, 1152, 1153, 0, 597, 0, 589, 590, 591, 1162,
	592, 1163, 1080, 593, 594, 595, 596, 0, 598, 599,
	0, 1064, 600, 601, 602, 604, 605, 603, 606, 1124,
	607, 0, 0, 608, 609, 610, 667, 1147, 1184, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1061, 0, 0, 0,
	0, 0, 0, 0, 1057, 0, 0, 0, 0, 0,
	0, 1055, 1056, 0, 0, 0, 0, 0, 0, 0,
	1086, 0, 0, 1598, 1084, 1102, 1074, 1075, 1076, 1072,
	1073, 1085, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1126, 1090, 0,
	0, 0, 280, 281, 1166, 282, 283, 284, 285, 286,
	287, 621, 1139, 0, 288, 1146, 289, 1145, 0, 1156,
	290, 291, 292, 293, 294, 295, 1092, 1125, 1059, 296,
	1186, 1187, 628, 0, 297, 298, 1132, 0, 1113, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1167, 321, 322,
	323, 1116, 1114, 1115, 1122, 1118, 1117, 1121, 324, 325,
	326, 327, 328, 1149, 329, 1143, 1142, 1063, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1134, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1069, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1157, 1158, 360, 1081, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1141, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1168, 367,
	368, 1154, 1155, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1164, 0, 1091, 379, 0, 380,
	381, 382, 383, 384, 1127, 1128, 1131, 463, 1170, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1169, 395, 1136, 1137,
	0, 1097, 0, 397, 398, 1171, 1129, 1172, 399, 400,
	401, 1173, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1165, 1174,
	413, 414, 1175, 0, 415, 0, 0, 0, 416, 417,
	420, 1120, 1119, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1176, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1177, 459, 449, 1060, 270,
	1178, 460, 461, 1082, 1130, 462, 1144, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1179, 473, 1180, 1159, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1160,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1140, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1181, 525, 526, 527, 528,
	1070, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1123, 551, 552, 534, 535, 553, 554, 1182,
	555, 556, 557, 558, 559, 560, 561, 1138, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1185,
	569, 570, 571, 572, 1161, 576, 577, 0, 578, 579,
	1058, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1150, 1151, 1152, 1153, 0,
	597, 0, 589, 590, 591, 1162, 592, 1163, 1080, 593,
	594, 595, 596, 0, 598, 599, 0, 1064, 600, 601,
	602, 604, 605, 603, 606, 1124, 607, 0, 0, 608,
	609, 610, 667, 1147, 1184, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1061, 0, 0, 0, 0, 0, 0, 0,
	1057, 0, 0, 0, 0, 0, 0, 1055, 1056, 0,
	0, 0, 0, 0, 0, 0, 1086, 0, 0, 1593,
	1084, 1102, 1074, 1075, 1076, 1072, 1073, 1085, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1126, 1090, 0, 0, 0, 280, 281,
	1166, 282, 283, 284, 285, 286, 287, 621, 1139, 0,
	288, 1146, 289, 1145, 0, 1156, 290, 291, 292, 293,
	294, 295, 1092, 1125, 1059, 296, 1186, 1187, 628, 0,
	297, 298, 1132, 0, 1113, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1167, 321, 322, 323, 1116, 1114, 1115,
	1122, 1118, 1117, 1121, 324, 325, 326, 327, 328, 1149,
	329, 1143, 1142, 1063, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1134, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1069, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1157, 1158, 360, 1081, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1141, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1168, 367, 368, 1154, 1155, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1164, 0, 1091, 379, 0, 380, 381, 382, 383, 384,
	1127, 1128, 1131, 463, 1170, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1169, 395, 1136, 1137, 0, 1097, 0, 397,
	398, 1171, 1129, 1172, 399, 400, 401, 1173, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1165, 1174, 413, 414, 1175, 0,
	415, 0, 0, 0, 416, 417, 420, 1120, 1119, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1176, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1177, 459, 449, 1060, 270, 1178, 460, 461, 1082,
	1130, 462, 1144, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1179,
	473, 1180, 1159, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1160, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1140, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1181, 525, 526, 527, 528, 1070, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1123, 551,
	552, 534, 535, 553, 554, 1182, 555, 556, 557, 558,
	559, 560, 561, 1138, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1185, 569, 570, 571, 572,
	1161, 576, 577, 0, 578, 579, 1058, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1150, 1151, 1152, 1153, 0, 597, 0, 589, 590,
	591, 1162, 592, 1163, 1080, 593, 594, 595, 596, 0,
	598, 599, 0, 1064, 600, 601, 602, 604, 605, 603,
	606, 1124, 607, 0, 0, 608, 609, 610, 667, 1147,
	1184, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1061, 0,
	0, 0, 0, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 0, 1055, 1056, 0, 0, 0, 0, 0,
	0, 0, 1086, 0, 0, 1505, 1084, 1102, 1074, 1075,
	1076, 1072, 1073, 1085, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1126,
	1090, 0, 0, 0, 280, 281, 1166, 282, 283, 284,
	285, 286, 287, 621, 1139, 0, 288, 1146, 289, 1145,
	0, 1156, 290, 291, 292, 293, 294, 295, 1092, 1125,
	1059, 296, 1186, 1187, 628, 0, 297, 298, 1132, 0,
	1113, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1167,
	321, 322, 323, 1116, 1114, 1115, 1122, 1118, 1117, 1121,
	324, 325, 326, 327, 328, 1149, 329, 1143, 1142, 1063,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1134, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1069, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1157, 1158, 360,
	1081, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1141, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1168, 367, 368, 1154, 1155, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1164, 0, 1091, 379,
	0, 380, 381, 382, 383, 384, 1504, 1128, 1131, 463,
	1170, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1169, 395,
	1136, 1137, 0, 1097, 0, 397, 398, 1171, 1129, 1172,
	399, 400, 401, 1173, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1165, 1174, 413, 414, 1175, 0, 415, 0, 0, 0,
	416, 417, 420, 1120, 1119, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1176, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1177, 459, 449,
	1060, 270, 1178, 460, 461, 1082, 1130, 462, 1144, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1179, 473, 1180, 1159, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1160, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1140, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1181, 525, 526,
	527, 528, 1070, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1123, 551, 552, 534, 535, 553,
	554, 1182, 555, 556, 557, 558, 559, 560, 561, 1138,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1185, 569, 570, 571, 572, 1161, 576, 577, 0,
	578, 579, 1058, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1150, 1151, 1152,
	1153, 0, 597, 0, 589, 590, 591, 1162, 592, 1163,
	1080, 593, 594, 595, 596, 0, 598, 599, 0, 1064,
	600, 601, 602, 604, 605, 603, 606, 1124, 607, 0,
	0, 608, 609, 610, 667, 1147, 1184, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1061, 0, 0, 0, 0, 0,
	0, 0, 1057, 0, 0, 0, 0, 0, 0, 1055,
	1056, 0, 0, 0, 0, 0, 0, 0, 1086, 0,
	0, 1499, 1084, 1102, 1074, 1075, 1076, 1072, 1073, 1085,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1126, 1090, 0, 0, 0,
	280, 281, 1166, 282, 283, 284, 285, 286, 287, 621,
	1139, 0, 288, 1146, 289, 1145, 0, 1156, 290, 291,
	292, 293, 294, 295, 1092, 1125, 1059, 296, 1186, 1187,
	628, 0, 297, 298, 1132, 0, 1113, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1167, 321, 322, 323, 1116,
	1114, 1115, 1122, 1118, 1117, 1121, 324, 325, 326, 327,
	328, 1149, 329, 1143, 1142, 1063, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1134, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1069, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1157, 1158, 360, 1081, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1141, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1168, 367, 368, 1154,
	1155, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1164, 0, 1091, 379, 0, 380, 381, 382,
	383, 384, 1498, 1128, 1131, 463, 1170, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1169, 395, 1136, 1137, 0, 1097,
	0, 397, 398, 1171, 1129, 1172, 399, 400, 401, 1173,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1165, 1174, 413, 414,
	1175, 0, 415, 0, 0, 0, 416, 417, 420, 1120,
	1119, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1176, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1177, 459, 449, 1060, 270, 1178, 460,
	461, 1082, 1130, 462, 1144, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1179, 473, 1180, 1159, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1160, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1140, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1181, 525, 526, 527, 528, 1070, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1123, 551, 552, 534, 535, 553, 554, 1182, 555, 556,
	557, 558, 559, 560, 561, 1138, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1185, 569, 570,
	571, 572, 1161, 576, 577, 0, 578, 579, 1058, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1150, 1151, 1152, 1153, 0, 597, 0,
	589, 590, 591, 1162, 592, 1163, 1080, 593, 594, 595,
	596, 0, 598, 599, 0, 1064, 600, 601, 602, 604,
	605, 603, 606, 1124, 607, 0, 0, 608, 609, 610,
	667, 1147, 1184, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1061, 0, 0, 0, 0, 0, 0, 0, 1057, 0,
	0, 0, 0, 0, 0, 1055, 1056, 0, 0, 0,
	0, 0, 0, 0, 1086, 0, 0, 1492, 1084, 1102,
	1074, 1075, 1076, 1072, 1073, 1085, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1126, 1090, 0, 0, 0, 280, 281, 1166, 282,
	283, 284, 285, 286, 287, 621, 1139, 0, 288, 1146,
	289, 1145, 0, 1156, 290, 291, 292, 293, 294, 295,
	1092, 1125, 1059, 296, 1186, 1187, 628, 0, 297, 298,
	1132, 0, 1113, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1167, 321, 322, 323, 1116, 1114, 1115, 1122, 1118,
	1117, 1121, 324, 325, 326, 327, 328, 1149, 329, 1143,
	1142, 1063, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1134, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1069, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1157,
	1158, 360, 1081, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1141, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1168, 367, 368, 1154, 1155, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1164, 0,
	1091, 379, 0, 380, 381, 382, 383, 384, 1127, 1128,
	1131, 463, 1170, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1169, 395, 1136, 1137, 0, 1097, 0, 397, 398, 1171,
	1129, 1172, 399, 400, 401, 1173, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1165, 1174, 413, 414, 1175, 0, 415, 0,
	0, 0, 416, 417, 420, 1120, 1119, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1176, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1177,
	459, 449, 1060, 270, 1178, 460, 461, 1082, 1130, 462,
	1144, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1179, 473, 1180,
	1159, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1160, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1140,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1181,
	525, 526, 527, 528, 1070, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1123, 551, 552, 534,
	535, 553, 554, 1182, 555, 556, 557, 558, 559, 560,
	561, 1138, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1185, 569, 570, 571, 572, 1161, 576,
	577, 0, 578, 579, 1058, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1150,
	1151, 1152, 1153, 0, 597, 0, 589, 590, 591, 1162,
	592, 1163, 1080, 593, 594, 595, 596, 0, 598, 599,
	0, 1064, 600, 601, 602, 604, 605, 603, 606, 1124,
	607, 0, 0, 608, 609, 610, 667, 1147, 1184, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1061, 0, 0, 0,
	0, 0, 0, 0, 1057, 0, 0, 0, 0, 0,
	0, 1055, 1056, 0, 0, 0, 0, 0, 0, 0,
	1086, 0, 0, 1312, 1084, 1102, 1074, 1075, 1076, 1072,
	1073, 1085, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1126, 1090, 0,
	0, 0, 280, 281, 1166, 282, 283, 284, 285, 286,
	287, 621, 1139, 0, 288, 1146, 289, 1145, 0, 1156,
	290, 291, 292, 293, 294, 295, 1092, 1125, 1059, 296,
	1186, 1187, 628, 0, 297, 298, 1132, 0, 1113, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1167, 321, 322,
	323, 1116, 1114, 1115, 1122, 1118, 1117, 1121, 324, 325,
	326, 327, 328, 1149, 329, 1143, 1142, 1063, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1134, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1069, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1157, 1158, 360, 1081, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1141, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1168, 367,
	368, 1154, 1155, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1164, 0, 1091, 379, 0, 380,
	381, 382, 383, 384, 1127, 1128, 1131, 463, 1170, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1169, 395, 1136, 1137,
	0, 1097, 0, 397, 398, 1171, 1129, 1172, 399, 400,
	401, 1173, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1165, 1174,
	413, 414, 1175, 0, 415, 0, 0, 0, 416, 417,
	420, 1120, 1119, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1176, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1177, 459, 449, 1060, 270,
	1178, 460, 461, 1082, 1130, 462, 1144, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1179, 473, 1180, 1159, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1160,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1140, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1181, 525, 526, 527, 528,
	1070, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1123, 551, 552, 534, 535, 553, 554, 1182,
	555, 556, 557, 558, 559, 560, 561, 1138, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1185,
	569, 570, 571, 572, 1161, 576, 577, 0, 578, 579,
	1058, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1150, 1151, 1152, 1153, 0,
	597, 0, 589, 590, 591, 1162, 592, 1163, 1080, 593,
	594, 595, 596, 0, 598, 599, 0, 1064, 600, 601,
	602, 604, 605, 603, 606, 1124, 607, 0, 0, 608,
	609, 610, 667, 1147, 1184, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1061, 0, 0, 0, 0, 0, 0, 0,
	1057, 0, 0, 0, 0, 0, 0, 1055, 1056, 1102,
	1074, 1075, 1076, 1072, 1073, 1085, 1086, 0, 0, 0,
	1084, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1126, 1090, 0, 0, 0, 280, 281, 1166, 282,
	283, 284, 285, 286, 287, 621, 1139, 0, 288, 1146,
	289, 1145, 0, 1156, 290, 291, 292, 293, 294, 295,
	1092, 1125, 1059, 296, 1186, 1187, 628, 0, 297, 298,
	1132, 0, 1113, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1167, 321, 322, 323, 1116, 1114, 1115, 1122, 1118,
	1117, 1121, 324, 325, 326, 327, 328, 1149, 329, 1143,
	1142, 1063, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1134, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1069, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1157,
	1158, 360, 1081, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1141, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1168, 367, 368, 1154, 1155, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1164, 0,
	1091, 379, 0, 380, 381, 382, 383, 384, 1127, 1128,
	1131, 463, 1170, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1169, 395, 1136, 1137, 0, 1097, 0, 397, 398, 1171,
	1129, 1172, 399, 400, 401, 1173, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1165, 1174, 413, 414, 1175, 0, 415, 0,
	0, 0, 416, 417, 420, 1120, 1119, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1176, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1177,
	459, 449, 1060, 270, 1178, 460, 461, 1082, 1130, 462,
	1144, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1179, 473, 1180,
	1159, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1160, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1140,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1181,
	525, 526, 527, 528, 1070, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1123, 551, 552, 534,
	535, 553, 554, 1182, 555, 556, 557, 558, 559, 560,
	561, 1138, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1185, 569, 570, 571, 572, 1161, 576,
	577, 0, 578, 579, 1058, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1150,
	1151, 1152, 1153, 0, 597, 0, 589, 590, 591, 1162,
	592, 1163, 1080, 593, 594, 595, 596, 0, 598, 599,
	0, 1064, 600, 601, 602, 604, 605, 603, 606, 1124,
	607, 0, 0, 608, 609, 610, 667, 1147, 1184, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1061, 0, 0, 0,
	0, 0, 0, 0, 1057, 0, 0, 0, 0, 0,
	0, 1055, 1056, 1102, 1074, 1075, 1076, 1072, 1073, 1085,
	1086, 0, 0, 0, 1084, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1126, 1090, 0, 0, 0,
	280, 281, 1166, 282, 283, 284, 285, 286, 287, 621,
	1139, 0, 288, 1146, 289, 1145, 0, 1156, 290, 291,
	292, 293, 294, 295, 1092, 1125, 1059, 296, 1186, 1187,
	628, 0, 297, 298, 1132, 0, 1113, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1167, 321, 322, 4499, 1116,
	1114, 1115, 1122, 1118, 1117, 1121, 324, 325, 326, 327,
	328, 1149, 329, 1143, 1142, 1063, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1134, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1069, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1157, 1158, 360, 1081, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1141, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1168, 367, 368, 1154,
	1155, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1164, 0, 1091, 379, 0, 380, 381, 382,
	383, 384, 1127, 1128, 1131, 463, 1170, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1169, 395, 1136, 1137, 0, 1097,
	0, 397, 398, 1171, 1129, 1172, 399, 400, 401, 1173,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1165, 1174, 413, 414,
	1175, 0, 415, 0, 0, 0, 416, 417, 420, 1120,
	1119, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1176, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1177, 459, 449, 1060, 270, 1178, 460,
	461, 1082, 1130, 462, 1144, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1179, 473, 1180, 1159, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1160, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1140, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1181, 525, 526, 527, 528, 1070, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1123, 551, 552, 534, 535, 553, 554, 1182, 555, 556,
	557, 558, 559, 560, 561, 1138, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1185, 569, 570,
	571, 572, 1161, 576, 577, 0, 578, 579, 1058, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1150, 1151, 1152, 1153, 0, 597, 0,
	589, 590, 591, 1162, 592, 1163, 1080, 593, 594, 595,
	596, 0, 4498, 599, 0, 1064, 600, 601, 602, 604,
	605, 603, 606, 1124, 607, 0, 0, 608, 609, 610,
	667, 1147, 1184, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1061, 0, 0, 0, 0, 0, 0, 0, 1057, 0,
	0, 0, 0, 0, 0, 1055, 1056, 1102, 1074, 1075,
	1076, 1072, 1073, 1085, 1086, 0, 0, 0, 1084, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1126,
	1090, 0, 0, 0, 280, 281, 1166, 282, 283, 284,
	285, 286, 287, 4497, 1139, 0, 288, 1146, 289, 1145,
	0, 1156, 290, 291, 292, 293, 294, 295, 1092, 1125,
	1059, 296, 1186, 1187, 628, 0, 297, 298, 1132, 0,
	1113, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1167,
	321, 322, 4499, 1116, 1114, 1115, 1122, 1118, 1117, 1121,
	324, 325, 326, 327, 328, 1149, 329, 1143, 1142, 1063,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1134, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1069, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1157, 1158, 360,
	1081, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1141, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1168, 367, 368, 1154, 1155, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1164, 0, 1091, 379,
	0, 380, 381, 382, 383, 384, 1127, 1128, 1131, 463,
	1170, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1169, 395,
	1136, 1137, 0, 1097, 0, 397, 398, 1171, 1129, 1172,
	399, 400, 401, 1173, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1165, 1174, 413, 414, 1175, 0, 415, 0, 0, 0,
	416, 417, 420, 1120, 1119, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1176, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1177, 459, 449,
	1060, 270, 1178, 460, 461, 1082, 1130, 462, 1144, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1179, 473, 1180, 1159, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1160, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1140, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1181, 525, 526,
	527, 528, 1070, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1123, 551, 552, 534, 535, 553,
	554, 1182, 555, 556, 557, 558, 559, 560, 561, 1138,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1185, 569, 570, 571, 572, 1161, 576, 577, 0,
	578, 579, 1058, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1150, 1151, 1152,
	1153, 0, 597, 0, 589, 590, 591, 1162, 592, 1163,
	1080, 593, 594, 595, 596, 0, 4498, 599, 0, 1064,
	600, 601, 602, 604, 605, 603, 606, 1124, 607, 0,
	0, 608, 609, 610, 667, 1147, 1184, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1061, 0, 0, 0, 0, 0,
	0, 0, 1057, 0, 0, 0, 0, 0, 0, 1055,
	1056, 1102, 1074, 1075, 1076, 1072, 1073, 1085, 1086, 0,
	0, 0, 1084, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1126, 1090, 0, 0, 0, 280, 281,
	1166, 282, 283, 284, 285, 286, 287, 621, 1139, 0,
	288, 1146, 289, 1145, 0, 1156, 290, 291, 292, 293,
	294, 295, 1092, 1125, 1059, 296, 1186, 1187, 628, 0,
	297, 298, 1132, 0, 1113, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1167, 321, 4158, 323, 1116, 1114, 1115,
	1122, 1118, 1117, 1121, 324, 325, 326, 327, 328, 1149,
	329, 1143, 1142, 1063, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1134, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1069, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1157, 1158, 360, 1081, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1141, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1168, 367, 368, 1154, 1155, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1164, 0, 4159, 379, 0, 380, 381, 382, 383, 384,
	1127, 1128, 1131, 463, 1170, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1169, 395, 1136, 1137, 0, 1097, 0, 397,
	398, 1171, 1129, 1172, 399, 400, 401, 1173, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1165, 1174, 413, 414, 1175, 0,
	415, 0, 0, 0, 416, 417, 420, 1120, 1119, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1176, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1177, 459, 449, 1060, 270, 1178, 460, 461, 1082,
	1130, 462, 1144, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1179,
	473, 1180, 1159, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1160, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1140, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1181, 525, 526, 527, 4157, 1070, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1123, 551,
	552, 534, 535, 553, 554, 1182, 555, 556, 557, 558,
	559, 560, 561, 1138, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1185, 569, 570, 571, 572,
	1161, 576, 577, 0, 578, 579, 1058, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1150, 1151, 1152, 1153, 0, 597, 0, 589, 590,
	591, 1162, 592, 1163, 1080, 593, 594, 595, 596, 0,
	598, 599, 0, 1064, 600, 601, 602, 604, 605, 603,
	606, 1124, 607, 0, 0, 608, 609, 610, 667, 1147,
	1184, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1061, 0,
	0, 0, 0, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 0, 1055, 1056, 1102, 1074, 1075, 1076, 3044,
	3045, 1085, 1086, 0, 0, 0, 1084, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1126, 1090, 0,
	0, 0, 280, 281, 1166, 282, 283, 284, 285, 286,
	287, 621, 1139, 0, 288, 1146, 289, 1145, 0, 1156,
	290, 291, 292, 293, 294, 295, 1092, 1125, 1059, 296,
	1186, 1187, 628, 0, 297, 298, 1132, 0, 1113, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1167, 321, 322,
	323, 1116, 1114, 1115, 1122, 1118, 1117, 1121, 324, 325,
	326, 327, 328, 1149, 329, 1143, 1142, 1063, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1134, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1069, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1157, 1158, 360, 1081, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1141, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1168, 367,
	368, 1154, 1155, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1164, 0, 1091, 379, 0, 380,
	381, 382, 383, 384, 1127, 1128, 1131, 463, 1170, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1169, 395, 1136, 1137,
	0, 1097, 0, 397, 398, 1171, 1129, 1172, 399, 400,
	401, 1173, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1165, 1174,
	413, 414, 1175, 0, 415, 0, 0, 0, 416, 417,
	420, 1120, 1119, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1176, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1177, 459, 449, 1060, 270,
	1178, 460, 461, 1082, 1130, 462, 1144, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1179, 473, 1180, 1159, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1160,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 1140, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1181, 525, 526, 527, 528,
	1070, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1123, 551, 552, 534, 535, 553, 554, 1182,
	555, 556, 557, 558, 559, 560, 561, 1138, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 1185,
	569, 570, 571, 572, 1161, 576, 577, 0, 578, 579,
	1058, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 1150, 1151, 1152, 1153, 0,
	597, 0, 589, 590, 591, 1162, 592, 1163, 1080, 593,
	594, 595, 596, 0, 598, 599, 0, 1064, 600, 601,
	602, 604, 605, 603, 606, 1124, 607, 0, 0, 608,
	609, 610, 667, 1147, 1184, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 1061, 0, 0, 0, 0, 0, 0, 0,
	1057, 0, 0, 0, 0, 0, 0, 1055, 1056, 1102,
	1074, 1075, 1076, 3042, 3043, 1085, 1086, 0, 0, 0,
	1084, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1126, 1090, 0, 0, 0, 280, 281, 1166, 282,
	283, 284, 285, 286, 287, 621, 1139, 0, 288, 1146,
	289, 1145, 0, 1156, 290, 291, 292, 293, 294, 295,
	1092, 1125, 1059, 296, 1186, 1187, 628, 0, 297, 298,
	1132, 0, 1113, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1167, 321, 322, 323, 1116, 1114, 1115, 1122, 1118,
	1117, 1121, 324, 325, 326, 327, 328, 1149, 329, 1143,
	1142, 1063, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1134, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1069, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1157,
	1158, 360, 1081, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1141, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1168, 367, 368, 1154, 1155, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1164, 0,
	1091, 379, 0, 380, 381, 382, 383, 384, 1127, 1128,
	1131, 463, 1170, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1169, 395, 1136, 1137, 0, 1097, 0, 397, 398, 1171,
	1129, 1172, 399, 400, 401, 1173, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1165, 1174, 413, 414, 1175, 0, 415, 0,
	0, 0, 416, 417, 420, 1120, 1119, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1176, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1177,
	459, 449, 1060, 270, 1178, 460, 461, 1082, 1130, 462,
	1144, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1179, 473, 1180,
	1159, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1160, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 1140,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1181,
	525, 526, 527, 528, 1070, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1123, 551, 552, 534,
	535, 553, 554, 1182, 555, 556, 557, 558, 559, 560,
	561, 1138, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 1185, 569, 570, 571, 572, 1161, 576,
	577, 0, 578, 579, 1058, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 1150,
	1151, 1152, 1153, 0, 597, 0, 589, 590, 591, 1162,
	592, 1163, 1080, 593, 594, 595, 596, 0, 598, 599,
	0, 1064, 600, 601, 602, 604, 605, 603, 606, 1124,
	607, 0, 0, 608, 609, 610, 667, 1147, 1184, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1061, 0, 0, 0,
	0, 0, 0, 0, 1057, 0, 0, 0, 0, 0,
	0, 1055, 1056, 1102, 1074, 1075, 1076, 1072, 1073, 1085,
	1086, 0, 0, 0, 1084, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1126, 1090, 0, 0, 0,
	280, 281, 1166, 282, 283, 284, 285, 286, 287, 621,
	1139, 0, 288, 1146, 289, 1145, 0, 1156, 290, 291,
	292, 293, 294, 295, 1092, 1125, 1059, 296, 1186, 1187,
	628, 0, 297, 298, 1132, 0, 1113, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1167, 321, 322, 323, 1116,
	1114, 1115, 1122, 1118, 1117, 1121, 324, 325, 326, 327,
	328, 1149, 329, 1143, 1142, 1063, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1134, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1069, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1157, 1158, 360, 1081, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1141, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1168, 367, 368, 1154,
	1155, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1164, 0, 1091, 379, 0, 380, 381, 382,
	383, 384, 1127, 1128, 1131, 463, 1170, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 1169, 395, 1136, 1137, 0, 1097,
	0, 397, 398, 1171, 1129, 1172, 399, 400, 401, 1173,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 1165, 1174, 413, 414,
	1175, 0, 415, 0, 0, 0, 416, 417, 420, 1120,
	1119, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1176, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1177, 459, 449, 1060, 270, 1178, 460,
	461, 1082, 1130, 462, 1144, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1179, 473, 1180, 1159, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 1160, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 1140, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1181, 525, 526, 527, 528, 1070, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	1123, 551, 552, 534, 535, 553, 554, 1182, 555, 556,
	557, 558, 559, 560, 561, 1138, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 1185, 569, 570,
	571, 572, 1161, 576, 577, 0, 578, 579, 1058, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 1150, 1151, 1152, 1153, 0, 597, 0,
	589, 590, 591, 1162, 592, 1163, 1080, 593, 594, 595,
	596, 0, 598, 599, 0, 1064, 600, 601, 602, 604,
	605, 603, 606, 1124, 607, 0, 0, 608, 609, 610,
	667, 1147, 1184, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1061, 0, 0, 0, 0, 0, 0, 0, 1057, 0,
	0, 0, 0, 0, 0, 2371, 2372, 1102, 1074, 1075,
	1076, 1072, 1073, 1085, 1086, 0, 0, 0, 1084, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1126,
	1090, 0, 0, 0, 280, 281, 1166, 282, 283, 284,
	285, 286, 287, 621, 1139, 0, 288, 1146, 289, 1145,
	0, 1156, 290, 291, 292, 293, 294, 295, 1092, 1125,
	0, 296, 1186, 1187, 628, 0, 297, 298, 1132, 0,
	1113, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1167,
	321, 322, 323, 1116, 1114, 1115, 1122, 1118, 1117, 1121,
	324, 325, 326, 327, 328, 1149, 329, 1143, 1142, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1134, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1069, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1157, 1158, 360,
	1081, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1141, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1168, 367, 368, 1154, 1155, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1164, 0, 1091, 379,
	0, 380, 381, 382, 383, 384, 1127, 1128, 1131, 463,
	1170, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 1169, 395,
	1136, 1137, 0, 1097, 0, 397, 398, 1171, 1129, 1172,
	399, 400, 401, 1173, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	1165, 1174, 413, 414, 1175, 0, 415, 0, 0, 0,
	416, 417, 420, 1120, 1119, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1176, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1177, 459, 449,
	0, 270, 1178, 460, 461, 1082, 1130, 462, 1144, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1179, 473, 1180, 1159, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 1160, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1140, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1181, 525, 526,
	527, 528, 1070, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 1123, 551, 552, 534, 535, 553,
	554, 1182, 555, 556, 557, 558, 559, 560, 561, 1138,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1185, 569, 570, 571, 572, 1161, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1150, 1151, 1152,
	1153, 0, 597, 0, 589, 590, 591, 1162, 592, 1163,
	1080, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 1124, 607, 0,
	0, 608, 609, 610, 667, 1147, 1184, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1102, 1074, 1075, 1076, 1072, 1073,
	1085, 0, 2591, 0, 0, 0, 0, 0, 0, 2589,
	2590, 271, 273, 272, 274, 275, 276, 277, 1086, 278,
	279, 0, 1084, 0, 0, 0, 1126, 1090, 0, 0,
	0, 280, 281, 1166, 282, 283, 284, 285, 286, 287,
	621, 1139, 0, 288, 1146, 289, 1145, 0, 1156, 290,
	291, 292, 293, 294, 295, 1092, 1125, 0, 296, 1186,
	1187, 628, 0, 297, 298, 1132, 0, 1113, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1167, 321, 322, 323,
	1116, 1114, 1115, 1122, 1118, 1117, 1121, 324, 325, 326,
	327, 328, 1149, 329, 1143, 1142, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1134, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1069, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1157, 1158, 360, 1081, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 1141, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1168, 367, 368,
	1154, 1155, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1164, 0, 1091, 379, 0, 380, 381,
	382, 383, 384, 1127, 1128, 1131, 463, 1170, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 1169, 395, 1136, 1137, 0,
	1097, 0, 397, 398, 1171, 1129, 1172, 399, 400, 401,
	1173, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 1165, 1174, 413,
	414, 1175, 0, 415, 0, 0, 0, 416, 417, 420,
	1120, 1119, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1176, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1177, 459, 449, 0, 270, 1178,
	460, 461, 1082, 1130, 462, 1144, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1179, 473, 1180, 1159, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 1160, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 1140, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1181, 525, 526, 527, 528, 3037,
	3038, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 1123, 551, 552, 534, 535, 553, 554, 1182, 555,
	556, 557, 558, 559, 560, 561, 1138, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 1185, 569,
	570, 571, 572, 1161, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 1150, 1151, 1152, 1153, 0, 597,
	0, 589, 590, 591, 1162, 592, 1163, 1080, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 1124, 607, 0, 0, 608, 609,
	610, 667, 1147, 1184, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1102, 1074, 1075, 1076, 1072, 1073, 1085, 0, 0,
	0, 0, 0, 0, 0, 0, 2076, 2077, 271, 273,
	272, 274, 275, 276, 277, 1086, 278, 279, 0, 1084,
	0, 0, 0, 1126, 1090, 0, 0, 0, 280, 281,
	1166, 282, 283, 284, 285, 286, 287, 0, 1139, 0,
	288, 1146, 289, 1145, 0, 1156, 290, 291, 292, 293,
	294, 295, 1092, 1125, 1059, 296, 1186, 1187, 628, 0,
	297, 298, 1132, 0, 1113, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1167, 321, 322, 4499, 1116, 1114, 1115,
	1122, 1118, 1117, 1121, 324, 325, 326, 327, 328, 1149,
	329, 1143, 1142, 1063, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1134, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1069, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1157, 1158, 360, 1081, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1141, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1168, 367, 368, 1154, 1155, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1164, 0, 1091, 379, 0, 380, 381, 382, 383, 384,
	1127, 1128, 1131, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 1169, 395, 1136, 1137, 0, 1097, 0, 397,
	398, 0, 1129, 0, 399, 400, 401, 1173, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 1165, 1174, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 1120, 1119, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1176, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1177, 459, 449, 1060, 270, 0, 460, 461, 1082,
	1130, 462, 1144, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1179,
	473, 1180, 1159, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 1160, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 1140, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1181, 525, 526, 527, 528, 1070, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 1123, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 1138, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 1185, 569, 570, 571, 572,
	1161, 576, 577, 0, 578, 579, 1058, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 1150, 1151, 1152, 1153, 0, 597, 0, 589, 590,
	591, 1162, 592, 1163, 1080, 593, 594, 595, 596, 0,
	4498, 599, 0, 1064, 600, 601, 602, 604, 605, 603,
	606, 1124, 607, 0, 0, 608, 609, 610, 667, 1147,
	1184, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1048, 0,
	1224, 0, 0, 1055, 1056, 0, 0, 0, 0, 0,
	0, 0, 1086, 0, 0, 0, 1084, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1126, 0, 0, 0, 0, 280, 281, 1166,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 1125, 0, 296, 626, 627, 628, 0, 297,
	298, 1132, 0, 1113, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1167, 321, 322, 323, 1116, 1114, 1115, 1122,
	1118, 1117, 1121, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1157, 1158, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1168, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1164,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 1127,
	1128, 1131, 463, 1170, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1169, 395, 643, 644, 0, 645, 0, 397, 398,
	1171, 1129, 1172, 399, 400, 401, 1173, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 1210, 409, 411,
	410, 0, 412, 1165, 1174, 413, 414, 1175, 0, 415,
	0, 0, 0, 416, 417, 420, 1120, 1119, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1176, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1177, 459, 449, 0, 270, 1178, 460, 461, 0, 1130,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 1216,
	468, 469, 470, 0, 0, 471, 472, 650, 1179, 473,
	1180, 1159, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1160, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1181, 525, 526, 527, 528, 657, 1218, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	230, 546, 547, 545, 548, 549, 550, 1123, 551, 552,
	534, 535, 553, 554, 1182, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 1161,
	576, 577, 0, 578, 579, 0, 575, 566, 232, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	1162, 592, 1163, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	1124, 607, 0, 0, 608, 609, 610, 1582, 668, 669,
	0, 612, 611, 613, 670, 1224, 614, 0, 0, 0,
	224, 615, 616, 671, 617, 618, 619, 0, 0, 225,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1126, 0, 1214,
	0, 1919, 280, 281, 1166, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 1125, 0, 296,
	626, 627, 628, 0, 297, 298, 1132, 0, 1113, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1167, 321, 322,
	323, 1116, 1114, 1115, 1122, 1118, 1117, 1121, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1157, 1158, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1168, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1164, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 1127, 1128, 1131, 463, 1170, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1169, 395, 643, 644,
	0, 645, 0, 397, 398, 1171, 1129, 1172, 399, 400,
	401, 1173, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 1210, 409, 411, 410, 0, 412, 1165, 1174,
	413, 414, 1175, 0, 415, 0, 0, 0, 416, 417,
	420, 1120, 1119, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1176, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1177, 459, 449, 0, 270,
	1178, 460, 461, 0, 1130, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 1216, 468, 469, 470, 0, 0,
	471, 472, 650, 1179, 473, 1180, 1159, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1160,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1181, 525, 526, 527, 528,
	657, 1218, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 230, 546, 547, 545, 548,
	549, 550, 1123, 551, 552, 534, 535, 553, 554, 1182,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 1161, 576, 577, 0, 578, 579,
	0, 575, 566, 232, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 1162, 592, 1163, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 1124, 607, 0, 0, 608,
	609, 610, 1582, 668, 669, 0, 612, 611, 613, 670,
	0, 614, 0, 0, 0, 224, 615, 616, 671, 617,
	618, 619, 0, 0, 225, 0, 0, 0, 3197, 0,
	1224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1214, 0, 1919, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1126, 0, 0, 0, 0, 280, 281, 1166,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 1125, 0, 296, 626, 627, 628, 0, 297,
	298, 1132, 0, 1113, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1167, 321, 322, 323, 1116, 1114, 1115, 1122,
	1118, 1117, 1121, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1157, 1158, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1168, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1164,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 1127,
	1128, 1131, 463, 1170, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1169, 395, 643, 644, 0, 645, 0, 397, 398,
	1171, 1129, 1172, 399, 400, 401, 1173, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 1210, 409, 411,
	410, 0, 412, 1165, 1174, 413, 414, 1175, 0, 415,
	0, 0, 0, 416, 417, 420, 1120, 1119, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1176, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1177, 459, 449, 0, 270, 1178, 460, 461, 0, 1130,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 1216,
	468, 469, 470, 0, 0, 471, 472, 650, 1179, 473,
	1180, 1159, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1160, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1181, 525, 526, 527, 528, 657, 1218, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1123, 551, 552,
	534, 535, 553, 554, 1182, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 1161,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	1162, 592, 1163, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	1124, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 0, 614, 0, 1206, 0,
	1224, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 1214,
	0, 1212, 1126, 0, 0, 0, 0, 280, 281, 1166,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 1125, 0, 296, 626, 627, 628, 0, 297,
	298, 1132, 0, 1113, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1167, 321, 322, 323, 1116, 1114, 1115, 1122,
	1118, 1117, 1121, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1157, 1158, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1168, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1164,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 1127,
	1128, 1131, 463, 1170, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1169, 395, 643, 644, 0, 645, 0, 397, 398,
	1171, 1129, 1172, 399, 400, 401, 1173, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 1210, 409, 411,
	410, 0, 412, 1165, 1174, 413, 414, 1175, 0, 415,
	0, 0, 0, 416, 417, 420, 1120, 1119, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1176, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1177, 459, 449, 0, 270, 1178, 460, 461, 0, 1130,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 1216,
	468, 469, 470, 0, 0, 471, 472, 650, 1179, 473,
	1180, 1159, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1160, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1181, 525, 526, 527, 528, 657, 1218, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1123, 551, 552,
	534, 535, 553, 554, 1182, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 1161,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	1162, 592, 1163, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	1124, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 1224, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1126, 0, 1214,
	0, 1212, 280, 281, 1166, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 1125, 0, 296,
	626, 627, 628, 0, 297, 298, 1132, 0, 1113, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1167, 321, 322,
	323, 1116, 1114, 1115, 1122, 1118, 1117, 1121, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1157, 1158, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1168, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1164, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 1127, 1128, 1131, 463, 1170, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1169, 395, 643, 644,
	0, 645, 0, 397, 398, 1171, 1129, 1172, 399, 400,
	401, 1173, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 1210, 409, 411, 410, 0, 412, 1165, 1174,
	413, 414, 1175, 0, 415, 0, 0, 0, 416, 417,
	420, 1120, 1119, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1176, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1177, 459, 449, 0, 270,
	1178, 460, 461, 0, 1130, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 1216, 468, 469, 470, 0, 0,
	471, 472, 650, 1179, 473, 1180, 1159, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1160,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1181, 525, 526, 527, 528,
	657, 1218, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1123, 551, 552, 534, 535, 553, 554, 1182,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 1161, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 1162, 592, 1163, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 1124, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	1224, 614, 0, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1126, 0, 1214, 0, 1212, 280, 281, 1166,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 1125, 0, 296, 626, 627, 628, 0, 297,
	298, 1132, 0, 1113, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1167, 321, 322, 323, 1116, 1114, 1115, 1122,
	1118, 1117, 1121, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1157, 1158, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1168, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1164,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 1127,
	1128, 1131, 463, 1170, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 1169, 395, 643, 644, 0, 645, 0, 397, 398,
	1171, 1129, 1172, 399, 400, 401, 1173, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 1165, 1174, 413, 414, 1175, 0, 415,
	0, 0, 0, 416, 417, 420, 1120, 1119, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1176, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1177, 459, 449, 0, 270, 1178, 460, 461, 0, 1130,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1179, 473,
	1180, 1159, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 1160, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1181, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 1123, 551, 552,
	534, 535, 553, 554, 1182, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 1161,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	1162, 592, 1163, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	1124, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 1224, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1126, 0, 0,
	0, 3989, 280, 281, 1166, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 1125, 0, 296,
	626, 627, 628, 0, 297, 298, 1132, 0, 1113, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1167, 321, 322,
	323, 1116, 1114, 1115, 1122, 1118, 1117, 1121, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1157, 1158, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1168, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1164, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 1127, 1128, 1131, 463, 1170, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 1169, 395, 643, 644,
	0, 645, 0, 397, 398, 1171, 1129, 1172, 399, 400,
	401, 1173, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 1165, 1174,
	413, 414, 1175, 0, 415, 0, 0, 0, 416, 417,
	420, 1120, 1119, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 1176, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 1177, 459, 449, 0, 270,
	1178, 460, 461, 0, 1130, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 1179, 473, 1180, 1159, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 1160,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 1181, 525, 526, 527, 528,
	657, 1218, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 1123, 551, 552, 534, 535, 553, 554, 1182,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 1161, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 1162, 592, 1163, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 1124, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	1048, 614, 1305, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 1818, 0, 0, 280,
	281, 1166, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 1310, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1167, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1168, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 1170, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 1169, 395, 643, 644, 0, 645, 0,
	397, 398, 1171, 646, 1172, 399, 400, 401, 1173, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 1174, 413, 414, 1175,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 1176,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 1177, 459, 449, 0, 0, 1178, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	1179, 473, 1180, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 1181, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 230, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 1182, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	232, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 1582,
	668, 669, 0, 612, 611, 613, 670, 1579, 614, 1305,
	0, 0, 224, 615, 616, 671, 617, 618, 619, 0,
	0, 225, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 186, 0, 0, 280, 281, 1166, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 1310, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1167, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1168, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 1170, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	1169, 395, 643, 644, 0, 645, 0, 397, 398, 1171,
	646, 1172, 399, 400, 401, 1173, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 1174, 413, 414, 1175, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1176, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1177,
	459, 449, 0, 0, 1178, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1179, 473, 1180,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1181,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 230,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 1182, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 232, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 1582, 668, 669, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 224,
	615, 616, 671, 617, 618, 619, 1305, 1304, 225, 0,
	0, 0, 1302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	186, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 1166, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 1310,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1167, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1168,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 1170,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 1169, 395, 643,
	644, 0, 645, 0, 397, 398, 1171, 646, 1172, 399,
	400, 401, 1173, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	1174, 413, 414, 1175, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1176, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1177, 459, 449, 0,
	0, 1178, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1179, 473, 1180, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1181, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	1182, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1305, 1304, 0, 0, 0, 0, 1302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 1604, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 1166, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 1310, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1167, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1168, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 1170, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 1169, 395, 643, 644, 0, 645,
	0, 397, 398, 1171, 646, 1172, 399, 400, 401, 1173,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 1174, 413, 414,
	1175, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1176, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1177, 459, 449, 0, 0, 1178, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1179, 473, 1180, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1181, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 1182, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	1305, 1304, 0, 0, 0, 0, 1302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 3480, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 1166,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 1310, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1167, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1168, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 1170, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 1169, 395, 643, 644, 0, 645, 0, 397, 398,
	1171, 646, 1172, 399, 400, 401, 1173, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 1174, 413, 414, 1175, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1176, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1177, 459, 449, 0, 0, 1178, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1179, 473,
	1180, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	2259, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1181, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 1182, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1305, 2173, 0,
	0, 0, 0, 2174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 1604, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 1166, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	1310, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1167,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1168, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	1170, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 1169, 395,
	643, 644, 0, 645, 0, 397, 398, 1171, 646, 1172,
	399, 400, 401, 1173, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 2172, 411, 410, 0, 412,
	647, 1174, 413, 414, 1175, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1176, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1177, 459, 449,
	0, 0, 1178, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1179, 473, 1180, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1181, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 1182, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1305, 1304, 0, 0, 0, 0,
	1302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 1604, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 1166, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 1310, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1167, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1168, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 1170, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 1169, 395, 643, 644, 0,
	645, 0, 397, 398, 1171, 646, 1172, 399, 400, 401,
	1173, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 1174, 413,
	414, 1175, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1176, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1177, 459, 449, 0, 0, 1178,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1179, 473, 1180, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1181, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 1182, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 1224,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1126, 0, 0, 0, 1588, 280, 281, 1166, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 1125, 0, 296, 626, 627, 628, 0, 297, 298,
	1132, 0, 1113, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1167, 321, 322, 323, 1116, 1114, 1115, 1122, 1118,
	1117, 1121, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1157,
	1158, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1168, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1164, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 1127, 1128,
	1131, 463, 1170, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	1169, 395, 643, 644, 0, 645, 0, 397, 398, 1171,
	1129, 1172, 399, 400, 401, 1173, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 1165, 1174, 413, 414, 1175, 0, 415, 0,
	0, 0, 416, 417, 420, 1120, 1119, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1176, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1177,
	459, 449, 0, 270, 1178, 460, 461, 0, 1130, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1179, 473, 1180,
	1159, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 1160, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1181,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 1123, 551, 552, 534,
	535, 553, 554, 1182, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 1161, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 1162,
	592, 1163, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 1124,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 1048, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 230, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 232, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 1582, 668, 669, 0, 612, 611, 613,
	670, 265, 614, 0, 0, 0, 224, 615, 616, 671,
	617, 618, 619, 0, 0, 225, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 186, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 0, 614, 265, 2950,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 1933, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 265, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 4655,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 3430, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 1576, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 265, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 2938, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 265, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 3587,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 889, 614,
	794, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 2250, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 801, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 887, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 799, 580,
	581, 582, 583, 584, 800, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 792, 614, 794, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 804, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 801, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 799, 580, 581, 582, 583,
	584, 800, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 1972, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 0,
	0, 804, 0, 0, 280, 281, 1166, 282, 283, 284,
	285, 286, 287, 0, 1978, 0, 288, 1968, 289, 1984,
	0, 1991, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 1994, 1995, 0, 0, 297, 298, 0, 0,
	1310, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1167,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 1149, 329, 1982, 1981, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1134, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 0, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	1980, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1168, 367, 368, 1989, 1990, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	0, 380, 381, 382, 383, 384, 0, 0, 0, 463,
	1170, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 1169, 395,
	1975, 1976, 0, 1971, 0, 397, 398, 1171, 0, 1172,
	399, 400, 401, 1173, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	0, 1174, 413, 414, 1175, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1176, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1177, 459, 449,
	0, 0, 1178, 460, 461, 0, 0, 462, 1983, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 0, 1179, 473, 1180, 0, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 1965, 486, 487, 488, 1966, 489, 490,
	491, 0, 492, 0, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 1979, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1181, 525, 526,
	527, 528, 0, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 1182, 555, 556, 557, 558, 559, 560, 561, 1977,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 1993, 569, 570, 571, 572, 0, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 1985, 1986, 1987,
	1988, 0, 597, 0, 589, 590, 591, 0, 592, 0,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 0, 1969, 1992, 0, 612, 611,
	613, 0, 0, 614, 0, 0, 794, 0, 615, 616,
	0, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 1959, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 801, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 799, 580, 581, 582, 583, 584,
	800, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 794, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	804, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 801, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 2293, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 2294, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 799, 580, 581, 582, 583, 584,
	800, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 2295, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 2042, 614, 1305, 2009, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	804, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 1166, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 1310, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1167, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 2006, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1168, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 1170, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 1169, 395, 643, 644, 0, 645,
	0, 397, 398, 1171, 646, 1172, 399, 400, 401, 1173,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 1174, 413, 414,
	1175, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1176, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1177, 459, 449, 0, 0, 1178, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1179, 473, 1180, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1181, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	2007, 551, 552, 534, 535, 553, 554, 1182, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 2003, 614,
	1305, 2009, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 1166,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 1310, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1167, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 2006, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1168, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 1170, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 1169, 395, 643, 644, 0, 645, 0, 397, 398,
	1171, 646, 1172, 399, 400, 401, 1173, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 1174, 413, 414, 1175, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1176, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1177, 459, 449, 0, 0, 1178, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1179, 473,
	1180, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1181, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 2007, 551, 552,
	534, 535, 553, 554, 1182, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	794, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 801, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 1998, 541, 542, 543, 544,
	0, 1999, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 799, 580,
	581, 582, 583, 584, 800, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 1997, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	794, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 804, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 801, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 1950, 541, 542, 543, 544,
	0, 1951, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 799, 580,
	581, 582, 583, 584, 800, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 1949, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 0, 614, 1305, 2009, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 804, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 1166, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	1310, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1167,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 2006,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1168, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	1170, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 1169, 395,
	643, 644, 0, 645, 0, 397, 398, 1171, 646, 1172,
	399, 400, 401, 1173, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 1174, 413, 414, 1175, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1176, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1177, 459, 449,
	0, 0, 1178, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1179, 473, 1180, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1181, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 2007, 551, 552, 534, 535, 553,
	554, 1182, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1305, 1304, 0, 0, 0, 0,
	1302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 1166, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 1310, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1167, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1168, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 1170, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 1169, 395, 643, 644, 0,
	645, 0, 397, 398, 1171, 646, 1172, 399, 400, 401,
	1173, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 1174, 413,
	414, 1175, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 1176, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 1177, 459, 449, 0, 0, 1178,
	460, 461, 3775, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 1179, 473, 1180, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 1181, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 1182, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1305, 1304, 0, 0, 0, 0, 1302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	1166, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 1310, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1167, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1168, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 1170, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 1169, 395, 643, 644, 0, 645, 0, 397,
	398, 1171, 646, 1172, 399, 400, 401, 1173, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 1174, 413, 414, 1175, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 1176, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 1177, 459, 449, 0, 0, 1178, 460, 461, 3401,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 1179,
	473, 1180, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 1181, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 1182, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 265, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 0, 614, 0, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 1632, 0,
	1305, 1304, 0, 0, 0, 0, 1302, 0, 0, 0,
	0, 0, 0, 0, 0, 804, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 1166,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 1310, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1167, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	1631, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1168, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 1170, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 1169, 395, 643, 644, 0, 645, 0, 397, 398,
	1171, 646, 1172, 399, 400, 401, 1173, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 1174, 413, 414, 1175, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1176, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1177, 459, 449, 0, 0, 1178, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1179, 473,
	1180, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 1630, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1181, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 1629, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 1182, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 1550, 0, 1305,
	1304, 0, 0, 0, 0, 1302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 1166, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 1310, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1167, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1168, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 1549, 641,
	642, 463, 1170, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	1169, 395, 643, 644, 0, 645, 0, 397, 398, 1171,
	646, 1172, 399, 400, 401, 1173, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 1174, 413, 414, 1175, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 1176, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 1177,
	459, 449, 0, 0, 1178, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 1179, 473, 1180,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 1181,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 1182, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 1510, 0, 1305, 1304,
	0, 0, 0, 0, 1302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 1166, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 1310, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1167, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1168, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 1170, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 1169,
	395, 643, 644, 0, 645, 0, 397, 398, 1171, 646,
	1172, 399, 400, 401, 1173, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 1174, 413, 414, 1175, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 1176, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 1177, 459,
	449, 0, 0, 1178, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 1179, 473, 1180, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 1181, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 1182, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 0, 614, 0, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 1478, 0, 1305, 1304, 0,
	0, 0, 0, 1302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 1166, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	1310, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1167,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1168, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 1477, 641, 642, 463,
	1170, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 1169, 395,
	643, 644, 0, 645, 0, 397, 398, 1171, 646, 1172,
	399, 400, 401, 1173, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 1174, 413, 414, 1175, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1176, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1177, 459, 449,
	0, 0, 1178, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1179, 473, 1180, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1181, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 1182, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 1299, 0, 1305, 1304, 0, 0,
	0, 0, 1302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 1166, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 1310,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1167, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1168,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 1298, 641, 642, 463, 1170,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 1169, 395, 643,
	644, 0, 645, 0, 397, 398, 1171, 646, 1172, 399,
	400, 401, 1173, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	1174, 413, 414, 1175, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 1176, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 1177, 459, 449, 0,
	0, 1178, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 1179, 473, 1180, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 1181, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	1182, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 0, 614, 0, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 1305, 1304, 0, 0, 0, 0, 1302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 1166, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 1310, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1167, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1168, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 1170, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 1169, 395, 643, 644, 0, 645,
	0, 397, 398, 1171, 646, 1172, 399, 400, 401, 1173,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 1174, 413, 414,
	1175, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	1176, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 1177, 459, 449, 0, 0, 1178, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 1179, 473, 1180, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 1181, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 1182, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 0, 614,
	1305, 2009, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 1166,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 1310, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1167, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 2049, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1168, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 1170, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 1169, 395, 643, 644, 0, 645, 0, 397, 398,
	1171, 646, 1172, 399, 400, 401, 1173, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 1174, 413, 414, 1175, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 1176, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	1177, 459, 449, 0, 0, 1178, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 1179, 473,
	1180, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	1181, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 1182, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 0, 614, 1305, 1304, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 1166, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	1310, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1167,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1168, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	1170, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 1169, 395,
	643, 644, 0, 645, 0, 397, 398, 1171, 646, 1172,
	399, 400, 401, 1173, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 1174, 413, 414, 1175, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1176, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1177, 459, 449,
	0, 0, 1178, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1179, 473, 1180, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1181, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 1182, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 1305, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 1166, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	1310, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1167,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1168, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	1170, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 1169, 395,
	643, 644, 0, 645, 0, 397, 398, 1171, 646, 1172,
	399, 400, 401, 1173, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 1174, 413, 414, 1175, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 1176, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 1177, 459, 449,
	0, 0, 1178, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 1179, 473, 1180, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 1181, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 1182, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 265, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 2757, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 2754, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 2761, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 2963, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 2760, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 2960, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 2962, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 2959, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 2759, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 2961,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 265, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 2757, 297, 298, 629, 0,
	0, 2751, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 2754, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 2761, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 2760, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 2750, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 2759, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 2758,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 1703, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 1702, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 1706, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 1704, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 1705, 611, 613, 670, 1452,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	1454, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	1216, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 1449, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 1451, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 1216, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 1356, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 1358, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 1216, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	703, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 702, 276, 277, 692, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	695, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 696,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 697, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 691, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 692, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 695, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 696, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 697,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 265,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 1216, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 265,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 3351,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 2908, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 2907, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 2265, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 265, 612, 611, 613, 670, 0, 614,
	0, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 2206, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 2213, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 2212,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 2199, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 2201, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 265, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 2169, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 269, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 270, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 1216, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 1554, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 1553, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 269,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 270, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 1469,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 269, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 270, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 1462, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 1464, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 269, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 270, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 1289, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 1288, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	269, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 270,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	1279, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 1278, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 269, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 270, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 1276, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 1275, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 269, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 270, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 1271, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 1270, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 269, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	270, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 673, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 269, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 270, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 256, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	265, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	265, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 695, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 696, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	697, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	265, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 2302, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	265, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 2300, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	265, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 2298, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	265, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 2219,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	265, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 2028,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	265, 612, 611, 613, 670, 0, 614, 0, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 2022,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 269, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 270, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 876, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 875, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 874, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 265, 612, 611,
	613, 670, 0, 614, 0, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 2963, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 4057, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 760, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 1326, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 1324, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	761, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 757,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 1327,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 756, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 760,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	1326, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 1324, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	640, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 761, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 757, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 1327, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 756, 662, 663, 664, 0, 597, 0, 589, 1325,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 682, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 681, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 680, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 0, 614, 265, 2950, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	0, 614, 265, 4067, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 4328, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 3966, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 3743, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 265, 612, 611, 613, 670, 0, 614, 0,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 2643, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 640, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 0, 614, 265,
	2950, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 2947, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 265,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 2275, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 2263, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 298, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	417, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 444, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 657, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 540, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 549, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 661, 662, 663, 664,
	0, 597, 0, 589, 590, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 760, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 750, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 761,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 537, 538, 539, 532, 533, 757, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 1587, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 756, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 1560, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 1559,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 1544, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 1542, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 1537, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 1514,
	614, 265, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 621, 622, 0,
	288, 623, 289, 624, 0, 625, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 626, 627, 628, 0,
	297, 298, 629, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 630, 631, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	632, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 633, 634, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 635, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 636, 637, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	638, 0, 639, 379, 0, 380, 381, 382, 383, 384,
	1512, 641, 642, 463, 0, 385, 386, 0, 387, 388,
	389, 390, 391, 0, 0, 0, 0, 392, 393, 394,
	396, 0, 0, 395, 643, 644, 0, 645, 0, 397,
	398, 0, 646, 0, 399, 400, 401, 0, 402, 0,
	0, 0, 403, 404, 405, 406, 407, 408, 0, 409,
	411, 410, 0, 412, 647, 0, 413, 414, 0, 0,
	415, 0, 0, 0, 416, 417, 420, 0, 0, 418,
	419, 421, 422, 0, 423, 424, 426, 429, 425, 427,
	428, 430, 443, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 445, 0, 444, 0, 446,
	447, 448, 453, 455, 456, 451, 452, 454, 457, 458,
	450, 0, 459, 449, 0, 0, 0, 460, 461, 0,
	648, 462, 649, 464, 465, 0, 0, 466, 0, 0,
	0, 468, 469, 470, 0, 0, 471, 472, 650, 0,
	473, 0, 651, 474, 475, 467, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 484, 485, 652, 486, 487,
	488, 653, 489, 490, 491, 654, 492, 655, 493, 494,
	0, 495, 496, 0, 497, 498, 499, 500, 501, 502,
	503, 656, 504, 506, 505, 507, 0, 508, 0, 509,
	510, 511, 0, 0, 0, 0, 512, 0, 514, 515,
	516, 517, 513, 518, 519, 520, 521, 0, 522, 523,
	524, 0, 525, 526, 527, 528, 657, 529, 0, 530,
	531, 537, 538, 539, 532, 533, 540, 541, 542, 543,
	544, 0, 546, 547, 545, 548, 549, 550, 0, 551,
	552, 534, 535, 553, 554, 0, 555, 556, 557, 558,
	559, 560, 561, 658, 0, 562, 0, 563, 564, 565,
	567, 536, 568, 573, 574, 659, 569, 570, 571, 572,
	660, 576, 577, 0, 578, 579, 0, 575, 566, 0,
	580, 581, 582, 583, 584, 585, 586, 354, 587, 0,
	588, 661, 662, 663, 664, 0, 597, 0, 589, 590,
	591, 665, 592, 666, 0, 593, 594, 595, 596, 0,
	598, 599, 0, 0, 600, 601, 602, 604, 605, 603,
	606, 0, 607, 0, 0, 608, 609, 610, 667, 668,
	669, 0, 612, 611, 613, 670, 1475, 614, 265, 0,
	0, 0, 615, 616, 671, 617, 618, 619, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 621, 622, 0, 288, 623, 289,
	624, 0, 625, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 626, 627, 628, 0, 297, 298, 629,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 630, 631,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 632, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 633, 634,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 635, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 636, 637, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 638, 0, 639,
	379, 0, 380, 381, 382, 383, 384, 640, 641, 642,
	463, 0, 385, 386, 0, 387, 388, 389, 390, 391,
	0, 0, 0, 0, 392, 393, 394, 396, 0, 0,
	395, 643, 644, 0, 645, 0, 397, 398, 0, 646,
	0, 399, 400, 401, 0, 402, 0, 0, 0, 403,
	404, 405, 406, 407, 408, 0, 409, 411, 410, 0,
	412, 647, 0, 413, 414, 0, 0, 415, 0, 0,
	0, 416, 417, 420, 0, 0, 418, 419, 421, 422,
	0, 423, 424, 426, 429, 425, 427, 428, 430, 443,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 445, 0, 444, 0, 446, 447, 448, 453,
	455, 456, 451, 452, 454, 457, 458, 450, 0, 459,
	449, 0, 0, 0, 460, 461, 0, 648, 462, 649,
	464, 465, 0, 0, 466, 0, 0, 0, 468, 469,
	470, 0, 0, 471, 472, 650, 0, 473, 0, 651,
	474, 475, 467, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 484, 485, 652, 486, 487, 488, 653, 489,
	490, 491, 654, 492, 655, 493, 494, 0, 495, 496,
	0, 497, 498, 499, 500, 501, 502, 503, 656, 504,
	506, 505, 507, 0, 508, 0, 509, 510, 511, 0,
	0, 0, 0, 512, 0, 514, 515, 516, 517, 513,
	518, 519, 520, 521, 0, 522, 523, 524, 0, 525,
	526, 527, 528, 657, 529, 0, 530, 531, 537, 538,
	539, 532, 533, 540, 541, 542, 543, 544, 0, 546,
	547, 545, 548, 549, 550, 0, 551, 552, 534, 535,
	553, 554, 0, 555, 556, 557, 558, 559, 560, 561,
	658, 0, 562, 0, 563, 564, 565, 567, 536, 568,
	573, 574, 659, 569, 570, 571, 572, 660, 576, 577,
	0, 578, 579, 0, 575, 566, 0, 580, 581, 582,
	583, 584, 585, 586, 354, 587, 0, 588, 661, 662,
	663, 664, 0, 597, 0, 589, 590, 591, 665, 592,
	666, 0, 593, 594, 595, 596, 0, 598, 599, 0,
	0, 600, 601, 602, 604, 605, 603, 606, 0, 607,
	0, 0, 608, 609, 610, 667, 668, 669, 0, 612,
	611, 613, 670, 1457, 614, 265, 0, 0, 0, 615,
	616, 671, 617, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 621, 622, 0, 288, 623, 289, 624, 0, 625,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	626, 627, 628, 0, 297, 298, 629, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 630, 631, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 632, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 633, 634, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 635, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 636, 637, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 638, 0, 639, 379, 0, 380,
	381, 382, 383, 384, 640, 641, 642, 463, 0, 385,
	386, 0, 387, 388, 389, 390, 391, 0, 0, 0,
	0, 392, 393, 394, 396, 0, 0, 395, 643, 644,
	0, 645, 0, 397, 398, 0, 646, 0, 399, 400,
	401, 0, 402, 0, 0, 0, 403, 404, 405, 406,
	407, 408, 0, 409, 411, 410, 0, 412, 647, 0,
	413, 414, 0, 0, 415, 0, 0, 0, 416, 417,
	420, 0, 0, 418, 419, 421, 422, 0, 423, 424,
	426, 429, 425, 427, 428, 430, 443, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 445,
	0, 444, 0, 446, 447, 448, 453, 455, 456, 451,
	452, 454, 457, 458, 450, 0, 459, 449, 0, 0,
	0, 460, 461, 0, 648, 462, 649, 464, 465, 0,
	0, 466, 0, 0, 0, 468, 469, 470, 0, 0,
	471, 472, 650, 0, 473, 0, 651, 474, 475, 467,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 484,
	485, 652, 486, 487, 488, 653, 489, 490, 491, 654,
	492, 655, 493, 494, 0, 495, 496, 0, 497, 498,
	499, 500, 501, 502, 503, 656, 504, 506, 505, 507,
	0, 508, 0, 509, 510, 511, 0, 0, 0, 0,
	512, 0, 514, 515, 516, 517, 513, 518, 519, 520,
	521, 0, 522, 523, 524, 0, 525, 526, 527, 528,
	657, 529, 0, 530, 531, 537, 538, 539, 532, 533,
	540, 541, 542, 543, 544, 0, 546, 547, 545, 548,
	549, 550, 0, 551, 552, 534, 535, 553, 554, 0,
	555, 556, 557, 558, 559, 560, 561, 658, 0, 562,
	0, 563, 564, 565, 567, 536, 568, 573, 574, 659,
	569, 570, 571, 572, 660, 576, 577, 0, 578, 579,
	0, 575, 566, 0, 580, 581, 582, 583, 584, 585,
	586, 354, 587, 0, 588, 661, 662, 663, 664, 0,
	597, 0, 589, 590, 591, 665, 592, 666, 0, 593,
	594, 595, 596, 0, 598, 599, 0, 0, 600, 601,
	602, 604, 605, 603, 606, 0, 607, 0, 0, 608,
	609, 610, 667, 668, 669, 0, 612, 611, 613, 670,
	1294, 614, 265, 0, 0, 0, 615, 616, 671, 617,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 621, 622,
	0, 288, 623, 289, 624, 0, 625, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 626, 627, 628,
	0, 297, 298, 629, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 630, 631, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 632, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 633, 634, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 635, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 636, 637,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 638, 0, 639, 379, 0, 380, 381, 382, 383,
	384, 1293, 641, 642, 463, 0, 385, 386, 0, 387,
	388, 389, 390, 391, 0, 0, 0, 0, 392, 393,
	394, 396, 0, 0, 395, 643, 644, 0, 645, 0,
	397, 398, 0, 646, 0, 399, 400, 401, 0, 402,
	0, 0, 0, 403, 404, 405, 406, 407, 408, 0,
	409, 411, 410, 0, 412, 647, 0, 413, 414, 0,
	0, 415, 0, 0, 0, 416, 417, 420, 0, 0,
	418, 419, 421, 422, 0, 423, 424, 426, 429, 425,
	427, 428, 430, 443, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 442, 445, 0, 444, 0,
	446, 447, 448, 453, 455, 456, 451, 452, 454, 457,
	458, 450, 0, 459, 449, 0, 0, 0, 460, 461,
	0, 648, 462, 649, 464, 465, 0, 0, 466, 0,
	0, 0, 468, 469, 470, 0, 0, 471, 472, 650,
	0, 473, 0, 651, 474, 475, 467, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 484, 485, 652, 486,
	487, 488, 653, 489, 490, 491, 654, 492, 655, 493,
	494, 0, 495, 496, 0, 497, 498, 499, 500, 501,
	502, 503, 656, 504, 506, 505, 507, 0, 508, 0,
	509, 510, 511, 0, 0, 0, 0, 512, 0, 514,
	515, 516, 517, 513, 518, 519, 520, 521, 0, 522,
	523, 524, 0, 525, 526, 527, 528, 657, 529, 0,
	530, 531, 537, 538, 539, 532, 533, 540, 541, 542,
	543, 544, 0, 546, 547, 545, 548, 549, 550, 0,
	551, 552, 534, 535, 553, 554, 0, 555, 556, 557,
	558, 559, 560, 561, 658, 0, 562, 0, 563, 564,
	565, 567, 536, 568, 573, 574, 659, 569, 570, 571,
	572, 660, 576, 577, 0, 578, 579, 0, 575, 566,
	0, 580, 581, 582, 583, 584, 585, 586, 354, 587,
	0, 588, 661, 662, 663, 664, 0, 597, 0, 589,
	590, 591, 665, 592, 666, 0, 593, 594, 595, 596,
	0, 598, 599, 0, 0, 600, 601, 602, 604, 605,
	603, 606, 0, 607, 0, 0, 608, 609, 610, 667,
	668, 669, 0, 612, 611, 613, 670, 1285, 614, 265,
	0, 0, 0, 615, 616, 671, 617, 618, 619, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 1284, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 265,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 1238, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 265,
	612, 611, 613, 670, 0, 614, 0, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 271, 273, 272, 274,
	275, 276, 277, 766, 278, 279, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 621, 622, 0, 288, 623,
	289, 624, 0, 625, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 626, 627, 628, 0, 297, 298,
	629, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 630,
	631, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 632, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 633,
	634, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 635, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 636, 637, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 638, 0,
	639, 379, 0, 380, 381, 382, 383, 384, 640, 641,
	642, 463, 0, 385, 386, 0, 387, 388, 389, 390,
	391, 0, 0, 0, 0, 392, 393, 394, 396, 0,
	0, 395, 643, 644, 0, 645, 0, 397, 398, 0,
	646, 0, 399, 400, 401, 0, 402, 0, 0, 0,
	403, 404, 405, 406, 407, 408, 0, 409, 411, 410,
	0, 412, 647, 0, 413, 414, 0, 0, 415, 0,
	0, 0, 416, 417, 420, 0, 0, 418, 419, 421,
	422, 0, 423, 424, 426, 429, 425, 427, 428, 430,
	443, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 445, 0, 444, 0, 446, 447, 448,
	453, 455, 456, 451, 452, 454, 457, 458, 450, 0,
	459, 449, 0, 0, 0, 460, 461, 0, 648, 462,
	649, 464, 465, 0, 0, 466, 0, 0, 0, 468,
	469, 470, 0, 0, 471, 472, 650, 0, 473, 0,
	651, 474, 475, 467, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 484, 485, 652, 486, 487, 488, 653,
	489, 490, 491, 654, 492, 655, 493, 494, 0, 495,
	496, 0, 497, 498, 499, 500, 501, 502, 503, 656,
	504, 506, 505, 507, 0, 508, 0, 509, 510, 511,
	0, 0, 0, 0, 512, 0, 514, 515, 516, 517,
	513, 518, 519, 520, 521, 0, 522, 523, 524, 0,
	525, 526, 527, 528, 657, 529, 0, 530, 531, 537,
	538, 539, 532, 533, 540, 541, 542, 543, 544, 0,
	546, 547, 545, 548, 549, 550, 0, 551, 552, 534,
	535, 553, 554, 0, 555, 556, 557, 558, 559, 560,
	561, 658, 0, 562, 0, 563, 564, 565, 567, 536,
	568, 573, 574, 659, 569, 570, 571, 572, 660, 576,
	577, 0, 578, 579, 0, 575, 566, 0, 580, 581,
	582, 583, 584, 585, 586, 354, 587, 0, 588, 661,
	662, 663, 664, 0, 597, 0, 589, 590, 591, 665,
	592, 666, 0, 593, 594, 595, 596, 0, 598, 599,
	0, 0, 600, 601, 602, 604, 605, 603, 606, 0,
	607, 0, 0, 608, 609, 610, 667, 668, 669, 0,
	612, 611, 613, 670, 760, 614, 265, 0, 0, 0,
	615, 616, 671, 617, 618, 619, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 621, 622, 0, 288, 623, 289, 624, 0,
	625, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 626, 627, 628, 0, 297, 750, 629, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 748, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 630, 631, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 632, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 633, 634, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 635,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 636, 637, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 638, 0, 639, 379, 0,
	380, 381, 382, 383, 384, 640, 641, 642, 463, 0,
	385, 386, 0, 387, 388, 389, 390, 391, 0, 0,
	0, 0, 392, 393, 394, 396, 0, 0, 395, 643,
	644, 0, 645, 0, 397, 398, 0, 646, 0, 399,
	400, 401, 0, 402, 0, 0, 0, 403, 404, 405,
	406, 407, 408, 0, 409, 411, 410, 0, 412, 647,
	0, 413, 414, 0, 0, 415, 0, 0, 0, 416,
	749, 420, 0, 0, 418, 419, 421, 422, 0, 423,
	424, 426, 429, 425, 427, 428, 430, 443, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	445, 0, 761, 0, 446, 447, 448, 453, 455, 456,
	451, 452, 454, 457, 458, 450, 0, 459, 449, 0,
	0, 0, 460, 461, 0, 648, 462, 649, 464, 465,
	0, 0, 466, 0, 0, 0, 468, 469, 470, 0,
	0, 471, 472, 650, 0, 473, 0, 651, 474, 475,
	467, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	484, 485, 652, 486, 487, 488, 653, 489, 490, 491,
	654, 492, 655, 493, 494, 0, 495, 496, 0, 497,
	498, 499, 500, 501, 502, 503, 656, 504, 506, 505,
	507, 0, 508, 0, 509, 510, 511, 0, 0, 0,
	0, 512, 0, 514, 515, 516, 517, 513, 518, 519,
	520, 521, 0, 522, 523, 524, 0, 525, 526, 527,
	528, 751, 529, 0, 530, 531, 537, 538, 539, 532,
	533, 757, 541, 542, 543, 544, 0, 546, 547, 545,
	548, 752, 550, 0, 551, 552, 534, 535, 553, 554,
	0, 555, 556, 557, 558, 559, 560, 561, 658, 0,
	562, 0, 563, 564, 565, 567, 536, 568, 573, 574,
	659, 569, 570, 571, 572, 660, 576, 577, 0, 578,
	579, 0, 575, 566, 0, 580, 581, 582, 583, 584,
	585, 586, 354, 587, 0, 588, 756, 662, 663, 664,
	0, 597, 0, 589, 754, 591, 665, 592, 666, 0,
	593, 594, 595, 596, 0, 598, 599, 0, 0, 600,
	601, 602, 604, 605, 603, 606, 0, 607, 0, 0,
	608, 609, 610, 667, 668, 669, 0, 612, 611, 613,
	670, 742, 614, 265, 0, 0, 0, 615, 616, 671,
	617, 618, 619, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 621,
	622, 0, 288, 623, 289, 624, 0, 625, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 626, 627,
	628, 0, 297, 298, 629, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 630, 631, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 632, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 633, 634, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 635, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 636,
	637, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 638, 0, 639, 379, 0, 380, 381, 382,
	383, 384, 640, 641, 642, 463, 0, 385, 386, 0,
	387, 388, 389, 390, 391, 0, 0, 0, 0, 392,
	393, 394, 396, 0, 0, 395, 643, 644, 0, 645,
	0, 397, 398, 0, 646, 0, 399, 400, 401, 0,
	402, 0, 0, 0, 403, 404, 405, 406, 407, 408,
	0, 409, 411, 410, 0, 412, 647, 0, 413, 414,
	0, 0, 415, 0, 0, 0, 416, 417, 420, 0,
	0, 418, 419, 421, 422, 0, 423, 424, 426, 429,
	425, 427, 428, 430, 443, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 442, 445, 0, 444,
	0, 446, 447, 448, 453, 455, 456, 451, 452, 454,
	457, 458, 450, 0, 459, 449, 0, 0, 0, 460,
	461, 0, 648, 462, 649, 464, 465, 0, 0, 466,
	0, 0, 0, 468, 469, 470, 0, 0, 471, 472,
	650, 0, 473, 0, 651, 474, 475, 467, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 484, 485, 652,
	486, 487, 488, 653, 489, 490, 491, 654, 492, 655,
	493, 494, 0, 495, 496, 0, 497, 498, 499, 500,
	501, 502, 503, 656, 504, 506, 505, 507, 0, 508,
	0, 509, 510, 511, 0, 0, 0, 0, 512, 0,
	514, 515, 516, 517, 513, 518, 519, 520, 521, 0,
	522, 523, 524, 0, 525, 526, 527, 528, 657, 529,
	0, 530, 531, 743, 538, 539, 532, 533, 540, 541,
	542, 543, 544, 0, 546, 547, 545, 548, 549, 550,
	0, 551, 552, 534, 535, 553, 554, 0, 555, 556,
	557, 558, 559, 560, 561, 658, 0, 562, 0, 563,
	564, 565, 567, 536, 568, 573, 574, 659, 569, 570,
	571, 572, 660, 576, 577, 0, 578, 579, 0, 575,
	566, 0, 580, 581, 582, 583, 584, 585, 586, 354,
	587, 0, 588, 661, 662, 663, 664, 0, 597, 0,
	589, 590, 591, 665, 592, 666, 0, 593, 594, 595,
	596, 0, 598, 599, 0, 0, 600, 601, 602, 604,
	605, 603, 606, 0, 607, 0, 0, 608, 609, 610,
	667, 668, 669, 0, 612, 611, 613, 670, 705, 614,
	265, 0, 0, 0, 615, 616, 671, 617, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 621, 622, 0, 288,
	623, 289, 624, 0, 625, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 626, 627, 628, 0, 297,
	298, 629, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	630, 631, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 632,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	633, 634, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 635, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 636, 637, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 638,
	0, 639, 379, 0, 380, 381, 382, 383, 384, 640,
	641, 642, 463, 0, 385, 386, 0, 387, 388, 389,
	390, 391, 0, 0, 0, 0, 392, 393, 394, 396,
	0, 0, 395, 643, 644, 0, 645, 0, 397, 398,
	0, 646, 0, 399, 400, 401, 0, 402, 0, 0,
	0, 403, 404, 405, 406, 407, 408, 0, 409, 411,
	410, 0, 412, 647, 0, 413, 414, 0, 0, 415,
	0, 0, 0, 416, 417, 420, 0, 0, 418, 419,
	421, 422, 0, 423, 424, 426, 429, 425, 427, 428,
	430, 443, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 445, 0, 444, 0, 446, 447,
	448, 453, 455, 456, 451, 452, 454, 457, 458, 450,
	0, 459, 449, 0, 0, 0, 460, 461, 0, 648,
	462, 649, 464, 465, 0, 0, 466, 0, 0, 0,
	468, 469, 470, 0, 0, 471, 472, 650, 0, 473,
	0, 651, 474, 475, 467, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 484, 485, 652, 486, 487, 488,
	653, 489, 490, 491, 654, 492, 655, 493, 494, 0,
	495, 496, 0, 497, 498, 499, 500, 501, 502, 503,
	656, 504, 506, 505, 507, 0, 508, 0, 509, 510,
	511, 0, 0, 0, 0, 512, 0, 514, 515, 516,
	517, 513, 518, 519, 520, 521, 0, 522, 523, 524,
	0, 525, 526, 527, 528, 657, 529, 0, 530, 531,
	537, 538, 539, 532, 533, 540, 541, 542, 543, 544,
	0, 546, 547, 545, 548, 549, 550, 0, 551, 552,
	534, 535, 553, 554, 0, 555, 556, 557, 558, 559,
	560, 561, 658, 0, 562, 0, 563, 564, 565, 567,
	536, 568, 573, 574, 659, 569, 570, 571, 572, 660,
	576, 577, 0, 578, 579, 0, 575, 566, 0, 580,
	581, 582, 583, 584, 585, 586, 354, 587, 0, 588,
	661, 662, 663, 664, 0, 597, 0, 589, 590, 591,
	665, 592, 666, 0, 593, 594, 595, 596, 0, 598,
	599, 0, 0, 600, 601, 602, 604, 605, 603, 606,
	0, 607, 0, 0, 608, 609, 610, 667, 668, 669,
	0, 612, 611, 613, 670, 699, 614, 265, 0, 0,
	0, 615, 616, 671, 617, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 621, 622, 0, 288, 623, 289, 624,
	0, 625, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 626, 627, 628, 0, 297, 298, 629, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 630, 631, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 632, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 633, 634, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	635, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 636, 637, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 638, 0, 639, 379,
	0, 380, 381, 382, 383, 384, 640, 641, 642, 463,
	0, 385, 386, 0, 387, 388, 389, 390, 391, 0,
	0, 0, 0, 392, 393, 394, 396, 0, 0, 395,
	643, 644, 0, 645, 0, 397, 398, 0, 646, 0,
	399, 400, 401, 0, 402, 0, 0, 0, 403, 404,
	405, 406, 407, 408, 0, 409, 411, 410, 0, 412,
	647, 0, 413, 414, 0, 0, 415, 0, 0, 0,
	416, 417, 420, 0, 0, 418, 419, 421, 422, 0,
	423, 424, 426, 429, 425, 427, 428, 430, 443, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 445, 0, 444, 0, 446, 447, 448, 453, 455,
	456, 451, 452, 454, 457, 458, 450, 0, 459, 449,
	0, 0, 0, 460, 461, 0, 648, 462, 649, 464,
	465, 0, 0, 466, 0, 0, 0, 468, 469, 470,
	0, 0, 471, 472, 650, 0, 473, 0, 651, 474,
	475, 467, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 484, 485, 652, 486, 487, 488, 653, 489, 490,
	491, 654, 492, 655, 493, 494, 0, 495, 496, 0,
	497, 498, 499, 500, 501, 502, 503, 656, 504, 506,
	505, 507, 0, 508, 0, 509, 510, 511, 0, 0,
	0, 0, 512, 0, 514, 515, 516, 517, 513, 518,
	519, 520, 521, 0, 522, 523, 524, 0, 525, 526,
	527, 528, 657, 529, 0, 530, 531, 537, 538, 539,
	532, 533, 540, 541, 542, 543, 544, 0, 546, 547,
	545, 548, 549, 550, 0, 551, 552, 534, 535, 553,
	554, 0, 555, 556, 557, 558, 559, 560, 561, 658,
	0, 562, 0, 563, 564, 565, 567, 536, 568, 573,
	574, 659, 569, 570, 571, 572, 660, 576, 577, 0,
	578, 579, 0, 575, 566, 0, 580, 581, 582, 583,
	584, 585, 586, 354, 587, 0, 588, 661, 662, 663,
	664, 0, 597, 0, 589, 590, 591, 665, 592, 666,
	0, 593, 594, 595, 596, 0, 598, 599, 0, 0,
	600, 601, 602, 604, 605, 603, 606, 0, 607, 0,
	0, 608, 609, 610, 667, 668, 669, 0, 612, 611,
	613, 670, 677, 614, 265, 0, 0, 0, 615, 616,
	671, 617, 618, 619, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 3450, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 3387, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 3316, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 3314, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 3299, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 2918, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 743, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 2237, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 0, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 1256, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 379, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 501, 502, 503, 656, 504, 1189, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	529, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 265, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	621, 622, 0, 288, 623, 289, 624, 0, 625, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 626,
	627, 628, 0, 297, 298, 629, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 630, 631, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 632, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 633, 634, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 635, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	636, 637, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 638, 0, 639, 0, 0, 380, 381,
	382, 383, 384, 640, 641, 642, 463, 0, 385, 386,
	0, 387, 388, 389, 390, 391, 0, 0, 0, 0,
	392, 393, 394, 396, 0, 0, 395, 643, 644, 0,
	645, 0, 397, 398, 0, 646, 0, 399, 400, 401,
	0, 402, 0, 0, 0, 403, 404, 405, 406, 407,
	408, 0, 409, 411, 410, 0, 412, 647, 0, 413,
	414, 0, 0, 415, 0, 0, 0, 416, 417, 420,
	0, 0, 418, 419, 421, 422, 0, 423, 424, 426,
	429, 425, 427, 428, 430, 443, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 445, 0,
	444, 0, 446, 447, 448, 453, 455, 456, 451, 452,
	454, 457, 458, 450, 0, 459, 449, 0, 0, 0,
	460, 461, 0, 648, 462, 649, 464, 465, 0, 0,
	466, 0, 0, 0, 468, 469, 470, 0, 0, 471,
	472, 650, 0, 473, 0, 651, 474, 475, 467, 476,
	477, 0, 479, 480, 481, 482, 483, 0, 484, 485,
	652, 486, 487, 488, 653, 489, 490, 491, 654, 492,
	655, 493, 494, 0, 495, 496, 0, 497, 498, 499,
	500, 0, 502, 503, 656, 504, 506, 505, 507, 0,
	508, 0, 509, 510, 511, 0, 0, 0, 0, 512,
	0, 514, 515, 516, 517, 513, 518, 519, 520, 521,
	0, 522, 523, 524, 0, 525, 526, 527, 528, 657,
	0, 0, 530, 531, 537, 538, 539, 532, 533, 540,
	541, 542, 543, 544, 0, 546, 547, 545, 548, 549,
	550, 0, 551, 552, 534, 535, 553, 554, 0, 555,
	556, 557, 558, 559, 560, 561, 658, 0, 562, 0,
	563, 564, 565, 567, 536, 568, 573, 574, 659, 569,
	570, 571, 572, 660, 576, 577, 0, 578, 579, 0,
	575, 566, 0, 580, 581, 582, 583, 584, 585, 586,
	354, 587, 0, 588, 661, 662, 663, 664, 0, 597,
	0, 589, 590, 591, 665, 592, 666, 0, 593, 594,
	595, 596, 0, 598, 599, 0, 0, 600, 601, 602,
	604, 605, 603, 606, 0, 607, 0, 0, 608, 609,
	610, 667, 668, 669, 0, 612, 611, 613, 670, 0,
	614, 0, 0, 0, 0, 615, 616, 671, 617, 618,
	619, 1752, 1753, 0, 1785, 1786, 1787, 1795, 1796, 1797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1788, 1783, 0, 0, 0, 0, 1752,
	1753, 1755, 1785, 1786, 1787, 1795, 1796, 1797, 0, 0,
	1801, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 1783, 0, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 1754, 0, 1801, 0,
	0, 0, 0, 0, 0, 0, 1774, 0, 0, 0,
	0, 0, 0, 0, 0, 1771, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 1778, 1779, 1780, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 1778,
	1779, 1780, 0, 0, 0, 0, 0, 0, 1760, 0,
	0, 0, 0, 0, 0, 0, 0, 1792, 0, 0,
	1802, 0, 0, 0, 0, 0, 0, 1782, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 1792, 1799, 0, 1802, 0,
	0, 0, 0, 1769, 1770, 1782, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1790, 1798, 0, 1799, 0, 0, 0, 0, 0,
	0, 1769, 1770, 0, 0, 0, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1752, 1753, 1775, 1785, 1786, 1787, 1795, 1796,
	1797, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 0, 1788, 1783, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 1789, 0, 0,
	0, 1801, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 0, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 0, 0,
	0, 0, 0, 0, 0, 0, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 1781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1793, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 1778, 1779, 1780, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 0, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1792, 0,
	0, 1802, 0, 0, 0, 0, 0, 0, 1782, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 0, 1799, 0, 0,
	0, 0, 0, 0, 1769, 1770, 0, 0, 0, 0,
	0, 1791, 0, 0, 0, 0, 1766, 1767, 1773, 1794,
	1772, 1768, 1790, 1765, 1763, 1764, 1756, 1757, 1758, 1759,
	1761, 1762, 0, 0, 0, 0, 4428, 1775, 0, 1791,
	0, 0, 0, 0, 1766, 1767, 1773, 1794, 1772, 1768,
	0, 1765, 1763, 1764, 1756, 1757, 1758, 1759, 1761, 1762,
	0, 0, 0, 0, 4349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1752, 1753, 0,
	1785, 1786, 1787, 1795, 1796, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	1783, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 1781, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 0, 0, 1793,
	0, 1771, 0, 0, 0, 1752, 1753, 0, 1785, 1786,
	1787, 1795, 1796, 1797, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1788, 1783, 0,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 1777, 1778, 1779, 1780,
	1774, 0, 0, 0, 0, 0, 1760, 0, 0, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 0, 0, 0, 0, 1766, 1767, 1773,
	1794, 1772, 1768, 0, 1765, 1763, 1764, 1756, 1757, 1758,
	1759, 1761, 1762, 1792, 0, 0, 1802, 4314, 0, 0,
	0, 0, 0, 1782, 1784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1798, 0, 1799, 0, 0, 0, 0, 0, 0, 1769,
	1770, 0, 0, 0, 1777, 1778, 1779, 1780, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 1752, 1753, 0, 1785, 1786, 1787, 1795,
	1796, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1792, 0, 0, 1802, 1788, 1783, 0, 0, 0,
	0, 1782, 1784, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 1800, 0, 0, 1798, 0,
	1799, 0, 0, 0, 0, 0, 0, 1769, 1770, 0,
	0, 0, 0, 1789, 0, 0, 0, 0, 1754, 0,
	0, 0, 0, 0, 0, 1790, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 1771, 0, 0,
	1775, 0, 1752, 1753, 0, 1785, 1786, 1787, 1795, 1796,
	1797, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1788, 1783, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 1781, 0, 0, 0,
	0, 1801, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	0, 1789, 0, 0, 0, 0, 0, 1754, 0, 0,
	0, 0, 1777, 1778, 1779, 1780, 0, 1774, 0, 0,
	0, 0, 1760, 0, 1793, 0, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1792,
	0, 0, 1802, 0, 1781, 0, 0, 0, 0, 1782,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 1798, 0, 1799, 0,
	0, 0, 0, 0, 0, 1769, 1770, 0, 0, 0,
	0, 1777, 1778, 1779, 1780, 0, 0, 0, 0, 0,
	0, 1760, 1793, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 1775, 0,
	0, 0, 1766, 1767, 1773, 1794, 1772, 1768, 0, 1765,
	1763, 1764, 1756, 1757, 1758, 1759, 1761, 1762, 1792, 0,
	0, 1802, 4313, 0, 0, 0, 0, 0, 1782, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1800, 0, 0, 0, 1798, 0, 1799, 0, 0,
	0, 0, 0, 0, 1769, 1770, 0, 0, 0, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1791, 0, 1775, 0, 0,
	1766, 1767, 1773, 1794, 1772, 1768, 0, 1765, 1763, 1764,
	1756, 1757, 1758, 1759, 1761, 1762, 0, 0, 0, 0,
	4142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 0, 0, 0,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 0, 0, 0, 0, 0, 0, 1752, 1753, 0,
	1785, 1786, 1787, 1795, 1796, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	1783, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 1781, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 0, 0, 1793,
	0, 1771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 1766, 1767,
	1773, 1794, 1772, 1768, 0, 1765, 1763, 1764, 1756, 1757,
	1758, 1759, 1761, 1762, 0, 0, 0, 0, 3985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 1778, 1779, 1780,
	0, 0, 0, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 0, 0, 0, 0, 1766, 1767, 1773,
	1794, 1772, 1768, 0, 1765, 1763, 1764, 1756, 1757, 1758,
	1759, 1761, 1762, 1792, 0, 0, 1802, 3921, 0, 0,
	0, 0, 0, 1782, 1784, 1752, 1753, 0, 1785, 1786,
	1787, 1795, 1796, 1797, 0, 0, 0, 0, 0, 0,
	1798, 0, 1799, 0, 0, 0, 0, 1788, 1783, 1769,
	1770, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 1778, 1779, 1780, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	0, 1792, 0, 0, 1802, 0, 0, 0, 0, 0,
	0, 1782, 1784, 1752, 1753, 0, 1785, 1786, 1787, 1795,
	1796, 1797, 0, 0, 1793, 0, 0, 0, 1798, 0,
	1799, 0, 0, 0, 0, 1788, 1783, 1769, 1770, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 1790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 1754, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 0, 0,
	0, 1789, 1766, 1767, 1773, 1794, 1772, 1768, 0, 1765,
	1763, 1764, 1756, 1757, 1758, 1759, 1761, 1762, 0, 0,
	0, 0, 3920, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 1778, 1779, 1780, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 1792,
	0, 0, 1802, 0, 0, 0, 0, 0, 0, 1782,
	1784, 1752, 1753, 0, 1785, 1786, 1787, 1795, 1796, 1797,
	0, 0, 1793, 0, 0, 0, 1798, 0, 1799, 0,
	0, 0, 0, 1788, 1783, 1769, 1770, 0, 0, 0,
	0, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1774, 0, 0, 0,
	0, 0, 0, 0, 0, 1771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1791, 0, 0, 0, 1789,
	1766, 1767, 1773, 1794, 1772, 1768, 0, 1765, 1763, 1764,
	1756, 1757, 1758, 1759, 1761, 1762, 0, 0, 0, 0,
	3919, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 1778, 1779, 1780, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 1792, 0, 0,
	1802, 0, 0, 0, 0, 0, 0, 1782, 1784, 1752,
	1753, 0, 1785, 1786, 1787, 1795, 1796, 1797, 0, 0,
	1793, 0, 0, 0, 1798, 0, 1799, 0, 0, 0,
	0, 1788, 1783, 1769, 1770, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1775, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 1789, 1766, 1767,
	1773, 1794, 1772, 1768, 0, 1765, 1763, 1764, 1756, 1757,
	1758, 1759, 1761, 1762, 0, 0, 0, 0, 3592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 1778,
	1779, 1780, 0, 0, 0, 0, 0, 0, 1760, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 0, 0, 0, 1792, 0, 0, 1802, 0,
	0, 0, 0, 0, 0, 1782, 1784, 1752, 1753, 0,
	1785, 1786, 1787, 1795, 1796, 1797, 0, 0, 1793, 0,
	0, 0, 1798, 0, 1799, 0, 0, 0, 0, 1788,
	1783, 1769, 1770, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 0, 0, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 1771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 0, 0, 0, 1789, 1766, 1767, 1773, 1794,
	1772, 1768, 0, 1765, 1763, 1764, 1756, 1757, 1758, 1759,
	1761, 1762, 0, 0, 0, 0, 3117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 1778, 1779, 1780,
	0, 0, 0, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 1792, 0, 0, 1802, 0, 0, 0,
	0, 0, 0, 1782, 1784, 1752, 1753, 0, 1785, 1786,
	1787, 1795, 1796, 1797, 0, 0, 1793, 0, 0, 0,
	1798, 0, 1799, 0, 0, 0, 0, 1788, 1783, 1769,
	1770, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1791,
	0, 0, 0, 1789, 1766, 1767, 1773, 1794, 1772, 1768,
	0, 1765, 1763, 1764, 1756, 1757, 1758, 1759, 1761, 1762,
	0, 0, 0, 0, 3116, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 1778, 1779, 1780, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	0, 1792, 0, 0, 1802, 0, 0, 0, 0, 0,
	0, 1782, 1784, 1752, 1753, 0, 1785, 1786, 1787, 1795,
	1796, 1797, 0, 0, 1793, 0, 0, 0, 1798, 0,
	1799, 0, 0, 0, 0, 1788, 1783, 1769, 1770, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 1790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 1754, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 0, 0,
	0, 1789, 1766, 1767, 1773, 1794, 1772, 1768, 0, 1765,
	1763, 1764, 1756, 1757, 1758, 1759, 1761, 1762, 0, 0,
	0, 0, 3115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 1778, 1779, 1780, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 1792,
	0, 0, 1802, 0, 0, 0, 0, 0, 0, 1782,
	1784, 1752, 1753, 0, 1785, 1786, 1787, 1795, 1796, 1797,
	0, 0, 1793, 0, 0, 0, 1798, 0, 1799, 0,
	0, 0, 0, 1788, 1783, 1769, 1770, 0, 0, 0,
	0, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1774, 0, 0, 0,
	0, 0, 0, 0, 0, 1771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1791, 0, 0, 0, 1789,
	1766, 1767, 1773, 1794, 1772, 1768, 0, 1765, 1763, 1764,
	1756, 1757, 1758, 1759, 1761, 1762, 0, 0, 0, 0,
	3114, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 1778, 1779, 1780, 0, 0, 0, 0, 0, 0,
	1760, 4569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 1792, 0, 0,
	1802, 0, 0, 0, 0, 0, 0, 1782, 1784, 1752,
	1753, 0, 1785, 1786, 1787, 1795, 1796, 1797, 0, 0,
	1793, 0, 0, 0, 1798, 0, 1799, 0, 0, 0,
	0, 1788, 1783, 1769, 1770, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1775, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 1789, 1766, 1767,
	1773, 1794, 1772, 1768, 0, 1765, 1763, 1764, 1756, 1757,
	1758, 1759, 1761, 1762, 0, 0, 3081, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4568,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 1778,
	1779, 1780, 0, 0, 0, 0, 0, 0, 1760, 0,
	3177, 0, 0, 0, 3176, 0, 0, 0, 0, 0,
	1781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 0, 0, 0, 1792, 0, 0, 1802, 0,
	0, 0, 0, 0, 0, 1782, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1793, 0,
	0, 0, 1798, 0, 1799, 0, 0, 0, 0, 0,
	0, 1769, 1770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 0, 0, 0, 1789, 1766, 1767, 1773, 1794,
	1772, 1768, 0, 1765, 1763, 1764, 1756, 1757, 1758, 1759,
	1761, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1752, 1753, 0, 1785, 1786, 1787,
	1795, 1796, 1797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 1783, 0, 0,
	0, 0, 3052, 0, 1755, 0, 0, 0, 1781, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 0, 2616, 1793, 0, 1771, 0,
	0, 0, 1752, 1753, 0, 1785, 1786, 1787, 1795, 1796,
	1797, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1788, 1783, 0, 0, 0, 2615,
	0, 0, 1755, 0, 0, 0, 0, 3053, 0, 0,
	0, 1801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	0, 0, 0, 1777, 1778, 1779, 1780, 1774, 0, 0,
	0, 0, 0, 1760, 0, 0, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1791,
	0, 0, 0, 0, 1766, 1767, 1773, 1794, 1772, 1768,
	0, 1765, 1763, 1764, 1756, 1757, 1758, 1759, 1761, 1762,
	1792, 0, 0, 1802, 0, 0, 0, 0, 0, 0,
	1782, 1784, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1798, 0, 1799,
	0, 0, 0, 0, 0, 0, 1769, 1770, 0, 0,
	0, 1777, 1778, 1779, 1780, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 1790, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	1752, 1753, 0, 1785, 1786, 1787, 1795, 1796, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1792, 0,
	0, 1802, 1788, 1783, 0, 0, 0, 0, 1782, 1784,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 1801,
	0, 0, 1800, 0, 0, 1798, 0, 1799, 0, 0,
	0, 0, 0, 0, 1769, 1770, 0, 0, 0, 0,
	1789, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 1774, 0, 0, 0, 0,
	0, 0, 0, 0, 1771, 0, 0, 1775, 0, 1752,
	1753, 0, 1785, 1786, 1787, 1795, 1796, 1797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 1783, 0, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 1781, 0, 0, 0, 0, 1801, 0,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 1789, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 1777,
	1778, 1779, 1780, 0, 1774, 0, 0, 0, 0, 1760,
	0, 1793, 0, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1792, 0, 0, 1802,
	0, 1781, 0, 0, 0, 0, 1782, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 1798, 0, 1799, 0, 0, 0, 0,
	0, 0, 1769, 1770, 0, 0, 0, 0, 1777, 1778,
	1779, 1780, 0, 0, 0, 0, 0, 0, 1760, 1793,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 1775, 0, 0, 0, 1766,
	1767, 1773, 1794, 1772, 1768, 0, 1765, 1763, 1764, 1756,
	1757, 1758, 1759, 1761, 1762, 1792, 0, 0, 1802, 0,
	0, 0, 0, 0, 0, 1782, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1800, 0,
	0, 0, 1798, 0, 1799, 0, 0, 0, 0, 0,
	0, 1769, 1770, 0, 0, 0, 1789, 1045, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 0, 1775, 0, 0, 1766, 1767, 1773,
	1794, 1772, 1768, 0, 1765, 1763, 1764, 1756, 1757, 1758,
	1759, 1761, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	0, 0, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 1752, 1753, 0, 1785, 1786, 1787,
	1795, 1796, 1797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 1783, 0, 0,
	0, 0, 0, 0, 1755, 0, 0, 0, 1781, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 0, 0, 1793, 0, 1771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1791, 0, 0, 0, 0, 1766, 1767, 1773, 1794, 1772,
	1768, 0, 1765, 1763, 1764, 1756, 1757, 1758, 1759, 1761,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3573, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 1778, 1779, 1780, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 0, 0, 0, 3183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1791,
	0, 0, 0, 0, 1766, 1767, 1773, 1794, 1772, 1768,
	0, 1765, 1763, 1764, 1756, 1757, 1758, 1759, 1761, 1762,
	1792, 1752, 1753, 1802, 1785, 1786, 1787, 1795, 1796, 1797,
	1782, 1784, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1788, 1783, 0, 0, 1798, 3178, 1799,
	0, 1755, 0, 0, 0, 0, 1769, 1770, 0, 0,
	1801, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1790, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 1775,
	0, 0, 0, 0, 0, 0, 1774, 0, 0, 0,
	0, 0, 0, 0, 0, 1771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 1778, 1779, 1780, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 1752, 1753, 0, 1785, 1786, 1787,
	1795, 1796, 1797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 0, 0, 1788, 1783, 0, 0,
	0, 0, 0, 0, 1755, 0, 0, 1792, 0, 0,
	1802, 0, 0, 1801, 1776, 0, 0, 1782, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 0, 1799, 0, 0, 1754,
	0, 1793, 0, 1769, 1770, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 0, 0, 0, 0, 1771, 0,
	0, 1790, 0, 1752, 1753, 0, 1785, 1786, 1787, 1795,
	1796, 1797, 0, 0, 0, 0, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 1788, 1783, 0, 0, 0,
	3118, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 1754, 0,
	0, 0, 0, 1777, 1778, 1779, 1780, 1789, 1774, 0,
	0, 0, 0, 1760, 1791, 0, 0, 1771, 0, 1766,
	1767, 1773, 1794, 1772, 1768, 0, 1765, 1763, 1764, 1756,
	1757, 1758, 1759, 1761, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1792, 0, 0, 1802, 0, 0, 0, 0, 0, 0,
	1782, 1784, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 0, 0, 0, 0, 0, 1798, 0, 1799,
	0, 0, 0, 0, 0, 0, 1769, 1770, 0, 0,
	0, 1776, 1777, 1778, 1779, 1780, 0, 0, 0, 0,
	0, 0, 1760, 0, 1790, 0, 1752, 1753, 0, 1785,
	1786, 1787, 1795, 1796, 1797, 0, 0, 0, 1793, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 1788, 1783,
	0, 0, 0, 0, 0, 0, 1755, 0, 0, 1792,
	0, 0, 1802, 0, 0, 1801, 0, 0, 0, 1782,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1800, 0, 0, 0, 1798, 0, 1799, 0,
	0, 1754, 0, 0, 0, 1769, 1770, 0, 0, 0,
	1789, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	1771, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	3145, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 0, 0, 0, 0, 1766, 1767, 1773, 1794,
	1772, 1768, 0, 1765, 1763, 1764, 1756, 1757, 1758, 1759,
	1761, 1762, 0, 1781, 0, 0, 0, 0, 0, 0,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 1777, 1778, 1779, 1780, 1789,
	0, 0, 0, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1792, 0, 0, 1802, 0, 0, 0, 0,
	0, 0, 1782, 1784, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 0, 0, 1798,
	0, 1799, 0, 0, 0, 0, 0, 0, 1769, 1770,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 0, 0, 0, 0, 1766,
	1767, 1773, 1794, 1772, 1768, 0, 1765, 1763, 1764, 1756,
	1757, 1758, 1759, 1761, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 935, 0, 982, 0, 0, 0, 0, 0,
	0, 0, 1789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 943, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 957, 0, 941, 940, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 1766, 1767,
	1773, 1794, 1772, 1768, 0, 1765, 1763, 1764, 1756, 1757,
	1758, 1759, 1761, 1762, 942, 1781, 0, 0, 0, 945,
	0, 0, 0, 0, 990, 0, 0, 0, 0, 0,
	0, 0, 0, 954, 955, 0, 1776, 0, 0, 0,
	0, 0, 971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	983, 947, 0, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 948, 0,
	0, 0, 0, 0, 0, 0, 0, 980, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 981, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 950, 0, 0, 0, 0, 0, 0, 0,
	939, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1791, 0, 0, 951,
	952, 1766, 1767, 1773, 1794, 1772, 1768, 0, 1765, 1763,
	1764, 1756, 1757, 1758, 1759, 1761, 1762, 0, 959, 958,
	0, 0, 0, 0, 0, 0, 953, 0, 0, 0,
	968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 987, 979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	984, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 946, 0, 0, 989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 944, 0, 0,
	0, 975, 976, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 978, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 973, 0, 0, 0,
	0, 0, 0, 988, 969, 0, 0, 962, 960, 0,
	965, 0, 0, 0, 0, 0, 966, 0, 0, 937,
	0, 985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 938, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 977, 0, 967, 0, 0,
	0, 0, 0, 964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 986, 0, 0, 0, 0, 0,
	0, 0, 970, 0, 0, 0, 0, 0, 0, 0,
	0, 949, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 972, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	974,
}

var sqlPact = [...]int{
	5446, -1000, -1000, -1000, -1000, 192, -1000, -1000, 191, 187,
	186, 184, 182, 181, 180, 178, 177, 175, 173, -1000,
	-1000, -1000, -1000, -1000, -1000, 172, -1000, -1000, 171, -1000,
	168, 167, 166, -1000, -1000, 160, -1000, 158, -1000, -1000,
	-1000, -1000, 157, 156, 154, 88966, 88419, 89506, 2326, 109640,
	96014, 2069, 79695, 109093, 79148, 108546, 2116, 10672, 107999, 2756,
	152, -1000, 107452, 151, 145, 143, -1000, 106905, -1000, 2054,
	-1000, 142, -1000, 6647, 64343, 137, 136, 135, 2216, 130,
	-1000, 129, 128, -1000, -1000, 126, -1000, 11412, 1603, -1000,
	125, 124, -1000, 1082, 93833, 123, 121, 2170, 120, 119,
	63796, 118, 117, 2159, 2958, -1000, -1000, 2142, -1000, -1000,
	116, 114, 113, 103, 98, 97, 96, 95, 93, 92,
	91, -1000, 89, 88, 86, 85, 84, -1000, 79, 76,
	75, -1000, 74, -1000, 73, 72, 71, 67, 64, 62,
	61, 60, 58, 57, 56, 53, 43, 42, 122100, -1000,
	-1000, 1905, 1685, 1680, 1663, 1658, 1657, 957, 39, 37,
	34, 33, 32, 31, 30, 27, 26, 25, 24, 23,
	22, 21, 20, 17, 16, 134, 13, 5, 4, 3,
	0, -1, -2, 3545, -1000, 1762, 1100, 29761, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 115580, 110180, -5, -93, -6, -1000,
	3282, 994, 52836, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 278, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 436, 1992, 749, -1000, -1000, -1000,
	106365, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2321,
	-70, -1000, 1978, -1000, -1000, -1000, -1000, -1000, 748, -1000,
	2320, 162, 2243, -1000, -1000, -1000, 3341, 2463, 3743, 3742,
	3741, 3740, 3739, 115040, 1831, 3738, 2530, 3732, 3730, 3729,
	3728, 3726, 3724, 3721, -1000, 87872, 1027, 87325, 86778, 3363,
	105825, 86231, 105278, 73142, 44901, 1086, 3339, -1000, -1000, -1000,
	-1000, -1000, -1000, 110180, -1000, 1026, -1000, -1000, 3720, 3718,
	2058, 739, 95467, -1000, 1697, -1000, 897, 31483, -1000, 1188,
	-1000, 31483, 277, -1000, -1000, -1000, -1000, -1000, -1000, 3717,
	3716, 3712, 3711, 3710, -1000, -1000, 78601, 22821, 78054, 77507,
	104731, 22262, 85684, 85137, 3709, 3708, 3701, 3700, 104184, 72583,
	1022, 1437, -1000, -1000, -1000, -1000, -1000, -1000, -38, 70347,
	3528, 110180, -1000, 259, -1000, -1000, -1000, -1000, -1000, -1000,
	44315, 1049, 43729, 988, 43143, 983, -1000, -1000, -1000, -1000,
	72024, -1000, 103637, 2461, 3699, 3698, 1143, 3697, 3226, 1827,
	3696, 1860, 1232, 3695, 3694, 3692, 3691, 3690, 3688, 3687,
	1485, 103090, 2949, 1519, 102543, 1763, 71465, 1021, 84590, 89506,
	2675, 101996, 1421, 1402, -1000, -1000, -1000, -1000, 3033, 2948,
	2892, 1264, -1000, -1000, -1000, -1000, 55565, 9569, 8429, -1000,
	-1000, 11277, 101449, 58350, 89506, 89506, -1000, -1000, -1000, -1000,
	-1000, 42557, 881, 41971, 1084, -1000, -1000, 56122, 2902, -1000,
	-1000, -1000, -1000, 41385, 741, 40799, 1083, 110180, -1000, 2947,
	1899, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2525, 1620, 3531,
	2757, 70906, 2113, 1379, 3299, 3032, 3030, 1488, 3029, 3686,
	2609, 3026, 3019, 3018, 3015, 3012, 1553, 2608, 730, 29175,
	2932, 1738, 40213, 1575, 1484, 3011, 3008, 3556, 1954, 2006,
	2056, 76960, 3685, 3683, 3260, 3006, 3005, 2798, 3002, -1000,
	2901, 1467, -1000, -1000, -1000, -1000, 1439, -1000, -1000, -1000,
	-1000, 80235, -1000, -1000, 1760, -1000, -1000, 1760, -1000, -1000,
	-1000, -1000, -1000, 1337, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1762, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2261, -1000, 2047, -1000,
	-1000, 2546, 3248, 3248, 3248, 3336, 423, 408, -1000, 134,
	-1000, -1000, 121765, -1000, -1000, 45475, 45475, 45475, 45475, 45475,
	45475, 45475, 2171, -1000, 736, -1000, -1000, 769, -1000, 735,
	593, -1000, -1000, -1000, -1000, -1000, -1000, 733, -1000, -1000,
	-1000, -1000, -1000, -1000, 3528, -1000, 25671, -1000, -1000, -1000,
	434, 732, 45475, -1000, -1000, 3574, 3573, 984, -1000, 256,
	909, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2946, 729, 725, -1000, 724, 723, 722,
	718, 717, -1000, -1000, -1000, 713, 712, 709, 706, 704,
	703, 700, 691, -1000, 2003, -1000, -1000, -1000, -1000, -1000,
	-1000, 635, 634, 634, 634, -1000, 1013, -1000, -1000, -1000,
	260, 633, 251, 631, 630, 627, -1000, 683, 682, 680,
	679, 678, 668, 667, 664, 663, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1012, -1000, -1000, -1000, -1000, -41, 110180,
	-1000, 436, -41, -1000, -1000, 660, -1000, 33791, 33791, 33791,
	-1000, -1000, 2317, 45475, -1000, 2588, -1000, -32, -32, 874,
	54471, -1000, 51721, 874, 387, 786, 59987, -1000, 2899, -1000,
	-1000, 657, 254, -1000, -1000, -1000, -1000, 23378, 2896, 110180,
	110180, 89506, 89506, 89506, 3682, 3140, 45475, -1000, -1000, 68146,
	110180, 90046, -1000, -1000, 3467, 64883, 67606, 110180, 2945, 67066,
	3679, -1000, -1000, -1000, -1000, -1000, 3109, 3678, 3675, 3674,
	-1000, 110180, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 216,
	3108, -1000, -1000, 93286, 216, 3107, -1000, 216, 3106, -1000,
	92746, -1000, -1000, 2264, 3105, -1000, -1000, 236, 3103, -1000,
	-1000, -1000, 218, 3097, -1000, -1000, 247, -71, 3096, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 121765, -1000, -1000, -1000, 66519, -1000, 3268, -1000, -1000,
	110180, -1000, 45475, -1000, 3466, 1670, 74246, 3399, -52, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2508, 2498, 1118, 2348,
	-1000, 3149, 1901, -1000, 31483, 3214, -1000, -1000, -1000, 230,
	23378, -1000, -1000, -1000, -1000, -1000, -1000, 2312, 3095, 1530,
	-1000, 2344, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2178, 3091, -1000, 2031, 3090, 2169, -1000, -1000, 2470, -1000,
	3257, -1000, -1000, 1779, 3089, -31, -1000, -1000, 2093, -1000,
	-1000, -1000, -1000, -1000, 1958, -1000, 971, 3087, -1000, 84043,
	57793, 56122, 70347, -45, -1000, -1000, -1000, -1000, -226, -1000,
	21703, 121765, -1000, -1000, -1000, -1000, 1791, 121765, 855, -1000,
	-1000, 3085, -1000, 121765, 846, -1000, -1000, 3082, -1000, 2941,
	-1000, -1000, 2417, -1000, -1000, 3673, -1000, -1000, 3672, -1000,
	3671, 3670, 3668, -1000, 1501, 1971, 3667, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 83503, 2315, -1000, -1000, 82409,
	2935, -1000, 2411, 3398, -1000, 82956, 1020, -1000, 971, 2410,
	-1000, 92206, 960, 2407, -1000, 3666, 3348, 2707, 971, 2404,
	-1000, -1000, -1000, -1000, -1000, 998, -1000, 61619, -1000, 61619,
	-1000, 1616, -1000, 114500, -32, 89506, 3528, -1000, -74, -1000,
	-1000, -1000, 994, -1000, 55018, -1000, 55018, 94920, 73699, 934,
	701, 63249, 121765, -1000, -1000, -1000, -1000, 121765, -1000, -1000,
	-1000, -156, 2753, -1000, 73699, 57236, 121765, -1000, -1000, -1000,
	-1000, 121765, -1000, -1000, -1000, 73699, 82409, -1000, 100902, 81869,
	-1000, -1000, 1465, 2557, -1000, -1000, -1000, 73699, 1269, 73699,
	73699, 73699, -1000, 100355, -1000, -1000, 2076, 1524, 3252, 2019,
	89506, -1000, 1818, -1000, -1000, -1000, 3284, 110180, -1000, -1000,
	2933, -1000, 65972, 91666, -1000, 91126, -1000, 90586, -1000, 89506,
	-1000, 89506, -1000, 3665, 3661, 3659, -1000, -1000, 3658, -1000,
	3653, 3276, -1000, 121765, 3275, -1000, 3652, 3387, 2932, 121765,
	-1000, 3069, 1692, 1689, 110180, -1000, -1000, 110180, -1000, 110180,
	-1000, -1000, -1000, 1538, -1000, -1000, 2500, -1000, -1000, -1000,
	-1000, 89506, 1398, -1000, -1000, -1000, -1000, -1000, -1000, 3004,
	3651, 1724, -1000, 1799, -1000, 2894, 3280, -1000, 1432, 1772,
	-1000, -1000, 240, -1000, -1000, -52, -1000, 113960, -1000, 2546,
	-1000, 110180, -1000, 2505, 2921, 2931, 1829, 2339, 2607, -1000,
	39627, 2569, 48919, 2343, 134, -1000, -1000, 134, 134, 30909,
	-1000, -1000, 64883, 64883, 23378, 1368, 45475, 45475, 45475, 45475,
	45475, 45475, 45475, 45475, 45475, 45475, 45475, 45475, 45475, 45475,
	45475, 45475, 45475, 45475, 45475, 45475, 45475, 45475, 45475, 45475,
	45475, 45475, 45475, 45475, 45475, 45475, 45475, 45475, 45475, 45475,
	45475, 2240, 45475, 1332, 45475, 45475, 45475, 45475, 2022, -1000,
	-1000, 1951, 498, 2029, -1000, 3510, 3510, 3510, 612, 612,
	16017, 16017, 520, 3650, 769, -1000, 45475, -1000, 115, 45475,
	23937, -1000, 408, 8462, 2480, -1000, 407, 24523, -1000, -1000,
	-1000, 25671, 593, 39041, 45475, 999, 121765, -1000, -1000, 1424,
	3530, 21145, 2863, 2792, 656, 833, 823, 28589, 28003, 27417,
	26831, 810, 45475, 45475, 45475, 45475, 45475, 45475, 45475, 45475,
	-1000, -1000, 3547, -1000, 3530, -1000, -1000, -1000, -1000, 3530,
	1361, 1315, 3530, -1000, 3530, 3530, 5972, 5972, 38467, 37881,
	37295, 49493, 36709, 45475, 26245, 36123, 35537, -1000, 110180, -41,
	3464, 45475, 109, -1000, 120481, -1000, 109, 109, 649, -75,
	121765, 2660, 2660, 53381, 2408, 2204, 2204, 2204, -1000, 874,
	16652, 874, 99268, 2212, 874, 874, 217, 238, 405, 51176,
	2588, 99268, 756, 644, -12, -19, -22, -1000, -1000, -24,
	-25, -1000, -1000, 89506, 641, 23937, 23378, 212, 2012, -76,
	2631, 2628, 2614, -1000, 2581, -1000, 1807, -81, 1329, 89506,
	110180, 3649, -92, -1000, 6393, -86, -1000, 1015, 211, 3530,
	-1000, -1000, -1000, -1000, -1000, 3646, 3644, -1000, 1010, 638,
	636, 454, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	635, 634, 634, 634, -1000, 260, 633, 251, 631, 630,
	627, -1000, -1000, -1000, -1000, -1000, 2887, 89506, 110180, 3643,
	-226, 90046, -77, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 110180, -1000, -1000, -1000, 3640, -1000, 89506, -1000, -1000,
	89506, 216, 3081, -1000, 89506, -1000, 89506, 215, 3079, -1000,
	-1000, 110180, -1000, 89506, 89506, -1000, 110180, 110180, 110180, 73699,
	73699, 239, -1000, 89506, 853, -96, 1161, -52, -1000, -1000,
	-1000, 1760, -1000, 1770, -1000, -1000, -1000, -1000, -1000, -1000,
	1493, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 984,
	-1000, -1000, -1000, -1000, -1000, -1000, 3523, 3518, -43, -1000,
	-1000, 23378, -1000, -54, 1631, 1879, 1308, -1000, 76413, 2413,
	3259, 3639, 2702, 3235, 1615, -1000, 1533, -1000, 3365, 80235,
	3425, 3447, 1325, -1000, 2886, -1000, -1000, 896, 1714, 1742,
	1302, 1299, 80235, 2031, -1000, 64883, -1000, 2634, 3330, 1358,
	1399, 1358, 1358, 1346, -1000, 80235, 1734, 1234, 1230, 1226,
	1914, 1902, -1000, -1000, 1988, -1000, 1224, 1223, 811, 1884,
	-1000, -55, 3424, 3444, 1288, -1000, 2882, 1222, -1000, -1000,
	-1000, 3327, 89506, 23378, 1566, 1551, 1540, 1732, 1220, -44,
	-1000, 3419, 1218, 1217, -1000, 4896, -1000, 73699, 2065, 3078,
	2751, 814, 2749, -1000, -1000, -1000, 814, -45, 70347, 110180,
	210, -1000, 115, 45475, 45475, 115, 45475, 115, 3384, 3076,
	-1000, -1000, -1000, -1000, -1000, 3638, 1931, 2527, -1000, -1000,
	625, 2402, 2870, 110180, 2670, -46, 89506, -1000, 65432, 3074,
	68693, 2031, 2399, -1000, -1000, 81322, -1000, 3072, 436, 2397,
	-1000, 690, 3637, 3071, -1000, 113420, -1000, 3268, 1378, 3070,
	1090, 875, 3462, -1000, 875, 62159, -1000, 110180, -1000, -32,
	4717, 75333, -97, -98, 400, -1000, 99815, 110180, 1078, 75873,
	110180, 3200, 961, 56122, -1000, 56122, -104, -156, 2747, 1518,
	934, 934, 814, -1000, 814, -1000, 89506, 2930, -1000, -1000,
	73699, 934, 934, 934, -1000, -1000, -1000, -1000, 3636, 3635,
	3634, 3633, -1000, -1000, 969, 89506, 110180, 89506, -1000, 209,
	-1000, 110180, -1000, 110180, 110180, 89506, -1000, 969, 110180, 969,
	110180, 969, 110180, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	115, 45475, -1000, -1000, 3632, 1682, -1000, 2929, -1000, 2926,
	-1000, 7, -1000, -1000, -1000, -1000, -1000, -1000, 1923, -1000,
	-1000, -1000, -1000, 89506, 89506, 89506, 89506, 110180, 3165, -1000,
	110180, 3162, 89506, -1000, -1000, 80235, -1000, 2505, 2921, -1000,
	-1000, -1000, -1000, -1000, -1000, 1422, 2266, -1000, 2590, -1000,
	1562, -1000, -1000, -1000, 121765, 50050, -1000, -1000, 121765, 1815,
	-1000, 48345, 47771, -1000, -1000, 1686, 89506, 2674, -1000, 2674,
	-143, -1000, 120393, 2578, 89506, -1000, -1000, -1000, -1000, -1000,
	890, 1832, 1832, 1317, 1317, 1317, 1317, 3380, 928, 3645,
	401, 279, 279, 357, 357, 357, 357, 357, 279, 681,
	612, 612, 681, 681, 681, 681, 681, 612, 612, 612,
	279, 279, 279, 16017, 7753, 9650, 45475, 45475, 1215, 1944,
	498, 8690, 45475, 7283, 7283, 7283, 7283, -1000, 2215, -1000,
	-1000, -1000, -1000, 2868, 624, 49493, 49493, -1000, -1000, -1000,
	-1000, 25097, 45475, -1000, -1000, -1000, -1000, 34951, -1000, -1000,
	119592, -317, 397, -135, 78, -1000, 45475, 45475, 45475, 384,
	-1000, 208, 45475, 110180, -1000, 14968, 755, -145, -1000, -105,
	1405, -1000, 45475, -1000, -1000, 1214, -1000, 1212, 1210, 1208,
	-1000, 623, 382, -1000, 206, -1000, 2181, 621, 620, 45475,
	-1000, -1000, -1000, -1000, -1000, 119374, -1000, -1000, 119156, -1000,
	-1000, 118938, -1000, -1000, 118720, -1000, -1000, -1000, 121592, 14347,
	14221, 13711, 7490, 12467, 11442, -106, 379, -114, 378, 889,
	885, 372, 371, 370, -115, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -116, 369, -1000,
	2867, -135, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	368, -1000, 361, -1000, 121503, -135, 360, 6476, -1000, 49493,
	49493, 49493, -1000, 359, -1000, 120028, -1000, 121330, 34377, 34377,
	34377, 358, 121123, 45475, -135, -121, -1000, -126, -1000, -1000,
	506, -129, 943, 33791, 52286, 23378, -1000, 943, 943, 45475,
	-1000, 45475, 2600, -1000, -1000, -1000, -1000, 2596, 2174, 2660,
	53381, -1000, -1000, -1000, -1000, 99268, -1000, 3528, 2781, -1000,
	99268, -1000, -1000, 110180, 436, -1000, 99268, 99268, 23378, 874,
	-1000, 874, 99268, 783, -1000, -1000, -1000, -1000, -1000, 341,
	58895, 78, 200, 23378, 971, -1000, -1000, 2687, 2687, 2687,
	2687, -1000, -1000, 110180, 1207, -50, -99, -1000, 3486, -1000,
	2017, -1000, 64883, -1000, 767, 1068, 23378, -1000, -1000, -1000,
	618, -1000, 3530, 3530, -1000, 3530, 110180, 2866, 108, -1000,
	107, 68693, 68693, 3631, -1000, -1000, 216, -1000, 89506, 216,
	216, -1000, 89506, 89506, 2264, -1000, 236, -1000, 218, -1000,
	-1000, -71, -1000, 995, 31483, -1000, 1760, -1000, -1000, 1583,
	-1000, 1963, -1000, 1236, -1000, -1000, -1000, -1000, 31483, -1000,
	3067, 110180, 110180, 89506, -1000, 110180, -1000, 2152, 68693, -1000,
	2390, 112880, 2384, 64883, 110180, -1000, -1000, 617, 907, 2576,
	2575, 1074, 110180, 110180, 2571, 112340, 111800, -1000, 3630, 110180,
	2027, 45475, 3325, 2304, 2167, 115, 115, -1000, 115, 115,
	115, -1000, 610, 1328, 89506, 89506, 110180, 68693, 89506, 2023,
	-1000, -1000, -1000, -1000, -1000, 80775, -1000, -1000, 3546, 3536,
	-1000, 1358, -1000, -1000, -1000, 1358, 2031, 1820, 110180, 68693,
	89506, 68693, 110180, 110180, -1000, 1727, 110180, 1407, -1000, 811,
	2025, 115, 115, -1000, 115, 115, 115, 602, 23378, 1973,
	-1000, 2983, 110180, 3571, 111260, 3570, 110180, 110180, 110180, 68693,
	3246, 110180, 110180, 68693, 4896, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 69807, 1072, 971, 1725,
	1205, 1203, 80235, 56122, 958, 56122, 2713, -1000, -1000, 20587,
	-1000, 121765, 121765, -1000, 121765, -1000, 65432, 110180, -1000, 1016,
	110180, 75873, 914, 3068, 61079, -226, 934, 73699, 89506, -46,
	2670, 110180, -1000, -1000, 2031, 3064, 436, 2389, -1000, 73699,
	3459, 3061, 598, 3629, 3628, -1000, 89506, 2311, 2387, -1000,
	-1000, 110720, 3124, 811, 110180, 943, 53381, 1928, -1000, 59442,
	1047, 110180, 1846, 100, -1000, -1000, -1000, -8, 110180, -1000,
	782, -1000, -1000, 4717, 4717, 934, -265, 597, -1000, 852,
	849, 56679, 73699, -132, -1000, -1000, -1000, -1000, 2384, 89506,
	110180, 1255, 2706, 110180, -142, -1000, 199, 596, -1000, 2257,
	-1000, -156, -1000, 961, 56122, 2859, 2856, -1000, -1000, 989,
	-1000, 1429, 934, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -33, 110180, -226, -226, -48, -50,
	-1000, 969, -1000, 969, -1000, 969, -1000, 121765, -1000, -1000,
	1677, 1634, 110180, -1000, 23378, 110180, 89506, 23378, 89506, 2920,
	2915, -1000, -1000, -1000, 110180, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1099, -1000, 1815, 2251, -1000, 593, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2479, -1000, -51,
	30909, 877, -1000, -1000, 89506, -34, 45475, 45475, 8334, 6288,
	45475, 49493, 49493, -1000, 45475, 5511, -1000, -1000, -1000, -1000,
	-1000, 2854, 590, 45475, 64883, 6323, 5740, -1000, 340, 9748,
	681, -1000, 45475, -1000, 339, 33217, -1000, 120669, -56, -149,
	-1000, 17223, -135, -150, -1000, -1000, 764, -1000, 3121, -1000,
	45475, 120758, 2452, 2095, 1821, 1694, 3530, 3567, 20029, -1000,
	62704, 959, 2217, 118502, -1000, -1000, -1000, -1000, 64883, 64883,
	45475, 45475, -1000, 45475, 45475, 45475, -1000, -1000, -1000, 3530,
	880, -1000, -1000, -1000, 880, -1000, -1000, 1358, -1000, 1358,
	-1000, 45475, -1000, -1000, 2853, 45475, -1000, 64883, 64883, 49493,
	49493, 49493, 49493, 49493, 49493, 49493, 49493, 49493, 49493, 49493,
	49493, 49493, 49493, 49493, 49493, 49493, 49493, 49493, 2570, 49493,
	3508, 3508, 3508, -1000, 2912, 2853, 45475, 45475, 64883, 335,
	334, 333, -1000, 45475, -135, -1000, -1000, 9853, 588, -1000,
	2469, -1000, 2785, -1000, 45475, -1000, -144, -1000, 2588, -1000,
	-1000, 2785, 2785, -158, 121765, 53381, 53381, -1000, 568, 45475,
	2565, -1000, -1000, 754, -315, -1000, 847, -1000, -1000, -1000,
	-1000, -1000, 436, -1000, -1000, -1000, 198, 99268, 99268, 753,
	-1000, -161, -1000, -1000, -163, -1000, 3457, 332, 23378, -1000,
	943, 2636, -1000, -1000, -1000, -1000, -1000, -1000, -226, 110180,
	110180, 2237, 3565, -1000, 3535, 761, 752, 194, 3530, 328,
	327, 325, -226, 110180, 110180, 110180, -1000, -1000, -1000, -1000,
	216, -1000, -1000, -1000, 215, -1000, -1000, -1000, -1000, 2632,
	-1000, -52, -1000, -1000, -1000, 45475, -1000, -1000, 3251, 1200,
	1198, -1000, -1000, -1000, -1000, 2885, -1000, 3060, -1000, 2382,
	-1000, 1058, -1000, 1667, -1000, 45475, 564, 2705, 562, 560,
	3627, 2038, 3626, 1075, 3055, 2264, 3050, 2264, -1000, -1000,
	-1000, 904, -1000, 121765, 2304, -1000, 558, 555, -1000, -54,
	1610, 1872, 1197, 986, -1000, -1000, -1000, -1000, 45475, 45475,
	98728, -1000, 461, 3257, -35, -1000, -1000, -1000, 1723, 1196,
	1194, -1000, -1000, -1000, -1000, 2031, 1711, 1192, 1190, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 982, -1000, 2969, 2968,
	882, 110180, -1000, 981, -1000, -1000, -1000, -1000, 45475, -1000,
	-55, 1189, 3389, 2377, 89506, -1000, 2264, 3049, 1187, -1000,
	1185, -1000, -1000, -1000, 3409, 3402, 1181, -1000, -1000, -1000,
	-1000, -1000, 69250, -1000, 110180, 68693, 89506, 1808, 814, -1000,
	2229, 814, 958, 2850, -1000, 2619, 979, 89506, 3623, 324,
	-168, -59, 64883, 3456, -1000, 2314, 363, 89506, 870, -1000,
	3528, -1000, -1000, -1000, 978, -1000, 3386, 89506, 3455, 3047,
	971, 115, 89506, 3555, -1000, -1000, 3453, 89506, 3028, 2310,
	2373, 2504, 811, 74793, 971, 2214, -69, -1000, 1846, 32631,
	3247, -169, -1000, -1000, -1000, 943, 62159, 53381, 45475, 3622,
	-171, -1000, -1000, -1000, -1000, -1000, 96561, 96561, 73699, 73699,
	73699, 934, 110180, 110180, 75873, -1000, -1000, 554, 110180, 110180,
	534, -1000, 110180, 110180, 3621, 73699, -64, 533, -1000, 845,
	844, 843, -1000, -1000, -1000, -1000, -1000, -1000, 961, -1000,
	-156, 56122, 115, -1000, 2231, 89506, -1000, 19471, -1000, -1000,
	-1000, -1000, -1000, -1000, 969, -1000, -1000, 2060, 2342, 2060,
	1824, 1823, -1000, -1000, 2242, -1000, -1000, -1000, -1000, 2633,
	3249, 23378, 3383, 7283, 45475, 45475, 467, 2061, 584, 7283,
	45475, 45475, 64883, 6413, -176, 45475, 45475, -1000, 45475, 751,
	121765, 3564, 45475, 321, 318, -1000, -1000, -1000, 3529, -1000,
	-1000, -1000, 121765, 45475, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 316, -1000, 163, -1000, -1000, -1000, 116120, -1000, 45475,
	315, 3324, -1000, 314, 313, 9126, 556, 118284, 118066, 117701,
	309, -1000, -1000, 306, 305, 121765, 2912, 121765, -1000, -1000,
	1351, 1351, 1359, 1359, 1359, 1359, 3508, 941, 1168, 808,
	455, 455, 455, 491, 591, 591, 455, 455, 455, 2840,
	2553, 531, 7300, -1000, -1000, 121765, 121765, 304, -1000, -1000,
	-1000, -135, 303, 9853, -1000, 2787, 3318, 121765, -1000, 53381,
	2787, 2787, -1000, -1000, 2174, 110180, 121765, 53381, -1000, 2781,
	-1000, 17792, -1000, 23378, -1000, -1000, -1000, -1000, 3528, -1000,
	58895, -1000, 530, -1000, -7, -1000, 2636, -1000, 832, -1000,
	-1000, 73699, 73699, -226, -160, -1000, -1000, 613, 3619, 760,
	23378, 295, -1000, -1000, -1000, -226, -226, -226, -1000, -1000,
	-1000, 3198, 121765, 110180, 110180, 1486, 98188, 110180, 3027, -1000,
	2175, -1000, 1074, 117612, 53926, -1000, 53926, 110180, -1000, -1000,
	-1000, 1919, 1536, 3605, 1131, -1000, 3283, 110180, -1000, 110180,
	-1000, -1000, -1000, 110180, 110180, 89506, 110180, -1000, 68693, 2978,
	-179, 121765, -65, -1000, 830, -1000, 1355, -1000, 18913, 110180,
	68693, 89506, 110180, 68693, 89506, 2151, -1000, -1000, 2966, -1000,
	2976, -184, 23378, -1000, 3563, 3562, 2988, 3293, -1000, 110180,
	3560, 110180, 89506, 3197, -1000, -1000, -1000, -1000, -1000, 1703,
	1184, 1182, 958, -66, 525, -1000, 829, -1000, -1000, 827,
	-1000, 958, -1000, 73699, 56122, 3603, 436, -1000, 2701, -1000,
	94373, 2267, 115, -1000, 3602, 97108, 524, -1000, 2230, -1000,
	592, -1000, 2531, 68693, 2031, 115, 89506, -1000, -1000, 436,
	294, -67, -1000, 3075, 1065, 23378, 89506, 2987, 2518, 811,
	74793, -1000, 1378, 2607, -1000, -68, -1000, 650, 115, 2214,
	-1000, -69, 121765, -1000, 826, -1000, -185, -1000, -1000, 292,
	-1000, 3196, 3192, -1000, 2804, 53926, 522, 518, 110180, 3190,
	-1000, -1000, -187, 3244, 3244, 73699, 56122, 73699, -1000, 961,
	814, -1000, 2396, -1000, -1000, -1000, -1000, -1000, 23378, 1665,
	-1000, 516, 514, -1000, -1000, -1000, -1000, 3249, 7283, 7283,
	45475, 45475, 45475, 7283, 6413, -193, -1000, 7283, 7283, -135,
	-1000, -1000, 120669, -1000, -1000, -1000, 121765, -1000, 18355, 2088,
	-1000, 117424, -1000, 30909, -1000, -1000, 45475, 45475, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 49493, 2837, 513, 64883,
	-1000, -1000, 285, 985, 45475, 47197, 2588, 985, 985, -1000,
	-194, -1000, -1000, -1000, 3528, -7, -1000, -1000, 3600, 23378,
	-1000, 73699, -1000, -1000, 3595, 759, -1000, 3590, -1000, -1000,
	-1000, -1000, -1000, 2743, 3452, -1000, 1874, -1000, 110180, -1000,
	110180, -1000, 23378, 110180, 2817, 1254, -1000, 907, 2561, 512,
	49493, 89506, 873, -1000, 3478, 2790, -200, -1000, 110180, 45475,
	110180, -203, -205, 2361, -1000, -1000, 1252, 45475, -1000, -1000,
	-1000, 64883, 511, 2264, 2264, -206, -208, -1000, -1000, -1000,
	45475, 1178, 110180, 32057, -1000, 3585, 3257, -1000, -1000, -1000,
	-1000, -1000, -1000, 110180, -1000, 45475, 1176, -1000, -1000, -1000,
	3559, 2264, 23378, 2264, -1000, 2264, 3293, 1123, 110180, 68693,
	89506, -1000, 2448, 2448, 73699, 56122, -1000, -71, 958, -1000,
	3451, 2696, 3584, -1000, -1000, -1000, -1000, 2559, -1000, -1000,
	110180, 2543, 938, -1000, -211, -1000, 824, 822, 75873, 914,
	921, -1000, -72, 510, -1000, 813, -1000, -1000, -1000, -1000,
	436, 3445, -1000, 3557, 507, 505, 110180, 2305, 504, 23378,
	3250, 811, 74793, -1000, 3124, 1846, -1000, 2368, 110180, 3234,
	-1000, 2607, 498, -1000, 934, 495, 493, 3147, 3147, -213,
	53926, 53926, -214, 492, 934, -1000, -219, -1000, -1000, -1000,
	-1000, -1000, -73, -1000, 848, 841, -1000, -1000, 89506, 89506,
	45475, 45475, -1000, 7283, 7283, 7283, -1000, 282, -1000, -1000,
	2214, 3316, -1000, -103, 117336, 116971, 5356, 49493, 64883, -220,
	-1000, -1000, 110180, 121765, -117, -1000, 121765, 490, 489, 420,
	-1000, -1000, -1000, 557, -1000, -1000, -1000, 3583, -1000, 97648,
	110180, -1000, -1000, 1930, -1000, -1000, -1000, 110180, 2372, -1000,
	-1000, -1000, 1073, 45475, 7300, 488, 45475, -1000, 3439, -1000,
	2694, 2852, 1924, 53926, -1000, 3249, -1000, 116698, -1000, 1061,
	1918, -1000, -1000, -1000, 121765, 3293, 53926, -1000, -1000, 470,
	469, 121765, 468, 812, 2836, -1000, -1000, -1000, -1000, 121765,
	464, 3389, -1000, -1000, -1000, -1000, 2264, 89506, -1000, -1000,
	-1000, -1000, -227, -1000, -1000, 1935, 115, 2044, 2742, -1000,
	2267, 441, -1000, -1000, 2271, 2616, -1000, 97108, 31483, 31483,
	280, 3438, 921, -1000, 3507, -1000, 3164, 3164, 45475, 3435,
	115, -1000, 3555, 53926, -1000, 89506, 53926, 2302, 1988, 2495,
	74793, -1000, 2504, -1000, -1000, -228, 110180, 1846, -1000, -1000,
	73699, 73699, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1061, -229, -230, -1000, 73699, -1000, -1000,
	2396, -1000, 110180, -1000, 110180, -1000, -1000, -236, -237, -1000,
	2075, 45475, 30909, -1000, -1000, 5356, -239, -1000, -127, -1000,
	3429, 47197, 3582, 3581, 3580, -1000, -1000, -1000, 1873, -1000,
	-1000, -1000, 2986, 2784, 116670, 2472, 110180, 15343, -1000, 2848,
	-1000, -1000, 2696, 440, -1000, -1000, -1000, -1000, 877, 110180,
	2696, 2782, 89506, 1066, -244, 2060, 2060, 45475, 30335, 2138,
	45475, -1000, -1000, 3293, -1000, 2813, 3519, -1000, 914, -1000,
	2111, 110180, -1000, 3285, -1000, 3188, -1000, -1000, -1000, 2701,
	115, -1000, -1000, -1000, -245, 121765, 115, -1000, 252, -246,
	1065, -247, 89506, 1948, -1000, 811, -1000, 2518, 943, -1000,
	-1000, -252, -253, 1924, 1061, 2025, -254, -1000, -255, -260,
	-1000, -1000, 110, 46623, 46623, 46623, -135, -143, -1000, 110180,
	437, -1000, -1000, -1000, -1000, -1000, 2962, 956, -1000, 2275,
	1866, 80, 1071, -1000, -1000, 2025, 110180, -1000, -1000, -1000,
	948, 436, -1000, 45475, 1061, -262, -1000, 1042, -263, -1000,
	1036, -268, -1000, 2825, -1000, -269, 2264, 942, 3378, -1000,
	-1000, -1000, 2271, 89506, -271, -1000, -1000, 2431, -1000, 2696,
	938, -1000, -1000, -1000, 1061, 435, 1924, 433, 1506, 811,
	-1000, -1000, 1358, 3250, 3130, 934, 934, 2696, 1924, 923,
	-1000, 934, -1000, -1000, -1000, 3034, -1000, 50607, 2208, 1819,
	119810, 3034, 3034, -1000, -1000, 110180, 3349, -1000, 2291, 2276,
	1516, -1000, -1000, -1000, -1000, -1000, -1000, 2790, -276, 3347,
	2472, 121765, 2696, -1000, 2060, 2728, -1000, 2060, 2816, -1000,
	2103, -1000, -1000, -1000, 1777, 3505, 2484, 431, -1000, 110180,
	1800, 1793, 3579, 2044, 2271, 1924, 53926, 2696, 53926, -1000,
	-1000, 110180, -1000, 1988, 1311, -1000, -1000, 2025, 2696, 943,
	427, -1000, -1000, 1737, 3474, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 809, -1000, 3148, -1000, 1088, 2238, 2238,
	943, -1000, 807, 2275, -1000, -1000, 426, -1000, 425, -1000,
	2224, -1000, -1000, -1000, -1000, 110180, -1000, -1000, 3578, -1000,
	914, -1000, 2696, -278, 2025, -279, -1000, -226, 1948, -1000,
	1609, 923, 2025, -1000, 1810, -1000, -1000, 2207, 46049, 45475,
	-1000, 3491, -1000, -1000, 2560, -1000, -1000, 45475, 2790, 45475,
	45475, 60534, -284, -1000, 2271, 2025, 1061, 923, 1924, 1506,
	62159, 943, 923, -1000, -1000, -1000, 121765, -1000, -1000, -1000,
	121765, -1000, -285, -301, -265, 96561, 2228, 2484, 923, 1924,
	943, 2696, -1000, -274, -1000, 943, 2025, 1167, -302, -1000,
	-1000, -1000, -1000, 943, 2696, -1000, 2025, -1000, -1000, -1000,
	-1000, 421, -1000, -1000, 2025, 923, 45475, 923, 943, -303,
	943, -1000, 2025, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4452, 4451, 4450, 4448, 4447, 4446, 4445, 4443, 4442,
	4441, 4437, 4436, 4435, 4433, 4432, 4431, 4428, 4427, 4425,
	4423, 4420, 4418, 4413, 4412, 4407, 4406, 4402, 4396, 4394,
	4393, 4392, 4390, 4387, 4386, 4382, 4381, 4379, 4378, 4376,
	4374, 4373, 4372, 4369, 4368, 4367, 4366, 4364, 4360, 4354,
	4348, 4347, 4346, 4343, 4341, 4339, 4334, 4331, 4329, 4328,
	4327, 4324, 4320, 49, 4319, 4318, 4315, 4307, 4305, 4301,
	4299, 4297, 4296, 4294, 4293, 4292, 4291, 4290, 4289, 4288,
	4287, 4286, 4285, 4284, 55, 4280, 268, 4279, 4278, 4276,
	4275, 4274, 4268, 4265, 4263, 4262, 4254, 4251, 4248, 264,
	4246, 124, 155, 4244, 4242, 3746, 4241, 4232, 263, 4231,
	4230, 4229, 4227, 271, 4220, 4218, 4217, 4216, 4210, 4204,
	4203, 4202, 4201, 4197, 4196, 81, 199, 4195, 4192, 2005,
	4190, 4185, 4183, 4182, 4181, 4180, 4176, 4175, 4169, 4162,
	242, 4161, 261, 4160, 4159, 4158, 4157, 4153, 4141, 4139,
	4136, 4133, 4130, 4129, 4124, 4120, 4118, 4117, 4114, 4110,
	4109, 4108, 4105, 4104, 4103, 4101, 4099, 4098, 4088, 4085,
	4084, 4082, 4081, 4080, 4079, 4075, 4073, 4072, 4071, 4070,
	239, 269, 178, 4069, 4068, 259, 258, 4067, 4066, 4065,
	4064, 4062, 121, 6, 247, 4060, 4057, 86, 85, 78,
	102, 99, 95, 4055, 108, 4053, 129, 56, 4052, 8,
	2, 281, 240, 8356, 224, 4050, 4048, 4042, 241, 183,
	4041, 229, 4035, 4034, 4031, 4030, 4029, 73, 51, 173,
	168, 166, 165, 738, 4028, 151, 104, 77, 52, 42,
	15, 64, 202, 21, 4027, 248, 3, 138, 1, 35,
	4025, 4024, 4023, 4022, 3363, 126, 4021, 255, 230, 164,
	4020, 4019, 4018, 751, 4017, 4016, 46, 4015, 91, 76,
	128, 31, 116, 4012, 146, 36, 4010, 163, 72, 4008,
	157, 88, 90, 11298, 4941, 4005, 110, 67, 123, 2972,
	161, 159, 192, 98, 162, 153, 187, 200, 197, 170,
	66, 4004, 243, 4003, 3427, 79, 169, 4001, 3999, 3995,
	82, 186, 103, 3993, 3989, 70, 11, 14, 4, 7,
	137, 22, 20, 29, 3987, 27, 114, 44, 23, 3986,
	26, 3985, 3984, 3983, 3980, 3979, 40, 154, 3977, 270,
	3975, 94, 50, 59, 3974, 39, 210, 3971, 232, 133,
	3970, 3969, 246, 196, 177, 3966, 68, 221, 3965, 3964,
	3962, 3959, 3956, 131, 9, 127, 3955, 3954, 132, 3953,
	48, 231, 185, 3951, 58, 3949, 3946, 167, 105, 136,
	267, 141, 220, 111, 215, 171, 222, 3945, 3943, 3942,
	203, 3941, 3939, 216, 149, 3938, 3933, 195, 273, 83,
	43, 87, 225, 71, 182, 152, 3929, 190, 3928, 3926,
	272, 174, 206, 12, 17, 89, 115, 3925, 5, 218,
	150, 219, 112, 3924, 6350, 1992, 2263, 3923, 3919, 142,
	120, 65, 113, 148, 252, 62, 3916, 3913, 2891, 3912,
	3911, 3904, 3903, 179, 3899, 3897, 3896, 140, 143, 209,
	3895, 118, 63, 45, 19, 119, 238, 256, 109, 212,
	194, 249, 3894, 3890, 3887, 181, 3886, 84, 97, 158,
	189, 244, 54, 3882, 117, 3881, 145, 1617, 61, 147,
	3880, 211, 3877, 3874, 3871, 3870, 3863, 3858, 3857, 226,
	227, 3854, 3853, 3852, 33, 184, 3850, 251, 223, 176,
	92, 60, 3847, 93, 4577, 3846, 172, 237, 74, 253,
	193, 254, 3845, 404, 107, 3844, 0, 12388, 6964, 9708,
	12291, 3843, 4059, 3842, 3838, 3836, 204, 139, 3834, 3833,
	3830, 106, 3829, 80, 3828, 3827, 69, 3824, 25, 16,
	18, 32, 30, 682, 191, 3823, 3820, 144, 122, 134,
	3819, 257, 214, 3818, 3817, 3816, 3813, 100, 3812, 41,
	3811, 38, 3810, 3809, 47, 13, 28, 3808, 3806, 208,
	3805, 207, 245, 3804, 156, 3800, 3408, 130, 3799, 3798,
	3796, 57, 53, 250, 96, 3793, 274, 3792, 3358, 3791,
	3790, 24, 3789, 3788, 235, 201, 175, 205, 3787, 3786,
	160, 3784, 3782, 3775, 266, 3770, 3767, 3762, 37, 3760,
	10, 3758, 3753, 198, 3176, 3750, 3748, 34, 3647, 180,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 32, 33, 34, 34, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	17, 17, 37, 37, 18, 18, 39, 39, 19, 19,
	40, 40, 583, 583, 595, 595, 22, 22, 42, 42,
	23, 43, 16, 584, 584, 584, 584, 35, 24, 44,
	28, 28, 28, 28, 28, 195, 195, 195, 195, 21,
	21, 38, 38, 230, 230, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 579, 579, 232, 232, 231, 225, 225, 226, 226,
	585, 585, 233, 233, 233, 235, 235, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 478, 478, 478,
	511, 511, 510, 510, 510, 509, 509, 599, 599, 600,
	600, 600, 600, 600, 128, 128, 376, 376, 376, 52,
	52, 52, 52, 52, 574, 574, 197, 197, 197, 199,
	199, 198, 198, 198, 198, 198, 75, 75, 590, 590,
	591, 591, 589, 592, 592, 592, 196, 196, 196, 124,
	124, 124, 124, 124, 124, 125, 125, 126, 126, 200,
	200, 200, 202, 202, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 206, 15, 15, 15, 15, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 104, 104, 513,
	513, 514, 514, 191, 191, 192, 192, 192, 192, 193,
	193, 194, 194, 194, 66, 66, 203, 203, 205, 205,
	204, 204, 204, 204, 204, 54, 54, 54, 54, 54,
	54, 54, 55, 55, 55, 55, 55, 56, 56, 56,
	56, 56, 56, 57, 57, 57, 57, 57, 57, 64,
	64, 64, 64, 64, 182, 182, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 72,
	72, 72, 72, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 602, 602, 603, 603, 604, 604, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 81, 81, 338, 338, 303, 303,
	82, 82, 82, 83, 83, 84, 84, 68, 68, 572,
	572, 353, 353, 469, 469, 69, 580, 580, 580, 582,
	582, 581, 581, 86, 86, 375, 375, 87, 87, 87,
	87, 87, 87, 88, 88, 88, 88, 88, 88, 88,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 96, 96, 96, 96, 96, 97,
	97, 97, 94, 94, 94, 91, 91, 91, 90, 90,
	90, 95, 95, 95, 571, 292, 292, 93, 93, 93,
	92, 92, 92, 354, 354, 98, 98, 98, 98, 304,
	99, 99, 99, 99, 99, 99, 99, 99, 102, 102,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 103, 103, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 471, 471, 100, 100, 100, 436, 436,
	105, 105, 105, 391, 391, 106, 106, 106, 106, 106,
	107, 107, 107, 107, 107, 107, 107, 107, 127, 127,
	127, 127, 127, 127, 127, 576, 576, 346, 346, 257,
	257, 257, 257, 117, 117, 117, 117, 118, 118, 118,
	119, 119, 187, 187, 134, 134, 134, 134, 134, 133,
	133, 133, 133, 133, 133, 58, 58, 58, 59, 59,
	60, 60, 61, 61, 62, 62, 63, 63, 63, 63,
	63, 136, 136, 596, 596, 138, 135, 135, 135, 137,
	137, 137, 137, 139, 140, 140, 140, 140, 140, 140,
	140, 140, 141, 141, 503, 503, 362, 362, 501, 501,
	523, 523, 502, 502, 308, 308, 308, 308, 308, 309,
	309, 309, 512, 512, 512, 512, 512, 512, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 188, 188, 189,
	190, 190, 190, 190, 190, 165, 165, 165, 181, 181,
	181, 181, 181, 181, 181, 168, 168, 168, 152, 152,
	143, 143, 143, 143, 143, 143, 143, 147, 147, 147,
	147, 147, 147, 147, 147, 144, 144, 154, 154, 154,
	154, 154, 148, 148, 149, 149, 149, 149, 175, 175,
	151, 151, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 145, 145, 145, 145, 156, 156, 156, 156, 398,
	398, 398, 180, 180, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 178, 178, 178, 178, 178,
	178, 593, 593, 594, 594, 172, 172, 172, 172, 172,
	172, 450, 450, 166, 166, 166, 166, 171, 171, 171,
	171, 174, 174, 174, 174, 381, 381, 163, 163, 163,
	164, 164, 164, 169, 169, 170, 167, 167, 173, 173,
	173, 173, 146, 146, 146, 146, 606, 606, 606, 176,
	176, 162, 162, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 607, 607, 158, 158, 158, 157,
	157, 157, 157, 160, 160, 161, 161, 161, 161, 161,
	161, 159, 150, 179, 573, 573, 569, 569, 569, 569,
	569, 569, 569, 569, 570, 570, 570, 570, 575, 575,
	110, 110, 110, 110, 110, 120, 120, 120, 120, 120,
	111, 111, 111, 111, 111, 113, 113, 112, 112, 112,
	112, 76, 76, 76, 76, 76, 14, 14, 14, 77,
	77, 248, 248, 209, 209, 209, 327, 327, 210, 210,
	316, 316, 316, 316, 207, 207, 208, 208, 78, 78,
	608, 608, 608, 586, 586, 586, 587, 587, 587, 587,
	587, 587, 310, 310, 311, 311, 416, 416, 416, 416,
	416, 314, 314, 314, 315, 315, 315, 315, 315, 315,
	315, 315, 315, 317, 317, 234, 234, 234, 325, 326,
	326, 318, 318, 324, 323, 323, 322, 322, 321, 321,
	319, 320, 320, 320, 329, 329, 328, 331, 331, 330,
	415, 532, 532, 534, 534, 534, 534, 534, 534, 534,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 399, 399, 609, 609, 530, 530, 530, 531,
	526, 526, 527, 527, 527, 527, 527, 312, 312, 313,
	313, 313, 313, 528, 529, 344, 344, 454, 533, 533,
	535, 535, 537, 610, 610, 610, 610, 610, 610, 611,
	611, 611, 414, 414, 413, 413, 336, 336, 538, 538,
	538, 538, 539, 539, 539, 539, 539, 542, 541, 540,
	540, 540, 540, 540, 80, 80, 80, 378, 378, 377,
	377, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 184, 184, 260, 260,
	74, 74, 74, 12, 12, 12, 588, 588, 588, 79,
	79, 79, 79, 79, 79, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 578, 578, 577, 577, 261,
	261, 613, 613, 85, 85, 85, 85, 85, 85, 85,
	85, 472, 472, 473, 473, 73, 73, 73, 73, 73,
	400, 400, 397, 397, 396, 396, 343, 343, 452, 452,
	452, 453, 265, 265, 266, 266, 227, 227, 227, 30,
	29, 20, 20, 25, 25, 26, 26, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 27, 27, 46, 46,
	46, 46, 47, 47, 47, 47, 50, 50, 51, 51,
	45, 45, 45, 45, 48, 48, 41, 41, 597, 597,
	598, 598, 116, 116, 121, 121, 121, 121, 121, 122,
	122, 122, 122, 123, 123, 123, 123, 132, 132, 183,
	183, 183, 183, 183, 183, 183, 53, 53, 53, 53,
	65, 65, 65, 65, 130, 615, 615, 615, 131, 131,
	131, 614, 614, 258, 258, 410, 410, 411, 411, 616,
	616, 412, 412, 412, 412, 412, 251, 250, 252, 252,
	253, 253, 71, 71, 71, 243, 243, 242, 240, 240,
	515, 515, 245, 245, 245, 246, 246, 236, 236, 237,
	237, 238, 238, 239, 239, 249, 249, 617, 617, 108,
	108, 108, 186, 186, 302, 302, 302, 407, 407, 407,
	337, 337, 272, 272, 409, 409, 409, 409, 374, 374,
	374, 185, 185, 351, 351, 364, 364, 365, 365, 466,
	466, 366, 114, 114, 115, 115, 129, 129, 213, 213,
	211, 211, 211, 211, 211, 211, 211, 211, 218, 218,
	219, 219, 220, 220, 221, 222, 222, 222, 222, 355,
	355, 223, 223, 223, 212, 212, 212, 214, 214, 214,
	214, 214, 214, 214, 217, 217, 217, 217, 224, 224,
	224, 216, 216, 549, 549, 549, 551, 551, 553, 553,
	552, 552, 548, 548, 550, 550, 612, 612, 380, 380,
	380, 334, 335, 332, 332, 333, 333, 341, 341, 339,
	340, 340, 342, 342, 451, 451, 451, 228, 228, 228,
	371, 371, 371, 371, 372, 372, 403, 403, 401, 401,
	401, 401, 402, 402, 404, 404, 404, 405, 405, 406,
	406, 368, 368, 369, 369, 370, 370, 370, 370, 432,
	432, 215, 215, 215, 348, 348, 348, 349, 349, 422,
	422, 422, 422, 422, 422, 423, 423, 421, 421, 421,
	421, 455, 455, 455, 455, 455, 455, 455, 455, 455,
	456, 457, 457, 350, 350, 458, 408, 408, 567, 567,
	567, 568, 568, 449, 449, 459, 459, 459, 459, 459,
	459, 447, 447, 448, 448, 467, 468, 468, 384, 384,
	384, 384, 382, 382, 385, 385, 385, 385, 385, 383,
	383, 460, 460, 460, 460, 373, 373, 461, 461, 461,
	461, 462, 463, 463, 464, 464, 417, 418, 418, 474,
	474, 474, 474, 476, 347, 347, 347, 347, 347, 525,
	524, 524, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 490, 490, 491, 491, 491, 491, 491, 491, 491,
	477, 477, 477, 477, 477, 481, 481, 481, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 482,
	482, 487, 487, 488, 488, 488, 483, 484, 489, 489,
	489, 489, 618, 618, 493, 493, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 479, 479, 479, 486, 486,
	486, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 392, 392, 394, 394, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 426, 426, 426, 426, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 543, 543, 543, 543, 543, 543,
	543, 543, 428, 428, 546, 546, 547, 547, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 554, 554, 555,
	555, 557, 557, 558, 558, 559, 560, 560, 560, 561,
	562, 562, 556, 556, 563, 563, 563, 563, 564, 564,
	565, 565, 565, 565, 565, 566, 566, 566, 566, 566,
	438, 438, 439, 439, 445, 445, 445, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 262, 262, 262, 262, 262, 360, 360,
	358, 358, 358, 361, 361, 359, 359, 357, 357, 356,
	356, 435, 435, 433, 433, 437, 437, 386, 386, 492,
	492, 492, 492, 492, 492, 492, 492, 387, 387, 387,
	395, 388, 388, 389, 389, 389, 389, 389, 429, 430,
	390, 390, 390, 431, 431, 440, 444, 444, 443, 442,
	442, 441, 441, 419, 419, 420, 420, 367, 367, 619,
	619, 363, 363, 465, 465, 465, 465, 306, 306, 352,
	352, 305, 305, 297, 297, 298, 298, 298, 298, 345,
	345, 446, 446, 494, 494, 495, 495, 496, 496, 497,
	497, 498, 499, 500, 434, 434, 282, 281, 269, 270,
	280, 279, 278, 268, 271, 275, 276, 277, 273, 274,
	288, 287, 286, 241, 244, 293, 294, 294, 296, 296,
	295, 295, 284, 285, 470, 267, 299, 299, 300, 300,
	300, 301, 301, 301, 301, 263, 263, 264, 264, 289,
	289, 290, 291, 291, 283, 283, 283, 254, 254, 254,
	255, 255, 256, 256, 508, 508, 505, 505, 505, 506,
	506, 506, 507, 507, 507, 507, 504, 504, 504, 504,
	504, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 520,
	520, 520, 517, 517, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 519, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 522, 522,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 6, 6, 4, 4, 5, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 1, 0, 6, 6, 6, 6,
	6, 6, 4, 4, 4, 4, 3, 4, 4, 4,
	7, 7, 9, 8, 9, 5, 3, 5, 7, 4,
	12, 4, 12, 1, 3, 5, 5, 2, 5, 3,
	6, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 4, 2, 3, 10, 3, 6, 4, 3, 1,
	3, 2, 1, 1, 3, 1, 3, 2, 2, 3,
	2, 0, 1, 1, 0, 2, 0, 7, 10, 6,
	8, 6, 6, 6, 9, 4, 3, 2, 2, 0,
	1, 3, 1, 1, 1, 1, 1, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 1, 12, 3, 1, 0,
	1, 1, 2, 3, 3, 0, 4, 6, 0, 5,
	7, 6, 8, 8, 2, 1, 3, 1, 3, 2,
	5, 0, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 6, 4,
	9, 7, 12, 12, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 7, 5, 2, 0, 1, 2,
	3, 1, 1, 2, 2, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 6,
	6, 6, 6, 4, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 6,
	3, 8, 3, 4, 3, 3, 4, 3, 4, 4,
	4, 3, 5, 7, 3, 3, 4, 3, 3, 3,
	3, 3, 2, 0, 1, 0, 1, 0, 4, 3,
	3, 3, 3, 3, 6, 4, 4, 4, 3, 5,
	3, 3, 3, 3, 3, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 1, 2,
	1, 2, 1, 2, 7, 3, 2, 0, 1, 3,
	3, 1, 0, 1, 2, 2, 1, 6, 5, 1,
	2, 1, 3, 2, 0, 7, 2, 5, 0, 1,
	3, 3, 1, 9, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 6, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 1, 1, 3, 4, 6, 3,
	3, 5, 3, 1, 3, 2, 2, 2, 2, 1,
	2, 2, 5, 3, 3, 6, 6, 3, 1, 1,
	1, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 3, 5, 7, 2, 3, 0,
	3, 5, 2, 3, 0, 2, 3, 2, 3, 2,
	6, 4, 7, 7, 7, 9, 5, 2, 6, 4,
	7, 7, 7, 5, 2, 2, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 1, 1, 5, 3, 2, 6, 3,
	3, 4, 4, 3, 1, 3, 2, 3, 3, 1,
	3, 1, 2, 1, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 2, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 1, 1, 2, 2, 1,
	3, 3, 3, 3, 3, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 2, 6, 4, 3, 2, 3,
	4, 3, 5, 3, 6, 5, 6, 3, 5, 6,
	3, 4, 3, 4, 3, 3, 4, 4, 5, 0,
	1, 1, 1, 1, 3, 2, 4, 3, 3, 5,
	3, 4, 3, 5, 3, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 3, 4, 4, 5, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 3, 4, 4, 3, 1, 1, 1, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 4,
	3, 4, 4, 5, 1, 1, 10, 10, 3, 5,
	5, 5, 3, 5, 6, 4, 4, 5, 5, 2,
	3, 2, 5, 4, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 1, 2, 0,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 6, 5, 8, 3, 6, 6, 3, 13,
	16, 1, 0, 1, 2, 3, 0, 2, 0, 4,
	0, 4, 5, 4, 3, 3, 1, 3, 10, 13,
	0, 2, 3, 1, 1, 0, 1, 2, 2, 2,
	2, 1, 1, 0, 1, 3, 1, 1, 1, 2,
	3, 3, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 8, 0, 1, 1, 0, 2, 1,
	0, 1, 0, 1, 1, 0, 1, 4, 1, 0,
	3, 7, 7, 1, 1, 3, 7, 1, 3, 11,
	3, 2, 0, 3, 1, 2, 2, 3, 2, 6,
	2, 1, 2, 2, 2, 8, 4, 2, 5, 5,
	5, 2, 2, 0, 1, 3, 11, 12, 9, 5,
	3, 1, 5, 10, 7, 11, 3, 3, 0, 2,
	4, 3, 3, 1, 5, 1, 3, 1, 2, 0,
	1, 2, 2, 0, 1, 3, 3, 2, 2, 1,
	1, 1, 4, 0, 6, 0, 3, 0, 2, 2,
	2, 0, 1, 1, 2, 2, 0, 3, 3, 2,
	1, 1, 2, 2, 5, 8, 4, 1, 0, 1,
	2, 2, 1, 2, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 4, 2, 2, 2,
	4, 7, 3, 4, 6, 3, 1, 1, 1, 8,
	10, 11, 7, 10, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	3, 0, 1, 8, 11, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 17, 20, 16, 19, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 2, 4,
	2, 3, 1, 0, 2, 0, 1, 1, 0, 9,
	6, 6, 8, 6, 8, 5, 7, 2, 6, 7,
	4, 4, 5, 2, 4, 6, 6, 8, 6, 7,
	8, 9, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 8, 1, 0,
	2, 0, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 3, 2, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 0, 2, 4,
	2, 1, 0, 2, 1, 1, 0, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 2, 3, 2, 2,
	1, 2, 12, 15, 3, 1, 0, 4, 3, 0,
	1, 1, 4, 4, 5, 1, 0, 3, 0, 3,
	0, 3, 0, 3, 0, 4, 0, 1, 0, 6,
	7, 3, 6, 3, 1, 3, 1, 1, 4, 2,
	1, 3, 1, 3, 4, 8, 11, 5, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 6, 4, 5, 4, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 1, 2,
	6, 7, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 1, 0, 3,
	3, 5, 1, 3, 3, 4, 5, 2, 2, 0,
	2, 2, 1, 1, 1, 0, 1, 0, 2, 2,
	5, 4, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 3, 1, 3, 3, 3, 2,
	0, 4, 2, 5, 3, 2, 0, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 0, 3, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 1, 2, 3,
	2, 4, 1, 0, 1, 0, 2, 1, 0, 2,
	5, 7, 2, 1, 2, 4, 3, 5, 0, 1,
	3, 5, 1, 2, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 6, 6,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 3,
	0, 5, 4, 1, 2, 1, 4, 1, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 2, 5, 1,
	4, 2, 5, 1, 4, 3, 3, 0, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 1, 4, 1, 3,
	3, 3, 5, 2, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 5, 4, 6, 3, 5,
	4, 6, 4, 6, 5, 7, 3, 3, 3, 3,
	3, 4, 3, 2, 4, 2, 3, 3, 4, 3,
	4, 3, 4, 5, 6, 6, 7, 6, 7, 6,
	7, 3, 4, 4, 1, 3, 1, 3, 3, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 4,
	3, 4, 3, 4, 3, 4, 4, 3, 6, 5,
	5, 5, 4, 4, 3, 4, 3, 5, 0, 5,
	0, 2, 0, 1, 3, 3, 2, 2, 0, 6,
	1, 0, 3, 0, 3, 3, 3, 0, 1, 4,
	2, 2, 2, 2, 2, 3, 2, 2, 3, 0,
	4, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 588, -101, -98, -66, -64, -105, -106,
	-87, -107, -100, -127, -132, -114, -115, -116, -128, -134,
	-183, -188, -189, -190, -3, -52, -54, -67, -86, -88,
	-99, -109, -108, -110, -117, -124, -120, -104, -58, -129,
	-133, -142, -184, -185, -186, 32, 31, 100, 80, 154,
	128, 137, 201, 381, 423, 434, 395, 142, 415, 400,
	-137, -138, 452, -53, -65, -131, -130, 73, 129, 409,
	-4, -12, -15, 29, 46, -55, -56, -57, 62, -74,
	-70, -81, -75, -68, -69, -72, -601, 102, -550, -89,
	-92, -123, -605, 161, 219, -111, -112, 364, -118, -119,
	417, -121, -122, 419, 162, -60, -59, 156, -211, -213,
	-135, -136, -187, -143, -144, -145, -146, -147, -148, -149,
	-175, -150, -151, -152, -153, -154, -155, -159, -178, -156,
	-157, -158, -161, -160, -162, -167, -163, -164, -165, -166,
	-168, -169, -171, -172, -173, -174, -176, -177, 457, -170,
	-179, 518, 49, 472, 82, 146, 427, 21, -5, -6,
	-7, -8, -9, -10, -11, -14, -13, -71, -73, -76,
	-77, -78, -85, -79, -80, -549, -90, -91, -94, -96,
	-97, -93, -95, 416, -214, -212, 585, 533, -17, -22,
	-23, -18, -19, -21, -24, -20, -25, -26, -27, -37,
	-42, -43, -39, -40, -38, -41, -44, -45, -46, -47,
	-48, -49, -50, -51, -29, -35, -36, -30, -31, -32,
	-33, -34, -16, -28, 554, 563, -217, -215, -216, -224,
	444, 541, 492, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, -304, 2, -284, -289, -290,
	-291, -283, -254, -519, -522, 4, -516, -520, 168, 229,
	328, 21, 23, 22, 24, 25, 26, 27, 29, 30,
	41, 42, 44, 45, 46, 47, 48, 49, 53, 55,
	59, 60, 61, 62, 63, 64, 68, 73, 74, 79,
	80, 81, 82, 83, 84, 85, 91, 88, 89, 90,
	92, 94, 96, 97, 98, 99, 100, 101, 103, 104,
	105, 107, 108, 109, 117, 118, 119, 120, 121, 123,
	128, 129, 132, 127, 131, 133, 135, 136, 137, 140,
	141, 142, 144, 145, 147, 148, 149, 151, 152, 154,
	155, 156, 159, 157, 500, 158, 160, 161, 162, 163,
	166, 174, 175, 176, 181, 183, 184, 188, 189, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 202, 206,
	208, 209, 210, 211, 212, 218, 219, 221, 222, 223,
	224, 225, 230, 231, 232, 236, 233, 242, 243, 247,
	248, 249, 251, 255, 256, 257, 258, 259, 260, 262,
	264, 263, 266, 269, 270, 273, 277, 278, 282, 283,
	279, 284, 285, 287, 288, 291, 289, 292, 293, 290,
	294, 296, 297, 298, 299, 300, 301, 302, 303, 304,
	305, 306, 307, 295, 310, 308, 312, 313, 314, 326,
	323, 318, 319, 315, 320, 316, 317, 321, 322, 325,
	330, 331, 334, 216, 336, 337, 340, 358, 344, 345,
	346, 349, 350, 353, 356, 357, 359, 360, 361, 362,
	363, 364, 365, 366, 368, 369, 371, 372, 373, 375,
	376, 377, 379, 381, 382, 384, 385, 387, 388, 389,
	390, 391, 392, 393, 395, 397, 396, 398, 400, 402,
	403, 404, 409, 415, 411, 412, 413, 414, 416, 417,
	418, 419, 421, 422, 423, 425, 426, 427, 428, 430,
	432, 433, 437, 438, 454, 455, 474, 434, 435, 436,
	439, 440, 441, 442, 443, 447, 445, 446, 448, 449,
	450, 452, 453, 456, 457, 459, 460, 461, 462, 463,
	464, 465, 468, 470, 471, 472, 491, 473, 475, 479,
	480, 481, 482, 476, 477, 490, 484, 485, 487, 488,
	493, 494, 495, 496, 497, 498, 499, 501, 503, 511,
	512, 513, 515, 518, 519, 520, 521, 509, 523, 524,
	527, 528, 529, 532, 530, 531, 533, 535, 538, 539,
	540, 546, 545, 547, 550, 555, 556, 558, 559, 560,
	36, 50, 51, 54, 56, 58, 69, 70, 71, 75,
	124, 125, 153, 164, 165, 177, 190, 191, 203, 205,
	213, 214, 215, 237, 238, 240, 245, 267, 333, 335,
	351, 355, 370, 374, 378, 380, 394, 429, 466, 478,
	483, 504, 505, 506, 507, 514, 516, 541, 542, 543,
	548, 557, -304, 2, -284, 342, -277, 2, -254, -254,
	381, 28, 2, 28, 369, 446, 495, 497, 2, -576,
	-346, 2, 28, -257, -254, 102, 201, 444, -277, 2,
	-576, -346, 25, 2, -254, 2, 356, 22, 27, 66,
	77, 98, 140, 163, 185, 188, -604, 358, 388, 432,
	448, 490, 501, 515, 2, 545, 288, 445, 492, 229,
	120, 520, 439, -588, 437, 438, 356, 386, 425, 204,
	534, -258, 2, 434, -254, 288, 2, 588, 94, 278,
	74, 429, 449, -140, 512, -139, 504, 439, -141, -503,
	2, 310, -254, 588, 588, 588, 28, -267, -254, 492,
	229, 439, 120, 488, 588, 2, 492, 361, 545, 445,
	120, 391, 229, 520, 188, 140, 27, 126, 439, -588,
	288, -574, 2, -569, 4, -520, -516, -298, -297, 492,
	498, 120, -291, -283, 578, -290, 588, 588, 588, 2,
	248, 249, 390, 389, 449, 450, 588, 588, 588, 588,
	437, 2, 163, 22, 27, 66, 93, 98, 126, 185,
	188, 347, -602, 358, 388, 448, 490, 494, 501, 515,
	-587, 473, 68, 414, 439, -586, -588, 288, 520, 140,
	-396, 120, 278, 199, 528, 497, 495, 526, 132, 236,
	531, 530, 588, 588, -102, 2, 585, 32, 31, -101,
	-105, 142, 452, -206, 492, 241, 2, -254, 588, 588,
	2, 248, 249, 437, 438, 588, 588, 186, -569, 2,
	588, 588, 2, 248, 249, 437, 438, 241, 2, 68,
	441, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 2, -181, 449, 473, 210,
	47, 46, 74, 28, 387, 79, 362, 121, 148, 521,
	202, 229, 230, 256, 93, 94, -398, 44, 249, 248,
	438, -593, 437, -450, 493, 440, 446, 487, 260, 434,
	512, 102, 535, 426, 560, 391, 392, 485, 404, 279,
	157, 187, 4, 120, 310, 451, 504, 278, 433, 365,
	84, -612, 2, 492, -614, 2, 512, 512, 2, -614,
	2, -614, 2, -614, 2, -615, 512, 557, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, -212, -214, -213, 588, 588,
	588, 588, 588, 588, 588, -181, 449, 2, 74, 28,
	-339, -341, 525, 239, 150, 348, -211, -213, 2, -549,
	-501, 2, -424, -523, -426, 576, 577, 569, 489, 67,
	327, 561, -438, 126, 526, 342, -522, -427, -440, 153,
	429, -361, 8, 9, 5, 6, 7, -263, -428, -434,
	517, 167, 332, -301, 589, 10, 585, -546, -213, -439,
	37, 205, 65, -505, -300, -264, -477, 240, -299, -283,
	-543, -544, 4, -516, -517, -506, -480, -488, -484, -485,
	-491, -254, -519, 77, 111, 112, 110, 115, 114, 281,
	280, 116, 113, 451, 534, 66, 36, 213, 214, 245,
	333, 215, 75, -545, 141, -518, 237, 238, 466, 51,
	394, 177, 125, 124, 335, 56, 54, 542, -489, 122,
	504, 505, 506, 507, 190, 191, 58, 164, 165, 355,
	378, 483, 514, 516, 203, 267, 43, 106, 187, 235,
	217, 244, 246, 250, 268, 271, 311, 324, 329, 352,
	354, 424, 458, -618, 543, 478, 69, 70, -551, 396,
	-552, -277, -551, 588, 588, 590, 588, -332, -334, -335,
	2, 28, 138, 585, 2, -455, 2, -456, -460, -213,
	261, -459, 585, -457, 583, -284, 343, -547, 430, -543,
	-544, -263, -283, -300, 4, -516, -518, 587, -336, 585,
	120, 492, 78, 229, 163, -391, 585, -254, 28, 342,
	508, 590, -333, 385, -436, 585, 342, 186, 345, 60,
	292, 2, 2, 2, 2, 2, 213, -254, 492, 119,
	2, 259, 2, 2, 2, 2, 2, 2, 2, -354,
	213, 2, -284, 545, -354, 213, 2, -354, 213, 2,
	-397, 2, 87, -268, 213, 2, -254, -292, 213, 2,
	-287, -289, -296, 213, 2, -294, -254, -514, 213, 2,
	-513, -508, 10, -507, 5, 4, -516, -520, -517, -519,
	77, -424, 2, -129, 2, 60, -254, 545, 2, 2,
	454, 2, 585, -140, 71, 512, 43, 449, -411, 2,
	-412, -250, -251, -252, -467, -253, 247, 384, 393, 564,
	130, 327, 560, -501, -596, 186, 568, 508, -501, -362,
	587, 2, 2, 2, 2, 2, 2, -460, 213, -284,
	2, -281, -504, 4, -516, -520, -517, -521, 28, 31,
	32, 33, 35, 37, 38, 39, 40, 57, 65, 66,
	72, 76, 78, 87, 93, 102, 110, 111, 113, 112,
	114, 115, 116, 126, 130, 134, 138, 139, 143, 146,
	150, 167, 169, 182, 185, 186, 201, 204, 207, 220,
	234, 239, 241, 261, 265, 272, 280, 281, 327, 332,
	338, 342, 343, 347, 348, 367, 383, 399, 420, 444,
	451, 469, 486, 492, 502, 508, 510, 517, 525, 526,
	534, 536, 544, 549, 551, 552, 553, 554, -522, 2,
	-460, 213, 2, -286, 213, -460, -289, 2, -268, 2,
	-280, -504, 2, -305, 213, -284, -285, -289, -287, 2,
	2, 2, 2, 2, -294, 2, -513, 213, 2, 545,
	241, 508, 590, -352, -297, -298, -500, 8, -345, -254,
	587, -424, 2, -129, -113, 2, 182, -424, 213, 2,
	-129, 213, 2, -424, 213, 2, -129, 213, 2, -590,
	2, -513, 213, -254, 2, 292, 2, 2, 515, 2,
	98, 492, 119, 2, 413, -603, 432, 519, 2, 2,
	2, 2, 2, 2, 2, 492, -273, 2, -254, 182,
	476, -294, 213, -295, 2, 445, -613, 396, -513, 213,
	2, 545, -287, 213, 2, -287, 229, 243, -268, 213,
	2, 497, 495, 497, 495, 186, 2, 241, 2, 241,
	2, -461, 2, -462, -456, -463, 583, 343, -471, 2,
	-470, -507, 541, -102, 585, -102, 585, 449, 585, -513,
	-284, -284, -424, 2, -129, -113, 2, -424, 2, -129,
	2, -126, -513, -125, 585, 186, -424, 2, -129, -113,
	2, -424, 2, -129, 2, -206, 182, 2, 120, 492,
	-181, 2, 182, 536, 2, 8, 2, 220, -513, 440,
	392, 174, 2, 454, 2, 455, 74, -398, 560, 74,
	186, 2, 186, 2, -381, 2, 554, 186, 2, 2,
	-573, 2, 342, 186, 2, 186, 2, 186, 2, 186,
	2, 186, 2, -180, 450, 513, 491, 389, 249, 2,
	-129, 551, -113, -424, 551, 2, -594, 182, 438, -424,
	2, 511, 258, 158, 186, -381, 2, 186, 2, 186,
	2, 5, 2, 390, 474, 2, 247, 384, 474, 2,
	-284, -606, 28, 2, 492, 545, 445, 2, 2, 88,
	89, 186, 2, 186, 2, 200, 186, 2, 186, 492,
	560, 2, -373, -460, -410, -411, -410, 508, -339, -341,
	-181, 454, 2, -218, -371, -220, 182, -401, -402, -221,
	272, 169, 338, -222, -380, 28, 138, -380, -380, 60,
	586, 586, 11, 12, 76, 41, 576, 577, 578, 579,
	180, 580, 581, 574, 575, 573, 566, 567, 571, 253,
	254, 95, 570, 568, 86, 286, 431, 170, 171, 172,
	173, 410, 227, 34, 228, 14, 15, 16, 33, 347,
	271, 561, 217, 458, 569, 17, 18, 19, 244, 246,
	329, 50, 220, -262, -307, -424, -424, -424, -424, -424,
	-424, -424, 354, 585, -367, -419, 583, -213, 585, 585,
	585, -500, -213, -424, -438, 586, -359, 585, -213, -438,
	-433, 585, 429, 583, 585, -441, -424, 5, 5, 5,
	585, 587, -554, 555, 182, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 585, 585, 585,
	380, -482, 585, -481, 585, -481, -481, 546, -479, 585,
	563, 556, 585, -479, 585, 585, 585, 585, 585, 585,
	585, 585, 585, 585, 585, 585, 585, 546, 590, -551,
	-336, 585, -363, -465, -424, 578, -363, -363, 342, -356,
	-424, 106, -384, 250, 311, 187, 268, 424, 235, -421,
	589, -421, -449, 563, -213, -457, -283, -213, -459, 585,
	-455, -449, -103, -500, -86, -99, -108, -129, -142, -185,
	-186, 578, -284, 585, 186, 585, 587, -504, 186, -345,
	-268, -284, -299, -300, -305, 2, 137, -356, -569, 520,
	439, 445, -345, -257, 38, -435, -474, -475, -525, 589,
	-524, -477, -487, -483, -486, 370, 374, -506, 54, 542,
	-489, 240, 4, -516, -518, 237, 238, 466, 51, 394,
	177, 125, 124, 335, 56, 504, 505, 506, 507, 190,
	191, 58, 543, 478, 69, 70, -569, 520, 439, 445,
	-345, 182, -511, 2, -510, -509, 116, 451, -507, 5,
	2, 153, 2, 2, 2, -254, -233, 590, 64, 418,
	153, -354, 213, -233, 153, -233, 153, -306, 213, -305,
	-233, 153, -233, 590, 153, -233, 590, 153, 587, 590,
	153, -511, 2, -397, -503, -356, 38, -411, 2, 126,
	-509, -616, 590, 270, -309, 285, 326, 209, 343, 558,
	336, 130, -512, 5, 4, -434, -446, 126, 278, 240,
	-494, -496, 8, -495, 9, -497, 576, 577, -502, -501,
	109, 587, -504, -230, 411, 452, 357, -229, 24, 29,
	142, 231, 314, 539, 159, -322, 232, -319, 361, 153,
	470, 529, -583, -584, 436, 499, 500, 90, 336, 452,
	357, 411, 153, -377, -379, 38, 118, 314, 356, 61,
	224, 290, 291, 472, 548, 153, 452, 357, 411, 357,
	24, 142, -245, -242, 452, -584, 99, 411, 484, 383,
	-584, -232, 470, 529, -583, -584, 436, 411, -231, -324,
	-319, 361, 153, 589, 24, 142, 411, 452, 357, -599,
	-600, 29, 411, 357, -577, -548, 554, 153, -460, 213,
	-591, -125, 262, 5, 10, -513, -125, -352, 590, 590,
	-504, 578, 438, 437, 153, 153, 153, 153, 182, 327,
	2, 2, 2, 2, 2, 188, -586, -604, 2, 2,
	-284, 213, -338, 342, -572, -353, 492, -284, 182, 327,
	43, -286, 213, 2, -289, 545, -577, 327, -288, 213,
	-284, 38, 585, 327, 2, -397, 2, 229, -548, 327,
	-461, -302, -284, -456, -302, 452, -277, 38, -421, -284,
	586, 590, -471, -471, -513, -194, 554, 186, 102, 585,
	585, -206, -468, 590, -467, 220, -514, -126, -513, 414,
	-513, -572, -268, 2, -284, 2, 492, 251, -513, -194,
	220, -513, -513, -513, -503, 28, 455, 2, -180, 450,
	513, 89, 455, 2, -284, 492, 120, 229, 80, -254,
	-575, 182, -570, 425, 439, 520, -569, -284, 120, -284,
	120, -284, 120, -284, -284, 2, 2, 2, 2, 2,
	85, 85, 2, 46, -594, 182, 2, 511, 2, 511,
	2, -254, -254, -254, 473, 270, -284, 493, -607, 2,
	186, 182, 2, 492, 229, 492, 229, 120, 186, 74,
	120, 28, 492, 435, -233, 590, -258, -218, -371, -503,
	-372, -371, -219, -218, -221, 182, 393, 530, 314, 456,
	255, -402, -401, 28, -424, -406, 176, 313, -424, -404,
	-426, 576, 577, -495, -497, -355, 336, -212, -212, -212,
	-342, -451, -424, 383, 229, -476, -474, -474, -282, -504,
	504, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, 271, 217, 458, 50,
	220, -424, 508, -424, -424, -424, -424, 308, 327, 332,
	517, 167, 527, 138, 336, -619, 486, 40, -431, -213,
	-360, 585, -445, 35, 469, 28, -438, 585, 2, -419,
	-424, -420, -357, -356, -356, 586, 544, 28, 138, 578,
	2, 586, 590, 38, 586, -424, -357, -437, -433, -356,
	-444, -443, 551, -392, -393, 559, 295, 123, 211, 293,
	-394, 443, -498, 8, -504, 578, -555, 175, 204, 585,
	586, 2, 586, 2, 586, -424, 2, 586, -424, 2,
	586, -424, 2, 586, -424, 2, 586, 2, -424, -424,
	-424, -424, -424, -424, -424, -356, 8, -498, -498, 504,
	504, -498, -498, -498, -490, 370, 371, 372, 373, 273,
	274, 275, 276, 374, 375, 376, 377, 300, 301, 302,
	303, 296, 297, 298, 299, 304, 305, 306, 307, 195,
	196, 197, 198, 191, 192, 193, 194, -490, -386, 2,
	-492, -356, 4, 559, 295, 123, 211, 293, 443, 5,
	-386, 2, -387, 2, -424, -356, -388, -425, -426, 576,
	577, 569, -438, -389, 2, -424, -357, -424, 57, 265,
	510, -390, -424, 186, -356, -356, 2, -356, 2, -552,
	38, -356, -348, 590, 186, 38, 4, -348, -348, 585,
	586, 590, -385, 208, 289, 284, 243, -385, -455, -384,
	250, -382, 352, -382, -382, -449, -269, 583, 591, -504,
	-449, -448, -447, 38, -277, 349, -449, -449, 587, 586,
	-448, 584, -567, 585, 588, 588, 588, 588, 588, -284,
	585, -356, -504, 587, 475, 2, 586, 244, 244, 244,
	244, 430, 586, 508, -571, -292, -296, 2, 554, -101,
	344, 586, 590, -347, 37, 583, 587, -498, 2, 2,
	-493, 546, 585, 585, -393, 585, 186, -571, -296, 2,
	-346, 590, 508, -254, 2, -284, -354, -233, 153, -354,
	-354, -233, 590, 153, -268, -287, -292, -294, -296, -254,
	-513, -514, -233, -288, -596, 586, 512, -412, -308, 393,
	468, 412, 447, 488, 8, 9, 8, 9, 590, -504,
	590, -597, 93, 508, 78, 439, -247, 279, 508, -415,
	213, 78, -526, -271, 93, -527, -254, 72, 526, 383,
	185, 151, -597, 93, 383, -597, 93, 2, 231, 93,
	452, 473, 28, 60, -460, 41, 41, 28, -595, 325,
	266, 550, 186, 560, 492, 229, 439, 508, 508, -460,
	-379, -474, 118, 290, 291, 60, -499, -494, 576, 577,
	-499, 60, -499, -499, -499, 554, -286, -460, 439, 508,
	508, 508, 402, 402, -242, 508, 508, -617, 568, 402,
	590, 41, 41, 28, -595, 325, 266, 186, 508, -305,
	-269, 540, 42, 540, 42, 540, 508, 42, 439, 508,
	590, 42, 508, 508, -578, -259, 105, 320, 283, 321,
	97, 317, 96, 316, 103, 318, 104, 319, 547, 330,
	63, 315, 294, 322, -260, -261, 363, 538, -513, 452,
	357, 411, 153, 220, -468, 220, -468, -297, -254, 587,
	-129, -424, -424, -129, -424, -129, 46, 153, 2, -613,
	259, 585, -312, 327, 186, -345, -469, 241, 590, -353,
	-569, 153, -510, -378, -377, 327, -288, 213, 2, 153,
	-336, 327, 147, 585, 391, 2, 153, -270, 213, -255,
	-254, -397, -236, 496, 153, -375, 536, -407, -129, 585,
	126, 38, -407, -364, -365, -466, -366, -271, 585, -277,
	-421, -102, -470, 586, 586, 586, -193, 346, -192, -254,
	5, -206, 536, -311, -416, -415, -530, -531, -526, 271,
	229, 526, 243, 168, -337, -272, -271, 119, -200, 554,
	-125, -126, 586, -468, 220, 476, -194, -194, -468, -468,
	-284, 182, -513, -194, -194, -194, 2, 2, 2, 2,
	-381, -284, -268, -305, -284, 587, -345, -345, -296, -292,
	-381, -268, -381, -268, -381, -268, -129, -424, 2, 449,
	182, 182, 587, -381, 391, 120, 492, 361, 229, -284,
	-305, -284, -305, -268, 120, -268, 121, -284, -460, -372,
	-219, 343, 255, 456, -404, -405, -426, 429, 430, -405,
	429, 430, 8, 9, 8, 9, -223, 460, 331, -354,
	590, -227, 39, 134, 255, -284, 560, 149, -424, -424,
	508, -619, 486, -431, 149, -424, 308, 332, 517, 167,
	527, 138, 336, 186, 585, -425, -425, 586, -358, -424,
	-424, 584, 593, 586, -341, 590, -339, -424, -356, -356,
	586, 587, -356, -345, 584, 584, 590, 586, -442, -443,
	143, -424, 508, 508, 508, 508, 585, 586, 587, -560,
	353, 585, 585, -424, 586, 586, 586, 586, 38, 590,
	590, 590, 586, 590, 590, 590, 586, 586, 586, 590,
	586, 560, 560, 586, 586, 586, 586, 590, 586, 590,
	586, 186, 586, 586, -395, 367, 586, 11, 12, 576,
	577, 578, 579, 180, 580, 581, 574, 575, 573, 566,
	567, 568, 86, 286, 431, 14, 15, 16, 244, 220,
	-425, -425, -425, 586, -429, -430, 186, 182, 38, -390,
	-390, -390, 586, 186, -356, 586, 586, 585, -553, 288,
	327, 586, -418, -417, 552, -465, -349, 2, -455, -279,
	-504, -418, -418, -356, -424, 250, 250, -383, 536, 342,
	-385, -455, -448, -500, -423, -422, 184, 39, 134, 323,
	216, -448, -277, -336, -448, -448, -504, -449, -449, -447,
	586, -568, -500, 586, -350, -458, -547, -341, 587, -504,
	-203, -548, -182, 5, 332, -182, -182, -182, -345, 508,
	508, 25, 368, -474, 583, 584, 8, -504, 585, -498,
	-498, -498, -345, 186, 186, 186, -510, -510, 2, -233,
	-354, -233, -233, -305, -306, -233, -233, -233, -376, 554,
	-501, -411, 524, 83, 393, 504, -501, -229, 411, -271,
	-271, -284, -293, -254, 199, 403, -510, 327, -415, 213,
	-235, 327, -474, -278, -254, 585, -399, 556, 255, 255,
	536, -271, -278, 255, 213, -271, 213, -278, 2, -278,
	-579, 393, 337, -424, 60, -320, 277, 391, 328, -230,
	411, 452, 357, -129, -129, -129, -129, -129, 585, -596,
	536, 137, -284, -305, -284, -293, -510, -288, 452, 357,
	411, 324, -299, -499, -499, -377, 452, 357, 411, -293,
	-510, -286, -510, -241, -254, -241, 439, -268, 402, 560,
	45, -617, -231, -129, -129, -129, -129, -129, 585, -269,
	-232, 411, 5, 213, -271, 5, -271, 213, 5, -254,
	-271, -293, -510, -600, 24, 142, -271, -293, -510, -259,
	-513, 332, 532, -577, 439, 508, 508, -460, -125, -197,
	554, -125, -191, 225, 578, -574, -254, 545, -254, -310,
	-313, -311, -271, -209, -210, 556, 554, 153, -303, -284,
	583, -194, -513, -284, -469, -294, -295, 153, -336, 327,
	-513, 38, 153, 585, 2, 2, -287, 342, 327, -270,
	213, -237, 144, -617, -268, -418, -349, -374, -409, 420,
	342, -337, 541, -277, -374, -351, 590, 186, 568, 587,
	-337, -464, 578, -102, -102, -194, 590, 585, 568, 568,
	585, -513, -513, 586, 590, -235, -284, -270, 229, 229,
	-276, -255, 586, 590, 587, 585, -202, 346, -201, 145,
	257, 242, 462, 463, 464, 465, 136, 461, -468, -200,
	-126, 186, 186, -61, 554, 492, -194, 589, -254, -381,
	-381, -381, 449, 449, -254, -280, -268, -284, -281, -305,
	182, 182, -268, 530, -405, 343, 282, -451, -228, 562,
	-284, 589, -424, -424, 149, 149, -424, -425, -425, -424,
	149, 186, 585, -424, -435, 33, 33, 586, 590, -420,
	-424, 586, 544, -341, -341, 586, 578, -504, 589, 586,
	-433, 146, -424, 502, 295, 211, 293, -394, 293, -394,
	-394, -498, 5, -504, 578, -561, -274, 585, -254, 552,
	-340, 348, 586, -476, -474, -424, -424, -424, -424, -424,
	-498, -479, -479, -494, -494, -424, -429, -424, -476, -474,
	-425, -425, -425, -425, -425, -425, -425, -425, -425, -425,
	-425, -425, -425, -425, -425, -425, -425, -425, -425, 138,
	327, 336, -425, -430, -429, -424, -424, -474, 586, 586,
	586, -356, -101, 585, 288, -368, 204, -424, -468, 590,
	-368, -368, 586, -455, -455, 585, -424, 250, 584, 590,
	592, 568, -336, 587, -447, -448, 584, 586, 590, 586,
	590, -408, 38, 586, -504, -418, -205, -204, 135, 53,
	107, 133, 332, -345, -345, 345, 5, 8, 583, 584,
	587, -498, 586, 586, 586, -345, -345, -345, -233, -233,
	119, 314, -424, 508, 508, 60, 220, 153, 327, 538,
	-532, -527, 151, -424, 585, 229, 585, 585, 2, -225,
	-226, 142, 452, 24, -598, 2, 536, 153, -233, 153,
	-233, 558, -320, 585, 585, 508, 439, -247, 508, 554,
	-356, -424, -195, 126, -503, -584, 589, -584, 589, 439,
	508, 508, 439, 508, 508, 554, 166, 166, 560, -241,
	554, -356, 508, -478, 48, 26, 327, -287, -233, 153,
	508, 508, 520, 452, -513, 332, -293, -510, -288, 452,
	357, 411, -468, -199, 346, -198, 145, 422, 136, 257,
	222, -468, -197, 186, 241, 554, -288, 2, 586, 586,
	590, -533, 38, 340, 340, 585, -284, -82, 554, -467,
	-500, -580, 554, 43, -286, 38, 153, -577, -129, -288,
	-472, -473, 5, 38, -284, 153, 342, 327, -238, 264,
	-617, -508, -548, -341, -374, -363, 328, 91, 586, -418,
	-365, -349, -424, 2, 586, -192, -193, -513, -513, -513,
	-194, -206, -206, -416, -314, 585, -270, -255, 585, -206,
	-272, 2, -514, 590, 585, 568, 568, 568, -200, -468,
	-125, -129, 346, -284, 578, -381, -326, -325, 361, 336,
	-326, 429, 429, 343, 176, 260, -227, -269, -424, -424,
	149, 33, 33, -424, -424, -435, 586, -424, -424, -356,
	584, 5, -424, 586, 586, 8, -424, 586, 587, -562,
	-254, -424, 586, 60, 586, 586, 590, 590, 586, 586,
	586, 586, 586, 586, 586, -430, 186, 138, 336, 585,
	586, 586, -101, -432, 207, 60, -455, -432, -432, -383,
	-345, -455, -422, -269, 583, -504, -500, -458, 585, 587,
	-204, 568, -513, -513, 554, 584, 2, 583, -504, 586,
	119, -271, -271, 492, 429, -241, 383, -415, 153, -534,
	93, -536, 76, 168, 102, 327, 332, 526, 383, 72,
	126, 399, -609, 38, 565, 586, -343, -452, -547, 585,
	-254, -343, -345, 327, 481, 126, 327, 126, 549, 119,
	2, 520, 79, -271, -278, -345, -345, -284, -293, -510,
	160, 586, 590, 568, 2, 578, 578, -293, -510, -288,
	-293, -510, -286, 359, 166, 160, 586, -269, 5, 5,
	153, -266, 76, -271, 5, -271, -287, 119, 439, 508,
	508, -197, 590, 585, 568, 568, -197, -514, -125, 2,
	-336, -327, 231, -271, -531, -528, -529, 383, -535, -537,
	168, 383, -129, 2, -208, -207, -254, 5, 585, -312,
	346, 584, -582, 346, -581, 117, 136, -510, -378, -129,
	-288, -336, 586, 590, 147, -400, 536, -269, -284, 153,
	-239, 263, -617, -508, -236, -403, -401, 139, 585, 342,
	-129, -341, 568, 586, 586, 119, 119, 223, 152, -343,
	585, 585, -345, 119, 586, -201, -202, -513, -125, -513,
	-200, -468, -62, -63, 229, 93, 366, -281, 492, 229,
	585, 585, -227, -424, -424, -424, 586, -341, -504, 578,
	-556, 361, 586, -451, -424, -424, -425, 186, 585, -435,
	586, -557, 553, -424, -369, -370, -424, 428, 108, 205,
	-557, -557, 586, -500, 2, -513, 2, 583, 2, 220,
	38, 402, -415, -278, -282, -275, -254, 168, 213, 332,
	549, -399, 255, 585, -425, -284, 585, 2, 30, -610,
	130, 234, 586, 590, -453, -265, -254, -424, -453, 586,
	586, 332, 332, 549, -424, -474, 585, -233, -233, 586,
	586, -424, 508, -503, 100, -501, 2, -584, -268, -424,
	508, 5, -233, -282, -233, -233, -266, 520, -293, -510,
	-288, -198, -199, -513, -125, -197, 38, -317, 233, 2,
	-533, 255, -275, 255, -608, 554, 586, 590, 568, 568,
	-310, -209, -83, -84, 509, -467, 590, 585, 568, -336,
	38, 5, 585, 585, -254, 342, 585, -269, -249, 92,
	-617, -508, -237, -374, 328, -345, 93, -403, -431, -194,
	585, 585, -315, 81, 94, 127, 212, 189, 230, 473,
	479, 28, -315, 586, -343, -343, 586, 585, -194, 586,
	590, 28, 585, 28, 585, -284, -305, -356, -356, 586,
	-341, 60, 590, 586, 586, -425, -435, 586, -558, -559,
	-274, 590, 585, 585, 453, 584, 2, -241, 383, -254,
	-536, -275, 327, 536, -424, -256, 585, -424, 38, 234,
	131, 218, -414, -611, 101, 482, 221, -452, -227, 586,
	-413, 536, 399, -266, -343, 585, 585, 585, 568, 186,
	585, -478, -233, -287, 586, -589, 397, -129, -321, -322,
	220, 585, -316, 342, 119, 314, -207, -501, -501, 586,
	38, -84, 9, -581, -582, -424, 38, -129, -472, -343,
	-284, -343, 342, -243, -242, 272, -508, -238, 586, -278,
	-374, -514, -514, -413, 586, 586, -514, -63, -345, -345,
	586, 586, -563, 391, 430, 206, -356, -342, 586, 590,
	38, -370, 2, 2, 2, 402, 153, 208, 586, -538,
	287, -254, 586, 131, 218, -317, 585, -228, -453, -317,
	208, -284, -585, 536, 586, -329, -328, -325, -331, -330,
	-325, -356, -501, 100, 359, -356, -266, -592, 187, -591,
	5, 10, -209, 359, -344, -454, -271, 82, 119, -327,
	-129, 586, -129, 586, 586, -400, 586, -284, -240, -515,
	402, 404, -617, -239, -418, 586, 586, -414, -413, -323,
	-319, 586, 586, 586, 586, -564, -565, 50, 523, 109,
	-424, -564, -564, -559, -561, 168, 554, -539, -542, -541,
	342, 459, 187, 360, 586, 481, 548, -323, -345, 554,
	-336, -424, -413, 586, 590, 541, 586, 590, 541, 586,
	186, 586, -233, -196, 554, 46, -316, -284, 586, 590,
	382, 132, 142, -317, -608, -413, 585, -414, 585, -246,
	-245, -617, -494, -249, 139, -194, -194, -317, -414, -210,
	554, -194, -566, 151, -565, 379, 181, 429, 379, 181,
	-566, -566, -275, 55, -541, 342, -542, 342, 530, 132,
	-610, 586, 55, -538, -317, -328, 220, -330, 186, 359,
	437, -591, 30, -248, -247, 585, -454, 430, 430, 2,
	-321, -316, -414, -343, -317, -343, -244, -345, -243, 328,
	530, -323, -317, -418, 109, 204, 503, 314, 33, 568,
	-540, 314, 418, 64, 452, -540, -418, 568, -539, 585,
	585, 346, -345, 2, -209, -317, 586, -323, 586, -240,
	452, -210, -323, 429, 350, -565, -424, 23, 332, 126,
	-424, -610, -356, -356, -193, 585, 586, -316, -323, -413,
	-210, -414, -246, -364, -418, -210, 586, 586, -193, -234,
	64, 418, -248, -210, -414, -418, -317, -418, -418, -318,
	-319, 508, 586, -418, -317, -323, 585, -323, -210, -356,
	-210, -418, 586, -418, -318,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 540, 541, 543, 544, 545, 547,
	548, 550, 552, 554, 555, 556, 558, 559, 561, 562,
	563, 564, 565, 567, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	634, 636, 0, 1329, 1331, 1333, 1335, 0, 779, 0,
	36, 37, 39, 0, -2, 325, 327, 329, 0, 356,
	358, 359, 361, 363, 364, 365, 367, -2, 0, 473,
	474, 476, 478, -2, 0, 970, 972, 0, 623, 625,
	0, 975, 977, 0, 0, 645, 646, 0, 1436, -2,
	639, 641, 643, 708, 710, 712, 714, 716, 718, 720,
	722, 724, 725, 727, 729, 731, 733, 735, 736, 738,
	740, 742, 743, 745, 746, 748, 750, 752, 754, 756,
	758, 760, 762, 764, 766, 768, 770, 772, -2, 775,
	776, -2, -2, 0, -2, -2, -2, 1347, 41, 43,
	45, 47, 49, 51, 53, 55, 57, 417, 419, 421,
	423, 425, 428, 430, 432, 1494, 480, 482, 484, 486,
	488, 490, 492, 0, -2, 1508, 0, 0, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 101,
	102, 103, 104, 105, 106, 107, 108, 73, 74, 75,
	77, 78, 79, 80, 84, 85, 86, 87, 88, 89,
	90, 91, 99, 71, 0, 0, 1467, 1469, 1471, 1473,
	-2, 0, 0, 5, 9, 11, 13, 15, 17, 19,
	21, 23, 25, 27, 29, 542, 546, 549, 551, 553,
	557, 560, 566, 568, 570, 525, 526, 529, 2172, 2189,
	2190, 2191, 2194, 2195, 2196, 2197, 2198, 2199, 2642, 2724,
	2725, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229,
	2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239,
	2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249,
	2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259,
	2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269,
	2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279,
	2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289,
	2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299,
	2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309,
	2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319,
	2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329,
	2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339,
	2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349,
	2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359,
	2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369,
	2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379,
	2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389,
	2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399,
	2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409,
	2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419,
	2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429,
	2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439,
	2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449,
	2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459,
	2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469,
	2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479,
	2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489,
	2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499,
	2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509,
	2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519,
	2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529,
	2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539,
	2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549,
	2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559,
	2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569,
	2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579,
	2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589,
	2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599,
	2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609,
	2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619,
	2620, 2621, 527, 528, 1147, 0, 594, 592, 2157, 595,
	2443, 597, 599, 467, 468, 469, 470, 471, 472, 0,
	616, 607, 1506, 617, 619, 620, 621, 622, 589, 587,
	0, 616, 2225, 614, 1327, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 479, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 396, 1196, 1197,
	1198, 1312, 1313, 2487, 1354, 0, 225, 635, -2, -2,
	-2, 2607, -2, 667, -2, 674, 2611, 2490, 679, 0,
	681, -2, 684, 1330, 1332, 1334, 777, 778, 2175, 0,
	0, 0, 0, 0, 38, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 235, -2, -2, -2, -2, 0, 0,
	2535, 2277, 2125, 2191, 2128, 2123, 326, 328, 330, 331,
	0, 0, 0, 0, 0, 0, 357, 360, 362, 366,
	-2, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 1031, 1023, 1024, 1254, 0, 0,
	0, -2, 475, 477, 530, 531, 0, 1495, 1495, 538,
	539, -2, 0, 0, 0, 0, 296, 283, 971, 973,
	974, 0, 0, 0, 0, 624, 626, 0, 0, 264,
	976, 978, 979, 0, 0, 0, 0, 0, 298, 0,
	0, 640, 642, 644, 709, 711, 713, 715, 717, 719,
	721, 723, 726, 728, 730, 732, 734, 737, 739, 741,
	744, 747, 749, 751, 753, 755, 757, 759, 761, 763,
	765, 767, 769, 771, 773, 774, 785, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	873, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, -2, 951,
	0, 0, 788, 790, 791, 792, 0, 851, 871, 872,
	881, 0, 1187, 1496, 1356, 1337, 1351, 1356, 1339, 1340,
	1341, 1342, 1343, 1348, 1350, 1344, 1345, 1346, 42, 44,
	46, 48, 50, 52, 54, 56, 58, 418, 420, 422,
	424, 426, 429, 431, 433, -2, 1465, 1466, 481, 483,
	485, 487, 489, 491, 493, 627, 0, 629, 0, 789,
	-2, 0, 1500, 1500, 1500, 0, 0, 1466, 1464, 0,
	632, 633, 688, 689, 1768, 0, 0, 0, 0, 0,
	0, 0, 2022, 1854, 0, 690, -2, 1885, 1887, 2582,
	2607, 2021, 1889, 1890, 1891, 1892, 1893, 0, 1895, 1896,
	1897, 1898, 1899, 1900, 0, 1902, 0, 1907, 1908, 1909,
	0, 2589, 2102, 2185, -2, 0, 0, 2595, 2181, 0,
	1988, 1925, -2, -2, 2208, 2187, 1700, 1701, 1702, 1703,
	1704, -2, -2, 2625, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 0, 2570, 2590, 2591, 2596,
	2598, 2592, 2579, 1950, 2290, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1727, 1736,
	-2, -2, -2, -2, -2, -2, -2, 2583, 2584, 2601,
	2604, 2610, 2615, 2616, 2588, 2597, 2624, 2626, 2627, 2628,
	2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638,
	2639, 2640, 2641, 1728, -2, -2, -2, -2, 1483, 2456,
	1486, 1147, 1484, 1468, 1470, 0, 1472, 0, 0, 0,
	1477, 1503, 1501, 0, 1552, 1481, 1482, 1570, 1570, 1594,
	0, 1575, 0, 1594, 1495, 1621, 0, 1581, 2479, 1926,
	1927, 0, 2191, 2186, -2, -2, 2622, 0, 0, 0,
	0, 0, 0, 0, 0, 590, 0, 596, 598, 0,
	0, 0, 615, 1505, 0, 0, 0, 0, 0, 0,
	0, 399, 400, 401, 402, 403, 2590, 0, 0, 0,
	408, 0, 410, 411, 412, 413, 414, 415, 416, 194,
	2590, 498, 523, 0, 194, 2590, 501, 194, 2590, 504,
	0, 507, 1252, 194, 2590, 510, 2153, 194, 2590, 513,
	515, 2161, 194, 2590, 519, 2168, 2166, 520, 2590, 522,
	301, 299, 300, 2204, 2205, 2212, 2213, 2214, 2215, 2623,
	2625, 1323, 1324, 1325, 1326, 0, 1353, 1253, 637, 638,
	0, 662, 0, 666, 2578, -2, 0, 2499, -2, 670,
	1357, 1361, 1362, 1363, 1364, 1365, 0, 0, 0, 0,
	1370, 0, 0, 676, 0, 0, 663, 664, 682, 685,
	0, 780, 781, 782, 783, 784, 70, 0, 2590, 1621,
	72, 0, 2147, 2216, 2217, 2218, 2219, 2220, 2643, 2644,
	2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654,
	2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664,
	2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674,
	2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684,
	2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694,
	2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704,
	2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714,
	2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 76,
	0, 2590, 81, 0, 2590, 0, -2, 92, 0, 100,
	0, 2150, 109, 0, 2590, 0, 2122, -2, 0, 206,
	284, 285, 286, 287, 0, 998, -2, 2590, 1195, 0,
	0, 0, 0, 961, 2119, 2124, 962, 2143, 963, 2129,
	0, 332, 333, 334, 335, 336, 0, 337, 2590, 339,
	340, 0, 342, 343, 2590, 345, 346, 0, 348, 0,
	247, 248, 2590, 370, 372, 0, 374, 375, 0, 377,
	0, 0, 0, 381, -2, 397, 0, 394, 384, 385,
	387, 388, 389, 390, 391, 0, 437, 435, 2158, 0,
	0, -2, 2590, 0, 995, 0, 0, 1232, -2, 2590,
	1192, 0, 1239, 2590, 1235, 0, -2, 0, 1493, 2590,
	1374, 1027, 1028, 1029, 1030, 1633, 464, 0, 1401, 0,
	1403, 0, 1422, 1627, 1570, 0, 0, 1632, 0, -2,
	583, 2174, -2, 533, 0, 534, 0, -2, 0, 313,
	0, 0, 980, 981, 982, 983, 984, 987, 988, 989,
	990, 1607, 265, 267, 0, 0, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 0, 0, 647, 0, 0,
	786, 787, 0, 0, 797, 798, 799, 0, 313, 2491,
	2452, 2311, 806, 0, 809, 812, -2, 0, 0, 0,
	0, 816, 0, 821, 822, 823, 0, 0, 827, 829,
	969, 831, 0, 0, 833, 0, 837, 0, 840, 0,
	842, 0, 844, -2, -2, -2, 852, 853, -2, 857,
	-2, 0, 860, 862, 0, 864, -2, 0, 873, 869,
	870, 0, 0, 0, 0, 889, 890, 0, 899, 0,
	902, 903, 904, 0, 906, 907, 0, 909, 910, 911,
	912, 0, 0, 915, 916, -2, -2, 920, 922, 0,
	-2, 0, 938, 0, 942, 0, 0, 950, 0, 0,
	793, 794, 194, 1625, 1336, -2, 1338, 0, -2, 0,
	628, 0, 631, 1525, 1451, 1448, 0, 1522, 1523, 1452,
	0, 0, 0, 1459, 0, 1498, 1499, 0, 0, 0,
	1438, 1439, 0, 0, 0, 0, 2027, 2028, 2029, 2030,
	2031, 2032, 2035, 2036, 2033, 2034, 2037, 2038, 0, 0,
	0, 0, 0, 2039, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2040, 2041, 2042, 0, 0,
	2044, 0, 2046, 0, 0, 0, 0, 0, 0, 1833,
	1835, 2110, 0, 0, 2043, 1773, 1774, 1775, 1776, 1777,
	1812, 1813, 0, 0, 1886, 2107, 2106, 1888, 0, 2058,
	0, 1901, -2, 0, 2022, 2053, 0, 0, 1910, 1911,
	1912, 0, 0, 2058, 0, 0, 2101, 1922, 1923, 1765,
	0, 0, 1990, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1714, 1713, 0, 1715, 0, 1716, 1717, 1724, 1737, 0,
	0, 0, 0, 1741, 0, 0, 0, 0, 0, 0,
	0, 2082, -2, 0, 0, 0, 0, 1729, 0, 1485,
	0, 0, 1556, 2111, 2115, 2116, 1556, 1556, 0, 0,
	2059, 1618, 1618, 0, 0, 1613, 1613, 1613, 1611, 1594,
	0, 1594, 1604, 0, 1594, 1594, 0, -2, 1575, 0,
	0, 1604, 0, 1588, 571, 573, 575, 577, 578, 579,
	581, 1622, 1623, 0, 0, 0, 0, 2192, 0, 0,
	0, 0, 0, 2177, 0, 353, 0, 0, 0, 2545,
	2490, -2, 601, 618, 1495, 0, 2061, 1648, 1652, 0,
	1654, 1655, 1656, 1657, 1658, 0, 0, 1649, -2, 1725,
	1727, 1748, 2209, 2210, 2211, 1708, 1709, 1710, 1711, 1712,
	1720, 1707, 1707, 1707, 1718, 1747, 1739, 1747, 1743, 1693,
	1694, 1695, 1730, 1731, 1732, 1733, 0, 2545, 2490, -2,
	609, 0, 0, 1433, 210, 212, 213, 214, 215, 216,
	398, 0, 405, 406, 407, 0, 494, 0, 192, 193,
	0, 194, 2590, 499, 0, 502, 0, 194, 2590, 2117,
	508, 0, 511, 0, 0, 517, 0, 0, 0, 0,
	0, 194, 1435, 0, 0, 0, 0, -2, 672, 677,
	678, 0, 1359, 0, 1366, 699, 700, 701, 1368, 1369,
	0, 1371, 675, 702, 703, 704, 705, 706, 707, 0,
	2131, 2132, 2133, 2134, 2137, 2138, 0, 0, 673, 692,
	680, 0, 686, 110, 1309, 0, 0, 153, 0, 1309,
	1309, 0, 0, 0, 0, 179, 0, 1066, 0, 0,
	0, 0, 125, 138, 149, 122, 123, 0, 0, 0,
	0, 0, 0, 82, 1169, 0, 1172, 0, 0, 0,
	0, 0, 0, 0, 1185, 0, 0, 0, 0, 0,
	0, 0, 96, 97, 0, 137, 0, 0, 1398, 0,
	132, 112, 0, 0, 125, 139, 151, 0, 183, 185,
	1063, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	217, 0, 0, 0, 1193, 0, 1492, 0, 0, 2590,
	0, 1607, 2359, -2, -2, 265, 1607, 960, 0, 0,
	2192, 2127, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 376, 378, 379, 380, 0, 1231, 0, 386, 427,
	1118, 2590, 0, 0, 454, 449, 0, 451, 0, 0,
	0, 1168, 2590, 1166, 2162, 0, 1190, 0, 1147, 2590,
	2160, 0, 0, 0, 1240, 2201, 1249, 1253, 1388, 0,
	466, 0, 1404, 1406, 0, 0, 1628, 0, 1630, 1570,
	1495, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	0, 0, 271, 0, 1606, 0, 0, 1607, 265, 2467,
	313, 313, 1607, 649, 1607, 651, 0, 0, 800, 801,
	0, 313, 313, 313, 807, 808, 810, 811, -2, -2,
	-2, -2, 813, 814, 896, 0, 0, 0, 895, 826,
	830, 0, 954, 2475, 2490, 2545, 967, 896, 2277, 896,
	2277, 896, 2277, 841, 843, 846, 884, 892, 856, 861,
	0, 0, 866, 874, -2, 0, 876, 0, 878, 0,
	880, 896, 897, 900, 905, 908, 913, 914, 0, 929,
	934, 935, 931, 0, 0, 0, 0, 0, 0, 945,
	946, 0, 0, 953, 1186, 0, 1349, 1525, 1451, 630,
	1442, 1524, 1443, 1450, 1453, 0, 0, 1455, 0, 1457,
	0, 1520, 1521, 1528, 1529, 0, 1539, 1540, 1532, 0,
	-2, 0, 0, 1535, 1536, 1461, 0, 1478, 1479, 1480,
	1509, 1512, 1268, 0, 2724, 1769, 1643, 1770, 1771, 2146,
	0, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	1787, -2, -2, -2, -2, -2, -2, -2, -2, 1796,
	1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806,
	-2, -2, -2, 1810, 1811, -2, 2045, 2047, 0, 2110,
	0, -2, 0, -2, -2, -2, -2, 1830, 0, 1832,
	1837, 1839, 1841, 0, 0, 0, 0, 2109, 1851, 2093,
	2094, 0, 0, 2024, 2025, 2026, 1836, 0, 1855, 2108,
	2105, 0, 0, 2057, 1508, 1914, 0, 0, 0, 0,
	1921, 1906, 2055, 0, 2054, 0, 0, 0, 2065, 0,
	2100, 2096, 0, 2144, 1764, 1751, 1752, 1753, 1754, 1755,
	1756, 1766, 0, 2141, 2178, 2184, 1998, 0, 0, 0,
	1951, 1952, 1953, 1954, 1955, 0, 1957, 1958, 0, 1960,
	1961, 0, 1963, 1964, 0, 1966, 1967, 1968, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 0, 0, 1970,
	0, 2068, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 1972, 0, 1974, 2059, 2079, 0, 0, 1856, 0,
	0, 0, 2022, 0, 1977, 2059, 2087, 0, 0, 0,
	0, 0, 2059, 0, 2092, 0, 1984, 0, 1986, 1487,
	0, 0, 1638, 0, 0, 0, 2114, 1638, 1638, 0,
	1551, 0, 0, 1614, 1615, 1616, 1617, 0, 0, 1618,
	0, 1608, 1612, 1609, 1610, 1604, 1567, 0, 0, 2148,
	1604, 1573, 1603, 0, 1147, 1593, 1604, 1604, 0, -2,
	1577, 1594, 0, 0, 572, 574, 576, 580, 582, 0,
	0, 1508, -2, 0, -2, 315, 1146, 0, 0, 0,
	0, 591, 593, 0, 0, 514, 0, 606, 0, 585,
	0, 588, 0, 1639, 1642, 0, 0, 1653, 1659, 1660,
	0, -2, 0, 0, 1749, 0, 0, 0, 0, 613,
	0, 0, 0, 0, 409, 524, 194, 496, 0, 194,
	194, 505, 0, 0, 194, 516, 194, 2169, 194, 2167,
	302, 521, 1434, 228, 0, 665, 0, 1358, 1367, 0,
	696, 0, 698, 0, 2135, 2139, 2136, 2140, 0, 687,
	0, 0, 0, 0, 1308, 0, 1275, 0, 0, 157,
	2590, 0, 196, 0, 0, 1111, 2154, 0, 1103, 0,
	0, 2297, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 0, 0,
	0, 124, 0, 0, 0, 0, 0, 0, 0, 0,
	1170, 1171, 1173, 1180, 1182, 0, 1176, 2142, 0, 0,
	1177, 0, 1179, 1181, 1183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 98, 0, 0, 0, 1397, 1398,
	0, 0, 0, 121, 0, 0, 0, 0, 0, 0,
	2121, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1227, 1225, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
	1219, 1220, 1221, 1222, 1223, 1224, 0, 0, -2, 0,
	0, 0, 0, 0, 238, 0, 304, 2120, 2130, 0,
	985, 986, 338, 341, 344, 347, 234, 0, 382, 0,
	0, 1033, 1008, 0, 0, 436, 313, 0, 0, 450,
	454, 2171, 993, 1164, 1167, 0, 1147, 2590, 1204, 0,
	0, 0, 0, 0, 0, 1238, 0, 0, 2590, 2149,
	2200, 2201, 1390, 1398, 0, 1638, 0, 1420, 1407, 0,
	0, 0, 1420, 1424, 1425, 1427, 1428, 0, 0, 1629,
	1635, 532, 584, 1495, 1495, 313, 311, 2420, 309, 306,
	308, 0, 0, 0, 1034, 1036, 1037, 1038, 196, 0,
	2201, 1103, 2348, 2201, 0, 1410, 1412, 0, 259, 0,
	268, 1607, 266, 271, 0, 0, 0, 448, 648, 653,
	795, 0, 313, 803, 804, 805, 848, 886, 894, 933,
	815, 817, 818, 819, 0, 0, 968, 964, 965, 966,
	832, 896, 835, 896, 838, 896, 859, 863, 868, 875,
	0, 0, 0, 888, 0, 0, 0, 0, 0, 0,
	0, 939, 940, 941, 943, 948, 947, 952, 1626, 1446,
	1447, 1449, 0, 1458, 0, 0, 1534, -2, -2, 1533,
	1537, 1538, -2, -2, -2, -2, 1454, 0, 1463, 1460,
	0, 1519, 1266, 1267, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 1852, 0, -2, 1831, 1834, 1838, 1840,
	1842, 0, 0, 0, 0, 0, 0, 2048, 0, 2050,
	1853, 2103, 2106, 2020, 0, 0, 1507, 1508, 1508, 0,
	1920, 0, 2056, 0, 2063, 2064, 0, 1913, 0, 2097,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1924,
	0, 0, 0, 0, 1956, 1959, 1962, 1965, 0, 0,
	0, 0, 1945, 0, 0, 0, 1949, 1719, 1705, 0,
	1747, 1745, 1746, 1740, 1747, 1744, 1697, 0, 1696, 0,
	1969, 0, 1971, 1973, 0, 0, 1975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 1860, 1861, 1976, 2085, 2086, 0, 0, 0, 0,
	0, 0, 1982, 0, 2091, 1983, 1985, 1495, 0, 1488,
	0, 1553, 1542, 1637, 0, 2112, 1607, 1555, 1557, 2113,
	2151, 1542, 1542, 0, 2060, 0, 0, 1598, 0, 0,
	0, 1600, 1571, 0, 0, 1565, 0, 1561, 1562, 1563,
	1564, 1572, 1147, 1602, 1574, 1578, 2178, 0, 1604, 0,
	1589, 0, 1591, 1624, 0, 1583, 1586, 0, 0, 2193,
	1638, 0, 349, 354, 355, 350, 351, 352, 600, 0,
	0, 0, 0, 2062, 0, 1644, 0, 1650, 0, 0,
	0, 0, 608, 0, 0, 0, 211, 1432, 404, 495,
	194, 500, 503, 2118, 194, 509, 512, 518, 224, 0,
	661, -2, 694, 695, 697, 0, 693, 154, 1309, 0,
	0, 1271, 1273, 2165, 1277, 1283, 1286, 0, 159, 2590,
	170, 0, 1082, 0, 2152, 0, 0, 0, 0, 0,
	0, 1311, 0, 0, 2590, 194, 2590, 194, 173, 175,
	178, 0, 182, 180, 0, 1070, 0, 0, 1073, 111,
	1309, 0, 0, 114, 118, 126, 127, 130, 0, 0,
	0, 136, 0, 0, 0, 1288, 1292, 1300, 0, 0,
	0, 1174, 1175, 1178, 1184, 83, 0, 0, 0, 1296,
	1298, 1304, 93, 94, 2163, 95, 0, 1270, 0, 0,
	0, 0, 184, 116, 120, 128, 129, 131, 0, 1306,
	113, 0, 209, 0, 0, 199, 194, 2590, 0, 201,
	0, 202, 203, 218, 0, 0, 0, 996, 997, 1226,
	1188, 1189, 0, 1194, 0, 0, 0, 0, 1607, 230,
	0, 1607, 238, 0, 2126, 0, 369, 0, 0, 0,
	0, 1032, 1129, 0, 1003, 0, 0, 0, 442, 438,
	0, 447, 453, 452, 458, -2, 0, 0, 0, 0,
	-2, 0, 0, 1242, 1236, 1237, 0, 0, 0, 0,
	2590, 1392, 1398, 0, 1493, 1508, 465, 1399, 1420, 0,
	0, 0, 1409, 1405, 1402, 1638, 0, 0, 0, 0,
	0, 1631, 1634, 535, 536, 288, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 1039, 1043, 0, 2201, 2201,
	0, 2156, 0, 0, 0, 0, 269, 0, 272, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 271, 261,
	1607, 0, 0, 650, 0, 0, 802, 0, 825, 834,
	836, 839, 877, 879, 896, 923, 924, 1060, 0, 1060,
	0, 0, 944, 1456, 0, 1531, 1462, 1513, 1514, 0,
	1268, 0, 1772, 1815, 0, 0, -2, 0, 0, 1819,
	0, 0, 0, -2, 0, 0, 0, 2049, 2051, 0,
	2105, 1915, 0, 0, 0, 1919, 1903, 1904, 0, 2023,
	2066, 2095, 2099, 0, 1757, 1758, 1759, 1760, 1761, 1762,
	1763, 0, 2145, 2179, 2183, 1996, 1997, 2001, 2159, 0,
	0, 0, 1928, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 1742, 0, 0, 2067, 2078, 2080, 1857, 1858,
	1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871,
	-2, -2, -2, 1875, 1876, 1877, -2, -2, -2, 0,
	0, 0, 2081, 2083, 2084, 2088, 2089, 0, 1979, 1980,
	1981, 2090, 0, 1495, 1489, 1550, 0, 1636, 1554, 0,
	1550, 1550, 1502, 1596, 0, 0, 1620, 0, 1568, 0,
	1569, 0, 1601, 0, 1576, 1579, 1580, 1590, 0, 1582,
	0, 1585, 0, 1915, -2, 314, 316, 318, 0, 321,
	322, 0, 0, 603, 604, 602, 586, 0, 0, 1646,
	0, 0, 1722, 1726, 1750, 611, 612, 610, 497, 506,
	226, 0, 1605, 0, 0, 0, 0, 0, 0, 195,
	1080, 1110, 0, 0, 0, 1102, 0, 0, 1116, 161,
	162, 0, 0, 0, 0, 171, 0, 0, 168, 0,
	177, 181, 1067, 0, 0, 0, 0, 1276, 0, 0,
	0, 133, 134, 135, 0, 140, 0, 141, 0, 0,
	0, 0, 0, 0, 0, 0, 1382, 1383, 0, 1377,
	0, 0, 0, 197, 0, 0, 0, 1265, 220, 0,
	0, 0, 0, 0, 1229, 1230, 1289, 1293, 1301, 0,
	0, 0, 238, 236, 0, 239, 0, 242, 243, 0,
	245, 238, 232, 0, 0, 0, 1147, 383, 1006, 1117,
	0, 1119, 0, 1004, 0, 0, 1118, 434, 0, 441,
	0, 455, 0, 0, 1168, 0, 0, 1191, 1202, 1147,
	0, 1241, 1243, 0, 1251, 0, 0, 0, 1394, 1398,
	0, 1387, 1388, 1527, 1400, 1418, -2, 0, 0, 1508,
	1426, 1423, 1429, 1430, 0, 310, 0, 305, 307, 0,
	291, 0, 0, 1035, 1040, 0, 0, 0, 0, 0,
	1411, 1413, 0, 0, 0, 0, 0, 0, 260, 271,
	1607, 297, 0, 796, 820, 887, 925, 1059, 0, 0,
	927, 0, 0, 1530, 1517, 1518, 1515, 1268, 1817, 1821,
	0, 0, 0, 1823, -2, 0, 1845, -2, -2, 2052,
	2104, 1894, 1508, 1916, 1918, 1905, 2098, 1767, 0, 2003,
	2000, 0, 1987, 0, 1940, 1941, 0, 0, 1944, 1946,
	1947, 1948, 1706, 1699, 1698, 2077, 0, 0, 0, 0,
	1978, 1490, 0, 1992, 0, 0, 1558, 1992, 1992, 1597,
	0, 1599, 1566, 1559, 0, 2179, 1592, 1584, 0, 0,
	319, 0, 323, 324, 0, 1640, 1645, 0, 1651, 1721,
	227, 155, 156, 1280, 1284, 1281, 0, 158, 0, 1081,
	0, 1084, 0, 0, 0, 0, 1091, 1103, 0, 0,
	0, 0, 0, 1104, 0, 1133, 0, 1256, 1263, 0,
	-2, 0, 0, 0, 164, 187, 0, 0, 188, 1310,
	166, 0, 0, 194, 194, 0, 0, 1272, 1274, 1287,
	0, 0, 0, 0, 143, 0, 0, 1290, 1294, 1302,
	1297, 1299, 1305, 0, 1384, 0, 0, 1307, 207, 208,
	0, 194, 0, 194, 200, 194, 1265, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 231, 303, 238, 371,
	0, 1054, 0, 1129, 1121, 1122, 1123, 0, 1128, 1130,
	0, 0, 1020, 1005, 0, 1016, 0, 0, 1033, 1008,
	0, 439, 456, 0, 459, 0, 462, 994, 1165, 1199,
	1147, 0, 1233, 0, 0, 0, 0, 0, 0, 0,
	1396, 1398, 0, 1389, 1390, 1420, 1526, 0, 0, 0,
	1408, 1527, 0, 312, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 273, 0, 274, 275, 276,
	262, 263, 652, 654, 0, 0, 660, 1058, 0, 0,
	0, 0, 1516, 1825, -2, -2, 1846, 0, 2180, 2182,
	1508, 0, 1989, 1510, 0, 0, -2, 0, 0, 0,
	1491, 1474, 0, 1549, 1541, 1543, 1545, 2478, 2272, 2589,
	1475, 1476, 1619, 0, 1587, 320, 605, 0, 1647, 0,
	0, 1282, 160, 0, 1085, 1086, 2155, 1088, 0, 1090,
	1092, 1093, 1094, 0, 1097, 2203, 0, 1101, 0, 1112,
	1134, 0, 1143, 0, 1258, 1268, 1262, 0, 1260, 1145,
	0, 163, 165, 189, 186, 1265, 0, 167, 176, 0,
	0, 115, 0, 0, 2266, 146, 144, 142, 1269, 117,
	0, 209, 219, 1264, 221, 204, 194, 0, 1291, 1295,
	1303, 240, 0, 241, 244, 0, 0, 1069, 0, 1007,
	1120, 0, 1131, 1132, 1010, 0, 1009, 0, 0, 0,
	0, 0, 440, 443, 0, 446, 0, 0, 0, 0,
	0, 1244, 1242, 0, 1250, 0, 0, 0, 1376, 0,
	0, 1391, 1392, 463, 1414, 0, 0, 1420, 1431, 290,
	0, 0, 1041, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1042, 1145, 0, 0, 1109, 0, 295, 270,
	0, 656, 0, 658, 0, 926, 928, 0, 0, 1917,
	2007, 0, 0, 1942, 1943, -2, 0, 1883, 1991, 1993,
	0, 0, 0, 0, 0, 1560, 1641, 1278, 0, 1285,
	1083, 1087, 0, 0, 0, 1151, 0, 0, 1105, 0,
	1137, 1138, 1054, 0, 1139, 1140, 1141, 1257, 1519, 1263,
	1054, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 198, 222, 1265, 237, 255, 0, 1200, 1008, 1068,
	0, 0, 1018, 0, 1021, 0, 1017, 1014, 1015, 1006,
	0, 444, 445, 460, 0, 461, 0, 1203, 0, 0,
	1251, 0, 0, 1379, 1375, 1398, 1393, 1394, 1638, 1417,
	1421, 0, 0, 1143, 1145, 1065, 0, 655, 0, 0,
	936, 937, 0, 0, 0, 0, 2002, 1511, 1884, 0,
	0, 1544, 1546, 1547, 1548, 1279, 0, 0, 1096, 1156,
	0, 0, 0, 1135, 1136, 1065, 0, 1261, 1259, 1114,
	0, 1147, 169, 0, 1145, 0, 1074, 0, 0, 1077,
	0, 0, 147, 2266, 145, 0, 194, 258, 0, 252,
	250, 251, 1010, 0, 0, 1125, 1127, 0, 1022, 1054,
	1020, 457, 1201, 1234, 1145, 0, 1143, 0, 1386, 1398,
	1380, 1381, 0, 1396, 0, 313, 313, 1054, 1143, 1008,
	1064, 313, 657, 659, 1999, 2019, 2008, -2, 2548, 2273,
	0, 2019, 2019, 1994, 1995, 0, 0, 1098, 1152, 1153,
	0, 1148, 1149, 1150, 2202, 1099, 1100, 1133, 0, 0,
	1151, 190, 1054, 1071, 0, 0, 1072, 0, 0, 150,
	0, 152, 223, 246, 0, 0, 1002, 0, 1124, 0,
	0, 0, 0, 1069, 1010, 1143, 0, 1054, 0, 1372,
	1385, 0, 1395, 1376, 0, 292, 293, 1065, 1054, 1638,
	0, 294, 2004, 0, 0, 2010, 2011, 2012, 2013, 2014,
	2005, 2006, 1089, 0, 1154, 0, 1155, 0, 0, 0,
	1638, 1142, 0, 1156, 174, 1075, 0, 1078, 0, 148,
	0, 253, 254, 999, 1001, 0, 1126, 1011, 0, 1013,
	1008, 1019, 1054, 0, 1065, 0, 1378, 2164, 1379, 1415,
	0, 1008, 1065, 1108, 0, 2016, 2017, 0, 0, 0,
	1157, 0, 1160, 1161, 0, 1158, 1113, 0, 1133, 0,
	0, 0, 0, 1012, 1010, 1065, 1145, 1008, 1143, 1386,
	0, 1638, 1008, 2015, 2018, 2009, 1095, 1159, 1162, 1163,
	1144, 1115, 0, 0, 256, 0, 1057, 1002, 1008, 1143,
	1638, 1054, 1373, 1638, 1106, 1638, 1062, 0, 0, 1053,
	1055, 1056, 1000, 1638, 1054, 1247, 1065, 1416, 1107, 1076,
	1061, 0, 257, 1245, 1065, 1008, 0, 1008, 1638, 0,
	1638, 1248, 1062, 1246, 1079,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 574, 3, 580, 575, 3,
	585, 586, 578, 576, 590, 577, 587, 579, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 593, 3,
	566, 568, 567, 571, 589, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 583, 3, 584, 581, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 591, 573, 592, 569,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 570, 57909, 572,
	57910, 582, 57911, 588, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1305
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1310
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1312
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1323
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1324
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1325
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1332
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1341
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1343
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1346
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1347
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1348
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1349
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1351
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1352
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1353
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1354
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1413
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1439
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1453
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1471
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1475
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1479
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1505
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1509
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1515
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1524
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1533
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1542
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1549
		{

			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1574
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1606
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1610
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1614
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1620
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1624
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1630
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1639
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1650
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1654
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1660
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1668
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1678
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1682
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1691
		{
		}
	case 125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1692
		{
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1696
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1705
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1717
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1722
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1729
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1741
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1748
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1756
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1761
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1765
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1770
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1776
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1784
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1795
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1805
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1815
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1824
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 143:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1835
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 144:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1841
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1849
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1853
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1857
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1867
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1872
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1883
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1893
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1897
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1909
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1914
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1919
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1924
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1929
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1934
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1939
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1944
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1949
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1954
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1958
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1963
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1972
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1984
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1994
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2001
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2004
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2010
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2017
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2032
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2041
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2050
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2062
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2075
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2079
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2093
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2097
		{
			sqlVAL.union.val = nil
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = true
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2107
		{
			sqlVAL.union.val = false
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2117
		{
			sqlVAL.union.val = nil
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2128
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2132
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2138
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2142
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2189
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2217
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2235
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2239
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2242
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2246
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2270
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2275
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2277
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2282
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2289
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2297
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2328
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2332
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2336
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 229:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2382
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2392
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2412
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2416
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2420
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2432
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2443
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2447
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2460
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2464
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2468
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2564
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2581
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2607
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 256:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2621
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2662
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2698
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2706
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2727
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2731
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2738
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2742
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2751
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2759
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2763
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2771
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2779
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2783
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2795
		{
			return unimplemented(sqllex, "alter function")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2799
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2803
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2807
		{
			return unimplemented(sqllex, "alter default privileges")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2845
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2854
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2860
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2865
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2870
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2875
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2880
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2884
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2903
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2911
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2919
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2923
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2933
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2967
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2971
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.union.val = nil
		}
	case 314:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2987
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3001
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3007
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3011
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3021
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3029
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3033
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3037
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3041
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3045
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3053
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3054
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3055
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3056
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3066
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3074
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3076
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3083
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3093
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3102
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3110
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3112
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3116
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3119
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3146
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3152
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3155
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3167
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3180
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3183
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3187
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3192
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3204
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3206
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3207
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3210
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3211
		{
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3212
		{
			return helpWith(sqllex, "CREATE")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3219
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3222
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3225
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3226
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3229
		{
			return unimplemented(sqllex, "create access method")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3230
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3231
		{
			return unimplemented(sqllex, "create cast")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3232
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3233
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3234
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3235
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3236
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3237
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3238
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3239
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3240
		{
			return unimplemented(sqllex, "create operator")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3241
		{
			return unimplemented(sqllex, "create publication")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3242
		{
			return unimplemented(sqllex, "create rule")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3243
		{
			return unimplemented(sqllex, "create server")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3244
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3245
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3246
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3247
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3250
		{
		}
	case 393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3251
		{
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3254
		{
		}
	case 395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3255
		{
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3258
		{
		}
	case 397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3259
		{
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3262
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3263
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3264
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3265
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3266
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3267
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3268
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3269
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3270
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3271
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3272
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3273
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3275
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3276
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3277
		{
			return unimplemented(sqllex, "drop server")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3278
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3279
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3280
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3283
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3284
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3285
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3286
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3287
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3289
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3290
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3291
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3292
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3310
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3314
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3318
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3324
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3328
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3337
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3344
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3350
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3356
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3360
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3383
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3406
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3416
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3420
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3437
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3441
		{

			sqlVAL.union.val = nil
		}
	case 455:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3458
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3469
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3473
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3477
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3484
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3488
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3501
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3514
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "DELETE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3527
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3528
		{
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3539
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3540
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3542
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3543
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3554
		{
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3555
		{
			return helpWith(sqllex, "DROP")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3558
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3559
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3561
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3562
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3564
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3580
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3589
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3597
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3612
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3652
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3675
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3690
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3697
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3728
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3735
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3743
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3747
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3750
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3754
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3759
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3777
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3779
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3784
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3788
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3811
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3818
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3820
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3828
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3836
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3844
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3852
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3863
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3871
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3874
		{
			return helpWith(sqllex, "DELETE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3876
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3877
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3878
		{
			return helpWith(sqllex, "INSERT")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3881
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3883
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3886
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3891
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3892
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3893
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3898
		{
			return helpWith(sqllex, "DELETE")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3900
		{
			return helpWith(sqllex, "INSERT")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3902
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3906
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3907
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3915
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3925
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3933
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3941
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3949
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3966
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3974
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3978
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3982
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3992
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4000
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4004
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4007
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4037
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4041
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4045
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4055
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4059
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4062
		{
			return helpWith(sqllex, "GRANT")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4088
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4092
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4096
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4100
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4110
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4113
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4122
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			return helpWith(sqllex, "RESET")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4166
		{
			return helpWith(sqllex, "RESET")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4177
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4188
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4191
		{
			return helpWith(sqllex, "USE")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4195
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4196
		{
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4197
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4198
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4202
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4204
		{
			return helpWith(sqllex, "USE")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4220
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4235
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4238
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4264
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4268
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4282
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4318
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4344
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4353
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4377
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4380
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4384
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4403
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4410
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4415
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4420
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4425
		{
			return unimplemented(sqllex, "set from current")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4426
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4434
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4439
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4450
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4488
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4492
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = tree.Low
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = tree.Normal
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4528
		{
			sqlVAL.union.val = tree.High
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4547
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4556
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4571
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4573
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4574
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4575
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4576
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4577
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4578
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4580
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4581
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4584
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4586
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4587
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4588
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4592
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4593
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4594
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4595
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4596
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4597
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4598
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4599
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4600
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4601
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4602
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4603
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4604
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4605
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4606
		{
			return helpWith(sqllex, "SHOW")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4613
		{
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4614
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4617
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4621
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4626
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4631
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4636
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4641
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4652
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4653
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4664
		{
			sqlVAL.str = "client_encoding"
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4667
		{
			sqlVAL.str = "timezone"
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4668
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4686
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4690
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4701
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4709
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4717
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4731
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4749
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4758
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4766
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4783
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4785
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4788
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4794
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4797
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4808
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4820
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4839
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4842
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4849
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4853
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4863
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4872
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4882
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4895
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4911
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4914
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4916
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4920
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4924
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4927
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4929
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4933
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4936
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4947
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4949
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4952
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4960
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4963
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4968
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4972
		{
			sqlVAL.union.val = true
		}
	case 850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4974
		{
			sqlVAL.union.val = true
		}
	case 851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = false
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4997
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5000
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5001
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5003
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5007
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5011
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5014
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5032
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5042
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5048
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5050
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5056
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5058
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5064
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5072
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5082
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5096
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5098
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5101
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5103
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5107
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = true
		}
	case 882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = false
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5122
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5124
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5127
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5135
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5145
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5155
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5158
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5165
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5168
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5173
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5176
		{
			sqlVAL.union.val = true
		}
	case 896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5177
		{
			sqlVAL.union.val = false
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5191
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5198
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5202
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5205
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5212
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5216
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5220
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5230
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5233
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5241
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5246
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5251
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5255
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5265
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5269
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5274
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5277
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5290
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5293
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5304
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5318
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5322
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5330
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5351
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5356
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5361
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5365
		{
		}
	case 936:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5374
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5388
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5397
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5409
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5456
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5463
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5468
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5472
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5478
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5485
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5492
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 955:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5497
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5625
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5664
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5668
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5677
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5685
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5694
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 969:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5713
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5726
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5727
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5728
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5738
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5739
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5740
		{
			return helpWith(sqllex, "RESUME")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5758
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5764
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5767
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5772
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5776
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5791
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5799
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5807
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5828
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5842
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5870
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5909
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5925
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5947
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5954
		{

			sqlVAL.union.val = nil
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5960
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.str = ""
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5970
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5976
		{
			sqlVAL.union.val = nil
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5993
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5997
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6023
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6037
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6052
		{
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6053
		{
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6054
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6072
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6073
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6081
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6093
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6097
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6109
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6135
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6146
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6148
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6149
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6150
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6151
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6152
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6153
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6159
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6175
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6180
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.str = ""
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6211
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6231
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6237
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6253
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6266
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6289
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6299
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6303
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6309
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6323
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6356
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6386
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6415
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6419
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6423
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6448
		{

			sqlVAL.union.val = true
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.union.val = false
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6459
		{
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6460
		{
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6478
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6493
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6506
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6518
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6561
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6572
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6589
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6599
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6614
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6621
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6642
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6648
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6679
		{
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6680
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6681
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6682
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6683
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6684
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6756
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6760
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6791
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6797
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6805
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6813
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6817
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6840
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6849
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6857
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6868
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6871
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6873
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6883
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6885
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6887
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6889
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6892
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6894
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6895
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6897
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6910
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6914
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6935
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6950
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = true
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6960
		{

			sqlVAL.union.val = true
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = false
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6975
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6989
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7001
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7013
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7023
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7033
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7049
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7061
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7065
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7097
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7124
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = nil
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7134
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7138
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7143
		{
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7144
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7153
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7169
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7171
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7173
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7175
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7177
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7179
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7217
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7235
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7254
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7271
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7288
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7292
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.union.val = false
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = true
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = false
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = true
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = false
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7346
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7352
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7358
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7366
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.str = ""
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7394
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.str = ""
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7425
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7431
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7445
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7461
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7477
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7554
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7591
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7610
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7656
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7662
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7674
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7680
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7694
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7700
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7717
		{
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7718
		{
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7721
		{
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7722
		{
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7730
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7733
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7743
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7751
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7753
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7760
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7773
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7781
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7789
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7810
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7818
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7829
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7833
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7834
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7835
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7854
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7859
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7869
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7872
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7877
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7881
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7886
		{
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7887
		{
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7888
		{
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7905
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7908
		{
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7909
		{
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7917
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7933
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7937
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7950
		{
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7952
		{
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7956
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7991
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8029
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8043
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.str = ""
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8053
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8069
		{

		}
	case 1382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8076
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8084
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8093
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.str = ""
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.str = ""
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8119
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.str = ""
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.str = ""
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8139
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8152
		{
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8153
		{
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8182
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8200
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8204
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8213
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8218
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8224
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8228
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8262
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8289
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8293
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8331
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8363
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8384
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8393
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8399
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8517
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8528
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8532
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8543
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8578
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8579
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8580
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8641
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8663
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8685
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8701
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = true
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8726
		{
			sqlVAL.union.val = false
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8732
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8754
		{
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8755
		{
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = nil
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8768
		{
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8769
		{
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.union.val = true
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = false
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8781
		{
			sqlVAL.union.val = false
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.union.val = true
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8798
		{
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8799
		{
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8802
		{
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8803
		{
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8817
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8834
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8844
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8865
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8870
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8886
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8890
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8899
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8920
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8932
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8987
		{
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8988
		{
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8991
		{
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8992
		{
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9009
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9013
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9026
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9027
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9028
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9032
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9036
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9058
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9060
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9075
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9077
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9097
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9102
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9107
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9113
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9118
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9130
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9149
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9188
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9198
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9225
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9229
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9233
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9244
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9274
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9307
		{
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9309
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = nil
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9328
		{
			sqlVAL.union.val = true
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.union.val = false
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9360
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.str = tree.AstFull
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.str = tree.AstRight
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.str = tree.AstInner
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9426
		{
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9427
		{
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.str = tree.AstHash
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.str = ""
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9496
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9501
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9515
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9519
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9525
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9531
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9541
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = true
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = false
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = true
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = false
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9590
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9603
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9611
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9612
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9630
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9632
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9640
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9653
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9660
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9669
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9709
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9721
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9722
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9753
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = types.Geography
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9771
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9779
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9805
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9813
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9821
		{
			sqlVAL.union.val = nil
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = types.Int2
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = types.Int
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = types.Float4
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9852
		{
			sqlVAL.union.val = types.Float
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9856
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9864
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9872
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9880
		{
			sqlVAL.union.val = types.Bool
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9886
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9899
		{
			sqlVAL.union.val = types.Float
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9905
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9911
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9919
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9933
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = types.String
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = true
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.union.val = false
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = types.Date
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9982
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9990
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10004
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10013
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10021
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10034
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10038
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = true
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = false
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = false
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.union.val = types.Interval
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10062
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10146
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10161
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = nil
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10191
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10251
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10348
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10352
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10456
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10460
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10503
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10541
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10549
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10553
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10557
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10569
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10591
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10619
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10623
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10643
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10647
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10655
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10683
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10687
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10691
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10711
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10733
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10777
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10781
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10785
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10790
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10816
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10825
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10836
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10840
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10855
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10859
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10863
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10870
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10881
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10882
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10897
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10906
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10972
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11017
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11021
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11029
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11094
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11097
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11102
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11111
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11120
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11129
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11138
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11143
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11148
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11153
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11158
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11160
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11167
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11168
		{
			return unimplemented(sqllex, "treat")
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11170
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11174
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11189
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11194
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11231
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11235
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11241
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.str = ""
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11290
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11294
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11300
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11330
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11343
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11375
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11399
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11403
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11407
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11411
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11429
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11440
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = tree.Any
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = tree.Some
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = tree.All
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11465
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = tree.Div
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11469
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11470
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11473
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11474
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11475
		{
			sqlVAL.union.val = tree.LT
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = tree.GT
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11477
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11478
		{
			sqlVAL.union.val = tree.LE
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.union.val = tree.GE
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = tree.NE
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11484
		{
			sqlVAL.union.val = tree.Like
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11486
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11487
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11514
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11560
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11576
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11580
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11586
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11596
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11600
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11606
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11610
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11654
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11658
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11683
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11687
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11697
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11709
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11801
		{
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11802
		{
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11841
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11851
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11874
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11882
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11905
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11918
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11932
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11936
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11951
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11955
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11971
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11980
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11991
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12000
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12008
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12020
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12113
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12119
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12123
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12206
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12233
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12246
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12253
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12278
		{
			sqlVAL.str = ""
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12288
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
