// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:881
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_STORAGE = lexbase.INCREMENTAL_STORAGE
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_STORAGE",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13821

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1602,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	263, 418,
	-2, 0,
	-1, 74,
	245, 248,
	520, 248,
	-2, 0,
	-1, 88,
	234, 1338,
	247, 1338,
	263, 414,
	394, 414,
	405, 1096,
	445, 414,
	458, 1096,
	505, 1096,
	531, 414,
	557, 1096,
	-2, 0,
	-1, 94,
	133, 1602,
	240, 1602,
	542, 1602,
	543, 1602,
	-2, 0,
	-1, 112,
	152, 1573,
	172, 1573,
	185, 1573,
	243, 1573,
	276, 1573,
	345, 1573,
	355, 1573,
	537, 1573,
	-2, 1544,
	-1, 153,
	160, 935,
	262, 935,
	397, 896,
	463, 896,
	504, 896,
	523, 935,
	525, 896,
	-2, 0,
	-1, 157,
	4, 1604,
	21, 1604,
	22, 1604,
	23, 1604,
	24, 1604,
	25, 1604,
	26, 1604,
	27, 1604,
	29, 1604,
	30, 1604,
	36, 1604,
	41, 1604,
	42, 1604,
	44, 1604,
	45, 1604,
	46, 1604,
	47, 1604,
	48, 1604,
	49, 1604,
	50, 1604,
	51, 1604,
	53, 1604,
	54, 1604,
	55, 1604,
	56, 1604,
	58, 1604,
	59, 1604,
	60, 1604,
	61, 1604,
	62, 1604,
	63, 1604,
	64, 1604,
	68, 1604,
	69, 1604,
	70, 1604,
	71, 1604,
	73, 1604,
	74, 1604,
	75, 1604,
	79, 1604,
	80, 1604,
	81, 1604,
	82, 1604,
	83, 1604,
	84, 1604,
	85, 1604,
	88, 1604,
	89, 1604,
	90, 1604,
	91, 1604,
	92, 1604,
	94, 1604,
	96, 1604,
	97, 1604,
	98, 1604,
	99, 1604,
	100, 1604,
	101, 1604,
	103, 1604,
	104, 1604,
	105, 1604,
	107, 1604,
	108, 1604,
	109, 1604,
	117, 1604,
	118, 1604,
	119, 1604,
	120, 1604,
	121, 1604,
	123, 1604,
	124, 1604,
	125, 1604,
	126, 1604,
	128, 1604,
	129, 1604,
	130, 1604,
	132, 1604,
	133, 1604,
	134, 1604,
	136, 1604,
	137, 1604,
	138, 1604,
	141, 1604,
	142, 1604,
	143, 1604,
	145, 1604,
	146, 1604,
	147, 1604,
	149, 1604,
	150, 1604,
	151, 1604,
	153, 1604,
	154, 1604,
	155, 1604,
	156, 1604,
	157, 1604,
	158, 1604,
	159, 1604,
	160, 1604,
	161, 1604,
	162, 1604,
	163, 1604,
	164, 1604,
	165, 1604,
	166, 1604,
	167, 1604,
	168, 1604,
	169, 1604,
	171, 1604,
	177, 1604,
	178, 1604,
	179, 1604,
	180, 1604,
	184, 1604,
	186, 1604,
	187, 1604,
	188, 1604,
	192, 1604,
	193, 1604,
	194, 1604,
	195, 1604,
	196, 1604,
	197, 1604,
	198, 1604,
	199, 1604,
	200, 1604,
	201, 1604,
	202, 1604,
	203, 1604,
	204, 1604,
	205, 1604,
	207, 1604,
	208, 1604,
	210, 1604,
	211, 1604,
	213, 1604,
	214, 1604,
	215, 1604,
	216, 1604,
	217, 1604,
	218, 1604,
	219, 1604,
	220, 1604,
	221, 1604,
	223, 1604,
	224, 1604,
	226, 1604,
	227, 1604,
	228, 1604,
	229, 1604,
	230, 1604,
	234, 1604,
	235, 1604,
	236, 1604,
	237, 1604,
	240, 1604,
	241, 1604,
	242, 1604,
	244, 1604,
	246, 1604,
	247, 1604,
	249, 1604,
	251, 1604,
	252, 1604,
	253, 1604,
	255, 1604,
	259, 1604,
	260, 1604,
	261, 1604,
	262, 1604,
	263, 1604,
	264, 1604,
	266, 1604,
	267, 1604,
	268, 1604,
	270, 1604,
	271, 1604,
	273, 1604,
	274, 1604,
	277, 1604,
	278, 1604,
	279, 1604,
	280, 1604,
	281, 1604,
	282, 1604,
	283, 1604,
	286, 1604,
	287, 1604,
	288, 1604,
	289, 1604,
	291, 1604,
	292, 1604,
	293, 1604,
	294, 1604,
	295, 1604,
	296, 1604,
	297, 1604,
	298, 1604,
	299, 1604,
	300, 1604,
	301, 1604,
	302, 1604,
	303, 1604,
	304, 1604,
	305, 1604,
	306, 1604,
	307, 1604,
	308, 1604,
	309, 1604,
	310, 1604,
	311, 1604,
	312, 1604,
	314, 1604,
	316, 1604,
	317, 1604,
	318, 1604,
	319, 1604,
	320, 1604,
	321, 1604,
	322, 1604,
	323, 1604,
	324, 1604,
	325, 1604,
	326, 1604,
	327, 1604,
	328, 1604,
	329, 1604,
	330, 1604,
	332, 1604,
	333, 1604,
	335, 1604,
	337, 1604,
	338, 1604,
	340, 1604,
	341, 1604,
	342, 1604,
	343, 1604,
	344, 1604,
	347, 1604,
	350, 1604,
	351, 1604,
	352, 1604,
	353, 1604,
	356, 1604,
	357, 1604,
	358, 1604,
	360, 1604,
	362, 1604,
	363, 1604,
	364, 1604,
	365, 1604,
	366, 1604,
	367, 1604,
	368, 1604,
	369, 1604,
	370, 1604,
	371, 1604,
	372, 1604,
	373, 1604,
	374, 1604,
	376, 1604,
	377, 1604,
	378, 1604,
	379, 1604,
	380, 1604,
	381, 1604,
	382, 1604,
	383, 1604,
	384, 1604,
	385, 1604,
	386, 1604,
	387, 1604,
	388, 1604,
	389, 1604,
	390, 1604,
	392, 1604,
	393, 1604,
	395, 1604,
	396, 1604,
	397, 1604,
	398, 1604,
	399, 1604,
	400, 1604,
	401, 1604,
	402, 1604,
	403, 1604,
	404, 1604,
	405, 1604,
	406, 1604,
	407, 1604,
	409, 1604,
	411, 1604,
	412, 1604,
	413, 1604,
	419, 1604,
	420, 1604,
	422, 1604,
	423, 1604,
	424, 1604,
	425, 1604,
	426, 1604,
	427, 1604,
	428, 1604,
	429, 1604,
	430, 1604,
	431, 1604,
	433, 1604,
	434, 1604,
	435, 1604,
	437, 1604,
	438, 1604,
	439, 1604,
	440, 1604,
	441, 1604,
	442, 1604,
	443, 1604,
	445, 1604,
	446, 1604,
	447, 1604,
	448, 1604,
	449, 1604,
	450, 1604,
	451, 1604,
	452, 1604,
	453, 1604,
	454, 1604,
	455, 1604,
	456, 1604,
	458, 1604,
	459, 1604,
	460, 1604,
	461, 1604,
	462, 1604,
	463, 1604,
	465, 1604,
	466, 1604,
	467, 1604,
	468, 1604,
	469, 1604,
	470, 1604,
	472, 1604,
	473, 1604,
	474, 1604,
	475, 1604,
	476, 1604,
	477, 1604,
	478, 1604,
	479, 1604,
	481, 1604,
	483, 1604,
	484, 1604,
	485, 1604,
	486, 1604,
	487, 1604,
	488, 1604,
	489, 1604,
	490, 1604,
	491, 1604,
	492, 1604,
	493, 1604,
	494, 1604,
	495, 1604,
	496, 1604,
	497, 1604,
	498, 1604,
	500, 1604,
	501, 1604,
	503, 1604,
	504, 1604,
	506, 1604,
	507, 1604,
	508, 1604,
	509, 1604,
	510, 1604,
	511, 1604,
	512, 1604,
	513, 1604,
	515, 1604,
	516, 1604,
	517, 1604,
	518, 1604,
	519, 1604,
	521, 1604,
	523, 1604,
	524, 1604,
	525, 1604,
	526, 1604,
	527, 1604,
	528, 1604,
	530, 1604,
	531, 1604,
	532, 1604,
	533, 1604,
	535, 1604,
	536, 1604,
	539, 1604,
	540, 1604,
	541, 1604,
	542, 1604,
	543, 1604,
	544, 1604,
	545, 1604,
	547, 1604,
	550, 1604,
	551, 1604,
	552, 1604,
	553, 1604,
	554, 1604,
	555, 1604,
	557, 1604,
	558, 1604,
	559, 1604,
	560, 1604,
	561, 1604,
	562, 1604,
	567, 1604,
	568, 1604,
	569, 1604,
	570, 1604,
	571, 1604,
	572, 1604,
	-2, 0,
	-1, 158,
	1, 1455,
	131, 1455,
	251, 1455,
	334, 1455,
	392, 1455,
	401, 1455,
	576, 1455,
	606, 1455,
	-2, 0,
	-1, 160,
	1, 1455,
	606, 1455,
	-2, 0,
	-1, 161,
	1, 1455,
	606, 1455,
	-2, 0,
	-1, 162,
	1, 1455,
	520, 1455,
	606, 1455,
	-2, 0,
	-1, 191,
	152, 1572,
	172, 1572,
	185, 1572,
	243, 1572,
	276, 1572,
	345, 1572,
	355, 1572,
	537, 1572,
	-2, 1547,
	-1, 238,
	4, 1611,
	5, 1611,
	6, 1611,
	7, 1611,
	8, 1611,
	9, 1611,
	10, 1611,
	21, 1611,
	22, 1611,
	23, 1611,
	24, 1611,
	25, 1611,
	26, 1611,
	27, 1611,
	29, 1611,
	30, 1611,
	36, 1611,
	37, 1611,
	41, 1611,
	42, 1611,
	43, 1611,
	44, 1611,
	45, 1611,
	46, 1611,
	47, 1611,
	48, 1611,
	49, 1611,
	50, 1611,
	51, 1611,
	53, 1611,
	54, 1611,
	55, 1611,
	56, 1611,
	58, 1611,
	59, 1611,
	60, 1611,
	61, 1611,
	62, 1611,
	63, 1611,
	64, 1611,
	65, 1611,
	66, 1611,
	67, 1611,
	68, 1611,
	69, 1611,
	70, 1611,
	71, 1611,
	73, 1611,
	74, 1611,
	75, 1611,
	77, 1611,
	79, 1611,
	80, 1611,
	81, 1611,
	82, 1611,
	83, 1611,
	84, 1611,
	85, 1611,
	88, 1611,
	89, 1611,
	90, 1611,
	91, 1611,
	92, 1611,
	94, 1611,
	96, 1611,
	97, 1611,
	98, 1611,
	99, 1611,
	100, 1611,
	101, 1611,
	103, 1611,
	104, 1611,
	105, 1611,
	106, 1611,
	107, 1611,
	108, 1611,
	109, 1611,
	110, 1611,
	111, 1611,
	112, 1611,
	113, 1611,
	114, 1611,
	115, 1611,
	116, 1611,
	117, 1611,
	118, 1611,
	119, 1611,
	120, 1611,
	121, 1611,
	122, 1611,
	123, 1611,
	124, 1611,
	125, 1611,
	126, 1611,
	127, 1611,
	128, 1611,
	129, 1611,
	130, 1611,
	132, 1611,
	133, 1611,
	134, 1611,
	136, 1611,
	137, 1611,
	138, 1611,
	141, 1611,
	142, 1611,
	143, 1611,
	145, 1611,
	146, 1611,
	147, 1611,
	149, 1611,
	150, 1611,
	151, 1611,
	153, 1611,
	154, 1611,
	155, 1611,
	156, 1611,
	157, 1611,
	158, 1611,
	159, 1611,
	160, 1611,
	161, 1611,
	162, 1611,
	163, 1611,
	164, 1611,
	165, 1611,
	166, 1611,
	167, 1611,
	168, 1611,
	169, 1611,
	170, 1611,
	171, 1611,
	177, 1611,
	178, 1611,
	179, 1611,
	180, 1611,
	184, 1611,
	186, 1611,
	187, 1611,
	188, 1611,
	191, 1611,
	192, 1611,
	193, 1611,
	194, 1611,
	195, 1611,
	196, 1611,
	197, 1611,
	198, 1611,
	199, 1611,
	200, 1611,
	201, 1611,
	202, 1611,
	203, 1611,
	204, 1611,
	205, 1611,
	207, 1611,
	208, 1611,
	210, 1611,
	211, 1611,
	213, 1611,
	214, 1611,
	215, 1611,
	216, 1611,
	217, 1611,
	218, 1611,
	219, 1611,
	220, 1611,
	221, 1611,
	222, 1611,
	223, 1611,
	224, 1611,
	226, 1611,
	227, 1611,
	228, 1611,
	229, 1611,
	230, 1611,
	234, 1611,
	235, 1611,
	236, 1611,
	237, 1611,
	239, 1611,
	240, 1611,
	241, 1611,
	242, 1611,
	244, 1611,
	246, 1611,
	247, 1611,
	248, 1611,
	249, 1611,
	250, 1611,
	251, 1611,
	252, 1611,
	253, 1611,
	254, 1611,
	255, 1611,
	259, 1611,
	260, 1611,
	261, 1611,
	262, 1611,
	263, 1611,
	264, 1611,
	266, 1611,
	267, 1611,
	268, 1611,
	270, 1611,
	271, 1611,
	272, 1611,
	273, 1611,
	274, 1611,
	275, 1611,
	277, 1611,
	278, 1611,
	279, 1611,
	280, 1611,
	281, 1611,
	282, 1611,
	283, 1611,
	284, 1611,
	285, 1611,
	286, 1611,
	287, 1611,
	288, 1611,
	289, 1611,
	291, 1611,
	292, 1611,
	293, 1611,
	294, 1611,
	295, 1611,
	296, 1611,
	297, 1611,
	298, 1611,
	299, 1611,
	300, 1611,
	301, 1611,
	302, 1611,
	303, 1611,
	304, 1611,
	305, 1611,
	306, 1611,
	307, 1611,
	308, 1611,
	309, 1611,
	310, 1611,
	311, 1611,
	312, 1611,
	314, 1611,
	315, 1611,
	316, 1611,
	317, 1611,
	318, 1611,
	319, 1611,
	320, 1611,
	321, 1611,
	322, 1611,
	323, 1611,
	324, 1611,
	325, 1611,
	326, 1611,
	327, 1611,
	328, 1611,
	329, 1611,
	330, 1611,
	331, 1611,
	332, 1611,
	333, 1611,
	334, 1611,
	335, 1611,
	336, 1611,
	337, 1611,
	338, 1611,
	339, 1611,
	340, 1611,
	341, 1611,
	342, 1611,
	343, 1611,
	344, 1611,
	347, 1611,
	351, 1611,
	352, 1611,
	353, 1611,
	356, 1611,
	357, 1611,
	358, 1611,
	359, 1611,
	360, 1611,
	361, 1611,
	362, 1611,
	363, 1611,
	364, 1611,
	365, 1611,
	366, 1611,
	367, 1611,
	368, 1611,
	369, 1611,
	370, 1611,
	371, 1611,
	372, 1611,
	373, 1611,
	374, 1611,
	376, 1611,
	377, 1611,
	378, 1611,
	379, 1611,
	380, 1611,
	381, 1611,
	382, 1611,
	383, 1611,
	384, 1611,
	385, 1611,
	386, 1611,
	387, 1611,
	388, 1611,
	389, 1611,
	390, 1611,
	392, 1611,
	393, 1611,
	395, 1611,
	396, 1611,
	397, 1611,
	398, 1611,
	399, 1611,
	400, 1611,
	401, 1611,
	402, 1611,
	403, 1611,
	404, 1611,
	405, 1611,
	406, 1611,
	407, 1611,
	409, 1611,
	411, 1611,
	412, 1611,
	413, 1611,
	419, 1611,
	420, 1611,
	422, 1611,
	423, 1611,
	424, 1611,
	425, 1611,
	426, 1611,
	427, 1611,
	428, 1611,
	429, 1611,
	430, 1611,
	431, 1611,
	433, 1611,
	434, 1611,
	435, 1611,
	436, 1611,
	437, 1611,
	438, 1611,
	439, 1611,
	440, 1611,
	441, 1611,
	442, 1611,
	443, 1611,
	445, 1611,
	446, 1611,
	447, 1611,
	448, 1611,
	449, 1611,
	450, 1611,
	451, 1611,
	452, 1611,
	453, 1611,
	454, 1611,
	455, 1611,
	456, 1611,
	458, 1611,
	459, 1611,
	460, 1611,
	461, 1611,
	462, 1611,
	463, 1611,
	464, 1611,
	465, 1611,
	466, 1611,
	467, 1611,
	468, 1611,
	469, 1611,
	470, 1611,
	471, 1611,
	472, 1611,
	473, 1611,
	474, 1611,
	475, 1611,
	476, 1611,
	477, 1611,
	478, 1611,
	479, 1611,
	481, 1611,
	483, 1611,
	484, 1611,
	485, 1611,
	486, 1611,
	487, 1611,
	488, 1611,
	489, 1611,
	490, 1611,
	491, 1611,
	492, 1611,
	493, 1611,
	494, 1611,
	495, 1611,
	496, 1611,
	497, 1611,
	498, 1611,
	500, 1611,
	501, 1611,
	502, 1611,
	503, 1611,
	504, 1611,
	506, 1611,
	507, 1611,
	508, 1611,
	509, 1611,
	510, 1611,
	511, 1611,
	512, 1611,
	513, 1611,
	515, 1611,
	516, 1611,
	517, 1611,
	518, 1611,
	519, 1611,
	521, 1611,
	523, 1611,
	524, 1611,
	525, 1611,
	526, 1611,
	527, 1611,
	528, 1611,
	529, 1611,
	530, 1611,
	531, 1611,
	532, 1611,
	533, 1611,
	535, 1611,
	536, 1611,
	538, 1611,
	539, 1611,
	540, 1611,
	541, 1611,
	542, 1611,
	543, 1611,
	544, 1611,
	545, 1611,
	546, 1611,
	547, 1611,
	550, 1611,
	551, 1611,
	552, 1611,
	553, 1611,
	554, 1611,
	555, 1611,
	557, 1611,
	558, 1611,
	559, 1611,
	560, 1611,
	561, 1611,
	562, 1611,
	567, 1611,
	568, 1611,
	569, 1611,
	570, 1611,
	571, 1611,
	572, 1611,
	573, 1611,
	586, 1611,
	593, 1611,
	594, 1611,
	595, 1611,
	603, 1611,
	607, 1611,
	-2, 0,
	-1, 753,
	4, 1336,
	21, 1336,
	22, 1336,
	23, 1336,
	24, 1336,
	25, 1336,
	26, 1336,
	27, 1336,
	29, 1336,
	30, 1336,
	36, 1336,
	41, 1336,
	42, 1336,
	44, 1336,
	45, 1336,
	46, 1336,
	47, 1336,
	48, 1336,
	49, 1336,
	50, 1336,
	51, 1336,
	53, 1336,
	54, 1336,
	55, 1336,
	56, 1336,
	58, 1336,
	59, 1336,
	60, 1336,
	61, 1336,
	62, 1336,
	63, 1336,
	64, 1336,
	68, 1336,
	69, 1336,
	70, 1336,
	71, 1336,
	73, 1336,
	74, 1336,
	75, 1336,
	79, 1336,
	80, 1336,
	81, 1336,
	82, 1336,
	83, 1336,
	84, 1336,
	85, 1336,
	88, 1336,
	89, 1336,
	90, 1336,
	91, 1336,
	92, 1336,
	94, 1336,
	96, 1336,
	97, 1336,
	98, 1336,
	99, 1336,
	100, 1336,
	101, 1336,
	103, 1336,
	104, 1336,
	105, 1336,
	107, 1336,
	108, 1336,
	109, 1336,
	117, 1336,
	118, 1336,
	119, 1336,
	120, 1336,
	121, 1336,
	123, 1336,
	124, 1336,
	125, 1336,
	126, 1336,
	128, 1336,
	129, 1336,
	130, 1336,
	132, 1336,
	133, 1336,
	134, 1336,
	136, 1336,
	137, 1336,
	138, 1336,
	141, 1336,
	142, 1336,
	143, 1336,
	145, 1336,
	146, 1336,
	147, 1336,
	149, 1336,
	150, 1336,
	151, 1336,
	153, 1336,
	154, 1336,
	155, 1336,
	156, 1336,
	157, 1336,
	158, 1336,
	159, 1336,
	160, 1336,
	161, 1336,
	162, 1336,
	163, 1336,
	164, 1336,
	165, 1336,
	166, 1336,
	167, 1336,
	168, 1336,
	169, 1336,
	171, 1336,
	177, 1336,
	178, 1336,
	179, 1336,
	180, 1336,
	184, 1336,
	186, 1336,
	187, 1336,
	188, 1336,
	192, 1336,
	193, 1336,
	194, 1336,
	195, 1336,
	196, 1336,
	197, 1336,
	198, 1336,
	199, 1336,
	200, 1336,
	201, 1336,
	202, 1336,
	203, 1336,
	204, 1336,
	205, 1336,
	207, 1336,
	208, 1336,
	210, 1336,
	211, 1336,
	213, 1336,
	214, 1336,
	215, 1336,
	216, 1336,
	217, 1336,
	218, 1336,
	219, 1336,
	220, 1336,
	221, 1336,
	223, 1336,
	224, 1336,
	226, 1336,
	227, 1336,
	228, 1336,
	229, 1336,
	230, 1336,
	234, 1336,
	235, 1336,
	236, 1336,
	237, 1336,
	240, 1336,
	241, 1336,
	242, 1336,
	244, 1336,
	246, 1336,
	247, 1336,
	249, 1336,
	251, 1336,
	252, 1336,
	253, 1336,
	255, 1336,
	259, 1336,
	260, 1336,
	261, 1336,
	262, 1336,
	263, 1336,
	264, 1336,
	266, 1336,
	267, 1336,
	268, 1336,
	270, 1336,
	271, 1336,
	273, 1336,
	274, 1336,
	277, 1336,
	278, 1336,
	279, 1336,
	280, 1336,
	281, 1336,
	282, 1336,
	283, 1336,
	286, 1336,
	287, 1336,
	288, 1336,
	289, 1336,
	291, 1336,
	292, 1336,
	293, 1336,
	294, 1336,
	295, 1336,
	296, 1336,
	297, 1336,
	298, 1336,
	299, 1336,
	300, 1336,
	301, 1336,
	302, 1336,
	303, 1336,
	304, 1336,
	305, 1336,
	306, 1336,
	307, 1336,
	308, 1336,
	309, 1336,
	310, 1336,
	311, 1336,
	312, 1336,
	314, 1336,
	316, 1336,
	317, 1336,
	318, 1336,
	319, 1336,
	320, 1336,
	321, 1336,
	322, 1336,
	323, 1336,
	324, 1336,
	325, 1336,
	326, 1336,
	327, 1336,
	328, 1336,
	329, 1336,
	330, 1336,
	332, 1336,
	333, 1336,
	335, 1336,
	337, 1336,
	338, 1336,
	340, 1336,
	341, 1336,
	342, 1336,
	343, 1336,
	344, 1336,
	347, 1336,
	351, 1336,
	352, 1336,
	353, 1336,
	356, 1336,
	357, 1336,
	358, 1336,
	360, 1336,
	362, 1336,
	363, 1336,
	364, 1336,
	365, 1336,
	366, 1336,
	367, 1336,
	368, 1336,
	369, 1336,
	370, 1336,
	371, 1336,
	372, 1336,
	373, 1336,
	374, 1336,
	376, 1336,
	377, 1336,
	378, 1336,
	379, 1336,
	380, 1336,
	381, 1336,
	382, 1336,
	383, 1336,
	384, 1336,
	385, 1336,
	386, 1336,
	387, 1336,
	388, 1336,
	389, 1336,
	390, 1336,
	392, 1336,
	393, 1336,
	395, 1336,
	396, 1336,
	397, 1336,
	398, 1336,
	399, 1336,
	400, 1336,
	401, 1336,
	402, 1336,
	403, 1336,
	404, 1336,
	405, 1336,
	406, 1336,
	407, 1336,
	409, 1336,
	411, 1336,
	412, 1336,
	413, 1336,
	419, 1336,
	420, 1336,
	422, 1336,
	423, 1336,
	424, 1336,
	425, 1336,
	426, 1336,
	427, 1336,
	428, 1336,
	429, 1336,
	430, 1336,
	431, 1336,
	433, 1336,
	434, 1336,
	435, 1336,
	437, 1336,
	438, 1336,
	439, 1336,
	440, 1336,
	441, 1336,
	442, 1336,
	443, 1336,
	445, 1336,
	446, 1336,
	447, 1336,
	448, 1336,
	449, 1336,
	450, 1336,
	451, 1336,
	452, 1336,
	453, 1336,
	454, 1336,
	455, 1336,
	456, 1336,
	458, 1336,
	459, 1336,
	460, 1336,
	461, 1336,
	462, 1336,
	463, 1336,
	465, 1336,
	466, 1336,
	467, 1336,
	468, 1336,
	469, 1336,
	470, 1336,
	472, 1336,
	473, 1336,
	474, 1336,
	475, 1336,
	476, 1336,
	477, 1336,
	478, 1336,
	479, 1336,
	481, 1336,
	483, 1336,
	484, 1336,
	485, 1336,
	486, 1336,
	487, 1336,
	488, 1336,
	489, 1336,
	490, 1336,
	491, 1336,
	492, 1336,
	493, 1336,
	494, 1336,
	495, 1336,
	496, 1336,
	497, 1336,
	498, 1336,
	500, 1336,
	501, 1336,
	503, 1336,
	504, 1336,
	506, 1336,
	507, 1336,
	508, 1336,
	509, 1336,
	510, 1336,
	511, 1336,
	512, 1336,
	513, 1336,
	515, 1336,
	516, 1336,
	517, 1336,
	518, 1336,
	519, 1336,
	521, 1336,
	523, 1336,
	524, 1336,
	525, 1336,
	526, 1336,
	527, 1336,
	528, 1336,
	530, 1336,
	531, 1336,
	532, 1336,
	533, 1336,
	535, 1336,
	536, 1336,
	539, 1336,
	540, 1336,
	541, 1336,
	542, 1336,
	543, 1336,
	544, 1336,
	545, 1336,
	547, 1336,
	550, 1336,
	551, 1336,
	552, 1336,
	553, 1336,
	554, 1336,
	555, 1336,
	557, 1336,
	558, 1336,
	559, 1336,
	560, 1336,
	561, 1336,
	562, 1336,
	567, 1336,
	568, 1336,
	569, 1336,
	570, 1336,
	571, 1336,
	572, 1336,
	-2, 0,
	-1, 772,
	190, 2403,
	520, 2403,
	585, 2403,
	605, 2403,
	-2, 0,
	-1, 773,
	190, 2390,
	520, 2390,
	585, 2390,
	605, 2390,
	-2, 0,
	-1, 775,
	190, 2655,
	520, 2655,
	585, 2655,
	605, 2655,
	-2, 0,
	-1, 778,
	190, 2515,
	520, 2515,
	585, 2515,
	605, 2515,
	-2, 0,
	-1, 779,
	190, 2696,
	520, 2696,
	585, 2696,
	605, 2696,
	-2, 0,
	-1, 787,
	190, 2542,
	520, 2542,
	585, 2542,
	605, 2542,
	-2, 717,
	-1, 822,
	605, 2339,
	608, 2339,
	-2, 1017,
	-1, 823,
	605, 2341,
	608, 2341,
	-2, 1018,
	-1, 824,
	605, 2340,
	608, 2340,
	-2, 1019,
	-1, 825,
	608, 2265,
	-2, 1020,
	-1, 850,
	185, 267,
	-2, 0,
	-1, 874,
	43, 2312,
	-2, 0,
	-1, 875,
	557, 1314,
	-2, 1097,
	-1, 891,
	4, 1745,
	21, 1745,
	22, 1745,
	23, 1745,
	24, 1745,
	25, 1745,
	26, 1745,
	27, 1745,
	29, 1745,
	30, 1745,
	36, 1745,
	41, 1745,
	42, 1745,
	44, 1745,
	45, 1745,
	46, 1745,
	47, 1745,
	48, 1745,
	49, 1745,
	50, 1745,
	51, 1745,
	53, 1745,
	54, 1745,
	55, 1745,
	56, 1745,
	58, 1745,
	59, 1745,
	60, 1745,
	61, 1745,
	62, 1745,
	63, 1745,
	64, 1745,
	68, 1745,
	69, 1745,
	70, 1745,
	71, 1745,
	73, 1745,
	74, 1745,
	75, 1745,
	79, 1745,
	80, 1745,
	81, 1745,
	82, 1745,
	83, 1745,
	84, 1745,
	85, 1745,
	88, 1745,
	89, 1745,
	90, 1745,
	91, 1745,
	92, 1745,
	94, 1745,
	96, 1745,
	97, 1745,
	98, 1745,
	99, 1745,
	100, 1745,
	101, 1745,
	103, 1745,
	104, 1745,
	105, 1745,
	107, 1745,
	108, 1745,
	109, 1745,
	117, 1745,
	118, 1745,
	119, 1745,
	120, 1745,
	121, 1745,
	123, 1745,
	124, 1745,
	125, 1745,
	126, 1745,
	128, 1745,
	129, 1745,
	130, 1745,
	132, 1745,
	133, 1745,
	134, 1745,
	136, 1745,
	137, 1745,
	138, 1745,
	141, 1745,
	142, 1745,
	143, 1745,
	145, 1745,
	146, 1745,
	147, 1745,
	149, 1745,
	150, 1745,
	151, 1745,
	153, 1745,
	154, 1745,
	155, 1745,
	156, 1745,
	157, 1745,
	158, 1745,
	159, 1745,
	160, 1745,
	161, 1745,
	162, 1745,
	163, 1745,
	164, 1745,
	165, 1745,
	166, 1745,
	167, 1745,
	168, 1745,
	169, 1745,
	171, 1745,
	177, 1745,
	178, 1745,
	179, 1745,
	180, 1745,
	184, 1745,
	186, 1745,
	187, 1745,
	188, 1745,
	192, 1745,
	193, 1745,
	194, 1745,
	195, 1745,
	196, 1745,
	197, 1745,
	198, 1745,
	199, 1745,
	200, 1745,
	201, 1745,
	202, 1745,
	203, 1745,
	204, 1745,
	205, 1745,
	207, 1745,
	208, 1745,
	210, 1745,
	211, 1745,
	213, 1745,
	214, 1745,
	215, 1745,
	216, 1745,
	217, 1745,
	218, 1745,
	219, 1745,
	220, 1745,
	221, 1745,
	223, 1745,
	224, 1745,
	226, 1745,
	227, 1745,
	228, 1745,
	229, 1745,
	230, 1745,
	234, 1745,
	235, 1745,
	236, 1745,
	237, 1745,
	240, 1745,
	241, 1745,
	242, 1745,
	244, 1745,
	246, 1745,
	247, 1745,
	249, 1745,
	251, 1745,
	252, 1745,
	253, 1745,
	255, 1745,
	259, 1745,
	260, 1745,
	261, 1745,
	262, 1745,
	263, 1745,
	264, 1745,
	266, 1745,
	267, 1745,
	268, 1745,
	270, 1745,
	271, 1745,
	273, 1745,
	274, 1745,
	277, 1745,
	278, 1745,
	279, 1745,
	280, 1745,
	281, 1745,
	282, 1745,
	283, 1745,
	286, 1745,
	287, 1745,
	288, 1745,
	289, 1745,
	291, 1745,
	292, 1745,
	293, 1745,
	294, 1745,
	295, 1745,
	296, 1745,
	297, 1745,
	298, 1745,
	299, 1745,
	300, 1745,
	301, 1745,
	302, 1745,
	303, 1745,
	304, 1745,
	305, 1745,
	306, 1745,
	307, 1745,
	308, 1745,
	309, 1745,
	310, 1745,
	311, 1745,
	312, 1745,
	314, 1745,
	316, 1745,
	317, 1745,
	318, 1745,
	319, 1745,
	320, 1745,
	321, 1745,
	322, 1745,
	323, 1745,
	324, 1745,
	325, 1745,
	326, 1745,
	327, 1745,
	328, 1745,
	329, 1745,
	330, 1745,
	332, 1745,
	333, 1745,
	335, 1745,
	337, 1745,
	338, 1745,
	340, 1745,
	341, 1745,
	342, 1745,
	343, 1745,
	344, 1745,
	347, 1745,
	351, 1745,
	352, 1745,
	353, 1745,
	356, 1745,
	357, 1745,
	358, 1745,
	360, 1745,
	362, 1745,
	363, 1745,
	364, 1745,
	365, 1745,
	366, 1745,
	367, 1745,
	368, 1745,
	369, 1745,
	370, 1745,
	371, 1745,
	372, 1745,
	373, 1745,
	374, 1745,
	376, 1745,
	377, 1745,
	378, 1745,
	379, 1745,
	380, 1745,
	381, 1745,
	382, 1745,
	383, 1745,
	384, 1745,
	385, 1745,
	386, 1745,
	387, 1745,
	388, 1745,
	389, 1745,
	390, 1745,
	392, 1745,
	393, 1745,
	395, 1745,
	396, 1745,
	397, 1745,
	398, 1745,
	399, 1745,
	400, 1745,
	401, 1745,
	402, 1745,
	403, 1745,
	404, 1745,
	405, 1745,
	406, 1745,
	407, 1745,
	409, 1745,
	411, 1745,
	412, 1745,
	413, 1745,
	419, 1745,
	420, 1745,
	422, 1745,
	423, 1745,
	424, 1745,
	425, 1745,
	426, 1745,
	427, 1745,
	428, 1745,
	429, 1745,
	430, 1745,
	431, 1745,
	433, 1745,
	434, 1745,
	435, 1745,
	437, 1745,
	438, 1745,
	439, 1745,
	440, 1745,
	441, 1745,
	442, 1745,
	443, 1745,
	445, 1745,
	446, 1745,
	447, 1745,
	448, 1745,
	449, 1745,
	450, 1745,
	451, 1745,
	452, 1745,
	453, 1745,
	454, 1745,
	455, 1745,
	456, 1745,
	458, 1745,
	459, 1745,
	460, 1745,
	461, 1745,
	462, 1745,
	463, 1745,
	465, 1745,
	466, 1745,
	467, 1745,
	468, 1745,
	469, 1745,
	470, 1745,
	472, 1745,
	473, 1745,
	474, 1745,
	475, 1745,
	476, 1745,
	477, 1745,
	478, 1745,
	479, 1745,
	481, 1745,
	483, 1745,
	484, 1745,
	485, 1745,
	486, 1745,
	487, 1745,
	488, 1745,
	489, 1745,
	490, 1745,
	491, 1745,
	492, 1745,
	493, 1745,
	494, 1745,
	495, 1745,
	496, 1745,
	497, 1745,
	498, 1745,
	500, 1745,
	501, 1745,
	503, 1745,
	504, 1745,
	506, 1745,
	507, 1745,
	508, 1745,
	509, 1745,
	510, 1745,
	511, 1745,
	512, 1745,
	513, 1745,
	515, 1745,
	516, 1745,
	517, 1745,
	518, 1745,
	519, 1745,
	521, 1745,
	523, 1745,
	524, 1745,
	525, 1745,
	526, 1745,
	527, 1745,
	528, 1745,
	530, 1745,
	531, 1745,
	532, 1745,
	533, 1745,
	535, 1745,
	536, 1745,
	539, 1745,
	540, 1745,
	541, 1745,
	542, 1745,
	543, 1745,
	544, 1745,
	545, 1745,
	547, 1745,
	550, 1745,
	551, 1745,
	552, 1745,
	553, 1745,
	554, 1745,
	555, 1745,
	557, 1745,
	558, 1745,
	559, 1745,
	560, 1745,
	561, 1745,
	562, 1745,
	567, 1745,
	568, 1745,
	569, 1745,
	570, 1745,
	571, 1745,
	572, 1745,
	-2, 0,
	-1, 901,
	263, 418,
	-2, 0,
	-1, 978,
	397, 897,
	463, 897,
	504, 897,
	525, 897,
	-2, 0,
	-1, 979,
	397, 896,
	463, 896,
	504, 896,
	525, 896,
	-2, 828,
	-1, 983,
	1, 949,
	602, 949,
	604, 949,
	606, 949,
	-2, 0,
	-1, 985,
	1, 871,
	602, 871,
	604, 871,
	606, 871,
	-2, 0,
	-1, 986,
	1, 875,
	602, 875,
	604, 875,
	606, 875,
	-2, 0,
	-1, 987,
	1, 1016,
	185, 1016,
	602, 1016,
	604, 1016,
	606, 1016,
	-2, 0,
	-1, 995,
	1, 902,
	602, 902,
	604, 902,
	606, 902,
	-2, 0,
	-1, 1002,
	1, 949,
	602, 949,
	604, 949,
	606, 949,
	-2, 0,
	-1, 1003,
	1, 951,
	602, 951,
	604, 951,
	606, 951,
	-2, 0,
	-1, 1004,
	1, 954,
	602, 954,
	604, 954,
	606, 954,
	-2, 0,
	-1, 1010,
	1, 980,
	602, 980,
	604, 980,
	606, 980,
	-2, 0,
	-1, 1011,
	1, 982,
	602, 982,
	604, 982,
	606, 982,
	-2, 0,
	-1, 1016,
	1, 1010,
	602, 1010,
	604, 1010,
	606, 1010,
	-2, 0,
	-1, 1068,
	172, 1615,
	185, 1615,
	276, 1615,
	345, 1615,
	-2, 1551,
	-1, 1083,
	172, 1614,
	185, 1614,
	276, 1614,
	345, 1614,
	-2, 1548,
	-1, 1110,
	605, 2338,
	-2, 725,
	-1, 1139,
	5, 2330,
	603, 2328,
	-2, 2319,
	-1, 1147,
	5, 2351,
	603, 2348,
	-2, 2339,
	-1, 1148,
	5, 2352,
	603, 2349,
	-2, 2340,
	-1, 1156,
	605, 2336,
	-2, 2318,
	-1, 1157,
	603, 2780,
	-2, 2337,
	-1, 1180,
	603, 2779,
	-2, 2353,
	-1, 1181,
	5, 1820,
	-2, 2750,
	-1, 1182,
	5, 1821,
	-2, 2751,
	-1, 1183,
	5, 1822,
	-2, 2765,
	-1, 1184,
	5, 1823,
	-2, 2729,
	-1, 1185,
	5, 1824,
	-2, 2763,
	-1, 1186,
	5, 1832,
	-2, 2742,
	-1, 1187,
	5, 1819,
	-2, 2738,
	-1, 1188,
	5, 1819,
	-2, 2737,
	-1, 1189,
	5, 1819,
	-2, 2756,
	-1, 1190,
	5, 1830,
	-2, 2731,
	-1, 1191,
	5, 1835,
	-2, 2730,
	-1, 1192,
	5, 1837,
	-2, 2775,
	-1, 1195,
	5, 1859,
	-2, 2768,
	-1, 1196,
	5, 1851,
	-2, 2769,
	-1, 1197,
	5, 1859,
	-2, 2770,
	-1, 1198,
	5, 1855,
	-2, 2771,
	-1, 1199,
	5, 1805,
	-2, 2743,
	-1, 1200,
	5, 1806,
	-2, 2744,
	-1, 1201,
	5, 1807,
	-2, 2732,
	-1, 1229,
	5, 1842,
	-2, 2776,
	-1, 1230,
	5, 1843,
	-2, 2766,
	-1, 1231,
	5, 1844,
	558, 1844,
	-2, 2733,
	-1, 1232,
	5, 1845,
	558, 1845,
	-2, 2734,
	-1, 1269,
	603, 2348,
	-2, 2339,
	-1, 1270,
	603, 2349,
	-2, 2340,
	-1, 1367,
	190, 2696,
	520, 2696,
	585, 2696,
	605, 2696,
	-2, 0,
	-1, 1372,
	1, 701,
	606, 701,
	-2, 1463,
	-1, 1502,
	364, 2313,
	422, 2313,
	465, 2313,
	595, 2313,
	-2, 2303,
	-1, 1508,
	190, 129,
	270, 129,
	332, 129,
	562, 129,
	-2, 2692,
	-1, 1509,
	190, 130,
	270, 130,
	332, 130,
	562, 130,
	-2, 2448,
	-1, 1510,
	190, 131,
	270, 131,
	332, 131,
	562, 131,
	-2, 2617,
	-1, 1516,
	607, 2313,
	-2, 2315,
	-1, 1524,
	1, 1311,
	427, 1275,
	465, 1275,
	579, 1275,
	602, 1311,
	604, 1311,
	606, 1311,
	-2, 1600,
	-1, 1530,
	206, 1408,
	225, 1408,
	435, 1408,
	-2, 0,
	-1, 1586,
	405, 1096,
	557, 1096,
	-2, 413,
	-1, 1603,
	43, 2311,
	-2, 1062,
	-1, 1610,
	1, 1311,
	602, 1311,
	604, 1311,
	606, 1311,
	-2, 1600,
	-1, 1618,
	4, 1336,
	21, 1336,
	22, 1336,
	23, 1336,
	24, 1336,
	25, 1336,
	26, 1336,
	27, 1336,
	29, 1336,
	30, 1336,
	36, 1336,
	41, 1336,
	42, 1336,
	44, 1336,
	45, 1336,
	46, 1336,
	47, 1336,
	48, 1336,
	49, 1336,
	50, 1336,
	51, 1336,
	53, 1336,
	54, 1336,
	55, 1336,
	56, 1336,
	58, 1336,
	59, 1336,
	60, 1336,
	61, 1336,
	62, 1336,
	63, 1336,
	64, 1336,
	68, 1336,
	69, 1336,
	70, 1336,
	71, 1336,
	73, 1336,
	74, 1336,
	75, 1336,
	79, 1336,
	80, 1336,
	81, 1336,
	82, 1336,
	83, 1336,
	84, 1336,
	85, 1336,
	88, 1336,
	89, 1336,
	90, 1336,
	91, 1336,
	92, 1336,
	94, 1336,
	96, 1336,
	97, 1336,
	98, 1336,
	99, 1336,
	100, 1336,
	101, 1336,
	103, 1336,
	104, 1336,
	105, 1336,
	107, 1336,
	108, 1336,
	109, 1336,
	117, 1336,
	118, 1336,
	119, 1336,
	120, 1336,
	121, 1336,
	123, 1336,
	124, 1336,
	125, 1336,
	126, 1336,
	128, 1336,
	129, 1336,
	130, 1336,
	132, 1336,
	133, 1336,
	134, 1336,
	136, 1336,
	137, 1336,
	138, 1336,
	141, 1336,
	142, 1336,
	143, 1336,
	145, 1336,
	146, 1336,
	147, 1336,
	149, 1336,
	150, 1336,
	151, 1336,
	153, 1336,
	154, 1336,
	155, 1336,
	156, 1336,
	157, 1336,
	158, 1336,
	159, 1336,
	160, 1336,
	161, 1336,
	162, 1336,
	163, 1336,
	164, 1336,
	165, 1336,
	166, 1336,
	167, 1336,
	168, 1336,
	169, 1336,
	177, 1336,
	178, 1336,
	179, 1336,
	180, 1336,
	184, 1336,
	186, 1336,
	187, 1336,
	188, 1336,
	192, 1336,
	193, 1336,
	194, 1336,
	195, 1336,
	196, 1336,
	197, 1336,
	198, 1336,
	199, 1336,
	200, 1336,
	201, 1336,
	202, 1336,
	203, 1336,
	204, 1336,
	205, 1336,
	207, 1336,
	208, 1336,
	210, 1336,
	211, 1336,
	213, 1336,
	214, 1336,
	215, 1336,
	216, 1336,
	217, 1336,
	218, 1336,
	219, 1336,
	220, 1336,
	221, 1336,
	223, 1336,
	224, 1336,
	226, 1336,
	227, 1336,
	228, 1336,
	229, 1336,
	230, 1336,
	235, 1336,
	236, 1336,
	237, 1336,
	240, 1336,
	241, 1336,
	242, 1336,
	244, 1336,
	246, 1336,
	247, 1336,
	249, 1336,
	251, 1336,
	252, 1336,
	253, 1336,
	255, 1336,
	259, 1336,
	260, 1336,
	261, 1336,
	262, 1336,
	263, 1336,
	264, 1336,
	266, 1336,
	267, 1336,
	268, 1336,
	270, 1336,
	271, 1336,
	273, 1336,
	274, 1336,
	277, 1336,
	278, 1336,
	279, 1336,
	280, 1336,
	281, 1336,
	282, 1336,
	283, 1336,
	286, 1336,
	287, 1336,
	288, 1336,
	289, 1336,
	291, 1336,
	292, 1336,
	293, 1336,
	294, 1336,
	295, 1336,
	296, 1336,
	297, 1336,
	298, 1336,
	299, 1336,
	300, 1336,
	301, 1336,
	302, 1336,
	303, 1336,
	304, 1336,
	305, 1336,
	306, 1336,
	307, 1336,
	308, 1336,
	309, 1336,
	310, 1336,
	311, 1336,
	312, 1336,
	314, 1336,
	316, 1336,
	317, 1336,
	318, 1336,
	319, 1336,
	320, 1336,
	321, 1336,
	322, 1336,
	323, 1336,
	324, 1336,
	325, 1336,
	326, 1336,
	327, 1336,
	328, 1336,
	329, 1336,
	330, 1336,
	332, 1336,
	333, 1336,
	337, 1336,
	338, 1336,
	340, 1336,
	341, 1336,
	342, 1336,
	343, 1336,
	344, 1336,
	347, 1336,
	349, 1336,
	351, 1336,
	352, 1336,
	353, 1336,
	356, 1336,
	357, 1336,
	358, 1336,
	360, 1336,
	362, 1336,
	363, 1336,
	364, 1336,
	365, 1336,
	366, 1336,
	367, 1336,
	368, 1336,
	369, 1336,
	370, 1336,
	371, 1336,
	372, 1336,
	373, 1336,
	374, 1336,
	376, 1336,
	377, 1336,
	378, 1336,
	379, 1336,
	380, 1336,
	381, 1336,
	382, 1336,
	383, 1336,
	384, 1336,
	385, 1336,
	386, 1336,
	387, 1336,
	388, 1336,
	389, 1336,
	390, 1336,
	392, 1336,
	393, 1336,
	395, 1336,
	396, 1336,
	397, 1336,
	398, 1336,
	399, 1336,
	400, 1336,
	401, 1336,
	402, 1336,
	403, 1336,
	404, 1336,
	405, 1336,
	406, 1336,
	407, 1336,
	409, 1336,
	411, 1336,
	412, 1336,
	413, 1336,
	419, 1336,
	420, 1336,
	422, 1336,
	423, 1336,
	424, 1336,
	425, 1336,
	426, 1336,
	427, 1336,
	428, 1336,
	429, 1336,
	430, 1336,
	431, 1336,
	433, 1336,
	434, 1336,
	435, 1336,
	437, 1336,
	438, 1336,
	439, 1336,
	440, 1336,
	441, 1336,
	442, 1336,
	443, 1336,
	445, 1336,
	446, 1336,
	447, 1336,
	448, 1336,
	449, 1336,
	450, 1336,
	451, 1336,
	452, 1336,
	453, 1336,
	454, 1336,
	455, 1336,
	456, 1336,
	458, 1336,
	459, 1336,
	460, 1336,
	461, 1336,
	462, 1336,
	463, 1336,
	465, 1336,
	466, 1336,
	467, 1336,
	468, 1336,
	469, 1336,
	470, 1336,
	472, 1336,
	473, 1336,
	474, 1336,
	475, 1336,
	476, 1336,
	477, 1336,
	478, 1336,
	479, 1336,
	481, 1336,
	483, 1336,
	484, 1336,
	485, 1336,
	486, 1336,
	487, 1336,
	488, 1336,
	489, 1336,
	490, 1336,
	491, 1336,
	492, 1336,
	493, 1336,
	494, 1336,
	495, 1336,
	496, 1336,
	497, 1336,
	498, 1336,
	500, 1336,
	501, 1336,
	503, 1336,
	504, 1336,
	506, 1336,
	507, 1336,
	508, 1336,
	509, 1336,
	510, 1336,
	511, 1336,
	512, 1336,
	513, 1336,
	515, 1336,
	516, 1336,
	517, 1336,
	518, 1336,
	519, 1336,
	521, 1336,
	523, 1336,
	524, 1336,
	525, 1336,
	526, 1336,
	527, 1336,
	528, 1336,
	530, 1336,
	531, 1336,
	532, 1336,
	533, 1336,
	535, 1336,
	536, 1336,
	539, 1336,
	540, 1336,
	541, 1336,
	542, 1336,
	543, 1336,
	544, 1336,
	545, 1336,
	547, 1336,
	550, 1336,
	551, 1336,
	552, 1336,
	553, 1336,
	554, 1336,
	555, 1336,
	557, 1336,
	558, 1336,
	559, 1336,
	560, 1336,
	561, 1336,
	562, 1336,
	567, 1336,
	568, 1336,
	569, 1336,
	570, 1336,
	571, 1336,
	572, 1336,
	-2, 0,
	-1, 1641,
	1, 558,
	602, 558,
	604, 558,
	606, 558,
	-2, 1571,
	-1, 1644,
	4, 2774,
	11, 2774,
	12, 2774,
	14, 2774,
	15, 2774,
	16, 2774,
	17, 2774,
	18, 2774,
	19, 2774,
	21, 2774,
	22, 2774,
	23, 2774,
	24, 2774,
	25, 2774,
	26, 2774,
	27, 2774,
	29, 2774,
	30, 2774,
	33, 2774,
	34, 2774,
	36, 2774,
	38, 2774,
	41, 2774,
	42, 2774,
	44, 2774,
	45, 2774,
	46, 2774,
	47, 2774,
	48, 2774,
	49, 2774,
	50, 2774,
	51, 2774,
	53, 2774,
	54, 2774,
	55, 2774,
	56, 2774,
	58, 2774,
	59, 2774,
	60, 2774,
	61, 2774,
	62, 2774,
	63, 2774,
	64, 2774,
	67, 2774,
	68, 2774,
	69, 2774,
	70, 2774,
	71, 2774,
	73, 2774,
	74, 2774,
	75, 2774,
	76, 2774,
	79, 2774,
	80, 2774,
	81, 2774,
	82, 2774,
	83, 2774,
	84, 2774,
	85, 2774,
	86, 2774,
	88, 2774,
	89, 2774,
	90, 2774,
	91, 2774,
	92, 2774,
	94, 2774,
	95, 2774,
	96, 2774,
	97, 2774,
	98, 2774,
	99, 2774,
	100, 2774,
	101, 2774,
	103, 2774,
	104, 2774,
	105, 2774,
	106, 2774,
	107, 2774,
	108, 2774,
	109, 2774,
	117, 2774,
	118, 2774,
	119, 2774,
	120, 2774,
	121, 2774,
	123, 2774,
	124, 2774,
	125, 2774,
	126, 2774,
	128, 2774,
	129, 2774,
	130, 2774,
	132, 2774,
	133, 2774,
	134, 2774,
	136, 2774,
	137, 2774,
	138, 2774,
	141, 2774,
	142, 2774,
	143, 2774,
	145, 2774,
	146, 2774,
	147, 2774,
	149, 2774,
	150, 2774,
	151, 2774,
	153, 2774,
	154, 2774,
	155, 2774,
	156, 2774,
	157, 2774,
	158, 2774,
	159, 2774,
	160, 2774,
	161, 2774,
	162, 2774,
	163, 2774,
	164, 2774,
	165, 2774,
	166, 2774,
	167, 2774,
	168, 2774,
	169, 2774,
	173, 2774,
	174, 2774,
	175, 2774,
	176, 2774,
	177, 2774,
	178, 2774,
	179, 2774,
	180, 2774,
	183, 2774,
	184, 2774,
	186, 2774,
	187, 2774,
	188, 2774,
	191, 2774,
	192, 2774,
	193, 2774,
	194, 2774,
	195, 2774,
	196, 2774,
	197, 2774,
	198, 2774,
	199, 2774,
	200, 2774,
	201, 2774,
	202, 2774,
	203, 2774,
	204, 2774,
	205, 2774,
	207, 2774,
	208, 2774,
	210, 2774,
	211, 2774,
	213, 2774,
	214, 2774,
	215, 2774,
	216, 2774,
	217, 2774,
	218, 2774,
	219, 2774,
	220, 2774,
	221, 2774,
	222, 2774,
	223, 2774,
	224, 2774,
	225, 2774,
	226, 2774,
	227, 2774,
	228, 2774,
	229, 2774,
	230, 2774,
	232, 2774,
	233, 2774,
	235, 2774,
	236, 2774,
	237, 2774,
	239, 2774,
	240, 2774,
	241, 2774,
	242, 2774,
	244, 2774,
	246, 2774,
	247, 2774,
	248, 2774,
	249, 2774,
	250, 2774,
	251, 2774,
	252, 2774,
	253, 2774,
	254, 2774,
	255, 2774,
	257, 2774,
	258, 2774,
	259, 2774,
	260, 2774,
	261, 2774,
	262, 2774,
	263, 2774,
	264, 2774,
	266, 2774,
	267, 2774,
	268, 2774,
	270, 2774,
	271, 2774,
	272, 2774,
	273, 2774,
	274, 2774,
	275, 2774,
	277, 2774,
	278, 2774,
	279, 2774,
	280, 2774,
	281, 2774,
	282, 2774,
	283, 2774,
	286, 2774,
	287, 2774,
	288, 2774,
	289, 2774,
	290, 2774,
	291, 2774,
	292, 2774,
	293, 2774,
	294, 2774,
	295, 2774,
	296, 2774,
	297, 2774,
	298, 2774,
	299, 2774,
	300, 2774,
	301, 2774,
	302, 2774,
	303, 2774,
	304, 2774,
	305, 2774,
	306, 2774,
	307, 2774,
	308, 2774,
	309, 2774,
	310, 2774,
	311, 2774,
	312, 2774,
	314, 2774,
	315, 2774,
	316, 2774,
	317, 2774,
	318, 2774,
	319, 2774,
	320, 2774,
	321, 2774,
	322, 2774,
	323, 2774,
	324, 2774,
	325, 2774,
	326, 2774,
	327, 2774,
	328, 2774,
	329, 2774,
	330, 2774,
	332, 2774,
	333, 2774,
	336, 2774,
	337, 2774,
	338, 2774,
	340, 2774,
	341, 2774,
	342, 2774,
	343, 2774,
	344, 2774,
	347, 2774,
	351, 2774,
	352, 2774,
	353, 2774,
	354, 2774,
	356, 2774,
	357, 2774,
	358, 2774,
	360, 2774,
	362, 2774,
	363, 2774,
	364, 2774,
	365, 2774,
	366, 2774,
	367, 2774,
	368, 2774,
	369, 2774,
	370, 2774,
	371, 2774,
	372, 2774,
	373, 2774,
	374, 2774,
	376, 2774,
	377, 2774,
	378, 2774,
	379, 2774,
	380, 2774,
	381, 2774,
	382, 2774,
	383, 2774,
	384, 2774,
	385, 2774,
	386, 2774,
	387, 2774,
	388, 2774,
	389, 2774,
	390, 2774,
	392, 2774,
	393, 2774,
	395, 2774,
	396, 2774,
	397, 2774,
	398, 2774,
	399, 2774,
	400, 2774,
	401, 2774,
	402, 2774,
	403, 2774,
	404, 2774,
	405, 2774,
	406, 2774,
	407, 2774,
	409, 2774,
	411, 2774,
	412, 2774,
	413, 2774,
	419, 2774,
	420, 2774,
	421, 2774,
	422, 2774,
	423, 2774,
	424, 2774,
	425, 2774,
	426, 2774,
	427, 2774,
	428, 2774,
	429, 2774,
	430, 2774,
	431, 2774,
	433, 2774,
	434, 2774,
	435, 2774,
	436, 2774,
	437, 2774,
	438, 2774,
	439, 2774,
	440, 2774,
	441, 2774,
	442, 2774,
	443, 2774,
	444, 2774,
	445, 2774,
	446, 2774,
	447, 2774,
	448, 2774,
	449, 2774,
	450, 2774,
	451, 2774,
	452, 2774,
	453, 2774,
	454, 2774,
	455, 2774,
	456, 2774,
	458, 2774,
	459, 2774,
	460, 2774,
	461, 2774,
	462, 2774,
	463, 2774,
	465, 2774,
	466, 2774,
	467, 2774,
	468, 2774,
	469, 2774,
	470, 2774,
	471, 2774,
	472, 2774,
	473, 2774,
	474, 2774,
	475, 2774,
	476, 2774,
	477, 2774,
	478, 2774,
	479, 2774,
	481, 2774,
	483, 2774,
	484, 2774,
	485, 2774,
	486, 2774,
	487, 2774,
	488, 2774,
	489, 2774,
	490, 2774,
	491, 2774,
	492, 2774,
	493, 2774,
	494, 2774,
	495, 2774,
	496, 2774,
	497, 2774,
	498, 2774,
	500, 2774,
	501, 2774,
	502, 2774,
	503, 2774,
	504, 2774,
	506, 2774,
	507, 2774,
	508, 2774,
	509, 2774,
	510, 2774,
	511, 2774,
	512, 2774,
	513, 2774,
	515, 2774,
	516, 2774,
	517, 2774,
	518, 2774,
	519, 2774,
	521, 2774,
	523, 2774,
	524, 2774,
	525, 2774,
	526, 2774,
	527, 2774,
	528, 2774,
	530, 2774,
	531, 2774,
	532, 2774,
	533, 2774,
	535, 2774,
	536, 2774,
	539, 2774,
	540, 2774,
	541, 2774,
	542, 2774,
	543, 2774,
	544, 2774,
	545, 2774,
	547, 2774,
	550, 2774,
	551, 2774,
	552, 2774,
	553, 2774,
	554, 2774,
	555, 2774,
	557, 2774,
	558, 2774,
	559, 2774,
	560, 2774,
	561, 2774,
	562, 2774,
	567, 2774,
	568, 2774,
	569, 2774,
	570, 2774,
	571, 2774,
	572, 2774,
	573, 2774,
	575, 2774,
	583, 2774,
	584, 2774,
	585, 2774,
	586, 2774,
	587, 2774,
	588, 2774,
	590, 2774,
	591, 2774,
	592, 2774,
	593, 2774,
	594, 2774,
	595, 2774,
	596, 2774,
	597, 2774,
	598, 2774,
	601, 2774,
	604, 2774,
	605, 2774,
	607, 2774,
	608, 2774,
	-2, 0,
	-1, 1649,
	190, 2655,
	520, 2655,
	585, 2655,
	605, 2655,
	-2, 0,
	-1, 1702,
	397, 897,
	463, 897,
	504, 897,
	525, 897,
	-2, 0,
	-1, 1713,
	1, 1408,
	602, 1408,
	604, 1408,
	606, 1408,
	-2, 0,
	-1, 1730,
	1, 892,
	602, 892,
	604, 892,
	606, 892,
	-2, 0,
	-1, 1731,
	1, 936,
	602, 936,
	604, 936,
	606, 936,
	-2, 0,
	-1, 1732,
	1, 944,
	602, 944,
	604, 944,
	606, 944,
	-2, 0,
	-1, 1735,
	1, 901,
	602, 901,
	604, 901,
	606, 901,
	-2, 0,
	-1, 1737,
	1, 907,
	602, 907,
	604, 907,
	606, 907,
	-2, 0,
	-1, 1740,
	1, 903,
	602, 903,
	604, 903,
	606, 903,
	-2, 0,
	-1, 1745,
	1, 917,
	602, 917,
	604, 917,
	606, 917,
	-2, 0,
	-1, 1776,
	1, 2638,
	602, 2638,
	604, 2638,
	605, 2638,
	606, 2638,
	-2, 0,
	-1, 1780,
	1, 991,
	602, 991,
	604, 991,
	606, 991,
	-2, 0,
	-1, 1797,
	1, 1458,
	606, 1458,
	-2, 1463,
	-1, 1800,
	172, 1614,
	185, 1614,
	276, 1614,
	345, 1614,
	-2, 1552,
	-1, 1900,
	152, 1573,
	172, 1573,
	185, 1573,
	243, 1573,
	276, 1573,
	345, 1573,
	355, 1573,
	537, 1573,
	-2, 2024,
	-1, 1961,
	604, 2199,
	-2, 0,
	-1, 1996,
	152, 1573,
	172, 1573,
	185, 1573,
	243, 1573,
	276, 1573,
	345, 1573,
	355, 1573,
	537, 1573,
	-2, 1706,
	-1, 2035,
	520, 2652,
	605, 2652,
	608, 2652,
	-2, 0,
	-1, 2052,
	603, 1847,
	-2, 1835,
	-1, 2084,
	190, 2652,
	605, 2652,
	608, 2652,
	-2, 0,
	-1, 2127,
	1, 703,
	606, 703,
	-2, 1463,
	-1, 2272,
	225, 262,
	-2, 2347,
	-1, 2273,
	225, 263,
	-2, 315,
	-1, 2382,
	1, 894,
	602, 894,
	604, 894,
	606, 894,
	-2, 0,
	-1, 2383,
	1, 938,
	602, 938,
	604, 938,
	606, 938,
	-2, 0,
	-1, 2384,
	1, 946,
	602, 946,
	604, 946,
	606, 946,
	-2, 0,
	-1, 2385,
	1, 993,
	602, 993,
	604, 993,
	606, 993,
	-2, 0,
	-1, 2426,
	1, 919,
	602, 919,
	604, 919,
	606, 919,
	-2, 0,
	-1, 2446,
	1, 976,
	602, 976,
	604, 976,
	606, 976,
	-2, 0,
	-1, 2493,
	442, 1641,
	443, 1641,
	-2, 1880,
	-1, 2524,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1900,
	-1, 2525,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1901,
	-1, 2526,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1902,
	-1, 2527,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1903,
	-1, 2528,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1904,
	-1, 2529,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1905,
	-1, 2530,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1906,
	-1, 2531,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1907,
	-1, 2543,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1919,
	-1, 2544,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1920,
	-1, 2545,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1921,
	-1, 2549,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1928,
	-1, 2555,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1932,
	-1, 2557,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1940,
	-1, 2558,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1941,
	-1, 2559,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1942,
	-1, 2560,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1943,
	-1, 2734,
	5, 2351,
	190, 2210,
	603, 2348,
	-2, 2339,
	-1, 2735,
	190, 2211,
	-2, 2725,
	-1, 2736,
	190, 2212,
	-2, 2541,
	-1, 2737,
	190, 2213,
	-2, 2421,
	-1, 2738,
	190, 2214,
	-2, 2479,
	-1, 2739,
	190, 2215,
	-2, 2526,
	-1, 2740,
	190, 2216,
	-2, 2650,
	-1, 2741,
	190, 2217,
	-2, 2007,
	-1, 2812,
	1, 1707,
	2, 1707,
	106, 1707,
	152, 1707,
	172, 1707,
	185, 1707,
	191, 1707,
	209, 1707,
	212, 1707,
	239, 1707,
	243, 1707,
	254, 1707,
	272, 1707,
	276, 1707,
	315, 1707,
	345, 1707,
	349, 1707,
	355, 1707,
	432, 1707,
	436, 1707,
	537, 1707,
	548, 1707,
	564, 1707,
	565, 1707,
	566, 1707,
	576, 1707,
	602, 1707,
	604, 1707,
	606, 1707,
	608, 1707,
	-2, 1706,
	-1, 2825,
	603, 2320,
	-2, 2334,
	-1, 2827,
	1, 332,
	564, 332,
	-2, 1600,
	-1, 2857,
	603, 1846,
	-2, 1836,
	-1, 3046,
	1, 1311,
	427, 1275,
	465, 1275,
	579, 1275,
	602, 1311,
	604, 1311,
	606, 1311,
	-2, 1600,
	-1, 3221,
	350, 1644,
	-2, 2764,
	-1, 3222,
	350, 1645,
	-2, 2635,
	-1, 3226,
	442, 2276,
	443, 2276,
	-2, 2005,
	-1, 3227,
	442, 2280,
	443, 2280,
	-2, 2006,
	-1, 3228,
	442, 2277,
	443, 2277,
	-2, 2005,
	-1, 3229,
	442, 2281,
	443, 2281,
	-2, 2006,
	-1, 3242,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1930,
	-1, 3243,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1934,
	-1, 3249,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1936,
	-1, 3476,
	1, 698,
	602, 698,
	604, 698,
	606, 698,
	-2, 1463,
	-1, 3653,
	43, 2311,
	-2, 1063,
	-1, 3658,
	1, 1311,
	602, 1311,
	604, 1311,
	606, 1311,
	-2, 1600,
	-1, 3763,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1938,
	-1, 3770,
	248, 0,
	250, 0,
	336, 0,
	-2, 1957,
	-1, 3838,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1986,
	-1, 3839,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1987,
	-1, 3840,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1988,
	-1, 3844,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1992,
	-1, 3845,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1993,
	-1, 3846,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1994,
	-1, 3894,
	603, 2321,
	-2, 2335,
	-1, 4088,
	605, 2881,
	-2, 1526,
	-1, 4143,
	248, 0,
	250, 0,
	336, 0,
	-2, 1958,
	-1, 4146,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1961,
	-1, 4147,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1963,
	-1, 4256,
	605, 2336,
	-2, 1346,
	-1, 4414,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1962,
	-1, 4415,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1964,
	-1, 4426,
	248, 0,
	-2, 1997,
	-1, 4612,
	248, 0,
	-2, 1998,
	-1, 4825,
	50, 0,
	222, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 2728,
}

const sqlPrivate = 57344

const sqlLast = 135933

var sqlAct = [...]int{
	274, 4765, 4764, 5007, 3642, 4939, 3380, 4650, 4870, 3118,
	4658, 4886, 4482, 4824, 4952, 4700, 4812, 2922, 4836, 3131,
	4721, 3641, 4796, 4775, 4755, 1539, 4126, 4837, 4893, 4778,
	2269, 4838, 4582, 1345, 4375, 2964, 4464, 4252, 4558, 3803,
	4545, 2346, 2176, 4529, 4616, 4435, 4304, 4370, 4330, 1093,
	2503, 4487, 4823, 1273, 3904, 4403, 3755, 3675, 4080, 3494,
	2358, 4072, 4357, 4567, 2989, 4359, 1566, 4350, 4685, 2109,
	3088, 4000, 3497, 712, 1338, 824, 2356, 3235, 4253, 2767,
	4233, 2572, 2096, 4380, 2923, 1809, 3004, 3669, 3626, 4046,
	3500, 4027, 3555, 2511, 4029, 1406, 4431, 1150, 784, 3706,
	1340, 2039, 1262, 824, 3104, 3143, 3708, 3633, 2184, 3107,
	3077, 3897, 3608, 3630, 1084, 2040, 4182, 3631, 3607, 1499,
	3138, 2354, 1331, 1667, 3615, 4125, 2839, 2504, 723, 3102,
	3426, 1193, 3395, 3363, 3403, 903, 3133, 1971, 3384, 1947,
	3119, 3433, 2256, 3386, 2258, 2212, 2002, 899, 4, 4871,
	3864, 3519, 2319, 2196, 2805, 268, 3362, 4617, 3053, 1908,
	1878, 821, 3219, 2508, 3137, 1343, 2585, 267, 3081, 111,
	1605, 2257, 894, 819, 3021, 2252, 780, 2240, 3089, 2650,
	1387, 1253, 2164, 2233, 1143, 1797, 2652, 2168, 2107, 2020,
	2785, 1972, 2641, 1092, 182, 1148, 2569, 1710, 1991, 2154,
	2492, 2475, 2840, 2473, 757, 1348, 1642, 3112, 1139, 1328,
	2306, 1608, 2946, 2909, 1317, 825, 4722, 2947, 1568, 972,
	826, 2274, 1665, 3634, 2963, 2644, 1374, 1256, 2764, 2794,
	830, 1942, 2868, 1981, 1235, 2622, 2775, 1988, 2696, 1892,
	2730, 1270, 833, 191, 1141, 1810, 2807, 2474, 1811, 2476,
	1745, 2804, 765, 2266, 776, 1633, 1252, 1146, 830, 2305,
	1640, 192, 1534, 2332, 920, 1730, 4887, 1507, 4940, 716,
	833, 2497, 1124, 1258, 44, 43, 1233, 3272, 814, 41,
	32, 30, 1816, 28, 1796, 713, 875, 725, 182, 1545,
	740, 993, 3878, 876, 3879, 3382, 699, 3266, 3905, 2098,
	721, 5018, 2098, 5010, 4999, 2784, 2098, 3694, 2784, 1559,
	1736, 2098, 1538, 4998, 2098, 2098, 4972, 2784, 4970, 4913,
	4486, 4872, 4486, 2278, 4862, 4873, 4833, 4860, 2784, 4857,
	1676, 2784, 4854, 4858, 4821, 1658, 4855, 4820, 2278, 3684,
	2119, 2278, 4819, 4810, 4808, 4805, 3148, 4486, 4486, 4570,
	4800, 4799, 4773, 4741, 4486, 4486, 4486, 2848, 4455, 4449,
	4734, 4733, 1145, 1089, 2784, 2784, 4726, 4699, 4696, 4679,
	2278, 2278, 4486, 4320, 4614, 4596, 4560, 4505, 2848, 4109,
	4561, 2278, 4504, 4493, 1250, 4492, 2278, 2278, 4485, 4486,
	4442, 4416, 4486, 4452, 2278, 2848, 4391, 4388, 4299, 4279,
	3148, 3694, 2784, 2784, 4209, 4145, 1383, 4096, 4090, 2848,
	1078, 3701, 3701, 4043, 3889, 3887, 3871, 4044, 3890, 3888,
	2784, 3787, 1383, 3783, 3443, 2278, 1069, 2784, 1088, 3700,
	1088, 2870, 3694, 3701, 3685, 3461, 3458, 3379, 2355, 3374,
	1287, 2784, 3281, 2784, 1068, 2647, 2119, 2116, 3282, 1268,
	2278, 2119, 1824, 1825, 3868, 1857, 1858, 1859, 1868, 1869,
	1870, 3373, 3324, 3322, 2844, 2784, 3325, 3323, 94, 3314,
	1083, 3234, 2784, 3315, 1861, 1855, 3333, 3334, 2777, 1236,
	1236, 3312, 1827, 3283, 3147, 2784, 3129, 2784, 3148, 238,
	2342, 1874, 1122, 1547, 4742, 3128, 2893, 2847, 1265, 2342,
	2784, 2848, 4618, 2837, 1295, 2829, 2119, 2784, 1880, 2278,
	1237, 2783, 2116, 1547, 4609, 2784, 2341, 1826, 1547, 2119,
	2342, 1239, 4597, 1240, 4570, 1558, 3148, 1846, 1288, 3868,
	2776, 4368, 4320, 2116, 4280, 4109, 1843, 240, 2648, 4045,
	2996, 2908, 2133, 2097, 2113, 3083, 1288, 2277, 3014, 2906,
	1967, 3348, 1533, 3979, 3758, 3731, 2189, 1989, 2245, 3686,
	1712, 2821, 2820, 2819, 2818, 2817, 2418, 1241, 1238, 1077,
	3333, 3334, 238, 3351, 3352, 3353, 1076, 1075, 1074, 3687,
	4477, 1073, 1072, 1071, 1067, 239, 1066, 1065, 1064, 1063,
	3333, 3334, 4141, 3351, 3352, 3353, 1062, 1061, 232, 3192,
	1538, 1060, 1059, 1264, 1058, 1057, 1056, 233, 1055, 1054,
	1053, 1052, 4140, 1051, 1849, 1850, 1851, 1852, 1050, 2649,
	240, 2646, 1032, 970, 1832, 969, 968, 967, 966, 965,
	964, 1546, 963, 962, 961, 193, 960, 959, 4958, 958,
	957, 956, 955, 954, 953, 3348, 952, 951, 3339, 950,
	949, 948, 947, 946, 1824, 1825, 945, 1857, 1858, 1859,
	1868, 1869, 1870, 1865, 2099, 3348, 1875, 2099, 239, 944,
	943, 2099, 942, 1854, 1856, 941, 2099, 1855, 940, 2099,
	2099, 2784, 939, 3271, 1827, 938, 937, 936, 935, 1871,
	924, 1872, 923, 1874, 922, 918, 917, 910, 1841, 1842,
	909, 908, 893, 892, 849, 848, 847, 846, 837, 836,
	1880, 835, 834, 800, 791, 790, 1863, 789, 193, 1826,
	771, 2679, 262, 261, 260, 259, 1824, 1825, 258, 1846,
	257, 1847, 256, 1266, 255, 254, 253, 252, 1843, 251,
	250, 249, 3339, 248, 2116, 247, 246, 245, 244, 1855,
	243, 242, 241, 4200, 4157, 3349, 1827, 3914, 1350, 1148,
	4382, 238, 3339, 3883, 238, 238, 1553, 3702, 3429, 3294,
	3277, 3268, 3172, 1992, 153, 3063, 2116, 1873, 2651, 3377,
	2852, 2826, 1880, 2811, 2465, 238, 1148, 1148, 1148, 2162,
	238, 1826, 1680, 2118, 2015, 1862, 3097, 2677, 2663, 1824,
	1825, 1846, 1823, 1910, 1409, 2661, 1877, 3355, 1148, 240,
	1843, 2116, 240, 240, 1547, 1350, 1849, 1850, 1851, 1852,
	1919, 3378, 1791, 1541, 1395, 1272, 1832, 3355, 4847, 1827,
	1877, 4846, 1950, 240, 4843, 1391, 1392, 1393, 240, 1949,
	1148, 4822, 1148, 2119, 1148, 4807, 2880, 3333, 3334, 3349,
	2097, 1571, 3684, 1288, 2116, 2116, 1378, 239, 2113, 2468,
	239, 239, 1853, 4707, 1826, 1865, 4139, 1953, 1875, 3349,
	232, 1738, 4621, 232, 232, 1854, 1856, 1350, 1512, 233,
	4606, 239, 233, 233, 1517, 1848, 239, 4600, 1849, 1850,
	1851, 1852, 4598, 2645, 232, 4430, 2776, 1571, 1832, 232,
	1841, 1842, 4389, 233, 1571, 4367, 4215, 193, 233, 3350,
	193, 193, 1866, 1148, 1950, 1148, 1824, 1825, 1863, 4180,
	1571, 1949, 1288, 4179, 1877, 2861, 2285, 4173, 1148, 1504,
	1148, 193, 4056, 1847, 4172, 4171, 193, 1910, 4164, 4163,
	3333, 3334, 4161, 1879, 1877, 4156, 1827, 1854, 1856, 1948,
	1917, 4153, 4152, 1614, 1617, 1370, 4042, 3918, 1335, 3917,
	3916, 3893, 1911, 3859, 1909, 1372, 1322, 1325, 3858, 4384,
	3857, 1832, 1841, 1842, 3779, 1537, 3774, 3424, 1571, 1522,
	3370, 1826, 1552, 830, 1402, 3361, 1496, 1501, 3332, 3329,
	3328, 3326, 3321, 3333, 3334, 833, 3320, 3319, 1148, 3316,
	3313, 1148, 3293, 3350, 1620, 1847, 3276, 3269, 1877, 1912,
	1249, 3267, 3333, 3334, 1864, 3130, 2812, 2634, 1823, 3339,
	1524, 238, 2322, 3350, 1838, 1839, 1845, 1867, 1844, 1840,
	1364, 1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834,
	1603, 3333, 3334, 1536, 2283, 4167, 3099, 3115, 1535, 4166,
	1822, 5013, 4057, 4961, 4960, 3344, 3342, 3343, 3335, 3336,
	3337, 3338, 3340, 3341, 1853, 1662, 1089, 1681, 1634, 240,
	1645, 1647, 1564, 3977, 4885, 4883, 1274, 3805, 4766, 4684,
	1877, 4670, 1610, 4666, 4665, 4664, 238, 1848, 1832, 4644,
	3375, 182, 182, 4643, 4641, 4620, 4619, 4594, 2581, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 2575, 4580, 4577,
	4576, 1356, 3339, 1378, 1866, 1643, 1378, 239, 4571, 4556,
	4555, 4501, 4472, 4428, 4411, 1651, 3349, 4410, 4353, 1091,
	232, 4346, 1148, 4343, 240, 4321, 1853, 4199, 1148, 233,
	4178, 1666, 3345, 3346, 3347, 1879, 4110, 3965, 1636, 3344,
	3342, 3343, 3335, 3336, 3337, 3338, 3340, 3341, 3964, 1848,
	3947, 3946, 3345, 3346, 3347, 3339, 3944, 193, 3874, 3344,
	3342, 3343, 3335, 3336, 3337, 3338, 3340, 3341, 3862, 3769,
	1897, 4476, 239, 1801, 3339, 3703, 3695, 3661, 4057, 3574,
	3530, 3499, 3452, 1686, 3450, 232, 3421, 3298, 3297, 1694,
	1754, 1877, 3292, 1657, 233, 3258, 3076, 1956, 3333, 3334,
	1955, 1954, 1951, 3339, 1943, 1795, 1864, 1879, 1675, 1941,
	2859, 238, 2858, 4383, 2823, 2816, 1838, 1839, 1845, 1867,
	1844, 1840, 193, 1837, 1835, 1836, 1828, 1829, 1830, 1831,
	1833, 1834, 2782, 1148, 1148, 1148, 4623, 238, 39, 1148,
	3098, 2659, 1896, 2014, 1970, 1965, 1270, 1964, 1270, 1963,
	1962, 1961, 1960, 1959, 1958, 1957, 1938, 1937, 1936, 240,
	1877, 1703, 3349, 1409, 1935, 1934, 1899, 1933, 1932, 1931,
	3350, 1930, 1929, 1928, 1148, 1739, 1927, 824, 1350, 1926,
	1969, 3349, 1925, 2057, 824, 240, 1350, 1924, 1350, 1802,
	2018, 1089, 1844, 1840, 1923, 1837, 1835, 1836, 1828, 1829,
	1830, 1831, 1833, 1834, 1912, 1898, 1895, 239, 4450, 1890,
	3349, 2036, 4622, 2678, 1798, 1363, 1292, 1283, 1978, 2086,
	232, 2088, 1806, 4356, 1805, 4211, 1069, 1952, 4149, 233,
	3913, 3886, 3877, 239, 3280, 2814, 1800, 1877, 4213, 2025,
	2850, 3912, 1639, 2026, 1068, 1911, 232, 3448, 1350, 1893,
	3333, 3334, 3690, 2030, 1148, 233, 1877, 193, 2153, 1819,
	1820, 2010, 4951, 3533, 1933, 4282, 2990, 238, 4667, 4572,
	3339, 1975, 1976, 1830, 1831, 1833, 1834, 2153, 1148, 2153,
	2051, 2121, 1388, 193, 1390, 1877, 1409, 4563, 2019, 2676,
	2662, 1999, 4562, 4387, 2178, 2103, 4324, 2660, 2105, 4323,
	1824, 1825, 4322, 4281, 2110, 4202, 1639, 4116, 2112, 4115,
	1944, 1945, 2151, 2115, 2054, 240, 3350, 1089, 3343, 3335,
	3336, 3337, 3338, 3340, 3341, 4114, 4113, 2160, 4112, 4111,
	1827, 2968, 830, 2125, 1378, 3350, 3881, 3880, 2031, 830,
	3705, 3704, 3697, 182, 833, 2080, 3696, 2000, 4839, 1389,
	2124, 833, 4601, 2023, 1268, 4909, 1268, 4599, 4907, 1383,
	2223, 1992, 3756, 239, 3350, 1826, 4568, 1950, 2145, 2144,
	4060, 1236, 2153, 2155, 1949, 1997, 232, 2024, 1793, 3991,
	1383, 1990, 1933, 3318, 3317, 233, 1702, 3240, 1828, 1829,
	1830, 1831, 1833, 1834, 2950, 1386, 3962, 3501, 3019, 2139,
	1048, 1968, 4929, 1265, 2242, 1265, 3644, 2347, 3643, 1755,
	238, 1921, 1711, 3114, 3337, 3338, 3340, 3341, 4559, 1994,
	4868, 1383, 1571, 1571, 2009, 2008, 2101, 2045, 4850, 2007,
	2005, 2004, 1409, 2003, 1384, 3564, 4050, 4835, 1918, 3616,
	2642, 3144, 2647, 2127, 1712, 1049, 2260, 4064, 2037, 2259,
	2374, 4039, 1877, 3997, 3988, 3970, 238, 3382, 240, 2123,
	3728, 3474, 3344, 3342, 3343, 3335, 3336, 3337, 3338, 3340,
	3341, 2352, 4432, 3807, 238, 3286, 4496, 2323, 4468, 2857,
	1966, 2189, 3342, 3343, 3335, 3336, 3337, 3338, 3340, 3341,
	1946, 2148, 4844, 1638, 3624, 2316, 1613, 1529, 1359, 1321,
	4859, 1248, 4856, 2219, 240, 2227, 239, 3011, 1264, 3008,
	1264, 2237, 2222, 3335, 3336, 3337, 3338, 3340, 3341, 232,
	3680, 3938, 240, 2948, 3006, 4659, 1690, 4371, 233, 4772,
	4637, 3504, 3957, 3111, 3599, 2648, 4910, 1571, 4499, 1571,
	4010, 1571, 2992, 4495, 2229, 2270, 2275, 4911, 2156, 2146,
	4474, 3750, 239, 2187, 1380, 3478, 193, 1638, 4845, 1571,
	1571, 4525, 2183, 4269, 1588, 232, 1580, 2446, 2195, 2443,
	239, 1046, 1571, 2925, 233, 2894, 4944, 5009, 4674, 830,
	4518, 4507, 4313, 232, 1571, 2232, 1571, 1571, 1571, 2262,
	2263, 833, 233, 2432, 1028, 888, 1044, 1753, 2430, 1042,
	1531, 2264, 193, 4312, 2232, 1040, 2232, 4009, 2150, 1037,
	824, 2217, 1390, 2912, 4008, 2230, 2649, 2312, 2646, 2140,
	193, 4007, 2444, 3999, 3985, 4248, 2373, 3984, 2910, 2483,
	3982, 3981, 1148, 3171, 3969, 3933, 3480, 1385, 1266, 1536,
	1266, 3932, 3605, 2317, 1535, 1390, 2149, 3604, 3566, 2445,
	1589, 3442, 3291, 2912, 3941, 2329, 3290, 3055, 2128, 4241,
	3289, 2216, 3288, 2213, 2228, 3244, 1373, 1148, 2910, 1106,
	2236, 3017, 3016, 3532, 3013, 3002, 2994, 1389, 3449, 2350,
	3335, 3336, 3337, 3338, 3340, 3341, 2276, 2984, 2378, 2481,
	2928, 2983, 2978, 2977, 2976, 1381, 2955, 2366, 4497, 2954,
	4469, 2916, 889, 1148, 1382, 1148, 1089, 2838, 1089, 1688,
	1389, 2556, 1148, 1734, 4242, 2057, 2057, 1409, 2326, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1643, 1148, 1643, 1148, 1148,
	1148, 1148, 2345, 2297, 2339, 830, 1799, 2467, 2298, 1752,
	3501, 2403, 2337, 2331, 1636, 2651, 2334, 833, 2334, 2383,
	2359, 2361, 2360, 4945, 1148, 2335, 2485, 1384, 1148, 1148,
	2260, 2347, 2472, 2364, 1364, 1384, 1148, 2343, 2692, 2344,
	1148, 3562, 1148, 1148, 2851, 2372, 1087, 2375, 2376, 2377,
	1409, 2188, 2051, 2051, 763, 2231, 1148, 1148, 1148, 1148,
	1733, 2691, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148,
	2509, 2510, 2365, 2513, 2231, 2972, 2231, 3341, 763, 2482,
	2185, 2384, 3108, 2965, 2966, 4220, 2054, 2054, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 2393, 4283, 2382,
	2483, 1148, 2965, 2966, 2965, 2966, 2296, 2623, 2624, 4409,
	1626, 1751, 1625, 1270, 2181, 1532, 1624, 2865, 1623, 1383,
	1409, 2623, 2639, 2458, 1704, 4267, 3255, 1834, 2426, 1270,
	2645, 2952, 2927, 4264, 2642, 2842, 2225, 1086, 1355, 3198,
	3729, 4534, 1584, 2186, 2496, 1148, 1409, 1380, 2687, 1683,
	2455, 4225, 2480, 1034, 1307, 1380, 2463, 3253, 2370, 2390,
	2481, 4237, 1789, 4946, 1597, 2901, 4238, 2733, 2733, 2747,
	3151, 2623, 2182, 1734, 2768, 2770, 4243, 711, 2828, 2471,
	2774, 2470, 2469, 4652, 2567, 2484, 2477, 2587, 1792, 1602,
	1069, 4974, 2571, 1069, 1069, 1089, 4910, 2157, 2158, 2045,
	2045, 2638, 3563, 706, 2571, 1089, 2799, 1764, 2500, 1089,
	3187, 2501, 2502, 1712, 4224, 2565, 1712, 2939, 4240, 1544,
	2197, 1551, 2436, 1557, 2824, 3010, 2010, 3217, 3333, 3334,
	1385, 3351, 3352, 3353, 2424, 4244, 2387, 2457, 1385, 1731,
	2579, 4261, 2479, 2201, 891, 890, 3232, 2577, 3477, 1088,
	1350, 1350, 1700, 3201, 4841, 798, 2791, 3009, 2381, 3007,
	2689, 2583, 2938, 4947, 2841, 2690, 2336, 1684, 2693, 1768,
	2694, 2695, 1999, 2391, 3005, 1804, 1362, 2636, 3738, 2926,
	1733, 2749, 762, 3737, 2889, 3189, 2651, 2915, 1381, 2867,
	4629, 933, 1656, 1409, 1661, 3966, 1381, 1382, 1089, 3250,
	2198, 1732, 2790, 3348, 3954, 1382, 762, 1674, 4654, 1679,
	2482, 3796, 1689, 2864, 2875, 1609, 2845, 2798, 2883, 2803,
	2879, 1268, 2809, 2810, 4311, 2729, 3251, 2759, 2057, 2742,
	3256, 2915, 2772, 1038, 2890, 2911, 4019, 1268, 2863, 1378,
	4263, 1952, 2780, 2781, 1236, 2796, 2797, 2792, 2886, 4931,
	3983, 3980, 3793, 3921, 2431, 4265, 1997, 2561, 1038, 2429,
	2853, 1038, 182, 3908, 2882, 4239, 1020, 1039, 1607, 796,
	1265, 1038, 1750, 4949, 1737, 3611, 1409, 3603, 1278, 2562,
	4408, 3231, 2813, 2480, 2563, 3560, 1265, 3200, 2568, 4535,
	1082, 764, 1350, 1280, 4020, 4955, 3012, 2975, 2953, 4922,
	3339, 4533, 2951, 1747, 4249, 4250, 2891, 4531, 2282, 2281,
	2202, 2860, 2885, 1148, 1148, 764, 1148, 2917, 3197, 2897,
	1275, 2454, 886, 3952, 885, 2051, 2464, 2214, 1944, 1945,
	4842, 1085, 4930, 3794, 2836, 2892, 4975, 4018, 4898, 4738,
	824, 2899, 1350, 2958, 3003, 2874, 2914, 2884, 4259, 2877,
	2869, 2878, 4131, 3549, 4530, 2888, 3967, 2973, 4130, 2054,
	3080, 3609, 3732, 4262, 3612, 3355, 1281, 3224, 3225, 838,
	2651, 2098, 1383, 1571, 3677, 1264, 2203, 2204, 2900, 2957,
	1383, 4532, 1021, 3678, 3122, 3541, 1571, 3195, 1571, 2895,
	1586, 1264, 2942, 2189, 2988, 845, 2243, 3139, 4750, 2898,
	2913, 2199, 2220, 3095, 4459, 1571, 2956, 3349, 2456, 2991,
	2255, 3550, 2246, 2980, 2930, 2933, 3252, 2253, 1765, 2974,
	2979, 4660, 3058, 2920, 3199, 2982, 3254, 3060, 1583, 1350,
	4814, 1350, 4815, 3018, 1279, 4840, 3152, 3153, 3047, 3048,
	1306, 3488, 1609, 3542, 2389, 2200, 2215, 3159, 3160, 3161,
	3577, 4681, 707, 1148, 3548, 3479, 2553, 2967, 2969, 2970,
	2971, 3142, 3173, 830, 3174, 2981, 3677, 4266, 2254, 4948,
	3141, 1762, 2045, 2986, 2564, 833, 2993, 4653, 761, 3000,
	4694, 2226, 1877, 3050, 2566, 2912, 3540, 797, 3516, 1980,
	1713, 3169, 2651, 1530, 1290, 830, 2209, 3046, 1939, 3091,
	2931, 3085, 3056, 2189, 2243, 1266, 3446, 833, 4260, 3145,
	4405, 2169, 3149, 4340, 3136, 2224, 2170, 3596, 3154, 1148,
	3155, 1266, 4127, 1536, 2802, 1148, 1148, 4736, 3061, 1026,
	1025, 2247, 3175, 4686, 708, 4920, 799, 2169, 2006, 3074,
	795, 3051, 2170, 3168, 3126, 3515, 4687, 3087, 3084, 2179,
	4953, 3246, 1685, 4897, 2210, 3203, 1035, 3205, 3178, 1766,
	3180, 3350, 3182, 2570, 2827, 182, 4421, 2205, 3106, 4783,
	4293, 4737, 2425, 3117, 1984, 2187, 1022, 934, 730, 3127,
	4688, 1148, 1148, 709, 3049, 710, 4878, 1148, 2633, 4248,
	3610, 1643, 1763, 1889, 2578, 3296, 4879, 2208, 2795, 4976,
	1148, 1148, 2386, 2808, 1088, 3809, 1148, 1148, 3125, 4963,
	3146, 3206, 1148, 4355, 3208, 3124, 3166, 1699, 1701, 839,
	840, 925, 1987, 4241, 2380, 3520, 3158, 4234, 2551, 3056,
	2171, 2554, 3177, 2192, 3179, 3176, 3181, 1982, 3183, 3184,
	1803, 1361, 2206, 4121, 4232, 3953, 4690, 926, 2175, 3489,
	4360, 4404, 1276, 4236, 1767, 1985, 2171, 1148, 1148, 1148,
	4954, 3193, 4447, 1148, 4316, 4032, 3247, 2211, 3909, 4689,
	4361, 1296, 1984, 1148, 2175, 4030, 1294, 2224, 4242, 3522,
	3212, 2550, 4132, 3752, 3215, 3223, 4701, 4691, 4788, 3279,
	1148, 2193, 1718, 1097, 2226, 4720, 4956, 2987, 1983, 1023,
	3345, 3346, 3347, 3214, 3213, 1277, 4579, 3344, 3342, 3343,
	3335, 3336, 3337, 3338, 3340, 3341, 1814, 4315, 2496, 3218,
	1987, 4314, 4235, 2172, 2177, 2221, 1024, 4078, 3665, 3460,
	2223, 2835, 3397, 4341, 2191, 2793, 2099, 3274, 3275, 2304,
	1977, 1980, 3278, 3521, 3233, 1293, 1286, 698, 4055, 2172,
	2177, 3848, 2250, 1985, 1813, 1813, 4896, 4176, 4034, 4128,
	4494, 911, 2499, 4032, 842, 841, 2190, 1808, 2218, 3270,
	2141, 4981, 4588, 4030, 3434, 1089, 3495, 4636, 1027, 4079,
	3245, 2243, 1148, 1148, 1148, 1148, 2138, 916, 4003, 4033,
	4406, 3986, 1148, 1148, 1148, 3939, 3937, 1148, 2932, 3666,
	2225, 3657, 3491, 3096, 3090, 3078, 2173, 1148, 1270, 1409,
	2248, 2330, 2324, 1148, 2318, 1148, 2310, 3389, 3390, 1986,
	2290, 2489, 2289, 3792, 1270, 1577, 1984, 4702, 1298, 843,
	844, 3929, 2173, 2188, 3863, 2239, 4756, 2915, 2959, 3753,
	770, 4723, 1409, 4877, 2786, 1813, 4081, 2437, 2134, 3899,
	3075, 3526, 4376, 2249, 1270, 2179, 4034, 1409, 1812, 1812,
	1309, 2136, 2238, 3285, 4551, 4549, 4133, 4471, 3507, 1350,
	3503, 927, 928, 3502, 1987, 3405, 3372, 2552, 2789, 2057,
	3238, 2179, 2222, 1409, 3216, 4237, 4358, 4033, 2371, 1982,
	4238, 3414, 3391, 1350, 3876, 3394, 2234, 3393, 1741, 1740,
	4243, 1350, 3441, 3900, 2363, 2137, 2353, 1985, 2287, 3524,
	1735, 1889, 3903, 2834, 2833, 2832, 2831, 1986, 2830, 2788,
	1618, 4038, 3082, 1148, 2787, 2186, 3456, 1814, 1814, 1632,
	3901, 3396, 3898, 1619, 1086, 3483, 4647, 1148, 4692, 4483,
	2178, 1902, 4240, 4331, 4693, 1907, 3849, 1350, 1630, 1812,
	1983, 4134, 3525, 2057, 2235, 3850, 3427, 3484, 3485, 4244,
	2490, 4177, 4031, 2936, 932, 4051, 3945, 3399, 2328, 3428,
	1148, 3406, 3475, 3619, 2178, 3934, 2051, 3401, 3505, 4028,
	3468, 3509, 4553, 4980, 4183, 1350, 3481, 3464, 4917, 4457,
	3466, 3467, 4456, 3423, 3447, 3470, 3054, 3471, 3383, 3472,
	3420, 1378, 3432, 3436, 3437, 3438, 3439, 1350, 3459, 1350,
	2054, 912, 913, 3398, 2960, 2961, 1268, 3444, 3150, 2419,
	3367, 3368, 3369, 3404, 3411, 1148, 1148, 4703, 2242, 3059,
	3057, 3930, 1268, 1409, 3506, 2242, 2357, 3511, 2174, 1719,
	3513, 3418, 2259, 3419, 1350, 1693, 4484, 3578, 1350, 4466,
	2051, 4479, 3535, 4762, 3580, 4552, 3582, 3410, 4648, 3586,
	4031, 4478, 1268, 3592, 2174, 1265, 4769, 3492, 3498, 929,
	930, 1986, 4753, 3865, 1571, 3453, 3454, 2658, 3455, 4448,
	3400, 1265, 4206, 3413, 2054, 3412, 3565, 1350, 1571, 4239,
	1571, 3415, 3416, 1785, 1409, 4790, 4467, 4921, 2450, 4919,
	3469, 824, 1571, 3558, 1787, 1784, 3462, 4861, 3435, 4677,
	3476, 1265, 4668, 1571, 4454, 1782, 1759, 1757, 1729, 3575,
	3613, 3465, 1727, 2045, 3629, 1350, 3482, 3553, 4249, 4250,
	769, 4427, 1725, 3487, 1723, 3902, 1721, 3561, 3539, 1715,
	3935, 1709, 1270, 4217, 4763, 1707, 4175, 3673, 4037, 4649,
	3364, 1628, 3490, 3649, 3768, 3523, 3726, 3725, 3567, 3457,
	3327, 3531, 3139, 3257, 3407, 3408, 3409, 1571, 3079, 3001,
	1264, 3139, 1631, 3537, 2995, 3656, 2949, 3544, 2862, 1571,
	2459, 1571, 3547, 2348, 2017, 2013, 1264, 1788, 1669, 4537,
	3538, 1629, 3365, 3748, 3747, 3551, 1808, 2045, 3600, 3191,
	3190, 2024, 3693, 3671, 3570, 3682, 3664, 931, 3157, 914,
	915, 3614, 3552, 3617, 3554, 2428, 1264, 3576, 2395, 3601,
	3589, 2268, 2478, 3545, 1746, 3595, 2982, 3546, 1409, 2398,
	3730, 1409, 3587, 2309, 2288, 2087, 3593, 2085, 1922, 1682,
	1601, 2657, 4834, 4294, 3990, 3989, 4298, 4278, 3602, 3588,
	4752, 3740, 4374, 3594, 1036, 4303, 830, 3789, 4894, 4291,
	3579, 4230, 3672, 4229, 3606, 1148, 3667, 4077, 833, 3670,
	4369, 1148, 1148, 2957, 3621, 1148, 1148, 1148, 4068, 1148,
	3674, 2452, 3653, 4206, 3652, 3723, 2451, 3654, 1148, 2057,
	4006, 3987, 1786, 1783, 4891, 3597, 3960, 1148, 3721, 3958,
	1266, 3746, 1148, 1781, 1758, 1756, 1728, 3936, 1409, 3679,
	1726, 3660, 3655, 3645, 1089, 3109, 1266, 1148, 3688, 1687,
	1724, 1020, 1722, 3622, 1720, 1409, 3745, 1714, 1407, 1708,
	3658, 3691, 3692, 1706, 3650, 2057, 2057, 1148, 1148, 1627,
	1148, 1148, 1148, 3101, 3094, 1082, 1266, 3086, 3072, 3071,
	1268, 3743, 182, 182, 3052, 2881, 2876, 2286, 1148, 2284,
	3749, 2261, 1148, 2244, 2057, 2057, 1148, 1148, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 2051, 1148, 3699, 3821,
	3771, 3822, 3754, 3681, 2207, 1148, 1148, 2057, 2427, 1265,
	3722, 2394, 1148, 3724, 2267, 2194, 3734, 2180, 3735, 2120,
	3736, 3751, 2117, 1148, 2114, 1041, 1043, 1045, 3781, 3782,
	2054, 1080, 2111, 1020, 1270, 1270, 2106, 2104, 1148, 2100,
	2091, 1817, 2051, 2051, 2029, 3590, 4360, 1021, 1245, 3236,
	2253, 272, 4911, 2142, 3209, 4646, 3207, 1082, 3045, 4802,
	2509, 3812, 4390, 2130, 2131, 4310, 4361, 2462, 4221, 3778,
	1409, 2051, 2051, 3776, 1246, 3140, 2054, 2054, 3895, 2161,
	1582, 4590, 3788, 1350, 1350, 2937, 4583, 4089, 2189, 2509,
	3827, 3860, 1779, 1780, 3804, 2385, 3819, 2912, 1350, 1350,
	3820, 824, 1350, 1081, 2051, 2054, 2054, 3882, 3811, 3795,
	3797, 3798, 2910, 2460, 1264, 2912, 3906, 3907, 2327, 3799,
	1329, 1148, 3856, 1330, 4801, 2422, 2417, 3824, 2392, 4270,
	2934, 3919, 3920, 1824, 1825, 3926, 3852, 3826, 2054, 4305,
	1148, 1705, 3818, 2045, 4608, 3237, 3867, 2940, 4481, 1021,
	4184, 4162, 1818, 3518, 2941, 2962, 2169, 1821, 1357, 2461,
	3853, 2170, 1297, 3861, 3591, 4914, 1824, 1825, 4905, 4002,
	3064, 1148, 1148, 3067, 4869, 3069, 263, 3872, 3873, 2941,
	3869, 3870, 3070, 4065, 2311, 1247, 2129, 1368, 3927, 2045,
	2045, 4001, 3928, 3008, 1026, 1025, 1827, 2999, 1826, 3006,
	3015, 2945, 2997, 1330, 2943, 1330, 4761, 1148, 1148, 182,
	2998, 4480, 4743, 3884, 2944, 1148, 4714, 4708, 2045, 2045,
	4645, 3113, 3940, 695, 3113, 4574, 4544, 4458, 4075, 4067,
	4054, 1826, 3959, 3892, 3961, 3659, 3116, 1571, 2773, 2126,
	1571, 1022, 1268, 1268, 1266, 1350, 1110, 2038, 4950, 4792,
	3971, 2045, 2985, 1528, 4793, 1527, 830, 3445, 4979, 3333,
	3334, 4792, 3922, 1824, 1825, 1538, 4793, 4710, 833, 4154,
	2057, 3975, 2904, 2905, 4924, 2171, 2902, 2903, 2653, 3915,
	1692, 3911, 2904, 3976, 3978, 2902, 1691, 2688, 4074, 4575,
	4519, 1265, 1265, 2175, 3998, 4004, 1026, 1025, 3992, 1761,
	4307, 4302, 1760, 4301, 4150, 4005, 3185, 3910, 3800, 2580,
	3963, 3885, 1571, 3584, 3581, 3968, 1916, 1915, 1148, 3211,
	2466, 4967, 4932, 4021, 4022, 1902, 1270, 1148, 4747, 4746,
	4091, 4745, 4676, 4675, 4047, 4625, 4547, 1571, 1571, 1571,
	4511, 2957, 3122, 1022, 1571, 1571, 1571, 4451, 4445, 4348,
	4328, 4268, 4024, 4212, 4105, 4098, 4095, 4041, 3956, 3139,
	3948, 3663, 3662, 4061, 1023, 3512, 1571, 2051, 2172, 2177,
	3463, 3196, 1409, 3188, 4086, 4082, 4026, 3165, 4083, 4035,
	2755, 4102, 3164, 4036, 4053, 3498, 3163, 3162, 4014, 3100,
	3073, 1024, 266, 2935, 2872, 2866, 1264, 1264, 4017, 1409,
	2855, 2054, 1148, 1148, 4106, 2854, 4049, 2016, 1148, 1148,
	2057, 4025, 2843, 1148, 1148, 4066, 1148, 4040, 2582, 2453,
	2423, 1148, 2416, 2415, 2414, 2413, 2412, 2325, 4085, 2299,
	2295, 2294, 1148, 4015, 2293, 4062, 2292, 2291, 2094, 2093,
	2092, 4069, 2090, 1027, 2028, 1778, 1777, 1716, 1148, 1596,
	4016, 2173, 1595, 4071, 1594, 4087, 1593, 4084, 4011, 1592,
	1591, 4012, 4104, 1590, 4093, 4092, 1023, 4117, 1585, 1581,
	1579, 4097, 1578, 1521, 1520, 4135, 4103, 1519, 1400, 1399,
	1398, 1397, 1396, 1360, 1316, 4136, 4118, 1315, 1314, 4119,
	1313, 1079, 1312, 1024, 1311, 4148, 2167, 1310, 1308, 1303,
	2179, 1302, 1301, 1300, 1299, 900, 8, 2051, 1228, 1270,
	2132, 4144, 4129, 1047, 2045, 1033, 4651, 1270, 4247, 4246,
	4245, 1409, 1409, 2449, 1409, 93, 1266, 1266, 1587, 862,
	2163, 1270, 87, 2251, 1268, 3955, 999, 4789, 4680, 1562,
	4189, 2054, 1571, 1571, 870, 1027, 4771, 4063, 3514, 3020,
	2397, 1717, 2399, 3422, 2165, 1409, 2815, 4735, 4099, 4100,
	4101, 4158, 3295, 4615, 4420, 2359, 4107, 4108, 2656, 1920,
	3376, 89, 1132, 1178, 4339, 4338, 4231, 4124, 3942, 3632,
	4335, 4334, 2042, 1265, 2044, 1270, 1096, 1270, 1156, 1412,
	4222, 4223, 4813, 2143, 1138, 2159, 2152, 2166, 4174, 2856,
	2732, 4207, 4208, 1155, 1152, 2046, 2048, 4192, 4194, 1154,
	1350, 1153, 2047, 4258, 1940, 1151, 4271, 2041, 4073, 3120,
	1409, 3689, 1350, 1637, 4257, 1350, 4186, 4187, 1635, 1001,
	4273, 4274, 2147, 3427, 270, 270, 270, 1148, 701, 702,
	1409, 717, 701, 717, 728, 2576, 4188, 768, 4201, 4210,
	4181, 788, 4185, 4191, 2045, 2640, 794, 3284, 1913, 1112,
	4190, 4198, 4216, 270, 4306, 4219, 4308, 1134, 4226, 2637,
	1291, 1123, 1111, 4272, 3402, 4197, 2279, 3381, 1571, 1571,
	3676, 3891, 2488, 2174, 907, 4205, 880, 4254, 1264, 4254,
	4218, 270, 3330, 2643, 4228, 1282, 182, 2756, 2748, 2744,
	3473, 3110, 4332, 1794, 4434, 1891, 1350, 3121, 1790, 1394,
	1116, 2574, 1904, 3262, 2498, 3683, 3425, 1268, 1409, 2849,
	4292, 4795, 3808, 1571, 4309, 1268, 4300, 3194, 2303, 1244,
	1243, 1289, 1242, 4777, 4329, 4774, 2241, 4342, 4326, 1268,
	3627, 3628, 2135, 2896, 2586, 4290, 3646, 1128, 1515, 2441,
	3741, 3387, 1571, 1571, 1571, 1571, 1571, 1571, 4052, 1598,
	793, 4488, 1140, 4203, 4204, 4366, 1265, 1876, 1409, 3041,
	3040, 4640, 1379, 1377, 1265, 4287, 1376, 4363, 4318, 1375,
	1148, 1148, 1148, 4941, 4317, 3951, 4377, 3950, 1265, 4378,
	3949, 4319, 4333, 1268, 237, 1268, 4345, 4276, 1409, 4337,
	4325, 3230, 4327, 1148, 4372, 1815, 1148, 1148, 1807, 4354,
	4285, 4381, 234, 4288, 236, 4277, 1148, 235, 1266, 2057,
	4344, 701, 701, 4349, 1148, 1148, 3896, 4286, 3431, 270,
	4289, 4867, 3527, 3528, 4379, 3529, 3973, 1110, 1110, 1110,
	3618, 1409, 1265, 1571, 1265, 23, 4386, 22, 21, 116,
	4393, 42, 20, 155, 4412, 1493, 4392, 133, 1350, 152,
	151, 4365, 125, 4407, 4400, 150, 149, 148, 147, 154,
	146, 1264, 145, 140, 144, 1409, 4395, 143, 142, 1264,
	4399, 4401, 141, 1148, 139, 137, 3571, 3572, 138, 3573,
	132, 4453, 136, 1264, 135, 134, 1148, 131, 130, 2359,
	129, 128, 127, 126, 124, 1148, 4417, 156, 2755, 123,
	2057, 4362, 122, 121, 120, 119, 2051, 118, 117, 1148,
	4429, 781, 1148, 4440, 4441, 782, 61, 60, 115, 113,
	4423, 114, 19, 40, 14, 65, 1148, 66, 18, 1148,
	13, 35, 92, 4461, 105, 4462, 1409, 1264, 4491, 1264,
	2054, 104, 103, 1350, 36, 101, 100, 34, 17, 16,
	15, 2512, 98, 1571, 1571, 1571, 97, 96, 4463, 33,
	4470, 4510, 2178, 4394, 31, 4396, 4397, 4398, 11, 9,
	4443, 37, 4444, 2001, 1270, 12, 5, 4460, 187, 2755,
	2755, 186, 189, 185, 4502, 4503, 4524, 188, 91, 4536,
	184, 1266, 183, 90, 29, 10, 179, 2051, 4566, 1266,
	4059, 3629, 4557, 4546, 82, 1409, 4565, 4550, 1571, 4508,
	181, 4554, 180, 1266, 4513, 4500, 178, 4520, 177, 4522,
	176, 4523, 83, 4512, 80, 175, 86, 174, 81, 4521,
	85, 2054, 84, 27, 6, 64, 7, 4402, 3727, 4589,
	108, 1148, 1148, 4539, 2654, 4538, 4514, 109, 38, 4573,
	78, 77, 4548, 2045, 4446, 76, 75, 26, 1148, 2057,
	63, 4593, 4569, 4595, 25, 173, 218, 1266, 4587, 1266,
	217, 4584, 4564, 216, 4585, 215, 4254, 4541, 4542, 214,
	1350, 213, 4543, 1350, 212, 1350, 1350, 211, 206, 210,
	208, 4581, 207, 209, 205, 228, 4528, 4586, 227, 4592,
	4591, 221, 4381, 1148, 220, 1148, 226, 1148, 2493, 4603,
	225, 224, 223, 4624, 222, 219, 4626, 1270, 4627, 4628,
	4604, 4605, 231, 204, 203, 202, 200, 196, 199, 201,
	1148, 4526, 1270, 4635, 198, 197, 195, 230, 1339, 229,
	2825, 72, 171, 172, 2045, 71, 170, 169, 4527, 168,
	167, 166, 165, 164, 70, 24, 2051, 2, 1, 0,
	4613, 2755, 2755, 2755, 2755, 4607, 0, 0, 0, 4663,
	0, 0, 0, 4634, 4540, 0, 4633, 4662, 0, 0,
	4630, 0, 1268, 0, 0, 0, 1270, 1270, 1502, 0,
	2054, 1516, 1339, 1148, 1148, 4655, 4656, 4683, 0, 0,
	0, 0, 0, 1148, 0, 0, 0, 0, 1270, 0,
	0, 1270, 0, 0, 0, 1571, 0, 0, 0, 4254,
	0, 4671, 0, 4697, 4698, 1571, 0, 0, 0, 0,
	4673, 1265, 0, 0, 4254, 0, 0, 4672, 0, 1148,
	1148, 4678, 4705, 4706, 0, 4717, 0, 0, 4719, 1148,
	0, 0, 4695, 0, 2750, 4731, 0, 4732, 0, 4704,
	4709, 1339, 1339, 0, 4712, 0, 4711, 0, 4716, 0,
	0, 0, 0, 4569, 0, 4725, 0, 0, 0, 4728,
	0, 4724, 1284, 4730, 0, 4729, 0, 2907, 4254, 4254,
	4740, 0, 0, 4727, 4744, 0, 0, 1148, 1148, 0,
	0, 1148, 0, 2045, 0, 1350, 0, 0, 1350, 4748,
	4254, 0, 0, 4254, 1493, 0, 1305, 0, 4739, 0,
	0, 4776, 4779, 4751, 0, 1268, 0, 0, 270, 4794,
	270, 270, 4797, 1334, 270, 1344, 1264, 4798, 4786, 4768,
	1268, 4787, 4791, 4767, 4759, 4760, 1358, 4781, 0, 0,
	4785, 3259, 3260, 0, 788, 0, 0, 788, 0, 0,
	4749, 0, 0, 4818, 0, 0, 0, 1148, 1148, 1148,
	0, 0, 0, 0, 1265, 0, 4780, 0, 0, 0,
	4784, 270, 0, 270, 270, 1334, 4803, 270, 270, 1265,
	4817, 0, 1344, 0, 1268, 1268, 4809, 0, 0, 0,
	0, 0, 0, 1148, 0, 0, 270, 4848, 1540, 0,
	0, 0, 0, 4832, 4853, 0, 1268, 4831, 4816, 1268,
	4829, 4830, 4849, 0, 1560, 0, 0, 0, 0, 1110,
	0, 1575, 0, 4876, 0, 2178, 4874, 1493, 0, 0,
	4875, 0, 0, 1265, 1265, 0, 2359, 0, 4884, 4882,
	1600, 0, 0, 1344, 4851, 0, 1148, 270, 270, 0,
	1334, 0, 4866, 0, 1350, 1265, 1266, 0, 1265, 4895,
	0, 4864, 0, 4881, 4880, 0, 4546, 0, 0, 1264,
	4890, 788, 4889, 270, 270, 4912, 0, 0, 4901, 4902,
	0, 4892, 0, 0, 1264, 1663, 4908, 4903, 4863, 4906,
	4865, 4904, 0, 0, 0, 1670, 4915, 4926, 4888, 4916,
	907, 4928, 4776, 4927, 1270, 4779, 1270, 4937, 4918, 0,
	4935, 4797, 0, 0, 0, 0, 4925, 4934, 0, 0,
	4923, 0, 4933, 3357, 3358, 3359, 3360, 0, 4070, 0,
	0, 4943, 0, 0, 4942, 0, 0, 0, 1264, 1264,
	0, 4936, 1350, 4938, 0, 0, 4957, 0, 0, 0,
	4965, 4964, 0, 0, 4959, 4966, 0, 0, 4969, 0,
	1264, 0, 4971, 1264, 0, 0, 0, 0, 0, 4968,
	0, 1148, 1148, 1493, 0, 4962, 0, 0, 270, 1148,
	4973, 1148, 1148, 0, 4977, 0, 0, 0, 0, 0,
	4990, 4989, 4983, 0, 4992, 4120, 0, 4991, 4994, 1266,
	4995, 4993, 270, 4987, 4997, 4996, 4254, 0, 4254, 0,
	0, 0, 3122, 0, 1266, 0, 0, 5001, 5004, 5002,
	5008, 5003, 5005, 0, 5006, 0, 5011, 0, 5000, 5012,
	0, 0, 0, 0, 1148, 0, 5014, 0, 0, 5015,
	5008, 5017, 5019, 0, 0, 2755, 2755, 0, 0, 0,
	0, 0, 1516, 1824, 1825, 73, 0, 0, 3718, 0,
	4984, 4985, 0, 0, 0, 4986, 0, 0, 1266, 1266,
	0, 3716, 74, 0, 0, 0, 1855, 0, 0, 0,
	0, 3709, 0, 1827, 0, 0, 0, 0, 79, 0,
	1266, 0, 0, 1266, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 1880,
	0, 0, 1268, 5016, 1268, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 0,
	0, 0, 0, 0, 0, 2755, 2755, 2755, 2755, 2755,
	2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755,
	2755, 2755, 2755, 2755, 2755, 0, 2755, 0, 0, 0,
	0, 1265, 0, 1265, 3720, 0, 0, 0, 0, 901,
	0, 0, 3220, 0, 0, 0, 0, 0, 0, 0,
	3711, 0, 49, 0, 110, 0, 0, 0, 0, 0,
	94, 107, 0, 0, 0, 3710, 0, 0, 0, 0,
	3718, 0, 0, 701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3716, 0, 0, 0, 2598, 2599, 2600,
	2617, 2618, 2619, 3709, 270, 1832, 270, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 2620, 0, 0,
	0, 0, 0, 1540, 1334, 2021, 270, 0, 270, 2027,
	95, 3719, 0, 2750, 2750, 270, 0, 717, 1493, 0,
	0, 0, 270, 0, 4296, 0, 1264, 0, 1264, 0,
	1880, 0, 0, 0, 1854, 1856, 0, 0, 2095, 0,
	0, 0, 0, 0, 0, 0, 0, 3707, 0, 2610,
	270, 0, 0, 3388, 0, 0, 0, 270, 2606, 0,
	0, 0, 0, 0, 0, 0, 3720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 1825, 0, 0,
	0, 0, 3711, 4347, 0, 0, 3417, 0, 0, 0,
	788, 0, 1847, 0, 0, 0, 4364, 3710, 0, 1855,
	0, 3430, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 0, 0, 0, 4385,
	0, 0, 0, 0, 0, 0, 0, 3451, 0, 0,
	0, 0, 1880, 0, 0, 0, 2611, 2612, 2613, 2614,
	2315, 1826, 0, 0, 0, 0, 2605, 0, 0, 0,
	0, 1846, 0, 3719, 0, 0, 1266, 99, 1266, 0,
	1843, 0, 0, 1824, 1825, 0, 0, 1877, 3717, 3712,
	3713, 3714, 3715, 0, 0, 0, 0, 3764, 3765, 0,
	0, 1493, 0, 0, 3333, 3334, 1855, 3351, 3352, 3353,
	0, 0, 0, 1827, 0, 2750, 2750, 2750, 2750, 0,
	0, 0, 0, 0, 0, 0, 3773, 1493, 0, 0,
	0, 0, 0, 190, 102, 0, 3767, 106, 0, 1880,
	2615, 2616, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 1850,
	1851, 1852, 0, 238, 0, 0, 1848, 0, 1832, 0,
	0, 902, 0, 2608, 0, 0, 153, 0, 270, 3348,
	0, 0, 270, 0, 0, 0, 0, 3828, 3829, 3830,
	3831, 3832, 3833, 3834, 3835, 3836, 3837, 3838, 3839, 3840,
	3841, 3842, 3843, 3844, 3845, 3846, 3847, 0, 3851, 0,
	0, 240, 0, 0, 0, 0, 0, 1854, 1856, 0,
	0, 0, 0, 0, 1879, 0, 2442, 0, 0, 0,
	3717, 3712, 3713, 3714, 3715, 0, 157, 0, 0, 0,
	0, 0, 1841, 1842, 0, 0, 270, 0, 0, 0,
	270, 194, 0, 0, 0, 1832, 270, 0, 3430, 239,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 1493, 1847, 3339, 0, 270, 0,
	270, 233, 0, 0, 701, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 3036, 0, 0, 788, 0,
	0, 0, 907, 0, 1854, 1856, 0, 0, 0, 193,
	0, 0, 1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833,
	1834, 0, 0, 0, 0, 0, 0, 2609, 3028, 3026,
	0, 270, 0, 1334, 270, 3030, 3032, 3022, 0, 0,
	0, 3355, 0, 0, 0, 0, 0, 0, 788, 0,
	1877, 0, 0, 0, 0, 270, 0, 1493, 0, 0,
	0, 0, 1847, 2396, 0, 0, 0, 0, 270, 270,
	0, 270, 0, 270, 0, 270, 0, 270, 3042, 0,
	0, 0, 0, 3349, 0, 1879, 0, 0, 0, 0,
	0, 0, 3742, 0, 0, 1407, 0, 0, 0, 0,
	0, 0, 2433, 0, 0, 2434, 1853, 2435, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	270, 270, 270, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 1877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 768, 0,
	3333, 3334, 788, 3351, 3352, 3353, 0, 0, 1877, 0,
	0, 0, 0, 0, 0, 4669, 2595, 2596, 2597, 2621,
	2607, 2601, 3785, 2603, 2604, 2602, 2589, 2590, 2591, 2592,
	2593, 2594, 0, 0, 0, 1339, 0, 1879, 0, 3801,
	0, 0, 0, 4682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 3024,
	0, 0, 0, 4715, 0, 3348, 0, 0, 0, 0,
	3038, 0, 0, 0, 1339, 0, 0, 3350, 0, 0,
	0, 0, 0, 0, 0, 2588, 0, 0, 0, 0,
	0, 0, 3037, 3029, 3027, 3031, 3033, 3023, 3025, 3039,
	0, 0, 0, 0, 0, 0, 1339, 1339, 0, 3035,
	0, 0, 1844, 1840, 1879, 1837, 1835, 1836, 1828, 1829,
	1830, 1831, 1833, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3043, 0, 0, 0, 0, 0, 0, 2750,
	2750, 0, 0, 0, 0, 0, 701, 0, 0, 0,
	0, 0, 3339, 0, 3894, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	701, 0, 0, 0, 0, 0, 0, 270, 0, 701,
	0, 0, 0, 0, 0, 2755, 0, 4804, 0, 0,
	1502, 270, 0, 4806, 1836, 1828, 1829, 1830, 1831, 1833,
	1834, 0, 0, 0, 0, 0, 3345, 3346, 3347, 0,
	0, 270, 1344, 3344, 3342, 3343, 3335, 3336, 3337, 3338,
	3340, 3341, 0, 0, 0, 0, 0, 1516, 0, 2750,
	2750, 2750, 2750, 2750, 2750, 2750, 2750, 2750, 2750, 2750,
	2750, 2750, 2750, 2750, 2750, 2750, 2750, 2750, 2750, 0,
	2750, 0, 2755, 0, 0, 0, 0, 0, 0, 3349,
	270, 1344, 0, 0, 717, 0, 717, 73, 0, 0,
	2871, 0, 0, 0, 0, 0, 270, 0, 0, 270,
	0, 0, 0, 270, 74, 270, 0, 0, 0, 0,
	1334, 0, 270, 270, 0, 1344, 1344, 2887, 0, 0,
	79, 0, 270, 0, 0, 0, 0, 0, 163, 0,
	0, 0, 3044, 0, 0, 0, 73, 0, 46, 45,
	0, 3034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 74, 1877, 0, 158, 0, 0, 0,
	88, 0, 0, 0, 0, 0, 0, 0, 2924, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	67, 0, 0, 0, 0, 0, 0, 48, 0, 160,
	0, 0, 0, 270, 1516, 0, 0, 0, 0, 0,
	0, 901, 0, 0, 0, 1339, 270, 47, 0, 88,
	0, 0, 0, 0, 0, 0, 110, 788, 0, 0,
	0, 0, 94, 107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3350, 0, 0, 50, 68, 0, 0,
	1493, 0, 0, 270, 0, 51, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 161, 0, 2755, 1516, 0,
	1516, 1824, 1825, 49, 0, 110, 1103, 0, 0, 0,
	0, 94, 107, 1493, 0, 0, 270, 3062, 0, 0,
	0, 0, 95, 0, 1855, 0, 0, 0, 1493, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1540, 2755, 0, 270, 0, 270, 0,
	0, 0, 0, 52, 1493, 270, 0, 1880, 0, 0,
	0, 0, 0, 0, 0, 3105, 1826, 0, 0, 2755,
	0, 95, 0, 0, 0, 2924, 1846, 701, 0, 0,
	0, 0, 0, 0, 0, 1843, 3134, 907, 2924, 0,
	0, 0, 0, 0, 1110, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1110, 270,
	0, 0, 3345, 3346, 3347, 0, 0, 4426, 0, 3344,
	3342, 3343, 3335, 3336, 3337, 3338, 3340, 3341, 270, 1334,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 270, 0, 0, 1334, 0, 1334, 0, 1334, 2846,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 1850, 1851, 1852, 0, 4196, 99,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4473, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 270, 270, 270, 1334, 0, 4214,
	1334, 0, 270, 0, 1493, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 1824, 1825, 0, 0, 99, 0,
	0, 0, 1854, 1856, 0, 190, 102, 0, 0, 106,
	0, 0, 0, 0, 0, 0, 53, 1855, 270, 0,
	0, 0, 0, 0, 1827, 0, 270, 1841, 1842, 0,
	0, 56, 0, 0, 0, 238, 59, 0, 0, 0,
	0, 0, 0, 902, 0, 1493, 69, 0, 153, 0,
	1880, 0, 0, 58, 190, 102, 0, 0, 106, 1826,
	1847, 0, 54, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 1824, 1825, 55, 1857, 1858, 1859, 1868, 1869,
	1870, 0, 0, 240, 238, 0, 0, 0, 0, 0,
	0, 0, 62, 0, 1861, 1855, 0, 153, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 157, 0,
	0, 1874, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 1880, 0,
	0, 239, 240, 0, 0, 1877, 0, 1826, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 1846, 0, 4612,
	0, 0, 1540, 233, 0, 0, 1843, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 1493,
	239, 193, 1493, 1824, 1825, 0, 0, 0, 0, 0,
	0, 1853, 1407, 232, 0, 0, 4639, 0, 0, 0,
	0, 0, 233, 1516, 1516, 0, 1855, 0, 0, 0,
	0, 0, 0, 1827, 1848, 1854, 1856, 0, 0, 0,
	0, 4661, 4418, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 3, 1849, 1850, 1851, 1852, 0, 1880,
	0, 0, 0, 0, 1832, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 0, 4418, 0, 0, 0, 0,
	0, 0, 1879, 1847, 0, 1516, 1493, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 1875, 0, 0, 0,
	0, 0, 0, 1854, 1856, 0, 270, 0, 0, 2512,
	2315, 0, 0, 0, 0, 0, 0, 0, 0, 1871,
	0, 1872, 270, 0, 0, 0, 0, 701, 1841, 1842,
	0, 0, 701, 0, 0, 701, 0, 0, 701, 701,
	0, 0, 0, 0, 701, 0, 1863, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 1877, 0,
	0, 1847, 73, 0, 270, 1832, 0, 1844, 1840, 0,
	1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 74,
	2512, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 1873, 0, 270,
	270, 0, 0, 0, 1854, 1856, 0, 0, 0, 2750,
	0, 1493, 0, 0, 0, 1862, 0, 0, 0, 0,
	0, 0, 0, 0, 1339, 88, 1877, 1848, 2924, 2924,
	270, 0, 2021, 0, 0, 0, 0, 0, 2924, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 2924,
	2027, 0, 2924, 2027, 0, 0, 2027, 0, 0, 0,
	0, 0, 1847, 0, 0, 0, 901, 0, 0, 0,
	270, 270, 2021, 0, 270, 0, 2750, 0, 0, 49,
	0, 110, 1853, 0, 0, 1879, 0, 94, 107, 0,
	0, 0, 0, 0, 2021, 0, 270, 0, 3557, 3557,
	0, 0, 0, 1334, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 895, 0, 1516, 2924, 0, 2924, 0, 3585,
	2924, 2021, 1866, 0, 2924, 2021, 0, 1877, 788, 0,
	0, 0, 0, 0, 0, 0, 0, 95, 0, 73,
	0, 898, 897, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 1334, 0, 74, 73, 0, 0,
	0, 270, 0, 0, 1835, 1836, 1828, 1829, 1830, 1831,
	1833, 1834, 79, 0, 74, 0, 0, 0, 0, 270,
	0, 3623, 0, 0, 3625, 2924, 0, 0, 270, 0,
	79, 0, 270, 0, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	270, 0, 88, 0, 0, 3105, 0, 0, 1334, 0,
	270, 0, 0, 2924, 1864, 701, 0, 0, 0, 0,
	88, 0, 2924, 0, 1838, 1839, 1845, 1867, 1844, 1840,
	0, 1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834,
	0, 2750, 0, 901, 0, 3308, 0, 0, 0, 3309,
	0, 0, 0, 0, 1879, 0, 49, 0, 110, 0,
	0, 901, 0, 0, 94, 107, 0, 0, 0, 0,
	0, 3733, 0, 0, 99, 0, 110, 0, 0, 0,
	0, 0, 94, 107, 0, 0, 0, 0, 2750, 0,
	0, 3739, 0, 1493, 1540, 0, 0, 1334, 270, 0,
	270, 0, 0, 0, 0, 0, 1334, 0, 0, 0,
	0, 0, 0, 2750, 0, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 95, 0, 0, 0, 0, 0,
	190, 102, 0, 0, 106, 0, 0, 270, 0, 0,
	0, 0, 95, 0, 0, 1828, 1829, 1830, 1831, 1833,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 902, 0,
	0, 1824, 1825, 153, 1857, 1858, 1859, 1868, 1869, 1870,
	0, 0, 0, 0, 0, 0, 1979, 0, 0, 0,
	0, 0, 0, 1861, 1855, 3806, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 240, 0,
	1874, 0, 3333, 3334, 0, 3351, 3352, 3353, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1880, 0, 0,
	0, 0, 0, 157, 3772, 0, 1826, 0, 0, 0,
	0, 0, 1493, 1493, 0, 1493, 1846, 0, 194, 0,
	0, 0, 0, 0, 0, 1843, 239, 0, 0, 0,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 232,
	0, 99, 0, 0, 0, 0, 1493, 0, 233, 0,
	0, 0, 0, 1339, 0, 0, 0, 3348, 0, 99,
	0, 0, 270, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 701, 701, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 102, 0,
	0, 106, 0, 1849, 1850, 1851, 1852, 0, 0, 0,
	0, 1493, 0, 1832, 0, 190, 102, 0, 0, 106,
	0, 0, 0, 0, 0, 0, 0, 238, 2315, 270,
	0, 1493, 0, 0, 0, 902, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 1095, 1865, 902, 3339, 1875, 0, 0, 153, 0,
	0, 0, 1854, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 1871, 0,
	1872, 0, 0, 0, 0, 0, 0, 1841, 1842, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	157, 788, 0, 0, 0, 1863, 0, 0, 0, 1493,
	0, 0, 0, 0, 0, 194, 0, 0, 157, 3355,
	1847, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 3557, 0, 232, 0, 0, 0,
	0, 239, 0, 0, 0, 233, 0, 0, 0, 270,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 1493,
	0, 3349, 0, 233, 0, 0, 1873, 0, 0, 0,
	0, 0, 2021, 896, 270, 0, 0, 0, 717, 717,
	1344, 0, 0, 0, 1862, 0, 0, 0, 0, 1493,
	1860, 193, 0, 270, 0, 1877, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 3105, 0, 0, 3105, 2027,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 270,
	0, 0, 1493, 0, 270, 0, 1877, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 2924, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 3134, 3134, 0, 1493, 0, 0, 907,
	2924, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1339, 0, 270, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1110, 0, 3350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4159, 0, 0, 0, 0, 1860,
	0, 0, 1339, 0, 0, 1860, 0, 0, 0, 0,
	0, 1860, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 1838, 1839, 1845, 1867, 1844, 1840, 0,
	1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0,
	0, 0, 0, 0, 2631, 0, 0, 270, 2632, 0,
	0, 0, 0, 1540, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 3345, 3346, 3347, 0, 0, 270,
	0, 3344, 3342, 3343, 3335, 3336, 3337, 3338, 3340, 3341,
	0, 0, 0, 0, 0, 0, 0, 1344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 1860, 270, 1344, 0, 0, 1860, 0, 0, 0,
	0, 2924, 2924, 0, 3557, 2924, 0, 0, 0, 1860,
	0, 0, 0, 4256, 1860, 4256, 1540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2924, 0, 2027,
	0, 0, 0, 1540, 1540, 270, 2021, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2021,
	0, 270, 2021, 0, 270, 0, 3557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2924, 0, 2924, 270, 1860,
	0, 0, 0, 0, 0, 1860, 0, 801, 0, 0,
	0, 0, 0, 0, 1110, 1110, 0, 0, 0, 0,
	1824, 1825, 0, 1857, 1858, 1859, 1868, 1869, 1870, 0,
	0, 0, 812, 2924, 2924, 1353, 0, 0, 0, 3105,
	3105, 0, 1861, 1855, 0, 0, 4351, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 270, 0, 1874,
	0, 0, 1095, 1095, 1095, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 0, 1506, 1826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1542, 0, 1548, 1110,
	1554, 0, 0, 0, 0, 806, 0, 0, 0, 0,
	0, 0, 818, 0, 0, 0, 0, 0, 1860, 1860,
	1860, 1860, 1860, 1860, 1860, 1860, 811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 1850, 1851, 1852, 0, 0, 0, 1654,
	0, 1659, 1832, 0, 0, 0, 0, 810, 0, 0,
	0, 0, 1516, 0, 1672, 0, 1677, 0, 0, 0,
	0, 0, 0, 0, 763, 0, 0, 2754, 2924, 2027,
	0, 2027, 0, 0, 4465, 0, 0, 0, 0, 0,
	1860, 1865, 0, 270, 1875, 0, 1860, 0, 0, 808,
	0, 1854, 1856, 4489, 0, 4489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 0, 1872,
	0, 0, 0, 0, 0, 0, 1841, 1842, 0, 788,
	0, 0, 0, 0, 1742, 0, 0, 1748, 0, 0,
	3557, 0, 1334, 0, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 817, 0, 1847,
	2021, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4465,
	0, 0, 4256, 0, 0, 1540, 0, 0, 0, 0,
	0, 0, 2924, 0, 0, 1873, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4578, 0, 0, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 1540, 803, 1877, 1881, 1882, 1883, 1884, 1885,
	1886, 1887, 1888, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 270, 0,
	0, 0, 0, 0, 807, 0, 0, 0, 1901, 0,
	0, 1824, 1825, 0, 1914, 0, 0, 1868, 1869, 1870,
	0, 3806, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 1827, 762, 0, 0, 0, 3557, 4632, 0, 0,
	1874, 0, 0, 1848, 0, 4465, 0, 813, 0, 0,
	0, 0, 0, 805, 0, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 0, 4256, 1826, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 1846, 0, 0, 0,
	4256, 0, 0, 0, 0, 1843, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	802, 1879, 0, 0, 270, 0, 0, 0, 0, 1973,
	1973, 1973, 0, 0, 0, 73, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 809, 0, 0,
	0, 0, 74, 0, 4256, 4256, 0, 0, 0, 0,
	4351, 764, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 804, 0, 0, 0, 4256, 0, 270, 4256,
	0, 0, 0, 1849, 1850, 1851, 1852, 0, 0, 2027,
	0, 0, 1864, 1832, 0, 815, 816, 0, 1540, 0,
	1540, 0, 1838, 1839, 1845, 1867, 1844, 1840, 88, 1837,
	1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4165, 1344, 0,
	0, 0, 1865, 0, 0, 1875, 0, 0, 0, 0,
	4757, 0, 1854, 1856, 0, 0, 0, 0, 0, 901,
	0, 0, 0, 0, 0, 0, 4489, 0, 0, 270,
	0, 0, 49, 0, 110, 0, 0, 1841, 1842, 0,
	94, 107, 0, 0, 1095, 0, 0, 0, 0, 0,
	0, 0, 0, 2924, 0, 1863, 0, 1860, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	95, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 1540, 0, 0, 0, 0,
	0, 0, 1860, 0, 0, 1877, 0, 0, 0, 0,
	0, 1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860,
	1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860,
	1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860,
	1860, 1860, 1860, 1860, 1860, 1860, 1860, 0, 0, 0,
	0, 0, 1860, 0, 1860, 1860, 1860, 1860, 0, 0,
	0, 1853, 0, 4465, 0, 0, 2754, 2754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2924, 0, 0, 0, 0, 99, 0, 0,
	0, 1866, 4256, 0, 4256, 0, 0, 1540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1860, 190, 102, 1860, 0, 106, 1860, 0,
	0, 1860, 0, 0, 0, 0, 0, 1860, 1860, 1860,
	1860, 1860, 1860, 1860, 0, 0, 0, 0, 0, 0,
	0, 0, 3134, 238, 0, 0, 0, 0, 0, 0,
	0, 902, 0, 2924, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 3134, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 1844, 1840, 0,
	1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0,
	0, 240, 0, 1860, 0, 0, 3354, 0, 2754, 2754,
	2754, 2754, 0, 0, 0, 1860, 0, 1860, 2420, 0,
	0, 0, 1860, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 2447, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2487,
	0, 2491, 0, 0, 0, 0, 0, 0, 2505, 1646,
	0, 0, 0, 0, 1144, 2514, 2515, 2516, 2517, 2518,
	2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528,
	2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538,
	2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548,
	2549, 0, 2555, 0, 2557, 2558, 2559, 2560, 0, 0,
	269, 269, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2584, 0, 0, 0, 0, 0, 0, 0, 0, 831,
	0, 0, 1901, 0, 0, 0, 2635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2665, 2668, 2671, 2674, 0, 831, 2680, 2681,
	2682, 2683, 2684, 2685, 2686, 0, 0, 3333, 3334, 0,
	3351, 3352, 3353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2746, 0, 2758, 2760,
	2765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 1825, 0, 1857, 1858, 1859,
	1868, 1869, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1860, 1860, 0, 1860, 1861, 1855, 0, 0,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 3339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 1825, 0, 1857, 1858, 1859,
	1868, 1869, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 3356, 0, 0, 0, 0, 1861, 1855, 0, 0,
	0, 0, 0, 1860, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 3355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 1850, 1851, 1852,
	1880, 0, 0, 0, 0, 0, 1832, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 3349, 0, 1843, 1860,
	1860, 0, 2754, 2754, 0, 1271, 1860, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 3354, 3354, 1875, 0,
	1860, 1860, 0, 0, 0, 1854, 1856, 0, 0, 0,
	1860, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 0, 1872, 1860, 0, 0, 0, 0, 0,
	1841, 1842, 0, 0, 0, 0, 1860, 0, 0, 3065,
	3066, 0, 3068, 0, 0, 0, 0, 0, 1863, 0,
	0, 1877, 0, 0, 0, 0, 1849, 1850, 1851, 1852,
	0, 0, 0, 1847, 0, 0, 1832, 0, 0, 0,
	0, 0, 2754, 2754, 2754, 2754, 2754, 2754, 2754, 2754,
	2754, 2754, 2754, 2754, 2754, 2754, 2754, 2754, 2754, 2754,
	2754, 2754, 0, 2754, 3354, 3354, 3354, 3354, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 1875, 1873,
	0, 0, 0, 0, 0, 1854, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 0, 1860,
	3350, 1871, 0, 1872, 0, 0, 0, 0, 1877, 0,
	1841, 1842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1847, 0, 0, 0, 0, 0, 3186,
	1824, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 1848, 0, 1873,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1880, 1862, 0, 0,
	0, 0, 0, 0, 1866, 1826, 0, 0, 1877, 0,
	0, 1881, 1882, 0, 1860, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 0, 0, 0, 0, 3345,
	3346, 3347, 0, 0, 0, 1879, 3344, 3342, 3343, 3335,
	3336, 3337, 3338, 3340, 3341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 1860, 1860, 3242, 3243, 0,
	0, 0, 0, 3249, 0, 0, 0, 0, 0, 0,
	3762, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 3263, 3264, 269, 0, 269, 269, 2635, 0,
	269, 0, 1849, 1850, 1851, 1852, 1864, 0, 0, 0,
	0, 0, 1832, 0, 1866, 0, 1838, 1839, 1845, 1867,
	1844, 1840, 0, 1837, 1835, 1836, 1828, 1829, 1830, 1831,
	1833, 1834, 0, 0, 0, 1824, 1825, 0, 0, 0,
	0, 3775, 0, 3273, 0, 1879, 0, 269, 0, 269,
	269, 0, 0, 269, 269, 0, 0, 0, 1855, 3287,
	0, 1854, 1856, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 831, 0, 0, 0, 3299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 1842, 0, 0,
	0, 1880, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 1864, 0, 0, 1847,
	0, 0, 0, 269, 269, 0, 1838, 1839, 1845, 1867,
	1844, 1840, 0, 1837, 1835, 1836, 1828, 1829, 1830, 1831,
	1833, 1834, 0, 0, 0, 0, 0, 0, 0, 269,
	269, 3311, 0, 0, 0, 0, 1860, 1860, 0, 0,
	1860, 3354, 3354, 1860, 0, 0, 0, 1860, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 2765, 2765,
	2765, 0, 0, 0, 0, 0, 0, 1860, 0, 0,
	0, 0, 0, 1973, 1877, 0, 0, 1849, 1850, 1851,
	1852, 3392, 0, 0, 0, 0, 0, 1832, 1271, 0,
	1860, 1860, 1860, 1860, 1860, 0, 0, 0, 0, 0,
	1860, 0, 1860, 0, 0, 3354, 3354, 3354, 3354, 3354,
	3354, 3354, 3354, 3354, 3354, 3354, 3354, 3354, 3354, 3354,
	3354, 3354, 3354, 3354, 3354, 0, 0, 0, 3354, 0,
	1853, 1860, 1860, 0, 269, 1271, 1854, 1856, 0, 0,
	0, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	0, 0, 1860, 1848, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2725,
	2726, 2727, 2728, 2721, 2722, 2723, 2724, 0, 0, 0,
	0, 1271, 0, 0, 0, 0, 0, 0, 1271, 1095,
	0, 0, 0, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 1095, 1271, 0, 0, 0, 1860, 0,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	1860, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1860,
	2701, 2702, 2703, 2704, 0, 0, 0, 0, 0, 0,
	0, 0, 1271, 0, 0, 0, 0, 0, 0, 1877,
	1860, 1860, 0, 2713, 2714, 2715, 2716, 2709, 2710, 2711,
	2712, 2717, 2718, 2719, 2720, 0, 0, 0, 0, 0,
	0, 3568, 3569, 0, 0, 0, 1844, 1840, 0, 1837,
	1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 2697, 2698, 2699, 2700, 2705, 2706, 2707, 2708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 0, 0, 0, 0, 0, 0, 0, 0,
	1995, 0, 1267, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 1995, 269, 0, 1879, 0, 0, 0,
	0, 831, 0, 0, 1860, 1860, 0, 0, 831, 1860,
	1860, 0, 0, 1860, 1860, 0, 0, 0, 1860, 0,
	0, 0, 1860, 0, 0, 0, 0, 1860, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 1824,
	1825, 0, 2754, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 1835, 1836, 1828, 1829, 1830,
	1831, 1833, 1834, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 2754,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 2505, 0, 1843, 0, 0, 0, 3759, 3760, 0,
	1271, 3763, 1271, 0, 0, 3766, 0, 0, 0, 0,
	0, 0, 0, 0, 3770, 0, 0, 1271, 0, 0,
	0, 0, 0, 3777, 0, 0, 0, 0, 3392, 0,
	0, 0, 0, 0, 1860, 0, 0, 2058, 0, 0,
	0, 0, 0, 3790, 0, 0, 0, 0, 0, 3761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3813, 3814, 0, 3815, 3816, 3817, 0,
	0, 1849, 1850, 1851, 1852, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 3823, 0, 0, 0, 3825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 831, 0,
	0, 3854, 3855, 0, 0, 0, 0, 0, 0, 0,
	1854, 1856, 0, 0, 0, 0, 0, 0, 0, 3866,
	1271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1860, 1860, 1860, 0, 3875, 1841, 1842, 0, 0, 0,
	0, 1860, 1860, 3354, 2754, 0, 0, 0, 0, 0,
	1860, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 269, 0, 1847, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3354, 2754, 0, 0, 269, 0, 269, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 1860, 0, 0,
	0, 0, 0, 0, 0, 1860, 2754, 3931, 0, 0,
	0, 0, 0, 1860, 0, 0, 0, 0, 1260, 0,
	0, 0, 1860, 0, 1860, 0, 3943, 0, 0, 0,
	0, 0, 0, 1877, 0, 0, 0, 269, 0, 0,
	269, 0, 0, 0, 0, 0, 1271, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 1271, 0, 3972, 0,
	0, 269, 0, 0, 265, 265, 697, 0, 0, 0,
	0, 0, 0, 0, 831, 269, 0, 269, 0, 269,
	0, 269, 0, 269, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 3993, 3994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 3354,
	0, 0, 0, 0, 0, 269, 269, 269, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 3354, 0, 0, 1860,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 0, 1271, 0, 1271, 0, 0, 3354, 0,
	1879, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1271, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1271, 0, 0, 0,
	0, 0, 0, 0, 1973, 0, 0, 0, 1271, 0,
	1271, 1271, 1271, 4094, 0, 0, 0, 0, 0, 0,
	1860, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 1840, 0, 1837, 1835,
	1836, 1828, 1829, 1830, 1831, 1833, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4137, 4138,
	0, 0, 0, 0, 4142, 4143, 0, 0, 0, 4146,
	4147, 0, 0, 0, 0, 0, 0, 4151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4160, 1860, 0, 1267, 0, 2058,
	2058, 1271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1267, 0, 0, 0, 0, 0, 1860,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 1824, 1825, 0, 1857, 1858, 1859,
	1868, 1869, 1870, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 1861, 1855, 0, 0,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1880, 0, 0, 0, 1271, 0, 269, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 269, 0, 0, 269, 0, 0, 1843, 269,
	0, 269, 0, 0, 0, 0, 0, 0, 269, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 1860, 1824, 1825, 0, 1860,
	0, 0, 0, 0, 0, 0, 0, 1271, 0, 0,
	0, 0, 0, 0, 1271, 0, 0, 0, 0, 1855,
	0, 0, 0, 1271, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 4297, 0, 0, 0, 0, 0, 0,
	1271, 0, 0, 0, 0, 269, 1849, 1850, 1851, 1852,
	0, 0, 1880, 0, 0, 0, 1832, 0, 0, 269,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 269, 0, 0, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 1854, 1856, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 0, 1872, 0, 0, 0, 0, 0, 0,
	1841, 1842, 0, 0, 0, 0, 3248, 0, 0, 0,
	0, 0, 831, 0, 0, 0, 0, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 1850,
	1851, 1852, 0, 1847, 0, 0, 0, 0, 1832, 0,
	0, 0, 269, 0, 831, 0, 4413, 4414, 4415, 0,
	0, 269, 0, 0, 0, 0, 0, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2505,
	0, 0, 4424, 4425, 0, 0, 0, 0, 0, 1873,
	0, 0, 0, 0, 0, 0, 0, 1854, 1856, 0,
	4433, 4436, 2058, 0, 0, 0, 0, 1862, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 1877, 0,
	0, 0, 1841, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	1271, 0, 0, 0, 0, 1847, 0, 0, 1320, 0,
	1320, 1320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4490, 0, 1853, 0, 0, 0, 0, 0,
	0, 4498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4506, 0, 1848, 1095, 269,
	269, 269, 269, 0, 0, 0, 0, 0, 269, 0,
	0, 1404, 4515, 269, 0, 4517, 0, 1514, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	1877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 1271, 0, 0,
	0, 0, 269, 0, 0, 1879, 0, 0, 0, 0,
	1271, 0, 1271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 1652, 1653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 1839, 1845, 1867,
	1844, 1840, 0, 1837, 1835, 1836, 1828, 1829, 1830, 1831,
	1833, 1834, 1824, 1825, 0, 1857, 1858, 1859, 1868, 1869,
	1870, 3310, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 1861, 1855, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 4638,
	0, 1874, 0, 4642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 1769, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 1840, 0, 1837, 1835, 1836, 1828, 1829,
	1830, 1831, 1833, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1095,
	1095, 0, 0, 0, 0, 0, 0, 0, 0, 4713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 1850, 1851, 1852, 0, 0,
	0, 0, 1267, 0, 1832, 0, 2505, 0, 0, 0,
	0, 0, 0, 0, 0, 4436, 0, 0, 1267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 1875, 0, 1995, 0,
	0, 0, 0, 1854, 1856, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 1095, 0, 0, 0, 0, 1871,
	0, 1872, 0, 0, 0, 0, 0, 0, 1841, 1842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	0, 269, 0, 0, 0, 269, 269, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1157, 0, 0, 0, 0,
	0, 0, 0, 4828, 4828, 4828, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2011, 0, 0, 0, 0, 0, 0, 1873, 0, 0,
	0, 0, 1271, 1271, 0, 0, 2022, 0, 1514, 4852,
	0, 271, 271, 271, 0, 1862, 269, 269, 1271, 0,
	269, 0, 0, 0, 0, 0, 1877, 1995, 0, 0,
	0, 0, 0, 0, 0, 0, 1271, 0, 0, 0,
	271, 0, 269, 0, 0, 0, 0, 0, 1271, 0,
	1320, 1271, 0, 0, 0, 0, 0, 1514, 0, 0,
	0, 0, 4828, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 2058, 0, 0, 0, 1271, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 831, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 2058, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4828, 4978, 0,
	0, 0, 0, 0, 0, 4982, 0, 0, 0, 0,
	0, 748, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 731, 0, 0, 0, 0, 732, 1271, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 1839, 1845, 1867, 1844, 1840,
	0, 1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834,
	0, 0, 0, 0, 269, 733, 269, 0, 1271, 3307,
	0, 0, 0, 0, 0, 0, 734, 0, 0, 0,
	0, 0, 1271, 0, 1271, 0, 0, 0, 1271, 0,
	0, 0, 0, 0, 0, 0, 1271, 735, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 754,
	0, 0, 1824, 1825, 0, 0, 2301, 0, 0, 0,
	2308, 0, 0, 0, 0, 0, 1271, 0, 0, 0,
	736, 0, 2321, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 2333, 0,
	2333, 1271, 0, 0, 0, 737, 2340, 0, 1133, 112,
	0, 0, 0, 1271, 0, 1271, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 738, 0,
	0, 739, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 763, 0,
	0, 2308, 0, 0, 2368, 0, 0, 0, 0, 0,
	0, 0, 1271, 0, 0, 1271, 0, 0, 0, 0,
	0, 0, 0, 753, 0, 2388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2404,
	0, 2406, 0, 2408, 0, 2410, 0, 2411, 1267, 1267,
	0, 0, 3241, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2058, 1849, 1850, 1851, 1852, 0, 0,
	0, 750, 0, 0, 1832, 0, 0, 0, 0, 2438,
	2439, 2440, 1271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	0, 0, 0, 0, 0, 831, 0, 0, 0, 2058,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 1856, 0, 0, 0, 0, 0,
	0, 1070, 0, 0, 0, 0, 0, 0, 2058, 2058,
	0, 0, 1090, 0, 741, 0, 0, 0, 1841, 1842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2058, 0, 761, 0, 742, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 0, 1254,
	0, 0, 0, 0, 0, 0, 0, 0, 1271, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 762, 0, 0, 0,
	0, 0, 0, 0, 743, 269, 0, 0, 0, 758,
	759, 756, 0, 0, 1271, 0, 0, 751, 0, 0,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 1877, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 745, 0, 752, 0, 0, 0, 0, 0,
	269, 0, 746, 0, 0, 271, 0, 271, 271, 0,
	269, 271, 0, 0, 0, 269, 747, 0, 0, 0,
	269, 755, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 2822, 0, 0, 0, 764, 0, 0, 0, 0,
	1267, 0, 0, 0, 0, 1848, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 1413,
	271, 271, 0, 0, 271, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 1413, 0, 0, 0,
	0, 1271, 0, 0, 1271, 0, 2873, 0, 0, 1320,
	0, 0, 0, 1320, 0, 1320, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 271, 0, 0, 0, 0,
	0, 0, 2321, 0, 2058, 0, 0, 0, 0, 0,
	0, 0, 1413, 0, 0, 0, 0, 0, 0, 1413,
	271, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1271, 0, 1844, 1840,
	0, 1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834,
	1271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 1271, 1271, 0, 0, 0, 0, 1271, 1271,
	1271, 0, 0, 1267, 0, 0, 0, 0, 0, 0,
	0, 1267, 0, 1413, 0, 0, 0, 0, 0, 0,
	1271, 0, 0, 0, 0, 1995, 1271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1514, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 1271, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 2058, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1995,
	0, 1995, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 2308, 0, 0, 0,
	0, 0, 0, 0, 0, 2321, 0, 269, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1271, 0, 0, 0, 0, 0, 3156,
	0, 1271, 0, 0, 0, 1271, 1271, 0, 1271, 0,
	0, 0, 0, 0, 0, 1271, 0, 0, 3167, 0,
	3170, 0, 0, 0, 0, 0, 1271, 1271, 112, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 1271,
	0, 0, 0, 269, 0, 0, 823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	0, 1271, 0, 0, 823, 0, 0, 0, 0, 0,
	0, 0, 0, 3202, 1514, 3204, 1514, 0, 0, 0,
	0, 0, 3210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 0, 0, 0, 0, 112,
	0, 112, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 0, 0, 271, 1320, 0,
	0, 0, 0, 0, 0, 0, 3239, 0, 1413, 0,
	0, 0, 0, 271, 271, 271, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 1271, 1271, 0, 1090, 112, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 112, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 112, 0, 112,
	0, 0, 1271, 0, 0, 0, 0, 1271, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1271, 1271, 1271, 1271,
	1271, 1271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 748, 1271, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 0, 0, 112, 0, 0, 0, 0, 0,
	0, 731, 0, 0, 0, 0, 732, 0, 269, 0,
	0, 0, 1271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2058, 0, 0, 0, 0, 1995, 0,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1271, 734, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	0, 1070, 0, 0, 0, 0, 0, 0, 0, 754,
	0, 0, 0, 269, 269, 0, 0, 0, 0, 0,
	0, 0, 1894, 0, 0, 0, 0, 0, 0, 0,
	736, 0, 0, 0, 2058, 271, 0, 1413, 1413, 271,
	1900, 0, 0, 0, 1906, 0, 0, 1413, 0, 0,
	0, 0, 0, 0, 0, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1271, 0, 0, 0, 0, 0, 0, 0, 738, 0,
	0, 739, 0, 0, 0, 0, 0, 1271, 1271, 1271,
	0, 1995, 0, 0, 0, 0, 0, 0, 763, 1149,
	0, 0, 0, 271, 3440, 0, 1995, 271, 1271, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 753, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 271, 0, 271, 0, 1271,
	0, 0, 1271, 271, 0, 1320, 0, 0, 0, 1514,
	1514, 0, 1413, 0, 1413, 0, 1413, 0, 0, 0,
	1995, 1995, 0, 0, 1993, 0, 1996, 0, 112, 0,
	0, 0, 0, 0, 1413, 1413, 0, 0, 0, 0,
	3486, 750, 1995, 0, 269, 1995, 0, 1413, 271, 0,
	0, 271, 0, 2058, 0, 0, 0, 0, 0, 1413,
	0, 1413, 1413, 1413, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	3534, 3536, 0, 0, 2321, 271, 271, 0, 271, 0,
	271, 0, 271, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 760, 0, 741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 1271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 271, 271, 271,
	0, 0, 0, 761, 0, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1271, 1271, 0, 0, 0, 269, 762, 0, 0, 0,
	0, 0, 1413, 0, 743, 0, 0, 0, 0, 758,
	759, 756, 1271, 0, 0, 1271, 0, 751, 3647, 1271,
	744, 0, 3651, 0, 0, 0, 0, 0, 0, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 0, 752, 0, 0, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1410, 747, 0, 0, 0,
	0, 755, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 764, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1572, 0, 0, 0, 0, 0, 3744, 0,
	1514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1995, 0,
	1995, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3757, 1572, 0,
	0, 0, 0, 0, 0, 1572, 0, 0, 271, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1572, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 1824, 1825, 0, 1857, 1858, 1859, 1868, 1869,
	1870, 0, 0, 0, 0, 1090, 0, 1090, 0, 0,
	0, 0, 0, 0, 1861, 1855, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 0, 0, 0, 0, 271, 0, 1572,
	0, 0, 0, 0, 0, 0, 0, 0, 1880, 0,
	0, 0, 0, 271, 0, 0, 271, 1826, 0, 0,
	271, 0, 271, 0, 0, 0, 0, 1846, 0, 271,
	271, 0, 0, 0, 0, 0, 1843, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1271, 112,
	1271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 1849, 1850, 1851, 1852, 0, 0,
	0, 0, 0, 271, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1070, 0, 0, 1070, 1070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 1413, 0, 1865, 0, 0, 1875, 0, 0, 0,
	0, 0, 0, 1854, 1856, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1871,
	0, 1872, 0, 271, 2573, 0, 0, 0, 1841, 1842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1090, 0, 1863, 0, 0, 0,
	0, 0, 0, 271, 1900, 271, 0, 0, 1900, 0,
	0, 1847, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 0, 1413, 0, 0, 0, 1873, 0, 0,
	0, 0, 0, 0, 2321, 0, 271, 0, 0, 0,
	1413, 0, 0, 0, 1410, 1862, 0, 0, 0, 0,
	0, 1254, 0, 2321, 0, 271, 1877, 271, 823, 0,
	0, 0, 0, 1411, 4048, 823, 0, 1996, 271, 0,
	0, 0, 0, 0, 4058, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2321,
	0, 0, 0, 0, 4076, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 0, 0,
	1573, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	271, 271, 271, 271, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 271, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1573, 0, 4122, 0,
	0, 0, 1866, 1573, 0, 271, 0, 1410, 0, 0,
	0, 0, 0, 271, 0, 0, 851, 0, 0, 1573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 853, 0, 0, 0,
	0, 854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1573, 0, 0,
	855, 0, 872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 856, 0, 0,
	0, 0, 857, 0, 1838, 1839, 1845, 1867, 1844, 1840,
	0, 1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834,
	0, 0, 0, 0, 881, 0, 0, 0, 0, 3306,
	0, 858, 0, 1572, 1572, 0, 0, 0, 0, 0,
	0, 0, 0, 1410, 0, 879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 0, 112, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 859, 0, 0, 860, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 883, 0,
	0, 0, 0, 763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4275, 0, 0, 0, 0,
	0, 112, 0, 0, 112, 0, 0, 0, 0, 0,
	112, 2321, 0, 0, 0, 0, 0, 0, 1572, 0,
	1572, 0, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1572, 1572, 0, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 1572, 0, 0, 882, 0, 0, 0,
	0, 0, 0, 0, 0, 1572, 877, 1572, 1572, 1572,
	0, 0, 0, 0, 0, 0, 0, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 0, 0, 0,
	0, 823, 1413, 0, 0, 0, 0, 2321, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 4373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 861, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 863,
	0, 0, 271, 0, 0, 0, 271, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	864, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1410, 873,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 762, 0, 0, 0, 0, 0, 271, 271, 0,
	0, 271, 0, 2573, 850, 0, 874, 0, 271, 0,
	0, 0, 0, 0, 0, 865, 0, 0, 0, 0,
	0, 0, 0, 271, 1900, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1411, 0, 0, 0, 0,
	871, 0, 0, 0, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 4475, 0, 0, 0, 866, 0, 0,
	0, 867, 886, 0, 885, 0, 0, 868, 0, 0,
	0, 1410, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 869, 0, 0, 0, 0, 878, 0, 0, 1413,
	0, 0, 887, 0, 884, 0, 0, 0, 271, 0,
	764, 0, 0, 1413, 0, 1413, 0, 0, 0, 1413,
	0, 0, 0, 0, 0, 0, 271, 1413, 0, 0,
	0, 0, 2321, 0, 0, 271, 0, 0, 1413, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1410, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1410, 0, 0,
	0, 1573, 1573, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4602, 1514, 0,
	0, 0, 0, 0, 0, 0, 1254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1254, 1413, 0, 271, 1413, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 1573, 0, 1573, 0,
	1573, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1573, 1573,
	0, 0, 0, 0, 1410, 0, 0, 0, 0, 0,
	0, 1573, 0, 1413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1573, 0, 1573, 1573, 1573, 0, 0,
	1413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	1825, 0, 1857, 1858, 1859, 1868, 1869, 1870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1861, 1855, 0, 0, 0, 0, 0, 4718, 1827,
	0, 0, 112, 112, 0, 112, 0, 1410, 1874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 0, 0, 112, 112, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 823, 0, 0, 0, 0, 1411, 0, 0, 4770,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 1572, 0, 1572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 1850, 1851, 1852, 0, 1572, 0, 0, 4811,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	1254, 0, 0, 1090, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 1875, 0, 0, 0, 112, 112, 0,
	1854, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 1872, 0,
	0, 0, 0, 0, 0, 1841, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 0, 0, 271, 0, 0, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 1847, 0,
	0, 0, 1413, 0, 0, 1413, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 1411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 1873, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 1862, 0, 0, 0, 271, 0, 0, 0,
	0, 271, 0, 1877, 0, 0, 0, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1413, 1413, 1413, 0, 0, 0, 0, 1413,
	1413, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 1413, 0, 0, 0, 271, 0, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 1824, 1825, 112, 1857, 1858, 1859, 1868, 1869,
	1870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1254, 1254, 1861, 1855, 0, 0, 0, 0,
	1879, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 1411, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 1413, 1413, 0, 1413,
	1410, 1838, 1839, 1845, 1867, 1844, 1840, 0, 1837, 1835,
	1836, 1828, 1829, 1830, 1831, 1833, 1834, 1413, 1413, 0,
	0, 0, 0, 0, 0, 0, 3305, 0, 0, 0,
	1413, 0, 0, 1410, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 1410, 0,
	0, 0, 1573, 0, 1849, 1850, 1851, 1852, 0, 0,
	0, 0, 0, 0, 1832, 1573, 0, 1573, 0, 0,
	0, 0, 0, 0, 1410, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 1573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 271, 0,
	0, 271, 0, 1865, 0, 0, 1875, 0, 0, 0,
	0, 0, 0, 1854, 1856, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 1871,
	0, 1872, 0, 0, 0, 0, 0, 0, 1841, 1842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 1413, 0, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 112, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 271, 0, 0, 0, 1413, 0,
	0, 0, 0, 0, 1254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 0,
	0, 0, 0, 0, 1410, 0, 0, 1413, 1413, 1413,
	1413, 1413, 1413, 0, 0, 1862, 0, 0, 0, 0,
	0, 0, 0, 1413, 0, 112, 1877, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 1413, 0, 0, 0, 0, 0, 1572,
	0, 1572, 0, 0, 0, 1410, 0, 0, 0, 0,
	0, 0, 823, 1572, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 1572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1413, 0, 1413, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 0, 1866, 0, 0, 0, 0, 0, 1572, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1572, 0, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 1879, 0, 0, 0, 1254, 0, 0,
	0, 0, 0, 0, 0, 1254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1410,
	0, 1413, 1410, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 1413, 1413,
	1413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 1839, 1845, 1867, 1844, 1840,
	0, 1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 1411, 2632,
	1413, 0, 0, 1413, 0, 0, 0, 0, 0, 1410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 0, 1410, 0, 0, 0,
	0, 1411, 0, 0, 271, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 0, 0, 0,
	0, 0, 1824, 1825, 0, 1857, 1858, 1859, 1868, 1869,
	1870, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 1861, 1855, 0, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 1880, 0,
	0, 1410, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 0,
	0, 0, 823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	1413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1573, 1849, 1850, 1851, 1852, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 1573, 0, 1573,
	0, 0, 0, 1411, 0, 0, 271, 0, 0, 0,
	0, 1573, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1573, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 1875, 0, 0, 0,
	0, 0, 0, 1854, 1856, 0, 0, 0, 1572, 0,
	0, 1572, 0, 0, 0, 0, 0, 0, 0, 1871,
	0, 1872, 0, 0, 0, 0, 271, 0, 1841, 1842,
	0, 0, 0, 0, 0, 0, 1573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 0, 1573, 0,
	1573, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2573, 1411, 0, 0,
	1411, 0, 0, 0, 0, 0, 0, 1873, 1572, 1572,
	1572, 0, 0, 0, 0, 1572, 1572, 1572, 0, 0,
	0, 0, 0, 0, 0, 1862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1877, 1572, 0, 0,
	0, 0, 0, 1410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 1825,
	1410, 1857, 1858, 1859, 1868, 1869, 1870, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1861, 1855, 1853, 0, 1411, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 1880, 112, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1846, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 1410, 1410, 0, 1410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1572, 1572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1410, 0, 0, 1411,
	1849, 1850, 1851, 1852, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 1839, 1845, 1867, 1844, 1840,
	0, 1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834,
	0, 0, 0, 0, 0, 4758, 0, 0, 0, 1865,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 1854,
	1856, 1410, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 0, 1872, 0, 0,
	0, 1410, 0, 0, 1841, 1842, 0, 112, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 0, 1572,
	1572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1410,
	0, 0, 0, 1873, 1572, 0, 1573, 0, 0, 1573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1877, 1572, 1572, 1572, 1572, 1572, 1572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1410,
	0, 1573, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1573, 1573, 1573, 0,
	0, 1848, 0, 1573, 1573, 1573, 0, 0, 0, 0,
	0, 0, 1410, 0, 1572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1573, 0, 0, 1866, 0,
	0, 1411, 0, 0, 1824, 1825, 0, 1857, 1858, 1859,
	1868, 1869, 1870, 0, 0, 0, 1410, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1861, 1855, 1411, 1879,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 1410, 1843, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 1572, 1572, 1572, 0, 0, 0,
	1838, 1839, 1845, 1867, 1844, 1840, 0, 1837, 1835, 1836,
	1828, 1829, 1830, 1831, 1833, 1834, 0, 0, 0, 0,
	0, 4754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1411, 1411, 0, 1411, 0, 0, 1410, 0, 0, 1572,
	0, 0, 0, 0, 0, 0, 1849, 1850, 1851, 1852,
	0, 1573, 1573, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 1854, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 0, 1872, 0, 0, 0, 0, 0, 1411,
	1841, 1842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1573, 1573, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 0, 1573, 0, 0, 0, 0, 0, 1877, 0,
	0, 0, 0, 0, 0, 0, 1572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1572, 0, 0, 0,
	0, 1573, 1573, 1573, 1573, 1573, 1573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	1411, 0, 1573, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 1411, 1838, 1839, 1845, 1867,
	1844, 1840, 0, 1837, 1835, 1836, 1828, 1829, 1830, 1831,
	1833, 1834, 1573, 1573, 1573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 0, 1573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 1414,
	286, 287, 1415, 1416, 1417, 0, 1418, 643, 1419, 1420,
	1421, 1422, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 1423, 648,
	298, 299, 300, 301, 302, 303, 1424, 1425, 0, 304,
	649, 650, 651, 1426, 305, 306, 652, 1427, 1494, 1428,
	307, 308, 309, 310, 311, 312, 313, 0, 1429, 315,
	316, 317, 314, 318, 1430, 319, 0, 320, 321, 322,
	323, 324, 325, 1431, 326, 327, 328, 1212, 329, 330,
	331, 1432, 1433, 1435, 1434, 1436, 1437, 1438, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 1439, 342,
	338, 340, 1440, 343, 341, 344, 1441, 345, 346, 347,
	1442, 1443, 348, 349, 350, 1444, 351, 352, 353, 1445,
	354, 355, 356, 1446, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 1447, 276, 1448, 1573, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 1573, 374, 1449, 375, 376, 377,
	1450, 1451, 1213, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1452, 390, 661,
	1453, 662, 391, 1454, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 1215, 397, 398, 1455, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 1456,
	1214, 407, 666, 667, 1457, 668, 1458, 408, 409, 1216,
	669, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1459, 420, 422, 421,
	1460, 423, 670, 1219, 424, 425, 1220, 1461, 426, 427,
	428, 429, 430, 431, 434, 1462, 1463, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1464, 278, 1223, 477, 478,
	1465, 671, 479, 672, 481, 482, 1466, 0, 483, 0,
	1467, 1468, 485, 486, 487, 1469, 1470, 488, 489, 673,
	1224, 490, 1225, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 1471, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 1472, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 1473,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 1474, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 1475, 568,
	569, 567, 570, 571, 572, 1476, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 1477, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	1478, 600, 601, 0, 597, 588, 1479, 602, 603, 604,
	605, 606, 607, 608, 609, 1480, 610, 684, 685, 686,
	687, 1481, 619, 1482, 611, 612, 613, 688, 614, 689,
	1483, 615, 616, 617, 618, 0, 620, 621, 1484, 1485,
	622, 623, 624, 626, 627, 625, 628, 1486, 629, 1487,
	0, 630, 631, 632, 690, 691, 692, 1488, 634, 633,
	635, 693, 636, 637, 1489, 1490, 1491, 1492, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1408, 0, 0, 0, 0, 0,
	0, 0, 2800, 0, 0, 0, 0, 0, 0, 0,
	2801, 279, 281, 280, 282, 283, 284, 285, 1414, 286,
	287, 1415, 1416, 1417, 0, 1418, 643, 1419, 1420, 1421,
	1422, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 1423, 648, 298,
	299, 300, 301, 302, 303, 1424, 1425, 0, 304, 649,
	650, 651, 1426, 305, 306, 652, 1427, 1494, 1428, 307,
	308, 309, 310, 311, 312, 313, 0, 1429, 315, 316,
	317, 314, 318, 1430, 319, 0, 320, 321, 322, 323,
	324, 325, 1431, 326, 327, 328, 1212, 329, 330, 331,
	1432, 1433, 1435, 1434, 1436, 1437, 1438, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 1439, 342, 338,
	340, 1440, 343, 341, 344, 1441, 345, 346, 347, 1442,
	1443, 348, 349, 350, 1444, 351, 352, 353, 1445, 354,
	355, 356, 1446, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	1447, 276, 1448, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 1449, 375, 376, 377, 1450,
	1451, 1213, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1452, 390, 661, 1453,
	662, 391, 1454, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 1215, 397, 398, 1455, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 1456, 1214,
	407, 666, 667, 1457, 668, 1458, 408, 409, 1216, 669,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1459, 420, 422, 421, 1460,
	423, 670, 1219, 424, 425, 1220, 1461, 426, 427, 428,
	429, 430, 431, 434, 1462, 1463, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 1464, 278, 1223, 477, 478, 1465,
	671, 479, 672, 481, 482, 1466, 0, 483, 0, 1467,
	1468, 485, 486, 487, 1469, 1470, 488, 489, 673, 1224,
	490, 1225, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 1471, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 1472, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 1473, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 1474, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 1475, 568, 569,
	567, 570, 571, 572, 1476, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 1477, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 1478,
	600, 601, 0, 597, 588, 1479, 602, 603, 604, 605,
	606, 607, 608, 609, 1480, 610, 684, 685, 686, 687,
	1481, 619, 1482, 611, 612, 613, 688, 614, 689, 1483,
	615, 616, 617, 618, 0, 620, 621, 1484, 1485, 622,
	623, 624, 626, 627, 625, 628, 1486, 629, 1487, 0,
	630, 631, 632, 690, 691, 692, 1488, 634, 633, 635,
	693, 636, 637, 1489, 1490, 1491, 1492, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1408, 0, 0, 0, 3784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3786, 279, 281,
	280, 282, 283, 284, 285, 1414, 286, 287, 1415, 1416,
	1417, 0, 1418, 643, 1419, 1420, 1421, 1422, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 1423, 648, 298, 299, 300, 301,
	302, 303, 1424, 1425, 0, 304, 649, 650, 651, 1426,
	305, 306, 652, 1427, 1494, 1428, 307, 308, 309, 310,
	311, 312, 313, 0, 1429, 315, 316, 317, 314, 318,
	1430, 319, 0, 320, 321, 322, 323, 324, 325, 1431,
	326, 327, 328, 1212, 329, 330, 331, 1432, 1433, 1435,
	1434, 1436, 1437, 1438, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 1439, 342, 338, 340, 1440, 343,
	341, 344, 1441, 345, 346, 347, 1442, 1443, 348, 349,
	350, 1444, 351, 352, 353, 1445, 354, 355, 356, 1446,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 1447, 276, 1448,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 1449, 375, 376, 377, 1450, 1451, 1213, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 1452, 390, 661, 1453, 662, 391, 1454,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 1215,
	397, 398, 1455, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 1456, 1214, 407, 666, 667,
	1457, 668, 1458, 408, 409, 1216, 669, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 1459, 420, 422, 421, 1460, 423, 670, 1219,
	424, 425, 1220, 1461, 426, 427, 428, 429, 430, 431,
	434, 1462, 1463, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 1464, 278, 1223, 477, 478, 1465, 671, 479, 672,
	481, 482, 1466, 0, 483, 0, 1467, 1468, 485, 486,
	487, 1469, 1470, 488, 489, 673, 1224, 490, 1225, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 1471, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 1472, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 1473, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 1474,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 1475, 568, 569, 567, 570, 571,
	572, 1476, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 1477,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 1478, 600, 601, 0,
	597, 588, 1479, 602, 603, 604, 605, 606, 607, 608,
	609, 1480, 610, 684, 685, 686, 687, 1481, 619, 1482,
	611, 612, 613, 688, 614, 689, 1483, 615, 616, 617,
	618, 0, 620, 621, 1484, 1485, 622, 623, 624, 626,
	627, 625, 628, 1486, 629, 1487, 0, 630, 631, 632,
	690, 691, 692, 1488, 634, 633, 635, 693, 636, 637,
	1489, 1490, 1491, 1492, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4195, 279,
	281, 280, 282, 283, 284, 285, 1414, 286, 287, 1415,
	1416, 1417, 0, 1418, 643, 1419, 1420, 1421, 1422, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 1423, 648, 298, 299, 300,
	301, 302, 303, 1424, 1425, 0, 304, 649, 650, 651,
	1426, 305, 306, 652, 1427, 1494, 1428, 307, 308, 309,
	310, 311, 312, 313, 0, 1429, 315, 316, 317, 314,
	318, 1430, 319, 0, 320, 321, 322, 323, 324, 325,
	1431, 326, 327, 328, 1212, 329, 330, 331, 1432, 1433,
	1435, 1434, 1436, 1437, 1438, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 1439, 342, 338, 340, 1440,
	343, 341, 344, 1441, 345, 346, 347, 1442, 1443, 348,
	349, 350, 1444, 351, 352, 353, 1445, 354, 355, 356,
	1446, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 1447, 276,
	1448, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 1449, 375, 376, 377, 1450, 1451, 1213,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1452, 390, 661, 1453, 662, 391,
	1454, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	1215, 397, 398, 1455, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 1456, 1214, 407, 666,
	667, 1457, 668, 1458, 408, 409, 1216, 669, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1459, 420, 422, 421, 1460, 423, 670,
	1219, 424, 425, 1220, 1461, 426, 427, 428, 429, 430,
	431, 434, 1462, 1463, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 1464, 278, 1223, 477, 478, 1465, 671, 479,
	672, 481, 482, 1466, 0, 483, 0, 1467, 1468, 485,
	486, 487, 1469, 1470, 488, 489, 673, 1224, 490, 1225,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 1471, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 1472,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 1473, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	1474, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 1475, 568, 569, 567, 570,
	571, 572, 1476, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	1477, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 1478, 600, 601,
	0, 597, 588, 1479, 602, 603, 604, 605, 606, 607,
	608, 609, 1480, 610, 684, 685, 686, 687, 1481, 619,
	1482, 611, 612, 613, 688, 614, 689, 1483, 615, 616,
	617, 618, 0, 620, 621, 1484, 1485, 622, 623, 624,
	626, 627, 625, 628, 1486, 629, 1487, 0, 630, 631,
	632, 690, 691, 692, 1488, 634, 633, 635, 693, 636,
	637, 1489, 1490, 1491, 1492, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4193,
	279, 281, 280, 282, 283, 284, 285, 1414, 286, 287,
	1415, 1416, 1417, 0, 1418, 643, 1419, 1420, 1421, 1422,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 1423, 648, 298, 299,
	300, 301, 302, 303, 1424, 1425, 0, 304, 649, 650,
	651, 1426, 305, 306, 652, 1427, 1494, 1428, 307, 308,
	309, 310, 311, 312, 313, 0, 1429, 315, 316, 317,
	314, 318, 1430, 319, 0, 320, 321, 322, 323, 324,
	325, 1431, 326, 327, 328, 1212, 329, 330, 331, 1432,
	1433, 1435, 1434, 1436, 1437, 1438, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 1439, 342, 338, 340,
	1440, 343, 341, 344, 1441, 345, 346, 347, 1442, 1443,
	348, 349, 350, 1444, 351, 352, 353, 1445, 354, 355,
	356, 1446, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 1447,
	276, 1448, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 1449, 375, 376, 377, 1450, 1451,
	1213, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1452, 390, 661, 1453, 662,
	391, 1454, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 1215, 397, 398, 1455, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 1456, 1214, 407,
	666, 667, 1457, 668, 1458, 408, 409, 1216, 669, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1459, 420, 422, 421, 1460, 423,
	670, 1219, 424, 425, 1220, 1461, 426, 427, 428, 429,
	430, 431, 434, 1462, 1463, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 1464, 278, 1223, 477, 478, 1465, 671,
	479, 672, 481, 482, 1466, 0, 483, 0, 1467, 1468,
	485, 486, 487, 1469, 1470, 488, 489, 673, 1224, 490,
	1225, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 1471, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	1472, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 1473, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 1474, 543, 544, 545, 1226, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 1475, 568, 569, 567,
	570, 571, 572, 1476, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 1477, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 1478, 600,
	601, 0, 597, 588, 1479, 602, 603, 604, 605, 606,
	607, 608, 609, 1480, 610, 684, 685, 686, 687, 1481,
	619, 1482, 611, 612, 613, 688, 614, 689, 1483, 615,
	616, 617, 618, 0, 620, 621, 1484, 1485, 622, 623,
	624, 626, 627, 625, 628, 1486, 629, 1487, 0, 630,
	631, 632, 690, 691, 692, 1488, 634, 633, 635, 693,
	636, 637, 1489, 1490, 1491, 1492, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 1408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4419, 279, 281, 280, 282, 283,
	284, 285, 1414, 286, 287, 1415, 1416, 1417, 0, 1418,
	643, 1419, 1420, 1421, 1422, 288, 289, 1211, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 1423, 648, 298, 299, 300, 301, 302, 303, 1424,
	1425, 0, 304, 649, 650, 651, 1426, 305, 306, 652,
	1427, 1494, 1428, 307, 308, 309, 310, 311, 312, 313,
	0, 1429, 315, 316, 317, 314, 318, 1430, 319, 0,
	320, 321, 322, 323, 324, 325, 1431, 326, 327, 328,
	1212, 329, 330, 331, 1432, 1433, 1435, 1434, 1436, 1437,
	1438, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 1439, 342, 338, 340, 1440, 343, 341, 344, 1441,
	345, 346, 347, 1442, 1443, 348, 349, 350, 1444, 351,
	352, 353, 1445, 354, 355, 356, 1446, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 1447, 276, 1448, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 1449,
	375, 376, 377, 1450, 1451, 1213, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1452, 390, 661, 1453, 662, 391, 1454, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 1215, 397, 398, 1455,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 1456, 1214, 407, 666, 667, 1457, 668, 1458,
	408, 409, 1216, 669, 1217, 410, 411, 412, 1218, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1459,
	420, 422, 421, 1460, 423, 670, 1219, 424, 425, 1220,
	1461, 426, 427, 428, 429, 430, 431, 434, 1462, 1463,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1221,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1222, 476, 464, 1464, 278,
	1223, 477, 478, 1465, 671, 479, 672, 481, 482, 1466,
	0, 483, 0, 1467, 1468, 485, 486, 487, 1469, 1470,
	488, 489, 673, 1224, 490, 1225, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 1471,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 1472, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 1473, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 1474, 543, 544, 545,
	1226, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 1475, 568, 569, 567, 570, 571, 572, 1476, 573,
	574, 556, 557, 575, 576, 1227, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 1477, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 1478, 600, 601, 0, 597, 588, 1479,
	602, 603, 604, 605, 606, 607, 608, 609, 1480, 610,
	684, 685, 686, 687, 1481, 619, 1482, 611, 612, 613,
	688, 614, 689, 1483, 615, 616, 617, 618, 0, 620,
	621, 1484, 1485, 622, 623, 624, 626, 627, 625, 628,
	1486, 629, 1487, 0, 630, 631, 632, 690, 691, 692,
	1488, 634, 633, 635, 693, 636, 637, 1489, 1490, 1491,
	1492, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 1408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4284,
	279, 281, 280, 282, 283, 284, 285, 1414, 286, 287,
	1415, 1416, 1417, 0, 1418, 643, 1419, 1420, 1421, 1422,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 1423, 648, 298, 299,
	300, 301, 302, 303, 1424, 1425, 0, 304, 649, 650,
	651, 1426, 305, 306, 652, 1427, 1494, 1428, 307, 308,
	309, 310, 311, 312, 313, 0, 1429, 315, 316, 317,
	314, 318, 1430, 319, 0, 320, 321, 322, 323, 324,
	325, 1431, 326, 327, 328, 1212, 329, 330, 331, 1432,
	1433, 1435, 1434, 1436, 1437, 1438, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 1439, 342, 338, 340,
	1440, 343, 341, 344, 1441, 345, 346, 347, 1442, 1443,
	348, 349, 350, 1444, 351, 352, 353, 1445, 354, 355,
	356, 1446, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 1447,
	276, 1448, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 1449, 375, 376, 377, 1450, 1451,
	1213, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1452, 390, 661, 1453, 662,
	391, 1454, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 1215, 397, 398, 1455, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 1456, 1214, 407,
	666, 667, 1457, 668, 1458, 408, 409, 1216, 669, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1459, 420, 422, 421, 1460, 423,
	670, 1219, 424, 425, 1220, 1461, 426, 427, 428, 429,
	430, 431, 434, 1462, 1463, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 1464, 278, 1223, 477, 478, 1465, 671,
	479, 672, 481, 482, 1466, 0, 483, 0, 1467, 1468,
	485, 486, 487, 1469, 1470, 488, 489, 673, 1224, 490,
	1225, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 1471, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	1472, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 1473, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 1474, 543, 544, 545, 1226, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 1475, 568, 569, 567,
	570, 571, 572, 1476, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 1477, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 1478, 600,
	601, 0, 597, 588, 1479, 602, 603, 604, 605, 606,
	607, 608, 609, 1480, 610, 684, 685, 686, 687, 1481,
	619, 1482, 611, 612, 613, 688, 614, 689, 1483, 615,
	616, 617, 618, 0, 620, 621, 1484, 1485, 622, 623,
	624, 626, 627, 625, 628, 1486, 629, 1487, 0, 630,
	631, 632, 690, 691, 692, 1488, 634, 633, 635, 693,
	636, 637, 1489, 1490, 1491, 1492, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 1408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4123, 279, 281, 280, 282, 283,
	284, 285, 1414, 286, 287, 1415, 1416, 1417, 0, 1418,
	643, 1419, 1420, 1421, 1422, 288, 289, 1211, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 1423, 648, 298, 299, 300, 301, 302, 303, 1424,
	1425, 0, 304, 649, 650, 651, 1426, 305, 306, 652,
	1427, 1494, 1428, 307, 308, 309, 310, 311, 312, 313,
	0, 1429, 315, 316, 317, 314, 318, 1430, 319, 0,
	320, 321, 322, 323, 324, 325, 1431, 326, 327, 328,
	1212, 329, 330, 331, 1432, 1433, 1435, 1434, 1436, 1437,
	1438, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 1439, 342, 338, 340, 1440, 343, 341, 344, 1441,
	345, 346, 347, 1442, 1443, 348, 349, 350, 1444, 351,
	352, 353, 1445, 354, 355, 356, 1446, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 1447, 276, 1448, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 1449,
	375, 376, 377, 1450, 1451, 1213, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1452, 390, 661, 1453, 662, 391, 1454, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 1215, 397, 398, 1455,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 1456, 1214, 407, 666, 667, 1457, 668, 1458,
	408, 409, 1216, 669, 1217, 410, 411, 412, 1218, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1459,
	420, 422, 421, 1460, 423, 670, 1219, 424, 425, 1220,
	1461, 426, 427, 428, 429, 430, 431, 434, 1462, 1463,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1221,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1222, 476, 464, 1464, 278,
	1223, 477, 478, 1465, 671, 479, 672, 481, 482, 1466,
	0, 483, 0, 1467, 1468, 485, 486, 487, 1469, 1470,
	488, 489, 673, 1224, 490, 1225, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 1471,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 1472, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 1473, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 1474, 543, 544, 545,
	1226, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 1475, 568, 569, 567, 570, 571, 572, 1476, 573,
	574, 556, 557, 575, 576, 1227, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 1477, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 1478, 600, 601, 0, 597, 588, 1479,
	602, 603, 604, 605, 606, 607, 608, 609, 1480, 610,
	684, 685, 686, 687, 1481, 619, 1482, 611, 612, 613,
	688, 614, 689, 1483, 615, 616, 617, 618, 0, 620,
	621, 1484, 1485, 622, 623, 624, 626, 627, 625, 628,
	1486, 629, 1487, 0, 630, 631, 632, 690, 691, 692,
	1488, 634, 633, 635, 693, 636, 637, 1489, 1490, 1491,
	1492, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 1408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3802,
	279, 281, 280, 282, 283, 284, 285, 1414, 286, 287,
	1415, 1416, 1417, 0, 1418, 643, 1419, 1420, 1421, 1422,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 1423, 648, 298, 299,
	300, 301, 302, 303, 1424, 1425, 0, 304, 649, 650,
	651, 1426, 305, 306, 652, 1427, 1494, 1428, 307, 308,
	309, 310, 311, 312, 313, 0, 1429, 315, 316, 317,
	314, 318, 1430, 319, 0, 320, 321, 322, 323, 324,
	325, 1431, 326, 327, 328, 1212, 329, 330, 331, 1432,
	1433, 1435, 1434, 1436, 1437, 1438, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 1439, 342, 338, 340,
	1440, 343, 341, 344, 1441, 345, 346, 347, 1442, 1443,
	348, 349, 350, 1444, 351, 352, 353, 1445, 354, 355,
	356, 1446, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 1447,
	276, 1448, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 1449, 375, 376, 377, 1450, 1451,
	1213, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1452, 390, 661, 1453, 662,
	391, 1454, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 1215, 397, 398, 1455, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 1456, 1214, 407,
	666, 667, 1457, 668, 1458, 408, 409, 1216, 669, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1459, 420, 422, 421, 1460, 423,
	670, 1219, 424, 425, 1220, 1461, 426, 427, 428, 429,
	430, 431, 434, 1462, 1463, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 1464, 278, 1223, 477, 478, 1465, 671,
	479, 672, 481, 482, 1466, 0, 483, 0, 1467, 1468,
	485, 486, 487, 1469, 1470, 488, 489, 673, 1224, 490,
	1225, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 1471, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	1472, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 1473, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 1474, 543, 544, 545, 1226, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 1475, 568, 569, 567,
	570, 571, 572, 1476, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 1477, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 1478, 600,
	601, 0, 597, 588, 1479, 602, 603, 604, 605, 606,
	607, 608, 609, 1480, 610, 684, 685, 686, 687, 1481,
	619, 1482, 611, 612, 613, 688, 614, 689, 1483, 615,
	616, 617, 618, 0, 620, 621, 1484, 1485, 622, 623,
	624, 626, 627, 625, 628, 1486, 629, 1487, 0, 630,
	631, 632, 690, 691, 692, 1488, 634, 633, 635, 693,
	636, 637, 1489, 1490, 1491, 1492, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 1408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3620, 279, 281, 280, 282, 283,
	284, 285, 1414, 286, 287, 1415, 1416, 1417, 0, 1418,
	643, 1419, 1420, 1421, 1422, 288, 289, 1211, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 1423, 648, 298, 299, 300, 301, 302, 303, 1424,
	1425, 0, 304, 649, 650, 651, 1426, 305, 306, 652,
	1427, 1494, 1428, 307, 308, 309, 310, 311, 312, 313,
	0, 1429, 315, 316, 317, 314, 318, 1430, 319, 0,
	320, 321, 322, 323, 324, 325, 1431, 326, 327, 328,
	1212, 329, 330, 331, 1432, 1433, 1435, 1434, 1436, 1437,
	1438, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 1439, 342, 338, 340, 1440, 343, 341, 344, 1441,
	345, 346, 347, 1442, 1443, 348, 349, 350, 1444, 351,
	352, 353, 1445, 354, 355, 356, 1446, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 1447, 276, 1448, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 1449,
	375, 376, 377, 1450, 1451, 1213, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1452, 390, 661, 1453, 662, 391, 1454, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 1215, 397, 398, 1455,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 1456, 1214, 407, 666, 667, 1457, 668, 1458,
	408, 409, 1216, 669, 1217, 410, 411, 412, 1218, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1459,
	420, 422, 421, 1460, 423, 670, 1219, 424, 425, 1220,
	1461, 426, 427, 428, 429, 430, 431, 434, 1462, 1463,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1221,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1222, 476, 464, 1464, 278,
	1223, 477, 478, 1465, 671, 479, 672, 481, 482, 1466,
	0, 483, 0, 1467, 1468, 485, 486, 487, 1469, 1470,
	488, 489, 673, 1224, 490, 1225, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 1471,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 1472, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 1473, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 1474, 543, 544, 545,
	1226, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 1475, 568, 569, 567, 570, 571, 572, 1476, 573,
	574, 556, 557, 575, 576, 1227, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 1477, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 1478, 600, 601, 0, 597, 588, 1479,
	602, 603, 604, 605, 606, 607, 608, 609, 1480, 610,
	684, 685, 686, 687, 1481, 619, 1482, 611, 612, 613,
	688, 614, 689, 1483, 615, 616, 617, 618, 0, 620,
	621, 1484, 1485, 622, 623, 624, 626, 627, 625, 628,
	1486, 629, 1487, 0, 630, 631, 632, 690, 691, 692,
	1488, 634, 633, 635, 693, 636, 637, 1489, 1490, 1491,
	1492, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 1408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2655,
	279, 281, 280, 282, 283, 284, 285, 1414, 286, 287,
	1415, 1416, 1417, 0, 1418, 643, 1419, 1420, 1421, 1422,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 1423, 648, 298, 299,
	300, 301, 302, 303, 1424, 1425, 0, 304, 649, 650,
	651, 1426, 305, 306, 652, 1427, 1494, 1428, 307, 308,
	309, 310, 311, 312, 313, 0, 1429, 315, 316, 317,
	314, 318, 1430, 319, 0, 320, 321, 322, 323, 324,
	325, 1431, 326, 327, 328, 1212, 329, 330, 331, 1432,
	1433, 1435, 1434, 1436, 1437, 1438, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 1439, 342, 338, 340,
	1440, 343, 341, 344, 1441, 345, 346, 347, 1442, 1443,
	348, 349, 350, 1444, 351, 352, 353, 1445, 354, 355,
	356, 1446, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 1447,
	276, 1448, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 1449, 375, 376, 377, 1450, 1451,
	1213, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1452, 390, 661, 1453, 662,
	391, 1454, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 1215, 397, 398, 1455, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 1456, 1214, 407,
	666, 667, 1457, 668, 1458, 408, 409, 1216, 669, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1459, 420, 422, 421, 1460, 423,
	670, 1219, 424, 425, 1220, 1461, 426, 427, 428, 429,
	430, 431, 434, 1462, 1463, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 1464, 278, 1223, 477, 478, 1465, 671,
	479, 672, 481, 482, 1466, 0, 483, 0, 1467, 1468,
	485, 486, 487, 1469, 1470, 488, 489, 673, 1224, 490,
	1225, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 1471, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	1472, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 1473, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 1474, 543, 544, 545, 1226, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 1475, 568, 569, 567,
	570, 571, 572, 1476, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 1477, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 1478, 600,
	601, 0, 597, 588, 1479, 602, 603, 604, 605, 606,
	607, 608, 609, 1480, 610, 684, 685, 686, 687, 1481,
	619, 1482, 611, 612, 613, 688, 614, 689, 1483, 615,
	616, 617, 618, 0, 620, 621, 1484, 1485, 622, 623,
	624, 626, 627, 625, 628, 1486, 629, 1487, 0, 630,
	631, 632, 690, 691, 692, 1488, 634, 633, 635, 693,
	636, 637, 1489, 1490, 1491, 1492, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 1405, 0, 1408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2280, 279, 281, 280, 282, 283,
	284, 285, 1414, 286, 287, 1415, 1416, 1417, 0, 1418,
	643, 1419, 1420, 1421, 1422, 288, 289, 1211, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 1423, 648, 298, 299, 300, 301, 302, 303, 1424,
	1425, 0, 304, 649, 650, 651, 1426, 305, 306, 652,
	1427, 1494, 1428, 307, 308, 309, 310, 311, 312, 313,
	0, 1429, 315, 316, 317, 314, 318, 1430, 319, 0,
	320, 321, 322, 323, 324, 325, 1431, 326, 327, 328,
	1212, 329, 330, 331, 1432, 1433, 1435, 1434, 1436, 1437,
	1438, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 1439, 342, 338, 340, 1440, 343, 341, 344, 1441,
	345, 346, 347, 1442, 1443, 348, 349, 350, 1444, 351,
	352, 353, 1445, 354, 355, 356, 1446, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 1447, 276, 1448, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 1449,
	375, 376, 377, 1450, 1451, 1213, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1452, 390, 661, 1453, 662, 391, 1454, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 1215, 397, 398, 1455,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 1456, 1214, 407, 666, 667, 1457, 668, 1458,
	408, 409, 1216, 669, 1217, 410, 411, 412, 1218, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1459,
	420, 422, 421, 1460, 423, 670, 1219, 424, 425, 1220,
	1461, 426, 427, 428, 429, 430, 431, 434, 1462, 1463,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1221,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1222, 476, 464, 1464, 278,
	1223, 477, 478, 1465, 671, 479, 672, 481, 482, 1466,
	0, 483, 0, 1467, 1468, 485, 486, 487, 1469, 1470,
	488, 489, 673, 1224, 490, 1225, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 1471,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 1472, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 1473, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 1474, 543, 544, 545,
	1226, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 1475, 568, 569, 567, 570, 571, 572, 1476, 573,
	574, 556, 557, 575, 576, 1227, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 1477, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 1478, 600, 601, 0, 597, 588, 1479,
	602, 603, 604, 605, 606, 607, 608, 609, 1480, 610,
	684, 685, 686, 687, 1481, 619, 1482, 611, 612, 613,
	688, 614, 689, 1483, 615, 616, 617, 618, 0, 620,
	621, 1484, 1485, 622, 623, 624, 626, 627, 625, 628,
	1486, 629, 1487, 0, 630, 631, 632, 690, 691, 692,
	1488, 634, 633, 635, 693, 636, 637, 1489, 1490, 1491,
	1492, 638, 639, 694, 640, 641, 642, 1408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 1414, 286, 287, 1415, 1416, 1417, 0, 1418, 643,
	1419, 1420, 1421, 1422, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	1423, 648, 298, 299, 300, 301, 302, 303, 1424, 1425,
	0, 304, 649, 650, 651, 1426, 305, 306, 652, 1427,
	1494, 1428, 307, 308, 309, 310, 311, 312, 313, 0,
	1429, 315, 316, 317, 314, 318, 1430, 319, 0, 320,
	321, 322, 323, 324, 325, 1431, 326, 327, 328, 1212,
	329, 330, 331, 1432, 1433, 1435, 1434, 1436, 1437, 1438,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	1439, 342, 338, 340, 1440, 343, 341, 344, 1441, 345,
	346, 347, 1442, 1443, 348, 349, 350, 1444, 351, 352,
	353, 1445, 354, 355, 356, 1446, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 1447, 276, 1448, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 1449, 375,
	376, 377, 1450, 1451, 1213, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 1452,
	390, 661, 1453, 662, 391, 1454, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 1215, 397, 398, 1455, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 1456, 1214, 407, 666, 667, 1457, 668, 1458, 408,
	409, 1216, 669, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 1459, 420,
	422, 421, 1460, 423, 670, 1219, 424, 425, 1220, 1461,
	426, 427, 428, 429, 430, 431, 434, 1462, 1463, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 1464, 278, 1223,
	477, 478, 1465, 671, 479, 672, 481, 482, 1466, 0,
	483, 0, 1467, 1468, 485, 486, 487, 1469, 1470, 488,
	489, 673, 1224, 490, 1225, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 1471, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 1472, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 1473, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 1474, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	1475, 568, 569, 567, 570, 571, 572, 1476, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 1477, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 1478, 600, 601, 0, 597, 588, 1479, 602,
	603, 604, 605, 606, 607, 608, 609, 1480, 610, 684,
	685, 686, 687, 1481, 619, 1482, 611, 612, 613, 688,
	614, 689, 1483, 615, 616, 617, 618, 0, 620, 621,
	1484, 1485, 622, 623, 624, 626, 627, 625, 628, 1486,
	629, 1487, 0, 630, 631, 632, 690, 691, 692, 1488,
	634, 633, 635, 693, 636, 637, 1489, 1490, 1491, 1492,
	638, 639, 694, 640, 641, 642, 2630, 0, 1147, 1119,
	1120, 1121, 1117, 1118, 1130, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 2627, 286, 287, 0, 0, 0, 0, 0,
	1171, 1135, 0, 0, 0, 288, 289, 1211, 290, 291,
	292, 293, 294, 295, 644, 1184, 0, 296, 1191, 297,
	1190, 0, 1201, 298, 299, 300, 301, 302, 303, 1137,
	1170, 1102, 304, 1231, 1232, 651, 0, 305, 306, 1177,
	0, 1158, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163, 1162,
	1166, 332, 333, 334, 335, 336, 1194, 337, 339, 1188,
	1187, 1107, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 2628, 0, 348, 1179, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1113,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1202, 1203, 370, 1126, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1186, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1213, 378, 379, 380, 1199,
	1200, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1209, 0, 1136, 391, 0, 392, 393, 394,
	395, 396, 1172, 1173, 1176, 480, 1215, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1214, 407, 1181, 1182, 0, 1142, 0,
	408, 409, 1216, 1174, 1217, 410, 411, 412, 1218, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1210, 1219, 424, 425, 1220,
	0, 426, 427, 428, 429, 430, 431, 434, 1165, 1164,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1221,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1222, 476, 464, 1104, 278,
	1223, 477, 478, 1127, 1175, 479, 1189, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 1224, 490, 1225, 1204, 491, 492, 1114,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	1205, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1185, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1226, 546, 547, 548, 549, 550, 1115, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1168, 573,
	574, 556, 557, 575, 576, 1227, 577, 578, 579, 580,
	581, 582, 583, 1183, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 1230, 591, 592, 593, 594,
	1206, 598, 599, 0, 600, 601, 1101, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	1195, 1196, 1197, 1198, 0, 619, 0, 611, 612, 613,
	1207, 614, 1208, 1125, 615, 616, 617, 618, 0, 620,
	621, 0, 1108, 622, 623, 624, 626, 627, 625, 628,
	1169, 629, 0, 0, 630, 631, 632, 690, 1192, 1229,
	2626, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1100, 0, 0, 0, 0, 0, 0, 1098, 1099, 2629,
	0, 0, 0, 0, 0, 0, 0, 1131, 2625, 0,
	1091, 1129, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 1171, 1135, 0, 0, 0, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 1184,
	0, 296, 1191, 297, 1190, 0, 1201, 298, 299, 300,
	301, 302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651,
	0, 305, 306, 1177, 0, 1158, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1212, 329, 330, 331, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335, 336,
	1194, 337, 339, 1188, 1187, 1107, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1179, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1113, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1202, 1203, 370, 1126, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1186, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1213,
	378, 379, 380, 1199, 1200, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1209, 0, 1136, 391,
	0, 392, 393, 394, 395, 396, 1172, 1173, 1176, 480,
	1215, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1214, 407, 1181,
	1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1210,
	1219, 424, 425, 1220, 0, 426, 427, 428, 429, 430,
	431, 434, 1165, 1164, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 1104, 278, 1223, 477, 478, 1127, 1175, 479,
	1189, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 1224, 490, 1225,
	1204, 491, 492, 1114, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 1205, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1185, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	1115, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 238, 568, 569, 567, 570,
	571, 572, 1168, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 1183, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1230,
	591, 592, 593, 594, 1206, 598, 599, 0, 600, 601,
	1101, 597, 588, 240, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 1195, 1196, 1197, 1198, 0, 619,
	0, 611, 612, 613, 1207, 614, 1208, 1125, 615, 616,
	617, 618, 0, 620, 621, 0, 1108, 622, 623, 624,
	626, 627, 625, 628, 1169, 629, 0, 0, 630, 631,
	632, 1644, 1192, 1229, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 232, 638, 639, 694, 640, 641,
	642, 1105, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1100, 0, 0, 0, 0, 0,
	0, 1098, 1099, 1147, 1119, 1120, 1121, 1117, 1118, 1130,
	0, 1905, 1903, 0, 0, 1129, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 1171, 1135, 0, 0, 0,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 644,
	1184, 0, 296, 1191, 297, 1190, 0, 1201, 298, 299,
	300, 301, 302, 303, 1137, 1170, 1102, 304, 1231, 1232,
	651, 0, 305, 306, 1177, 0, 1158, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1212, 329, 330, 331, 1161,
	1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335,
	336, 1194, 337, 339, 1188, 1187, 1107, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1179, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1113, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1202, 1203, 370, 1126,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1186,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1213, 378, 379, 380, 1199, 1200, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1209, 0, 1136,
	391, 0, 392, 393, 394, 395, 396, 1172, 1173, 1176,
	480, 1215, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1214, 407,
	1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1210, 1219, 424, 425, 1220, 0, 426, 427, 428, 429,
	430, 431, 434, 1165, 1164, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 1104, 278, 1223, 477, 478, 1127, 1175,
	479, 1189, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 1224, 490,
	1225, 1204, 491, 492, 1114, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 1205, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1185, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1226, 546, 547, 548, 549,
	550, 1115, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 238, 568, 569, 567,
	570, 571, 572, 1168, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 1183, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1230, 591, 592, 593, 594, 1206, 598, 599, 0, 600,
	601, 1101, 597, 588, 240, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 1195, 1196, 1197, 1198, 0,
	619, 0, 611, 612, 613, 1207, 614, 1208, 1125, 615,
	616, 617, 618, 0, 620, 621, 0, 1108, 622, 623,
	624, 626, 627, 625, 628, 1169, 629, 0, 0, 630,
	631, 632, 1644, 1192, 1229, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 232, 638, 639, 694, 640,
	641, 642, 1105, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1100, 0, 0, 0, 0,
	0, 0, 1098, 1099, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 0, 1905, 3261, 0, 0, 1129, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 1171, 1135, 0, 0,
	0, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 1184, 0, 296, 1191, 297, 1190, 0, 1201, 298,
	299, 300, 301, 302, 303, 1137, 1170, 1102, 304, 1231,
	1232, 651, 0, 305, 306, 1177, 0, 1158, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1212, 329, 330, 331,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334,
	335, 336, 1194, 337, 339, 1188, 1187, 1107, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1179, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1113, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1202, 1203, 370,
	1126, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1186, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1213, 378, 379, 380, 1199, 1200, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1209, 0,
	1136, 391, 0, 392, 393, 394, 395, 396, 1172, 1173,
	1176, 480, 1215, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1214,
	407, 1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1210, 1219, 424, 425, 1220, 0, 426, 427, 428,
	429, 430, 431, 434, 1165, 1164, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 1104, 278, 1223, 477, 478, 1127,
	1175, 479, 1189, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 1224,
	490, 1225, 1204, 491, 492, 1114, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 1205, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1185, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 1115, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 238, 568, 569,
	567, 570, 571, 572, 1168, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 1183,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1230, 591, 592, 593, 594, 1206, 598, 599, 0,
	600, 601, 1101, 597, 588, 240, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 1195, 1196, 1197, 1198,
	0, 619, 0, 611, 612, 613, 1207, 614, 1208, 1125,
	615, 616, 617, 618, 0, 620, 621, 0, 1108, 622,
	623, 624, 626, 627, 625, 628, 1169, 629, 0, 0,
	630, 631, 632, 1644, 1192, 1229, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 232, 638, 639, 694,
	640, 641, 642, 1105, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1100, 0, 0, 0,
	0, 0, 0, 1098, 1099, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 0, 1905, 1903, 0, 0, 1129, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 2761, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 2766, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	2762, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 2763, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 620, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1105, 0, 0, 0, 2675, 0,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 0, 279, 281, 280,
	282, 283, 284, 285, 1131, 286, 287, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 1184, 0, 296,
	1191, 297, 1190, 0, 1201, 298, 299, 300, 301, 302,
	303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305,
	306, 1177, 0, 1158, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 332, 333, 334, 335, 336, 1194, 337,
	339, 1188, 1187, 1107, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1179, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1113, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1202, 1203, 370, 1126, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1186, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 1199, 1200, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1209, 0, 1136, 391, 0, 392,
	393, 394, 395, 396, 1172, 1173, 1176, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1214, 407, 1181, 1182, 0,
	1142, 0, 408, 409, 1216, 1174, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1210, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	1165, 1164, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 1204, 491,
	492, 1114, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 1205, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1185, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 1115, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1168, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 1183, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1230, 591, 592,
	593, 594, 1206, 598, 599, 0, 600, 601, 1101, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 1195, 1196, 1197, 1198, 0, 619, 0, 611,
	612, 613, 1207, 614, 1208, 1125, 615, 616, 617, 618,
	0, 620, 621, 0, 1108, 622, 623, 624, 626, 627,
	625, 628, 1169, 629, 0, 0, 630, 631, 632, 690,
	1192, 1229, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 0, 0, 0, 0, 0, 0, 0, 0, 1131,
	2673, 0, 2672, 1129, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 1171, 1135, 0, 0,
	0, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 1184, 0, 296, 1191, 297, 1190, 0, 1201, 298,
	299, 300, 301, 302, 303, 1137, 1170, 1102, 304, 1231,
	1232, 651, 0, 305, 306, 1177, 0, 1158, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1212, 329, 330, 331,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334,
	335, 336, 1194, 337, 339, 1188, 1187, 1107, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1179, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1113, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1202, 1203, 370,
	1126, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1186, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1213, 378, 379, 380, 1199, 1200, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1209, 0,
	1136, 391, 0, 392, 393, 394, 395, 396, 1172, 1173,
	1176, 480, 1215, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1214,
	407, 1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1210, 1219, 424, 425, 1220, 0, 426, 427, 428,
	429, 430, 431, 434, 1165, 1164, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 1104, 278, 1223, 477, 478, 1127,
	1175, 479, 1189, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 1224,
	490, 1225, 1204, 491, 492, 1114, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 1205, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1185, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 1115, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1168, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 1183,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1230, 591, 592, 593, 594, 1206, 598, 599, 0,
	600, 601, 1101, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 1195, 1196, 1197, 1198,
	0, 619, 0, 611, 612, 613, 1207, 614, 1208, 1125,
	615, 616, 617, 618, 0, 620, 621, 0, 1108, 622,
	623, 624, 626, 627, 625, 628, 1169, 629, 0, 0,
	630, 631, 632, 690, 1192, 1229, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1100, 0, 0, 0,
	0, 0, 0, 1098, 1099, 0, 0, 0, 0, 0,
	0, 0, 0, 1131, 2670, 0, 2669, 1129, 1147, 1119,
	1120, 1121, 1117, 1118, 1130, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	1171, 1135, 0, 0, 0, 288, 289, 1211, 290, 291,
	292, 293, 294, 295, 644, 1184, 0, 296, 1191, 297,
	1190, 0, 1201, 298, 299, 300, 301, 302, 303, 1137,
	1170, 1102, 304, 1231, 1232, 651, 0, 305, 306, 1177,
	0, 1158, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163, 1162,
	1166, 332, 333, 334, 335, 336, 1194, 337, 339, 1188,
	1187, 1107, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1179, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1113,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1202, 1203, 370, 1126, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1186, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1213, 378, 379, 380, 1199,
	1200, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1209, 0, 1136, 391, 0, 392, 393, 394,
	395, 396, 1172, 1173, 1176, 480, 1215, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1214, 407, 1181, 1182, 0, 1142, 0,
	408, 409, 1216, 1174, 1217, 410, 411, 412, 1218, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1210, 1219, 424, 425, 1220,
	0, 426, 427, 428, 429, 430, 431, 434, 1165, 1164,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1221,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1222, 476, 464, 1104, 278,
	1223, 477, 478, 1127, 1175, 479, 1189, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 1224, 490, 1225, 1204, 491, 492, 1114,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	1205, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1185, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1226, 546, 547, 548, 549, 550, 1115, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1168, 573,
	574, 556, 557, 575, 576, 1227, 577, 578, 579, 580,
	581, 582, 583, 1183, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 1230, 591, 592, 593, 594,
	1206, 598, 599, 0, 600, 601, 1101, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	1195, 1196, 1197, 1198, 0, 619, 0, 611, 612, 613,
	1207, 614, 1208, 1125, 615, 616, 617, 618, 0, 620,
	621, 0, 1108, 622, 623, 624, 626, 627, 625, 628,
	1169, 629, 0, 0, 630, 631, 632, 690, 1192, 1229,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1100, 0, 0, 0, 0, 0, 0, 1098, 1099, 0,
	0, 0, 0, 0, 0, 0, 0, 1131, 2667, 0,
	2666, 1129, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 1171, 1135, 0, 0, 0, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 1184,
	0, 296, 1191, 297, 1190, 0, 1201, 298, 299, 300,
	301, 302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651,
	0, 305, 306, 1177, 0, 1158, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1212, 329, 330, 331, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335, 336,
	1194, 337, 339, 1188, 1187, 1107, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1179, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1113, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1202, 1203, 370, 1126, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1186, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1213,
	378, 379, 380, 1199, 1200, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1209, 0, 1136, 391,
	0, 392, 393, 394, 395, 396, 1172, 1173, 1176, 480,
	1215, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1214, 407, 1181,
	1182, 0, 1142, 0, 408, 409, 1216, 1174, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1210,
	1219, 424, 425, 1220, 0, 426, 427, 428, 429, 430,
	431, 434, 1165, 1164, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 1104, 278, 1223, 477, 478, 1127, 1175, 479,
	1189, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 1224, 490, 1225,
	1204, 491, 492, 1114, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 1205, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1185, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	1115, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1168, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 1183, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1230,
	591, 592, 593, 594, 1206, 598, 599, 0, 600, 601,
	1101, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 1195, 1196, 1197, 1198, 0, 619,
	0, 611, 612, 613, 1207, 614, 1208, 1125, 615, 616,
	617, 618, 0, 620, 621, 0, 1108, 622, 623, 624,
	626, 627, 625, 628, 1169, 629, 0, 0, 630, 631,
	632, 690, 1192, 1229, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1100, 0, 0, 0, 0, 0,
	0, 1098, 1099, 0, 0, 0, 0, 0, 0, 0,
	0, 1131, 2664, 0, 1744, 1129, 1147, 1119, 1120, 1121,
	1117, 1118, 1130, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 1171, 1135,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 1184, 0, 296, 1191, 297, 1190, 0,
	1201, 298, 299, 300, 301, 302, 303, 1137, 1170, 1102,
	304, 1231, 1232, 651, 0, 305, 306, 1177, 0, 1158,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332,
	333, 334, 335, 336, 1194, 337, 339, 1188, 1187, 1107,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1179, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1113, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1202,
	1203, 370, 1126, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1186, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 1199, 1200, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1209, 0, 1136, 391, 0, 392, 393, 394, 395, 396,
	1172, 1173, 1176, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1214, 407, 1181, 1182, 0, 1142, 0, 408, 409,
	1216, 1174, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1210, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 1165, 1164, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 1104, 278, 1223, 477,
	478, 1127, 1175, 479, 1189, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 1204, 491, 492, 1114, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 1205, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1185, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 1115, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1168, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 1183, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1230, 591, 592, 593, 594, 1206, 598,
	599, 0, 600, 601, 1101, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 1195, 1196,
	1197, 1198, 0, 619, 0, 611, 612, 613, 1207, 614,
	1208, 1125, 615, 616, 617, 618, 0, 620, 621, 0,
	1108, 622, 623, 624, 626, 627, 625, 628, 1169, 629,
	0, 0, 630, 631, 632, 690, 1192, 1229, 0, 634,
	633, 635, 693, 636, 637, 1743, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1105, 0, 0, 0, 1094,
	0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100, 0,
	0, 0, 0, 0, 0, 1098, 1099, 0, 279, 281,
	280, 282, 283, 284, 285, 1131, 286, 287, 0, 1129,
	0, 0, 0, 1171, 1135, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 1184, 0,
	296, 1191, 297, 1190, 0, 1201, 298, 299, 300, 301,
	302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0,
	305, 306, 1177, 0, 1158, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 1161, 1159, 1160,
	1167, 1163, 1162, 1166, 332, 333, 334, 335, 336, 1194,
	337, 339, 1188, 1187, 1107, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1179,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1113, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1202, 1203, 370, 1126, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1186, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 1199, 1200, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1209, 0, 1136, 391, 0,
	392, 393, 394, 395, 396, 1172, 1173, 1176, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1214, 407, 1181, 1182,
	0, 1142, 0, 408, 409, 1216, 1174, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1210, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 1165, 1164, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189,
	481, 482, 0, 0, 483, 0, 1109, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 1204,
	491, 492, 1114, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 1205, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1185,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 1115,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1168, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 1183, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1230, 591,
	592, 593, 594, 1206, 598, 599, 0, 600, 601, 1101,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 1195, 1196, 1197, 1198, 0, 619, 0,
	611, 612, 613, 1207, 614, 1208, 1125, 615, 616, 617,
	618, 0, 620, 621, 0, 1108, 622, 623, 624, 626,
	627, 625, 628, 1169, 629, 0, 0, 630, 631, 632,
	690, 1192, 1229, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1105, 0, 0, 0, 0, 0, 1147, 1119, 1120, 1121,
	1117, 1118, 1130, 1100, 0, 0, 0, 0, 0, 0,
	1098, 1099, 0, 279, 281, 280, 282, 283, 284, 285,
	1131, 286, 287, 0, 1129, 0, 0, 0, 1171, 1135,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 1184, 0, 296, 1191, 297, 1190, 0,
	1201, 298, 299, 300, 301, 302, 303, 1137, 1170, 1102,
	304, 1231, 1232, 651, 0, 305, 306, 1177, 0, 1158,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 4782, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332,
	333, 334, 335, 336, 1194, 337, 339, 1188, 1187, 1107,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1179, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1113, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1202,
	1203, 370, 1126, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1186, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 1199, 1200, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1209, 0, 1136, 391, 0, 392, 393, 394, 395, 396,
	1172, 1173, 1176, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1214, 407, 1181, 1182, 0, 1142, 0, 408, 409,
	1216, 1174, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1210, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 1165, 1164, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 1104, 278, 1223, 477,
	478, 1127, 1175, 479, 1189, 481, 482, 0, 0, 483,
	0, 1109, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 1204, 491, 492, 1114, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 1205, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1185, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 1115, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1168, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 1183, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1230, 591, 592, 593, 594, 1206, 598,
	599, 0, 600, 601, 1101, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 1195, 1196,
	1197, 1198, 0, 619, 0, 611, 612, 613, 1207, 614,
	1208, 1125, 615, 616, 617, 618, 0, 620, 621, 0,
	1108, 622, 623, 624, 626, 627, 625, 628, 1169, 629,
	0, 0, 630, 631, 632, 690, 1192, 1229, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1105, 0, 0, 0, 0,
	0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100, 0,
	0, 0, 0, 0, 0, 1098, 1099, 0, 279, 281,
	280, 282, 283, 284, 285, 1131, 286, 287, 0, 1129,
	0, 0, 0, 1171, 1135, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 1184, 0,
	296, 1191, 297, 1190, 0, 1201, 298, 299, 300, 301,
	302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0,
	305, 306, 1177, 0, 1158, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 1161, 1159, 1160,
	1167, 1163, 1162, 1166, 332, 333, 334, 335, 336, 1194,
	337, 339, 1188, 1187, 1107, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1179,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1113, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1202, 1203, 370, 1126, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1186, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 1199, 1200, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1209, 0, 1136, 391, 0,
	392, 393, 394, 395, 396, 1172, 1173, 1176, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 2507, 404, 405, 406, 0, 1214, 407, 1181, 1182,
	0, 1142, 0, 408, 409, 1216, 1174, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1210, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 1165, 1164, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 1204,
	491, 492, 1114, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 1205, 510, 678, 511, 512, 2506, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1185,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 1115,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1168, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 1183, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1230, 591,
	592, 593, 594, 1206, 598, 599, 0, 600, 601, 1101,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 1195, 1196, 1197, 1198, 0, 619, 0,
	611, 612, 613, 1207, 614, 1208, 1125, 615, 616, 617,
	618, 0, 620, 621, 0, 1108, 622, 623, 624, 626,
	627, 625, 628, 1169, 629, 0, 0, 630, 631, 632,
	690, 1192, 1229, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1105, 0, 0, 0, 0, 0, 1147, 1119, 1120, 1121,
	1117, 1118, 1130, 1100, 0, 0, 0, 0, 0, 0,
	1098, 1099, 0, 279, 281, 280, 282, 283, 284, 285,
	1131, 286, 287, 0, 1129, 0, 0, 0, 1171, 1135,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 1184, 0, 296, 1191, 297, 1190, 0,
	1201, 298, 299, 300, 301, 302, 303, 1137, 1170, 1102,
	304, 1231, 1232, 651, 0, 305, 306, 1177, 0, 1158,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332,
	333, 334, 335, 336, 1194, 337, 339, 1188, 1187, 1107,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1179, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1113, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1202,
	1203, 370, 1126, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1186, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 1199, 1200, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1209, 0, 1136, 391, 0, 392, 393, 394, 395, 396,
	1172, 1173, 1176, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1214, 407, 1181, 1182, 0, 1142, 0, 408, 409,
	1216, 1174, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1210, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 1165, 1164, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 1104, 278, 1223, 477,
	478, 1127, 1175, 479, 1189, 481, 482, 0, 0, 483,
	0, 1109, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 1204, 491, 492, 1114, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 1205, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1185, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 1115, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1168, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 1183, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1230, 591, 592, 593, 594, 1206, 598,
	599, 0, 600, 601, 1101, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 1195, 1196,
	1197, 1198, 0, 619, 0, 611, 612, 613, 1207, 614,
	1208, 1125, 615, 616, 617, 618, 0, 620, 621, 0,
	1108, 622, 623, 624, 626, 627, 625, 628, 1169, 629,
	0, 0, 630, 631, 632, 690, 1192, 1229, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1105, 0, 0, 0, 0,
	0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100, 0,
	0, 0, 0, 0, 0, 1098, 1099, 0, 279, 281,
	280, 282, 283, 284, 285, 1131, 286, 287, 0, 1129,
	0, 0, 0, 1171, 1135, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 1184, 0,
	296, 1191, 297, 1190, 0, 1201, 298, 299, 300, 301,
	302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0,
	305, 306, 1177, 0, 1158, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 4509, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 1161, 1159, 1160,
	1167, 1163, 1162, 1166, 332, 333, 334, 335, 336, 1194,
	337, 339, 1188, 1187, 1107, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1179,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1113, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1202, 1203, 370, 1126, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1186, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 1199, 1200, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1209, 0, 1136, 391, 0,
	392, 393, 394, 395, 396, 1172, 1173, 1176, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1214, 407, 1181, 1182,
	0, 1142, 0, 408, 409, 1216, 1174, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1210, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 1165, 1164, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189,
	481, 482, 0, 0, 483, 0, 1109, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 1204,
	491, 492, 1114, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 1205, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1185,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 1115,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1168, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 1183, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1230, 591,
	592, 593, 594, 1206, 598, 599, 0, 600, 601, 1101,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 1195, 1196, 1197, 1198, 0, 619, 0,
	611, 612, 613, 1207, 614, 1208, 1125, 615, 616, 617,
	618, 0, 620, 621, 0, 1108, 622, 623, 624, 626,
	627, 625, 628, 1169, 629, 0, 0, 630, 631, 632,
	690, 1192, 1229, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1105, 0, 0, 0, 0, 0, 1147, 1119, 1120, 1121,
	1117, 1118, 1130, 1100, 0, 0, 0, 0, 0, 0,
	1098, 1099, 0, 279, 281, 280, 282, 283, 284, 285,
	1131, 286, 287, 0, 1129, 0, 0, 0, 1171, 1135,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 1184, 0, 296, 1191, 297, 1190, 0,
	1201, 298, 299, 300, 301, 302, 303, 1137, 1170, 1102,
	304, 1231, 1232, 651, 0, 305, 306, 1177, 0, 1158,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332,
	333, 334, 335, 336, 1194, 337, 339, 1188, 1187, 1107,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1179, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1113, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1202,
	1203, 370, 1126, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1186, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 1199, 1200, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1209, 0, 1136, 391, 0, 392, 393, 394, 395, 396,
	1172, 1173, 1176, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1214, 407, 1181, 1182, 0, 1142, 0, 408, 409,
	1216, 1174, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1210, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 1165, 1164, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 1104, 4088, 1223, 477,
	478, 1127, 1175, 479, 1189, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 1204, 491, 492, 1114, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 1205, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1185, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 1115, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1168, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 1183, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1230, 591, 592, 593, 594, 1206, 598,
	599, 0, 600, 601, 1101, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 1195, 1196,
	1197, 1198, 0, 619, 0, 611, 612, 613, 1207, 614,
	1208, 1125, 615, 616, 617, 618, 0, 620, 621, 0,
	1108, 622, 623, 624, 626, 627, 625, 628, 1169, 629,
	0, 0, 630, 631, 632, 690, 1192, 1229, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1105, 0, 0, 0, 0,
	0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100, 0,
	0, 0, 0, 0, 0, 1098, 1099, 1974, 279, 281,
	280, 282, 283, 284, 285, 1131, 286, 287, 0, 1129,
	0, 0, 0, 1171, 1135, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 1184, 0,
	296, 1191, 297, 1190, 0, 1201, 298, 299, 300, 301,
	302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0,
	305, 306, 1177, 0, 1158, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 1161, 1159, 1160,
	1167, 1163, 1162, 1166, 332, 333, 334, 335, 336, 1194,
	337, 339, 1188, 1187, 1107, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1179,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1113, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1202, 1203, 370, 1126, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1186, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 1199, 1200, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1209, 0, 1136, 391, 0,
	392, 393, 394, 395, 396, 1172, 1173, 1176, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1214, 407, 1181, 1182,
	0, 1142, 0, 408, 409, 1216, 1174, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1210, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 1165, 1164, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 1204,
	491, 492, 1114, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 1205, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1185,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 1115,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1168, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 1183, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1230, 591,
	592, 593, 594, 1206, 598, 599, 0, 600, 601, 1101,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 1195, 1196, 1197, 1198, 0, 619, 0,
	611, 612, 613, 1207, 614, 1208, 1125, 615, 616, 617,
	618, 0, 620, 621, 0, 1108, 622, 623, 624, 626,
	627, 625, 628, 1169, 629, 0, 0, 630, 631, 632,
	690, 1192, 1229, 3780, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1105, 0, 0, 0, 0, 0, 1147, 1119, 1120, 1121,
	1117, 1118, 1130, 1100, 0, 0, 0, 0, 0, 0,
	1098, 1099, 0, 279, 281, 280, 282, 283, 284, 285,
	1131, 286, 287, 0, 1129, 0, 0, 0, 1171, 1135,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 1184, 0, 296, 1191, 297, 1190, 0,
	1201, 298, 299, 300, 301, 302, 303, 1137, 1170, 1102,
	304, 1231, 1232, 651, 0, 305, 306, 1177, 0, 1158,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332,
	333, 334, 335, 336, 1194, 337, 339, 1188, 1187, 1107,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1179, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1113, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1202,
	1203, 370, 1126, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1186, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 1199, 1200, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1209, 0, 1136, 391, 0, 392, 393, 394, 395, 396,
	1172, 1173, 1176, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1214, 407, 1181, 1182, 0, 1142, 0, 408, 409,
	1216, 1174, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1210, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 1165, 1164, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 1104, 278, 1223, 477,
	478, 1127, 1175, 479, 1189, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 1204, 491, 492, 1114, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 1205, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1185, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 1115, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1168, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 1183, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1230, 591, 592, 593, 594, 1206, 598,
	599, 0, 600, 601, 1101, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 1195, 1196,
	1197, 1198, 0, 619, 0, 611, 612, 613, 1207, 614,
	1208, 1125, 615, 616, 617, 618, 0, 620, 621, 0,
	1108, 622, 623, 624, 626, 627, 625, 628, 1169, 629,
	0, 0, 630, 631, 632, 690, 1192, 1229, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1105, 0, 0, 0, 0,
	0, 1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100, 0,
	0, 0, 0, 0, 0, 1098, 1099, 1974, 279, 281,
	280, 282, 283, 284, 285, 1131, 286, 287, 0, 1129,
	0, 0, 0, 1171, 1135, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 1184, 0,
	296, 1191, 297, 1190, 0, 1201, 298, 299, 300, 301,
	302, 303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0,
	305, 306, 1177, 0, 1158, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 1161, 1159, 1160,
	1167, 1163, 1162, 1166, 332, 333, 334, 335, 336, 1194,
	337, 339, 1188, 1187, 1107, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1179,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1113, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1202, 1203, 370, 1126, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1186, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 2766, 1213, 378,
	379, 380, 1199, 1200, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1209, 0, 1136, 391, 0,
	392, 393, 394, 395, 396, 1172, 1173, 1176, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1214, 407, 1181, 1182,
	0, 1142, 0, 408, 409, 1216, 1174, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1210, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 1165, 1164, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 1204,
	491, 492, 1114, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 1205, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1185,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 1115,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1168, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 1183, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1230, 591,
	592, 593, 594, 1206, 598, 599, 0, 600, 601, 1101,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 1195, 1196, 1197, 1198, 0, 619, 0,
	611, 612, 613, 1207, 614, 1208, 1125, 615, 616, 617,
	618, 0, 620, 621, 0, 1108, 622, 623, 624, 626,
	627, 625, 628, 1169, 629, 0, 0, 630, 631, 632,
	690, 1192, 1229, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1105, 0, 0, 0, 0, 0, 1147, 1119, 1120, 1121,
	1117, 1118, 1130, 1100, 0, 0, 0, 0, 0, 0,
	1098, 1099, 0, 279, 281, 280, 282, 283, 284, 285,
	1131, 286, 287, 0, 1129, 0, 0, 0, 1171, 1135,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 1184, 0, 296, 1191, 297, 1190, 0,
	1201, 298, 299, 300, 301, 302, 303, 1137, 1170, 1102,
	304, 1231, 1232, 651, 0, 305, 306, 1177, 0, 1158,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332,
	333, 334, 335, 336, 1194, 337, 339, 1188, 1187, 1107,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1179, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1113, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1202,
	1203, 370, 1126, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1186, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 1199, 1200, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1209, 0, 1136, 391, 0, 392, 393, 394, 395, 396,
	1172, 1173, 1176, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1214, 407, 1181, 1182, 0, 1142, 0, 408, 409,
	1216, 1174, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1210, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 1165, 1164, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 1104, 278, 1223, 477,
	478, 1127, 1175, 479, 1189, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 1204, 491, 492, 1114, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 1205, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1185, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 1115, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1168, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 1183, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1230, 591, 592, 593, 594, 1206, 598,
	599, 0, 600, 601, 1101, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 1195, 1196,
	1197, 1198, 0, 619, 0, 611, 612, 613, 1207, 614,
	1208, 1125, 615, 616, 617, 618, 0, 620, 621, 0,
	1108, 622, 623, 624, 626, 627, 625, 628, 1169, 629,
	0, 0, 630, 631, 632, 690, 1192, 1229, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1100, 0,
	0, 0, 0, 0, 0, 1098, 1099, 0, 0, 0,
	0, 0, 0, 0, 0, 1131, 1903, 0, 2771, 1129,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 1171, 1135, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 1184, 0, 296,
	1191, 297, 1190, 0, 1201, 298, 299, 300, 301, 302,
	303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305,
	306, 1177, 0, 1158, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 332, 333, 334, 335, 336, 1194, 337,
	339, 1188, 1187, 1107, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1179, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1113, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1202, 1203, 370, 1126, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1186, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 1199, 1200, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1209, 0, 1136, 391, 0, 392,
	393, 394, 395, 396, 1172, 1173, 1176, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1214, 407, 1181, 1182, 0,
	1142, 0, 408, 409, 1216, 1174, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1210, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	1165, 1164, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 1204, 491,
	492, 1114, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 1205, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1185, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 1115, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1168, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 1183, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1230, 591, 592,
	593, 594, 1206, 598, 599, 0, 600, 601, 1101, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 1195, 1196, 1197, 1198, 0, 619, 0, 611,
	612, 613, 1207, 614, 1208, 1125, 615, 616, 617, 618,
	0, 620, 621, 0, 1108, 622, 623, 624, 626, 627,
	625, 628, 1169, 629, 0, 0, 630, 631, 632, 690,
	1192, 1229, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1105,
	0, 0, 0, 2769, 0, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 0, 279, 281, 280, 282, 283, 284, 285, 1131,
	286, 287, 0, 1129, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 620, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1105, 0, 0, 0, 2757, 0,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 0, 279, 281, 280,
	282, 283, 284, 285, 1131, 286, 287, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 1184, 0, 296,
	1191, 297, 1190, 0, 1201, 298, 299, 300, 301, 302,
	303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305,
	306, 1177, 0, 1158, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 332, 333, 334, 335, 336, 1194, 337,
	339, 1188, 1187, 1107, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1179, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1113, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1202, 1203, 370, 1126, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1186, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 1199, 1200, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1209, 0, 1136, 391, 0, 392,
	393, 394, 395, 396, 1172, 1173, 1176, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1214, 407, 1181, 1182, 0,
	1142, 0, 408, 409, 1216, 1174, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1210, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	1165, 1164, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 1204, 491,
	492, 1114, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 1205, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1185, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 1115, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1168, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 1183, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1230, 591, 592,
	593, 594, 1206, 598, 599, 0, 600, 601, 1101, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 1195, 1196, 1197, 1198, 0, 619, 0, 611,
	612, 613, 1207, 614, 1208, 1125, 615, 616, 617, 618,
	0, 620, 621, 0, 1108, 622, 623, 624, 626, 627,
	625, 628, 1169, 629, 0, 0, 630, 631, 632, 690,
	1192, 1229, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1105,
	0, 0, 0, 2745, 0, 1147, 1119, 1120, 1121, 1117,
	1118, 1130, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 0, 279, 281, 280, 282, 283, 284, 285, 1131,
	286, 287, 0, 1129, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 337, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 395, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 620, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1105, 0, 0, 0, 2743, 0,
	2734, 2741, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 0, 279, 281, 280,
	282, 283, 284, 285, 1131, 286, 287, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 1184, 0, 296,
	1191, 297, 1190, 0, 1201, 298, 299, 300, 301, 302,
	303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305,
	306, 1177, 0, 1158, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 332, 333, 334, 335, 336, 1194, 2737,
	339, 1188, 1187, 1107, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1179, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1113, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1202, 1203, 370, 1126, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1186, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 1199, 1200, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1209, 0, 1136, 391, 0, 392,
	393, 394, 2738, 396, 1172, 1173, 1176, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1214, 407, 1181, 1182, 0,
	1142, 0, 408, 409, 1216, 1174, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1210, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	1165, 1164, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 2739, 444, 2736, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 1204, 491,
	492, 1114, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 1205, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1185, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 1115, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 2740, 0, 568, 569, 567, 570, 571, 572,
	1168, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 1183, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1230, 591, 592,
	593, 594, 1206, 598, 599, 0, 600, 601, 1101, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 1195, 1196, 1197, 1198, 0, 619, 0, 611,
	612, 613, 1207, 614, 1208, 1125, 615, 616, 617, 618,
	0, 620, 621, 0, 1108, 622, 623, 624, 626, 627,
	625, 628, 1169, 629, 0, 0, 630, 631, 632, 690,
	1192, 1229, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 2735, 642, 1105,
	0, 0, 0, 2731, 0, 2734, 2741, 1120, 1121, 1117,
	1118, 1130, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 0, 279, 281, 280, 282, 283, 284, 285, 1131,
	286, 287, 0, 1129, 0, 0, 0, 1171, 1135, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 1184, 0, 296, 1191, 297, 1190, 0, 1201,
	298, 299, 300, 301, 302, 303, 1137, 1170, 1102, 304,
	1231, 1232, 651, 0, 305, 306, 1177, 0, 1158, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333,
	334, 335, 336, 1194, 2737, 339, 1188, 1187, 1107, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1179, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1113, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1202, 1203,
	370, 1126, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1186, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 1199, 1200, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1209,
	0, 1136, 391, 0, 392, 393, 394, 2738, 396, 1172,
	1173, 1176, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1214, 407, 1181, 1182, 0, 1142, 0, 408, 409, 1216,
	1174, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1210, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 1165, 1164, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 2739, 444,
	2736, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 1104, 278, 1223, 477, 478,
	1127, 1175, 479, 1189, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 1204, 491, 492, 1114, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 1205, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1185, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 1115, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 2740, 0, 568,
	569, 567, 570, 571, 572, 1168, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	1183, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1230, 591, 592, 593, 594, 1206, 598, 599,
	0, 600, 601, 1101, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 1195, 1196, 1197,
	1198, 0, 619, 0, 611, 612, 613, 1207, 614, 1208,
	1125, 615, 616, 617, 618, 0, 620, 621, 0, 1108,
	622, 623, 624, 626, 627, 625, 628, 1169, 629, 0,
	0, 630, 631, 632, 690, 1192, 1229, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 2735, 642, 1105, 0, 0, 0, 0, 0,
	1147, 1119, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0,
	0, 0, 0, 0, 1098, 1099, 0, 279, 281, 280,
	282, 283, 284, 285, 1131, 286, 287, 0, 1129, 0,
	0, 0, 1171, 1135, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 1184, 0, 296,
	1191, 297, 1190, 0, 1201, 298, 299, 300, 301, 302,
	303, 1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305,
	306, 1177, 0, 1158, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167,
	1163, 1162, 1166, 332, 333, 334, 335, 336, 1194, 337,
	339, 1188, 1187, 1107, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1179, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1113, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1202, 1203, 370, 1126, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1186, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 1199, 1200, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1209, 0, 1136, 391, 0, 392,
	393, 394, 395, 396, 1172, 1173, 1176, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1214, 407, 1181, 1182, 0,
	1142, 0, 408, 409, 1216, 1174, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1210, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	1165, 1164, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	1104, 278, 1223, 477, 478, 1127, 1175, 479, 1189, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 1204, 491,
	492, 1114, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 1205, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1185, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 1115, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1168, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 1183, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1230, 591, 592,
	593, 594, 1206, 598, 599, 0, 600, 601, 1101, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 1195, 1196, 1197, 1198, 0, 619, 0, 611,
	612, 613, 1207, 614, 1208, 1125, 615, 616, 617, 618,
	0, 620, 621, 0, 1108, 622, 623, 624, 626, 627,
	625, 628, 1169, 629, 0, 0, 630, 631, 632, 690,
	1192, 1229, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1100, 0, 0, 0, 0, 0, 0, 1098,
	1099, 0, 0, 0, 0, 0, 0, 1911, 0, 1131,
	0, 0, 0, 1129, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 2486, 286,
	287, 0, 0, 0, 0, 0, 1171, 1135, 0, 0,
	0, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 1184, 0, 296, 1191, 297, 1190, 0, 1201, 298,
	299, 300, 301, 302, 303, 1137, 1170, 1102, 304, 1231,
	1232, 651, 0, 305, 306, 1177, 0, 1158, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1212, 329, 330, 331,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334,
	335, 336, 1194, 337, 339, 1188, 1187, 1107, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1179, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1113, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1202, 1203, 370,
	1126, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1186, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1213, 378, 379, 380, 1199, 1200, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1209, 0,
	1136, 391, 0, 392, 393, 394, 395, 396, 1172, 1173,
	1176, 480, 1215, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1214,
	407, 1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1210, 1219, 424, 425, 1220, 0, 426, 427, 428,
	429, 430, 431, 434, 1165, 1164, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 1104, 278, 1223, 477, 478, 1127,
	1175, 479, 1189, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 1224,
	490, 1225, 1204, 491, 492, 1114, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 1205, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1185, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 1115, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1168, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 1183,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1230, 591, 592, 593, 594, 1206, 598, 599, 0,
	600, 601, 1101, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 1195, 1196, 1197, 1198,
	0, 619, 0, 611, 612, 613, 1207, 614, 1208, 1125,
	615, 616, 617, 618, 0, 620, 621, 0, 1108, 622,
	623, 624, 626, 627, 625, 628, 1169, 629, 0, 0,
	630, 631, 632, 690, 1192, 1229, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1105, 0, 0, 0, 2448, 0, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0, 0,
	0, 0, 0, 1098, 1099, 0, 279, 281, 280, 282,
	283, 284, 285, 1131, 286, 287, 0, 1129, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 1184, 0, 296, 1191,
	297, 1190, 0, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 1107, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1104,
	278, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	1114, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 1115, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 1101, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	620, 621, 0, 1108, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1105, 0,
	0, 0, 2421, 0, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	0, 279, 281, 280, 282, 283, 284, 285, 1131, 286,
	287, 0, 1129, 0, 0, 0, 1171, 1135, 0, 0,
	0, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 1184, 0, 296, 1191, 297, 1190, 0, 1201, 298,
	299, 300, 301, 302, 303, 1137, 1170, 1102, 304, 1231,
	1232, 651, 0, 305, 306, 1177, 0, 1158, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1212, 329, 330, 331,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334,
	335, 336, 1194, 337, 339, 1188, 1187, 1107, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1179, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1113, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1202, 1203, 370,
	1126, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1186, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1213, 378, 379, 380, 1199, 1200, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1209, 0,
	1136, 391, 0, 392, 393, 394, 395, 396, 1172, 1173,
	1176, 480, 1215, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1214,
	407, 1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1210, 1219, 424, 425, 1220, 0, 426, 427, 428,
	429, 430, 431, 434, 1165, 1164, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 1104, 278, 1223, 477, 478, 1127,
	1175, 479, 1189, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 1224,
	490, 1225, 1204, 491, 492, 1114, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 1205, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1185, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 1115, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1168, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 1183,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1230, 591, 592, 593, 594, 1206, 598, 599, 0,
	600, 601, 1101, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 1195, 1196, 1197, 1198,
	0, 619, 0, 611, 612, 613, 1207, 614, 1208, 1125,
	615, 616, 617, 618, 0, 620, 621, 0, 1108, 622,
	623, 624, 626, 627, 625, 628, 1169, 629, 0, 0,
	630, 631, 632, 690, 1192, 1229, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1105, 0, 0, 0, 1749, 0, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0, 0,
	0, 0, 0, 1098, 1099, 0, 279, 281, 280, 282,
	283, 284, 285, 1131, 286, 287, 0, 1129, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 1184, 0, 296, 1191,
	297, 1190, 0, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 1107, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1104,
	278, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	1114, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 1115, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 1101, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	620, 621, 0, 1108, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1105, 0,
	0, 0, 1678, 0, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	0, 279, 281, 280, 282, 283, 284, 285, 1131, 286,
	287, 0, 1129, 0, 0, 0, 1171, 1135, 0, 0,
	0, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 1184, 0, 296, 1191, 297, 1190, 0, 1201, 298,
	299, 300, 301, 302, 303, 1137, 1170, 1102, 304, 1231,
	1232, 651, 0, 305, 306, 1177, 0, 1158, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1212, 329, 330, 331,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334,
	335, 336, 1194, 337, 339, 1188, 1187, 1107, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1179, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1113, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1202, 1203, 370,
	1126, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1186, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1213, 378, 379, 380, 1199, 1200, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1209, 0,
	1136, 391, 0, 392, 393, 394, 395, 396, 1172, 1173,
	1176, 480, 1215, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1214,
	407, 1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1210, 1219, 424, 425, 1220, 0, 426, 427, 428,
	429, 430, 431, 434, 1165, 1164, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 1104, 278, 1223, 477, 478, 1127,
	1175, 479, 1189, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 1224,
	490, 1225, 1204, 491, 492, 1114, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 1205, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1185, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 1115, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1168, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 1183,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1230, 591, 592, 593, 594, 1206, 598, 599, 0,
	600, 601, 1101, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 1195, 1196, 1197, 1198,
	0, 619, 0, 611, 612, 613, 1207, 614, 1208, 1125,
	615, 616, 617, 618, 0, 620, 621, 0, 1108, 622,
	623, 624, 626, 627, 625, 628, 1169, 629, 0, 0,
	630, 631, 632, 690, 1192, 1229, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1105, 0, 0, 0, 1673, 0, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0, 0,
	0, 0, 0, 1098, 1099, 0, 279, 281, 280, 282,
	283, 284, 285, 1131, 286, 287, 0, 1129, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 1184, 0, 296, 1191,
	297, 1190, 0, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 1107, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1104,
	278, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	1114, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 1115, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 1101, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	620, 621, 0, 1108, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1105, 0,
	0, 0, 1660, 0, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	0, 279, 281, 280, 282, 283, 284, 285, 1131, 286,
	287, 0, 1129, 0, 0, 0, 1171, 1135, 0, 0,
	0, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 1184, 0, 296, 1191, 297, 1190, 0, 1201, 298,
	299, 300, 301, 302, 303, 1137, 1170, 1102, 304, 1231,
	1232, 651, 0, 305, 306, 1177, 0, 1158, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1212, 329, 330, 331,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334,
	335, 336, 1194, 337, 339, 1188, 1187, 1107, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1179, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1113, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1202, 1203, 370,
	1126, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1186, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1213, 378, 379, 380, 1199, 1200, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1209, 0,
	1136, 391, 0, 392, 393, 394, 395, 396, 1172, 1173,
	1176, 480, 1215, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1214,
	407, 1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1210, 1219, 424, 425, 1220, 0, 426, 427, 428,
	429, 430, 431, 434, 1165, 1164, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 1104, 278, 1223, 477, 478, 1127,
	1175, 479, 1189, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 1224,
	490, 1225, 1204, 491, 492, 1114, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 1205, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1185, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 1115, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1168, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 1183,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1230, 591, 592, 593, 594, 1206, 598, 599, 0,
	600, 601, 1101, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 1195, 1196, 1197, 1198,
	0, 619, 0, 611, 612, 613, 1207, 614, 1208, 1125,
	615, 616, 617, 618, 0, 620, 621, 0, 1108, 622,
	623, 624, 626, 627, 625, 628, 1169, 629, 0, 0,
	630, 631, 632, 690, 1192, 1229, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1105, 0, 0, 0, 1655, 0, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0, 0,
	0, 0, 0, 1098, 1099, 0, 279, 281, 280, 282,
	283, 284, 285, 1131, 286, 287, 0, 1129, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 1184, 0, 296, 1191,
	297, 1190, 0, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 1107, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1104,
	278, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	1114, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 1115, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 1101, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	620, 621, 0, 1108, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1105, 0,
	0, 0, 1556, 0, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	0, 279, 281, 280, 282, 283, 284, 285, 1131, 286,
	287, 0, 1129, 0, 0, 0, 1171, 1135, 0, 0,
	0, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 1184, 0, 296, 1191, 297, 1190, 0, 1201, 298,
	299, 300, 301, 302, 303, 1137, 1170, 1102, 304, 1231,
	1232, 651, 0, 305, 306, 1177, 0, 1158, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1212, 329, 330, 331,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334,
	335, 336, 1194, 337, 339, 1188, 1187, 1107, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1179, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1113, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1202, 1203, 370,
	1126, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1186, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1213, 378, 379, 380, 1199, 1200, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1209, 0,
	1136, 391, 0, 392, 393, 394, 395, 396, 1555, 1173,
	1176, 480, 1215, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1214,
	407, 1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1210, 1219, 424, 425, 1220, 0, 426, 427, 428,
	429, 430, 431, 434, 1165, 1164, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 1104, 278, 1223, 477, 478, 1127,
	1175, 479, 1189, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 1224,
	490, 1225, 1204, 491, 492, 1114, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 1205, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1185, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 1115, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1168, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 1183,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1230, 591, 592, 593, 594, 1206, 598, 599, 0,
	600, 601, 1101, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 1195, 1196, 1197, 1198,
	0, 619, 0, 611, 612, 613, 1207, 614, 1208, 1125,
	615, 616, 617, 618, 0, 620, 621, 0, 1108, 622,
	623, 624, 626, 627, 625, 628, 1169, 629, 0, 0,
	630, 631, 632, 690, 1192, 1229, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1105, 0, 0, 0, 1550, 0, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0, 0,
	0, 0, 0, 1098, 1099, 0, 279, 281, 280, 282,
	283, 284, 285, 1131, 286, 287, 0, 1129, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 1184, 0, 296, 1191,
	297, 1190, 0, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 1107, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1549, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1104,
	278, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	1114, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 1115, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 1101, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	620, 621, 0, 1108, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1105, 0,
	0, 0, 1543, 0, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	0, 279, 281, 280, 282, 283, 284, 285, 1131, 286,
	287, 0, 1129, 0, 0, 0, 1171, 1135, 0, 0,
	0, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 1184, 0, 296, 1191, 297, 1190, 0, 1201, 298,
	299, 300, 301, 302, 303, 1137, 1170, 1102, 304, 1231,
	1232, 651, 0, 305, 306, 1177, 0, 1158, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1212, 329, 330, 331,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334,
	335, 336, 1194, 337, 339, 1188, 1187, 1107, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1179, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1113, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1202, 1203, 370,
	1126, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1186, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1213, 378, 379, 380, 1199, 1200, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1209, 0,
	1136, 391, 0, 392, 393, 394, 395, 396, 1172, 1173,
	1176, 480, 1215, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1214,
	407, 1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1210, 1219, 424, 425, 1220, 0, 426, 427, 428,
	429, 430, 431, 434, 1165, 1164, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 1104, 278, 1223, 477, 478, 1127,
	1175, 479, 1189, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 1224,
	490, 1225, 1204, 491, 492, 1114, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 1205, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1185, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 1115, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1168, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 1183,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1230, 591, 592, 593, 594, 1206, 598, 599, 0,
	600, 601, 1101, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 1195, 1196, 1197, 1198,
	0, 619, 0, 611, 612, 613, 1207, 614, 1208, 1125,
	615, 616, 617, 618, 0, 620, 621, 0, 1108, 622,
	623, 624, 626, 627, 625, 628, 1169, 629, 0, 0,
	630, 631, 632, 690, 1192, 1229, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1105, 0, 0, 0, 1505, 0, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0, 0,
	0, 0, 0, 1098, 1099, 0, 279, 281, 280, 282,
	283, 284, 285, 1131, 286, 287, 0, 1129, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 1184, 0, 296, 1191,
	297, 1190, 0, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 1107, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 1509, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1104,
	278, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	1114, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 1510, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 1115, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 1101, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 1508, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	620, 621, 0, 1108, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1105, 0,
	0, 0, 1354, 0, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	0, 279, 281, 280, 282, 283, 284, 285, 1131, 286,
	287, 0, 1129, 0, 0, 0, 1171, 1135, 0, 0,
	0, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 1184, 0, 296, 1191, 297, 1190, 0, 1201, 298,
	299, 300, 301, 302, 303, 1137, 1170, 1102, 304, 1231,
	1232, 651, 0, 305, 306, 1177, 0, 1158, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1212, 329, 330, 331,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334,
	335, 336, 1194, 337, 339, 1188, 1187, 1107, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1179, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1113, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1202, 1203, 370,
	1126, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1186, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1213, 378, 379, 380, 1199, 1200, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1209, 0,
	1136, 391, 0, 392, 393, 394, 395, 396, 1172, 1173,
	1176, 480, 1215, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1214,
	407, 1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1210, 1219, 424, 425, 1220, 0, 426, 427, 428,
	429, 430, 431, 434, 1165, 1164, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 1104, 278, 1223, 477, 478, 1127,
	1175, 479, 1189, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 1224,
	490, 1225, 1204, 491, 492, 1114, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 1205, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1185, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 1115, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1168, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 1183,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1230, 591, 592, 593, 594, 1206, 598, 599, 0,
	600, 601, 1101, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 1195, 1196, 1197, 1198,
	0, 619, 0, 611, 612, 613, 1207, 614, 1208, 1125,
	615, 616, 617, 618, 0, 620, 621, 0, 1108, 622,
	623, 624, 626, 627, 625, 628, 1169, 629, 0, 0,
	630, 631, 632, 690, 1192, 1229, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1105, 0, 0, 0, 0, 0, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0, 0,
	0, 0, 0, 1098, 1099, 0, 279, 281, 280, 282,
	283, 284, 285, 1131, 286, 287, 0, 1129, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 1184, 0, 296, 1191,
	297, 1190, 0, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 1107, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1104,
	278, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	1114, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 1115, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 1101, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	620, 621, 0, 1108, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1105, 0,
	0, 0, 0, 0, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	0, 279, 281, 280, 282, 283, 284, 285, 1131, 286,
	287, 0, 1129, 0, 0, 0, 1171, 1135, 0, 0,
	0, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 1184, 0, 296, 1191, 297, 1190, 0, 1201, 298,
	299, 300, 301, 302, 303, 1137, 1170, 1102, 304, 1231,
	1232, 651, 0, 305, 306, 1177, 0, 1158, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1212, 329, 330, 4827,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334,
	335, 336, 1194, 337, 339, 1188, 1187, 1107, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1179, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1113, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1202, 1203, 370,
	1126, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1186, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1213, 378, 379, 380, 1199, 1200, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1209, 0,
	1136, 391, 0, 392, 393, 394, 395, 396, 1172, 1173,
	1176, 480, 1215, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1214,
	407, 1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1210, 1219, 424, 425, 1220, 0, 426, 427, 428,
	429, 430, 431, 434, 1165, 1164, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 1104, 278, 1223, 477, 478, 1127,
	1175, 479, 1189, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 1224,
	490, 1225, 1204, 491, 492, 1114, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 1205, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1185, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 1115, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1168, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 1183,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1230, 591, 592, 593, 594, 1206, 598, 599, 0,
	600, 601, 1101, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 1195, 1196, 1197, 1198,
	0, 619, 0, 611, 612, 613, 1207, 614, 1208, 1125,
	615, 616, 617, 618, 0, 4826, 621, 0, 1108, 622,
	623, 624, 626, 627, 625, 628, 1169, 629, 0, 0,
	630, 631, 632, 690, 1192, 1229, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1105, 0, 0, 0, 0, 0, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0, 0,
	0, 0, 0, 1098, 1099, 0, 279, 281, 280, 282,
	283, 284, 285, 1131, 286, 287, 0, 1129, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 4825, 1184, 0, 296, 1191,
	297, 1190, 0, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 4827, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 1107, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1104,
	278, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	1114, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 1115, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 1101, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	4826, 621, 0, 1108, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1105, 0,
	0, 0, 0, 0, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	0, 279, 281, 280, 282, 283, 284, 285, 1131, 286,
	287, 0, 1129, 0, 0, 0, 1171, 1135, 0, 0,
	0, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 1184, 0, 296, 1191, 297, 1190, 0, 1201, 298,
	299, 300, 301, 302, 303, 1137, 1170, 1102, 304, 1231,
	1232, 651, 0, 305, 306, 1177, 0, 1158, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1212, 329, 4438, 331,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334,
	335, 336, 1194, 337, 339, 1188, 1187, 1107, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1179, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1113, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1202, 1203, 370,
	1126, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1186, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1213, 378, 379, 380, 1199, 1200, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1209, 0,
	4439, 391, 0, 392, 393, 394, 395, 396, 1172, 1173,
	1176, 480, 1215, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1214,
	407, 1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1210, 1219, 424, 425, 1220, 0, 426, 427, 428,
	429, 430, 431, 434, 1165, 1164, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 1104, 278, 1223, 477, 478, 1127,
	1175, 479, 1189, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 1224,
	490, 1225, 1204, 491, 492, 1114, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 1205, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1185, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1226, 546, 547, 548,
	4437, 550, 1115, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1168, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 1183,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1230, 591, 592, 593, 594, 1206, 598, 599, 0,
	600, 601, 1101, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 1195, 1196, 1197, 1198,
	0, 619, 0, 611, 612, 613, 1207, 614, 1208, 1125,
	615, 616, 617, 618, 0, 620, 621, 0, 1108, 622,
	623, 624, 626, 627, 625, 628, 1169, 629, 0, 0,
	630, 631, 632, 690, 1192, 1229, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1105, 0, 0, 0, 0, 0, 1147,
	1119, 1120, 1121, 3228, 3229, 1130, 1100, 0, 0, 0,
	0, 0, 0, 1098, 1099, 0, 279, 281, 280, 282,
	283, 284, 285, 1131, 286, 287, 0, 1129, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 1184, 0, 296, 1191,
	297, 1190, 0, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 1107, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1104,
	278, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	1114, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 1115, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 1101, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	620, 621, 0, 1108, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1105, 0,
	0, 0, 0, 0, 1147, 1119, 1120, 1121, 3226, 3227,
	1130, 1100, 0, 0, 0, 0, 0, 0, 1098, 1099,
	0, 279, 281, 280, 282, 283, 284, 285, 1131, 286,
	287, 0, 1129, 0, 0, 0, 1171, 1135, 0, 0,
	0, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 1184, 0, 296, 1191, 297, 1190, 0, 1201, 298,
	299, 300, 301, 302, 303, 1137, 1170, 1102, 304, 1231,
	1232, 651, 0, 305, 306, 1177, 0, 1158, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1212, 329, 330, 331,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334,
	335, 336, 1194, 337, 339, 1188, 1187, 1107, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1179, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1113, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1202, 1203, 370,
	1126, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1186, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1213, 378, 379, 380, 1199, 1200, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1209, 0,
	1136, 391, 0, 392, 393, 394, 395, 396, 1172, 1173,
	1176, 480, 1215, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1214,
	407, 1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1210, 1219, 424, 425, 1220, 0, 426, 427, 428,
	429, 430, 431, 434, 1165, 1164, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 1104, 278, 1223, 477, 478, 1127,
	1175, 479, 1189, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 1224,
	490, 1225, 1204, 491, 492, 1114, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 1205, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1185, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 1115, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1168, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 1183,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1230, 591, 592, 593, 594, 1206, 598, 599, 0,
	600, 601, 1101, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 1195, 1196, 1197, 1198,
	0, 619, 0, 611, 612, 613, 1207, 614, 1208, 1125,
	615, 616, 617, 618, 0, 620, 621, 0, 1108, 622,
	623, 624, 626, 627, 625, 628, 1169, 629, 0, 0,
	630, 631, 632, 690, 1192, 1229, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1105, 0, 0, 0, 0, 0, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 1100, 0, 0, 0,
	0, 0, 0, 1098, 1099, 0, 279, 281, 280, 282,
	283, 284, 285, 1131, 286, 287, 0, 1129, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 1184, 0, 296, 1191,
	297, 1190, 0, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 1102, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 1107, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 1104,
	278, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	1114, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 1115, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 1101, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	620, 621, 0, 1108, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1105, 0,
	0, 0, 0, 0, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 1100, 0, 0, 0, 0, 0, 0, 2494, 2495,
	0, 279, 281, 280, 282, 283, 284, 285, 1131, 286,
	287, 0, 1129, 0, 0, 0, 1171, 1135, 0, 0,
	0, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 1184, 0, 296, 1191, 297, 1190, 0, 1201, 298,
	299, 300, 301, 302, 303, 1137, 1170, 0, 304, 1231,
	1232, 651, 0, 305, 306, 1177, 0, 1158, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1212, 329, 330, 331,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334,
	335, 336, 1194, 337, 339, 1188, 1187, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1179, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1113, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1202, 1203, 370,
	1126, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1186, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1213, 378, 379, 380, 1199, 1200, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1209, 0,
	1136, 391, 0, 392, 393, 394, 395, 396, 1172, 1173,
	1176, 480, 1215, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1214,
	407, 1181, 1182, 0, 1142, 0, 408, 409, 1216, 1174,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1210, 1219, 424, 425, 1220, 0, 426, 427, 428,
	429, 430, 431, 434, 1165, 1164, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 0, 278, 1223, 477, 478, 1127,
	1175, 479, 1189, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 1224,
	490, 1225, 1204, 491, 492, 1114, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 1205, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1185, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 1115, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1168, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 1183,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1230, 591, 592, 593, 594, 1206, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 1195, 1196, 1197, 1198,
	0, 619, 0, 611, 612, 613, 1207, 614, 1208, 1125,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 1169, 629, 0, 0,
	630, 631, 632, 690, 1192, 1229, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 1147,
	1119, 1120, 1121, 1117, 1118, 1130, 2753, 0, 0, 0,
	0, 0, 0, 2751, 2752, 0, 279, 281, 280, 282,
	283, 284, 285, 1131, 286, 287, 0, 1129, 0, 0,
	0, 1171, 1135, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 1184, 0, 296, 1191,
	297, 1190, 0, 1201, 298, 299, 300, 301, 302, 303,
	1137, 1170, 0, 304, 1231, 1232, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 1194, 337, 339,
	1188, 1187, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1179, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1113, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 1126, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1186, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	1199, 1200, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 1136, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 1181, 1182, 0, 1142,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 0,
	278, 1223, 477, 478, 1127, 1175, 479, 1189, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1185, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 3221, 3222, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 1183, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1230, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 1195, 1196, 1197, 1198, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 1125, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 690, 1192,
	1229, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 1147, 1119, 1120, 1121, 1117, 1118,
	1130, 0, 0, 0, 0, 0, 0, 0, 2157, 2158,
	0, 279, 281, 280, 282, 283, 284, 285, 1131, 286,
	287, 0, 1129, 0, 0, 0, 1171, 1135, 0, 0,
	0, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	0, 1184, 0, 296, 1191, 297, 1190, 0, 1201, 298,
	299, 300, 301, 302, 303, 1137, 1170, 1102, 304, 1231,
	1232, 651, 0, 305, 306, 1177, 0, 1158, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1212, 329, 330, 4827,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334,
	335, 336, 1194, 337, 339, 1188, 1187, 1107, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1179, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1113, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1202, 1203, 370,
	1126, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1186, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1213, 378, 379, 380, 1199, 1200, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1209, 0,
	1136, 391, 0, 392, 393, 394, 395, 396, 1172, 1173,
	1176, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1214,
	407, 1181, 1182, 0, 1142, 0, 408, 409, 0, 1174,
	0, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1210, 1219, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 1165, 1164, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 1104, 278, 0, 477, 478, 1127,
	1175, 479, 1189, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 1224,
	490, 1225, 1204, 491, 492, 1114, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 1205, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1185, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 1115, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1168, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 1183,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1230, 591, 592, 593, 594, 1206, 598, 599, 0,
	600, 601, 1101, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 1195, 1196, 1197, 1198,
	0, 619, 0, 611, 612, 613, 1207, 614, 1208, 1125,
	615, 616, 617, 618, 0, 4826, 621, 0, 1108, 622,
	623, 624, 626, 627, 625, 628, 1169, 629, 0, 0,
	630, 631, 632, 690, 1192, 1229, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 1091, 0, 1269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1098, 1099, 0, 279, 281, 280, 282,
	283, 284, 285, 1131, 286, 287, 0, 1129, 0, 0,
	0, 1171, 0, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 1170, 0, 304, 649, 650, 651, 0, 305, 306,
	1177, 0, 1158, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163,
	1162, 1166, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1202, 1203, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1209, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 1172, 1173, 1176, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1214, 407, 666, 667, 0, 668,
	0, 408, 409, 1216, 1174, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	1255, 420, 422, 421, 0, 423, 1210, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 1165,
	1164, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 0,
	278, 1223, 477, 478, 0, 1175, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 1261, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 1204, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 1205, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 680, 1263, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 238, 568, 569, 567, 570, 571, 572, 1168,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 1206, 598, 599, 0, 600, 601, 0, 597, 588,
	240, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 1207, 614, 1208, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 1169, 629, 0, 0, 630, 631, 632, 1644, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 232, 638, 639, 694, 640, 641, 642, 1269, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 1259, 0, 1998, 0,
	1171, 0, 0, 0, 0, 288, 289, 1211, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	1170, 0, 304, 649, 650, 651, 0, 305, 306, 1177,
	0, 1158, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1212, 329, 330, 331, 1161, 1159, 1160, 1167, 1163, 1162,
	1166, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1202, 1203, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1213, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1209, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 1172, 1173, 1176, 480, 1215, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1214, 407, 666, 667, 0, 668, 0,
	408, 409, 1216, 1174, 1217, 410, 411, 412, 1218, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1255,
	420, 422, 421, 0, 423, 1210, 1219, 424, 425, 1220,
	0, 426, 427, 428, 429, 430, 431, 434, 1165, 1164,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1221,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1222, 476, 464, 0, 278,
	1223, 477, 478, 0, 1175, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 1261, 485, 486, 487, 0, 0,
	488, 489, 673, 1224, 490, 1225, 1204, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	1205, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1226, 546, 547, 548, 549, 550, 680, 1263, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 238, 568, 569, 567, 570, 571, 572, 1168, 573,
	574, 556, 557, 575, 576, 1227, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	1206, 598, 599, 0, 600, 601, 0, 597, 588, 240,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	1207, 614, 1208, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	1169, 629, 0, 0, 630, 631, 632, 1644, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	232, 638, 639, 694, 640, 641, 642, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3385,
	0, 1269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1259, 0, 1998, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 1171, 0, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 1170, 0, 304, 649, 650, 651, 0,
	305, 306, 1177, 0, 1158, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 1161, 1159, 1160,
	1167, 1163, 1162, 1166, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1202, 1203, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1209, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1172, 1173, 1176, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1214, 407, 666, 667,
	0, 668, 0, 408, 409, 1216, 1174, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 1255, 420, 422, 421, 0, 423, 1210, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 1165, 1164, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 0, 278, 1223, 477, 478, 0, 1175, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 1261, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 1204,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 1205, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 680,
	1263, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1168, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 1206, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 1207, 614, 1208, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 1169, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1251, 0, 1269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1259, 0,
	1257, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 1171, 0, 0, 0,
	0, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 1170, 0, 304, 649,
	650, 651, 0, 305, 306, 1177, 0, 1158, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1212, 329, 330, 331,
	1161, 1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1202, 1203, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1213, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1209, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 1172, 1173,
	1176, 480, 1215, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1214,
	407, 666, 667, 0, 668, 0, 408, 409, 1216, 1174,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1255, 420, 422, 421, 0,
	423, 1210, 1219, 424, 425, 1220, 0, 426, 427, 428,
	429, 430, 431, 434, 1165, 1164, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 0, 278, 1223, 477, 478, 0,
	1175, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	1261, 485, 486, 487, 0, 0, 488, 489, 673, 1224,
	490, 1225, 1204, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 1205, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 680, 1263, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1168, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 1206, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 1207, 614, 1208, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 1169, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 1259, 0, 1257, 0, 1171, 0, 0, 0, 0,
	288, 289, 1211, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 1170, 0, 304, 649, 650,
	651, 0, 305, 306, 1177, 0, 1158, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1212, 329, 330, 331, 1161,
	1159, 1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1202, 1203, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1213, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1209, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 1172, 1173, 1176,
	480, 1215, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1214, 407,
	666, 667, 0, 668, 0, 408, 409, 1216, 1174, 1217,
	410, 411, 412, 1218, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1255, 420, 422, 421, 0, 423,
	1210, 1219, 424, 425, 1220, 0, 426, 427, 428, 429,
	430, 431, 434, 1165, 1164, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1221, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1222, 476, 464, 0, 278, 1223, 477, 478, 0, 1175,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 1261,
	485, 486, 487, 0, 0, 488, 489, 673, 1224, 490,
	1225, 1204, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 1205, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1226, 546, 547, 548, 549,
	550, 680, 1263, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1168, 573, 574, 556, 557, 575, 576,
	1227, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 1206, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 1207, 614, 1208, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 1169, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	1259, 0, 1257, 0, 1171, 0, 0, 0, 0, 288,
	289, 1211, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 1170, 0, 304, 649, 650, 651,
	0, 305, 306, 1177, 0, 1158, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1212, 329, 330, 331, 1161, 1159,
	1160, 1167, 1163, 1162, 1166, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1202, 1203, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1213,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1209, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1172, 1173, 1176, 480,
	1215, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1214, 407, 666,
	667, 0, 668, 0, 408, 409, 1216, 1174, 1217, 410,
	411, 412, 1218, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1210,
	1219, 424, 425, 1220, 0, 426, 427, 428, 429, 430,
	431, 434, 1165, 1164, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1221, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1222,
	476, 464, 0, 278, 1223, 477, 478, 0, 1175, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 1224, 490, 1225,
	1204, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 1205, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1226, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1168, 573, 574, 556, 557, 575, 576, 1227,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 1206, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 1207, 614, 1208, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 1169, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 4255, 0, 1171, 0, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 1170, 0, 304, 649, 650, 651, 0,
	305, 306, 1177, 0, 1158, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 1161, 1159, 1160,
	1167, 1163, 1162, 1166, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1202, 1203, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1209, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1172, 1173, 1176, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1214, 407, 666, 667,
	0, 668, 0, 408, 409, 1216, 1174, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1210, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 1165, 1164, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 0, 278, 1223, 477, 478, 0, 1175, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 1204,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 1205, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 680,
	1263, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1168, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 1206, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 1207, 614, 1208, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 1169, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 273, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 2598, 2599, 2600, 2617, 2618, 2619, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 2620, 0, 643, 0, 0, 0, 0, 288, 289,
	1895, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 1880, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 2610, 0, 315, 316, 317, 314, 318,
	0, 319, 2606, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	2611, 2612, 2613, 2614, 371, 372, 373, 658, 0, 0,
	2605, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 2615, 2616, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 2608, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 2609, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 1879,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 1091, 0, 1570,
	2595, 2596, 2597, 2621, 2607, 2601, 0, 2603, 2604, 2602,
	2589, 2590, 2591, 2592, 2593, 2594, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 1494, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 1214, 407, 666, 667, 0, 668,
	0, 408, 409, 1216, 669, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 0,
	0, 1223, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 238, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	240, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 1644, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 232, 638, 639, 694, 640, 641, 642, 0, 1641,
	233, 1570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 193, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	1211, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 1494, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1212, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1213, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 1215,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 1214, 407, 666, 667,
	0, 668, 0, 408, 409, 1216, 669, 1217, 410, 411,
	412, 1218, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 1219,
	424, 425, 1220, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1221, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1222, 476,
	464, 0, 0, 1223, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 1224, 490, 1225, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1226, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 238, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 1227, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 240, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	1644, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 232, 638, 639, 694, 640, 641, 642,
	1570, 1569, 233, 0, 0, 0, 1567, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	193, 0, 643, 0, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 1494, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 1214, 407, 666, 667, 0,
	668, 0, 408, 409, 1216, 669, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	0, 0, 1223, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 1224, 490, 1225, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1570,
	1569, 0, 0, 0, 0, 1567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 1668,
	0, 643, 0, 0, 0, 0, 288, 289, 1211, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 1494, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1212, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1213, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 1215, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 1214, 407, 666, 667, 0, 668,
	0, 408, 409, 1216, 669, 1217, 410, 411, 412, 1218,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 1219, 424, 425,
	1220, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1221, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1222, 476, 464, 0,
	0, 1223, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 1224, 490, 1225, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1226, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 1227, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1570, 1569,
	0, 0, 0, 0, 1567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 3698, 0,
	643, 0, 0, 0, 0, 288, 289, 1211, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 1494, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1212, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1213, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 1215, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 1214, 407, 666, 667, 0, 668, 0,
	408, 409, 1216, 669, 1217, 410, 411, 412, 1218, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 1219, 424, 425, 1220,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1221,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1222, 476, 464, 0, 0,
	1223, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 1224, 490, 1225, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 2362,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1226, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 1227, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1570, 2272, 0,
	0, 0, 0, 2273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 1668, 0, 643,
	0, 0, 0, 0, 288, 289, 1211, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	1494, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1212,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1213, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 1215, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 1214, 407, 666, 667, 0, 668, 0, 408,
	409, 1216, 669, 1217, 410, 411, 412, 1218, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 2271,
	422, 421, 0, 423, 670, 1219, 424, 425, 1220, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1221, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1222, 476, 464, 0, 0, 1223,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 1224, 490, 1225, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1226,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 1227, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1570, 1569, 0, 0,
	0, 0, 1567, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 1668, 0, 643, 0,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 1494,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 1214, 407, 666, 667, 0, 668, 0, 408, 409,
	1216, 669, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 0, 0, 1223, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1091, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 1650, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	238, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 240, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 1644, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 0, 273, 0, 232,
	638, 639, 694, 640, 641, 642, 0, 0, 233, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 193, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 0, 273, 3135, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 2012, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 4988, 0, 1171, 0,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 1170, 0,
	304, 649, 650, 651, 0, 305, 306, 1177, 0, 1158,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 1161, 1159, 1160, 1167, 1163, 1162, 1166, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1202,
	1203, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1209, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1172, 1173, 1176, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1214, 407, 666, 667, 0, 668, 0, 408, 409,
	1216, 1174, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1210, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 1165, 1164, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 0, 278, 1223, 477,
	478, 0, 1175, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 1204, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 1205, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1168, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 1206, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 1207, 614,
	1208, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 1169, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 273, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 273,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 3648, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	273, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 1638, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	273, 0, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 3123,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	273, 0, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 3805,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 921,
	0, 822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 2349,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 829, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 919, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 827, 602, 603, 604, 605, 606, 828, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	2056, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 832, 0, 0, 0, 0, 288, 289, 1211,
	290, 291, 292, 293, 294, 295, 0, 2062, 0, 296,
	2052, 297, 2068, 0, 2075, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 2078, 2079, 0, 0, 305,
	306, 0, 0, 1494, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1212, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 1194, 337,
	339, 2066, 2065, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1179, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 0, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 2064, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1213, 378, 379,
	380, 2073, 2074, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 0, 0, 0, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 480, 1215, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 1214, 407, 2059, 2060, 0,
	2055, 0, 408, 409, 1216, 0, 1217, 410, 411, 412,
	1218, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 0, 1219, 424,
	425, 1220, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1221, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1222, 476, 464,
	0, 0, 1223, 477, 478, 0, 0, 479, 2067, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 0, 1224, 490, 1225, 0, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 2049, 504, 505, 506, 2050, 507,
	508, 509, 0, 510, 0, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 2063, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1226, 546, 547, 548, 549, 550, 0, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 1227, 577, 578,
	579, 580, 581, 582, 583, 2061, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 2077, 591, 592,
	593, 594, 0, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 2069, 2070, 2071, 2072, 0, 619, 0, 611,
	612, 613, 0, 614, 0, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 0,
	2053, 2076, 0, 634, 633, 635, 0, 636, 637, 0,
	0, 0, 0, 638, 639, 0, 640, 641, 642, 822,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 3925, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 2043, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 829, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 3924, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	827, 602, 603, 604, 605, 606, 828, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 3923, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 822, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 279, 281,
	280, 282, 283, 284, 285, 2083, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	832, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 829, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 2082,
	563, 564, 565, 566, 0, 2084, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 827, 602, 603, 604, 605, 606, 828, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 2081,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 822, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	279, 281, 280, 282, 283, 284, 285, 2034, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 832, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 829,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 2033, 563, 564, 565, 566, 0, 2035, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 827, 602, 603, 604, 605, 606,
	828, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 2032, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 820, 0, 822, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 832, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	829, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 827, 602, 603, 604, 605,
	606, 828, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 822, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 832, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 829, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 827, 602, 603,
	604, 605, 606, 828, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 822, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 832, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 829, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 2400, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 2401, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 827,
	602, 603, 604, 605, 606, 828, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 2402, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	273, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 832,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 1570, 1569, 0, 0, 0,
	0, 1567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 832, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 1494, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	1214, 407, 666, 667, 0, 668, 0, 408, 409, 1216,
	669, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 0, 0, 1223, 477, 478,
	4013, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1570, 1569, 0, 0, 0, 0,
	1567, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 1494, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1212, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1213, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 1215, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 1214,
	407, 666, 667, 0, 668, 0, 408, 409, 1216, 669,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 1219, 424, 425, 1220, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 0, 0, 1223, 477, 478, 3598,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 1224,
	490, 1225, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1698, 0, 1570, 1569, 0, 0, 0,
	0, 1567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 1494, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 276, 0, 0, 0, 0, 0, 1697, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	1214, 407, 666, 667, 0, 668, 0, 408, 409, 1216,
	669, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 0, 0, 1223, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 1696, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 1695, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1563, 0, 1570, 1569, 0, 0,
	0, 0, 1567, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 1494,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1565, 664, 665, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 1214, 407, 666, 667, 0, 668, 0, 408, 409,
	1216, 669, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 0, 0, 1223, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1570, 1569, 0, 0, 0,
	0, 1567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 1211, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 1494, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1212, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1213, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 1215, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	1214, 407, 666, 667, 0, 668, 0, 408, 409, 1216,
	669, 1217, 410, 411, 412, 1218, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 1219, 424, 425, 1220, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1221, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1222, 476, 464, 0, 0, 1223, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	1224, 490, 1225, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1226, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 1227, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 1570, 1569, 0, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 1211, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 1494, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1212, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1213, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 1215, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 1214,
	407, 666, 667, 0, 668, 0, 408, 409, 1216, 669,
	1217, 410, 411, 412, 1218, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 1219, 424, 425, 1220, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1221, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1222, 476, 464, 0, 0, 1223, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 1224,
	490, 1225, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1226, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 1227, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 1570, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 1211, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 1494,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1212, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1213, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 1215, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 1214, 407, 666, 667, 0, 668, 0, 408, 409,
	1216, 669, 1217, 410, 411, 412, 1218, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 1219, 424, 425, 1220, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1221, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1222, 476, 464, 0, 0, 1223, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 1224, 490, 1225, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1226, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 1227, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 273, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 2925, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 3640, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 2929, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 3639, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 2928, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 3636, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 3638, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 3635,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 2927, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 3637, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	273, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 2925, 305,
	306, 652, 0, 0, 2919, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 2921,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 2929,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 2928, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 2918, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 2927, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 2926, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 1775,
	0, 273, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 1774, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 1773, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 1776, 555, 562,
	563, 564, 565, 566, 0, 1772, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 1770, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 1771, 633, 635, 693, 636, 637,
	1498, 0, 273, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1500, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 1261, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1495, 0, 273, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 1497, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 1261,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1401, 0, 273, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 1403, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	1261, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 727, 0, 273, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 726, 284, 285, 715,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 718, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 724, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 720, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 714, 0, 273, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	715, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 718, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 719, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 720,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 273, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 279, 281, 280, 282, 283,
	284, 285, 715, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 718, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	719, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 720, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	273, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 279, 281, 280,
	282, 283, 284, 285, 715, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 718, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 4023, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 720, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 273, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 1261, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 273, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 3543, 476, 464, 0, 278, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 3093, 0, 273, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 3092,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 2369, 0, 273, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 273, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 2307,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 2314, 0, 273,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 2313, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 2300, 0,
	273, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 2302, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 273, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 2265, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 1261, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1616, 0, 273, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 1615, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1518, 0, 273, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 1511, 0, 273, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 1513,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 1337, 0, 273, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1336, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 1327, 0, 273, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 1326, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1324, 0, 273, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 1323, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 1319, 0, 273,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 1318, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 696, 0,
	273, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 264,
	0, 273, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 273, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 273, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 718, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 719, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 720, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 273, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 2409, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 273,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 2407, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 273, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 2405, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 273, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 2320, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 273, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 2108,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 273, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 2102, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 906, 0, 273, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 905,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 904,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	273, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 3639, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 4336, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 1365,
	0, 273, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	1368, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 1366, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 787, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 786, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 785,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 1369,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 783, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	1365, 0, 273, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 1368, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 1366,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 787, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 786, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	785, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	1369, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 783, 685, 686, 687, 0, 619,
	0, 611, 1367, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 705, 0, 273, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 704, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 703, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 273, 3135, 0, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 273, 4352, 0, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 273, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	4631, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 273, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 4227, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 273, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	3974, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 273,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 2806, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 273, 3135,
	0, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 3132, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	273, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 2226, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 786, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 785, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 783, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 273, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 279,
	281, 280, 282, 283, 284, 285, 2379, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 2367, 0, 273, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1671, 0, 273, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 1664, 0, 273, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 777, 0, 273, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 773, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 778, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 787, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 786,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 785, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 1649, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 783, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 1622, 0, 273, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 1621, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1606, 0, 273, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 1604, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 1599, 0, 273,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 1576, 0,
	273, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 1574, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 1561,
	0, 273, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	1523, 0, 273, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1503, 0, 273, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1371, 0, 273, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 786, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 785, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 783, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 1342, 0, 273, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 1341,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 1333, 0, 273, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 644, 645, 0, 296, 646, 297, 647, 0,
	648, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 649, 650, 651, 0, 305, 306, 652, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 653, 654, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1332, 664, 665, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 666, 667, 0, 668, 0, 408, 409,
	0, 669, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 670, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 0, 671, 479, 672, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	673, 0, 490, 0, 674, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	675, 504, 505, 506, 676, 507, 508, 509, 677, 510,
	678, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 679, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 273, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 279, 281, 280, 282, 283,
	284, 285, 1285, 286, 287, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 644, 645, 0, 296, 646, 297,
	647, 0, 648, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 649, 650, 651, 0, 305, 306, 652,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 653,
	654, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 666, 667, 0, 668, 0,
	408, 409, 0, 669, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 670, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 671, 479, 672, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 673, 0, 490, 0, 674, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 675, 504, 505, 506, 676, 507, 508, 509,
	677, 510, 678, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 679, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	273, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 279, 281, 280,
	282, 283, 284, 285, 792, 286, 287, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 644, 645, 0, 296,
	646, 297, 647, 0, 648, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 649, 650, 651, 0, 305,
	306, 652, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 653, 654, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 666, 667, 0,
	668, 0, 408, 409, 0, 669, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 670, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 0, 671, 479, 672, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 673, 0, 490, 0, 674, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 675, 504, 505, 506, 676, 507,
	508, 509, 677, 510, 678, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 679, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 777,
	0, 273, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 773, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 772, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 778,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 787, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 786, 547, 548, 549, 550, 774,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 785,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 775,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 783, 685, 686, 687, 0, 619, 0,
	611, 779, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	766, 0, 273, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 644, 645,
	0, 296, 646, 297, 647, 0, 648, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 649, 650, 651,
	0, 305, 306, 652, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 653, 654, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 666,
	667, 0, 668, 0, 408, 409, 0, 669, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 670,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 0, 671, 479,
	672, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 673, 0, 490, 0,
	674, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 675, 504, 505, 506,
	676, 507, 508, 509, 677, 510, 678, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	679, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 767, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 729, 0, 273, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 722, 0, 273, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	644, 645, 0, 296, 646, 297, 647, 0, 648, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 649,
	650, 651, 0, 305, 306, 652, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 653, 654, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 666, 667, 0, 668, 0, 408, 409, 0, 669,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 670, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 0,
	671, 479, 672, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 673, 0,
	490, 0, 674, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 675, 504,
	505, 506, 676, 507, 508, 509, 677, 510, 678, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 679, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 700, 0, 273, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 273, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 273,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 3668, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 273, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 786, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 785,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 783, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 273, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 3583, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 273, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 3559,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 273, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 3556, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 273,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 3510, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 273, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 3508, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 273, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 3496, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 273, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 3493,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 273, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 3103, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 273,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 644, 645, 0, 296, 646,
	297, 647, 0, 648, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 649, 650, 651, 0, 305, 306,
	652, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	653, 654, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 666, 667, 0, 668,
	0, 408, 409, 0, 669, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 670, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 0, 671, 479, 672, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 673, 0, 490, 0, 674, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 675, 504, 505, 506, 676, 507, 508,
	509, 677, 510, 678, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 679, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 533, 0, 534, 535, 536,
	537, 532, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 767, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 273, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 643, 0, 2338, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 644, 645, 0,
	296, 646, 297, 647, 0, 648, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 649, 650, 651, 0,
	305, 306, 652, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 653, 654, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 666, 667,
	0, 668, 0, 408, 409, 0, 669, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 670, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 0, 671, 479, 672,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 673, 0, 490, 0, 674,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 675, 504, 505, 506, 676,
	507, 508, 509, 677, 510, 678, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 679,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 533, 0, 534,
	535, 536, 537, 532, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 0, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 273, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 644,
	645, 0, 296, 646, 297, 647, 0, 648, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 649, 650,
	651, 0, 305, 306, 652, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 653, 654, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 1304, 664, 665,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	666, 667, 0, 668, 0, 408, 409, 0, 669, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	670, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 0, 671,
	479, 672, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 673, 0, 490,
	0, 674, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 675, 504, 505,
	506, 676, 507, 508, 509, 677, 510, 678, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 679, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 533,
	0, 534, 535, 536, 537, 532, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 273, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 644, 645, 0, 296, 646, 297, 647, 0, 648,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	649, 650, 651, 0, 305, 306, 652, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 653, 654, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 666, 667, 0, 668, 0, 408, 409, 0,
	669, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 670, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	0, 671, 479, 672, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 673,
	0, 490, 0, 674, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 675,
	504, 505, 506, 676, 507, 508, 509, 677, 510, 678,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 679, 522, 523, 1234, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 533, 0, 534, 535, 536, 537, 532, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 273, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 644, 645, 0, 296, 646, 297, 647,
	0, 648, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 649, 650, 651, 0, 305, 306, 652, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 653, 654,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 0, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 666, 667, 0, 668, 0, 408,
	409, 0, 669, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 670, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 0, 671, 479, 672, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 673, 0, 490, 0, 674, 491, 492, 484, 493,
	494, 0, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 675, 504, 505, 506, 676, 507, 508, 509, 677,
	510, 678, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 0, 520, 521, 679, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 533, 0, 534, 535, 536, 537, 532,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 0, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1612, 0, 1349, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 0, 297,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 0, 0, 0, 0, 305, 306, 0,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	1351, 332, 333, 334, 335, 336, 0, 337, 339, 0,
	0, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 0,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 0, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 0, 0, 0, 391, 0, 392, 393, 394,
	395, 396, 1611, 0, 0, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 0, 0, 0, 0, 0,
	408, 409, 0, 0, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 0, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 0, 479, 0, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 0, 0, 490, 0, 0, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 0, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 0, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1352, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 0, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 0, 591, 592, 593, 594,
	0, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	0, 0, 0, 0, 0, 619, 0, 611, 612, 613,
	0, 614, 0, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 0, 1526, 0,
	1349, 634, 633, 635, 0, 636, 637, 0, 0, 0,
	0, 638, 639, 0, 640, 641, 642, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	0, 297, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 0, 0, 0, 0, 305,
	306, 0, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 1351, 332, 333, 334, 335, 336, 0, 337,
	339, 0, 0, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 0, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 0, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 0, 0, 0, 391, 0, 392,
	393, 394, 395, 396, 1525, 0, 0, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 0, 0, 0,
	0, 0, 408, 409, 0, 0, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 0, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 0, 0, 479, 0, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 0, 0, 490, 0, 0, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 0, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 0, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 533, 0, 534, 535,
	536, 537, 532, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 0, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1352, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 0, 591, 592,
	593, 594, 0, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 609,
	0, 610, 0, 0, 0, 0, 0, 619, 0, 611,
	612, 613, 0, 614, 0, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 0,
	1347, 0, 1349, 634, 633, 635, 0, 636, 637, 0,
	0, 0, 0, 638, 639, 0, 640, 641, 642, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 0, 297, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 0, 0, 0,
	0, 305, 306, 0, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 1351, 332, 333, 334, 335, 336,
	0, 337, 339, 0, 0, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 0, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 0, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 0, 0, 0, 391,
	0, 392, 393, 394, 395, 396, 1346, 0, 0, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 0,
	0, 0, 0, 0, 408, 409, 0, 0, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 0,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 0, 0, 479,
	0, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 0, 0, 490, 0,
	0, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 0, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	0, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 533, 0,
	534, 535, 536, 537, 532, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	0, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1352, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 0, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 0,
	591, 592, 593, 594, 0, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 609, 0, 610, 0, 0, 0, 0, 0, 619,
	0, 611, 612, 613, 0, 614, 0, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 0, 2122, 0, 1349, 634, 633, 635, 0, 636,
	637, 0, 0, 0, 0, 638, 639, 0, 640, 641,
	642, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 0, 297, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 0,
	0, 0, 0, 305, 306, 0, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 1351, 332, 333, 334,
	335, 336, 0, 337, 339, 0, 0, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 0, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	0, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 0, 0,
	0, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 0, 0, 0, 0, 0, 408, 409, 0, 0,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 0, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 0,
	0, 479, 0, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 0, 0,
	490, 0, 0, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 0, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 0, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	533, 0, 534, 535, 536, 537, 532, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 0, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1352, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 0,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 0, 591, 592, 593, 594, 0, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 609, 0, 610, 0, 0, 0, 0,
	0, 619, 0, 611, 612, 613, 0, 614, 0, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 0, 2089, 0, 1349, 634, 633, 635,
	0, 636, 637, 0, 0, 0, 0, 638, 639, 0,
	640, 641, 642, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 0, 297, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 0, 0, 0, 0, 305, 306, 0, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 1351, 332,
	333, 334, 335, 336, 0, 337, 339, 0, 0, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 0, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 0, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	0, 0, 0, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 0, 0, 0, 0, 0, 408, 409,
	0, 0, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 0, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 0, 0, 479, 0, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	0, 0, 490, 0, 0, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	0, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 0, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 533, 0, 534, 535, 536, 537, 532, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 0, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1352, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 0, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 0, 591, 592, 593, 594, 0, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 610, 0, 0,
	0, 0, 0, 619, 0, 611, 612, 613, 0, 614,
	0, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 0, 0, 0, 1349, 634,
	633, 635, 0, 636, 637, 0, 0, 0, 0, 638,
	639, 0, 640, 641, 642, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 0, 297,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 0, 0, 0, 0, 305, 306, 0,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	1351, 332, 333, 334, 335, 336, 0, 337, 339, 0,
	0, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 0,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 0, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 0, 0, 0, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 0, 0, 0, 0, 0,
	408, 409, 0, 0, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 0, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 0, 0, 479, 0, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 0, 0, 490, 0, 0, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 0, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 0, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 533, 0, 534, 535, 536, 537,
	532, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 0, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1352, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 0, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 0, 591, 592, 593, 594,
	0, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 609, 0, 610,
	0, 0, 0, 0, 0, 619, 0, 611, 612, 613,
	0, 614, 0, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 0, 0, 0,
	0, 634, 633, 635, 0, 636, 637, 0, 0, 0,
	0, 638, 639, 0, 640, 641, 642, 1824, 1825, 0,
	1857, 1858, 1859, 1868, 1869, 1870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	1855, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 1824, 1825, 1874, 1857, 1858, 1859,
	1868, 1869, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1880, 0, 0, 1861, 1855, 0, 0,
	0, 0, 1826, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 1846, 1874, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 0, 0, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	1850, 1851, 1852, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 1850, 1851, 1852,
	0, 0, 0, 0, 0, 0, 1832, 0, 1865, 0,
	0, 1875, 0, 0, 0, 0, 0, 0, 1854, 1856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 1872, 0, 0, 0,
	0, 0, 0, 1841, 1842, 1865, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 1854, 1856, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 0, 1872, 0, 0, 1847, 0, 0, 0,
	1841, 1842, 0, 0, 0, 0, 0, 1824, 1825, 0,
	1857, 1858, 1859, 1868, 1869, 1870, 0, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	1855, 0, 0, 1847, 0, 0, 0, 1827, 0, 0,
	0, 0, 1873, 0, 0, 0, 1874, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	0, 1877, 1826, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 0, 1862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 1849,
	1850, 1851, 1852, 0, 0, 0, 0, 1866, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 1865, 0,
	0, 1875, 0, 0, 0, 0, 0, 0, 1854, 1856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 1879, 1872, 0, 0, 0,
	0, 0, 0, 1841, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 1838,
	1839, 1845, 1867, 1844, 1840, 0, 1837, 1835, 1836, 1828,
	1829, 1830, 1831, 1833, 1834, 0, 0, 0, 0, 0,
	4657, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 1839, 1845, 1867,
	1844, 1840, 1873, 1837, 1835, 1836, 1828, 1829, 1830, 1831,
	1833, 1834, 0, 0, 0, 0, 0, 4611, 0, 0,
	1862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1877, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 1825, 0, 1857, 1858,
	1859, 1868, 1869, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1861, 1855, 0,
	0, 0, 0, 0, 0, 1827, 0, 1853, 0, 0,
	0, 0, 0, 0, 1874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 1880, 0, 0, 0, 0, 0, 0, 1824, 1825,
	1826, 1857, 1858, 1859, 1868, 1869, 1870, 0, 0, 0,
	1846, 0, 0, 0, 0, 0, 0, 1866, 0, 1843,
	1861, 1855, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 1874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 1850, 1851,
	1852, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	1839, 1845, 1867, 1844, 1840, 0, 1837, 1835, 1836, 1828,
	1829, 1830, 1831, 1833, 1834, 0, 1865, 0, 0, 1875,
	4610, 0, 0, 0, 0, 0, 1854, 1856, 0, 0,
	1849, 1850, 1851, 1852, 0, 0, 0, 0, 0, 0,
	1832, 0, 1871, 0, 1872, 0, 0, 0, 0, 0,
	0, 1841, 1842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1863,
	1824, 1825, 0, 1857, 1858, 1859, 1868, 1869, 1870, 1865,
	0, 0, 1875, 0, 1847, 0, 0, 0, 0, 1854,
	1856, 0, 1861, 1855, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 1871, 0, 1872, 0, 1874,
	0, 0, 0, 0, 1841, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1880, 0, 0, 0,
	1873, 0, 1863, 0, 0, 1826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 1847, 1862, 0,
	0, 0, 0, 0, 1843, 0, 0, 0, 0, 1877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 1877, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 1850, 1851, 1852, 0, 0, 1848, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 1865, 0, 0, 1875, 0, 0, 0, 0, 0,
	0, 1854, 1856, 0, 0, 0, 1879, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 1871, 0, 1872,
	0, 0, 0, 0, 0, 0, 1841, 1842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 1839, 1845,
	1867, 1844, 1840, 0, 1837, 1835, 1836, 1828, 1829, 1830,
	1831, 1833, 1834, 0, 0, 1873, 0, 0, 4422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1877, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 1839, 1845, 1867, 1844, 1840, 0, 1837, 1835, 1836,
	1828, 1829, 1830, 1831, 1833, 1834, 0, 0, 0, 1824,
	1825, 4251, 1857, 1858, 1859, 1868, 1869, 1870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 1861, 1855, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 1874, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 1824, 1825, 0, 1857, 1858, 1859,
	1868, 1869, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1861, 1855, 0, 0,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1880, 1849, 1850, 1851, 1852, 0, 0, 0, 0, 1826,
	0, 1832, 1864, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 1838, 1839, 1845, 1867, 1844, 1840, 1843, 1837,
	1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0, 0,
	0, 0, 0, 4170, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 1875, 0, 0, 0, 0, 0, 0,
	1854, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 1872, 0,
	0, 0, 0, 0, 0, 1841, 1842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 0, 0, 1849, 1850, 1851, 1852,
	0, 0, 0, 0, 0, 0, 1832, 0, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	1825, 0, 1857, 1858, 1859, 1868, 1869, 1870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1861, 1855, 0, 0, 1865, 0, 0, 1875, 1827,
	0, 0, 0, 0, 1873, 1854, 1856, 0, 1874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 1862, 1872, 0, 1880, 0, 0, 0, 0,
	1841, 1842, 0, 1877, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 0, 0, 0, 1863, 0,
	0, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 0, 0,
	0, 1849, 1850, 1851, 1852, 0, 0, 0, 1877, 1866,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 1875, 0, 0, 0, 0, 0, 0,
	1854, 1856, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 1872, 0,
	0, 0, 0, 0, 0, 1841, 1842, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 1866, 0, 0, 0, 1847, 0,
	0, 1838, 1839, 1845, 1867, 1844, 1840, 0, 1837, 1835,
	1836, 1828, 1829, 1830, 1831, 1833, 1834, 0, 0, 0,
	0, 0, 4169, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 1839, 1845, 1867,
	1844, 1840, 0, 1837, 1835, 1836, 1828, 1829, 1830, 1831,
	1833, 1834, 0, 0, 0, 0, 0, 4168, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 1824, 1825, 0, 1857, 1858, 1859, 1868,
	1869, 1870, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1861, 1855, 0, 0, 1866,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	1824, 1825, 1874, 1857, 1858, 1859, 1868, 1869, 1870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1880,
	1879, 0, 1861, 1855, 0, 0, 0, 0, 1826, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 1846, 1874,
	0, 0, 0, 0, 0, 0, 0, 1843, 0, 0,
	0, 0, 0, 0, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 1839, 1845, 1867, 1844, 1840, 0, 1837, 1835,
	1836, 1828, 1829, 1830, 1831, 1833, 1834, 0, 0, 0,
	0, 0, 3810, 0, 0, 1849, 1850, 1851, 1852, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 1850, 1851, 1852, 0, 0, 0, 0,
	0, 0, 1832, 0, 1865, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 1854, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 1872, 0, 0, 0, 0, 0, 0, 1841,
	1842, 1865, 0, 0, 1875, 0, 0, 0, 0, 0,
	0, 1854, 1856, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 0, 1872,
	0, 0, 1847, 0, 0, 0, 1841, 1842, 0, 0,
	0, 0, 0, 1824, 1825, 0, 1857, 1858, 1859, 1868,
	1869, 1870, 0, 0, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1861, 1855, 0, 0, 1847,
	0, 0, 0, 1827, 0, 0, 0, 0, 1873, 0,
	0, 0, 1874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1862, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 0, 1877, 1826, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1877, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 1849, 1850, 1851, 1852, 0,
	0, 0, 0, 1866, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 1865, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 1854, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 1879, 1872, 0, 0, 0, 0, 0, 0, 1841,
	1842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 0, 1864, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 1838, 1839, 1845, 1867, 1844,
	1840, 0, 1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833,
	1834, 0, 0, 0, 0, 0, 3303, 0, 0, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 1839, 1845, 1867, 1844, 1840, 1873, 1837,
	1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0, 0,
	0, 0, 0, 3302, 0, 0, 1862, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1825, 0, 1857, 1858, 1859, 1868, 1869, 1870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1861, 1855, 0, 0, 0, 0, 0,
	0, 1827, 0, 1853, 0, 0, 0, 0, 0, 0,
	1874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 1880, 0, 0,
	0, 0, 0, 0, 1824, 1825, 1826, 1857, 1858, 1859,
	1868, 1869, 1870, 0, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 1866, 0, 1843, 1861, 1855, 0, 0,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 1850, 1851, 1852, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 1839, 1845, 1867, 1844,
	1840, 0, 1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833,
	1834, 0, 1865, 0, 0, 1875, 3301, 0, 0, 0,
	0, 0, 1854, 1856, 0, 0, 1849, 1850, 1851, 1852,
	0, 0, 0, 0, 0, 0, 1832, 0, 1871, 0,
	1872, 0, 0, 0, 0, 0, 0, 1841, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 1824, 1825, 0, 1857,
	1858, 1859, 1868, 1869, 1870, 1865, 0, 0, 1875, 0,
	1847, 0, 0, 0, 0, 1854, 1856, 0, 1861, 1855,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 1871, 0, 1872, 0, 1874, 0, 0, 0, 0,
	1841, 1842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1880, 0, 0, 0, 1873, 0, 1863, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 1847, 1862, 2189, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 1877, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 2187, 1877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 1850,
	1851, 1852, 0, 0, 1848, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 1865, 0, 0,
	1875, 0, 0, 0, 0, 0, 0, 1854, 1856, 0,
	0, 0, 1879, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 1871, 0, 1872, 0, 0, 0, 0,
	0, 0, 1841, 1842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 1839, 1845, 1867, 1844, 1840, 0,
	1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0,
	0, 1873, 0, 0, 3300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1877, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 1839, 1845, 1867,
	1844, 1840, 0, 1837, 1835, 1836, 1828, 1829, 1830, 1831,
	1833, 1834, 0, 0, 0, 3265, 0, 1824, 1825, 0,
	1857, 1858, 1859, 1868, 1869, 1870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2188, 1853, 0, 0, 1861,
	1855, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 1874, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	0, 0, 1826, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	1850, 1851, 1852, 0, 0, 0, 0, 0, 1864, 1832,
	4900, 0, 0, 0, 0, 0, 0, 0, 1838, 1839,
	1845, 1867, 1844, 1840, 0, 1837, 1835, 1836, 1828, 1829,
	1830, 1831, 1833, 1834, 0, 0, 0, 0, 1824, 1825,
	0, 1857, 1858, 1859, 1868, 1869, 1870, 0, 1865, 0,
	0, 1875, 0, 0, 0, 0, 0, 0, 1854, 1856,
	1861, 1855, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 1871, 0, 1872, 1874, 0, 0,
	0, 0, 0, 1841, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1863, 0, 1826, 1824, 1825, 0, 1857, 1858, 1859,
	1868, 1869, 1870, 1846, 0, 0, 1847, 0, 0, 0,
	0, 0, 1843, 0, 0, 0, 1861, 1855, 0, 0,
	0, 0, 3236, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1880, 0, 1873, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	1862, 0, 0, 0, 0, 0, 0, 0, 1843, 0,
	0, 1877, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 1850, 1851, 1852, 0, 0, 0, 0, 0, 0,
	1832, 0, 3365, 4899, 0, 0, 0, 3364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 1865,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 1854,
	1856, 0, 0, 0, 0, 0, 1849, 1850, 1851, 1852,
	1848, 0, 0, 0, 0, 1871, 1832, 1872, 0, 0,
	0, 0, 0, 0, 1841, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 1847, 1875, 0,
	0, 0, 0, 0, 0, 1854, 1856, 0, 1879, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 0, 1872, 0, 0, 0, 0, 0, 0,
	1841, 1842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 0, 0, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 0, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 1877, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	1839, 1845, 1867, 1844, 1840, 0, 1837, 1835, 1836, 1828,
	1829, 1830, 1831, 1833, 1834, 0, 0, 0, 0, 1873,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 2779, 0, 0, 0, 0,
	0, 0, 1824, 1825, 0, 1857, 1858, 1859, 1868, 1869,
	1870, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 1861, 1855, 0, 0, 0, 2778,
	0, 0, 1827, 0, 1853, 0, 0, 0, 0, 0,
	0, 1874, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 0, 0, 0, 0, 1848, 1880, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 1866, 0, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	1864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 1839, 1845, 1867, 1844, 1840, 0, 1837, 1835, 1836,
	1828, 1829, 1830, 1831, 1833, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 1850, 1851, 1852, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 1839, 1845, 1867,
	1844, 1840, 0, 1837, 1835, 1836, 1828, 1829, 1830, 1831,
	1833, 1834, 0, 1865, 0, 0, 1875, 0, 0, 0,
	0, 0, 0, 1854, 1856, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1871,
	0, 1872, 0, 0, 0, 0, 0, 0, 1841, 1842,
	0, 0, 0, 0, 0, 1824, 1825, 0, 1857, 1858,
	1859, 1868, 1869, 1870, 0, 0, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1861, 1855, 0,
	0, 1847, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 1824, 1825, 1874, 1857, 1858, 1859, 1868, 1869,
	1870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1880, 0, 0, 1861, 1855, 0, 0, 0, 0,
	1826, 0, 1827, 0, 0, 0, 0, 1873, 0, 0,
	1846, 1874, 0, 0, 0, 0, 0, 0, 0, 1843,
	0, 0, 0, 0, 0, 1862, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 0, 1877, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 1849, 1850, 1851,
	1852, 0, 0, 0, 0, 0, 0, 1832, 0, 4516,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 1850, 1851, 1852, 0, 0,
	0, 0, 1866, 0, 1832, 0, 1865, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 1854, 1856, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 1879, 1872, 0, 0, 0, 0, 0,
	0, 1841, 1842, 1865, 0, 0, 1875, 0, 0, 0,
	0, 0, 0, 1854, 1856, 0, 0, 0, 0, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1871,
	0, 1872, 0, 0, 1847, 0, 0, 0, 1841, 1842,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 0,
	0, 1847, 0, 0, 1838, 1839, 1845, 1867, 1844, 1840,
	1873, 1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1877,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1862, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1877, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 1824, 1825, 0, 1857,
	1858, 1859, 1868, 1869, 1870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 1861, 1855,
	0, 0, 1866, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 1874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1880, 1879, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 1839, 1845,
	1867, 1844, 1840, 0, 1837, 1835, 1836, 1828, 1829, 1830,
	1831, 1833, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 1839, 1845, 1867, 1844, 1840,
	0, 1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 1850,
	1851, 1852, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 1825, 0, 1857, 1858, 1859, 1868, 1869, 1870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1861, 1855, 0, 0, 1865, 0, 0,
	1875, 1827, 0, 0, 0, 0, 0, 1854, 1856, 0,
	1874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1871, 0, 1872, 0, 1880, 0, 0,
	0, 0, 1841, 1842, 0, 0, 1826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 0,
	1863, 0, 0, 0, 0, 1843, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1862,
	0, 0, 0, 1849, 1850, 1851, 1852, 0, 0, 0,
	1877, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 1825, 0, 1857, 1858, 1859,
	1868, 1869, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 1875, 1861, 1855, 0, 0,
	0, 0, 1854, 1856, 1827, 0, 1853, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 0, 0, 1871, 0,
	1872, 0, 0, 0, 0, 0, 0, 1841, 1842, 1848,
	1880, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 1863, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 1866, 0, 1843, 0,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4295, 1873, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1877, 1849, 1850, 1851, 1852,
	0, 0, 0, 0, 0, 0, 1832, 0, 3995, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 1839,
	1845, 1867, 1844, 1840, 0, 1837, 1835, 1836, 1828, 1829,
	1830, 1831, 1833, 1834, 0, 1865, 0, 0, 1875, 0,
	0, 1853, 0, 0, 0, 1854, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 0, 1872, 1848, 0, 0, 0, 0, 0,
	1841, 1842, 0, 0, 0, 0, 0, 1824, 1825, 0,
	1857, 1858, 1859, 1868, 1869, 1870, 0, 0, 1863, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 1861,
	1855, 0, 0, 1847, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 1874, 0, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	3996, 0, 1826, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 0, 0, 0, 0, 0, 1862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 1839, 1845, 1867, 1844, 1840, 0,
	1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 1849,
	1850, 1851, 1852, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 1825, 0, 1857, 1858, 1859, 1868, 1869, 1870, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 1865, 0,
	0, 1875, 1861, 1855, 0, 0, 0, 0, 1854, 1856,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	0, 0, 0, 0, 1871, 1879, 1872, 0, 0, 0,
	0, 0, 0, 1841, 1842, 0, 1880, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 1839, 1845, 1867,
	1844, 1840, 1873, 1837, 1835, 1836, 1828, 1829, 1830, 1831,
	1833, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1877, 1849, 1850, 1851, 1852, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 3371,
	0, 0, 0, 0, 0, 1824, 1825, 0, 1857, 1858,
	1859, 1868, 1869, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1861, 1855, 0,
	0, 1865, 3366, 0, 1875, 1827, 0, 1853, 0, 0,
	0, 1854, 1856, 0, 1874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 0, 1872,
	1848, 1880, 0, 0, 0, 0, 1841, 1842, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 1863, 0, 0, 1866, 0, 1843,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3791, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 1849, 1850, 1851,
	1852, 0, 0, 0, 1877, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	1839, 1845, 1867, 1844, 1840, 0, 1837, 1835, 1836, 1828,
	1829, 1830, 1831, 1833, 1834, 0, 1865, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 1854, 1856, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 1872, 0, 0, 0, 0, 0,
	0, 1841, 1842, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1863,
	1824, 1825, 0, 1857, 1858, 1859, 1868, 1869, 1870, 0,
	1866, 0, 0, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 1861, 1855, 0, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 1874,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1880, 0, 0, 0,
	1873, 0, 0, 0, 0, 1826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 1862, 0,
	0, 0, 0, 0, 1843, 0, 0, 0, 0, 1877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 1839, 1845, 1867, 1844, 1840, 0, 1837,
	1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 1850, 1851, 1852, 0, 0, 1848, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 1825, 0, 1857, 1858,
	1859, 1868, 1869, 1870, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1861, 1855, 0,
	0, 1865, 3304, 0, 1875, 1827, 0, 0, 0, 0,
	0, 1854, 1856, 0, 1874, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 0, 1872,
	0, 1880, 0, 0, 0, 0, 1841, 1842, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 0, 0, 0, 1863, 0, 0, 0, 0, 1843,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 1839, 1845,
	1867, 1844, 1840, 0, 1837, 1835, 1836, 1828, 1829, 1830,
	1831, 1833, 1834, 0, 0, 1873, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 1849, 1850, 1851,
	1852, 0, 0, 0, 1877, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 3331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 1825,
	0, 1857, 1858, 1859, 1868, 1869, 1870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 1875,
	1861, 1855, 0, 0, 0, 0, 1854, 1856, 1827, 0,
	1853, 0, 0, 0, 0, 0, 0, 1874, 0, 0,
	0, 0, 1871, 0, 1872, 0, 0, 0, 0, 0,
	0, 1841, 1842, 1848, 1880, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 1863,
	0, 0, 0, 1846, 0, 0, 0, 0, 0, 0,
	1866, 0, 1843, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1877,
	1849, 1850, 1851, 1852, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 1839, 1845, 1867, 1844, 1840, 0, 1837,
	1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0, 1865,
	0, 0, 1875, 0, 0, 1853, 0, 0, 0, 1854,
	1856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 0, 1872, 1848, 0,
	0, 0, 0, 0, 1841, 1842, 0, 0, 0, 0,
	0, 1824, 1825, 0, 1857, 1858, 1859, 1868, 1869, 1870,
	0, 0, 1863, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 1861, 1855, 0, 0, 1847, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	1874, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 0, 0, 0,
	0, 0, 0, 1873, 0, 0, 1846, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 0, 0, 0, 0,
	0, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1877, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 1839, 1845,
	1867, 1844, 1840, 0, 1837, 1835, 1836, 1828, 1829, 1830,
	1831, 1833, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 1849, 1850, 1851, 1852, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 1824, 1825, 0, 1857,
	1858, 1859, 1868, 1869, 1870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1855,
	0, 0, 1865, 0, 0, 1875, 1827, 0, 0, 0,
	0, 0, 1854, 1856, 0, 1874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 1879,
	1872, 0, 1880, 0, 0, 0, 0, 1841, 1842, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 1863, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2351, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 1839, 1845, 1867, 1844, 1840, 1873, 1837, 1835, 1836,
	1828, 1829, 1830, 1831, 1833, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 1849, 1850,
	1851, 1852, 0, 0, 0, 1877, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	1875, 0, 0, 0, 0, 0, 0, 1854, 1856, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1871, 0, 1872, 0, 0, 0, 0,
	0, 0, 1841, 1842, 1848, 0, 0, 0, 0, 0,
	0, 0, 971, 0, 1020, 0, 0, 0, 0, 0,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 1847, 0, 0, 979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 994, 0, 977, 976, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 996, 0,
	0, 1873, 0, 0, 978, 0, 0, 0, 0, 981,
	0, 0, 0, 0, 1031, 0, 0, 0, 0, 0,
	0, 0, 0, 991, 992, 0, 0, 0, 0, 0,
	1877, 0, 1009, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1021, 983, 0, 1864, 0, 0, 0, 984, 0, 0,
	0, 0, 0, 1838, 1839, 1845, 1867, 1844, 1840, 0,
	1837, 1835, 1836, 1828, 1829, 1830, 1831, 1833, 1834, 0,
	985, 0, 0, 0, 0, 0, 1853, 0, 0, 1018,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1019, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 987, 0, 0,
	0, 0, 0, 0, 0, 975, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 988, 989, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 997, 995, 0, 0, 0, 0, 0, 0,
	990, 0, 0, 0, 1006, 0, 0, 1026, 1025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1028, 1017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 1022, 0, 0, 0, 1838, 1839,
	1845, 1867, 1844, 1840, 0, 1837, 1835, 1836, 1828, 1829,
	1830, 1831, 1833, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 982,
	0, 0, 1030, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 980, 0, 0, 0, 1013,
	1014, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1016, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1023, 1011, 0,
	0, 0, 0, 0, 0, 0, 1029, 1007, 0, 0,
	1000, 998, 0, 1003, 0, 0, 0, 0, 0, 1004,
	0, 0, 973, 0, 1024, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1015, 0,
	1005, 0, 0, 0, 0, 0, 1002, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1027, 0, 0, 0,
	0, 0, 0, 0, 1008, 0, 0, 0, 0, 0,
	0, 0, 0, 986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1010, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1012,
}

var sqlPact = [...]int{
	6057, -1000, -1000, -1000, -1000, 146, -1000, -1000, 145, 144,
	142, 141, 140, 139, 137, 135, 134, 133, 131, -1000,
	-1000, -1000, -1000, -1000, -1000, 130, -1000, -1000, 129, -1000,
	128, 126, 124, -1000, -1000, 122, -1000, 119, -1000, -1000,
	-1000, -1000, 118, 117, 116, 91587, 91026, 92139, 2368, 115551,
	98799, 2045, 80982, 114990, 80421, 114429, 2185, 13349, 113868, 2808,
	114, -1000, 113307, 111, 109, 108, -1000, 112746, -1000, 2005,
	-1000, 107, -1000, 7965, 70890, 106, 105, 103, 102, 2337,
	101, -1000, 100, 99, -1000, -1000, 98, -1000, 14474, 1572,
	-1000, 97, 96, -1000, 6950, 96564, 95, 94, 91, 2729,
	90, 89, 68097, 88, 86, 84, 2589, 2932, -1000, -1000,
	2093, -1000, -1000, 82, 81, 80, 79, 76, 72, 69,
	66, 64, 63, 50, 47, 46, -1000, 45, 44, 43,
	41, 40, -1000, 38, 37, 36, -1000, 35, -1000, 34,
	33, 31, 30, 28, 27, 26, 24, 23, 22, 21,
	20, 19, 17, 135360, -1000, -1000, 16, 2021, 1717, 1713,
	1707, 1704, 1679, 986, 12, 7, 5, 4, 3, 2,
	0, -1, -2, -4, -5, -9, -10, -17, -18, -19,
	-20, -22, 115, -23, -24, -25, -28, -29, -30, -37,
	3389, -1000, 1764, 1127, 31417, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 123831, 116103, -38, -85, -39, -1000, 3406, 1008,
	56210, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 220,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 473, 2170, 724,
	-1000, -1000, -1000, 112194, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2367, -80, -1000, 2071, -1000, -1000, -1000, -1000,
	-1000, 723, -1000, 2366, 2294, 314, 2289, -1000, -1000, -1000,
	3462, 2502, 3862, 3861, 3860, 3859, 3857, 123279, 1905, 3856,
	2567, 3855, 3852, 3850, 3848, 3846, 3845, 3842, -1000, 90465,
	1052, 89904, 89343, 3478, 111642, 88782, 111081, 126048, 48150, 1109,
	3458, -1000, -1000, -1000, -1000, -1000, -1000, 116103, -1000, 1051,
	-1000, -1000, 3841, 2144, 722, 98238, -1000, -1000, 110520, 1774,
	-1000, -1000, -1000, 933, 1202, 33142, 33142, 33142, 219, -1000,
	-1000, -1000, -1000, -1000, -1000, 3840, 3839, 3838, 3837, 3836,
	-1000, -1000, 79860, 24334, 79299, 78738, 109959, 47575, 88221, 87660,
	3835, 3832, 3831, 109398, 125496, 3587, 3585, 1050, 2070, 1465,
	-1000, -1000, -1000, -1000, -1000, -1000, -56, 72546, 3617, 116103,
	-1000, 218, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 47000,
	629, 46425, 764, 45850, 307, 108837, -1000, -1000, -1000, -1000,
	74832, -1000, 108276, 2499, 3830, 3828, 1149, 3827, 3342, 1893,
	3826, 1936, 1229, 3821, 3818, 3817, 3814, 3812, 3810, 3807,
	1529, 107715, 3025, 1570, 107154, 1780, 124944, 1049, 87099, 92139,
	2656, 106593, 1478, 1472, -1000, -1000, -1000, -1000, 3119, 2916,
	2897, 1066, -1000, -1000, -1000, -1000, 59627, 8456, 6753, -1000,
	-1000, 12199, 106032, 62472, 92139, 92139, -1000, -1000, -1000, -1000,
	-1000, -1000, 45275, 333, 44700, 1063, 105471, -1000, -1000, 60196,
	2968, -1000, -1000, -1000, -1000, -1000, 104910, 44125, 328, 43550,
	790, 116103, -1000, 3024, 2017, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3287, 1634, 3638, 2790, 74261, 2120, 1422,
	3427, 3113, 3109, 1520, 2067, 3107, 3805, 2660, 3104, 3102,
	3100, 3090, 3086, 1646, 2627, 308, 2616, 30842, 3009, 1822,
	42975, 1719, 1517, 3085, 3084, 3657, 2043, 2075, 2137, 78177,
	3804, 3803, 3364, 3083, 3073, 2858, 3072, -1000, 2967, 1527,
	217, -1000, -1000, -1000, -1000, -1000, -1000, 1486, -1000, -1000,
	-1000, -1000, -1000, 82638, -1000, -1000, 1413, -1000, -1000, 1413,
	-1000, -1000, -1000, -1000, -1000, 1356, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1764, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2232,
	-1000, 2143, -1000, -1000, 2552, 3373, 3373, 3373, 3457, 446,
	414, -1000, 115, -1000, -1000, 134910, -1000, -1000, 48725, 48725,
	48725, 48725, 48725, 48725, 48725, 48725, 2202, -1000, 716, -1000,
	-1000, 758, -1000, 713, 649, 577, -1000, -1000, -1000, -1000,
	-1000, -1000, 712, -1000, -1000, -1000, -1000, -1000, -1000, 3617,
	-1000, 27260, -1000, -1000, -1000, 361, 711, 48725, -1000, -1000,
	3672, 3671, 945, -1000, 215, 954, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3023, 701,
	694, -1000, 689, 686, 683, 680, 679, -1000, 678, -1000,
	676, 675, 674, 672, 671, 665, 664, 663, -1000, 2080,
	-1000, -1000, -1000, -1000, -1000, -1000, 616, 611, 611, 611,
	-1000, 1042, -1000, -1000, -1000, 346, 609, 264, 608, 607,
	604, -1000, 662, 661, 660, 659, 658, 657, 656, 654,
	652, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1032, -1000,
	-1000, -1000, -1000, -58, 116103, -1000, 473, -58, -1000, -1000,
	651, -1000, 35442, 35442, 35442, -1000, -1000, 2361, 48725, -1000,
	2605, -1000, -50, -50, 896, 57917, -1000, 55044, 896, 304,
	776, 63603, -1000, 2965, -1000, -1000, 650, 189, -1000, -1000,
	-1000, -1000, 24903, 2964, 116103, 116103, 116103, 92139, 92139, 92139,
	116103, 3802, 3266, 48725, -1000, -1000, 70329, 127704, 92691, -1000,
	-1000, 3569, 68656, 69777, 3022, 127704, 3020, 127152, 3800, -1000,
	-1000, -1000, -1000, -1000, 3245, 3798, 3797, 3796, -1000, 116103,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 242, 3244, -1000,
	-1000, 96003, 242, 3242, -1000, 242, 3241, -1000, 95451, -1000,
	-1000, 2277, 3237, -1000, -1000, 250, 3229, -1000, -1000, -1000,
	247, 3227, -1000, -1000, 188, -157, 3224, -1000, -1000, -1000,
	-1000, -1000, -1000, 134910, -1000, -1000, -1000, 126600, -1000, 3396,
	-1000, 116103, -1000, 48725, -1000, -1000, 3561, 1766, 3419, 3504,
	-1000, -1000, -66, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2544, 2542, 1159, 2397, -1000, 3282, 1474, 33142, 3330, -1000,
	-1000, -1000, -1000, -1000, 184, 24903, -1000, -1000, -1000, -1000,
	-1000, -1000, 3492, 3222, 1501, -1000, 2393, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2239, 3220, -1000, 2052,
	3209, 2102, -1000, -1000, 2273, -1000, 131245, 1384, -1000, -1000,
	-1000, -1000, 2383, 3178, -49, -1000, -1000, 2358, -1000, -1000,
	-1000, -1000, 2016, -1000, 1334, 3176, -1000, 2787, 2787, 86538,
	3189, 61903, 60196, 72546, -61, -1000, -1000, -1000, -1000, -158,
	-1000, 23759, 134910, -1000, -1000, -1000, -1000, 1828, 134910, 889,
	-1000, -1000, 3174, -1000, 134910, 771, -1000, -1000, 3172, -1000,
	2625, -1000, 3019, -1000, -1000, 2458, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2456, -1000, -1000, 3795, -1000, -1000,
	3794, -1000, 3792, 3789, 3788, -1000, 1784, 2054, 3787, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 85986, 2360, -1000,
	-1000, 84864, 3018, -1000, 2452, 3501, -1000, 85425, 1048, -1000,
	990, 2450, -1000, 94899, 984, 2448, -1000, 3785, 3476, 2704,
	990, 2447, -1000, -1000, -1000, -1000, -1000, 1002, -1000, 65845,
	-1000, 65845, -1000, 1671, -1000, 122727, -50, 92139, 3617, -1000,
	-88, -1000, -1000, -1000, 1008, -1000, 59055, -1000, 59055, 97677,
	75401, 951, 2963, 67526, 134657, -1000, 1015, -1000, -1000, 134910,
	-1000, -1000, -1000, 2623, -1000, -170, 2781, -1000, 75401, 61334,
	2621, -1000, 134910, -1000, -1000, -1000, -1000, 134910, -1000, -1000,
	-1000, 75401, 84864, -1000, 104349, 84312, -1000, -1000, 1523, 2603,
	-1000, -1000, -1000, 75401, 1335, 75401, 75401, 75401, -1000, 103788,
	-1000, -1000, 2126, 1426, 3366, 2104, 92139, -1000, 1909, -1000,
	-1000, -1000, 3408, 3186, 116103, -1000, -1000, 3014, -1000, 71994,
	94347, -1000, 93795, -1000, 93243, -1000, 92139, -1000, 92139, -1000,
	3784, 3783, 3782, -1000, -1000, 3781, -1000, 3780, 3401, -1000,
	564, 42400, 134910, 3400, -1000, 3778, 2058, 3009, 134910, -1000,
	3183, 1706, 1701, 116103, -1000, -1000, 116103, -1000, 116103, -1000,
	-1000, -1000, 1606, -1000, -1000, 2543, -1000, -1000, -1000, -1000,
	92139, 92139, 92139, 92139, 1226, -1000, 41825, -1000, -1000, 3066,
	3777, 1786, -1000, 1873, -1000, 2960, 3399, -1000, 1521, 1848,
	179, 3676, -1000, -1000, 251, -1000, -1000, -66, -1000, 122175,
	-1000, 2552, -1000, 116103, -1000, 2553, 2981, 3007, 1711, 2341,
	2643, -1000, 41250, 2612, 52175, 2389, 115, -1000, -1000, 115,
	115, 32567, -1000, -1000, 68656, 68656, 24903, 1427, 48725, 48725,
	48725, 48725, 48725, 48725, 48725, 48725, 48725, 48725, 48725, 48725,
	48725, 48725, 48725, 48725, 48725, 48725, 48725, 48725, 48725, 48725,
	48725, 48725, 48725, 48725, 48725, 48725, 48725, 48725, 48725, 48725,
	48725, 48725, 48725, 48725, 2376, 48725, 1301, 48725, 48725, 48725,
	48725, 1915, -1000, -1000, 2034, 504, 2082, 649, -1000, -1000,
	-1000, 3612, 3612, 3612, 905, 905, 905, 135095, 135095, 495,
	3776, 758, -1000, 48725, -1000, 32, 58477, 48725, 25474, -1000,
	414, 7210, 2520, -1000, 413, 26078, -1000, -1000, -1000, 27260,
	577, 40646, 48725, 987, 134910, -1000, -1000, 1429, 3630, 23184,
	3033, 2838, 648, 803, 796, 30238, 29634, 29030, 28426, 795,
	719, 48725, 48725, 48725, 48725, 48725, 48725, 48725, 48725, -1000,
	-1000, 3639, -1000, 3630, -1000, -1000, -1000, -1000, 3630, 1415,
	1392, 3630, -1000, 3630, 3630, 9913, 9913, 40071, 39496, 38921,
	52750, 38346, 48725, 27851, 37771, 37196, -1000, 116103, -58, 3560,
	48725, 288, -1000, 132281, -1000, 288, 288, 639, -93, 134910,
	2601, 2601, 56779, 2451, 2209, 2209, 2209, -1000, 896, 17971,
	896, 102125, 2217, 896, 896, 178, 198, 412, 54475, 2605,
	102125, 743, 622, -41, -42, -43, -1000, -1000, -44, -45,
	-1000, -1000, 92139, 621, 25474, 24903, 176, 2046, -99, 2640,
	2638, -1000, 2637, 2636, -1000, 2635, 2352, -1000, -1000, 1861,
	-101, 1297, 92139, 116103, 1499, 3770, -102, -1000, 6008, -107,
	-1000, 1313, 175, 3630, -1000, -1000, -1000, -1000, -1000, 3763,
	3758, -1000, 1031, 619, 617, 322, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 616, 611, 611, 611, -1000, 346,
	609, 264, 608, 607, 604, -1000, -1000, -1000, -1000, -1000,
	2958, 92139, 116103, 1481, 3753, 81534, -157, 92691, -89, -1000,
	-1000, 116103, -1000, -1000, -1000, 3752, -1000, 92139, -1000, -1000,
	92139, 242, 3171, -1000, 92139, -1000, 92139, 238, 3170, -1000,
	-1000, 116103, -1000, 92139, 92139, -1000, 116103, 116103, 116103, 127704,
	127704, 235, -1000, 92139, 874, -108, 1161, -66, -1000, -1000,
	-1000, -1000, 1413, -1000, 1888, -1000, -1000, -1000, -1000, -1000,
	-1000, 1534, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	945, -1000, -1000, -1000, -1000, -1000, -1000, 3628, 3624, -59,
	-1000, -1000, 24903, -1000, -67, 1685, 1918, 1291, -1000, 77616,
	2377, 3397, 3751, 2697, 3352, 1667, -1000, 1601, -1000, 3479,
	82638, 3523, 3533, 1363, -1000, 2956, -1000, -1000, -1000, 932,
	1767, 1816, 1289, 1286, 82638, 2052, -1000, 68656, -1000, 2690,
	3455, 1360, 1381, 1360, 1360, 1379, -1000, 82638, 1815, 1284,
	1283, 1282, -1000, -1000, 1979, 1972, -1000, -1000, 103236, -1000,
	1281, 1277, 3584, 2232, 2237, 791, 1968, -1000, 1382, 1266,
	2954, -1000, -1000, -68, 3521, 3529, 1363, -1000, 2949, 1265,
	-1000, -1000, -1000, 3454, 92139, 24903, 1592, 1577, 1575, 1814,
	1264, -60, -1000, 3518, 1262, 1261, -1000, 1043, 5532, 3298,
	-1000, 127704, 1043, 1043, 2089, 3169, 2741, 1739, -1000, 2775,
	893, 2774, -1000, -1000, -1000, 893, -61, 72546, 116103, 170,
	-1000, 32, 48725, 48725, 32, 48725, 32, -1000, 3496, 3164,
	3163, -1000, -1000, -1000, -1000, -1000, 3748, 2007, 2557, -1000,
	-1000, 603, 2441, 2948, 116103, 2647, -63, 92139, -1000, 71442,
	3162, 127704, 2052, 2440, -1000, -1000, 83751, -1000, 3159, 473,
	2439, -1000, 647, 3747, 3158, -1000, 121623, -1000, 3396, 1443,
	3130, 1095, 920, 3558, -1000, 920, 66406, -1000, 116103, -1000,
	-50, 5006, 76512, -109, -118, 411, -1000, 102684, 116103, 116103,
	3316, 2037, 2028, -1000, 985, 60196, -1000, 60196, -120, -1000,
	-170, 2763, 1551, -1000, 951, 951, 893, -1000, 893, -1000,
	92139, 2993, -1000, -1000, 75401, 951, 951, 951, -1000, -1000,
	-1000, -1000, 3745, 3744, 3740, 3735, -1000, -1000, 988, 92139,
	116103, 92139, -1000, -1000, 1715, -1000, 167, -1000, 127704, -1000,
	127704, 116103, 92139, -1000, 988, 116103, 988, 116103, 988, 116103,
	988, 988, -1000, -1000, -1000, -1000, -1000, 32, -1000, -1000,
	134910, -1000, 48725, -1000, -1000, 1594, 3731, 1693, -1000, 2985,
	-1000, 2984, -1000, -6, -1000, -1000, 1925, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3729, 134910, -1000, 1889,
	-1000, -1000, -1000, -1000, 92139, 92139, 92139, 92139, 116103, 3296,
	-1000, 116103, 3293, 92139, -1000, 3675, -1000, -1000, 82638, -1000,
	2553, 2981, -1000, -1000, -1000, -1000, -1000, -1000, 1480, 2304,
	-1000, 2595, -1000, 1628, -1000, -1000, -1000, 134910, 53325, -1000,
	-1000, 134910, 1895, -1000, 51600, 51025, -1000, -1000, 1778, 92139,
	2661, -1000, 2661, -137, -1000, 131903, 2591, 92139, -1000, -1000,
	-1000, -1000, -1000, 925, 788, 788, 1399, 1399, 1399, 1399,
	3515, 5372, 6602, 6413, 8360, 8360, 9844, 9844, 9844, 9844,
	9844, 8360, 5022, 905, 905, 5022, 5022, 5022, 5022, 5022,
	905, 905, 905, 8360, 8360, 8360, 905, 135095, 17283, 12311,
	48725, 48725, 1255, 2022, 504, 11185, 48725, 6200, 6200, 6200,
	6200, -1000, 1857, -1000, -1000, -1000, -1000, 2943, 602, 52750,
	52750, -1000, -1000, -1000, -1000, 26669, 48725, -1000, -1000, -1000,
	-1000, 36592, -1000, -1000, 131043, -314, 407, -1000, 166, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 403, -136, 75, -1000, 48725, 48725, 48725, 402,
	-1000, 165, 48725, 116103, -1000, 15731, 742, -160, -1000, -121,
	1441, -1000, 48725, -1000, -1000, 1252, -1000, 1250, 1246, 1242,
	-1000, 599, 398, -1000, 164, -1000, 2205, 595, 594, 48725,
	-1000, -1000, -1000, -1000, -1000, 130980, -1000, -1000, 130602, -1000,
	-1000, 130349, -1000, -1000, 130312, -1000, -1000, -1000, -1000, -1000,
	134464, 15268, 13991, 11661, 6491, 11073, 9363, -123, 396, -135,
	395, 922, 921, 393, 392, 388, -141, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -142,
	387, -1000, 2940, -136, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 386, -1000, 385, -1000, 134279, -136, 384, 9166,
	-1000, 52750, 52750, 52750, 52750, -1000, 381, -1000, 131837, -1000,
	134014, 36017, 36017, 36017, 376, 133829, 48725, -136, -143, -1000,
	-165, -1000, -1000, 487, -167, 1003, 35442, 55627, 24903, -1000,
	1003, 1003, 48725, -1000, 48725, 2613, -1000, -1000, -1000, -1000,
	2611, 2353, 2601, 56779, -1000, -1000, -1000, -1000, 102125, -1000,
	3617, 2806, -1000, 102125, -1000, -1000, 116103, 473, -1000, 102125,
	102125, 24903, 896, -1000, 896, 102125, 592, -1000, -1000, -1000,
	-1000, -1000, 373, 64732, 75, 163, 24903, 990, -1000, -1000,
	2739, 2739, 2739, 2739, 2739, 92139, -1000, -1000, 127704, 1241,
	-64, -96, 2762, -1000, 3592, -1000, 2100, -1000, 68656, -1000,
	756, 1186, 24903, -1000, -1000, -1000, 589, -1000, 3630, 3630,
	-1000, 3630, 127704, 2939, 246, 2753, -1000, 2350, -62, 245,
	127704, 3728, -1000, -1000, 242, -1000, 92139, 242, 242, -1000,
	92139, 92139, 2277, -1000, 250, -1000, 247, -1000, -1000, -157,
	-1000, 1005, 33142, -1000, 1413, -1000, -1000, 1582, -1000, 2024,
	-1000, 1230, -1000, -1000, -1000, -1000, 33142, -1000, 2483, 116103,
	116103, 92139, -1000, 116103, -1000, 2207, 127704, -1000, 2438, 121071,
	2412, 120519, 68656, -1000, -1000, 588, 939, 2584, 2581, 1093,
	116103, 116103, 2579, 119967, 119415, -1000, 3723, 116103, 2114, 48725,
	3453, 2314, 2457, 32, 32, -1000, 32, -1000, -1000, 587,
	1235, 92139, 92139, 116103, 127704, 92139, 1991, -1000, -1000, -1000,
	-1000, -1000, 83190, -1000, -1000, 3637, 3634, -1000, 1360, -1000,
	-1000, -1000, 1360, 2052, 1959, 116103, 127704, 92139, 127704, 118863,
	118311, -1000, -1000, 1803, 116103, -1000, -1000, -1000, -1000, 1500,
	-1000, 791, 1238, 2938, 48725, 48725, 2106, 32, 32, -1000,
	32, 586, 24903, 1998, -1000, 3012, 116103, 3669, 117759, 3668,
	116103, 116103, 116103, 127704, 3381, 116103, 116103, 127704, -1000, 117207,
	5532, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2117, 73690, 1100, 116103, 1334, -1000, -1000, 1795,
	1237, 1232, 82638, 2125, 1793, 1896, 127704, 60196, 983, 60196,
	2714, -1000, -1000, 22609, -1000, 134910, 134910, -1000, 134910, -1000,
	71442, 75401, 116103, -1000, 1047, 116103, 77064, 950, 3128, 65284,
	-158, 951, 75401, 92139, -63, 2647, 116103, -1000, -1000, 2052,
	3127, 473, 2437, -1000, 127704, 3557, 3126, 584, 3720, 3719,
	-1000, 92139, 2349, 2435, -1000, -1000, 116655, 3094, 791, 116103,
	1003, 56779, 2004, -1000, 63043, 1077, 116103, 1912, 244, -1000,
	-1000, -1000, -26, 116103, -1000, 767, -1000, -1000, 5006, 5006,
	951, -176, 583, -1000, 871, 867, 60765, -175, -1000, 162,
	582, 866, 865, -1000, 4914, -1000, -170, -1000, 75401, 985,
	60196, 2937, 2936, -1000, -1000, 1004, -1000, 1505, 951, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-52, 1894, 116103, -157, -157, -75, -64, -1000, 988, -1000,
	988, -1000, 988, -1000, -1000, -1000, 134910, -1000, -1000, -1000,
	1691, 1686, 116103, -1000, -1000, 116103, -1000, 24903, 116103, 92139,
	24903, 92139, 2979, 2978, -1000, -1000, -1000, 116103, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1119, -1000, 1895, 2303,
	-1000, 577, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2523, -1000, -65, 32567, 898, -1000, -1000, 92139, -53,
	48725, 48725, 10378, 9649, 48725, 52750, 52750, -1000, 48725, 5285,
	-1000, -1000, -1000, -1000, -1000, 2934, 576, 48725, 68656, 7251,
	5393, -1000, 372, 9253, 5022, -1000, 48725, -1000, 5183, -1000,
	370, 34867, -1000, 132571, 73, -181, -1000, 18560, -136, -183,
	-1000, -1000, 754, -1000, 3079, -1000, 48725, 133636, 2494, 2006,
	1884, 1700, 3630, 3663, 22034, -1000, 66966, 1019, 2220, 129878,
	-1000, -1000, -1000, -1000, 68656, 68656, 48725, 48725, -1000, 48725,
	48725, 48725, -1000, -1000, -1000, 3630, 909, -1000, -1000, -1000,
	909, -1000, -1000, 1360, -1000, 1360, -1000, 48725, -1000, -1000,
	2930, 48725, -1000, 68656, 68656, 52750, 52750, 52750, 52750, 52750,
	52750, 52750, 52750, 52750, 52750, 52750, 52750, 52750, 52750, 52750,
	52750, 52750, 52750, 52750, 52750, 2582, 52750, 3608, 3608, 3608,
	1197, -1000, 2977, 2930, 48725, 48725, 68656, 366, 364, 359,
	-1000, 48725, -136, -1000, -1000, 6968, 575, -1000, 2512, -1000,
	2834, -1000, 48725, -1000, -154, -1000, 2605, -1000, -1000, 2834,
	2834, -188, 134910, 56779, 56779, -1000, 565, 48725, 2610, -1000,
	-1000, 740, -316, -1000, 862, -1000, -1000, -1000, -1000, -1000,
	-1000, 861, -1000, 473, -1000, -1000, -1000, 158, 102125, 102125,
	739, -1000, -189, -1000, -1000, -190, -1000, 3555, 357, 24903,
	-1000, 1003, 2766, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2634, -268, 127704, 127704, 1781, 2286, 3662, -1000, 3633, 750,
	738, 152, 3630, 356, 355, 353, -157, 127704, 127704, 1771,
	69225, 127704, -1000, -1000, -1000, 242, -1000, -1000, -1000, 238,
	-1000, -1000, -1000, -1000, 2682, -1000, -66, -1000, -1000, -1000,
	48725, -1000, -1000, 3379, 1231, 1225, -1000, -1000, -1000, 2885,
	-1000, 3122, -1000, 2432, -1000, 1081, 2431, 1611, -1000, 48725,
	563, 2702, 558, 557, 3718, 2150, 3716, 1094, 3114, 2277,
	3111, 2277, -1000, -1000, -1000, 936, -1000, 134910, 2314, -1000,
	555, 544, -1000, -67, 1645, 1874, 1224, 999, -1000, -1000,
	48725, 48725, 101573, -1000, 466, 3358, -54, -1000, -1000, -1000,
	1769, 1221, 1220, -1000, -1000, -1000, -1000, 2052, 1768, 1217,
	1214, -1000, -1000, -1000, -1000, -1000, 2427, -1000, -1000, 3106,
	998, -1000, 3046, 3045, 917, 116103, 48725, 48725, 133383, 133190,
	-1000, 997, -1000, -1000, 48725, -1000, -68, 1213, 3503, 2424,
	92139, -1000, 2277, 3105, 1211, -1000, 1204, -1000, -1000, -1000,
	3517, 3511, 1185, -1000, -1000, -1000, 75401, -1000, -1000, 73121,
	-1000, -1000, 1043, 116103, 127704, 92139, 1842, -1000, -1000, 81534,
	82086, 116103, 2741, -157, 893, -1000, 2596, 893, 983, 2928,
	-1000, 2646, -1000, 995, 92139, 3715, 352, -191, -69, 68656,
	-1000, -1000, -1000, -1000, 2412, 92139, 116103, 1312, 2701, 116103,
	116103, 3552, -1000, 2371, 585, 92139, 914, -1000, 3617, -1000,
	-1000, -1000, 991, -1000, 3500, 92139, 3551, 3093, 990, 32,
	92139, 3643, -1000, -1000, 3550, 92139, 3082, 2348, 2415, 2548,
	791, 75960, 990, 2219, -79, -1000, 1912, 34292, 3356, -196,
	-1000, -1000, -1000, 1003, 66406, 56779, 48725, 3714, -197, -1000,
	-1000, -1000, -1000, -1000, 99358, 99358, 75401, 75401, 75401, 951,
	116103, 116103, 3712, 75401, 75401, 75401, -73, 543, -1000, 854,
	853, 851, -1000, -1000, -1000, -1000, -1000, -1000, 850, 834,
	832, 985, -1000, -1000, -170, 60196, 32, -1000, 2260, 92139,
	-1000, 21459, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 988,
	-158, -1000, -1000, -1000, 2124, 2386, 2124, 1886, 1880, -1000,
	-1000, 2302, -1000, -1000, -1000, -1000, 2657, 3370, 24903, 3482,
	6200, 48725, 48725, 715, 579, 559, 6200, 48725, 48725, 68656,
	643, -199, 48725, 48725, -1000, 48725, 736, 134910, -1000, 3659,
	48725, 348, 347, -1000, -1000, -1000, 3621, -1000, -1000, -1000,
	134910, 48725, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 341,
	-1000, 149, -1000, -1000, -1000, 124383, -1000, 48725, 338, 3451,
	-1000, 335, 334, 7969, 441, 129693, 129588, 129199, 331, -1000,
	-1000, 330, 323, 134910, 2977, 134910, -1000, -1000, 929, 929,
	1349, 1349, 1349, 1349, 3608, 836, 1030, 1001, 465, 465,
	465, 982, 1197, 1197, 465, 465, 465, 1197, 2926, 2588,
	537, 2087, -1000, -1000, 134910, 134910, 319, -1000, -1000, -1000,
	-136, 315, 6968, -1000, 2742, 3450, 134910, -1000, 56779, 2742,
	2742, -1000, -1000, 2353, 116103, 134910, 56779, -1000, 2806, -1000,
	19728, 19147, -1000, 24903, -1000, -1000, -1000, -1000, 3617, -1000,
	64732, -1000, 534, -1000, 148, -1000, 2766, -1000, 830, -1000,
	-1000, 75401, 75401, 2739, -1000, 2846, -268, -162, 116103, -1000,
	-1000, 733, 3711, 747, 24903, 302, -1000, -1000, -1000, -157,
	-157, 116103, 2923, 92139, 116103, 1449, -157, -1000, -1000, -1000,
	3309, 134910, 116103, 116103, 1579, 101021, 116103, 3078, -1000, 3076,
	-1000, 1093, 2521, 128997, 57348, -1000, 57348, 116103, -1000, -1000,
	-1000, -1000, 1984, 1876, 3709, 1141, -1000, 3410, 116103, -1000,
	116103, -1000, -1000, -1000, 116103, 116103, 92139, 116103, -1000, 127704,
	3054, -205, 134910, -74, -1000, 828, -1000, 1373, -1000, 20884,
	116103, 127704, 92139, 116103, 127704, 92139, 3074, 116103, 2174, -1000,
	-1000, 3044, -1000, 134910, 133005, 32, 48725, 3053, -206, 24903,
	-1000, 3658, 3656, 3070, 3423, -1000, 116103, 3655, 116103, 92139,
	3306, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1742, 1193,
	1172, 2342, 2338, 2282, -75, 2125, 983, -76, 532, -1000,
	827, -1000, -1000, 824, 821, 983, -1000, 75401, 60196, 3708,
	473, -1000, 2677, -1000, 97116, 77064, 2312, -1000, -1000, 530,
	116103, 116103, 528, -1000, 32, -1000, 3707, 99917, 525, -1000,
	2230, -1000, 731, -1000, 2503, 127704, 2052, 32, 92139, -1000,
	-1000, 473, 301, -77, -1000, 3091, 1089, 24903, 92139, 3067,
	2555, 791, 75960, -1000, 1443, 2643, -1000, -78, -1000, 620,
	32, 2219, -1000, -79, 134910, -1000, 818, -1000, -207, -1000,
	-1000, 298, -1000, 3303, -1000, -1000, -208, -1000, -1000, 5056,
	5056, 75401, 60196, 75401, 75401, 75401, 60196, -1000, 985, 893,
	-1000, 2387, -1000, -1000, -1000, -1000, -1000, 24903, 1745, -1000,
	524, 521, -1000, -1000, -1000, -1000, 3370, 6200, 6200, 48725,
	48725, 48725, 6200, 643, -213, -1000, 6200, 6200, -136, -1000,
	-1000, 132571, -1000, -1000, -1000, 134910, -1000, 20309, 2168, -1000,
	128934, -1000, 32567, -1000, -1000, 48725, 48725, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 52750, 2911, 520, 68656, -1000,
	-1000, 291, 1017, 48725, 50450, 2605, 1017, 1017, -1000, -214,
	-1000, -1000, -1000, 3617, -1000, 3617, 148, -1000, -1000, 3706,
	24903, -1000, 75401, -1000, -1000, -1000, 2280, -1000, -1000, 3047,
	-161, 717, -1000, 3705, -1000, -1000, 203, 127704, 2894, 168,
	2737, -1000, -1000, -1000, 2734, 3549, -1000, 1963, -1000, 116103,
	116103, -1000, 116103, -1000, 24903, 116103, 2848, 1249, -1000, 939,
	2578, 519, 52750, 1118, 92139, 578, 2814, 2804, -1000, 3541,
	3448, 2778, -216, -1000, 116103, 48725, 116103, -219, -221, 2391,
	-1000, -1000, 1111, 1247, 48725, 1106, -1000, -1000, -1000, 68656,
	518, 2277, 2277, -222, -227, -1000, -1000, -1000, 48725, 1171,
	116103, 33717, -1000, 3698, 3358, -1000, -1000, -1000, -1000, -1000,
	-1000, 116103, -1000, 116103, -1000, 48725, -1000, 132534, 48725, 1170,
	-1000, -1000, -1000, 3645, 2277, 24903, 2277, -1000, 2277, 3423,
	1139, 116103, 127704, 92139, 1818, 1818, 2974, -1000, -1000, -1000,
	2498, 2498, 75401, 60196, 60196, -1000, -82, 983, -1000, 3548,
	2151, 3694, -1000, -1000, -1000, -1000, 2576, -1000, -1000, -1000,
	116103, 2575, 2798, 57348, 517, 516, 116103, 962, -1000, -228,
	-1000, 817, 812, 77064, 950, 955, -1000, -84, 515, -1000,
	794, -1000, -1000, -1000, -1000, 473, 3547, -1000, 3644, 507,
	506, 116103, 2327, 505, 24903, 3354, 791, 75960, -1000, 3094,
	1912, -1000, 2407, 116103, 3348, -1000, 2643, 504, -1000, 951,
	494, 951, -1000, -229, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -86, -1000, 864, 859, -1000, -1000, 92139, 92139,
	48725, 48725, -1000, 6200, 6200, 6200, -1000, 276, -1000, -1000,
	2219, 3444, -1000, -94, 128556, 128303, 5739, 52750, 68656, -230,
	-1000, -1000, 116103, 134910, -106, -1000, 134910, 493, 492, 406,
	-1000, -1000, -1000, 720, 644, -1000, -1000, -1000, -1000, 127704,
	3693, -1000, 127704, -157, 127704, 127704, 1708, 100469, 116103, -1000,
	-1000, 1611, 1697, -1000, -1000, -1000, 116103, 2413, -1000, -1000,
	-1000, 1092, 48725, 2087, 52750, 491, 48725, -1000, 490, 486,
	3542, 3288, -1000, 2668, 2896, 1952, 57348, -1000, 3370, -1000,
	128266, -1000, 1087, 1983, -1000, -1000, -1000, -1000, 134910, 52750,
	3423, 57348, -1000, -1000, 482, 481, 134910, 480, 793, 2892,
	-1000, -1000, -1000, -1000, -1000, 134910, 32, 134910, 478, 3503,
	-1000, -1000, -1000, -1000, 2277, 92139, -1000, -1000, -1000, 1168,
	-1000, -1000, -1000, -1000, 3691, 3690, 2889, 81534, -1000, -235,
	-1000, -1000, -1000, 2015, 32, 950, -1000, -1000, 2312, 476,
	-1000, -1000, 2422, 2422, -236, 57348, 57348, -237, 2307, 2678,
	-1000, 99917, 33142, 33142, 259, 3539, 955, -1000, 3618, -1000,
	3289, 3289, 48725, 3538, 32, -1000, 3643, 57348, -1000, 92139,
	57348, 2316, 2060, 2535, 75960, -1000, 2548, -1000, -1000, -238,
	116103, 1912, -1000, -1000, 75401, -1000, -1000, 2387, -1000, 116103,
	-1000, 116103, -1000, -1000, -243, -244, -1000, 2098, 48725, 32567,
	-1000, -1000, 5739, -251, -1000, -114, -1000, 3534, 50450, 3689,
	3687, 3686, -1000, -1000, -268, -1000, -157, -157, -157, 116103,
	-1000, 1957, -1000, 2412, -1000, -1000, 3065, 2829, 16817, 2087,
	2515, 116103, 16431, 2052, 2052, -1000, 3528, 2891, -1000, -1000,
	2106, 475, -1000, -1000, -1000, -1000, 898, 116103, -1000, 2823,
	92139, 2087, 1091, -252, 2124, 2124, 48725, 31992, 2173, -1000,
	48725, -1000, -1000, 3423, 127704, -1000, -1000, 127704, 2309, -1000,
	2874, 3616, -1000, 2307, 116103, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1087, -253, -254, -1000,
	-1000, 3402, -1000, 3300, -1000, -1000, -1000, 2677, 32, -1000,
	-1000, -1000, -259, 134910, 32, -1000, 241, -260, 1089, -261,
	92139, 1989, -1000, 791, -1000, 2555, 1003, -1000, -1000, -262,
	-1000, -267, -270, -1000, -1000, 237, 49875, 49875, 49875, -136,
	-137, -1000, 116103, 474, -1000, -1000, -1000, -1000, -1000, 136,
	-1000, -1000, 3041, 981, -1000, 876, 1933, 230, 1108, 227,
	224, -1000, -1000, -1000, 2778, -1000, 116103, -1000, -1000, 972,
	473, -1000, 48725, 1087, -272, -1000, 1059, -275, -1000, 1057,
	-277, -1000, 2887, -1000, -280, 2277, -268, 235, 1818, 964,
	3488, -1000, -1000, -1000, 2524, -283, -1000, -1000, 1952, 1087,
	2106, 2423, -1000, 2151, 962, -1000, -1000, -1000, 1087, 472,
	1952, 471, 1509, 791, -1000, -1000, 1360, 3354, 3124, 951,
	-1000, -1000, -1000, 3075, -1000, 53900, 2339, 1866, 131636, 3075,
	3075, -1000, -1000, 127704, 116103, 3473, -1000, 886, 883, 1524,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1003, -285,
	3470, 2515, 134910, -1000, -1000, 2124, 2733, -1000, 2124, 2879,
	-1000, 2139, -1000, -1000, -1000, -1000, 2877, -1000, 1819, 3604,
	-1000, -1000, -1000, 116103, 2106, 1952, 946, 1859, 1776, 3680,
	950, 2307, 1952, 57348, 2106, 57348, 2111, -1000, 116103, -1000,
	2060, 1351, -1000, -1000, 1924, 3575, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -157, -1000, 787, -1000, 3279, -1000, 1104,
	2201, 2201, -1000, -1000, 53, 876, -1000, 451, -1000, 450,
	-1000, 127704, 2226, -1000, -1000, -1000, 946, 2106, 1003, 449,
	-1000, 3679, -1000, 2307, -1000, 2106, -286, 946, -288, -1000,
	-1000, -1000, -158, 1989, -1000, 1596, 1864, -1000, -1000, 2212,
	49300, 48725, -1000, 3595, -1000, -1000, 2614, -1000, 48725, 2778,
	48725, 48725, 235, 64163, 1003, 946, -1000, -1000, 2524, 946,
	1087, 1003, 1952, 1509, 66406, -1000, -1000, -1000, 134910, -1000,
	-1000, -1000, 134910, -1000, -291, -300, -1000, -176, 99358, -1000,
	1003, -1000, 1003, 1952, -1000, 2106, 2111, -269, 2106, 1167,
	-301, -1000, -1000, 2106, 946, -1000, -1000, -1000, -1000, 448,
	-1000, 946, 1003, 48725, 1003, -1000, -303, -1000, 2106, -1000,
}

var sqlPgo = [...]int{
	0, 4528, 4527, 4525, 4524, 4523, 4522, 4521, 4520, 4519,
	4517, 4516, 4515, 145, 4513, 4512, 4511, 4509, 4507, 4506,
	4505, 4504, 4499, 4498, 4497, 4496, 4495, 4494, 4493, 4492,
	4485, 4484, 4482, 4481, 4480, 4476, 4474, 4471, 4468, 4465,
	4464, 4463, 4462, 4460, 4459, 4458, 4457, 4454, 4451, 4449,
	4445, 4443, 4440, 4436, 4435, 4434, 4430, 4427, 4426, 4425,
	4421, 4420, 4418, 4417, 4410, 4408, 4407, 55, 4406, 4405,
	4404, 4403, 4402, 4400, 4398, 4397, 4396, 4395, 4394, 4392,
	4390, 4388, 4386, 4382, 4380, 4374, 4370, 4368, 63, 4366,
	283, 4365, 4364, 4363, 4362, 4360, 4358, 4357, 4353, 4352,
	4351, 4348, 4346, 281, 4345, 147, 172, 4343, 4341, 3865,
	4339, 4338, 280, 4334, 4329, 4327, 4326, 4322, 289, 4320,
	4319, 4318, 4317, 4316, 4315, 4314, 4312, 4311, 4304, 4302,
	4301, 123, 222, 4300, 4298, 1248, 4297, 4295, 4294, 4293,
	4292, 4291, 4289, 4288, 4287, 4286, 4285, 254, 176, 4281,
	279, 4278, 4277, 4275, 4274, 4273, 4272, 4269, 4267, 4264,
	4263, 4262, 4261, 4260, 4258, 4257, 4255, 4254, 4252, 4250,
	4248, 4245, 4244, 4242, 4238, 4237, 4234, 4233, 4232, 4230,
	4229, 4228, 4227, 4226, 4225, 4222, 4220, 4219, 4217, 4213,
	265, 219, 141, 4212, 4211, 275, 274, 4209, 4208, 4207,
	4205, 4200, 136, 19, 41, 4196, 4191, 124, 94, 91,
	105, 106, 99, 4188, 111, 4186, 135, 67, 4183, 21,
	4, 169, 261, 12368, 243, 4177, 4174, 4172, 249, 201,
	4168, 248, 4165, 4161, 4154, 4150, 4147, 4145, 77, 56,
	187, 182, 177, 183, 82, 59, 109, 87, 58, 34,
	16, 92, 216, 20, 5, 268, 4143, 266, 11, 149,
	8, 32, 4139, 4136, 4133, 4132, 3948, 104, 4131, 269,
	252, 174, 4130, 4129, 4127, 492, 4122, 4121, 46, 4120,
	122, 86, 129, 17, 120, 4119, 157, 171, 36, 4118,
	246, 72, 4111, 4110, 95, 93, 9064, 10728, 4109, 4108,
	119, 74, 152, 3752, 167, 155, 202, 189, 165, 170,
	100, 220, 215, 184, 208, 4107, 263, 4106, 3536, 69,
	188, 160, 6216, 4104, 4103, 4102, 88, 4101, 110, 4100,
	4097, 68, 15, 3, 1, 151, 40, 42, 2, 4096,
	26, 125, 48, 23, 4095, 29, 4093, 4092, 4091, 4090,
	4089, 53, 164, 4088, 4087, 277, 4082, 114, 50, 37,
	4081, 25, 232, 4079, 236, 138, 4076, 4075, 262, 210,
	214, 4074, 79, 235, 4073, 4072, 4071, 4070, 4069, 4068,
	137, 9, 140, 4067, 4065, 150, 4064, 45, 247, 203,
	4063, 57, 4061, 4060, 178, 70, 153, 282, 197, 229,
	132, 233, 190, 240, 4059, 4058, 4057, 228, 4055, 4053,
	225, 179, 4052, 4046, 209, 291, 90, 47, 85, 245,
	83, 200, 162, 4042, 207, 4041, 4040, 284, 185, 226,
	10, 7, 117, 113, 4037, 6, 239, 166, 237, 134,
	4034, 7236, 2151, 2663, 4032, 4031, 156, 133, 81, 116,
	159, 272, 101, 4030, 4029, 1779, 4027, 4019, 4018, 4017,
	192, 4015, 4005, 3992, 154, 251, 198, 3989, 127, 78,
	51, 22, 143, 256, 273, 130, 227, 181, 255, 3988,
	3983, 3981, 191, 3979, 76, 121, 168, 206, 260, 61,
	3978, 115, 3977, 163, 244, 71, 139, 3975, 231, 3974,
	3972, 3971, 3969, 3966, 3965, 3964, 131, 238, 3963, 3960,
	3959, 35, 199, 3956, 271, 186, 224, 146, 49, 3955,
	98, 2494, 3954, 97, 218, 66, 205, 33, 3953, 221,
	60, 3952, 0, 13559, 9224, 11965, 13071, 3949, 3411, 3946,
	3944, 3942, 223, 84, 3941, 3940, 3939, 107, 3938, 89,
	3936, 3935, 80, 3934, 24, 18, 14, 31, 27, 362,
	257, 3933, 3932, 102, 144, 193, 3931, 276, 234, 3930,
	3929, 3928, 3924, 96, 3923, 44, 3922, 39, 3921, 3917,
	52, 13, 28, 3916, 3913, 161, 3912, 126, 259, 3911,
	173, 3910, 73, 142, 3909, 3908, 3907, 65, 62, 267,
	212, 217, 108, 3906, 286, 3904, 204, 3899, 3898, 30,
	3897, 3896, 250, 118, 112, 54, 253, 158, 43, 180,
	213, 3895, 3893, 175, 3892, 3889, 3888, 290, 3885, 3883,
	38, 3880, 3879, 3878, 12, 3876, 3875, 211, 3224, 3873,
	3870, 64, 3868, 196,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 11, 11, 7, 7, 7, 7, 8, 8,
	8, 8, 8, 51, 51, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 37, 39, 38, 32,
	32, 33, 33, 34, 35, 35, 10, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 19, 19, 40,
	40, 20, 20, 42, 42, 21, 21, 43, 43, 599,
	599, 599, 600, 600, 601, 601, 601, 24, 45, 17,
	18, 18, 18, 18, 602, 602, 602, 602, 36, 25,
	46, 29, 29, 29, 29, 29, 205, 205, 205, 205,
	23, 23, 41, 41, 241, 241, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 595, 595, 243, 243, 242, 235,
	235, 236, 236, 237, 237, 603, 603, 244, 244, 244,
	245, 245, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 495, 495, 495, 526, 526, 526, 526, 527,
	527, 622, 622, 623, 623, 623, 623, 623, 134, 134,
	393, 393, 393, 55, 55, 55, 55, 55, 590, 590,
	207, 207, 207, 209, 209, 208, 208, 208, 208, 208,
	79, 79, 609, 609, 608, 607, 607, 607, 610, 610,
	610, 206, 206, 206, 130, 130, 130, 130, 130, 130,
	131, 131, 132, 132, 210, 210, 210, 212, 212, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 216, 16, 16, 16, 113, 113, 113, 113, 113,
	113, 113, 108, 108, 529, 529, 530, 530, 201, 201,
	202, 202, 202, 202, 203, 203, 204, 204, 204, 70,
	70, 213, 213, 215, 215, 214, 214, 214, 214, 214,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 58,
	58, 58, 58, 58, 59, 59, 59, 59, 59, 59,
	60, 60, 60, 60, 60, 60, 61, 61, 68, 68,
	68, 68, 68, 68, 68, 192, 192, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	76, 76, 76, 76, 624, 624, 624, 624, 624, 624,
	624, 624, 624, 624, 624, 624, 624, 624, 624, 624,
	624, 624, 624, 625, 625, 626, 626, 627, 627, 628,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 628, 628, 628, 628, 628, 628, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 85, 85, 353, 353, 317,
	317, 86, 86, 86, 87, 87, 88, 88, 72, 72,
	588, 588, 369, 369, 486, 486, 73, 596, 596, 596,
	598, 598, 597, 597, 90, 90, 392, 392, 91, 91,
	91, 91, 91, 91, 92, 92, 92, 92, 92, 92,
	92, 93, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 100, 100, 100, 100, 100,
	101, 101, 101, 98, 98, 98, 95, 95, 95, 94,
	94, 94, 99, 99, 99, 587, 306, 306, 97, 97,
	97, 96, 96, 96, 370, 370, 102, 102, 102, 102,
	318, 103, 103, 103, 103, 103, 103, 103, 103, 106,
	106, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 488, 488, 104, 104, 104, 453,
	453, 109, 109, 109, 408, 408, 110, 110, 110, 110,
	110, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 592, 592, 362, 362, 269, 269, 269, 269,
	122, 122, 122, 122, 123, 123, 123, 124, 124, 197,
	197, 140, 140, 140, 140, 139, 139, 139, 139, 139,
	139, 139, 139, 62, 62, 62, 63, 63, 64, 64,
	65, 65, 66, 66, 67, 67, 67, 67, 67, 143,
	143, 619, 619, 145, 142, 142, 142, 142, 142, 141,
	141, 144, 144, 144, 144, 146, 148, 148, 148, 148,
	148, 147, 147, 147, 147, 147, 149, 149, 520, 520,
	378, 378, 518, 518, 539, 539, 519, 519, 324, 324,
	324, 324, 324, 325, 325, 325, 528, 528, 528, 528,
	528, 528, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 198, 198, 199, 200, 200,
	200, 200, 200, 175, 175, 175, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 379, 379, 178,
	178, 178, 162, 162, 151, 151, 151, 151, 151, 151,
	151, 156, 156, 156, 156, 156, 156, 156, 156, 152,
	152, 164, 164, 164, 164, 164, 157, 157, 158, 158,
	158, 159, 159, 159, 159, 185, 185, 161, 161, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 153, 153,
	153, 153, 166, 166, 166, 166, 415, 415, 415, 190,
	190, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 188, 188, 188,
	188, 188, 188, 611, 611, 612, 612, 612, 182, 182,
	182, 182, 182, 182, 467, 467, 176, 176, 176, 176,
	181, 181, 181, 181, 184, 184, 184, 184, 398, 398,
	173, 173, 173, 174, 174, 174, 179, 179, 180, 354,
	354, 177, 177, 183, 183, 183, 183, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 155, 155, 155, 155,
	186, 186, 172, 172, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 629, 629, 168, 168, 168,
	167, 167, 167, 167, 170, 170, 171, 171, 171, 171,
	171, 171, 169, 160, 189, 589, 589, 585, 585, 585,
	585, 585, 585, 585, 585, 586, 586, 586, 586, 591,
	591, 114, 114, 114, 114, 114, 114, 114, 125, 125,
	125, 125, 125, 125, 125, 128, 128, 115, 115, 115,
	115, 115, 115, 115, 118, 118, 116, 116, 116, 116,
	117, 117, 80, 80, 80, 80, 80, 15, 15, 15,
	81, 81, 260, 260, 219, 219, 219, 342, 342, 220,
	220, 332, 332, 332, 332, 217, 217, 218, 218, 82,
	82, 630, 630, 630, 604, 604, 604, 605, 605, 605,
	605, 605, 605, 326, 326, 327, 327, 433, 433, 433,
	433, 433, 330, 330, 330, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 340, 341, 341, 333, 333, 339,
	338, 338, 337, 337, 336, 336, 334, 335, 335, 335,
	344, 344, 343, 346, 346, 345, 432, 548, 548, 550,
	550, 550, 550, 550, 550, 550, 552, 552, 552, 552,
	552, 552, 552, 552, 552, 552, 552, 552, 552, 552,
	552, 552, 552, 416, 416, 631, 631, 632, 633, 546,
	546, 546, 547, 542, 542, 543, 543, 543, 543, 543,
	328, 328, 329, 329, 329, 329, 544, 545, 360, 360,
	471, 549, 549, 551, 551, 553, 634, 634, 634, 634,
	634, 634, 635, 635, 635, 431, 431, 430, 430, 351,
	351, 554, 554, 554, 554, 555, 555, 555, 555, 555,
	558, 557, 556, 556, 556, 556, 556, 84, 84, 84,
	395, 395, 394, 394, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 396, 396, 396, 396, 194,
	194, 272, 272, 272, 78, 78, 78, 12, 12, 12,
	12, 12, 12, 12, 287, 287, 13, 13, 13, 606,
	606, 606, 83, 83, 83, 83, 83, 83, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 594, 594,
	593, 593, 273, 273, 637, 637, 89, 89, 89, 89,
	89, 89, 89, 89, 489, 489, 490, 490, 77, 77,
	77, 77, 77, 417, 417, 414, 414, 413, 413, 359,
	359, 469, 469, 469, 470, 277, 277, 278, 278, 238,
	238, 238, 31, 30, 22, 22, 26, 26, 27, 27,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 28,
	28, 48, 48, 48, 48, 49, 49, 49, 49, 52,
	52, 53, 53, 47, 47, 47, 47, 50, 50, 44,
	44, 54, 54, 54, 54, 54, 613, 615, 615, 614,
	614, 618, 618, 618, 618, 618, 618, 616, 616, 617,
	617, 620, 620, 621, 621, 121, 121, 126, 126, 126,
	126, 126, 127, 127, 127, 127, 129, 129, 129, 129,
	138, 138, 193, 193, 193, 193, 193, 193, 193, 56,
	56, 56, 56, 69, 69, 69, 69, 136, 639, 639,
	639, 137, 137, 137, 638, 638, 270, 270, 427, 427,
	428, 428, 640, 640, 429, 429, 429, 429, 429, 263,
	262, 264, 264, 265, 265, 75, 75, 75, 253, 253,
	252, 254, 254, 255, 255, 250, 250, 531, 531, 257,
	257, 257, 258, 258, 246, 246, 247, 247, 248, 248,
	249, 249, 261, 261, 641, 641, 112, 112, 112, 196,
	196, 316, 316, 316, 424, 424, 424, 352, 352, 284,
	284, 426, 426, 426, 426, 391, 391, 391, 195, 195,
	367, 367, 381, 381, 382, 382, 483, 483, 383, 119,
	119, 120, 120, 135, 135, 223, 223, 221, 221, 221,
	221, 221, 221, 221, 221, 228, 228, 229, 229, 230,
	230, 231, 232, 232, 232, 232, 371, 371, 233, 233,
	233, 222, 222, 222, 224, 224, 224, 224, 224, 224,
	224, 227, 227, 227, 227, 234, 234, 234, 226, 226,
	565, 565, 565, 567, 567, 569, 569, 568, 568, 564,
	564, 566, 566, 636, 636, 397, 397, 397, 349, 350,
	347, 347, 348, 348, 357, 357, 355, 356, 356, 358,
	358, 468, 468, 468, 239, 239, 239, 388, 388, 388,
	388, 389, 389, 420, 420, 418, 418, 418, 418, 419,
	419, 421, 421, 421, 422, 422, 423, 423, 385, 385,
	386, 386, 387, 387, 387, 387, 449, 449, 225, 225,
	225, 364, 364, 364, 365, 365, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 440, 440, 438,
	438, 438, 438, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 473, 474, 474, 366, 366, 475, 425, 425,
	583, 583, 583, 584, 584, 466, 466, 476, 476, 476,
	476, 476, 476, 464, 464, 465, 465, 484, 485, 485,
	401, 401, 401, 401, 399, 399, 402, 402, 402, 402,
	402, 400, 400, 477, 477, 477, 477, 390, 390, 478,
	478, 478, 478, 479, 480, 480, 481, 481, 434, 435,
	435, 491, 491, 491, 491, 493, 363, 363, 363, 363,
	363, 541, 540, 540, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 508, 508, 508, 508, 508,
	508, 508, 494, 494, 494, 494, 494, 498, 498, 498,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 499, 499, 504, 504, 505, 505, 505, 500, 501,
	506, 506, 506, 506, 642, 642, 510, 510, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 496, 496, 496,
	503, 503, 503, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 409, 409, 411, 411,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 443, 443, 443, 443, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	559, 559, 559, 559, 559, 559, 559, 559, 445, 445,
	562, 562, 563, 563, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 570, 570, 571, 571, 573,
	573, 574, 574, 575, 576, 576, 576, 577, 578, 578,
	572, 572, 579, 579, 579, 579, 580, 580, 581, 581,
	581, 581, 581, 582, 582, 582, 582, 582, 455, 455,
	456, 456, 462, 462, 462, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	323, 323, 322, 274, 274, 274, 274, 274, 274, 376,
	376, 374, 374, 374, 377, 377, 375, 375, 373, 373,
	372, 372, 452, 452, 450, 450, 454, 454, 403, 403,
	509, 509, 509, 509, 509, 509, 509, 509, 404, 404,
	404, 412, 405, 405, 406, 406, 406, 406, 406, 446,
	447, 407, 407, 407, 448, 448, 457, 461, 461, 460,
	459, 459, 458, 458, 436, 436, 437, 437, 384, 384,
	643, 643, 380, 380, 482, 482, 482, 482, 320, 320,
	368, 368, 319, 319, 311, 311, 312, 312, 312, 312,
	361, 361, 463, 463, 511, 511, 512, 512, 513, 513,
	514, 514, 515, 516, 517, 451, 451, 295, 294, 281,
	282, 293, 292, 291, 280, 283, 288, 289, 290, 285,
	286, 302, 301, 300, 251, 256, 307, 308, 308, 310,
	310, 309, 309, 297, 298, 299, 487, 279, 313, 313,
	314, 314, 314, 315, 315, 315, 315, 275, 275, 276,
	276, 303, 303, 304, 305, 305, 296, 296, 296, 266,
	266, 266, 267, 267, 268, 268, 525, 525, 522, 522,
	522, 523, 523, 523, 524, 524, 524, 524, 521, 521,
	521, 521, 521, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 533,
	533, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 535,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	538, 538,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 4, 6,
	9, 6, 8, 4, 4, 5, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 1, 1, 1, 1, 0, 1, 6, 6, 4,
	8, 7, 10, 9, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 8, 4, 2, 3, 9, 3, 6,
	4, 3, 1, 3, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 1, 3, 3, 3, 6, 4, 9, 7, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	5, 2, 0, 1, 2, 3, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 4, 3, 6, 6,
	6, 6, 6, 8, 4, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	6, 3, 8, 3, 4, 3, 3, 4, 3, 4,
	4, 4, 3, 5, 7, 3, 3, 4, 3, 3,
	3, 3, 3, 2, 0, 1, 0, 1, 0, 4,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 1,
	2, 1, 2, 1, 2, 7, 3, 2, 0, 1,
	3, 3, 1, 0, 1, 2, 2, 1, 6, 5,
	1, 2, 1, 3, 2, 0, 7, 2, 5, 0,
	1, 3, 3, 1, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 6, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 1, 1, 3, 4, 6,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 3, 5, 7, 2, 3,
	0, 3, 5, 2, 3, 0, 2, 3, 2, 3,
	2, 7, 4, 7, 8, 8, 9, 11, 5, 2,
	6, 9, 4, 7, 7, 10, 7, 10, 10, 13,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 3, 5, 4, 6, 4,
	3, 0, 1, 3, 2, 4, 2, 4, 1, 6,
	3, 1, 1, 5, 3, 3, 2, 2, 6, 3,
	3, 3, 3, 4, 4, 3, 1, 3, 3, 2,
	2, 1, 3, 3, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 2, 2, 2, 1, 3, 3,
	3, 3, 3, 2, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 3, 5,
	7, 3, 3, 3, 4, 4, 6, 5, 5, 5,
	3, 4, 4, 3, 4, 4, 3, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 4, 6,
	4, 2, 6, 4, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 5, 3,
	5, 3, 3, 4, 4, 5, 0, 1, 1, 1,
	1, 3, 2, 3, 4, 3, 4, 3, 5, 3,
	4, 4, 3, 4, 5, 3, 4, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 3, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 5, 2,
	0, 3, 3, 4, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 4, 3, 4, 5, 4, 4,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	4, 3, 4, 4, 5, 1, 1, 10, 10, 3,
	5, 5, 5, 3, 5, 6, 4, 4, 5, 5,
	2, 3, 2, 5, 4, 2, 0, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 7, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 3, 3, 6, 5, 8, 3, 6, 6, 3,
	12, 15, 1, 0, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 0, 1, 0, 1,
	1, 0, 1, 4, 1, 0, 3, 7, 7, 1,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 2, 2,
	2, 8, 4, 2, 3, 5, 5, 5, 2, 5,
	5, 2, 2, 2, 0, 1, 1, 3, 4, 10,
	11, 9, 5, 3, 1, 5, 9, 6, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 5, 1, 3,
	1, 2, 0, 1, 2, 2, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 6, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 4,
	2, 3, 2, 2, 4, 7, 3, 4, 6, 5,
	7, 5, 5, 3, 3, 0, 2, 2, 2, 1,
	1, 1, 8, 10, 11, 7, 10, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 3, 0, 1, 8, 11, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 16, 19,
	15, 18, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 2, 4, 2, 3, 1, 0, 2, 0, 1,
	1, 0, 9, 6, 6, 8, 6, 8, 5, 7,
	2, 6, 7, 4, 4, 5, 2, 4, 6, 6,
	8, 6, 7, 8, 9, 6, 7, 8, 9, 6,
	8, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 6, 8, 8, 4, 7, 3, 0, 7,
	10, 1, 1, 1, 1, 2, 2, 3, 0, 3,
	0, 1, 0, 2, 0, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 3,
	2, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	0, 2, 4, 2, 1, 0, 2, 1, 1, 0,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 2,
	3, 2, 2, 1, 2, 13, 16, 3, 1, 0,
	4, 1, 0, 2, 2, 3, 0, 1, 1, 4,
	4, 5, 1, 0, 3, 0, 3, 0, 3, 0,
	3, 0, 4, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 4, 8, 11, 5, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 6,
	4, 5, 4, 1, 1, 3, 3, 1, 2, 4,
	4, 2, 3, 5, 5, 1, 3, 1, 0, 1,
	2, 3, 2, 4, 2, 3, 0, 2, 0, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 8, 8, 8, 2, 4, 4, 4, 2, 2,
	2, 2, 3, 1, 3, 1, 2, 6, 7, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 1, 0, 3, 3, 5, 1,
	3, 3, 4, 5, 2, 2, 0, 2, 2, 1,
	1, 1, 0, 1, 0, 2, 2, 5, 4, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 3, 1, 3, 3, 3, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 3, 2,
	4, 4, 0, 4, 4, 3, 4, 1, 5, 3,
	4, 5, 5, 1, 5, 1, 3, 2, 0, 3,
	0, 2, 3, 1, 3, 2, 0, 3, 5, 6,
	4, 6, 4, 3, 2, 1, 0, 5, 1, 0,
	2, 2, 2, 1, 1, 0, 1, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 4, 1, 0, 1, 0, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 3, 5, 1, 2, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	6, 6, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 3, 0, 5, 4, 1, 2, 1, 4, 1,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 2,
	5, 1, 4, 2, 5, 1, 4, 3, 3, 0,
	1, 2, 4, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 1, 0, 1, 4,
	1, 3, 3, 3, 5, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 5, 6, 6,
	7, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 2, 1, 5,
	5, 6, 3, 1, 1, 1, 2, 2, 2, 4,
	3, 5, 6, 8, 6, 5, 4, 3, 2, 2,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 1, 1, 1, 2, 1, 2, 2,
	3, 1, 2, 3, 2, 3, 2, 3, 1, 0,
	1, 3, 1, 3, 3, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	1, 2, 3, 0, 3, 3, 2, 2, 1, 2,
	2, 3, 2, 1, 1, 1, 5, 1, 2, 4,
	2, 0, 1, 0, 3, 5, 1, 0, 1, 2,
	1, 0, 1, 3, 3, 2, 1, 1, 1, 3,
	1, 3, 3, 1, 1, 1, 1, 5, 3, 1,
	1, 3, 1, 1, 1, 1, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 7, 1, 7, 5, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 606, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -133, -138, -119, -120, -121, -134, -140,
	-193, -198, -199, -200, -3, -55, -57, -71, -90, -92,
	-103, -113, -112, -114, -122, -130, -125, -108, -62, -135,
	-139, -150, -194, -195, -196, 32, 31, 100, 80, 156,
	129, 138, 206, 389, 435, 447, 404, 143, 426, 409,
	-144, -145, 465, -56, -69, -137, -136, 73, 130, 419,
	-4, -12, -16, 29, 46, -58, -59, -60, -61, 62,
	-78, -74, -85, -79, -72, -73, -76, -624, 102, -566,
	-93, -96, -129, -628, 164, 224, -115, -116, -117, 371,
	-123, -124, 428, -126, -127, -128, 431, 165, -64, -63,
	158, -221, -223, -142, -141, -143, -197, -151, -152, -153,
	-154, -155, -156, -157, -159, -185, -160, -161, -162, -163,
	-164, -165, -169, -188, -166, -167, -168, -171, -170, -172,
	-177, -173, -174, -175, -176, -178, -179, -181, -182, -183,
	-184, -186, -187, 470, -180, -189, -158, 530, 49, 485,
	82, 148, 439, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -54, -75, -77, -80, -81, -82, -89,
	-83, -84, -565, -94, -95, -98, -100, -101, -97, -99,
	427, -224, -222, 603, 545, -19, -24, -20, -21, -23,
	-25, -22, -26, -27, -28, -40, -45, -42, -43, -41,
	-44, -46, -47, -48, -49, -50, -51, -52, -53, -30,
	-36, -37, -31, -32, -33, -34, -35, -38, -39, -17,
	-18, -29, 566, 575, -227, -225, -226, -234, 457, 553,
	505, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, -318, 2, -297, -303, -304, -305, -296,
	-266, -535, -538, 4, -532, -536, 171, 234, 335, 21,
	23, 22, 24, 25, 26, 27, 29, 30, 41, 42,
	44, 45, 46, 47, 48, 49, 53, 55, 59, 60,
	61, 62, 63, 64, 68, 73, 74, 79, 80, 81,
	82, 83, 84, 85, 91, 88, 89, 90, 92, 94,
	96, 97, 98, 99, 100, 101, 103, 104, 105, 107,
	108, 109, 117, 118, 119, 120, 121, 123, 129, 124,
	130, 133, 128, 132, 134, 136, 137, 138, 141, 142,
	143, 145, 146, 147, 149, 150, 151, 153, 154, 156,
	157, 158, 161, 159, 162, 160, 163, 164, 165, 166,
	169, 177, 178, 179, 184, 186, 187, 188, 192, 193,
	194, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	207, 211, 213, 214, 215, 216, 217, 223, 224, 226,
	227, 228, 229, 230, 235, 236, 237, 240, 246, 247,
	251, 252, 253, 255, 259, 260, 261, 262, 263, 264,
	266, 268, 267, 270, 273, 274, 277, 278, 279, 280,
	281, 282, 286, 287, 283, 288, 289, 291, 292, 295,
	293, 296, 297, 294, 298, 300, 301, 302, 303, 304,
	305, 306, 307, 308, 309, 310, 311, 299, 314, 312,
	316, 317, 318, 319, 333, 328, 329, 330, 323, 324,
	320, 325, 321, 322, 326, 327, 332, 337, 338, 341,
	221, 343, 344, 347, 365, 351, 352, 353, 356, 357,
	360, 363, 364, 366, 367, 368, 369, 370, 371, 372,
	373, 374, 376, 377, 379, 380, 381, 383, 384, 385,
	387, 389, 390, 392, 393, 395, 396, 397, 398, 399,
	400, 401, 403, 404, 406, 405, 407, 409, 411, 412,
	413, 419, 426, 420, 422, 423, 424, 425, 427, 428,
	429, 430, 431, 433, 434, 435, 437, 438, 439, 440,
	441, 443, 445, 446, 450, 451, 467, 468, 487, 447,
	448, 449, 452, 453, 454, 455, 456, 460, 458, 459,
	461, 462, 463, 465, 466, 469, 470, 472, 473, 474,
	475, 476, 477, 478, 481, 483, 484, 485, 504, 486,
	488, 492, 493, 494, 495, 489, 490, 503, 497, 498,
	500, 501, 506, 507, 508, 509, 510, 511, 512, 513,
	515, 523, 524, 525, 527, 530, 531, 532, 533, 521,
	535, 536, 539, 540, 541, 544, 542, 543, 545, 547,
	550, 551, 552, 558, 557, 559, 561, 562, 567, 568,
	570, 571, 572, 36, 50, 51, 54, 56, 58, 69,
	70, 71, 75, 125, 126, 155, 167, 168, 180, 195,
	196, 208, 210, 218, 219, 220, 241, 242, 244, 249,
	271, 340, 342, 358, 362, 378, 382, 386, 388, 402,
	442, 479, 491, 496, 516, 517, 518, 519, 526, 528,
	553, 554, 555, 560, 569, -318, 2, -297, 349, -290,
	2, -266, -266, 389, 28, 2, 28, 377, 459, 508,
	510, 2, -592, -362, 2, 28, -269, -266, 102, 206,
	457, -290, 2, -592, 206, -362, 25, 2, -266, 2,
	363, 22, 27, 66, 77, 98, 141, 166, 189, 192,
	-627, 365, 396, 445, 461, 503, 513, 527, 2, 557,
	292, 458, 505, 234, 120, 532, 452, -606, 450, 451,
	363, 394, 437, 209, 546, -270, 2, 447, -266, 292,
	2, 606, 94, 74, 442, 462, -147, 2, 282, 524,
	-148, -149, -146, 516, -520, 452, 437, 314, -266, 606,
	606, 606, 28, -279, -266, 505, 234, 452, 120, 501,
	606, 2, 505, 368, 557, 458, 120, 399, 234, 532,
	192, 141, 27, 452, -606, 580, 581, 292, 127, -590,
	2, -585, 4, -536, -532, -312, -311, 505, 511, 120,
	-305, -296, 595, -304, 606, 606, 606, 606, 2, 252,
	253, 398, 397, 462, 463, 28, 606, 606, 606, 606,
	450, 2, 166, 22, 27, 66, 93, 98, 127, 189,
	192, 354, -625, 365, 396, 461, 503, 507, 513, 527,
	-605, 486, 68, 425, 452, -604, -606, 292, 532, 141,
	-413, 120, 282, 204, 540, 510, 508, 538, 133, 240,
	543, 542, 606, 606, -106, 2, 603, 32, 31, -105,
	-109, 143, 465, -216, 505, 245, 2, -266, 606, 606,
	606, 2, 252, 253, 450, 451, 28, 606, 606, 190,
	-585, 2, 606, 606, 606, 2, 28, 252, 253, 450,
	451, 245, 2, 68, 454, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 2, -191, 462, 486, 215, 47, 46, 74, 28,
	395, 79, 369, 121, 127, 150, 533, 207, 234, 235,
	260, 93, 94, -415, 44, 253, 68, 252, 451, -611,
	450, -467, 506, 453, 459, 500, 264, 447, 524, 102,
	547, 438, 572, 399, 400, 498, 413, 283, 159, 191,
	4, 120, 314, 437, 464, 268, 267, 516, 282, 446,
	372, 84, 606, -636, 2, 505, -638, 2, 524, 524,
	2, -638, 2, -638, 2, -638, 2, -639, 524, 569,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, -222, -224,
	-223, 606, 606, 606, 606, 606, 606, 606, -191, 462,
	2, 74, 28, -355, -357, 537, 243, 152, 355, -221,
	-223, 2, -565, -518, 2, -441, -539, -443, 593, 594,
	586, 502, 67, -322, 334, 573, -455, 127, 538, 349,
	-538, -444, -457, 155, 365, 442, -377, 8, 9, 5,
	6, 7, -275, -445, -451, 529, 170, 339, -315, 607,
	10, 603, -562, -223, -456, 37, 210, 65, -522, -314,
	-276, -494, 244, -313, -296, -559, -560, 4, -532, -533,
	-523, -497, -505, -501, -502, -508, -266, -535, 77, 111,
	112, 110, 115, 114, 285, 284, 116, 113, 464, 546,
	66, 36, 218, 219, 249, 340, 220, 75, -561, 142,
	-534, 241, 242, 479, 51, 402, 180, 126, 125, 342,
	56, 54, 554, -506, 122, 516, 517, 518, 519, 195,
	196, 58, 167, 168, 362, 386, 496, 526, 528, 208,
	271, 43, 106, 191, 239, 222, 248, 250, 254, 272,
	275, 315, 331, 336, 359, 361, 436, 471, -642, 555,
	491, 69, 70, -567, 405, -568, -290, -567, 606, 606,
	608, 606, -347, -349, -350, 2, 28, 139, 603, 2,
	-472, 2, -473, -477, -223, 265, -476, 603, -474, 601,
	-297, 350, -563, 443, -559, -560, -275, -296, -314, 4,
	-532, -534, 605, -351, 603, 120, 452, 505, 78, 234,
	93, 166, -408, 603, -266, 28, 349, 520, 608, -348,
	393, -453, 603, 349, 352, 190, 352, 60, 296, 2,
	2, 2, 2, 2, 218, -266, 505, 119, 2, 263,
	2, 2, 2, 2, 2, 2, 2, -370, 218, 2,
	-297, 557, -370, 218, 2, -370, 218, 2, -414, 2,
	87, -280, 218, 2, -266, -306, 218, 2, -301, -303,
	-310, 218, 2, -308, -266, -527, 218, 2, -526, 4,
	-532, 116, 464, -441, 2, -135, 2, 60, -266, 557,
	2, 467, 2, 603, -147, 2, 71, 524, 43, 462,
	-148, 2, -428, 2, -429, -262, -263, -264, -484, -265,
	251, 392, 401, 576, 131, 334, 572, -619, 190, 585,
	520, -518, -518, -518, -378, 605, 2, 2, 2, 2,
	2, 2, -477, 218, -297, 2, -294, -521, 4, -532,
	-536, -533, -537, -535, 28, 31, 32, 33, 35, 37,
	38, 39, 40, 57, 65, 66, 72, 76, 78, 87,
	93, 102, 110, 111, 113, 112, 114, 115, 116, 127,
	131, 135, 139, 140, 144, 148, 152, 170, 172, 185,
	189, 190, 206, 209, 212, 225, 238, 243, 245, 265,
	269, 276, 284, 285, 334, 339, 345, 349, 350, 354,
	355, 375, 391, 408, 432, 457, 464, 482, 499, 505,
	514, 520, 522, 529, 537, 538, 546, 548, 556, 563,
	564, 565, 566, -538, 77, 2, -477, 218, 2, -300,
	218, -477, -303, 2, -280, 2, -441, -599, 512, 162,
	420, 2, -319, 218, -297, -299, -303, -301, 2, 2,
	2, 2, -308, 2, -526, 218, 2, 28, 28, 557,
	393, 245, 520, 608, -368, -311, -312, -517, 8, -361,
	-266, 605, -441, 2, -135, -118, 2, 185, -441, 218,
	2, -135, 218, 2, -441, 218, 2, -135, 218, 2,
	-266, 2, -607, 2, -529, 218, -525, 10, -524, 5,
	4, -532, -536, -533, 218, -266, 2, 296, 2, 2,
	527, 2, 98, 505, 119, 2, 424, -626, 445, 531,
	2, 2, 2, 2, 2, 2, 2, 505, -285, 2,
	-266, 185, 489, -308, 218, -309, 2, 458, -637, 405,
	-526, 218, 2, 557, -301, 218, 2, -301, 234, 247,
	-280, 218, 2, 510, 508, 510, 508, 190, 2, 245,
	2, 245, 2, -478, 2, -479, -473, -480, 601, 350,
	-488, 2, -487, -524, 553, -106, 603, -106, 603, 462,
	603, -529, -297, -297, -441, 2, -135, -118, 2, -441,
	2, -135, 2, -266, 2, -132, -529, -131, 603, 190,
	-266, 2, -441, 2, -135, -118, 2, -441, 2, -135,
	2, -216, 185, 2, 120, 505, -191, 2, 185, 548,
	2, 8, 2, 225, -529, 453, 400, 177, 2, 467,
	2, 468, 74, -415, 572, 74, 190, 2, 190, 2,
	-398, 2, 566, 393, 190, 2, 2, -589, 2, 349,
	190, 2, 190, 2, 190, 2, 190, 2, 190, 2,
	-190, 463, 525, 504, 397, 253, 2, -135, 563, -118,
	253, 252, -441, 563, 2, -612, 185, 451, -441, 2,
	523, 262, 160, 190, -398, 2, 190, 2, 190, 2,
	5, 2, 398, 487, 2, 251, 392, 487, 2, -297,
	505, 557, 458, 120, 28, 2, 450, 2, 2, 88,
	89, 190, 2, 190, 2, 205, 190, 2, 190, 505,
	-379, 605, 572, 2, -390, -477, -427, -428, -427, 520,
	-355, -357, -191, 467, 2, -228, -388, -230, 185, -418,
	-419, -231, 276, 172, 345, -232, -397, 28, 139, -397,
	-397, 60, 604, 604, 11, 12, 76, 41, 593, 594,
	595, 596, 183, 597, 598, 591, 592, 590, 583, 584,
	588, 257, 258, 95, 587, 585, 86, 290, 444, 173,
	174, 175, 176, 421, 232, 34, 233, 14, 15, 16,
	-322, 33, 354, 275, 573, 222, 471, 586, 17, 18,
	19, 248, 250, 336, 50, 225, -274, 365, -321, 502,
	67, -441, -441, -441, -441, -441, -441, -441, -441, 361,
	603, -384, -436, 601, -223, 603, 603, 603, 603, -517,
	-223, -441, -455, 604, -375, 603, -223, -455, -450, 603,
	442, 601, 603, -458, -441, 5, 5, 5, 603, 605,
	-570, 567, 185, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 388,
	-499, 603, -498, 603, -498, -498, 558, -496, 603, 575,
	568, 603, -496, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 558, 608, -567, -351,
	603, -380, -482, -441, 595, -380, -380, 349, -372, -441,
	106, -401, 254, 315, 191, 272, 436, 239, -438, 607,
	-438, -466, 575, -223, -474, -296, -223, -476, 603, -472,
	-466, -107, -517, -90, -103, -112, -135, -150, -195, -196,
	595, -297, 603, 190, 603, 605, -521, 190, -361, -280,
	-307, -266, -297, -313, -314, -319, -291, -266, 2, 138,
	-372, -585, 532, 452, 28, 458, -527, -269, 38, -452,
	-491, -492, -541, 607, -540, -494, -504, -500, -503, 378,
	382, -523, 54, 554, -506, 244, 4, -532, -534, 241,
	242, 479, 51, 402, 180, 126, 125, 342, 56, 516,
	517, 518, 519, 195, 196, 58, 555, 491, 69, 70,
	-585, 532, 452, 28, 458, 185, -527, 185, -527, 2,
	2, 155, 2, 2, 2, -266, -244, 608, 64, 429,
	155, -370, 218, -244, 155, -244, 155, -320, 218, -319,
	-244, 155, -244, 608, 155, -244, 608, 155, 605, 608,
	155, -527, 2, -414, -520, -372, 38, -428, 2, 127,
	4, 5, -640, 608, 274, -325, 289, 333, 214, 350,
	570, 343, 131, -528, 5, 4, -451, -463, 127, 282,
	244, -511, -513, 8, -512, 9, -514, 593, 594, -519,
	-518, 109, 605, -521, -241, 422, 465, 364, -240, 24,
	29, 143, 236, 319, 551, 161, -337, 237, -334, 368,
	155, 483, 541, -599, -602, 449, 512, 162, 420, 90,
	343, 465, 364, 422, 155, -394, -396, 38, 118, 319,
	363, 61, 228, 294, 295, 485, 560, 155, 465, 364,
	422, 364, -13, -255, 24, 143, -257, -252, 465, -602,
	99, 422, 579, 427, 374, 497, 391, -602, -599, 270,
	-601, 562, 332, -243, 483, 541, -599, -602, 449, 422,
	-242, -339, -334, 368, 155, 607, 24, 143, 422, 465,
	364, -622, -623, 29, 422, 364, -593, -287, -564, 225,
	566, 155, -287, -287, -477, 218, -616, 185, 2, -609,
	-131, 266, 5, 10, -529, -131, -368, 608, 608, -521,
	595, 451, 450, 155, 155, 155, 155, 253, 185, 334,
	334, 2, 2, 2, 2, 2, 192, -604, -627, 2,
	2, -297, 218, -353, 349, -588, -369, 505, -297, 185,
	334, 43, -300, 218, 2, -303, 557, -593, 334, -302,
	218, -297, 38, 603, 334, 2, -414, 2, 234, -564,
	334, -478, -316, -297, -473, -316, 465, -290, 38, -438,
	-297, 604, 608, -488, -488, -529, -204, 566, 190, 603,
	-216, 566, 566, 253, -485, 608, -484, 225, -530, -529,
	-132, -529, 425, 253, -529, -588, -280, 2, -297, 2,
	505, 255, -529, -204, 225, -529, -529, -529, -520, 28,
	468, 2, -190, 463, 525, 89, 468, 2, -297, 505,
	120, 234, 80, -616, 185, 2, -266, -591, 185, -586,
	437, 452, 532, -585, -297, 120, -297, 120, -297, 120,
	-297, -297, 2, 2, 2, 2, 2, 85, 2, -135,
	-441, 2, 85, 2, 46, 484, -612, 185, 2, 523,
	2, 523, 2, -266, -266, -266, 486, 274, -297, -297,
	-297, -298, -303, 453, 506, 533, 451, -441, 2, -629,
	2, 190, 185, 2, 505, 234, 505, 234, 120, 190,
	74, 120, 28, 505, 448, 605, 4, -244, 608, -270,
	-228, -388, -520, -389, -388, -229, -228, -231, 185, 401,
	542, 319, 469, 259, -419, -418, 28, -441, -423, 179,
	318, -441, -421, -443, 593, 594, -512, -514, -371, 343,
	-222, -222, -222, -358, -468, -441, 391, 234, -493, -491,
	-491, -295, -521, 516, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	275, 222, 471, 50, 225, -441, 520, -441, -441, -441,
	-441, 312, 334, 339, 529, 170, 539, 139, 343, -643,
	499, 40, -448, -223, -376, 603, -462, 35, 482, 28,
	-455, 603, 2, -436, -441, -437, -323, -321, -266, 593,
	594, 595, 596, 597, 598, 583, 584, 585, 14, 15,
	16, 588, 592, 590, 591, 183, 95, 587, 290, 444,
	86, 173, 174, 175, 176, 257, 258, 17, 18, 19,
	34, 586, -373, -372, -372, 604, 556, 28, 139, 595,
	2, 604, 608, 38, 604, -441, -373, -454, -450, -372,
	-461, -460, 563, -409, -410, 571, 299, 123, 216, 297,
	-411, 456, -515, 8, -521, 595, -571, 178, 209, 603,
	604, 2, 604, 2, 604, -441, 2, 604, -441, 2,
	604, -441, 2, 604, -441, 2, 604, 2, 604, 2,
	-441, -441, -441, -441, -441, -441, -441, -372, 8, -515,
	-515, 516, 516, -515, -515, -515, -507, 378, 379, 380,
	381, 277, 278, 279, 280, 382, 383, 384, 385, 304,
	305, 306, 307, 300, 301, 302, 303, 308, 309, 310,
	311, 200, 201, 202, 203, 196, 197, 198, 199, -507,
	-403, 2, -509, -372, 4, 571, 299, 123, 216, 297,
	456, 5, -403, 2, -404, 2, -441, -372, -405, -442,
	-443, 593, 594, 586, -322, -455, -406, 2, -441, -373,
	-441, 57, 269, 522, -407, -441, 190, -372, -372, 2,
	-372, 2, -568, 38, -372, -364, 608, 190, 38, 4,
	-364, -364, 603, 604, 608, -402, 213, 293, 288, 247,
	-402, -472, -401, 254, -399, 359, -399, -399, -466, -281,
	601, 609, -521, -466, -465, -464, 38, -290, 356, -466,
	-466, 605, 604, -465, 602, -583, 603, 606, 606, 606,
	606, 606, -297, 603, -372, -521, 605, 488, 2, 604,
	248, 248, 248, 248, 248, 349, 443, 604, 520, -587,
	-306, -310, 506, 2, 566, -105, 351, 604, 608, -363,
	37, 601, 605, -515, 2, 2, -510, 558, 603, 603,
	-410, 603, 190, -587, -310, 506, 2, -592, -362, -362,
	520, -266, 2, -297, -370, -244, 155, -370, -370, -244,
	608, 155, -280, -301, -306, -308, -310, -266, -526, -527,
	-244, -302, -619, 604, 524, -429, -324, 401, 481, 423,
	460, 501, 8, 9, 8, 9, 608, -521, 608, -620,
	93, 520, 78, 452, -259, 283, 520, -432, 218, 78,
	-542, 93, -283, -543, -266, 72, 538, 391, 189, 153,
	-620, 93, 391, -620, 93, 2, 236, 93, 465, 486,
	28, 60, -477, 41, 41, 28, -600, -601, 270, 190,
	572, 505, 234, 452, 520, 520, -477, -396, -491, 118,
	294, 295, 60, -516, -511, 593, 594, -516, 60, -516,
	-516, -516, 566, -300, -477, 452, 520, 520, 520, 411,
	411, -252, -148, 520, 520, 28, -191, 430, 127, -641,
	585, 411, 270, -601, 520, 190, 608, 41, 41, 28,
	-600, 190, 520, -319, -281, 552, 42, 552, 42, 552,
	520, 42, 452, 520, 608, 42, 520, 520, -13, 465,
	-594, -271, 105, 325, 287, 326, 97, 322, 96, 321,
	103, 323, 104, 324, 559, 337, 63, 320, 298, 327,
	-272, -273, 146, 370, 550, 120, -526, -13, -13, 465,
	364, 422, 155, -617, 225, 28, -606, 225, -485, 225,
	-485, -311, -266, 605, -135, -441, -441, -135, -441, -135,
	46, 155, 155, 2, -637, 263, 603, -328, 334, 190,
	-361, -486, 245, 608, -369, -585, 155, -526, -395, -394,
	334, -302, 218, 2, 155, -351, 334, 149, 603, 399,
	2, 155, -282, 218, -267, -266, -414, -246, 509, 155,
	-392, 548, -424, -135, 603, 127, 38, -424, -381, -382,
	-483, -383, -283, 603, -290, -438, -106, -487, 604, 604,
	604, -203, 353, -202, -266, 5, -216, -352, -284, -283,
	119, 403, 403, -210, 566, -131, -132, 604, 608, -485,
	225, 489, -204, -204, -485, -485, -297, 185, -529, -204,
	-204, -204, 2, 2, 2, 2, -398, -297, -280, -319,
	-297, 28, 605, -527, -527, -310, -306, -398, -280, -398,
	-280, -398, -280, -398, -398, -135, -441, 486, 2, 462,
	185, 185, 605, -398, -354, 432, 2, 399, 120, 505,
	368, 234, -297, -319, -297, -319, -280, 120, -280, 121,
	-297, 4, -477, -389, -229, 350, 259, 469, -421, -422,
	-443, 442, 443, -422, 442, 443, 8, 9, 8, 9,
	-233, 473, 338, -370, 608, -238, 39, 135, 259, -297,
	572, 151, -441, -441, 520, -643, 499, -448, 151, -441,
	312, 339, 529, 170, 539, 139, 343, 190, 603, -442,
	-442, 604, -374, -441, -441, 602, 611, 604, 605, 604,
	-357, 608, -355, -441, -372, -372, 604, 605, -372, -361,
	602, 602, 608, 604, -459, -460, 144, -441, 520, 520,
	520, 520, 603, 604, 605, -576, 360, 603, 603, -441,
	604, 604, 604, 604, 38, 608, 608, 608, 604, 608,
	608, 608, 604, 604, 604, 608, 604, 572, 572, 604,
	604, 604, 604, 608, 604, 608, 604, 190, 604, 604,
	-412, 375, 604, 11, 12, 593, 594, 595, 596, 183,
	597, 598, 591, 592, 590, 583, 584, 585, 86, 290,
	444, 14, 15, 16, -322, 248, 225, -442, -442, -442,
	-442, 604, -446, -447, 190, 185, 38, -407, -407, -407,
	604, 190, -372, 604, 604, 603, -569, 292, 334, 604,
	-435, -434, 564, -482, -365, 2, -472, -292, -521, -435,
	-435, -372, -441, 254, 254, -400, 548, 349, -402, -472,
	-465, -517, -440, -439, 187, 39, 135, 328, 329, 330,
	221, 188, -465, -290, -351, -465, -465, -521, -466, -466,
	-464, 604, -584, -517, 604, -366, -475, -563, -357, 605,
	-521, -213, -564, -192, 5, 339, -192, -192, -192, -192,
	-297, -527, 520, 520, 225, 25, 376, -491, 601, 602,
	8, -521, 603, -515, -515, -515, -527, 190, 190, 225,
	349, 190, -526, 2, -244, -370, -244, -244, -319, -320,
	-244, -244, -244, -393, 566, -518, -428, 536, 83, 401,
	516, -518, -240, 422, -283, -283, -297, -307, 204, 412,
	-526, 334, -432, 218, -245, 334, 218, -291, -491, 603,
	-416, 568, 259, 259, 548, -283, -291, 259, 218, -283,
	218, -291, 2, -291, -595, 401, 344, -441, 60, -335,
	281, 399, 335, -241, 422, 465, 364, -135, -135, -135,
	603, -619, 548, 138, -297, -319, -297, -307, -526, -302,
	465, 364, 422, 331, -313, -516, -516, -394, 465, 364,
	422, -307, -526, -300, -526, -251, 218, -266, -251, 218,
	452, -280, 411, 572, 45, -641, 520, 190, -441, -441,
	-242, -135, -135, -135, 603, -281, -243, 422, 5, 218,
	-283, 5, -283, 218, 5, -266, -283, -307, -526, -623,
	24, 143, -283, -307, -526, -271, 370, -529, 339, 544,
	-280, -593, -287, 452, 520, 520, -477, -613, -614, 206,
	435, 452, 438, -527, -131, -207, 566, -131, -201, 229,
	595, -590, -529, -266, 557, -266, -326, -329, -327, -283,
	-433, -432, -546, -547, -542, 275, 234, 538, 247, 171,
	93, -219, -220, 568, 566, 155, -317, -297, 601, -204,
	-529, -297, -486, -308, -309, 155, -351, 334, -526, 38,
	155, 603, 2, 2, -301, 349, 334, -282, 218, -247,
	145, -641, -280, -435, -365, -391, -426, 432, 349, -352,
	553, -290, -391, -367, 608, 190, 585, 605, -352, -481,
	595, -106, -106, -204, 608, 603, 585, 585, 603, -529,
	604, 608, 605, 603, 585, 585, -212, 353, -211, 147,
	261, 246, 475, 476, 477, 478, 137, 474, 124, 317,
	230, -485, -529, -210, -132, 190, 190, -65, 566, 505,
	-204, 607, 438, -266, -398, -398, -398, 462, 462, -266,
	-361, -293, -521, -280, -297, -294, -319, 185, 185, -280,
	542, -422, 350, 286, -468, -239, 574, -297, 607, -441,
	-441, 151, 151, -441, -442, -442, -441, 151, 190, 603,
	-441, -452, 33, 33, 604, 608, -437, -441, -321, 604,
	556, -357, -357, 604, 595, -521, 607, 604, -450, 148,
	-441, 514, 299, 216, 297, -411, 297, -411, -411, -515,
	5, -521, 595, -577, -286, 603, -266, 564, -356, 355,
	604, -493, -491, -441, -441, -441, -441, -441, -515, -496,
	-496, -511, -511, -441, -446, -441, -493, -491, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, 139, 334,
	343, -442, -447, -446, -441, -441, -491, 604, 604, 604,
	-372, -105, 603, 292, -385, 209, -441, -485, 608, -385,
	-385, 604, -472, -472, 603, -441, 254, 602, 608, 610,
	585, 585, -351, 605, -464, -465, 602, 604, 608, 604,
	608, -425, 38, 604, -521, -435, -215, -214, 136, 53,
	107, 134, 339, 248, -615, 566, -527, -527, 452, 352,
	5, 8, 601, 602, 605, -515, 604, 604, 604, -527,
	-527, 452, -585, 532, 452, 28, -527, -244, -244, 119,
	319, -441, 520, 520, 60, 225, 155, 334, 550, 334,
	-543, 153, -548, -441, 603, 234, 603, 603, 2, -235,
	-236, -237, 143, 465, 24, -621, 2, 548, 155, -244,
	155, -244, 570, -335, 603, 603, 520, 452, -259, 520,
	566, -372, -441, -205, 127, -520, -602, 607, -602, 607,
	452, 520, 520, 452, 520, 520, 334, 155, 566, 169,
	169, 572, -251, -441, -441, 185, 520, 566, -372, 520,
	-495, 48, 26, 334, -301, -244, 155, 520, 520, 532,
	465, -529, -529, 339, -13, -307, -526, -302, 465, 364,
	422, -592, -592, 206, -310, -617, -485, -209, 353, -208,
	147, 434, 137, 261, 230, -485, -207, 190, 245, 566,
	-302, 2, 604, 604, 608, 608, -549, -245, -297, -282,
	234, 234, -289, -267, 38, 347, 347, 603, -297, -86,
	566, -484, -517, -596, 566, 43, -300, 38, 155, -593,
	-135, -302, -489, -490, 5, 38, -297, 155, 349, 334,
	-248, 268, -641, -525, -564, -357, -391, -380, 335, 91,
	604, -435, -382, -365, -441, 2, 604, -202, -203, -529,
	-529, -529, -204, -216, -284, 2, -530, -529, -529, 608,
	603, 585, 585, 585, 585, 585, 585, -210, -485, -131,
	-135, 353, -297, 595, -398, -341, -340, 368, 343, -341,
	442, 442, 350, 179, 264, -238, -281, -441, -441, 151,
	33, 33, -441, -441, -452, 604, -441, -441, -372, 602,
	5, -441, 604, 604, 8, -441, 604, 605, -578, -266,
	-441, 604, 60, 604, 604, 608, 608, 604, 604, 604,
	604, 604, 604, 604, -447, 190, 139, 343, 603, 604,
	604, -105, -449, 212, 60, -472, -449, -449, -400, -361,
	-472, -439, -281, 601, -281, 601, -521, -517, -475, 603,
	605, -214, 585, -529, -529, -192, 206, -615, -615, 566,
	-310, 602, 2, 601, -521, 604, -310, 190, -587, -310,
	506, 119, -283, -283, 505, 442, -251, 391, -432, 155,
	155, -550, 93, -552, 76, 171, 102, 334, 339, 538,
	391, 72, 127, 349, 408, -631, -632, -633, 38, 577,
	578, 604, -359, -469, -563, 603, -266, -359, -361, 334,
	494, 127, 349, 334, 127, 349, 561, 119, 2, 532,
	79, -283, -291, -361, -361, -297, -307, -526, 163, 604,
	608, 585, 2, 595, 595, -307, -526, -302, -307, -526,
	-300, 155, -251, 366, 169, 520, -135, -441, 163, 604,
	-281, 5, 5, 155, -278, 76, -283, 5, -283, -301,
	119, 452, 520, 520, 349, 349, 352, -613, -614, -207,
	608, 603, 585, 585, 585, -207, -530, -131, 2, -351,
	-342, 236, -283, -547, -544, -545, 391, -433, -551, -553,
	171, 391, -330, 603, -282, -267, 603, -135, 2, -218,
	-217, -266, 5, 603, -328, 353, 602, -598, 353, -597,
	117, 137, -526, -395, -135, -302, -351, 604, 608, 149,
	-417, 548, -281, -297, 155, -249, 267, -641, -525, -246,
	-420, -418, 140, 603, 349, -135, -357, 585, 604, 604,
	119, 604, -211, -212, -529, -131, -529, -529, -529, -131,
	-210, -485, -66, -67, 234, 93, 373, -294, 505, 234,
	603, 603, -238, -441, -441, -441, 604, -357, -521, 595,
	-572, 368, 604, -468, -441, -441, -442, 190, 603, -452,
	604, -573, 565, -441, -386, -387, -441, 440, 108, 210,
	-573, -573, 604, -517, -517, 2, -529, 352, 2, 520,
	601, 2, 190, -527, 190, 190, 225, 225, 38, 411,
	-432, -291, -291, -295, -288, -266, 171, 218, 339, 561,
	-416, 259, 603, -442, 542, -297, 603, 2, 217, 217,
	30, 60, -634, 131, 238, 604, 608, -470, -277, -266,
	-441, -470, 604, 604, 339, 542, 339, 561, -441, 542,
	-491, 603, -244, -244, 604, 604, -441, 520, -520, 100,
	-518, 2, -602, -251, -280, -441, 185, -441, 520, 5,
	-244, -295, -244, -244, -278, 532, -307, -526, -302, -618,
	506, 459, 533, 453, 193, 441, -618, 185, -208, -209,
	-529, -131, -131, -207, 38, -336, -337, 2, -549, 259,
	-288, 259, 227, 154, -359, 603, 603, -361, -630, 566,
	604, 608, 585, 585, -326, -219, -87, -88, 521, -484,
	608, 603, 585, -351, 38, 5, 603, 603, -266, 349,
	603, -281, -261, 92, -641, -525, -247, -391, 335, -361,
	93, -420, -448, -204, 603, -204, 604, 608, 28, 603,
	28, 603, -297, -319, -372, -372, 604, -357, 60, 608,
	604, 604, -442, -452, 604, -574, -575, -286, 608, 603,
	603, 466, 602, 602, -527, 2, -527, -527, -527, 452,
	-251, 391, -266, -543, -552, -288, 334, 548, -441, -442,
	-268, 603, -441, 603, 603, 38, 127, 238, 132, 223,
	-431, -635, 101, 495, 226, -469, -238, 604, -430, 548,
	408, -442, -278, -359, 603, 603, 603, 585, 190, -135,
	603, -495, -244, -301, 520, 2, 2, 190, -592, 604,
	-608, 406, -135, -219, 603, -331, 81, 94, 128, 217,
	194, 235, 486, 492, 28, -331, 604, -359, -359, 604,
	-332, 349, 119, 319, -217, -518, -518, 604, 38, -88,
	9, -597, -598, -441, 38, -135, -489, -359, -297, -359,
	349, -253, -252, 276, -525, -248, 604, -291, -391, -530,
	-67, -361, -361, 604, 604, -579, 399, 443, 211, -372,
	-358, 604, 608, 38, -387, 2, 2, 2, -615, -310,
	411, -245, 155, 213, 604, -554, 291, -266, 604, -395,
	-395, 38, 132, 223, -338, -334, 603, -239, -470, 213,
	-297, -603, 548, 604, -344, -343, -340, -346, -345, -340,
	-372, -518, 100, 366, -372, -278, -527, -527, 349, -610,
	191, -609, 5, 10, -332, -360, -471, -283, -430, 604,
	604, 82, 119, -342, -135, 604, -135, 604, 604, -417,
	604, -297, -250, -531, 411, 413, -641, -249, -435, 604,
	604, 604, 604, -580, -581, 50, 535, 109, -441, -580,
	-580, -575, -577, 190, 171, 566, -555, -558, -557, 582,
	472, 191, 367, 604, 494, 560, 604, 604, -634, -361,
	566, -351, -441, -430, 604, 608, 553, 604, 608, 553,
	604, 190, 604, -244, -615, -244, -618, -206, 566, 46,
	-260, -259, 604, 608, -431, -430, -338, 390, 133, 143,
	-336, -630, -430, 603, -431, 603, -258, -257, -641, -511,
	-261, 140, -204, -582, 153, -581, 387, 184, 442, 387,
	184, -582, -582, -527, -288, 55, -557, 582, -558, 582,
	542, 133, -435, 604, 55, -554, -343, 225, -345, 190,
	366, 190, 450, -609, 30, -471, -338, -431, -220, 566,
	443, 443, 2, -219, -332, -431, -359, -338, -359, -254,
	-255, -256, -361, -253, 335, 542, 109, 209, 515, 319,
	33, 585, -556, 319, 429, 64, 465, -556, 585, -555,
	603, 603, -527, 353, -220, -338, -435, 2, -332, -338,
	604, -220, 604, -250, 465, 442, 357, -581, -441, 23,
	339, 127, -441, -634, -372, -372, -244, -203, 603, -435,
	-220, -260, -220, -430, -435, -431, -258, -381, 604, 604,
	-203, -435, -435, -431, -338, -254, -435, -333, -334, 520,
	604, -338, -220, 603, -220, -435, -372, -435, 604, -333,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 561, 562, 564, 565, 566, 568,
	569, 571, 573, 575, 576, 577, 579, 580, 582, 583,
	584, 585, 586, 588, 590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	661, 663, 0, 1432, 1434, 1436, 1438, 0, 817, 0,
	36, 37, 39, 0, -2, 340, 342, 344, 346, 0,
	377, 379, 380, 382, 384, 385, 386, 388, -2, 0,
	494, 495, 497, 499, -2, 0, 1031, 1033, 1035, 0,
	650, 652, 0, 1038, 1040, 1042, 0, 0, 673, 674,
	0, 1543, -2, 665, 667, 669, 671, 742, 744, 746,
	748, 750, 752, 754, 756, 758, 760, 761, 763, 765,
	767, 769, 771, 772, 774, 776, 778, 779, 781, 782,
	784, 786, 788, 790, 792, 794, 796, 798, 800, 802,
	804, 806, 808, -2, 811, 812, 813, -2, -2, 0,
	-2, -2, -2, 1450, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 438, 440, 442, 444, 446, 449,
	451, 453, 1601, 501, 503, 505, 507, 509, 511, 513,
	0, -2, 1615, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 109, 110, 111, 112, 113,
	114, 115, 74, 75, 76, 78, 79, 80, 81, 85,
	86, 87, 88, 89, 90, 91, 92, 93, 94, 106,
	107, 72, 0, 0, 1574, 1576, 1578, 1580, -2, 0,
	0, 5, 9, 11, 13, 15, 17, 19, 21, 23,
	25, 27, 29, 563, 567, 570, 572, 574, 578, 581,
	587, 589, 591, 546, 547, 550, 2313, 2331, 2332, 2333,
	2336, 2337, 2338, 2339, 2340, 2341, 2799, 2880, 2881, 2363,
	2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373,
	2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383,
	2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393,
	2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403,
	2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413,
	2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423,
	2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433,
	2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443,
	2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453,
	2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463,
	2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473,
	2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483,
	2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493,
	2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503,
	2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513,
	2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523,
	2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533,
	2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543,
	2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553,
	2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563,
	2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573,
	2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583,
	2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593,
	2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603,
	2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613,
	2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623,
	2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633,
	2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643,
	2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653,
	2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663,
	2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673,
	2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683,
	2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693,
	2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703,
	2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713,
	2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723,
	2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733,
	2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743,
	2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753,
	2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763,
	2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773,
	2774, 2775, 2776, 2777, 2778, 548, 549, 1220, 0, 615,
	613, 2298, 616, 2595, 618, 620, 488, 489, 490, 491,
	492, 493, 0, 643, 629, 1613, 644, 646, 647, 648,
	649, 610, 608, 0, 648, 643, 2367, 641, 1430, 1431,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 500, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 417, 1279, 1280, 1281, 1415, 1416, 2643, 1457, 0,
	239, 662, -2, -2, 2764, -2, 696, 697, -2, -2,
	711, 715, 706, 2768, 0, 2646, 2630, -2, 718, 1433,
	1435, 1437, 815, 816, 2317, 0, 0, 0, 0, 0,
	38, 40, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 249, -2, -2, -2, -2, 0, 0, 2691, 2419,
	2266, 2333, 2269, 2264, 341, 343, 345, 347, 348, 0,
	0, 0, 0, 0, 0, 0, 378, 381, 383, 387,
	-2, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 1102, 1094, 1095, 1337, 0, 0,
	0, -2, 496, 498, 551, 552, 0, 1602, 1602, 559,
	560, -2, 0, 0, 0, 0, 311, 301, 1032, 1034,
	1036, 1037, 0, 0, 0, 0, 0, 651, 653, 0,
	0, 279, 1039, 1041, 1043, 1044, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 666, 668, 670, 672, 743,
	745, 747, 749, 751, 753, 755, 757, 759, 762, 764,
	766, 768, 770, 773, 775, 777, 780, 783, 785, 787,
	789, 791, 793, 795, 797, 799, 801, 803, 805, 807,
	809, 810, 823, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, -2, 0, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 925, 0,
	0, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, -2, 1012, 0, 0,
	826, 829, 830, 831, 832, 833, 834, 0, 898, 923,
	924, 934, 814, 0, 1260, 1603, 1459, 1440, 1454, 1459,
	1442, 1443, 1444, 1445, 1446, 1451, 1453, 1447, 1448, 1449,
	42, 44, 46, 48, 50, 52, 54, 56, 58, 60,
	439, 441, 443, 445, 447, 450, 452, 454, -2, 1572,
	1573, 502, 504, 506, 508, 510, 512, 514, 654, 0,
	656, 0, 828, -2, 0, 1607, 1607, 1607, 0, 0,
	1573, 1571, 0, 659, 660, 722, 723, 1880, 0, 0,
	0, 0, 0, 0, 0, 0, 2140, 1968, 0, 724,
	-2, 2001, 2003, 2739, 2568, 2764, 2139, 2005, 2006, 2007,
	2008, 2009, 0, 2011, 2012, 2013, 2014, 2015, 2016, 0,
	2018, 0, 2023, 2024, 2025, 0, 2746, 2243, 2327, -2,
	0, 0, 2752, 2323, 0, 2106, 2041, -2, -2, 2350,
	2329, 1812, 1813, 1814, 1815, 1816, -2, -2, 2782, 2045,
	2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055,
	0, 2727, 2747, 2748, 2753, 2755, 2749, 2736, 2066, 2433,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1839, 1848, -2, -2, -2, -2, -2,
	-2, -2, 2740, 2741, 2758, 2761, 2767, 2772, 2773, 2745,
	2754, 2781, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790,
	2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 1840, -2,
	-2, -2, -2, 1590, 2609, 1593, 1220, 1591, 1575, 1577,
	0, 1579, 0, 0, 0, 1584, 1610, 1608, 0, 1659,
	1588, 1589, 1682, 1682, 1706, 0, 1687, 0, 1706, 1602,
	1733, 0, 1693, 2635, 2042, 2043, 0, 2333, 2328, -2,
	-2, 2779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 611, 0, 617, 619, 0, 0, 0, 642,
	1612, 0, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 422, 423, 424, 2747, 0, 0, 0, 429, 0,
	431, 432, 433, 434, 435, 436, 437, 209, 2747, 519,
	544, 0, 209, 2747, 522, 209, 2747, 525, 0, 528,
	1335, 209, 2747, 531, 2294, 209, 2747, 534, 536, 2302,
	209, 2747, 540, 2309, 2307, 541, 0, 543, 229, 225,
	226, 227, 228, 1426, 1427, 1428, 1429, 0, 1456, 1336,
	664, 0, 690, 0, 694, 695, 2735, -2, 0, 2655,
	699, 700, -2, 702, 1460, 1464, 1465, 1466, 1467, 1468,
	0, 0, 0, 0, 1473, 0, 0, 0, 0, 691,
	692, 709, 710, 716, 719, 0, 818, 819, 820, 821,
	822, 71, 0, 2747, 1733, 73, 0, 2288, 2358, 2359,
	2360, 2361, 2362, 2780, 2800, 2801, 2802, 2803, 2804, 2805,
	2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815,
	2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825,
	2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835,
	2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845,
	2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855,
	2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865,
	2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875,
	2876, 2877, 2878, 2879, 2782, 77, 0, 2747, 82, 0,
	2747, 0, -2, 95, 0, 108, 0, 135, -2, -2,
	-2, 116, 0, 2747, 0, 2263, -2, 0, 221, 302,
	303, 304, 0, 1069, -2, 0, 1273, 1275, 1275, 0,
	-2, 0, 0, 0, 1022, 2260, 2265, 1023, 2284, 1024,
	2270, 0, 349, 350, 351, 352, 353, 0, 354, 2747,
	356, 357, 0, 359, 360, 2747, 362, 363, 0, 365,
	0, 367, 0, 261, 265, 2747, 314, 315, 2346, 2347,
	2354, 2355, 2356, 2357, 2747, 391, 393, 0, 395, 396,
	0, 398, 0, 0, 0, 402, -2, 418, 0, 415,
	405, 406, 408, 409, 410, 411, 412, 0, 458, 456,
	2299, 0, 0, -2, 2747, 0, 1066, 0, 0, 1315,
	-2, 0, 1266, 0, 1322, 2747, 1318, 0, -2, 0,
	1600, 2747, 1477, 1098, 1099, 1100, 1101, 1745, 485, 0,
	1508, 0, 1510, 0, 1529, 1739, 1682, 0, 0, 1744,
	0, -2, 604, 2316, -2, 554, 0, 555, 0, -2,
	0, 328, 0, 0, 1047, 1049, 1050, 1052, 1053, 1056,
	1057, 1058, 1059, 0, 1061, 1719, 280, 282, 0, 0,
	0, 1046, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 0, 0, 675, 0, 0, 824, 825, 0, 0,
	841, 842, 843, 0, 328, 2647, 2604, 2455, 850, 0,
	853, 856, -2, 0, 0, 0, 0, 860, 0, 865,
	866, 867, 0, -2, 0, 874, 876, 1030, 878, 0,
	0, 880, 0, 884, 0, 887, 0, 889, 0, 891,
	-2, -2, -2, 899, 900, -2, 905, -2, 0, 909,
	-2, 0, 912, 0, 915, -2, 0, 925, 921, 922,
	0, 0, 0, 0, 942, 943, 0, 952, 0, 955,
	956, 957, 0, 961, 962, 0, 964, 965, 966, 967,
	0, 2718, 2652, 2419, 0, 975, -2, 981, 983, 0,
	-2, 0, 999, 0, 1003, 0, 0, 1011, 0, 0,
	827, 0, 835, 836, 209, 1737, 1439, -2, 1441, 0,
	-2, 0, 655, 0, 658, 1632, 1558, 1555, 0, 1629,
	1630, 1559, 0, 0, 0, 1566, 0, 1605, 1606, 0,
	0, 0, 1545, 1546, 0, 0, 0, 0, 2145, 2146,
	2147, 2148, 2161, 2149, 2150, 2160, 2158, 2159, 2151, 2152,
	2157, 2171, 2172, 2162, 2163, 2153, 2166, 2164, 2165, 2167,
	2168, 2169, 2170, 0, 0, 2176, 0, 2154, 2155, 2156,
	2184, 0, 0, 2185, 0, 2187, 0, 2177, 2173, 2174,
	2175, 0, 1947, 1949, 2251, 0, 0, 0, 2183, 2178,
	2179, 1885, 1886, 1887, 1888, 1889, 1922, 1926, 1927, 0,
	0, 2002, 2248, 2247, 2004, 0, 0, 2199, 0, 2017,
	-2, 0, 2140, 2194, 0, 0, 2026, 2027, 2028, 0,
	0, 2199, 0, 0, 2242, 2038, 2039, 1877, 0, 0,
	2108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	1825, 0, 1827, 0, 1828, 1829, 1836, 1849, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	2223, -2, 0, 0, 0, 0, 1841, 0, 1592, 0,
	0, 1663, 2252, 2256, 2257, 1663, 1663, 0, 0, 2200,
	1730, 1730, 0, 0, 1725, 1725, 1725, 1723, 1706, 0,
	1706, 1716, 0, 1706, 1706, 0, -2, 1687, 0, 0,
	1716, 0, 1700, 592, 594, 596, 598, 599, 600, 602,
	1734, 1735, 0, 0, 0, 0, 2334, 0, 0, 0,
	0, 2306, 0, 0, 2319, 0, 0, 2293, 374, 0,
	0, 0, 2701, 2646, 0, -2, 622, 645, 1602, 0,
	2202, 1760, 1764, 0, 1766, 1767, 1768, 1769, 1770, 0,
	0, 1761, -2, 1837, 1839, 1860, 2351, 2352, 2353, 1820,
	1821, 1822, 1823, 1824, 1832, 1819, 1819, 1819, 1830, 1859,
	1851, 1859, 1855, 1805, 1806, 1807, 1842, 1843, 1844, 1845,
	0, 2701, 2646, 0, -2, 0, 632, 0, 0, 1540,
	419, 0, 426, 427, 428, 0, 515, 0, 207, 208,
	0, 209, 2747, 520, 0, 523, 0, 209, 2747, 2258,
	529, 0, 532, 0, 0, 538, 0, 0, 0, 0,
	0, 209, 1542, 0, 0, 0, 0, -2, 704, 712,
	713, 714, 0, 1462, 0, 1469, 733, 734, 735, 1471,
	1472, 0, 1474, 707, 736, 737, 738, 739, 740, 741,
	0, 2272, 2273, 2274, 2275, 2278, 2279, 0, 0, 705,
	726, 708, 0, 720, 117, 1412, 0, 0, 164, 0,
	1412, 1412, 0, 0, 0, 0, 192, 0, 1132, 0,
	0, 0, 0, 135, 149, 160, 129, 130, 131, 0,
	0, 0, 0, 0, 0, 83, 1242, 0, 1245, 0,
	0, 0, 0, 0, 0, 0, 1258, 0, 0, 0,
	0, 0, 97, 98, 0, 0, 103, 104, 0, 148,
	0, 0, 0, 0, 0, 1505, 0, 139, 135, 0,
	0, 134, 136, 119, 0, 0, 135, 150, 162, 0,
	196, 198, 1129, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 231, 0, 0, 0, 1267, 0, 0, 0,
	1599, 0, 0, 0, 0, 2747, 1410, 0, 1395, 0,
	1719, 2504, -2, -2, 280, 1719, 1021, 0, 0, 2334,
	2268, 0, 0, 0, 0, 0, 0, 366, 0, 0,
	0, 394, 397, 399, 400, 401, 0, 1314, 0, 407,
	448, 1191, 2747, 0, 0, 475, 470, 0, 472, 0,
	0, 0, 1241, 2747, 1239, 2303, 0, 1264, 0, 1220,
	2747, 2301, 0, 0, 0, 1323, 2343, 1332, 1336, 1495,
	0, 487, 0, 1511, 1513, 0, 0, 1740, 0, 1742,
	1682, 1602, 0, 0, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 1060, 286, 0, 1718, 0, 0, 316,
	1719, 280, 2621, 1045, 328, 328, 1719, 677, 1719, 679,
	0, 0, 844, 845, 0, 328, 328, 328, 851, 852,
	854, 855, -2, -2, -2, -2, 857, 858, 949, 0,
	0, 0, 948, 868, 0, 870, 873, 877, 0, 1015,
	2630, 2646, 2701, 1028, 949, 2419, 949, 2419, 949, 2419,
	949, 949, 893, 937, 945, 904, 911, 0, 906, 910,
	913, 916, 0, 918, 926, 0, -2, 0, 929, 0,
	931, 0, 933, 949, 950, 953, 960, 963, 968, 969,
	970, 971, 2314, 972, 973, 974, -2, 978, 979, 0,
	990, 995, 996, 992, 0, 0, 0, 0, 0, 0,
	1006, 1007, 0, 0, 1014, 0, 837, 1259, 0, 1452,
	1632, 1558, 657, 1549, 1631, 1550, 1557, 1560, 0, 0,
	1562, 0, 1564, 0, 1627, 1628, 1635, 1636, 0, 1646,
	1647, 1639, 0, -2, 0, 0, 1642, 1643, 1568, 0,
	1585, 1586, 1587, 1616, 1619, 1351, 0, 2880, 1881, 1755,
	1882, 1883, 2287, 0, 1890, 1891, 1892, 1893, 1894, 1895,
	1896, 1897, 1898, 1899, -2, -2, -2, -2, -2, -2,
	-2, -2, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915,
	1916, 1917, 1918, -2, -2, -2, 1923, 1924, 1925, -2,
	2186, 2188, 0, 2251, 0, -2, 0, -2, -2, -2,
	-2, 1944, 0, 1946, 1951, 1953, 1955, 0, 0, 0,
	0, 2250, 1965, 2234, 2235, 0, 0, 2142, 2143, 2144,
	1950, 0, 1969, 2249, 2246, 0, 0, 2180, 0, 2145,
	2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155,
	2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165,
	2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175,
	2176, 2177, 0, 2198, 1615, 2030, 0, 0, 0, 0,
	2037, 2022, 2196, 0, 2195, 0, 0, 0, 2206, 0,
	2241, 2237, 0, 2285, 1876, 1863, 1864, 1865, 1866, 1867,
	1868, 1878, 0, 2282, 2320, 2326, 2116, 0, 0, 0,
	2067, 2068, 2069, 2070, 2071, 0, 2073, 2074, 0, 2076,
	2077, 0, 2079, 2080, 0, 2082, 2083, 2084, 2085, 2086,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 0,
	0, 2088, 0, 2209, -2, -2, -2, -2, -2, -2,
	-2, -2, 0, 2090, 0, 2092, 2200, 2220, 0, 0,
	1970, 0, 0, 0, 0, 2140, 0, 2095, 2200, 2228,
	0, 0, 0, 0, 0, 2200, 0, 2233, 0, 2102,
	0, 2104, 1594, 0, 0, 1750, 0, 0, 0, 2255,
	1750, 1750, 0, 1658, 0, 0, 1726, 1727, 1728, 1729,
	0, 0, 1730, 0, 1720, 1724, 1721, 1722, 1716, 1679,
	0, 0, 2289, 1716, 1685, 1715, 0, 1220, 1705, 1716,
	1716, 0, -2, 1689, 1706, 0, 0, 593, 595, 597,
	601, 603, 0, 0, 1615, -2, 0, -2, 330, 1219,
	0, 0, 0, 0, 0, 0, 612, 614, 0, 0,
	535, 0, 0, 628, 0, 606, 0, 609, 0, 1751,
	1754, 0, 0, 1765, 1771, 1772, 0, -2, 0, 0,
	1861, 0, 0, 0, 0, 0, 640, 0, 643, 0,
	0, 0, 430, 545, 209, 517, 0, 209, 209, 526,
	0, 0, 209, 537, 209, 2310, 209, 2308, 230, 542,
	1541, 242, 0, 693, 0, 1461, 1470, 0, 730, 0,
	732, 0, 2276, 2280, 2277, 2281, 0, 721, 0, 0,
	0, 0, 1411, 0, 1358, 0, 0, 168, 2747, 0,
	211, 0, 0, 1184, 2295, 0, 1174, 0, 0, 2441,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 132, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 1243, 1244, 1246,
	1253, 1255, 0, 1249, 2283, 0, 0, 1250, 0, 1252,
	1254, 1256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 1276, 0, 0, 1277, 1278, 1483, 1484, 0,
	1504, 1505, 0, 0, 0, 0, 0, 0, 0, 128,
	0, 0, 0, 0, 2262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1269, 0,
	1310, 1308, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 0, 0, 0, 0, -2, 1271, 1272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 0,
	319, 2261, 2271, 0, 1054, 1055, 355, 358, 361, 364,
	248, 0, 0, 403, 0, 0, 1104, 1079, 0, 0,
	457, 328, 0, 0, 471, 475, 2312, 1064, 1237, 1240,
	0, 1220, 2747, 1287, 0, 0, 0, 0, 0, 0,
	1321, 0, 0, 2747, 2290, 2342, 2343, 1497, 1505, 0,
	1750, 0, 1527, 1514, 0, 0, 0, 1527, 1531, 1532,
	1534, 1535, 0, 0, 1741, 1747, 553, 605, 1602, 1602,
	328, 326, 2571, 324, 321, 323, 0, 0, 1517, 1519,
	0, 0, 0, 274, 0, 283, 1719, 281, 0, 286,
	0, 0, 0, 469, 676, 681, 839, 0, 328, 847,
	848, 849, 895, 939, 947, 994, 859, 861, 862, 863,
	0, 0, 0, 1029, 1025, 1026, 1027, 879, 949, 882,
	949, 885, 949, 888, 890, 908, 914, 927, 920, 928,
	0, 0, 0, 941, 958, 0, 977, 0, 0, 0,
	0, 0, 0, 0, 1000, 1001, 1002, 1004, 1009, 1008,
	1013, 838, 1738, 1553, 1554, 1556, 0, 1565, 0, 0,
	1641, -2, -2, 1640, 1644, 1645, -2, -2, -2, -2,
	1561, 0, 1570, 1567, 0, 1626, 1349, 1350, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 1966, 0, -2,
	1945, 1948, 1952, 1954, 1956, 0, 0, 0, 0, 0,
	0, 2189, 0, 2191, 1967, 2244, 2247, 2182, 0, 2138,
	0, 0, 1614, 1615, 1615, 0, 2036, 0, 2197, 0,
	2204, 2205, 0, 2029, 0, 2238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2040, 0, 0, 0, 0,
	2072, 2075, 2078, 2081, 0, 0, 0, 0, 2061, 0,
	0, 0, 2065, 1831, 1817, 0, 1859, 1857, 1858, 1852,
	1859, 1856, 1809, 0, 1808, 0, 2087, 0, 2089, 2091,
	0, 0, 2093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1973, 1974, 1975,
	1995, 2094, 2226, 2227, 0, 0, 0, 0, 0, 0,
	2100, 0, 2232, 2101, 2103, 1602, 0, 1595, 0, 1660,
	1649, 1749, 0, 2253, 1719, 1662, 1664, 2254, 2292, 1649,
	1649, 0, 2201, 0, 0, 1710, 0, 0, 0, 1712,
	1683, 0, 0, 1677, 0, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1684, 1220, 1714, 1686, 1690, 2320, 0, 1716,
	0, 1701, 0, 1703, 1736, 0, 1695, 1698, 0, 0,
	2335, 1750, 0, 368, 375, 376, 369, 370, 371, 372,
	0, 1398, 0, 0, 0, 0, 0, 2203, 0, 1756,
	0, 1762, 0, 0, 0, 0, 630, 0, 0, 0,
	0, 0, 1539, 425, 516, 209, 521, 524, 2259, 209,
	530, 533, 539, 238, 0, 689, -2, 728, 729, 731,
	0, 727, 165, 1412, 0, 0, 1354, 1356, 1360, 1366,
	1369, 0, 170, 2747, 182, 0, 2747, 0, 1148, 0,
	0, 0, 0, 0, 0, 1414, 0, 0, 2747, 209,
	2747, 209, 186, 188, 191, 0, 195, 193, 0, 1136,
	0, 0, 1139, 118, 1412, 0, 0, 121, 125, 137,
	0, 0, 0, 147, 0, 0, 0, 1371, 1375, 1383,
	0, 0, 0, 1247, 1248, 1251, 1257, 84, 0, 0,
	0, 1379, 1381, 1387, 96, 99, 2747, 2304, 101, 2747,
	0, 1353, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 123, 127, 138, 0, 1389, 120, 0, 224, 0,
	0, 214, 209, 2747, 0, 216, 0, 217, 218, 232,
	0, 0, 0, 1067, 1068, 1309, 0, 1262, 1263, 0,
	1274, 1268, 0, 0, 0, 0, 0, 1391, 1392, 0,
	0, 0, 1410, 1407, 1719, 244, 0, 1719, 252, 0,
	2267, 0, 266, 390, 0, 0, 0, 0, 1103, 1202,
	1105, 1107, 1108, 1109, 211, 0, 2343, 1174, 2493, 2343,
	0, 0, 1074, 0, 0, 0, 463, 459, 0, 468,
	474, 473, 479, -2, 0, 0, 0, 0, -2, 0,
	0, 1325, 1319, 1320, 0, 0, 0, 0, 2747, 1499,
	1505, 0, 1600, 1615, 486, 1506, 1527, 0, 0, 0,
	1516, 1512, 1509, 1750, 0, 0, 0, 0, 0, 1743,
	1746, 556, 557, 305, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 0, 0, 284, 0, 287, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 286, 317, 276, 1719, 0, 0, 678, 0, 0,
	846, 0, 869, 872, 881, 883, 886, 930, 932, 949,
	959, 984, 2291, 985, 1126, 0, 1126, 0, 0, 1005,
	1563, 0, 1638, 1569, 1620, 1621, 0, 1351, 0, 1884,
	1929, 0, 0, -2, 0, 0, 1933, 0, 0, 0,
	-2, 0, 0, 0, 2190, 2192, 0, 2246, 2181, 2031,
	0, 0, 0, 2035, 2019, 2020, 0, 2141, 2207, 2236,
	2240, 0, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 0,
	2286, 2321, 2325, 2114, 2115, 2119, 2300, 0, 0, 0,
	2044, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	1854, 0, 0, 2208, 2219, 2221, 1971, 1972, 1976, 1977,
	1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, -2, -2,
	-2, 1989, 1990, 1991, -2, -2, -2, 1996, 0, 0,
	0, 2222, 2224, 2225, 2229, 2230, 0, 2097, 2098, 2099,
	2231, 0, 1602, 1596, 1657, 0, 1748, 1661, 0, 1657,
	1657, 1609, 1708, 0, 0, 1732, 0, 1680, 0, 1681,
	0, 0, 1713, 0, 1688, 1691, 1692, 1702, 0, 1694,
	0, 1697, 0, 2031, -2, 329, 331, 333, 0, 336,
	337, 0, 0, 0, 621, 0, 1398, 1398, 0, 623,
	607, 0, 0, 1758, 0, 0, 1834, 1838, 1862, 634,
	636, 0, 0, 2701, 2646, 0, 633, 518, 527, 240,
	0, 1717, 0, 0, 0, 0, 0, 0, 210, 0,
	1183, 0, 1146, 0, 0, 1173, 0, 0, 1189, 172,
	173, 174, 0, 0, 0, 0, 184, 0, 0, 180,
	0, 190, 194, 1133, 0, 0, 0, 0, 1359, 0,
	0, 0, 144, 145, 146, 0, 151, 0, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1489,
	1490, 0, 1480, 141, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 1348, 234, 0, 0, 0, 0,
	0, 1261, 1312, 1313, 1270, 1372, 1376, 1384, 0, 0,
	0, 0, 0, 648, 1409, 0, 252, 250, 0, 253,
	0, 256, 257, 0, 0, 252, 246, 0, 0, 0,
	1220, 404, 1077, 1190, 0, 0, 1192, 1110, 1114, 0,
	2343, 2343, 0, 2297, 0, 1075, 0, 0, 1191, 455,
	0, 462, 0, 476, 0, 0, 1241, 0, 0, 1265,
	1285, 1220, 0, 1324, 1326, 0, 1334, 0, 0, 0,
	1501, 1505, 0, 1494, 1495, 1634, 1507, 1525, -2, 0,
	0, 1615, 1533, 1530, 1536, 1537, 0, 325, 0, 320,
	322, 0, 308, 0, 1518, 1520, 0, 1048, 1051, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 286, 1719,
	312, 0, 840, 864, 940, 986, 1125, 0, 0, 988,
	0, 0, 1637, 1624, 1625, 1622, 1351, 1931, 1935, 0,
	0, 0, 1937, -2, 0, 1959, -2, -2, 2193, 2245,
	2010, 1615, 2032, 2034, 2021, 2239, 1879, 0, 2121, 2118,
	0, 2105, 0, 2056, 2057, 0, 0, 2060, 2062, 2063,
	2064, 1818, 1811, 1810, 2218, 0, 0, 0, 0, 2096,
	1597, 0, 2110, 0, 0, 1665, 2110, 2110, 1709, 0,
	1711, 1678, 1666, 0, 1675, 0, 2321, 1704, 1696, 0,
	0, 334, 0, 338, 339, 373, 0, 624, 625, 0,
	0, 1752, 1757, 0, 1763, 1833, 0, 0, 0, 0,
	0, 241, 166, 167, 1363, 1367, 1364, 0, 169, 0,
	0, 1147, 0, 1150, 0, 0, 0, 0, 1157, 1174,
	0, 0, 0, 0, 0, 0, 1176, 0, 1175, 0,
	0, 1206, 0, 1339, 1346, 0, -2, 0, 0, 0,
	176, 200, 0, 0, 0, 0, 203, 1413, 178, 0,
	0, 209, 209, 0, 0, 1355, 1357, 1370, 0, 0,
	0, 0, 154, 0, 0, 1373, 1377, 1385, 1380, 1382,
	1388, 0, 102, 0, 1491, 0, 140, 0, 0, 0,
	1390, 222, 223, 0, 209, 0, 209, 215, 209, 1348,
	0, 0, 0, 0, 0, 0, 0, 1393, 1394, 243,
	0, 0, 0, 0, 0, 245, 318, 252, 392, 0,
	1135, 0, 1202, 1194, 1195, 1196, 0, 1106, 1201, 1203,
	0, 0, 1111, 0, 0, 0, 0, 1091, 1076, 0,
	1087, 0, 0, 1104, 1079, 0, 460, 477, 0, 480,
	0, 483, 1065, 1238, 1282, 1220, 0, 1316, 0, 0,
	0, 0, 0, 0, 0, 1503, 1505, 0, 1496, 1497,
	1527, 1633, 0, 0, 0, 1515, 1634, 0, 327, 328,
	0, 328, 288, 0, 289, 290, 291, 298, 299, 300,
	277, 278, 680, 682, 0, 0, 688, 1124, 0, 0,
	0, 0, 1623, 1939, -2, -2, 1960, 0, 2322, 2324,
	1615, 0, 2107, 1617, 0, 0, -2, 0, 0, 0,
	1598, 1581, 0, 1656, 1648, 1650, 1652, 2633, 2414, 2746,
	1582, 1583, 1731, 0, 0, 1699, 335, 1397, 626, 0,
	0, 1759, 0, 631, 0, 0, 0, 0, 0, 1365,
	171, 0, 0, 1151, 1152, 2296, 1154, 0, 1156, 1158,
	1159, 1160, 0, 1163, 0, 2345, 0, 1168, 1171, 1172,
	0, 0, 1185, 1207, 0, 1216, 0, 1341, 1351, 1345,
	0, 1343, 1218, 0, 175, 202, 177, 204, 199, 0,
	1348, 0, 179, 189, 0, 0, 122, 0, 0, 2408,
	157, 155, 153, 100, 1352, 143, 0, 124, 0, 224,
	233, 1347, 235, 219, 209, 0, 1374, 1378, 1386, 0,
	1401, 1402, 1403, 1404, 0, 0, 0, 0, 254, 0,
	255, 258, 259, 0, 0, 1079, 1134, 1078, 1193, 0,
	1204, 1205, 0, 0, 0, 0, 0, 0, 1081, 0,
	1080, 0, 0, 0, 0, 0, 461, 464, 0, 467,
	0, 0, 0, 0, 0, 1327, 1325, 0, 1333, 0,
	0, 0, 1479, 0, 0, 1498, 1499, 484, 1521, 0,
	0, 1527, 1538, 307, 0, 310, 285, 0, 684, 0,
	686, 0, 987, 989, 0, 0, 2033, 2125, 0, 0,
	2058, 2059, -2, 0, 1999, 2109, 2111, 0, 0, 0,
	0, 0, 1667, 1676, 1398, 1753, 638, 635, 637, 0,
	1361, 0, 1368, 211, 1149, 1153, 0, 0, 0, 1164,
	1224, 0, 0, 1241, 1241, 1177, 0, 0, 1210, 1211,
	1131, 0, 1212, 1213, 1214, 1340, 1626, 1346, 1187, 0,
	0, 201, 206, 0, 0, 0, 0, 0, 0, 142,
	0, 213, 236, 1348, 0, 1405, 1406, 0, 0, 251,
	270, 0, 1283, 1081, 0, 1112, 1115, 1116, 1117, 1118,
	1119, 1120, 1121, 1122, 1123, 1113, 1218, 0, 0, 1182,
	1089, 0, 1092, 0, 1088, 1085, 1086, 1077, 0, 465,
	466, 481, 0, 482, 0, 1286, 0, 0, 1334, 0,
	0, 1486, 1478, 1505, 1500, 1501, 1750, 1524, 1528, 0,
	683, 0, 0, 997, 998, 0, 0, 0, 0, 2120,
	1618, 2000, 0, 0, 1651, 1653, 1654, 1655, 627, 0,
	1362, 183, 0, 0, 1162, 1229, 0, 0, 0, 0,
	0, 1178, 1208, 1209, 1206, 1130, 0, 1344, 1342, 0,
	1220, 181, 0, 1218, 0, 1140, 0, 0, 1143, 0,
	0, 158, 2408, 156, 0, 209, 1398, 209, 0, 273,
	0, 264, 262, 263, 1073, 0, 1198, 1200, 1216, 1218,
	1131, 0, 1093, 1135, 1091, 478, 1284, 1317, 1218, 0,
	1216, 0, 1493, 1505, 1487, 1488, 0, 1503, 0, 328,
	685, 687, 2117, 2137, 2126, -2, 2704, 2415, 0, 2137,
	2137, 2112, 2113, 0, 0, 0, 1165, 1225, 1226, 0,
	1221, 1222, 1223, 2344, 1166, 1167, 1169, 1170, 1750, 0,
	0, 1224, 205, 187, 1137, 0, 0, 1138, 0, 0,
	161, 0, 163, 237, 1396, 1399, 0, 260, 0, 0,
	1070, 1072, 1197, 0, 1131, 1216, 1079, 0, 0, 0,
	1079, 1081, 1216, 0, 1131, 0, 1482, 1492, 0, 1502,
	1479, 0, 309, 2122, 0, 0, 2128, 2129, 2130, 2131,
	2132, 2123, 2124, 639, 1155, 0, 1227, 0, 1228, 0,
	0, 0, 1186, 1215, 0, 1229, 1141, 0, 1144, 0,
	159, 0, 0, 268, 269, 1199, 1079, 1131, 1750, 0,
	1082, 0, 1084, 1081, 1090, 1131, 0, 1079, 0, 1475,
	1481, 1485, 2305, 1486, 1522, 0, 0, 2134, 2135, 0,
	0, 0, 1230, 0, 1233, 1234, 0, 1231, 0, 1206,
	0, 0, 209, 0, 1750, 1079, 1181, 1083, 1073, 1079,
	1218, 1750, 1216, 1493, 0, 2133, 2136, 2127, 1161, 1232,
	1235, 1236, 1217, 1188, 0, 0, 1400, 271, 0, 1179,
	1750, 1071, 1750, 1216, 1330, 1131, 1482, 1750, 1128, 0,
	0, 1180, 1328, 1131, 1079, 1476, 1523, 1142, 1127, 0,
	272, 1079, 1750, 0, 1750, 1331, 0, 1329, 1128, 1145,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 591, 3, 597, 592, 3,
	603, 604, 595, 593, 608, 594, 605, 596, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 611, 3,
	583, 585, 584, 588, 607, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 601, 3, 602, 598, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 609, 590, 610, 586,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 587, 57926, 589, 57927, 599, 57928, 600, 57929, 606,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1483
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1499
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1501
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1503
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1510
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1528
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1529
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1531
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1532
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1533
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1593
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1619
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1633
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1652
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1656
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1660
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1690
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1694
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1701
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1713
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1723
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1747
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1757
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1773
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1802
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1834
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1838
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1842
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1852
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1858
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1867
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1878
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1888
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1896
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1906
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1928
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1932
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1937
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1943
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1955
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1976
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1996
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2016
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2038
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2047
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2058
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2066
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2077
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2087
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 152:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2097
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 153:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2106
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 154:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2117
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 155:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2123
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2149
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2154
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2165
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2169
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2191
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2196
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2201
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2211
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2216
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2221
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2231
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2241
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2245
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2271
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2281
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2289
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2299
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2302
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2308
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 187:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns: sqlDollar[7].union.idxElems(),
				Sharded: sqlDollar[9].union.shardedIndexDef(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2322
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2338
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2359
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2367
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2372
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2376
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2382
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = nil
		}
	case 201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2404
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = true
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = false
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2420
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2424
		{
			sqlVAL.union.val = nil
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2431
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2435
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2439
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 212:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2505
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2524
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2542
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2546
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2549
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2601
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2633
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2641
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 243:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2700
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2710
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2721
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2730
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2738
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2750
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2754
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2761
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2765
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2778
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2872
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2883
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2892
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2908
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2912
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2916
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2933
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = nil
		}
	case 274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2990
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3000
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3019
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3026
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3040
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3051
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3055
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3059
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3066
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3070
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3083
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3099
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3103
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3128
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3134
		{
			return unimplemented(sqllex, "alter function")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3138
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3142
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3179
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3188
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3194
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3199
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3204
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3208
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3225
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3228
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3232
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3236
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3248
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3272
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3276
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3292
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = nil
		}
	case 329:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3312
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3326
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3332
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3346
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3354
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3379
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3400
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3419
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3428
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3436
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3438
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3445
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3464
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3472
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3478
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3481
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3489
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3492
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3496
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3500
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3504
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3508
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3521
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3526
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3529
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3533
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3538
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3557
		{
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3558
		{
			return helpWith(sqllex, "CREATE")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3571
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3572
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3575
		{
			return unimplemented(sqllex, "create access method")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3576
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3577
		{
			return unimplemented(sqllex, "create cast")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3578
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3579
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3580
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3581
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3582
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3583
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3584
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3585
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3587
		{
			return unimplemented(sqllex, "create publication")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3588
		{
			return unimplemented(sqllex, "create rule")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3589
		{
			return unimplemented(sqllex, "create server")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3590
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3591
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3592
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3593
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3596
		{
		}
	case 414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3597
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3600
		{
		}
	case 416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3601
		{
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3604
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3605
		{
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3608
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3609
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3610
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3611
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3612
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3613
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3614
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3615
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3616
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3617
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3618
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3619
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3620
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3621
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3623
		{
			return unimplemented(sqllex, "drop server")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3624
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3625
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3626
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3629
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3630
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3631
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3632
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3633
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3635
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3636
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3637
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3638
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3656
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3674
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3683
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3690
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3702
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3706
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3717
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3729
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3752
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3762
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3766
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3787
		{

			sqlVAL.union.val = nil
		}
	case 476:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3804
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3834
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3860
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3870
		{
			return helpWith(sqllex, "DELETE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3873
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3874
		{
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3885
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3886
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3887
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3888
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3889
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3898
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3900
		{
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			return helpWith(sqllex, "DROP")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3904
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3906
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3907
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3908
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3909
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3910
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3935
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3943
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3951
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3958
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3966
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3970
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3973
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3990
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3998
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4006
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4014
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4021
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4028
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4036
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4043
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4047
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4053
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4066
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4096
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4100
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4105
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4123
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4130
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4134
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4157
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4164
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4166
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4174
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4182
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4190
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4198
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{
			return helpWith(sqllex, "DELETE")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4223
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{
			return helpWith(sqllex, "INSERT")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4229
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4232
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4238
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4244
		{
			return helpWith(sqllex, "DELETE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4245
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4246
		{
			return helpWith(sqllex, "INSERT")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4252
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4253
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4257
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4279
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4287
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4291
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4295
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4312
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4320
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4350
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4353
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4376
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4380
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4384
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4388
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4403
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4407
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4419
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			return helpWith(sqllex, "GRANT")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4491
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4515
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4518
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4528
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4556
		{
			return helpWith(sqllex, "RESET")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4557
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			return helpWith(sqllex, "RESET")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4597
		{
			return helpWith(sqllex, "USE")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4601
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4602
		{
		}
	case 664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4603
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4607
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4608
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4610
		{
			return helpWith(sqllex, "USE")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4626
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4641
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4644
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4662
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4670
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4674
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 681:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4678
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4684
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4688
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4694
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4698
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4710
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4724
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4750
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4753
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4755
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4758
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4761
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4775
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4780
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4800
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4805
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4809
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4828
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4832
		{
			return unimplemented(sqllex, "set from current")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4836
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4841
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4850
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4855
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4859
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4871
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4876
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4929
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4943
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = tree.Low
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = tree.Normal
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = tree.High
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4980
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4989
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5008
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5009
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5010
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5011
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5012
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5013
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5014
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5015
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5016
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5018
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5019
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5020
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5021
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5024
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5025
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5026
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5028
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5030
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5031
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5032
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5033
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5034
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5035
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5036
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5037
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5038
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5039
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5040
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5041
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5042
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5043
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "SHOW")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5047
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5052
		{
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5053
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5056
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5060
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5065
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5070
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5075
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5080
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5090
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5091
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5092
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.str = "client_encoding"
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5113
		{
			sqlVAL.str = "timezone"
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5114
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5122
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5138
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5142
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5146
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5157
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5165
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5173
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5179
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5187
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5196
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5205
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5214
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5222
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5239
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5244
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5253
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5264
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5276
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5280
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5287
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5298
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5314
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5344
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5354
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5367
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5375
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5383
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5386
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5392
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5396
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5399
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5401
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5405
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5408
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5419
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5421
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5424
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5435
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5440
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = true
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = true
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = false
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5476
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5477
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5478
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5495
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5497
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5521
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5522
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5538
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5540
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5546
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5554
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5568
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5590
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5595
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5597
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5601
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5604
		{
			sqlVAL.union.val = true
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = false
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5616
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5618
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5621
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5652
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5662
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5664
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5667
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = true
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5671
		{
			sqlVAL.union.val = false
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5685
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5699
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5706
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5710
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5714
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5721
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5725
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5736
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5739
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5747
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5752
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5757
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5761
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5777
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5782
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5787
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5792
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5808
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5818
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5821
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5826
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5837
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5848
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5866
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5874
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5895
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5897
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5900
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5902
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5905
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5909
		{
		}
	case 997:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5918
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5926
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5932
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5941
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5946
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5953
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5982
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5994
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6012
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6016
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6022
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6035
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6168
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6207
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6211
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6220
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6237
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6241
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6269
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6271
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6282
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6283
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6284
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6285
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6296
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6306
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6324
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6337
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6369
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6377
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6388
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6397
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6403
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6424
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6435
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6444
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6452
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6488
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6503
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6524
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6531
		{

			sqlVAL.union.val = nil
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6537
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.str = ""
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6547
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = nil
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6570
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6574
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6600
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6613
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6627
		{
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6628
		{
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6629
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6648
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6672
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6684
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6710
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6716
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6721
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6724
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6727
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6728
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.str = ""
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6762
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6866
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6895
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6941
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6958
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6966
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6970
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7015
		{

			sqlVAL.union.val = true
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = false
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7025
		{
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7029
		{
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7032
		{
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7062
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
					Sharded: sqlDollar[6].union.shardedIndexDef(),
				},
				PrimaryKey: true,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7128
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7139
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7146
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7150
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7156
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7166
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7181
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7231
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7235
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7246
		{
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7247
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7248
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7249
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7250
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7251
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7323
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7336
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7348
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7352
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7372
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7408
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7417
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7425
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7436
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7445
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7449
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7459
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7461
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7463
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7465
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7468
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7471
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7473
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7486
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7490
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7517
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7551
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.str = ""
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7581
		{
			sqlVAL.union.val = true
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7585
		{

			sqlVAL.union.val = true
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.union.val = false
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7600
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7614
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7626
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7638
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7648
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7658
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7662
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7678
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7686
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7690
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7706
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7710
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7714
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7730
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = nil
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7762
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7767
		{
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7768
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7777
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7793
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7795
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7797
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7799
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7801
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7803
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7807
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7817
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7838
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7855
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7873
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:7889
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7905
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7909
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = false
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = true
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = false
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = true
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = false
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7963
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7969
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7975
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7983
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.str = ""
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.str = ""
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8042
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8048
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8101
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8132
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8165
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8208
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8218
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8245
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8273
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8279
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8291
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8297
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8311
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8317
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8368
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8376
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = true
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = false
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8401
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = tree.Types
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8432
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8436
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8440
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8464
		{
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8465
		{
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8468
		{
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8469
		{
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8480
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8498
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8507
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8528
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8530
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8536
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8557
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8565
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8576
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8580
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8581
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8582
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8601
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8606
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8619
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8624
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8633
		{
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8634
		{
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8635
		{
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8652
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8655
		{
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8656
		{
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8684
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8697
		{
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8699
		{
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8703
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8720
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8726
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8732
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8738
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8792
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.str = ""
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8809
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8815
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8820
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8837
		{

		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8848
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8852
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.str = ""
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8877
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.str = ""
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.str = ""
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.str = ""
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8907
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8920
		{
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8921
		{
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8950
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8968
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8972
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8981
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9030
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9041
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9057
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9061
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9099
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9105
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9131
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9152
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9167
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9294
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9311
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9346
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9347
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9348
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9409
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9422
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9453
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9469
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = true
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = false
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9522
		{
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9523
		{
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = nil
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9536
		{
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9537
		{
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = true
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = false
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = false
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = true
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9566
		{
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9567
		{
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9570
		{
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9571
		{
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9579
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9612
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9624
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9629
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9645
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9655
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9688
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9743
		{
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9744
		{
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9747
		{
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9748
		{
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9782
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9783
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9784
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9814
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9816
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9831
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9853
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9858
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9863
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9879
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9884
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9890
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9900
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9912
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9931
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9973
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9983
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9993
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10018
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10029
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10059
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10070
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10082
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10086
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10092
		{
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10094
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = nil
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10103
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = true
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = false
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.str = tree.AstFull
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.str = tree.AstRight
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.str = tree.AstInner
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10211
		{
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10212
		{
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.str = tree.AstHash
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.str = ""
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10281
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10286
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10304
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10310
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10316
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10326
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = true
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = false
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = true
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = false
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10375
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10388
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10396
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10397
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10415
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10417
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10425
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10438
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10445
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10454
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10494
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10506
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10507
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10530
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10534
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10541
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = types.Geography
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10556
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10564
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10590
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10598
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = nil
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = types.Int2
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10625
		{
			sqlVAL.union.val = types.Int
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = types.Float4
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10637
		{
			sqlVAL.union.val = types.Float
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10641
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10649
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10657
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = types.Bool
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10671
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10684
		{
			sqlVAL.union.val = types.Float
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10690
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10696
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10704
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10718
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = types.String
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10757
		{
			sqlVAL.union.val = true
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = false
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = types.Date
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10767
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10775
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10789
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10798
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10806
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10823
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = true
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = false
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = false
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = types.Interval
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10843
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10847
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10866
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10931
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10946
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = nil
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10976
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11017
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11021
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11036
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11185
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11193
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11215
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11223
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11227
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11231
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11235
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11239
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11251
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11271
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11275
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11279
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11283
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11314
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11376
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11380
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11402
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11422
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11430
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11470
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11474
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11478
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11482
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11486
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11490
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11494
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11498
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11510
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11518
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11536
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11540
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11602
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11606
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11610
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11614
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11619
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11621
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11625
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11645
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11654
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11661
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11665
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11669
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11684
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11688
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11703
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11714
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11715
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11730
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11739
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11805
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11826
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11862
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11866
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11892
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11896
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11916
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11920
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11927
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11930
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11932
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11935
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11937
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11941
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11944
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11953
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11955
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11962
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11971
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11976
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11978
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11981
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11986
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11988
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11991
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11996
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12005
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12006
		{
			return unimplemented(sqllex, "treat")
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12027
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12032
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12069
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12073
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12079
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12122
		{
			sqlVAL.str = ""
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12128
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12132
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12162
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12168
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12181
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12237
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12241
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12249
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12271
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12278
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12290
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12314
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12315
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12316
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12317
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12318
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12319
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12320
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12321
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12322
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12323
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12324
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12325
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12327
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12328
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12329
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12330
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12331
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12334
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12335
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12336
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12339
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12340
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12343
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12344
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12346
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12347
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12348
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12354
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12370
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12377
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12407
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12413
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12417
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12421
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12432
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12436
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12453
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12463
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12469
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12473
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12479
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12483
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12489
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12499
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12503
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12526
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12530
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12534
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12540
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12547
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12568
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12572
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12576
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12580
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12584
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12590
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12596
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12602
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12606
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12610
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12635
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12639
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12645
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12651
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12655
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12662
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12668
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12672
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12679
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12685
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12689
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12694
		{
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12695
		{
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12699
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12703
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12709
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12718
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12722
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12726
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12734
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12738
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12744
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12748
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12767
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12775
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12798
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12807
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12811
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12815
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12819
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12825
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12829
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12844
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12848
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12860
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12864
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12873
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12884
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12893
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12901
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12918
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13003
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13011
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13015
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13021
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13025
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13033
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13060
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13067
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13071
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13075
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13089
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13093
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13097
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13110
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13119
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13137
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13150
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13157
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13182
		{
			sqlVAL.str = ""
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13188
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13192
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
