// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:74

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) survive() tree.Survive {
	return u.val.(tree.Survive)
}

//line sql-gen.y:696
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12193

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1394,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	253, 365,
	-2, 0,
	-1, 73,
	235, 218,
	493, 218,
	-2, 0,
	-1, 84,
	223, 1178,
	237, 1178,
	253, 361,
	378, 361,
	388, 958,
	422, 361,
	434, 958,
	477, 958,
	504, 361,
	530, 958,
	-2, 0,
	-1, 90,
	130, 1394,
	230, 1394,
	515, 1394,
	516, 1394,
	-2, 0,
	-1, 106,
	147, 1365,
	166, 1365,
	179, 1365,
	233, 1365,
	266, 1365,
	330, 1365,
	340, 1365,
	510, 1365,
	-2, 1336,
	-1, 143,
	155, 831,
	252, 831,
	381, 800,
	439, 800,
	496, 831,
	498, 800,
	-2, 0,
	-1, 145,
	4, 1396,
	21, 1396,
	22, 1396,
	23, 1396,
	24, 1396,
	25, 1396,
	26, 1396,
	27, 1396,
	29, 1396,
	30, 1396,
	36, 1396,
	41, 1396,
	42, 1396,
	44, 1396,
	45, 1396,
	46, 1396,
	47, 1396,
	48, 1396,
	49, 1396,
	50, 1396,
	51, 1396,
	53, 1396,
	54, 1396,
	55, 1396,
	56, 1396,
	58, 1396,
	59, 1396,
	60, 1396,
	61, 1396,
	62, 1396,
	63, 1396,
	64, 1396,
	68, 1396,
	69, 1396,
	70, 1396,
	71, 1396,
	73, 1396,
	74, 1396,
	75, 1396,
	79, 1396,
	80, 1396,
	81, 1396,
	82, 1396,
	83, 1396,
	84, 1396,
	85, 1396,
	88, 1396,
	89, 1396,
	90, 1396,
	91, 1396,
	92, 1396,
	94, 1396,
	96, 1396,
	97, 1396,
	98, 1396,
	99, 1396,
	100, 1396,
	101, 1396,
	103, 1396,
	104, 1396,
	105, 1396,
	107, 1396,
	108, 1396,
	116, 1396,
	117, 1396,
	118, 1396,
	119, 1396,
	121, 1396,
	122, 1396,
	123, 1396,
	125, 1396,
	126, 1396,
	127, 1396,
	129, 1396,
	130, 1396,
	132, 1396,
	133, 1396,
	134, 1396,
	137, 1396,
	138, 1396,
	139, 1396,
	141, 1396,
	142, 1396,
	144, 1396,
	145, 1396,
	146, 1396,
	148, 1396,
	149, 1396,
	150, 1396,
	151, 1396,
	152, 1396,
	153, 1396,
	154, 1396,
	155, 1396,
	156, 1396,
	157, 1396,
	158, 1396,
	159, 1396,
	160, 1396,
	161, 1396,
	162, 1396,
	163, 1396,
	165, 1396,
	171, 1396,
	172, 1396,
	173, 1396,
	174, 1396,
	178, 1396,
	180, 1396,
	184, 1396,
	185, 1396,
	186, 1396,
	187, 1396,
	188, 1396,
	189, 1396,
	190, 1396,
	191, 1396,
	192, 1396,
	193, 1396,
	194, 1396,
	195, 1396,
	197, 1396,
	198, 1396,
	200, 1396,
	201, 1396,
	203, 1396,
	204, 1396,
	205, 1396,
	206, 1396,
	207, 1396,
	208, 1396,
	209, 1396,
	210, 1396,
	211, 1396,
	213, 1396,
	214, 1396,
	216, 1396,
	217, 1396,
	218, 1396,
	219, 1396,
	223, 1396,
	224, 1396,
	225, 1396,
	226, 1396,
	227, 1396,
	230, 1396,
	231, 1396,
	232, 1396,
	234, 1396,
	236, 1396,
	237, 1396,
	239, 1396,
	241, 1396,
	242, 1396,
	243, 1396,
	245, 1396,
	249, 1396,
	250, 1396,
	251, 1396,
	252, 1396,
	253, 1396,
	254, 1396,
	256, 1396,
	257, 1396,
	258, 1396,
	260, 1396,
	261, 1396,
	263, 1396,
	264, 1396,
	267, 1396,
	271, 1396,
	272, 1396,
	275, 1396,
	276, 1396,
	277, 1396,
	278, 1396,
	280, 1396,
	281, 1396,
	282, 1396,
	283, 1396,
	284, 1396,
	285, 1396,
	286, 1396,
	287, 1396,
	288, 1396,
	289, 1396,
	290, 1396,
	291, 1396,
	292, 1396,
	293, 1396,
	294, 1396,
	295, 1396,
	296, 1396,
	297, 1396,
	298, 1396,
	299, 1396,
	300, 1396,
	301, 1396,
	303, 1396,
	305, 1396,
	306, 1396,
	307, 1396,
	308, 1396,
	309, 1396,
	310, 1396,
	311, 1396,
	312, 1396,
	313, 1396,
	314, 1396,
	315, 1396,
	316, 1396,
	318, 1396,
	320, 1396,
	322, 1396,
	323, 1396,
	325, 1396,
	326, 1396,
	327, 1396,
	328, 1396,
	329, 1396,
	332, 1396,
	335, 1396,
	336, 1396,
	337, 1396,
	338, 1396,
	341, 1396,
	342, 1396,
	343, 1396,
	345, 1396,
	347, 1396,
	348, 1396,
	349, 1396,
	350, 1396,
	351, 1396,
	352, 1396,
	353, 1396,
	354, 1396,
	355, 1396,
	356, 1396,
	357, 1396,
	358, 1396,
	360, 1396,
	361, 1396,
	362, 1396,
	363, 1396,
	364, 1396,
	365, 1396,
	366, 1396,
	367, 1396,
	368, 1396,
	369, 1396,
	370, 1396,
	371, 1396,
	372, 1396,
	373, 1396,
	374, 1396,
	376, 1396,
	377, 1396,
	379, 1396,
	380, 1396,
	381, 1396,
	382, 1396,
	383, 1396,
	384, 1396,
	385, 1396,
	386, 1396,
	387, 1396,
	388, 1396,
	389, 1396,
	390, 1396,
	392, 1396,
	394, 1396,
	395, 1396,
	400, 1396,
	402, 1396,
	403, 1396,
	404, 1396,
	405, 1396,
	406, 1396,
	407, 1396,
	408, 1396,
	409, 1396,
	411, 1396,
	412, 1396,
	413, 1396,
	415, 1396,
	416, 1396,
	417, 1396,
	418, 1396,
	419, 1396,
	420, 1396,
	422, 1396,
	423, 1396,
	424, 1396,
	425, 1396,
	426, 1396,
	427, 1396,
	428, 1396,
	429, 1396,
	430, 1396,
	431, 1396,
	432, 1396,
	434, 1396,
	435, 1396,
	436, 1396,
	437, 1396,
	438, 1396,
	439, 1396,
	441, 1396,
	442, 1396,
	443, 1396,
	444, 1396,
	445, 1396,
	446, 1396,
	448, 1396,
	449, 1396,
	450, 1396,
	451, 1396,
	452, 1396,
	453, 1396,
	454, 1396,
	456, 1396,
	458, 1396,
	459, 1396,
	460, 1396,
	461, 1396,
	462, 1396,
	463, 1396,
	464, 1396,
	465, 1396,
	466, 1396,
	467, 1396,
	468, 1396,
	469, 1396,
	470, 1396,
	471, 1396,
	473, 1396,
	474, 1396,
	476, 1396,
	478, 1396,
	479, 1396,
	480, 1396,
	481, 1396,
	482, 1396,
	483, 1396,
	484, 1396,
	485, 1396,
	486, 1396,
	488, 1396,
	489, 1396,
	490, 1396,
	491, 1396,
	492, 1396,
	494, 1396,
	496, 1396,
	497, 1396,
	498, 1396,
	499, 1396,
	500, 1396,
	501, 1396,
	503, 1396,
	504, 1396,
	505, 1396,
	506, 1396,
	508, 1396,
	509, 1396,
	512, 1396,
	513, 1396,
	514, 1396,
	515, 1396,
	516, 1396,
	517, 1396,
	518, 1396,
	520, 1396,
	523, 1396,
	524, 1396,
	525, 1396,
	526, 1396,
	527, 1396,
	528, 1396,
	530, 1396,
	531, 1396,
	532, 1396,
	533, 1396,
	538, 1396,
	539, 1396,
	540, 1396,
	541, 1396,
	542, 1396,
	543, 1396,
	-2, 0,
	-1, 146,
	1, 1256,
	128, 1256,
	241, 1256,
	319, 1256,
	376, 1256,
	385, 1256,
	547, 1256,
	571, 1256,
	-2, 0,
	-1, 148,
	1, 1256,
	571, 1256,
	-2, 0,
	-1, 149,
	1, 1256,
	571, 1256,
	-2, 0,
	-1, 150,
	1, 1256,
	493, 1256,
	571, 1256,
	-2, 0,
	-1, 179,
	147, 1364,
	166, 1364,
	179, 1364,
	233, 1364,
	266, 1364,
	330, 1364,
	340, 1364,
	510, 1364,
	-2, 1339,
	-1, 220,
	4, 1403,
	5, 1403,
	6, 1403,
	7, 1403,
	8, 1403,
	9, 1403,
	10, 1403,
	21, 1403,
	22, 1403,
	23, 1403,
	24, 1403,
	25, 1403,
	26, 1403,
	27, 1403,
	29, 1403,
	30, 1403,
	36, 1403,
	37, 1403,
	41, 1403,
	42, 1403,
	43, 1403,
	44, 1403,
	45, 1403,
	46, 1403,
	47, 1403,
	48, 1403,
	49, 1403,
	50, 1403,
	51, 1403,
	53, 1403,
	54, 1403,
	55, 1403,
	56, 1403,
	58, 1403,
	59, 1403,
	60, 1403,
	61, 1403,
	62, 1403,
	63, 1403,
	64, 1403,
	65, 1403,
	66, 1403,
	67, 1403,
	68, 1403,
	69, 1403,
	70, 1403,
	71, 1403,
	73, 1403,
	74, 1403,
	75, 1403,
	77, 1403,
	79, 1403,
	80, 1403,
	81, 1403,
	82, 1403,
	83, 1403,
	84, 1403,
	85, 1403,
	88, 1403,
	89, 1403,
	90, 1403,
	91, 1403,
	92, 1403,
	94, 1403,
	96, 1403,
	97, 1403,
	98, 1403,
	99, 1403,
	100, 1403,
	101, 1403,
	103, 1403,
	104, 1403,
	105, 1403,
	106, 1403,
	107, 1403,
	108, 1403,
	109, 1403,
	110, 1403,
	111, 1403,
	112, 1403,
	113, 1403,
	114, 1403,
	115, 1403,
	116, 1403,
	117, 1403,
	118, 1403,
	119, 1403,
	120, 1403,
	121, 1403,
	122, 1403,
	123, 1403,
	124, 1403,
	125, 1403,
	126, 1403,
	127, 1403,
	129, 1403,
	130, 1403,
	132, 1403,
	133, 1403,
	134, 1403,
	137, 1403,
	138, 1403,
	139, 1403,
	141, 1403,
	142, 1403,
	144, 1403,
	145, 1403,
	146, 1403,
	148, 1403,
	149, 1403,
	150, 1403,
	151, 1403,
	152, 1403,
	153, 1403,
	154, 1403,
	155, 1403,
	156, 1403,
	157, 1403,
	158, 1403,
	159, 1403,
	160, 1403,
	161, 1403,
	162, 1403,
	163, 1403,
	164, 1403,
	165, 1403,
	171, 1403,
	172, 1403,
	173, 1403,
	174, 1403,
	178, 1403,
	180, 1403,
	183, 1403,
	184, 1403,
	185, 1403,
	186, 1403,
	187, 1403,
	188, 1403,
	189, 1403,
	190, 1403,
	191, 1403,
	192, 1403,
	193, 1403,
	194, 1403,
	195, 1403,
	197, 1403,
	198, 1403,
	200, 1403,
	201, 1403,
	203, 1403,
	204, 1403,
	205, 1403,
	206, 1403,
	207, 1403,
	208, 1403,
	209, 1403,
	210, 1403,
	211, 1403,
	212, 1403,
	213, 1403,
	214, 1403,
	216, 1403,
	217, 1403,
	218, 1403,
	219, 1403,
	223, 1403,
	224, 1403,
	225, 1403,
	226, 1403,
	227, 1403,
	229, 1403,
	230, 1403,
	231, 1403,
	232, 1403,
	234, 1403,
	236, 1403,
	237, 1403,
	238, 1403,
	239, 1403,
	240, 1403,
	241, 1403,
	242, 1403,
	243, 1403,
	244, 1403,
	245, 1403,
	249, 1403,
	250, 1403,
	251, 1403,
	252, 1403,
	253, 1403,
	254, 1403,
	256, 1403,
	257, 1403,
	258, 1403,
	260, 1403,
	261, 1403,
	262, 1403,
	263, 1403,
	264, 1403,
	265, 1403,
	267, 1403,
	271, 1403,
	272, 1403,
	273, 1403,
	274, 1403,
	275, 1403,
	276, 1403,
	277, 1403,
	278, 1403,
	280, 1403,
	281, 1403,
	282, 1403,
	283, 1403,
	284, 1403,
	285, 1403,
	286, 1403,
	287, 1403,
	288, 1403,
	289, 1403,
	290, 1403,
	291, 1403,
	292, 1403,
	293, 1403,
	294, 1403,
	295, 1403,
	296, 1403,
	297, 1403,
	298, 1403,
	299, 1403,
	300, 1403,
	301, 1403,
	303, 1403,
	304, 1403,
	305, 1403,
	306, 1403,
	307, 1403,
	308, 1403,
	309, 1403,
	310, 1403,
	311, 1403,
	312, 1403,
	313, 1403,
	314, 1403,
	315, 1403,
	316, 1403,
	317, 1403,
	318, 1403,
	319, 1403,
	320, 1403,
	321, 1403,
	322, 1403,
	323, 1403,
	324, 1403,
	325, 1403,
	326, 1403,
	327, 1403,
	328, 1403,
	329, 1403,
	332, 1403,
	336, 1403,
	337, 1403,
	338, 1403,
	341, 1403,
	342, 1403,
	343, 1403,
	344, 1403,
	345, 1403,
	346, 1403,
	347, 1403,
	348, 1403,
	349, 1403,
	350, 1403,
	351, 1403,
	352, 1403,
	353, 1403,
	354, 1403,
	355, 1403,
	356, 1403,
	357, 1403,
	358, 1403,
	360, 1403,
	361, 1403,
	362, 1403,
	363, 1403,
	364, 1403,
	365, 1403,
	366, 1403,
	367, 1403,
	368, 1403,
	369, 1403,
	370, 1403,
	371, 1403,
	372, 1403,
	373, 1403,
	374, 1403,
	376, 1403,
	377, 1403,
	379, 1403,
	380, 1403,
	381, 1403,
	382, 1403,
	383, 1403,
	384, 1403,
	385, 1403,
	386, 1403,
	387, 1403,
	388, 1403,
	389, 1403,
	390, 1403,
	392, 1403,
	394, 1403,
	395, 1403,
	400, 1403,
	402, 1403,
	403, 1403,
	404, 1403,
	405, 1403,
	406, 1403,
	407, 1403,
	408, 1403,
	409, 1403,
	411, 1403,
	412, 1403,
	413, 1403,
	414, 1403,
	415, 1403,
	416, 1403,
	417, 1403,
	418, 1403,
	419, 1403,
	420, 1403,
	422, 1403,
	423, 1403,
	424, 1403,
	425, 1403,
	426, 1403,
	427, 1403,
	428, 1403,
	429, 1403,
	430, 1403,
	431, 1403,
	432, 1403,
	434, 1403,
	435, 1403,
	436, 1403,
	437, 1403,
	438, 1403,
	439, 1403,
	440, 1403,
	441, 1403,
	442, 1403,
	443, 1403,
	444, 1403,
	445, 1403,
	446, 1403,
	447, 1403,
	448, 1403,
	449, 1403,
	450, 1403,
	451, 1403,
	452, 1403,
	453, 1403,
	454, 1403,
	456, 1403,
	458, 1403,
	459, 1403,
	460, 1403,
	461, 1403,
	462, 1403,
	463, 1403,
	464, 1403,
	465, 1403,
	466, 1403,
	467, 1403,
	468, 1403,
	469, 1403,
	470, 1403,
	471, 1403,
	473, 1403,
	474, 1403,
	475, 1403,
	476, 1403,
	478, 1403,
	479, 1403,
	480, 1403,
	481, 1403,
	482, 1403,
	483, 1403,
	484, 1403,
	485, 1403,
	486, 1403,
	488, 1403,
	489, 1403,
	490, 1403,
	491, 1403,
	492, 1403,
	494, 1403,
	496, 1403,
	497, 1403,
	498, 1403,
	499, 1403,
	500, 1403,
	501, 1403,
	502, 1403,
	503, 1403,
	504, 1403,
	505, 1403,
	506, 1403,
	508, 1403,
	509, 1403,
	511, 1403,
	512, 1403,
	513, 1403,
	514, 1403,
	515, 1403,
	516, 1403,
	517, 1403,
	518, 1403,
	519, 1403,
	520, 1403,
	523, 1403,
	524, 1403,
	525, 1403,
	526, 1403,
	527, 1403,
	528, 1403,
	530, 1403,
	531, 1403,
	532, 1403,
	533, 1403,
	538, 1403,
	539, 1403,
	540, 1403,
	541, 1403,
	542, 1403,
	543, 1403,
	544, 1403,
	552, 1403,
	559, 1403,
	560, 1403,
	561, 1403,
	568, 1403,
	572, 1403,
	-2, 0,
	-1, 703,
	4, 1176,
	21, 1176,
	22, 1176,
	23, 1176,
	24, 1176,
	25, 1176,
	26, 1176,
	27, 1176,
	29, 1176,
	30, 1176,
	36, 1176,
	41, 1176,
	42, 1176,
	44, 1176,
	45, 1176,
	46, 1176,
	47, 1176,
	48, 1176,
	49, 1176,
	50, 1176,
	51, 1176,
	53, 1176,
	54, 1176,
	55, 1176,
	56, 1176,
	58, 1176,
	59, 1176,
	60, 1176,
	61, 1176,
	62, 1176,
	63, 1176,
	64, 1176,
	68, 1176,
	69, 1176,
	70, 1176,
	71, 1176,
	73, 1176,
	74, 1176,
	75, 1176,
	79, 1176,
	80, 1176,
	81, 1176,
	82, 1176,
	83, 1176,
	84, 1176,
	85, 1176,
	88, 1176,
	89, 1176,
	90, 1176,
	91, 1176,
	92, 1176,
	94, 1176,
	96, 1176,
	97, 1176,
	98, 1176,
	99, 1176,
	100, 1176,
	101, 1176,
	103, 1176,
	104, 1176,
	105, 1176,
	107, 1176,
	108, 1176,
	116, 1176,
	117, 1176,
	118, 1176,
	119, 1176,
	121, 1176,
	122, 1176,
	123, 1176,
	125, 1176,
	126, 1176,
	127, 1176,
	129, 1176,
	130, 1176,
	132, 1176,
	133, 1176,
	134, 1176,
	137, 1176,
	138, 1176,
	139, 1176,
	141, 1176,
	142, 1176,
	144, 1176,
	145, 1176,
	146, 1176,
	148, 1176,
	149, 1176,
	150, 1176,
	151, 1176,
	152, 1176,
	153, 1176,
	154, 1176,
	155, 1176,
	156, 1176,
	157, 1176,
	158, 1176,
	159, 1176,
	160, 1176,
	161, 1176,
	162, 1176,
	163, 1176,
	165, 1176,
	171, 1176,
	172, 1176,
	173, 1176,
	174, 1176,
	178, 1176,
	180, 1176,
	184, 1176,
	185, 1176,
	186, 1176,
	187, 1176,
	188, 1176,
	189, 1176,
	190, 1176,
	191, 1176,
	192, 1176,
	193, 1176,
	194, 1176,
	195, 1176,
	197, 1176,
	198, 1176,
	200, 1176,
	201, 1176,
	203, 1176,
	204, 1176,
	205, 1176,
	206, 1176,
	207, 1176,
	208, 1176,
	209, 1176,
	210, 1176,
	211, 1176,
	213, 1176,
	214, 1176,
	216, 1176,
	217, 1176,
	218, 1176,
	219, 1176,
	223, 1176,
	224, 1176,
	225, 1176,
	226, 1176,
	227, 1176,
	230, 1176,
	231, 1176,
	232, 1176,
	234, 1176,
	236, 1176,
	237, 1176,
	239, 1176,
	241, 1176,
	242, 1176,
	243, 1176,
	245, 1176,
	249, 1176,
	250, 1176,
	251, 1176,
	252, 1176,
	253, 1176,
	254, 1176,
	256, 1176,
	257, 1176,
	258, 1176,
	260, 1176,
	261, 1176,
	263, 1176,
	264, 1176,
	267, 1176,
	271, 1176,
	272, 1176,
	275, 1176,
	276, 1176,
	277, 1176,
	278, 1176,
	280, 1176,
	281, 1176,
	282, 1176,
	283, 1176,
	284, 1176,
	285, 1176,
	286, 1176,
	287, 1176,
	288, 1176,
	289, 1176,
	290, 1176,
	291, 1176,
	292, 1176,
	293, 1176,
	294, 1176,
	295, 1176,
	296, 1176,
	297, 1176,
	298, 1176,
	299, 1176,
	300, 1176,
	301, 1176,
	303, 1176,
	305, 1176,
	306, 1176,
	307, 1176,
	308, 1176,
	309, 1176,
	310, 1176,
	311, 1176,
	312, 1176,
	313, 1176,
	314, 1176,
	315, 1176,
	316, 1176,
	318, 1176,
	320, 1176,
	322, 1176,
	323, 1176,
	325, 1176,
	326, 1176,
	327, 1176,
	328, 1176,
	329, 1176,
	332, 1176,
	336, 1176,
	337, 1176,
	338, 1176,
	341, 1176,
	342, 1176,
	343, 1176,
	345, 1176,
	347, 1176,
	348, 1176,
	349, 1176,
	350, 1176,
	351, 1176,
	352, 1176,
	353, 1176,
	354, 1176,
	355, 1176,
	356, 1176,
	357, 1176,
	358, 1176,
	360, 1176,
	361, 1176,
	362, 1176,
	363, 1176,
	364, 1176,
	365, 1176,
	366, 1176,
	367, 1176,
	368, 1176,
	369, 1176,
	370, 1176,
	371, 1176,
	372, 1176,
	373, 1176,
	374, 1176,
	376, 1176,
	377, 1176,
	379, 1176,
	380, 1176,
	381, 1176,
	382, 1176,
	383, 1176,
	384, 1176,
	385, 1176,
	386, 1176,
	387, 1176,
	388, 1176,
	389, 1176,
	390, 1176,
	392, 1176,
	394, 1176,
	395, 1176,
	400, 1176,
	402, 1176,
	403, 1176,
	404, 1176,
	405, 1176,
	406, 1176,
	407, 1176,
	408, 1176,
	409, 1176,
	411, 1176,
	412, 1176,
	413, 1176,
	415, 1176,
	416, 1176,
	417, 1176,
	418, 1176,
	419, 1176,
	420, 1176,
	422, 1176,
	423, 1176,
	424, 1176,
	425, 1176,
	426, 1176,
	427, 1176,
	428, 1176,
	429, 1176,
	430, 1176,
	431, 1176,
	432, 1176,
	434, 1176,
	435, 1176,
	436, 1176,
	437, 1176,
	438, 1176,
	439, 1176,
	441, 1176,
	442, 1176,
	443, 1176,
	444, 1176,
	445, 1176,
	446, 1176,
	448, 1176,
	449, 1176,
	450, 1176,
	451, 1176,
	452, 1176,
	453, 1176,
	454, 1176,
	456, 1176,
	458, 1176,
	459, 1176,
	460, 1176,
	461, 1176,
	462, 1176,
	463, 1176,
	464, 1176,
	465, 1176,
	466, 1176,
	467, 1176,
	468, 1176,
	469, 1176,
	470, 1176,
	471, 1176,
	473, 1176,
	474, 1176,
	476, 1176,
	478, 1176,
	479, 1176,
	480, 1176,
	481, 1176,
	482, 1176,
	483, 1176,
	484, 1176,
	485, 1176,
	486, 1176,
	488, 1176,
	489, 1176,
	490, 1176,
	491, 1176,
	492, 1176,
	494, 1176,
	496, 1176,
	497, 1176,
	498, 1176,
	499, 1176,
	500, 1176,
	501, 1176,
	503, 1176,
	504, 1176,
	505, 1176,
	506, 1176,
	508, 1176,
	509, 1176,
	512, 1176,
	513, 1176,
	514, 1176,
	515, 1176,
	516, 1176,
	517, 1176,
	518, 1176,
	520, 1176,
	523, 1176,
	524, 1176,
	525, 1176,
	526, 1176,
	527, 1176,
	528, 1176,
	530, 1176,
	531, 1176,
	532, 1176,
	533, 1176,
	538, 1176,
	539, 1176,
	540, 1176,
	541, 1176,
	542, 1176,
	543, 1176,
	-2, 0,
	-1, 722,
	182, 2152,
	493, 2152,
	551, 2152,
	570, 2152,
	-2, 0,
	-1, 723,
	182, 2252,
	493, 2252,
	551, 2252,
	570, 2252,
	-2, 0,
	-1, 724,
	182, 2139,
	493, 2139,
	551, 2139,
	570, 2139,
	-2, 0,
	-1, 726,
	182, 2379,
	493, 2379,
	551, 2379,
	570, 2379,
	-2, 0,
	-1, 728,
	182, 2416,
	493, 2416,
	551, 2416,
	570, 2416,
	-2, 0,
	-1, 735,
	182, 2278,
	493, 2278,
	551, 2278,
	570, 2278,
	-2, 639,
	-1, 764,
	570, 2088,
	573, 2088,
	-2, 891,
	-1, 765,
	570, 2090,
	573, 2090,
	-2, 892,
	-1, 766,
	570, 2089,
	573, 2089,
	-2, 893,
	-1, 767,
	573, 2022,
	-2, 894,
	-1, 790,
	179, 232,
	-2, 0,
	-1, 813,
	43, 2092,
	-2, 0,
	-1, 814,
	530, 1155,
	-2, 959,
	-1, 830,
	4, 1531,
	21, 1531,
	22, 1531,
	23, 1531,
	24, 1531,
	25, 1531,
	26, 1531,
	27, 1531,
	29, 1531,
	30, 1531,
	36, 1531,
	41, 1531,
	42, 1531,
	44, 1531,
	45, 1531,
	46, 1531,
	47, 1531,
	48, 1531,
	49, 1531,
	50, 1531,
	51, 1531,
	53, 1531,
	54, 1531,
	55, 1531,
	56, 1531,
	58, 1531,
	59, 1531,
	60, 1531,
	61, 1531,
	62, 1531,
	63, 1531,
	64, 1531,
	68, 1531,
	69, 1531,
	70, 1531,
	71, 1531,
	73, 1531,
	74, 1531,
	75, 1531,
	79, 1531,
	80, 1531,
	81, 1531,
	82, 1531,
	83, 1531,
	84, 1531,
	85, 1531,
	88, 1531,
	89, 1531,
	90, 1531,
	91, 1531,
	92, 1531,
	94, 1531,
	96, 1531,
	97, 1531,
	98, 1531,
	99, 1531,
	100, 1531,
	101, 1531,
	103, 1531,
	104, 1531,
	105, 1531,
	107, 1531,
	108, 1531,
	116, 1531,
	117, 1531,
	118, 1531,
	119, 1531,
	121, 1531,
	122, 1531,
	123, 1531,
	125, 1531,
	126, 1531,
	127, 1531,
	129, 1531,
	130, 1531,
	132, 1531,
	133, 1531,
	134, 1531,
	137, 1531,
	138, 1531,
	139, 1531,
	141, 1531,
	142, 1531,
	144, 1531,
	145, 1531,
	146, 1531,
	148, 1531,
	149, 1531,
	150, 1531,
	151, 1531,
	152, 1531,
	153, 1531,
	154, 1531,
	155, 1531,
	156, 1531,
	157, 1531,
	158, 1531,
	159, 1531,
	160, 1531,
	161, 1531,
	162, 1531,
	163, 1531,
	165, 1531,
	171, 1531,
	172, 1531,
	173, 1531,
	174, 1531,
	178, 1531,
	180, 1531,
	184, 1531,
	185, 1531,
	186, 1531,
	187, 1531,
	188, 1531,
	189, 1531,
	190, 1531,
	191, 1531,
	192, 1531,
	193, 1531,
	194, 1531,
	195, 1531,
	197, 1531,
	198, 1531,
	200, 1531,
	201, 1531,
	203, 1531,
	204, 1531,
	205, 1531,
	206, 1531,
	207, 1531,
	208, 1531,
	209, 1531,
	210, 1531,
	211, 1531,
	213, 1531,
	214, 1531,
	216, 1531,
	217, 1531,
	218, 1531,
	219, 1531,
	223, 1531,
	224, 1531,
	225, 1531,
	226, 1531,
	227, 1531,
	230, 1531,
	231, 1531,
	232, 1531,
	234, 1531,
	236, 1531,
	237, 1531,
	239, 1531,
	241, 1531,
	242, 1531,
	243, 1531,
	245, 1531,
	249, 1531,
	250, 1531,
	251, 1531,
	252, 1531,
	253, 1531,
	254, 1531,
	256, 1531,
	257, 1531,
	258, 1531,
	260, 1531,
	261, 1531,
	263, 1531,
	264, 1531,
	267, 1531,
	271, 1531,
	272, 1531,
	275, 1531,
	276, 1531,
	277, 1531,
	278, 1531,
	280, 1531,
	281, 1531,
	282, 1531,
	283, 1531,
	284, 1531,
	285, 1531,
	286, 1531,
	287, 1531,
	288, 1531,
	289, 1531,
	290, 1531,
	291, 1531,
	292, 1531,
	293, 1531,
	294, 1531,
	295, 1531,
	296, 1531,
	297, 1531,
	298, 1531,
	299, 1531,
	300, 1531,
	301, 1531,
	303, 1531,
	305, 1531,
	306, 1531,
	307, 1531,
	308, 1531,
	309, 1531,
	310, 1531,
	311, 1531,
	312, 1531,
	313, 1531,
	314, 1531,
	315, 1531,
	316, 1531,
	318, 1531,
	320, 1531,
	322, 1531,
	323, 1531,
	325, 1531,
	326, 1531,
	327, 1531,
	328, 1531,
	329, 1531,
	332, 1531,
	336, 1531,
	337, 1531,
	338, 1531,
	341, 1531,
	342, 1531,
	343, 1531,
	345, 1531,
	347, 1531,
	348, 1531,
	349, 1531,
	350, 1531,
	351, 1531,
	352, 1531,
	353, 1531,
	354, 1531,
	355, 1531,
	356, 1531,
	357, 1531,
	358, 1531,
	360, 1531,
	361, 1531,
	362, 1531,
	363, 1531,
	364, 1531,
	365, 1531,
	366, 1531,
	367, 1531,
	368, 1531,
	369, 1531,
	370, 1531,
	371, 1531,
	372, 1531,
	373, 1531,
	374, 1531,
	376, 1531,
	377, 1531,
	379, 1531,
	380, 1531,
	381, 1531,
	382, 1531,
	383, 1531,
	384, 1531,
	385, 1531,
	386, 1531,
	387, 1531,
	388, 1531,
	389, 1531,
	390, 1531,
	392, 1531,
	394, 1531,
	395, 1531,
	400, 1531,
	402, 1531,
	403, 1531,
	404, 1531,
	405, 1531,
	406, 1531,
	407, 1531,
	408, 1531,
	409, 1531,
	411, 1531,
	412, 1531,
	413, 1531,
	415, 1531,
	416, 1531,
	417, 1531,
	418, 1531,
	419, 1531,
	420, 1531,
	422, 1531,
	423, 1531,
	424, 1531,
	425, 1531,
	426, 1531,
	427, 1531,
	428, 1531,
	429, 1531,
	430, 1531,
	431, 1531,
	432, 1531,
	434, 1531,
	435, 1531,
	436, 1531,
	437, 1531,
	438, 1531,
	439, 1531,
	441, 1531,
	442, 1531,
	443, 1531,
	444, 1531,
	445, 1531,
	446, 1531,
	448, 1531,
	449, 1531,
	450, 1531,
	451, 1531,
	452, 1531,
	453, 1531,
	454, 1531,
	456, 1531,
	458, 1531,
	459, 1531,
	460, 1531,
	461, 1531,
	462, 1531,
	463, 1531,
	464, 1531,
	465, 1531,
	466, 1531,
	467, 1531,
	468, 1531,
	469, 1531,
	470, 1531,
	471, 1531,
	473, 1531,
	474, 1531,
	476, 1531,
	478, 1531,
	479, 1531,
	480, 1531,
	481, 1531,
	482, 1531,
	483, 1531,
	484, 1531,
	485, 1531,
	486, 1531,
	488, 1531,
	489, 1531,
	490, 1531,
	491, 1531,
	492, 1531,
	494, 1531,
	496, 1531,
	497, 1531,
	498, 1531,
	499, 1531,
	500, 1531,
	501, 1531,
	503, 1531,
	504, 1531,
	505, 1531,
	506, 1531,
	508, 1531,
	509, 1531,
	512, 1531,
	513, 1531,
	514, 1531,
	515, 1531,
	516, 1531,
	517, 1531,
	518, 1531,
	520, 1531,
	523, 1531,
	524, 1531,
	525, 1531,
	526, 1531,
	527, 1531,
	528, 1531,
	530, 1531,
	531, 1531,
	532, 1531,
	533, 1531,
	538, 1531,
	539, 1531,
	540, 1531,
	541, 1531,
	542, 1531,
	543, 1531,
	-2, 0,
	-1, 838,
	253, 365,
	-2, 0,
	-1, 908,
	381, 801,
	439, 801,
	498, 801,
	-2, 0,
	-1, 909,
	381, 800,
	439, 800,
	498, 800,
	-2, 742,
	-1, 913,
	1, 845,
	567, 845,
	569, 845,
	571, 845,
	-2, 0,
	-1, 914,
	1, 777,
	567, 777,
	569, 777,
	571, 777,
	-2, 0,
	-1, 915,
	1, 779,
	567, 779,
	569, 779,
	571, 779,
	-2, 0,
	-1, 916,
	1, 890,
	179, 890,
	567, 890,
	569, 890,
	571, 890,
	-2, 0,
	-1, 924,
	1, 804,
	567, 804,
	569, 804,
	571, 804,
	-2, 0,
	-1, 930,
	1, 845,
	567, 845,
	569, 845,
	571, 845,
	-2, 0,
	-1, 931,
	1, 847,
	567, 847,
	569, 847,
	571, 847,
	-2, 0,
	-1, 932,
	1, 850,
	567, 850,
	569, 850,
	571, 850,
	-2, 0,
	-1, 938,
	1, 867,
	567, 867,
	569, 867,
	571, 867,
	-2, 0,
	-1, 939,
	1, 869,
	567, 869,
	569, 869,
	571, 869,
	-2, 0,
	-1, 989,
	166, 1407,
	179, 1407,
	266, 1407,
	330, 1407,
	-2, 1343,
	-1, 1004,
	166, 1406,
	179, 1406,
	266, 1406,
	330, 1406,
	-2, 1340,
	-1, 1030,
	570, 2087,
	-2, 647,
	-1, 1058,
	5, 2079,
	568, 2077,
	-2, 2068,
	-1, 1066,
	5, 2100,
	568, 2097,
	-2, 2088,
	-1, 1067,
	5, 2101,
	568, 2098,
	-2, 2089,
	-1, 1075,
	570, 2085,
	-2, 2067,
	-1, 1076,
	568, 2498,
	-2, 2086,
	-1, 1099,
	568, 2497,
	-2, 2102,
	-1, 1100,
	5, 1606,
	-2, 2468,
	-1, 1101,
	5, 1607,
	-2, 2469,
	-1, 1102,
	5, 1608,
	-2, 2483,
	-1, 1103,
	5, 1609,
	-2, 2447,
	-1, 1104,
	5, 1610,
	-2, 2481,
	-1, 1105,
	5, 1618,
	-2, 2460,
	-1, 1106,
	5, 1605,
	-2, 2456,
	-1, 1107,
	5, 1605,
	-2, 2455,
	-1, 1108,
	5, 1605,
	-2, 2474,
	-1, 1109,
	5, 1616,
	-2, 2449,
	-1, 1110,
	5, 1621,
	-2, 2448,
	-1, 1111,
	5, 1623,
	-2, 2493,
	-1, 1114,
	5, 1645,
	-2, 2486,
	-1, 1115,
	5, 1637,
	-2, 2487,
	-1, 1116,
	5, 1645,
	-2, 2488,
	-1, 1117,
	5, 1641,
	-2, 2489,
	-1, 1118,
	5, 1591,
	-2, 2461,
	-1, 1119,
	5, 1592,
	-2, 2462,
	-1, 1120,
	5, 1593,
	-2, 2450,
	-1, 1148,
	5, 1628,
	-2, 2494,
	-1, 1149,
	5, 1629,
	-2, 2484,
	-1, 1150,
	5, 1630,
	531, 1630,
	-2, 2451,
	-1, 1151,
	5, 1631,
	531, 1631,
	-2, 2452,
	-1, 1188,
	568, 2097,
	-2, 2088,
	-1, 1189,
	568, 2098,
	-2, 2089,
	-1, 1287,
	182, 2416,
	493, 2416,
	551, 2416,
	570, 2416,
	-2, 0,
	-1, 1290,
	1, 625,
	571, 625,
	-2, 1264,
	-1, 1417,
	402, 2063,
	441, 2063,
	561, 2063,
	-2, 2060,
	-1, 1428,
	572, 2063,
	-2, 2064,
	-1, 1434,
	1, 1152,
	567, 1152,
	569, 1152,
	571, 1152,
	-2, 1392,
	-1, 1481,
	388, 958,
	530, 958,
	-2, 360,
	-1, 1501,
	43, 2091,
	-2, 2061,
	-1, 1506,
	1, 1152,
	567, 1152,
	569, 1152,
	571, 1152,
	-2, 1392,
	-1, 1513,
	4, 1176,
	21, 1176,
	22, 1176,
	23, 1176,
	24, 1176,
	25, 1176,
	26, 1176,
	27, 1176,
	29, 1176,
	30, 1176,
	36, 1176,
	41, 1176,
	42, 1176,
	44, 1176,
	45, 1176,
	46, 1176,
	47, 1176,
	48, 1176,
	49, 1176,
	50, 1176,
	51, 1176,
	53, 1176,
	54, 1176,
	55, 1176,
	56, 1176,
	58, 1176,
	59, 1176,
	60, 1176,
	61, 1176,
	62, 1176,
	63, 1176,
	64, 1176,
	68, 1176,
	69, 1176,
	70, 1176,
	71, 1176,
	73, 1176,
	74, 1176,
	75, 1176,
	79, 1176,
	80, 1176,
	81, 1176,
	82, 1176,
	83, 1176,
	84, 1176,
	85, 1176,
	88, 1176,
	89, 1176,
	90, 1176,
	91, 1176,
	92, 1176,
	94, 1176,
	96, 1176,
	97, 1176,
	98, 1176,
	99, 1176,
	100, 1176,
	101, 1176,
	103, 1176,
	104, 1176,
	105, 1176,
	107, 1176,
	108, 1176,
	116, 1176,
	117, 1176,
	118, 1176,
	119, 1176,
	121, 1176,
	122, 1176,
	123, 1176,
	125, 1176,
	126, 1176,
	127, 1176,
	129, 1176,
	130, 1176,
	132, 1176,
	133, 1176,
	134, 1176,
	137, 1176,
	138, 1176,
	139, 1176,
	141, 1176,
	142, 1176,
	144, 1176,
	145, 1176,
	146, 1176,
	148, 1176,
	149, 1176,
	150, 1176,
	151, 1176,
	152, 1176,
	153, 1176,
	154, 1176,
	155, 1176,
	156, 1176,
	157, 1176,
	158, 1176,
	159, 1176,
	160, 1176,
	161, 1176,
	162, 1176,
	163, 1176,
	171, 1176,
	172, 1176,
	173, 1176,
	174, 1176,
	178, 1176,
	180, 1176,
	184, 1176,
	185, 1176,
	186, 1176,
	187, 1176,
	188, 1176,
	189, 1176,
	190, 1176,
	191, 1176,
	192, 1176,
	193, 1176,
	194, 1176,
	195, 1176,
	197, 1176,
	198, 1176,
	200, 1176,
	201, 1176,
	203, 1176,
	204, 1176,
	205, 1176,
	206, 1176,
	207, 1176,
	208, 1176,
	209, 1176,
	210, 1176,
	211, 1176,
	213, 1176,
	214, 1176,
	216, 1176,
	217, 1176,
	218, 1176,
	219, 1176,
	224, 1176,
	225, 1176,
	226, 1176,
	227, 1176,
	230, 1176,
	231, 1176,
	232, 1176,
	234, 1176,
	236, 1176,
	237, 1176,
	239, 1176,
	241, 1176,
	242, 1176,
	243, 1176,
	245, 1176,
	249, 1176,
	250, 1176,
	251, 1176,
	252, 1176,
	253, 1176,
	254, 1176,
	256, 1176,
	257, 1176,
	258, 1176,
	260, 1176,
	261, 1176,
	263, 1176,
	264, 1176,
	267, 1176,
	271, 1176,
	272, 1176,
	275, 1176,
	276, 1176,
	277, 1176,
	278, 1176,
	280, 1176,
	281, 1176,
	282, 1176,
	283, 1176,
	284, 1176,
	285, 1176,
	286, 1176,
	287, 1176,
	288, 1176,
	289, 1176,
	290, 1176,
	291, 1176,
	292, 1176,
	293, 1176,
	294, 1176,
	295, 1176,
	296, 1176,
	297, 1176,
	298, 1176,
	299, 1176,
	300, 1176,
	301, 1176,
	303, 1176,
	305, 1176,
	306, 1176,
	307, 1176,
	308, 1176,
	309, 1176,
	310, 1176,
	311, 1176,
	312, 1176,
	313, 1176,
	314, 1176,
	315, 1176,
	316, 1176,
	318, 1176,
	322, 1176,
	323, 1176,
	325, 1176,
	326, 1176,
	327, 1176,
	328, 1176,
	329, 1176,
	332, 1176,
	334, 1176,
	336, 1176,
	337, 1176,
	338, 1176,
	341, 1176,
	342, 1176,
	343, 1176,
	345, 1176,
	347, 1176,
	348, 1176,
	349, 1176,
	350, 1176,
	351, 1176,
	352, 1176,
	353, 1176,
	354, 1176,
	355, 1176,
	356, 1176,
	357, 1176,
	358, 1176,
	360, 1176,
	361, 1176,
	362, 1176,
	363, 1176,
	364, 1176,
	365, 1176,
	366, 1176,
	367, 1176,
	368, 1176,
	369, 1176,
	370, 1176,
	371, 1176,
	372, 1176,
	373, 1176,
	374, 1176,
	376, 1176,
	377, 1176,
	379, 1176,
	380, 1176,
	381, 1176,
	382, 1176,
	383, 1176,
	384, 1176,
	385, 1176,
	386, 1176,
	387, 1176,
	388, 1176,
	389, 1176,
	390, 1176,
	392, 1176,
	394, 1176,
	395, 1176,
	400, 1176,
	402, 1176,
	403, 1176,
	404, 1176,
	405, 1176,
	406, 1176,
	407, 1176,
	408, 1176,
	409, 1176,
	411, 1176,
	412, 1176,
	413, 1176,
	415, 1176,
	416, 1176,
	417, 1176,
	418, 1176,
	419, 1176,
	420, 1176,
	422, 1176,
	423, 1176,
	424, 1176,
	425, 1176,
	426, 1176,
	427, 1176,
	428, 1176,
	429, 1176,
	430, 1176,
	431, 1176,
	432, 1176,
	434, 1176,
	435, 1176,
	436, 1176,
	437, 1176,
	438, 1176,
	439, 1176,
	441, 1176,
	442, 1176,
	443, 1176,
	444, 1176,
	445, 1176,
	446, 1176,
	448, 1176,
	449, 1176,
	450, 1176,
	451, 1176,
	452, 1176,
	453, 1176,
	454, 1176,
	456, 1176,
	458, 1176,
	459, 1176,
	460, 1176,
	461, 1176,
	462, 1176,
	463, 1176,
	464, 1176,
	465, 1176,
	466, 1176,
	467, 1176,
	468, 1176,
	469, 1176,
	470, 1176,
	471, 1176,
	473, 1176,
	474, 1176,
	476, 1176,
	478, 1176,
	479, 1176,
	480, 1176,
	481, 1176,
	482, 1176,
	483, 1176,
	484, 1176,
	485, 1176,
	486, 1176,
	488, 1176,
	489, 1176,
	490, 1176,
	491, 1176,
	492, 1176,
	494, 1176,
	496, 1176,
	497, 1176,
	498, 1176,
	499, 1176,
	500, 1176,
	501, 1176,
	503, 1176,
	504, 1176,
	505, 1176,
	506, 1176,
	508, 1176,
	509, 1176,
	512, 1176,
	513, 1176,
	514, 1176,
	515, 1176,
	516, 1176,
	517, 1176,
	518, 1176,
	520, 1176,
	523, 1176,
	524, 1176,
	525, 1176,
	526, 1176,
	527, 1176,
	528, 1176,
	530, 1176,
	531, 1176,
	532, 1176,
	533, 1176,
	538, 1176,
	539, 1176,
	540, 1176,
	541, 1176,
	542, 1176,
	543, 1176,
	-2, 0,
	-1, 1536,
	1, 498,
	567, 498,
	569, 498,
	571, 498,
	-2, 1363,
	-1, 1539,
	4, 2492,
	11, 2492,
	12, 2492,
	14, 2492,
	15, 2492,
	16, 2492,
	17, 2492,
	18, 2492,
	19, 2492,
	21, 2492,
	22, 2492,
	23, 2492,
	24, 2492,
	25, 2492,
	26, 2492,
	27, 2492,
	29, 2492,
	30, 2492,
	33, 2492,
	34, 2492,
	36, 2492,
	38, 2492,
	41, 2492,
	42, 2492,
	44, 2492,
	45, 2492,
	46, 2492,
	47, 2492,
	48, 2492,
	49, 2492,
	50, 2492,
	51, 2492,
	53, 2492,
	54, 2492,
	55, 2492,
	56, 2492,
	58, 2492,
	59, 2492,
	60, 2492,
	61, 2492,
	62, 2492,
	63, 2492,
	64, 2492,
	68, 2492,
	69, 2492,
	70, 2492,
	71, 2492,
	73, 2492,
	74, 2492,
	75, 2492,
	76, 2492,
	79, 2492,
	80, 2492,
	81, 2492,
	82, 2492,
	83, 2492,
	84, 2492,
	85, 2492,
	86, 2492,
	88, 2492,
	89, 2492,
	90, 2492,
	91, 2492,
	92, 2492,
	94, 2492,
	95, 2492,
	96, 2492,
	97, 2492,
	98, 2492,
	99, 2492,
	100, 2492,
	101, 2492,
	103, 2492,
	104, 2492,
	105, 2492,
	106, 2492,
	107, 2492,
	108, 2492,
	116, 2492,
	117, 2492,
	118, 2492,
	119, 2492,
	121, 2492,
	122, 2492,
	123, 2492,
	125, 2492,
	126, 2492,
	127, 2492,
	129, 2492,
	130, 2492,
	132, 2492,
	133, 2492,
	134, 2492,
	137, 2492,
	138, 2492,
	139, 2492,
	141, 2492,
	142, 2492,
	144, 2492,
	145, 2492,
	146, 2492,
	148, 2492,
	149, 2492,
	150, 2492,
	151, 2492,
	152, 2492,
	153, 2492,
	154, 2492,
	155, 2492,
	156, 2492,
	157, 2492,
	158, 2492,
	159, 2492,
	160, 2492,
	161, 2492,
	162, 2492,
	163, 2492,
	167, 2492,
	168, 2492,
	169, 2492,
	170, 2492,
	171, 2492,
	172, 2492,
	173, 2492,
	174, 2492,
	177, 2492,
	178, 2492,
	180, 2492,
	183, 2492,
	184, 2492,
	185, 2492,
	186, 2492,
	187, 2492,
	188, 2492,
	189, 2492,
	190, 2492,
	191, 2492,
	192, 2492,
	193, 2492,
	194, 2492,
	195, 2492,
	197, 2492,
	198, 2492,
	200, 2492,
	201, 2492,
	203, 2492,
	204, 2492,
	205, 2492,
	206, 2492,
	207, 2492,
	208, 2492,
	209, 2492,
	210, 2492,
	211, 2492,
	212, 2492,
	213, 2492,
	214, 2492,
	215, 2492,
	216, 2492,
	217, 2492,
	218, 2492,
	219, 2492,
	221, 2492,
	222, 2492,
	224, 2492,
	225, 2492,
	226, 2492,
	227, 2492,
	229, 2492,
	230, 2492,
	231, 2492,
	232, 2492,
	234, 2492,
	236, 2492,
	237, 2492,
	238, 2492,
	239, 2492,
	240, 2492,
	241, 2492,
	242, 2492,
	243, 2492,
	244, 2492,
	245, 2492,
	247, 2492,
	248, 2492,
	249, 2492,
	250, 2492,
	251, 2492,
	252, 2492,
	253, 2492,
	254, 2492,
	256, 2492,
	257, 2492,
	258, 2492,
	260, 2492,
	261, 2492,
	262, 2492,
	263, 2492,
	264, 2492,
	265, 2492,
	267, 2492,
	271, 2492,
	272, 2492,
	275, 2492,
	276, 2492,
	277, 2492,
	278, 2492,
	279, 2492,
	280, 2492,
	281, 2492,
	282, 2492,
	283, 2492,
	284, 2492,
	285, 2492,
	286, 2492,
	287, 2492,
	288, 2492,
	289, 2492,
	290, 2492,
	291, 2492,
	292, 2492,
	293, 2492,
	294, 2492,
	295, 2492,
	296, 2492,
	297, 2492,
	298, 2492,
	299, 2492,
	300, 2492,
	301, 2492,
	303, 2492,
	304, 2492,
	305, 2492,
	306, 2492,
	307, 2492,
	308, 2492,
	309, 2492,
	310, 2492,
	311, 2492,
	312, 2492,
	313, 2492,
	314, 2492,
	315, 2492,
	316, 2492,
	318, 2492,
	321, 2492,
	322, 2492,
	323, 2492,
	325, 2492,
	326, 2492,
	327, 2492,
	328, 2492,
	329, 2492,
	332, 2492,
	336, 2492,
	337, 2492,
	338, 2492,
	339, 2492,
	341, 2492,
	342, 2492,
	343, 2492,
	345, 2492,
	347, 2492,
	348, 2492,
	349, 2492,
	350, 2492,
	351, 2492,
	352, 2492,
	353, 2492,
	354, 2492,
	355, 2492,
	356, 2492,
	357, 2492,
	358, 2492,
	360, 2492,
	361, 2492,
	362, 2492,
	363, 2492,
	364, 2492,
	365, 2492,
	366, 2492,
	367, 2492,
	368, 2492,
	369, 2492,
	370, 2492,
	371, 2492,
	372, 2492,
	373, 2492,
	374, 2492,
	376, 2492,
	377, 2492,
	379, 2492,
	380, 2492,
	381, 2492,
	382, 2492,
	383, 2492,
	384, 2492,
	385, 2492,
	386, 2492,
	387, 2492,
	388, 2492,
	389, 2492,
	390, 2492,
	392, 2492,
	394, 2492,
	395, 2492,
	400, 2492,
	401, 2492,
	402, 2492,
	403, 2492,
	404, 2492,
	405, 2492,
	406, 2492,
	407, 2492,
	408, 2492,
	409, 2492,
	411, 2492,
	412, 2492,
	413, 2492,
	414, 2492,
	415, 2492,
	416, 2492,
	417, 2492,
	418, 2492,
	419, 2492,
	420, 2492,
	421, 2492,
	422, 2492,
	423, 2492,
	424, 2492,
	425, 2492,
	426, 2492,
	427, 2492,
	428, 2492,
	429, 2492,
	430, 2492,
	431, 2492,
	432, 2492,
	434, 2492,
	435, 2492,
	436, 2492,
	437, 2492,
	438, 2492,
	439, 2492,
	441, 2492,
	442, 2492,
	443, 2492,
	444, 2492,
	445, 2492,
	446, 2492,
	447, 2492,
	448, 2492,
	449, 2492,
	450, 2492,
	451, 2492,
	452, 2492,
	453, 2492,
	454, 2492,
	456, 2492,
	458, 2492,
	459, 2492,
	460, 2492,
	461, 2492,
	462, 2492,
	463, 2492,
	464, 2492,
	465, 2492,
	466, 2492,
	467, 2492,
	468, 2492,
	469, 2492,
	470, 2492,
	471, 2492,
	473, 2492,
	474, 2492,
	476, 2492,
	478, 2492,
	479, 2492,
	480, 2492,
	481, 2492,
	482, 2492,
	483, 2492,
	484, 2492,
	485, 2492,
	486, 2492,
	488, 2492,
	489, 2492,
	490, 2492,
	491, 2492,
	492, 2492,
	494, 2492,
	496, 2492,
	497, 2492,
	498, 2492,
	499, 2492,
	500, 2492,
	501, 2492,
	503, 2492,
	504, 2492,
	505, 2492,
	506, 2492,
	508, 2492,
	509, 2492,
	512, 2492,
	513, 2492,
	514, 2492,
	515, 2492,
	516, 2492,
	517, 2492,
	518, 2492,
	520, 2492,
	523, 2492,
	524, 2492,
	525, 2492,
	526, 2492,
	527, 2492,
	528, 2492,
	530, 2492,
	531, 2492,
	532, 2492,
	533, 2492,
	538, 2492,
	539, 2492,
	540, 2492,
	541, 2492,
	542, 2492,
	543, 2492,
	544, 2492,
	546, 2492,
	549, 2492,
	550, 2492,
	551, 2492,
	552, 2492,
	553, 2492,
	554, 2492,
	556, 2492,
	557, 2492,
	558, 2492,
	559, 2492,
	560, 2492,
	561, 2492,
	562, 2492,
	563, 2492,
	564, 2492,
	566, 2492,
	569, 2492,
	570, 2492,
	572, 2492,
	573, 2492,
	-2, 0,
	-1, 1544,
	182, 2379,
	493, 2379,
	551, 2379,
	570, 2379,
	-2, 0,
	-1, 1593,
	381, 801,
	439, 801,
	498, 801,
	-2, 0,
	-1, 1619,
	1, 796,
	567, 796,
	569, 796,
	571, 796,
	-2, 0,
	-1, 1620,
	1, 832,
	567, 832,
	569, 832,
	571, 832,
	-2, 0,
	-1, 1621,
	1, 840,
	567, 840,
	569, 840,
	571, 840,
	-2, 0,
	-1, 1622,
	1, 803,
	567, 803,
	569, 803,
	571, 803,
	-2, 0,
	-1, 1624,
	1, 807,
	567, 807,
	569, 807,
	571, 807,
	-2, 0,
	-1, 1630,
	1, 814,
	567, 814,
	569, 814,
	571, 814,
	-2, 0,
	-1, 1658,
	1, 2438,
	567, 2438,
	569, 2438,
	570, 2438,
	571, 2438,
	-2, 865,
	-1, 1659,
	1, 2376,
	567, 2376,
	569, 2376,
	570, 2376,
	571, 2376,
	-2, 866,
	-1, 1675,
	1, 1259,
	571, 1259,
	-2, 1264,
	-1, 1678,
	166, 1406,
	179, 1406,
	266, 1406,
	330, 1406,
	-2, 1344,
	-1, 1772,
	147, 1365,
	166, 1365,
	179, 1365,
	233, 1365,
	266, 1365,
	330, 1365,
	340, 1365,
	510, 1365,
	-2, 1806,
	-1, 1832,
	569, 1956,
	-2, 0,
	-1, 1867,
	147, 1365,
	166, 1365,
	179, 1365,
	233, 1365,
	266, 1365,
	330, 1365,
	340, 1365,
	510, 1365,
	-2, 1493,
	-1, 1916,
	568, 1633,
	-2, 1621,
	-1, 1991,
	1, 627,
	571, 627,
	-2, 1264,
	-1, 2109,
	215, 233,
	-2, 2096,
	-1, 2110,
	215, 234,
	-2, 276,
	-1, 2208,
	1, 798,
	567, 798,
	569, 798,
	571, 798,
	-2, 0,
	-1, 2209,
	1, 834,
	567, 834,
	569, 834,
	571, 834,
	-2, 0,
	-1, 2210,
	1, 842,
	567, 842,
	569, 842,
	571, 842,
	-2, 0,
	-1, 2243,
	1, 816,
	567, 816,
	569, 816,
	571, 816,
	-2, 0,
	-1, 2290,
	419, 1433,
	420, 1433,
	-2, 1666,
	-1, 2321,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1686,
	-1, 2322,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1687,
	-1, 2323,
	95, 0,
	247, 0,
	248, 0,
	553, 0,
	554, 0,
	-2, 1688,
	-1, 2324,
	95, 0,
	247, 0,
	248, 0,
	553, 0,
	554, 0,
	-2, 1689,
	-1, 2325,
	95, 0,
	247, 0,
	248, 0,
	553, 0,
	554, 0,
	-2, 1690,
	-1, 2326,
	95, 0,
	247, 0,
	248, 0,
	553, 0,
	554, 0,
	-2, 1691,
	-1, 2327,
	95, 0,
	247, 0,
	248, 0,
	553, 0,
	554, 0,
	-2, 1692,
	-1, 2328,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1693,
	-1, 2340,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1705,
	-1, 2341,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1706,
	-1, 2342,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1707,
	-1, 2345,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1712,
	-1, 2351,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1716,
	-1, 2353,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1724,
	-1, 2354,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1725,
	-1, 2355,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1726,
	-1, 2356,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1727,
	-1, 2492,
	5, 2100,
	182, 1967,
	568, 2097,
	-2, 2088,
	-1, 2493,
	182, 1968,
	-2, 2443,
	-1, 2494,
	182, 1969,
	-2, 2277,
	-1, 2495,
	182, 1970,
	-2, 2168,
	-1, 2496,
	182, 1971,
	-2, 2219,
	-1, 2497,
	182, 1972,
	-2, 2262,
	-1, 2498,
	182, 1973,
	-2, 2374,
	-1, 2499,
	182, 1974,
	-2, 1789,
	-1, 2568,
	1, 1494,
	2, 1494,
	106, 1494,
	147, 1494,
	166, 1494,
	179, 1494,
	183, 1494,
	199, 1494,
	202, 1494,
	229, 1494,
	233, 1494,
	244, 1494,
	262, 1494,
	266, 1494,
	304, 1494,
	330, 1494,
	334, 1494,
	340, 1494,
	410, 1494,
	414, 1494,
	510, 1494,
	521, 1494,
	535, 1494,
	536, 1494,
	537, 1494,
	547, 1494,
	567, 1494,
	569, 1494,
	571, 1494,
	573, 1494,
	-2, 1493,
	-1, 2581,
	568, 2069,
	-2, 2083,
	-1, 2583,
	53, 1392,
	132, 1392,
	-2, 292,
	-1, 2608,
	568, 1632,
	-2, 1622,
	-1, 2775,
	1, 1152,
	567, 1152,
	569, 1152,
	571, 1152,
	-2, 1392,
	-1, 2934,
	335, 1436,
	-2, 2482,
	-1, 2935,
	335, 1437,
	-2, 2360,
	-1, 2939,
	419, 2033,
	420, 2033,
	-2, 1787,
	-1, 2940,
	419, 2037,
	420, 2037,
	-2, 1788,
	-1, 2941,
	419, 2034,
	420, 2034,
	-2, 1787,
	-1, 2942,
	419, 2038,
	420, 2038,
	-2, 1788,
	-1, 2955,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1714,
	-1, 2956,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1718,
	-1, 2962,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1720,
	-1, 3202,
	1, 624,
	567, 624,
	569, 624,
	571, 624,
	-2, 1264,
	-1, 3340,
	1, 1152,
	567, 1152,
	569, 1152,
	571, 1152,
	-2, 1392,
	-1, 3440,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1722,
	-1, 3447,
	238, 0,
	240, 0,
	321, 0,
	-2, 1741,
	-1, 3514,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1770,
	-1, 3515,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1771,
	-1, 3516,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1772,
	-1, 3520,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1776,
	-1, 3521,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1777,
	-1, 3522,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1778,
	-1, 3568,
	568, 2070,
	-2, 2084,
	-1, 3708,
	570, 2599,
	-2, 1318,
	-1, 3764,
	238, 0,
	240, 0,
	321, 0,
	-2, 1742,
	-1, 3767,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1745,
	-1, 3768,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1747,
	-1, 3853,
	570, 2085,
	-2, 1186,
	-1, 3982,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1746,
	-1, 3983,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1748,
	-1, 3994,
	238, 0,
	-2, 1779,
	-1, 4152,
	238, 0,
	-2, 1780,
	-1, 4323,
	50, 0,
	212, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 2446,
}

const sqlPrivate = 57344

const sqlLast = 116660

var sqlAct = [...]int{

	256, 4184, 4305, 2836, 2849, 3113, 4032, 4202, 4333, 3324,
	4206, 4438, 4294, 4275, 4176, 4322, 4223, 4078, 2106, 3325,
	3747, 4258, 1058, 4334, 2665, 4278, 3849, 4335, 1255, 4019,
	1181, 2177, 4085, 2706, 3479, 4105, 4156, 1192, 3939, 3906,
	3934, 4385, 3432, 1259, 3888, 4037, 4321, 4003, 2300, 4094,
	1014, 3352, 3971, 3920, 2948, 3700, 3642, 3850, 3834, 1903,
	2368, 4119, 3350, 1253, 3357, 1687, 3676, 1974, 2524, 1005,
	3944, 1559, 3660, 2308, 766, 3320, 2046, 3223, 39, 1323,
	2301, 2858, 3662, 3310, 733, 3999, 3395, 2825, 2871, 2807,
	3397, 2186, 1904, 1431, 2797, 2738, 1263, 3571, 766, 2860,
	1873, 3156, 3136, 3128, 3746, 2868, 3096, 2822, 840, 4,
	3119, 2820, 3803, 2837, 3117, 2667, 2857, 3220, 2851, 1842,
	1414, 1013, 170, 2101, 3539, 2561, 2100, 3095, 2560, 1601,
	4157, 1818, 2305, 2410, 2381, 1780, 1421, 2056, 1558, 1499,
	2867, 1069, 761, 1951, 2752, 2095, 2184, 2151, 1172, 4203,
	2079, 2086, 2808, 2027, 2705, 250, 1306, 1062, 2932, 2030,
	2542, 2401, 1675, 2365, 1972, 1862, 2563, 2017, 2272, 1843,
	1232, 2270, 2289, 2593, 1859, 3322, 1537, 1504, 2412, 2139,
	1243, 767, 2830, 1067, 768, 664, 2592, 4224, 3163, 2861,
	2404, 2521, 2656, 2550, 1292, 1813, 1961, 1852, 1175, 2532,
	833, 1154, 2382, 1065, 2488, 249, 1688, 1265, 2454, 1765,
	1689, 2271, 170, 105, 179, 2273, 650, 1246, 1112, 180,
	672, 1064, 715, 1189, 1630, 2163, 1441, 1528, 2138, 772,
	727, 2045, 763, 1171, 4306, 1535, 2294, 1949, 1043, 667,
	675, 44, 43, 41, 32, 1187, 30, 28, 1152, 1177,
	1694, 2983, 902, 772, 1674, 1451, 922, 2979, 3553, 690,
	3554, 4507, 814, 1963, 3115, 2541, 4497, 1963, 1963, 4484,
	3376, 4483, 4474, 2541, 1060, 2541, 1981, 1009, 4456, 775,
	3367, 1963, 4036, 1963, 1963, 4454, 4404, 4364, 4357, 4036,
	1981, 4365, 2541, 4355, 4352, 4349, 4319, 2541, 4353, 4350,
	1981, 4318, 3366, 775, 4317, 1981, 4312, 4311, 1983, 834,
	1983, 1983, 4303, 4301, 4273, 4248, 4036, 4036, 4036, 2599,
	3186, 4241, 4240, 4235, 1623, 2541, 2541, 4036, 4234, 3185,
	855, 4228, 4036, 1169, 1009, 1981, 72, 4198, 837, 836,
	4154, 3898, 4136, 4133, 2599, 4130, 3735, 1981, 4087, 4036,
	4052, 4051, 4088, 73, 1981, 1981, 4043, 1301, 4042, 4035,
	1981, 72, 4036, 4036, 3068, 3069, 4010, 3984, 3963, 77,
	1981, 2599, 1983, 3952, 3376, 3883, 3871, 3376, 73, 2541,
	2541, 1155, 1155, 2185, 3766, 990, 3068, 3069, 2599, 3716,
	989, 1301, 3710, 3392, 77, 1010, 3392, 3674, 3563, 3561,
	3546, 3675, 3564, 3562, 2541, 1981, 3463, 3459, 3391, 84,
	1981, 2541, 3392, 1702, 1703, 3383, 3171, 3543, 3112, 3384,
	3107, 3106, 2541, 3059, 2541, 2541, 1184, 3060, 248, 3033,
	2947, 999, 1004, 3034, 84, 2618, 1733, 3025, 3023, 3083,
	2534, 3026, 2541, 1705, 1183, 2994, 838, 1702, 1703, 2541,
	1735, 1736, 1737, 1745, 1746, 1747, 2992, 2874, 2595, 2847,
	104, 1983, 2993, 2173, 1156, 90, 101, 1203, 2846, 1738,
	1733, 838, 2173, 2541, 1210, 2640, 2598, 1705, 1704, 2541,
	2599, 220, 4249, 1702, 1703, 104, 1751, 4158, 2590, 2584,
	90, 101, 2541, 1981, 1981, 2540, 1981, 4149, 2172, 2541,
	4137, 1453, 2173, 1158, 1983, 1159, 1733, 3543, 2533, 3933,
	2541, 3898, 1704, 1705, 3872, 2617, 3735, 3384, 2729, 2050,
	2655, 91, 1724, 1996, 1962, 222, 1978, 2803, 2113, 2746,
	3074, 1721, 2653, 1702, 1703, 1838, 1735, 1736, 1737, 1745,
	1746, 1747, 1440, 3632, 3435, 3413, 91, 1204, 1704, 1860,
	2089, 3368, 3074, 1603, 2577, 2576, 1733, 2575, 2574, 2573,
	1160, 1157, 998, 1705, 997, 1445, 996, 2982, 995, 994,
	3369, 3819, 1751, 993, 221, 992, 988, 1445, 987, 1710,
	986, 985, 220, 984, 983, 214, 2911, 1567, 1465, 982,
	981, 980, 979, 978, 215, 977, 976, 975, 1704, 974,
	973, 972, 954, 1727, 1728, 1729, 1730, 1964, 1724, 900,
	899, 1964, 1964, 1710, 898, 897, 181, 1721, 896, 4162,
	895, 894, 893, 1732, 1734, 1964, 222, 1964, 1964, 892,
	891, 890, 3084, 889, 888, 887, 886, 885, 884, 883,
	882, 881, 880, 879, 878, 877, 1459, 876, 1742, 1710,
	875, 1752, 874, 873, 3084, 872, 871, 1732, 1734, 870,
	869, 868, 858, 94, 857, 853, 852, 846, 2597, 3946,
	845, 3366, 832, 831, 1748, 221, 1749, 789, 788, 787,
	786, 1725, 778, 1719, 1720, 777, 776, 748, 94, 1727,
	1728, 1729, 1730, 1732, 1734, 739, 738, 737, 721, 1710,
	244, 1740, 243, 242, 241, 240, 239, 238, 1268, 1067,
	237, 1204, 236, 178, 97, 1725, 100, 181, 4030, 235,
	1981, 234, 233, 232, 231, 230, 229, 90, 228, 2407,
	227, 226, 1067, 225, 1742, 224, 1067, 1752, 178, 97,
	220, 100, 223, 1732, 1734, 3778, 3581, 3557, 839, 3393,
	3159, 1725, 1326, 143, 3005, 220, 1326, 1750, 2988, 2784,
	1268, 1041, 2603, 2582, 1453, 220, 2567, 1553, 3110, 1719,
	1720, 2025, 2628, 839, 3085, 1739, 1962, 1981, 143, 3068,
	3069, 1067, 1305, 1067, 222, 1067, 1310, 1740, 1275, 2437,
	1978, 1268, 2617, 2265, 1464, 1886, 3085, 2180, 1821, 222,
	1446, 1725, 1791, 2816, 2423, 1820, 3111, 1863, 1447, 222,
	145, 3068, 3069, 1312, 2408, 2421, 1268, 1191, 2833, 4340,
	1296, 1429, 4320, 1726, 1424, 182, 4213, 1824, 4501, 1782,
	1701, 2533, 4146, 221, 3998, 145, 1268, 1731, 3953, 3932,
	3826, 1268, 4161, 4140, 214, 3801, 3800, 1821, 221, 1067,
	182, 1067, 1458, 215, 1820, 1268, 1625, 1726, 221, 214,
	1450, 1067, 1457, 1067, 1463, 1204, 4138, 3948, 215, 214,
	1571, 1444, 1237, 1240, 3794, 835, 1819, 2179, 215, 1250,
	3793, 1510, 1512, 1743, 3792, 3785, 3784, 3782, 3777, 3774,
	181, 1290, 3773, 1726, 2409, 3673, 2406, 3585, 3584, 1319,
	181, 1411, 1416, 3679, 3068, 3069, 3583, 1497, 1268, 3079,
	3077, 3078, 3070, 3071, 3072, 3073, 3075, 3076, 2734, 3567,
	3534, 1502, 4448, 1731, 3533, 772, 1067, 3532, 1551, 1067,
	1556, 3079, 3077, 3078, 3070, 3071, 3072, 3073, 3075, 3076,
	1565, 1452, 1570, 1726, 1453, 3074, 1540, 1542, 3455, 3451,
	3154, 1443, 2691, 1557, 1442, 1276, 1012, 1285, 170, 170,
	1714, 1706, 1707, 1708, 1709, 1711, 1712, 3103, 1784, 1743,
	3094, 1782, 1419, 1572, 3067, 775, 1783, 3074, 1781, 1168,
	1741, 3068, 3069, 3064, 1185, 1716, 1717, 1723, 1744, 1722,
	1718, 3063, 1715, 1713, 1714, 1706, 1707, 1708, 1709, 1711,
	1712, 3630, 220, 1624, 3061, 3788, 3032, 3068, 3069, 3787,
	3031, 3030, 3027, 3024, 3004, 143, 2987, 2980, 220, 220,
	1067, 1067, 1067, 1067, 1067, 1067, 1067, 2848, 1715, 1713,
	1714, 1706, 1707, 1708, 1709, 1711, 1712, 1789, 1515, 2568,
	2411, 2154, 2818, 1538, 2394, 1701, 222, 3084, 2120, 1010,
	1296, 1067, 2118, 1296, 1700, 3108, 4447, 1067, 4416, 1679,
	1639, 3680, 222, 222, 1531, 4374, 1741, 4372, 1702, 1703,
	3074, 1716, 1717, 1723, 1744, 1722, 1718, 220, 1715, 1713,
	1714, 1706, 1707, 1708, 1709, 1711, 1712, 1193, 3481, 4265,
	3177, 220, 4205, 4194, 4191, 221, 4190, 4189, 1705, 4170,
	4160, 3947, 4159, 4134, 1673, 1552, 214, 4118, 4117, 2371,
	4103, 221, 221, 1702, 1703, 215, 4100, 1566, 1453, 4048,
	2377, 222, 214, 214, 4026, 220, 3151, 220, 3996, 1702,
	1703, 215, 215, 1704, 1254, 222, 1733, 181, 3979, 3680,
	3978, 3960, 3959, 1705, 3923, 3899, 3818, 3074, 3799, 1771,
	2405, 3736, 1733, 181, 181, 1560, 1577, 3730, 3727, 1705,
	3620, 3619, 1067, 1067, 1067, 3606, 1594, 3605, 1067, 222,
	221, 222, 3603, 3074, 3549, 1189, 2612, 1189, 1704, 3537,
	1626, 214, 1417, 3446, 221, 1428, 1254, 1769, 1724, 3085,
	215, 3394, 1326, 1840, 1704, 214, 3377, 1187, 220, 1187,
	1067, 3343, 3282, 766, 215, 3251, 3222, 3179, 3009, 1921,
	766, 3008, 181, 1268, 3003, 2971, 1676, 1684, 221, 1893,
	221, 1683, 1889, 2796, 1827, 1826, 181, 2817, 990, 214,
	1825, 214, 1900, 989, 1710, 1822, 1849, 1814, 215, 1947,
	215, 1678, 222, 1812, 2610, 2609, 1254, 1254, 1823, 3084,
	2579, 2572, 2539, 1680, 2419, 1885, 1841, 1877, 1697, 1698,
	181, 1836, 2832, 2181, 1010, 1894, 1835, 1834, 1896, 1727,
	1728, 1729, 1730, 1833, 1832, 3084, 1831, 1830, 1268, 1710,
	1829, 1828, 1846, 1847, 4029, 1067, 1809, 1870, 1808, 1268,
	1807, 221, 1806, 1805, 1804, 1710, 1803, 1802, 1801, 1800,
	170, 220, 214, 1815, 1816, 1702, 1703, 1067, 1799, 1952,
	1798, 215, 1797, 1326, 1796, 1795, 1784, 1770, 1768, 1763,
	1155, 1284, 1208, 1732, 1734, 3077, 3078, 3070, 3071, 3072,
	3073, 3075, 3076, 181, 1199, 1705, 3926, 3822, 2014, 1732,
	1734, 3770, 3580, 1871, 3560, 222, 3552, 1861, 2991, 2570,
	1915, 2601, 1529, 1989, 1892, 4014, 2436, 2023, 772, 3070,
	3071, 3072, 3073, 3075, 3076, 772, 1534, 1988, 3874, 3824,
	1704, 2422, 220, 3579, 1952, 1868, 3068, 3069, 1184, 1296,
	1184, 1725, 2420, 4141, 220, 1994, 220, 220, 1783, 3175,
	1010, 3085, 1766, 2016, 221, 3372, 1183, 1725, 1183, 1702,
	1703, 1881, 1839, 3254, 1309, 214, 4139, 1966, 775, 4445,
	2016, 4437, 1890, 3353, 215, 775, 222, 3085, 2016, 1301,
	1880, 1879, 1878, 1876, 1865, 1875, 1874, 1918, 222, 1705,
	222, 222, 4192, 4090, 1968, 1897, 181, 1970, 4089, 1268,
	1268, 3951, 1944, 1975, 1901, 2710, 3901, 1977, 1326, 4095,
	1991, 3900, 1980, 1863, 3072, 3073, 3075, 3076, 1307, 3873,
	1987, 3821, 1308, 3739, 1704, 221, 1804, 3738, 3737, 2038,
	1804, 3555, 3379, 3378, 3683, 1821, 214, 221, 3433, 221,
	221, 1671, 1820, 1909, 1301, 215, 3277, 2050, 214, 3029,
	214, 214, 3028, 2953, 1593, 2693, 2074, 215, 2078, 215,
	215, 2083, 1301, 1731, 1304, 3618, 970, 181, 3224, 3387,
	2107, 2111, 3327, 1602, 3326, 1985, 1793, 4316, 2200, 181,
	2178, 181, 181, 1726, 4086, 4360, 4345, 4332, 3078, 3070,
	3071, 3072, 3073, 3075, 3076, 3311, 2872, 1603, 2102, 1726,
	4000, 2019, 1268, 2009, 1268, 1167, 1268, 2002, 3639, 971,
	1992, 3637, 3623, 3410, 3200, 3070, 3071, 3072, 3073, 3075,
	3076, 3115, 1268, 1268, 3483, 1710, 2997, 2055, 2402, 4341,
	2608, 2155, 1837, 1268, 2087, 1817, 3318, 2148, 1509, 1437,
	1279, 1236, 4354, 2740, 4351, 1268, 2104, 1268, 1268, 1268,
	3362, 3598, 4185, 1640, 2743, 3935, 772, 1533, 4272, 4167,
	1790, 3227, 3613, 1581, 2855, 2187, 2829, 3304, 4401, 766,
	3427, 3204, 4402, 4069, 3862, 1475, 4428, 2199, 1708, 1709,
	1711, 1712, 1443, 3652, 2144, 1442, 1428, 2641, 968, 4496,
	966, 1438, 4062, 2149, 4342, 964, 4054, 3896, 962, 2160,
	2659, 3648, 959, 3647, 2208, 2249, 775, 3641, 3636, 3176,
	3634, 3595, 3594, 2247, 2073, 2657, 2082, 2183, 1715, 1713,
	1714, 1706, 1707, 1708, 1709, 1711, 1712, 2112, 827, 3307,
	3170, 3002, 1428, 2659, 3001, 2204, 1302, 1706, 1707, 1708,
	1709, 1711, 1712, 1483, 3000, 1534, 2999, 3651, 2657, 2957,
	2750, 1067, 950, 1067, 2157, 2749, 2745, 2168, 1291, 2736,
	1067, 2188, 2209, 1921, 1921, 1326, 2170, 1067, 1067, 1067,
	1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067,
	1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067,
	1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067,
	1067, 1067, 2131, 1067, 2130, 1067, 1067, 1067, 1067, 1538,
	2162, 1538, 2166, 2003, 2282, 1010, 1531, 1010, 2165, 2725,
	2165, 2210, 1309, 3846, 772, 1484, 2269, 1067, 828, 1309,
	1067, 1067, 2724, 1638, 2719, 1285, 2718, 2174, 1067, 2175,
	1579, 2697, 1067, 2684, 1067, 1067, 2591, 2826, 2407, 1298,
	3253, 2352, 1326, 2192, 1677, 2306, 2307, 3842, 1067, 1067,
	1067, 1067, 2191, 1067, 1067, 1067, 1067, 1067, 1067, 1067,
	1067, 4429, 3206, 1619, 775, 2450, 1008, 2669, 2449, 2310,
	1308, 3411, 2047, 1637, 1302, 3224, 1521, 1308, 1520, 1067,
	1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 2383, 2384,
	2178, 2225, 1067, 2050, 1915, 1915, 2008, 2007, 3977, 3843,
	2016, 2018, 2383, 2399, 1189, 2043, 2129, 2243, 1712, 2683,
	2293, 1326, 1519, 1262, 1518, 2280, 4432, 1303, 2261, 2264,
	1189, 1620, 1479, 2408, 2367, 2695, 1187, 2263, 2445, 956,
	2602, 2048, 2049, 2280, 2258, 2216, 1067, 1326, 1222, 1439,
	2196, 2268, 1187, 3601, 2281, 2267, 2274, 2491, 2491, 2505,
	2266, 2383, 1007, 1302, 2525, 2527, 1492, 2648, 2077, 990,
	2531, 2044, 990, 990, 2297, 1434, 1533, 2298, 2299, 2398,
	1636, 1918, 1918, 2278, 1299, 2583, 2672, 3875, 2594, 3076,
	1621, 2367, 2147, 1300, 1649, 2253, 1185, 1298, 1185, 2714,
	2930, 2278, 1591, 1574, 2707, 2708, 1468, 1706, 1707, 1708,
	1709, 1711, 1712, 2409, 2580, 2406, 2555, 4433, 1881, 3609,
	2402, 2707, 2708, 1595, 2547, 746, 2011, 2945, 1682, 2707,
	2708, 1506, 3858, 2260, 2379, 2615, 1283, 1909, 1909, 2213,
	1870, 2375, 1010, 4458, 1268, 1268, 2396, 749, 2373, 2207,
	2217, 1010, 662, 2447, 4178, 1010, 1546, 4401, 2448, 4338,
	2569, 2451, 3658, 2452, 2453, 1155, 2682, 2167, 3418, 1009,
	3417, 2634, 2596, 2546, 2908, 1303, 1298, 2411, 657, 2276,
	3895, 3268, 1670, 1653, 170, 2554, 1326, 2559, 2636, 3472,
	2565, 2566, 3261, 2057, 2500, 2516, 2487, 3203, 1505, 2777,
	2529, 3657, 2631, 2069, 3838, 2742, 2537, 2538, 1603, 3839,
	2552, 2553, 2548, 830, 829, 3621, 2061, 1184, 1921, 1575,
	3267, 2279, 2053, 1585, 866, 4435, 2739, 1823, 1868, 859,
	744, 3260, 1299, 1184, 847, 1183, 2013, 2741, 2776, 2279,
	1632, 1300, 2068, 1010, 1503, 3635, 2604, 1296, 2658, 4413,
	1326, 1183, 3633, 2944, 1303, 1301, 2937, 2938, 3622, 2411,
	3841, 2052, 3976, 754, 1268, 3469, 2041, 3306, 1196, 4180,
	2611, 2058, 3274, 2661, 2012, 2744, 3844, 2717, 1067, 1067,
	2671, 1067, 1580, 960, 2690, 960, 1815, 1816, 1603, 2694,
	960, 2277, 2614, 961, 2616, 2638, 2622, 960, 2257, 2248,
	2625, 2363, 2626, 2696, 1268, 2639, 1018, 2246, 1194, 2277,
	2700, 1299, 825, 2632, 824, 2085, 2737, 2660, 4419, 2644,
	1300, 2733, 4418, 2623, 1635, 4487, 2800, 3856, 4339, 2627,
	2361, 2589, 2117, 2116, 1268, 2411, 4461, 2646, 2084, 1006,
	2349, 1026, 2637, 4390, 713, 3470, 1268, 4441, 2715, 2814,
	2642, 2686, 2840, 2699, 2630, 2785, 3752, 3751, 2788, 1915,
	2790, 1268, 3359, 2698, 4245, 1481, 2914, 2869, 756, 2405,
	2647, 2080, 2099, 2062, 1851, 1963, 2716, 2709, 2711, 2712,
	2713, 2664, 2877, 2878, 3360, 2674, 2677, 2259, 2041, 4186,
	2645, 1505, 1478, 2884, 2885, 2886, 3840, 2048, 2049, 2968,
	1952, 1067, 2831, 1301, 2215, 2831, 4434, 4200, 1221, 2895,
	2031, 2896, 2897, 1197, 2780, 2032, 2670, 2873, 2782, 2720,
	2723, 3610, 1650, 3205, 4337, 2098, 760, 2081, 2966, 772,
	2721, 2722, 3665, 3847, 3665, 745, 1918, 3285, 2063, 2064,
	1647, 3663, 2844, 3663, 2031, 2893, 1067, 2806, 2854, 2032,
	711, 1855, 1067, 1067, 170, 1443, 2810, 1206, 2783, 3239,
	3359, 1810, 2059, 3173, 4367, 2041, 2959, 2357, 2794, 860,
	861, 2917, 2727, 4368, 848, 849, 3857, 2507, 2905, 775,
	2804, 747, 1301, 4389, 743, 2358, 2919, 1254, 2921, 3973,
	2359, 2411, 1909, 3748, 2364, 2875, 2842, 1858, 751, 2879,
	2824, 2880, 2347, 2060, 2890, 2350, 2843, 1067, 1067, 2835,
	2845, 658, 1853, 1067, 957, 3238, 2899, 2856, 2901, 3915,
	2903, 2659, 4179, 2366, 3989, 2033, 1067, 1067, 755, 4412,
	1856, 4292, 1067, 1067, 1254, 4283, 2675, 3881, 1067, 680,
	2912, 1538, 2037, 1590, 1592, 1762, 4243, 1067, 1067, 1067,
	3666, 2728, 3666, 1067, 1648, 2346, 3007, 1651, 2898, 2033,
	712, 2020, 2021, 1067, 2551, 2963, 4462, 1254, 1254, 1681,
	2374, 2960, 1854, 758, 2925, 2564, 2037, 1282, 1576, 753,
	1067, 2212, 2990, 4244, 1009, 659, 867, 2393, 2964, 3242,
	4439, 2206, 2969, 3485, 2892, 4449, 3925, 2927, 1578, 2926,
	945, 2916, 3130, 3742, 3576, 2900, 1211, 2902, 2936, 2904,
	3753, 2034, 2039, 2293, 2981, 2065, 2985, 2986, 2931, 3972,
	3429, 2989, 750, 2928, 1003, 1607, 4207, 2946, 4336, 4400,
	660, 2913, 661, 4128, 4398, 3678, 4222, 3661, 3244, 2922,
	2923, 2071, 4102, 1652, 3698, 2034, 2039, 3346, 2137, 1848,
	757, 1209, 2090, 862, 863, 1202, 1417, 2097, 850, 851,
	649, 1001, 1692, 945, 714, 3797, 3749, 1195, 2360, 4488,
	1067, 1067, 1067, 2958, 1691, 752, 4388, 1428, 2362, 1067,
	1067, 1067, 1857, 2296, 1067, 945, 4120, 1003, 2066, 2051,
	2004, 4440, 3523, 2035, 1067, 1189, 1326, 4045, 4044, 4121,
	1067, 3243, 1067, 3122, 3123, 4023, 4166, 2050, 4366, 1003,
	1189, 3664, 4111, 3664, 946, 4467, 2075, 1187, 2001, 1964,
	3699, 3645, 2996, 3164, 4442, 2915, 3597, 2035, 1326, 3916,
	4122, 3347, 1187, 1002, 3339, 2040, 3218, 2348, 3214, 2041,
	1189, 2815, 2809, 1326, 2798, 1010, 2286, 2161, 2150, 2142,
	2123, 3468, 3105, 1472, 3974, 1213, 2072, 4208, 3861, 3538,
	1921, 3144, 1187, 3405, 1326, 3860, 2965, 2096, 3124, 2040,
	3157, 2701, 3398, 2041, 1690, 1185, 2967, 946, 1268, 1268,
	3169, 4259, 1691, 4225, 720, 3430, 2543, 2254, 3246, 3129,
	4124, 1185, 1999, 1997, 3701, 1686, 3940, 2795, 1224, 946,
	1067, 4084, 3183, 4082, 4025, 3591, 1428, 1855, 1691, 3754,
	3158, 3230, 4123, 1254, 1067, 3226, 3225, 3134, 2676, 2951,
	3132, 2726, 3209, 2929, 2197, 3551, 1921, 3247, 3127, 4125,
	3126, 1622, 2000, 3153, 1527, 2588, 2587, 2586, 1692, 2585,
	1007, 3210, 3211, 3133, 1067, 1268, 1525, 1428, 3142, 1428,
	3201, 3907, 3174, 1858, 3145, 3146, 3194, 3150, 3798, 3228,
	2545, 2176, 3232, 3116, 3207, 2544, 3400, 3162, 2549, 3131,
	3100, 3101, 3102, 3670, 1952, 1952, 3524, 1262, 2189, 2287,
	1268, 3399, 1690, 3405, 2802, 3525, 1856, 1893, 2190, 3143,
	3755, 4173, 3398, 1296, 3148, 1762, 3149, 1326, 1184, 947,
	2198, 1915, 2201, 2202, 2203, 3215, 1268, 4079, 1690, 3272,
	2036, 1268, 3273, 1184, 3213, 4466, 1183, 865, 3219, 2680,
	4033, 3187, 3188, 3256, 3604, 3288, 3248, 3249, 3291, 3388,
	3250, 1183, 3296, 3298, 1268, 3166, 3167, 3168, 2702, 2703,
	1268, 1952, 1268, 1184, 2036, 1326, 1692, 4209, 3180, 3181,
	3258, 3182, 766, 3229, 3195, 3191, 3234, 1608, 1513, 3236,
	3859, 1183, 947, 1268, 3202, 2038, 2070, 1915, 3396, 3279,
	3280, 3269, 1514, 3281, 1268, 3208, 1952, 2093, 1918, 3190,
	2159, 3323, 3192, 3193, 947, 3314, 3400, 3196, 3241, 3197,
	1189, 3198, 3283, 3332, 3355, 3592, 2038, 3957, 3292, 3270,
	3245, 3399, 1952, 3299, 4409, 3259, 4204, 1952, 3338, 2876,
	3252, 3309, 1187, 3312, 2781, 1268, 1268, 2869, 2779, 2076,
	4034, 1584, 3263, 3271, 1851, 3264, 2869, 4262, 3266, 3265,
	2091, 779, 4269, 4021, 1909, 3804, 948, 1268, 1857, 2087,
	3375, 3278, 3165, 4174, 1918, 4256, 3540, 2087, 3284, 3293,
	3286, 2418, 3294, 4287, 3300, 4411, 3301, 4356, 4193, 3335,
	3364, 3995, 3305, 719, 3796, 3956, 4126, 1526, 3669, 2092,
	3097, 4127, 1667, 1502, 1326, 3412, 4022, 1326, 3445, 1524,
	3401, 3402, 3403, 3404, 2558, 949, 1665, 3308, 2077, 3408,
	1644, 3184, 3062, 2970, 3316, 1642, 3348, 1000, 1618, 948,
	1909, 1855, 1616, 3275, 3356, 3336, 2699, 772, 1067, 2799,
	1614, 4263, 2735, 1612, 1067, 1067, 3373, 3374, 1067, 1067,
	1067, 948, 1067, 1610, 3406, 1600, 2692, 4175, 170, 170,
	2613, 1067, 1921, 3361, 3390, 3386, 1598, 1888, 1884, 1669,
	1067, 1668, 3370, 1067, 1523, 3424, 1562, 1858, 949, 1326,
	864, 2245, 3098, 3426, 3425, 1686, 3423, 775, 1067, 2910,
	2909, 3363, 1853, 3138, 2882, 2275, 1326, 2256, 1631, 2220,
	949, 2122, 1948, 1794, 1573, 3407, 1921, 1921, 1067, 1067,
	1856, 1067, 1067, 1067, 1496, 2417, 4331, 3638, 3431, 3276,
	3414, 3448, 3415, 1184, 3416, 3882, 3870, 958, 4255, 3938,
	3401, 3402, 3403, 3404, 3887, 3354, 1010, 3831, 3697, 3689,
	3420, 1183, 3650, 3616, 3457, 3458, 3614, 1428, 1428, 3596,
	4386, 3342, 1854, 1067, 3337, 3328, 2827, 1067, 3497, 1921,
	1921, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067,
	1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067,
	3428, 1067, 1666, 3287, 3498, 3139, 2813, 2805, 1067, 1067,
	1921, 3465, 2792, 2778, 2629, 1067, 1664, 2624, 2306, 3488,
	1643, 780, 781, 1915, 3453, 1641, 1067, 2121, 1617, 2119,
	2103, 2088, 1615, 2067, 1428, 2054, 2042, 1189, 1189, 3464,
	1613, 1067, 3421, 1611, 3471, 3473, 3474, 1984, 3480, 2635,
	1262, 1982, 1979, 1609, 3137, 1599, 1976, 2147, 3487, 1187,
	1187, 1971, 1969, 1965, 1956, 3351, 1597, 1915, 1915, 3495,
	1326, 2306, 3503, 3496, 1522, 1164, 3295, 3569, 2244, 4378,
	1895, 2097, 1857, 3535, 2949, 3141, 3573, 1695, 4402, 2005,
	2262, 3556, 3475, 4297, 3962, 3955, 963, 965, 967, 3954,
	1918, 1165, 3531, 3500, 3894, 3827, 2870, 2024, 1477, 3574,
	3575, 3502, 3527, 4113, 2659, 3494, 2659, 1067, 2681, 4106,
	1915, 1915, 3709, 3586, 3587, 3588, 2158, 2050, 3536, 2657,
	2211, 2678, 4296, 1067, 3528, 1662, 1663, 1244, 1245, 707,
	170, 2240, 1774, 2239, 1918, 1918, 1779, 3547, 3548, 2218,
	3863, 1915, 3889, 1596, 1702, 1703, 1909, 3544, 3545, 4148,
	783, 782, 1067, 1067, 3805, 3572, 1702, 1703, 3783, 2775,
	2704, 2685, 1699, 1277, 3542, 1212, 2950, 4405, 4396, 245,
	663, 3686, 3644, 4361, 3558, 2791, 2242, 2143, 3559, 1288,
	3140, 2096, 2740, 1067, 1696, 2748, 1705, 1918, 1918, 2747,
	1909, 1909, 2730, 2732, 3643, 2687, 1185, 2689, 1166, 4250,
	4217, 1245, 759, 4436, 4214, 1268, 2731, 784, 785, 1704,
	2688, 1185, 1245, 4172, 815, 4098, 646, 4077, 1918, 3688,
	3624, 1704, 3677, 3566, 1921, 674, 3341, 2834, 2530, 1990,
	1184, 1184, 3629, 3631, 1902, 4031, 3600, 4289, 3628, 3172,
	4465, 1185, 4290, 1909, 1909, 4289, 1428, 4216, 1183, 1183,
	4290, 3640, 3646, 1268, 3068, 3069, 2883, 1445, 3582, 3775,
	1067, 1583, 4415, 1702, 1703, 2651, 2652, 1582, 1189, 1067,
	2413, 3711, 2649, 2650, 1909, 3578, 2651, 2649, 2446, 1268,
	1268, 1268, 3718, 1646, 4099, 4063, 1645, 3890, 3589, 3886,
	1187, 2840, 3590, 3885, 3771, 1268, 3695, 3668, 3577, 3476,
	3655, 3289, 1788, 3702, 2699, 1787, 4451, 4420, 4254, 4253,
	4252, 4163, 4080, 3722, 1326, 4058, 3219, 2869, 4015, 4012,
	3691, 3684, 3918, 3706, 3823, 3705, 3733, 3715, 3672, 3615,
	3612, 3617, 3685, 3607, 3345, 3344, 1326, 3235, 3734, 1067,
	1067, 3189, 3058, 3057, 3056, 1067, 1067, 1921, 3055, 3703,
	1067, 1067, 3054, 1067, 3053, 3656, 3659, 1067, 3687, 3667,
	3052, 3051, 3050, 3049, 3048, 1915, 3671, 3690, 1067, 1075,
	3047, 3046, 3045, 3044, 3043, 3042, 3041, 3040, 3704, 3707,
	3712, 3039, 3713, 3038, 1067, 3037, 3036, 3741, 3035, 3756,
	3692, 3723, 3724, 3649, 2907, 3717, 3729, 2889, 3732, 3728,
	3731, 3725, 2888, 2887, 2819, 2793, 3765, 2679, 2620, 2606,
	2605, 2378, 2241, 2238, 2237, 252, 252, 252, 2236, 652,
	653, 3769, 668, 652, 668, 678, 2235, 2234, 718, 3750,
	2156, 3757, 736, 2132, 2128, 2127, 2126, 742, 2125, 2124,
	1959, 1958, 1918, 252, 1189, 1957, 1955, 1661, 1660, 3745,
	1605, 1604, 1189, 1491, 3740, 1490, 1326, 1489, 1326, 3846,
	1488, 844, 1487, 1486, 1485, 1189, 1187, 252, 1480, 1476,
	1474, 1184, 1473, 1317, 1187, 1316, 1315, 1314, 3810, 1313,
	1281, 1280, 1326, 1231, 1230, 1229, 1228, 1187, 1915, 1183,
	1227, 1185, 1226, 3842, 1225, 3157, 1223, 3835, 1909, 1218,
	1217, 1216, 1215, 1214, 1189, 1147, 1189, 3795, 1995, 969,
	955, 4177, 3845, 1655, 3833, 89, 1482, 802, 83, 3828,
	3829, 2094, 3611, 3837, 927, 4286, 1187, 1466, 1187, 4199,
	810, 4271, 3854, 1326, 3851, 3855, 3851, 3237, 2751, 3864,
	2219, 1606, 1326, 2221, 3152, 3843, 2571, 3802, 3866, 3867,
	4242, 3813, 3809, 3779, 3806, 3006, 3812, 3807, 3808, 170,
	4155, 3988, 3811, 3816, 2416, 1918, 3817, 1792, 3820, 3109,
	1268, 1268, 85, 3891, 1051, 3892, 1324, 1097, 3830, 3914,
	1422, 3913, 3832, 3599, 652, 652, 3836, 1268, 2859, 3911,
	3910, 1906, 252, 1908, 1017, 1329, 2006, 1057, 1326, 2022,
	3908, 2015, 2607, 1268, 2490, 1074, 1071, 1910, 1912, 3905,
	1073, 1072, 1911, 3903, 1811, 3893, 3869, 1254, 1070, 1905,
	3694, 1909, 3693, 2801, 2838, 3371, 1532, 3877, 1189, 3879,
	3931, 1530, 929, 2010, 3865, 2372, 2400, 3884, 1268, 1268,
	1268, 2995, 3904, 3897, 1785, 1032, 1053, 1184, 2397, 1326,
	1187, 3902, 1207, 3941, 3958, 1184, 3917, 3880, 3851, 3961,
	1042, 1067, 1067, 1067, 1031, 1183, 2147, 3929, 1184, 3135,
	3114, 3945, 3358, 1183, 3565, 3909, 3924, 3928, 2285, 1326,
	819, 3950, 3878, 1952, 1067, 3065, 1183, 1067, 1067, 3949,
	2403, 1198, 3943, 3936, 2513, 2506, 2502, 1067, 3199, 3942,
	1921, 2828, 1672, 4002, 1764, 1067, 1067, 1184, 2839, 1184,
	3967, 1311, 3980, 1035, 2370, 1776, 2975, 2295, 3365, 3155,
	1326, 2600, 1268, 3965, 4293, 1183, 3964, 1183, 3975, 3969,
	3927, 3484, 2136, 1163, 1162, 1205, 1326, 3930, 1161, 2290,
	3838, 4277, 3985, 4274, 1067, 3839, 3726, 3321, 1998, 2643,
	1754, 3329, 1047, 1067, 1427, 3120, 3389, 1493, 741, 3997,
	4038, 1067, 1059, 1921, 3991, 1753, 2772, 2771, 4169, 1297,
	1295, 1067, 1294, 1293, 1067, 3217, 4486, 3608, 219, 2943,
	1693, 1685, 216, 1067, 218, 217, 3919, 3570, 1185, 1185,
	1326, 3161, 4359, 4008, 4009, 3626, 3841, 3313, 23, 4041,
	22, 1268, 1268, 21, 109, 42, 20, 124, 142, 4018,
	141, 117, 3844, 4016, 140, 4011, 139, 138, 4024, 137,
	144, 136, 135, 130, 4057, 134, 133, 132, 131, 3302,
	129, 1184, 128, 127, 4092, 126, 125, 123, 4068, 1326,
	122, 1915, 1268, 121, 2376, 4083, 120, 119, 3323, 1183,
	118, 4017, 116, 4059, 115, 4047, 114, 4055, 3333, 1774,
	1189, 1189, 113, 4065, 112, 111, 110, 732, 4097, 3340,
	729, 61, 4073, 4075, 60, 4081, 4112, 108, 2508, 1067,
	1067, 4072, 1187, 1187, 107, 4116, 4131, 4132, 4076, 4070,
	3851, 3851, 4107, 19, 40, 4135, 1067, 1921, 14, 4091,
	65, 66, 18, 13, 1915, 35, 4109, 88, 99, 4110,
	3381, 3382, 4115, 2512, 98, 36, 3945, 4096, 1918, 4129,
	96, 4114, 95, 34, 17, 16, 15, 1067, 93, 92,
	1067, 33, 3840, 31, 4104, 11, 9, 1189, 4108, 8,
	37, 1872, 12, 5, 4071, 4143, 175, 4144, 4145, 1189,
	174, 4165, 177, 173, 176, 87, 4153, 172, 4147, 1187,
	171, 4049, 4050, 86, 29, 2147, 10, 3851, 167, 3847,
	4093, 1187, 3682, 80, 1909, 4188, 4164, 169, 168, 3851,
	1254, 1918, 166, 165, 164, 4064, 81, 78, 4066, 4067,
	1067, 1067, 4187, 4182, 4181, 163, 82, 162, 79, 4060,
	161, 1189, 27, 6, 1189, 64, 7, 3970, 1268, 3409,
	102, 103, 38, 76, 75, 74, 1887, 26, 1268, 1268,
	4195, 63, 25, 1187, 1200, 204, 1187, 4219, 203, 1185,
	4221, 3851, 4233, 4197, 3851, 1268, 202, 1909, 1915, 201,
	4211, 4212, 4210, 4215, 200, 199, 194, 193, 198, 1067,
	1067, 196, 195, 197, 192, 207, 4201, 1220, 206, 1067,
	211, 4231, 4232, 1184, 1184, 4227, 210, 209, 4238, 252,
	4239, 252, 252, 208, 1249, 252, 1258, 4218, 4236, 4230,
	205, 1183, 1183, 213, 191, 4096, 189, 1278, 185, 184,
	4237, 188, 1067, 1067, 4264, 1067, 736, 190, 4247, 187,
	186, 183, 4268, 212, 4226, 159, 4251, 160, 71, 158,
	4276, 4279, 4291, 157, 156, 1918, 155, 4246, 154, 4288,
	252, 153, 252, 252, 1249, 4266, 252, 252, 1433, 4267,
	4295, 4229, 152, 70, 4310, 24, 4314, 2026, 2, 252,
	1184, 1258, 4285, 4281, 1067, 1067, 1067, 1, 4313, 0,
	0, 0, 1184, 4298, 0, 4315, 0, 0, 1183, 0,
	4280, 4302, 1470, 4284, 0, 4196, 4309, 0, 0, 0,
	1183, 1909, 4343, 1067, 0, 4348, 4307, 4308, 0, 0,
	0, 1495, 0, 1501, 0, 4330, 4329, 252, 252, 0,
	1249, 4327, 4328, 4299, 4344, 0, 4300, 0, 0, 0,
	0, 0, 4362, 4371, 1184, 1185, 0, 1184, 4346, 736,
	0, 252, 252, 1185, 0, 0, 4369, 0, 4373, 0,
	0, 4383, 1183, 0, 1067, 1183, 1185, 0, 0, 4382,
	0, 4381, 4370, 0, 844, 0, 4375, 0, 0, 4387,
	0, 0, 4376, 4379, 4380, 4377, 0, 0, 0, 4384,
	4403, 0, 0, 1702, 1703, 0, 0, 0, 0, 4399,
	0, 4395, 4397, 0, 4408, 1185, 4407, 1185, 4406, 4393,
	4394, 4276, 2114, 1189, 4279, 1189, 1733, 4421, 4417, 4410,
	4414, 4422, 0, 1705, 0, 0, 4423, 0, 0, 4430,
	4295, 4425, 0, 0, 4427, 1187, 0, 1187, 0, 4424,
	4431, 4426, 0, 3851, 0, 3851, 1428, 252, 0, 4444,
	0, 0, 0, 0, 4443, 4446, 0, 2031, 1704, 0,
	0, 0, 2032, 0, 0, 252, 0, 0, 0, 254,
	4457, 4452, 2933, 4455, 0, 0, 0, 1067, 1067, 4460,
	0, 4453, 0, 0, 0, 4450, 1067, 0, 1067, 1067,
	4459, 0, 4463, 4469, 4472, 0, 4477, 0, 0, 0,
	3653, 4476, 4480, 4475, 0, 4481, 0, 2512, 0, 0,
	0, 4479, 0, 0, 0, 4478, 0, 0, 4485, 0,
	4482, 0, 4358, 2840, 4491, 0, 4493, 0, 4494, 1185,
	0, 4495, 4490, 0, 0, 4498, 4489, 4492, 1254, 0,
	4500, 0, 1067, 0, 0, 0, 0, 4502, 4499, 4506,
	0, 4508, 2508, 2508, 0, 4509, 4470, 4471, 0, 1710,
	4503, 0, 4505, 3068, 3069, 0, 3086, 3087, 3088, 0,
	0, 0, 2033, 0, 3719, 3720, 3721, 0, 0, 0,
	0, 0, 0, 0, 0, 3762, 0, 2512, 2512, 2037,
	1262, 1702, 1703, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1732, 1734, 0, 0, 0, 0, 0,
	4504, 0, 0, 0, 1733, 0, 1184, 0, 1184, 0,
	0, 1705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1183, 0, 1183, 0, 3083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1030, 0, 0, 0, 1704, 0, 2034, 2039,
	0, 1725, 0, 652, 0, 0, 1724, 0, 0, 2309,
	0, 0, 0, 0, 0, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 0, 252, 0, 3068, 3069,
	252, 3086, 3087, 3088, 0, 0, 2508, 2508, 2508, 0,
	0, 0, 0, 1258, 1249, 252, 0, 252, 0, 0,
	3761, 0, 252, 1258, 668, 0, 0, 0, 0, 252,
	1258, 0, 0, 2972, 2973, 0, 3760, 0, 0, 3074,
	0, 2512, 2512, 2512, 1960, 0, 0, 0, 0, 0,
	2035, 0, 0, 0, 0, 0, 252, 1727, 1728, 1729,
	1730, 0, 0, 252, 0, 0, 2414, 1710, 0, 0,
	0, 1185, 1185, 3083, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2040, 0, 0, 0, 2041, 0, 0, 0,
	3089, 0, 736, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 1734, 1726, 3068, 3069, 0, 3086, 3087, 3088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3450, 1719, 1720, 0,
	0, 3084, 0, 0, 0, 2028, 0, 0, 1185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1185, 2581, 0, 0, 3074, 0, 0, 0, 0, 1725,
	0, 0, 0, 0, 0, 1262, 0, 3091, 3092, 3093,
	0, 0, 0, 0, 2029, 0, 0, 0, 0, 3083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1185, 0, 0, 1185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3089, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3966, 0, 3968, 0, 0, 0, 1713,
	1714, 1706, 1707, 1708, 1709, 1711, 1712, 252, 0, 0,
	252, 0, 1179, 0, 0, 0, 3084, 2036, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3074, 0, 0, 3085, 0, 0, 0, 0, 0, 0,
	0, 1731, 0, 0, 0, 0, 0, 0, 0, 0,
	2654, 0, 0, 0, 0, 0, 0, 0, 247, 247,
	648, 1726, 252, 0, 0, 0, 252, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 0, 4013, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3089, 0, 0, 252, 0, 252, 0, 0, 0,
	652, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 736, 0, 0, 0, 844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 1249, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4074, 0, 3085, 0,
	736, 3080, 3081, 3082, 0, 0, 0, 252, 3079, 3077,
	3078, 3070, 3071, 3072, 3073, 3075, 3076, 0, 252, 252,
	0, 252, 0, 252, 0, 252, 0, 252, 0, 0,
	0, 0, 0, 1722, 1718, 0, 1715, 1713, 1714, 1706,
	1707, 1708, 1709, 1711, 1712, 2508, 2508, 0, 2250, 0,
	0, 2251, 0, 2252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 1185, 0, 1185, 0, 0, 0,
	2512, 2512, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 0, 0, 3085, 0, 0, 0, 0, 0,
	0, 1409, 0, 0, 0, 1409, 3080, 3081, 3082, 0,
	0, 0, 0, 3079, 3077, 3078, 3070, 3071, 3072, 3073,
	3075, 3076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2508, 2508, 2508,
	2508, 2508, 2508, 2508, 2508, 2508, 2508, 2508, 2508, 2508,
	2508, 2508, 2508, 2508, 2508, 2508, 0, 2508, 0, 0,
	0, 0, 0, 0, 0, 3068, 3069, 0, 3086, 3087,
	3088, 0, 2512, 2512, 2512, 2512, 2512, 2512, 2512, 2512,
	2512, 2512, 2512, 2512, 2512, 2512, 2512, 2512, 2512, 2512,
	2512, 0, 2512, 1262, 1262, 0, 3441, 3442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3080, 3081, 3082, 0, 0, 0, 652, 3079,
	3077, 3078, 3070, 3071, 3072, 3073, 3075, 3076, 0, 0,
	3083, 0, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 652, 0, 0, 0, 0, 0, 0, 252,
	72, 652, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 1258,
	0, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3504, 3505,
	3506, 3507, 3508, 3509, 3510, 3511, 3512, 3513, 3514, 3515,
	3516, 3517, 3518, 3519, 3520, 3521, 3522, 0, 3526, 0,
	0, 3074, 0, 84, 0, 252, 1258, 0, 668, 0,
	0, 0, 0, 0, 0, 0, 2619, 0, 0, 0,
	0, 0, 252, 0, 0, 252, 0, 0, 0, 252,
	0, 252, 0, 0, 0, 0, 1249, 0, 252, 252,
	838, 2633, 1258, 0, 0, 0, 0, 252, 0, 0,
	3121, 0, 0, 0, 104, 0, 0, 0, 0, 90,
	101, 0, 3089, 0, 0, 0, 72, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3147, 73, 0, 0, 0, 0, 0, 0,
	0, 2668, 0, 0, 0, 0, 72, 3160, 0, 77,
	0, 0, 252, 3084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 73, 252, 91, 0, 1850, 3178, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 0, 77,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 252, 0, 0, 838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	104, 0, 0, 0, 0, 90, 101, 1258, 0, 0,
	252, 0, 1235, 0, 1235, 1235, 838, 0, 252, 0,
	0, 1409, 0, 0, 0, 0, 0, 2823, 0, 0,
	104, 0, 0, 0, 0, 90, 101, 2668, 0, 652,
	0, 0, 0, 0, 0, 0, 0, 0, 2852, 844,
	0, 2668, 2668, 0, 0, 3085, 0, 0, 0, 0,
	0, 91, 0, 1321, 0, 0, 252, 94, 0, 1426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 1249, 252, 0, 0,
	1258, 91, 1258, 1258, 252, 0, 0, 1249, 0, 1249,
	0, 1249, 0, 0, 0, 0, 0, 0, 0, 3160,
	1016, 0, 0, 0, 0, 0, 0, 178, 97, 0,
	100, 0, 0, 0, 0, 0, 0, 252, 252, 252,
	252, 1249, 1249, 252, 0, 252, 1030, 0, 0, 0,
	0, 0, 1409, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 839, 0, 1547, 1548, 0, 143, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 3080, 3081, 3082, 0, 0, 222, 0,
	3079, 3077, 3078, 3070, 3071, 3072, 3073, 3075, 3076, 0,
	0, 1702, 1703, 94, 1735, 1736, 1737, 1745, 1746, 1747,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 1738, 1733, 0, 0, 2767, 0, 182,
	0, 1705, 0, 94, 0, 0, 0, 221, 1422, 0,
	1751, 1324, 0, 0, 0, 0, 0, 0, 214, 0,
	1654, 0, 0, 178, 97, 0, 100, 215, 0, 0,
	2759, 2757, 0, 1258, 0, 0, 1704, 2761, 2763, 2753,
	0, 0, 0, 0, 0, 0, 1724, 1409, 0, 181,
	220, 0, 0, 178, 97, 1721, 100, 0, 839, 0,
	0, 0, 0, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 3461, 0, 0, 0, 0, 839, 0,
	0, 0, 0, 143, 222, 0, 0, 0, 0, 0,
	3477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2508, 0, 0, 0, 0, 0, 0,
	145, 0, 0, 0, 222, 0, 0, 1727, 1728, 1729,
	1730, 0, 0, 0, 0, 182, 0, 1710, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 2512, 0,
	145, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	2508, 0, 0, 215, 0, 182, 0, 0, 0, 0,
	0, 0, 1742, 221, 252, 1752, 0, 0, 0, 0,
	0, 1732, 1734, 0, 214, 1543, 0, 0, 0, 252,
	0, 0, 0, 215, 652, 2512, 0, 0, 1748, 652,
	1749, 0, 652, 0, 0, 652, 652, 1719, 1720, 0,
	2755, 652, 0, 0, 0, 1541, 0, 0, 0, 252,
	0, 2769, 0, 0, 0, 1740, 0, 0, 0, 0,
	0, 1258, 0, 0, 0, 0, 0, 0, 0, 1725,
	0, 0, 2768, 2760, 2758, 2762, 2764, 2754, 2756, 2770,
	0, 0, 0, 1258, 3568, 0, 2766, 0, 0, 0,
	0, 0, 0, 1882, 252, 0, 0, 0, 252, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 1891, 0,
	1426, 1750, 0, 0, 3994, 0, 0, 0, 0, 2773,
	0, 0, 0, 0, 0, 0, 2668, 2668, 252, 1739,
	1433, 0, 0, 2668, 1409, 0, 3221, 0, 0, 0,
	0, 0, 2508, 0, 2668, 3221, 0, 2668, 3221, 1235,
	0, 3221, 0, 0, 0, 0, 1426, 0, 0, 0,
	0, 4027, 0, 0, 252, 252, 1433, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2512, 0, 3068,
	3069, 0, 3086, 3087, 3088, 0, 0, 1433, 252, 0,
	1258, 1731, 0, 1258, 0, 1249, 0, 0, 0, 0,
	0, 3449, 0, 3068, 3069, 0, 3086, 3087, 3088, 0,
	2668, 1726, 3290, 2668, 1433, 0, 0, 2668, 2668, 1433,
	0, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1273, 1743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 0,
	0, 0, 0, 0, 3083, 0, 0, 0, 0, 1016,
	0, 252, 3317, 1016, 0, 3319, 2668, 0, 0, 252,
	0, 0, 0, 252, 0, 1501, 0, 0, 3083, 0,
	0, 0, 0, 0, 0, 0, 0, 2774, 0, 0,
	1409, 0, 0, 0, 2823, 0, 2765, 1249, 0, 252,
	0, 0, 2668, 0, 652, 0, 0, 0, 1448, 0,
	1454, 2668, 1460, 4152, 0, 0, 1409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 2823, 1741, 0, 2823, 0, 0, 1716,
	1717, 1723, 1744, 1722, 1718, 3074, 1715, 1713, 1714, 1706,
	1707, 1708, 1709, 1711, 1712, 0, 0, 0, 0, 3019,
	0, 0, 0, 3020, 0, 0, 0, 0, 0, 3074,
	0, 0, 0, 0, 0, 0, 1549, 0, 1554, 0,
	0, 3419, 0, 0, 1249, 252, 0, 252, 1563, 0,
	1568, 0, 3068, 3069, 0, 3086, 3087, 3088, 0, 0,
	0, 0, 0, 0, 0, 2134, 3089, 3090, 0, 2141,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 2153, 0, 0, 0, 0, 0, 0, 0,
	3089, 0, 0, 0, 1702, 1703, 0, 2164, 0, 2164,
	1745, 1746, 1747, 0, 0, 2171, 0, 3084, 0, 0,
	0, 0, 0, 1627, 0, 1409, 1633, 1733, 0, 0,
	0, 0, 0, 0, 1705, 0, 0, 3083, 0, 0,
	0, 3084, 0, 1751, 0, 0, 0, 3482, 0, 0,
	0, 0, 3815, 0, 0, 0, 2141, 0, 0, 2194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1704,
	0, 0, 0, 0, 0, 0, 3825, 0, 0, 1724,
	2214, 0, 0, 0, 0, 0, 0, 0, 1721, 1409,
	0, 0, 2226, 0, 2228, 0, 2230, 0, 2232, 0,
	2233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 0, 0, 0, 0, 3074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 3085,
	1727, 1728, 1729, 1730, 0, 0, 252, 252, 0, 0,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3085, 0, 0, 0, 0, 652, 652,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 0, 0, 1752, 0,
	1258, 1258, 0, 0, 1732, 1734, 0, 0, 0, 0,
	0, 0, 0, 0, 1258, 1258, 1258, 0, 0, 0,
	3084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 1720, 0, 1324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1740, 1844,
	1844, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1725, 3986, 0, 0, 0, 0, 0, 0,
	0, 0, 1099, 0, 0, 0, 0, 3080, 3081, 3082,
	0, 0, 0, 736, 3079, 3077, 3078, 3070, 3071, 3072,
	3073, 3075, 3076, 0, 0, 0, 1702, 1703, 0, 0,
	0, 3080, 3081, 3082, 3986, 0, 0, 0, 3079, 3077,
	3078, 3070, 3071, 3072, 3073, 3075, 3076, 0, 252, 1733,
	2309, 0, 0, 0, 0, 0, 1705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1433, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 2578, 0, 252, 0,
	0, 1704, 3085, 0, 0, 0, 0, 252, 0, 0,
	0, 1724, 252, 0, 2309, 0, 252, 0, 0, 0,
	1721, 0, 0, 0, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1016, 0, 2668, 252, 0, 0,
	0, 0, 0, 0, 1726, 0, 2852, 2852, 0, 0,
	0, 0, 844, 844, 2668, 0, 0, 2823, 2823, 0,
	0, 844, 2668, 0, 0, 0, 0, 0, 0, 0,
	1743, 3444, 0, 0, 0, 2621, 0, 0, 1235, 0,
	0, 252, 1235, 0, 1235, 0, 0, 0, 0, 0,
	0, 0, 1727, 1728, 1729, 1730, 0, 0, 0, 0,
	2153, 0, 1710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3080, 3081, 3082, 0, 0, 1190, 0, 3079, 3077, 3078,
	3070, 3071, 3072, 3073, 3075, 3076, 1732, 1734, 0, 0,
	0, 3780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1409, 0, 1741, 0, 0,
	0, 0, 1719, 1720, 0, 1744, 1722, 1718, 0, 1715,
	1713, 1714, 1706, 1707, 1708, 1709, 1711, 1712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 0, 0,
	0, 1426, 0, 0, 1725, 0, 0, 0, 0, 0,
	0, 0, 1409, 252, 0, 0, 0, 0, 0, 1258,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1409, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2141, 0, 0, 0, 0, 0, 0,
	0, 2153, 0, 0, 2668, 2668, 2668, 0, 0, 1030,
	0, 0, 0, 3853, 0, 3853, 1258, 0, 0, 0,
	0, 0, 0, 1030, 2668, 0, 3221, 0, 0, 1258,
	1258, 252, 1433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1433, 252, 1433, 252, 0, 0, 2881,
	0, 0, 0, 0, 0, 0, 0, 0, 2668, 0,
	2668, 252, 0, 0, 0, 0, 1731, 0, 2891, 0,
	2894, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2668, 1726, 0, 0, 0,
	3921, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	0, 0, 0, 0, 0, 0, 1409, 0, 252, 0,
	2918, 1426, 2920, 1426, 0, 0, 2924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3853, 0, 0,
	1258, 0, 0, 0, 0, 0, 0, 0, 0, 1235,
	0, 0, 0, 0, 1409, 0, 0, 2952, 2284, 0,
	2288, 0, 0, 0, 0, 0, 0, 2302, 0, 0,
	0, 0, 0, 0, 2311, 2312, 2313, 2314, 2315, 2316,
	2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
	2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 0,
	2351, 0, 2353, 2354, 2355, 2356, 0, 0, 1722, 1718,
	0, 1715, 1713, 1714, 1706, 1707, 1708, 1709, 1711, 1712,
	0, 0, 0, 0, 2380, 0, 0, 0, 0, 0,
	0, 2668, 0, 3221, 0, 1773, 4020, 0, 0, 2395,
	0, 0, 0, 0, 252, 0, 0, 0, 0, 0,
	0, 4039, 0, 4039, 0, 2425, 2428, 2431, 2434, 0,
	2438, 2439, 2440, 2441, 2442, 2443, 2444, 0, 0, 0,
	0, 0, 736, 1409, 0, 0, 1409, 0, 0, 0,
	0, 1249, 0, 0, 0, 0, 0, 0, 2504, 0,
	2515, 2517, 2522, 0, 0, 1433, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4020, 0, 0, 0, 0,
	0, 0, 0, 2668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4101, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1258, 1409, 0,
	1190, 0, 0, 0, 0, 0, 0, 0, 0, 3853,
	3853, 0, 0, 0, 0, 1409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1190, 0, 0, 0, 1190, 0,
	3482, 0, 1190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4020, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1190, 0, 0, 3853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3853, 2483,
	2484, 2485, 2486, 2479, 2480, 2481, 2482, 0, 1190, 0,
	0, 0, 0, 0, 0, 0, 0, 1235, 0, 252,
	0, 1426, 1426, 0, 0, 0, 0, 0, 1190, 0,
	0, 0, 0, 1190, 0, 0, 0, 0, 3921, 0,
	0, 0, 0, 0, 0, 0, 0, 1190, 1702, 1703,
	3853, 3212, 252, 3853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3221, 0, 0, 0, 0, 0, 1409,
	0, 1733, 0, 0, 0, 0, 0, 0, 1705, 2459,
	2460, 2461, 2462, 0, 0, 0, 0, 3255, 3257, 1258,
	2153, 1258, 0, 0, 0, 0, 0, 0, 0, 0,
	1190, 2471, 2472, 2473, 2474, 2467, 2468, 2469, 2470, 2475,
	2476, 2477, 2478, 1704, 0, 0, 0, 0, 0, 0,
	4260, 0, 0, 1724, 0, 2786, 2787, 0, 2789, 0,
	0, 0, 1721, 4039, 0, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 2455, 2456, 2457, 2458, 2463, 2464,
	2465, 2466, 0, 3439, 0, 0, 0, 0, 0, 0,
	0, 0, 3330, 0, 0, 0, 3334, 0, 0, 3482,
	0, 0, 0, 0, 1727, 1728, 1729, 1730, 0, 0,
	0, 0, 0, 0, 1710, 1258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 0, 0, 0, 2906, 0,
	0, 0, 0, 0, 0, 3385, 0, 1258, 1732, 1734,
	0, 0, 0, 1702, 1703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4020, 0, 0, 1719, 1720, 1733, 0, 0, 0,
	0, 0, 0, 1705, 0, 0, 0, 0, 0, 1755,
	1756, 0, 0, 0, 0, 0, 0, 0, 3422, 0,
	1426, 0, 0, 0, 0, 2668, 1725, 0, 0, 0,
	0, 0, 3853, 1409, 3853, 0, 0, 0, 1704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1724, 0,
	0, 0, 0, 0, 3434, 1409, 0, 1721, 0, 0,
	0, 0, 0, 0, 2955, 2956, 0, 0, 0, 0,
	2962, 0, 0, 0, 0, 0, 1258, 1190, 0, 1190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2976,
	2977, 0, 0, 0, 1190, 2395, 0, 0, 0, 0,
	0, 0, 0, 0, 2984, 0, 0, 0, 3438, 2852,
	0, 1922, 0, 0, 0, 1190, 0, 0, 2668, 0,
	2998, 0, 0, 0, 0, 0, 0, 0, 0, 1727,
	1728, 1729, 1730, 2852, 0, 0, 0, 3010, 0, 1710,
	0, 0, 0, 0, 0, 0, 0, 0, 1731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 0, 0, 0, 1726, 72,
	0, 46, 45, 0, 0, 1409, 0, 1409, 0, 0,
	1190, 0, 0, 1732, 1734, 0, 73, 0, 0, 146,
	0, 1190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1409, 77, 0, 0, 0, 0, 0, 0, 1719,
	1720, 0, 0, 67, 0, 1190, 0, 0, 0, 0,
	48, 0, 148, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2522, 2522, 2522, 0,
	47, 1725, 84, 0, 0, 0, 0, 0, 0, 0,
	0, 1844, 1409, 0, 0, 0, 0, 0, 0, 3125,
	0, 1409, 0, 0, 0, 0, 50, 68, 0, 0,
	0, 0, 0, 0, 51, 0, 0, 0, 0, 57,
	0, 0, 0, 149, 0, 0, 0, 0, 0, 0,
	0, 49, 0, 104, 0, 0, 0, 0, 90, 101,
	1722, 1718, 0, 1715, 1713, 1714, 1706, 1707, 1708, 1709,
	1711, 1712, 0, 0, 0, 0, 0, 1409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 0, 0, 0,
	0, 1190, 1190, 0, 0, 0, 0, 0, 0, 0,
	1190, 0, 0, 0, 91, 0, 0, 1016, 0, 0,
	0, 0, 0, 1731, 0, 0, 0, 0, 1409, 0,
	0, 1016, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1409, 0,
	0, 3240, 0, 0, 0, 0, 0, 0, 0, 0,
	2153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3681, 0, 0, 0, 0, 0, 0, 0, 1409,
	0, 0, 0, 0, 1190, 2153, 1190, 0, 1190, 3696,
	0, 0, 0, 0, 0, 1409, 0, 0, 0, 0,
	0, 0, 0, 0, 1190, 1190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1190, 0, 1190,
	1190, 1190, 0, 1030, 0, 0, 94, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1409,
	0, 0, 0, 53, 3743, 1722, 1718, 0, 1715, 1713,
	1714, 1706, 1707, 1708, 1709, 1711, 1712, 56, 0, 0,
	0, 0, 59, 0, 0, 0, 0, 0, 0, 0,
	69, 0, 0, 0, 0, 58, 178, 97, 0, 100,
	0, 0, 0, 54, 0, 0, 0, 150, 1409, 0,
	0, 0, 0, 0, 55, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 62, 0, 0, 0, 0, 143, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 0, 0, 0, 0, 1922, 1922, 1190, 0, 0,
	0, 0, 0, 0, 0, 1063, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 251, 251, 251, 0, 2302, 221, 0, 0, 0,
	0, 3436, 3437, 0, 0, 3440, 0, 214, 0, 3443,
	0, 0, 0, 0, 1702, 1703, 215, 0, 3447, 773,
	0, 0, 0, 0, 1190, 0, 0, 3454, 0, 0,
	3125, 0, 0, 0, 0, 0, 0, 1733, 181, 1030,
	1030, 3, 0, 773, 1705, 3466, 0, 0, 0, 0,
	0, 0, 1702, 1703, 3868, 1735, 1736, 1737, 1745, 1746,
	1747, 0, 0, 0, 0, 3489, 3490, 2153, 3491, 3492,
	3493, 0, 0, 0, 1738, 1733, 0, 0, 0, 1704,
	0, 0, 1705, 0, 0, 0, 1190, 0, 0, 1724,
	0, 1751, 0, 1190, 0, 0, 0, 0, 1721, 0,
	0, 0, 1190, 0, 0, 0, 0, 0, 0, 0,
	3499, 0, 0, 0, 3501, 0, 0, 1704, 0, 1190,
	0, 0, 2153, 0, 0, 0, 0, 1724, 0, 0,
	0, 3937, 0, 0, 0, 0, 1721, 1702, 1703, 0,
	0, 0, 1030, 0, 0, 3529, 3530, 0, 0, 2961,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1733, 0, 0, 3541, 0, 0, 0, 1705, 1186, 0,
	1727, 1728, 1729, 1730, 0, 0, 0, 0, 3550, 0,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1704, 0, 0, 0, 0, 0, 1727, 1728,
	1729, 1730, 1724, 0, 0, 0, 1190, 1190, 1710, 0,
	0, 1721, 0, 0, 1732, 1734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 1720, 0, 1742, 3593, 0, 1752, 0, 1190, 0,
	0, 0, 1732, 1734, 0, 0, 0, 0, 0, 0,
	3602, 0, 2954, 0, 0, 0, 0, 4028, 0, 1748,
	0, 1749, 1725, 0, 0, 0, 0, 0, 1719, 1720,
	1922, 0, 0, 1727, 1728, 1729, 1730, 0, 0, 0,
	3625, 0, 0, 1710, 0, 0, 1740, 0, 0, 0,
	0, 0, 0, 0, 1702, 1703, 0, 0, 0, 0,
	1725, 0, 1190, 0, 0, 0, 0, 0, 0, 2153,
	0, 0, 0, 0, 0, 0, 1190, 1733, 0, 0,
	0, 0, 0, 0, 1705, 0, 0, 1732, 1734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1719, 1720, 0, 1190, 0, 0, 1704,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 1724,
	0, 0, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 0, 1731, 1725, 1190, 1844, 0, 4142,
	1426, 0, 0, 0, 0, 0, 3714, 0, 1190, 0,
	0, 0, 0, 0, 1726, 0, 0, 0, 0, 0,
	0, 0, 0, 1190, 0, 0, 0, 0, 0, 0,
	0, 0, 1731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1726, 0, 0, 0, 0, 0, 0, 0,
	1727, 1728, 1729, 1730, 0, 0, 0, 0, 0, 0,
	1710, 0, 0, 0, 0, 0, 3758, 3759, 1743, 0,
	0, 0, 3763, 3764, 0, 0, 0, 3767, 3768, 0,
	0, 0, 0, 0, 3772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3776, 0, 0, 0, 0,
	0, 0, 0, 0, 1732, 1734, 0, 1731, 0, 0,
	0, 3781, 0, 0, 0, 4220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	1719, 1720, 0, 0, 0, 0, 1722, 1718, 0, 1715,
	1713, 1714, 1706, 1707, 1708, 1709, 1711, 1712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1725, 0, 0, 1741, 0, 0, 0, 0,
	1716, 1717, 1723, 1744, 1722, 1718, 0, 1715, 1713, 1714,
	1706, 1707, 1708, 1709, 1711, 1712, 0, 0, 0, 0,
	2391, 0, 0, 0, 2392, 0, 0, 0, 0, 4270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 251, 251, 0,
	0, 251, 0, 0, 0, 4304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1722,
	1718, 0, 1715, 1713, 1714, 1706, 1707, 1708, 1709, 1711,
	1712, 0, 0, 0, 0, 0, 251, 0, 251, 251,
	0, 0, 251, 251, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 773, 0, 0, 0, 0,
	0, 0, 0, 0, 1726, 4363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 251, 0, 0, 1190, 1190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1190, 0, 0, 0, 0, 251, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1190, 0, 0, 0, 0, 0, 0, 0, 3981, 3982,
	3983, 0, 1190, 0, 0, 1190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2302, 1922, 0, 3992, 3993, 1190, 1052, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1190, 1190, 4001, 4004, 0, 0, 1722, 1718, 0, 1715,
	1713, 1714, 1706, 1707, 1708, 1709, 1711, 1712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1922, 0,
	4040, 251, 0, 0, 0, 0, 0, 0, 4046, 0,
	0, 0, 0, 0, 0, 0, 0, 1190, 4053, 0,
	0, 1016, 0, 0, 0, 0, 0, 0, 106, 0,
	4061, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1190, 0, 0, 0, 0, 0, 1702, 1703,
	0, 1735, 1736, 1737, 1745, 1746, 1747, 0, 0, 1190,
	0, 0, 0, 0, 0, 0, 0, 0, 1190, 0,
	1738, 1733, 0, 1190, 0, 0, 0, 0, 1705, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 1190, 0, 991, 0,
	0, 0, 1190, 0, 1190, 0, 0, 1190, 0, 1011,
	0, 0, 0, 1704, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1724, 0, 1190, 0, 0, 0, 0,
	0, 0, 1721, 0, 0, 0, 1190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1173, 0, 1190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4168, 0, 0, 4171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1190, 1190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1190,
	0, 0, 0, 0, 1727, 1728, 1729, 1730, 0, 0,
	1866, 0, 1186, 0, 1710, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1016, 1016, 0,
	0, 251, 1866, 251, 0, 0, 1190, 0, 773, 1190,
	0, 0, 0, 0, 0, 773, 0, 0, 0, 1742,
	0, 0, 1752, 0, 0, 0, 0, 0, 1732, 1734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 1748, 0, 1749, 0, 251,
	0, 0, 0, 0, 1719, 1720, 0, 2302, 0, 0,
	0, 0, 0, 0, 1922, 0, 4004, 0, 0, 0,
	0, 0, 1740, 0, 0, 0, 0, 0, 0, 0,
	0, 1190, 0, 0, 0, 0, 1725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1190, 0,
	1016, 0, 0, 0, 0, 0, 698, 0, 1922, 1922,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 681, 0, 1750, 0,
	0, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1739, 0, 0, 0,
	0, 4326, 4326, 4326, 0, 0, 0, 0, 0, 0,
	0, 1922, 1922, 0, 0, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4347, 684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1922, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 685, 0, 0, 0, 0, 0, 1731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1190,
	1190, 0, 704, 0, 0, 0, 0, 0, 1726, 0,
	0, 4326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 0, 251, 0, 0, 773, 0, 0, 0,
	0, 0, 1190, 0, 1743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 688, 0, 0, 689, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 0,
	0, 0, 251, 713, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 703, 0, 0,
	251, 0, 251, 0, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 4326, 4464, 0, 0, 0, 0,
	0, 1741, 0, 4468, 0, 0, 1716, 1717, 1723, 1744,
	1722, 1718, 0, 1715, 1713, 1714, 1706, 1707, 1708, 1709,
	1711, 1712, 0, 0, 0, 0, 0, 0, 0, 251,
	3786, 0, 251, 0, 0, 700, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1190, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 106, 0, 0,
	0, 0, 0, 0, 773, 251, 1922, 251, 1076, 251,
	0, 251, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1190, 0, 0, 0, 0,
	0, 0, 710, 0, 691, 0, 0, 0, 0, 0,
	1190, 251, 0, 0, 253, 253, 253, 0, 0, 0,
	0, 1190, 1190, 1190, 0, 0, 0, 0, 0, 106,
	0, 106, 711, 106, 692, 0, 0, 1190, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 712,
	0, 0, 0, 0, 0, 0, 693, 0, 1190, 0,
	708, 709, 706, 1011, 106, 106, 0, 0, 701, 1922,
	0, 694, 0, 0, 0, 0, 0, 106, 0, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	695, 702, 0, 0, 0, 0, 901, 0, 945, 0,
	696, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 697, 0, 0, 0, 0, 705,
	0, 0, 909, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 714, 0, 0, 0, 0, 923, 0,
	907, 906, 0, 0, 699, 0, 1190, 0, 0, 0,
	0, 0, 0, 0, 1190, 0, 0, 0, 1190, 0,
	1190, 0, 0, 0, 0, 0, 0, 1190, 908, 1186,
	0, 0, 0, 911, 0, 0, 0, 0, 953, 0,
	0, 0, 0, 0, 1190, 1186, 0, 920, 921, 0,
	0, 0, 0, 0, 0, 0, 937, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 1190, 0, 1190, 0,
	0, 0, 946, 913, 251, 0, 0, 0, 0, 0,
	0, 991, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1190, 0, 0, 0, 914,
	0, 1767, 0, 0, 1190, 0, 0, 0, 944, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 0,
	0, 251, 1778, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1190, 1190, 0, 0, 0, 0, 251, 0,
	0, 251, 0, 0, 0, 251, 0, 251, 0, 1190,
	0, 916, 0, 0, 251, 251, 0, 0, 0, 905,
	1190, 0, 0, 251, 0, 1190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 917, 918, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1190, 0, 0, 0, 0, 0, 925, 924, 0, 0,
	1190, 1190, 1190, 0, 919, 0, 0, 0, 934, 0,
	0, 1190, 0, 0, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 950, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1190, 1864, 251, 1867, 0, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 947, 0, 0,
	0, 0, 1922, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1190, 0, 1190, 0, 0, 0, 0, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 1190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 912, 0,
	698, 952, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 251, 1922, 0, 0, 0, 0,
	681, 0, 0, 910, 0, 682, 0, 941, 942, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 943,
	0, 0, 1190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1190, 1190, 0, 0, 0, 0, 0,
	939, 0, 251, 0, 683, 0, 0, 951, 935, 0,
	928, 926, 0, 931, 0, 684, 0, 0, 0, 932,
	0, 251, 903, 251, 948, 0, 0, 0, 0, 0,
	251, 1190, 0, 0, 1190, 0, 685, 0, 0, 0,
	0, 0, 0, 0, 0, 904, 0, 0, 0, 0,
	0, 0, 1190, 1190, 0, 0, 704, 933, 0, 0,
	0, 0, 930, 251, 251, 251, 251, 0, 0, 251,
	0, 251, 0, 949, 0, 686, 0, 0, 0, 0,
	0, 936, 0, 0, 0, 0, 0, 0, 0, 1922,
	915, 0, 0, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 251, 0, 938, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 253, 688,
	253, 253, 689, 0, 253, 0, 1271, 940, 0, 1190,
	0, 0, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 1190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 703, 0, 0, 0, 0, 0, 0, 0, 253,
	1271, 253, 253, 0, 1271, 253, 253, 0, 1271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 1190, 0, 0, 1190, 0, 0, 0,
	1190, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	1190, 1190, 0, 0, 0, 0, 0, 0, 0, 700,
	0, 0, 0, 0, 0, 0, 0, 1190, 0, 0,
	0, 0, 0, 0, 1271, 0, 253, 253, 0, 1011,
	0, 1011, 0, 0, 1702, 1703, 0, 1735, 1736, 1737,
	1745, 1746, 1747, 0, 1271, 0, 0, 0, 0, 1271,
	253, 253, 0, 0, 0, 0, 1738, 1733, 0, 0,
	0, 0, 0, 1271, 1705, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1704,
	0, 0, 0, 0, 0, 0, 711, 0, 692, 1724,
	0, 0, 0, 0, 0, 0, 1271, 0, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 712, 0, 1186, 253, 0, 0, 0,
	693, 0, 0, 0, 708, 709, 706, 0, 0, 0,
	0, 0, 701, 0, 253, 694, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 991, 0, 0, 991, 991, 0, 0, 0,
	1727, 1728, 1729, 1730, 0, 0, 0, 0, 0, 0,
	1710, 0, 0, 0, 695, 702, 0, 0, 0, 0,
	0, 0, 0, 0, 696, 257, 0, 0, 0, 0,
	251, 0, 0, 0, 251, 251, 0, 0, 697, 0,
	0, 0, 0, 705, 0, 1742, 0, 0, 1752, 0,
	2369, 0, 0, 0, 1732, 1734, 0, 714, 0, 0,
	0, 0, 0, 0, 251, 1190, 1011, 1190, 699, 0,
	0, 1748, 0, 1749, 0, 1772, 0, 0, 0, 1772,
	1719, 1720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1740, 765,
	251, 251, 0, 251, 0, 0, 0, 0, 0, 0,
	1866, 0, 1725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 765, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1173, 0, 0, 1750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 773, 0, 253,
	106, 0, 0, 0, 0, 251, 0, 0, 0, 251,
	1271, 0, 0, 0, 253, 253, 253, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 1271, 0, 0, 1731, 1186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1726, 253, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 1271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1741, 0, 0,
	106, 0, 1716, 1717, 1723, 1744, 1722, 1718, 0, 1715,
	1713, 1714, 1706, 1707, 1708, 1709, 1711, 1712, 0, 0,
	0, 0, 0, 0, 0, 0, 3452, 0, 0, 0,
	0, 0, 0, 0, 106, 0, 0, 106, 0, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 1271, 1271, 253,
	0, 106, 0, 0, 106, 0, 1271, 0, 0, 0,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 1186, 1186, 0, 0, 0, 106, 0, 0,
	0, 0, 0, 253, 0, 253, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	1271, 0, 1271, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1271, 1271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1271, 253, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 1271, 0, 1271, 1271, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 253, 0,
	253, 0, 253, 0, 253, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	0, 0, 0, 0, 253, 0, 791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 793, 0, 0, 0,
	0, 794, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1271, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 1269, 251, 0, 0, 0, 0, 0,
	795, 0, 812, 251, 0, 0, 0, 0, 251, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 796, 0, 0,
	0, 0, 797, 1186, 0, 0, 0, 1327, 0, 0,
	0, 1327, 0, 0, 0, 1269, 0, 0, 0, 1068,
	0, 0, 820, 0, 0, 0, 0, 0, 798, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1271, 818, 0, 0, 0, 0, 1269, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1173, 0, 792, 0, 0, 0, 0, 0,
	0, 1269, 0, 0, 0, 0, 0, 1173, 0, 0,
	0, 0, 0, 0, 0, 799, 0, 0, 800, 0,
	0, 1269, 0, 0, 0, 0, 1269, 0, 0, 822,
	0, 0, 0, 713, 0, 0, 0, 0, 0, 1271,
	1269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 821, 0, 0, 1186,
	0, 0, 0, 0, 0, 816, 0, 1186, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 253, 106, 106, 0, 253, 106,
	253, 0, 0, 0, 0, 0, 0, 253, 253, 0,
	0, 0, 1271, 1271, 0, 0, 253, 0, 0, 1866,
	0, 1866, 0, 801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 803, 0, 0, 251, 106, 106,
	0, 0, 106, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 251, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 804, 0, 0, 251, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 712,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	790, 0, 813, 0, 251, 0, 0, 253, 1271, 0,
	0, 805, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1271, 0, 0, 0, 0, 1173, 0, 0,
	1011, 0, 253, 1866, 0, 811, 0, 0, 0, 0,
	0, 0, 0, 0, 106, 106, 0, 0, 0, 0,
	806, 0, 0, 807, 825, 0, 824, 0, 0, 253,
	808, 0, 1271, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 809, 0, 0, 0, 0, 817,
	0, 0, 0, 0, 0, 826, 0, 823, 0, 0,
	0, 0, 1271, 714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 1327, 0, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 765, 0,
	0, 0, 0, 0, 253, 765, 253, 0, 1269, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 253, 253, 253,
	0, 0, 253, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 1269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1269, 253, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1173, 1173, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1269, 1269, 0, 0, 0, 0,
	0, 0, 0, 1327, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 251, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1328, 0, 0, 0, 1328, 0, 0, 0, 1270,
	0, 0, 0, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1269, 0, 1269,
	0, 1269, 0, 0, 0, 0, 0, 0, 0, 0,
	1270, 0, 0, 0, 0, 0, 1271, 1269, 1269, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 1269, 0,
	0, 1271, 0, 0, 0, 1270, 0, 0, 0, 0,
	1269, 0, 1269, 1269, 1269, 0, 0, 0, 0, 0,
	0, 0, 1271, 0, 0, 1270, 0, 0, 251, 0,
	1270, 0, 0, 0, 765, 0, 1271, 1271, 0, 106,
	0, 0, 0, 253, 1270, 0, 0, 253, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1173, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1270, 251, 0,
	0, 0, 0, 1271, 0, 0, 106, 0, 0, 0,
	0, 0, 0, 253, 253, 0, 253, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	1327, 0, 0, 0, 0, 0, 0, 253, 1271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 0, 0, 0, 0, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1271, 0, 0, 0, 0, 253, 1271, 0,
	1271, 0, 0, 1271, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 1327, 253, 0,
	0, 1271, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1271, 0, 0, 106, 0, 0, 0, 0,
	0, 1173, 0, 0, 0, 0, 0, 0, 0, 1173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1271, 1271, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 1327, 0, 0, 0,
	0, 0, 0, 0, 0, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1271, 0, 253, 1271, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1702, 1703, 0, 1735, 1736, 1737, 1745, 1746, 1747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 1738, 1733, 0, 106, 0, 0, 0, 0,
	1705, 1328, 0, 0, 0, 0, 106, 0, 0, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1270, 0, 0, 0, 0, 1271, 106, 1269,
	1269, 0, 0, 0, 0, 1704, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 1724, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 0, 0, 1727, 1728, 1729, 1730,
	0, 0, 0, 0, 0, 1327, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1742, 0, 0, 1752, 0, 0, 0, 0, 0,
	1732, 1734, 0, 0, 0, 0, 0, 0, 0, 1269,
	0, 0, 0, 0, 0, 0, 0, 1748, 1271, 1749,
	0, 0, 0, 0, 0, 0, 1719, 1720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1269,
	0, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	0, 1269, 0, 0, 0, 0, 0, 0, 1725, 0,
	0, 0, 0, 0, 0, 0, 1269, 0, 1270, 1270,
	0, 0, 0, 0, 0, 0, 0, 1328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1271, 0, 0, 253, 0, 0, 0,
	0, 1270, 0, 1270, 0, 1270, 0, 253, 0, 0,
	1731, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 1270, 1270, 0, 0, 0, 253, 0, 0, 0,
	1726, 253, 1270, 0, 0, 253, 0, 0, 0, 0,
	0, 1271, 0, 0, 1270, 106, 1270, 1270, 1270, 0,
	0, 0, 0, 0, 0, 0, 1743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 106, 1271, 1271, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 1271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1741, 0, 0, 0, 0, 1716, 1717,
	1723, 1744, 1722, 1718, 1328, 1715, 1713, 1714, 1706, 1707,
	1708, 1709, 1711, 1712, 0, 0, 0, 0, 4261, 0,
	0, 0, 106, 0, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 0, 1271, 0, 0, 0,
	0, 1328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1327, 0, 0, 0, 0, 0, 0,
	1271, 0, 0, 0, 0, 0, 0, 0, 1327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 1269, 1269, 0, 0, 0, 0, 0,
	1328, 1271, 0, 253, 0, 253, 0, 0, 0, 0,
	1271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 1328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1271, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1271, 0, 0, 253, 0,
	1269, 0, 0, 0, 0, 0, 1271, 253, 0, 0,
	0, 1271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1271, 1271, 1271, 0,
	0, 0, 1327, 0, 0, 0, 0, 1271, 0, 0,
	0, 1269, 0, 1270, 1270, 0, 1269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1271, 0, 1269,
	0, 0, 0, 0, 0, 1269, 0, 1269, 0, 0,
	1327, 0, 0, 0, 0, 1328, 0, 765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1271, 1269,
	1271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1328,
	1269, 1269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1270, 0, 0, 0, 0, 0, 0,
	0, 0, 1269, 0, 0, 0, 0, 0, 1271, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 1271,
	1271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1270, 0, 0, 0, 0, 0, 1327,
	0, 0, 1327, 0, 1702, 1703, 0, 1735, 1736, 1737,
	1745, 1746, 1747, 0, 0, 0, 0, 1271, 0, 0,
	1271, 0, 0, 1270, 0, 0, 1738, 1733, 0, 0,
	0, 0, 0, 0, 1705, 1270, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	1270, 0, 0, 0, 0, 253, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1704,
	0, 0, 0, 0, 1327, 0, 0, 0, 0, 1724,
	0, 0, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 1327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1727, 1728, 1729, 1730, 0, 0, 0, 0, 0, 0,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 1271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1271, 1271, 0, 0,
	0, 0, 0, 0, 0, 1742, 0, 0, 1752, 0,
	0, 0, 0, 1271, 1732, 1734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1748, 0, 1749, 0, 0, 0, 0, 0, 0,
	1719, 1720, 0, 0, 0, 1327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1740, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 1725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1328, 0, 0, 0, 0,
	1269, 0, 0, 0, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1726, 0, 0, 1328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 0, 0, 0, 0, 1269, 0,
	1743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1269, 1269, 1269, 1270, 1270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1270, 0, 0, 1741, 0, 0,
	0, 0, 1716, 1717, 1723, 1744, 1722, 1718, 0, 1715,
	1713, 1714, 1706, 1707, 1708, 1709, 1711, 1712, 0, 0,
	0, 0, 0, 0, 0, 0, 3022, 0, 0, 1270,
	0, 0, 0, 0, 1702, 1703, 0, 1735, 1736, 1737,
	1745, 1746, 1747, 0, 0, 0, 1328, 0, 0, 0,
	0, 0, 0, 0, 0, 1270, 1738, 1733, 0, 0,
	1270, 0, 0, 0, 1705, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1270, 0, 0, 0, 0, 0, 1270,
	0, 1270, 0, 0, 1328, 0, 0, 0, 0, 1704,
	0, 1327, 0, 1327, 0, 0, 0, 0, 0, 1724,
	0, 0, 1270, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 1270, 0, 0, 0, 1327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1270, 1270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1327, 0,
	0, 0, 0, 0, 0, 0, 1270, 1327, 0, 0,
	1727, 1728, 1729, 1730, 0, 0, 0, 0, 0, 0,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1269, 1269, 0, 0, 0,
	0, 0, 0, 1328, 0, 0, 1328, 0, 0, 0,
	0, 0, 1269, 0, 0, 1742, 0, 0, 1752, 0,
	0, 0, 0, 1327, 1732, 1734, 0, 0, 1269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1748, 0, 1749, 0, 0, 0, 0, 0, 0,
	1719, 1720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1269, 1269, 1269, 0, 0, 1740, 0,
	0, 0, 0, 0, 1327, 0, 0, 0, 1328, 0,
	0, 0, 1725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 1327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 1327, 0, 1269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1327, 0, 0, 0, 0, 0, 0, 1702, 1703,
	0, 1735, 1736, 1737, 1745, 1746, 1747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1738, 1733, 0, 0, 0, 0, 0, 0, 1705, 0,
	0, 0, 0, 0, 1731, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 1327, 0, 0, 0, 0,
	0, 0, 0, 0, 1726, 0, 1269, 1269, 0, 0,
	0, 0, 0, 1704, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1724, 0, 0, 0, 0, 0, 1328,
	1743, 0, 1721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1327, 0, 0, 1269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1727, 1728, 1729, 1730, 0, 0,
	0, 0, 0, 0, 1710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1741, 0, 0,
	0, 0, 1716, 1717, 1723, 1744, 1722, 1718, 0, 1715,
	1713, 1714, 1706, 1707, 1708, 1709, 1711, 1712, 0, 1742,
	0, 0, 1752, 0, 0, 0, 3021, 0, 1732, 1734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1270, 1748, 0, 1749, 0, 0,
	0, 0, 0, 0, 1719, 1720, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1740, 1702, 1703, 0, 1735, 1736, 1737, 1745,
	1746, 1747, 0, 1269, 0, 0, 1725, 0, 0, 0,
	0, 0, 1270, 1269, 1269, 1738, 1733, 0, 0, 0,
	0, 0, 0, 1705, 0, 0, 0, 0, 0, 0,
	1269, 0, 1751, 0, 0, 0, 0, 0, 1270, 1270,
	1270, 0, 0, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 0, 0, 1270, 0, 0, 0, 1704, 0,
	0, 0, 0, 0, 0, 0, 1739, 0, 1724, 0,
	0, 0, 0, 1328, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1726, 1727,
	1728, 1729, 1730, 0, 0, 0, 0, 0, 0, 1710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1742, 0, 0, 1752, 0, 0,
	0, 0, 0, 1732, 1734, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1328, 0, 1328, 0, 0,
	1748, 0, 1749, 0, 0, 0, 0, 0, 0, 1719,
	1720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1328, 0, 0, 0, 0, 0, 1740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1741, 0, 0, 0, 0, 1716, 1717, 1723, 1744,
	1722, 1718, 0, 1715, 1713, 1714, 1706, 1707, 1708, 1709,
	1711, 1712, 1328, 0, 0, 0, 0, 0, 0, 0,
	3018, 1328, 0, 1750, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1739, 0, 0, 0, 0, 0, 0, 0, 1270,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1328, 0, 0,
	0, 0, 1270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1270, 1270, 1270,
	0, 0, 0, 1726, 0, 0, 0, 0, 1328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1743,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1328,
	0, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1741, 0, 0, 0,
	0, 1716, 1717, 1723, 1744, 1722, 1718, 0, 1715, 1713,
	1714, 1706, 1707, 1708, 1709, 1711, 1712, 0, 0, 1328,
	0, 0, 0, 0, 0, 3017, 0, 0, 0, 0,
	1270, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 0,
	0, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1325, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1270, 1270, 0,
	0, 261, 263, 262, 264, 265, 266, 267, 1330, 268,
	269, 1331, 1332, 1333, 1270, 1334, 594, 1335, 1336, 1337,
	1338, 270, 271, 1130, 272, 273, 274, 275, 276, 277,
	595, 596, 0, 278, 597, 279, 598, 1339, 599, 280,
	281, 282, 283, 284, 285, 1340, 1341, 0, 286, 600,
	601, 602, 1342, 287, 288, 603, 1343, 1272, 1344, 289,
	290, 291, 292, 293, 294, 295, 0, 1345, 297, 298,
	299, 296, 300, 1346, 301, 0, 302, 303, 304, 305,
	306, 307, 1347, 308, 309, 310, 1131, 311, 312, 1348,
	1349, 1351, 1350, 1352, 1353, 1354, 313, 314, 315, 316,
	0, 317, 604, 605, 1355, 321, 318, 319, 1356, 322,
	320, 1357, 323, 324, 325, 1358, 1359, 326, 327, 328,
	1360, 329, 330, 1361, 331, 332, 333, 1362, 334, 335,
	606, 336, 337, 338, 340, 342, 339, 343, 344, 345,
	346, 607, 608, 347, 1363, 258, 1364, 0, 0, 0,
	0, 348, 349, 350, 609, 0, 0, 0, 351, 1365,
	352, 1366, 1367, 1132, 353, 354, 610, 611, 355, 356,
	357, 358, 359, 360, 361, 362, 1368, 363, 612, 1369,
	613, 364, 1370, 365, 366, 367, 368, 369, 614, 615,
	616, 445, 1134, 370, 371, 1371, 372, 373, 374, 375,
	0, 0, 0, 259, 376, 377, 378, 380, 1372, 1133,
	379, 617, 618, 1373, 619, 1374, 381, 382, 1135, 620,
	1136, 383, 384, 385, 1137, 386, 0, 0, 0, 387,
	388, 389, 390, 391, 392, 1375, 393, 395, 394, 1376,
	396, 621, 1138, 397, 398, 1139, 1377, 399, 0, 0,
	0, 400, 401, 1378, 1379, 402, 403, 404, 405, 0,
	406, 407, 409, 412, 408, 410, 411, 413, 426, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 428, 0, 427, 1140, 429, 430, 431, 436, 438,
	439, 434, 435, 437, 440, 441, 433, 1141, 432, 1380,
	260, 1142, 442, 443, 1381, 622, 444, 623, 446, 447,
	1382, 0, 448, 0, 1383, 1384, 450, 451, 452, 1385,
	1386, 453, 454, 624, 1143, 455, 1144, 625, 456, 457,
	449, 458, 459, 460, 461, 462, 463, 464, 465, 1387,
	466, 467, 626, 468, 469, 470, 627, 471, 472, 473,
	628, 474, 629, 475, 476, 1388, 477, 478, 0, 479,
	480, 481, 482, 483, 484, 485, 630, 486, 488, 487,
	489, 1389, 490, 0, 491, 492, 0, 0, 0, 0,
	493, 0, 495, 496, 497, 494, 498, 499, 500, 501,
	1390, 502, 503, 504, 1145, 505, 506, 507, 508, 631,
	509, 0, 510, 511, 517, 518, 512, 513, 519, 520,
	521, 522, 523, 1391, 525, 526, 524, 527, 528, 529,
	1392, 530, 531, 514, 515, 532, 533, 1146, 534, 535,
	536, 537, 538, 539, 632, 0, 540, 1393, 541, 542,
	543, 544, 516, 545, 550, 633, 546, 547, 548, 549,
	634, 552, 1394, 553, 554, 0, 551, 1395, 555, 556,
	557, 558, 559, 560, 561, 341, 562, 1396, 563, 635,
	636, 637, 638, 1397, 572, 1398, 564, 565, 566, 639,
	567, 640, 1399, 568, 569, 570, 571, 0, 573, 574,
	1400, 1401, 575, 576, 577, 579, 580, 578, 581, 1402,
	582, 1403, 0, 583, 584, 585, 641, 642, 643, 1404,
	587, 586, 588, 644, 1405, 1406, 1407, 1408, 589, 590,
	645, 591, 592, 593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1325, 0,
	0, 0, 0, 0, 0, 0, 2556, 0, 0, 0,
	0, 0, 0, 0, 2557, 261, 263, 262, 264, 265,
	266, 267, 1330, 268, 269, 1331, 1332, 1333, 0, 1334,
	594, 1335, 1336, 1337, 1338, 270, 271, 1130, 272, 273,
	274, 275, 276, 277, 595, 596, 0, 278, 597, 279,
	598, 1339, 599, 280, 281, 282, 283, 284, 285, 1340,
	1341, 0, 286, 600, 601, 602, 1342, 287, 288, 603,
	1343, 1272, 1344, 289, 290, 291, 292, 293, 294, 295,
	0, 1345, 297, 298, 299, 296, 300, 1346, 301, 0,
	302, 303, 304, 305, 306, 307, 1347, 308, 309, 310,
	1131, 311, 312, 1348, 1349, 1351, 1350, 1352, 1353, 1354,
	313, 314, 315, 316, 0, 317, 604, 605, 1355, 321,
	318, 319, 1356, 322, 320, 1357, 323, 324, 325, 1358,
	1359, 326, 327, 328, 1360, 329, 330, 1361, 331, 332,
	333, 1362, 334, 335, 606, 336, 337, 338, 340, 342,
	339, 343, 344, 345, 346, 607, 608, 347, 1363, 258,
	1364, 0, 0, 0, 0, 348, 349, 350, 609, 0,
	0, 0, 351, 1365, 352, 1366, 1367, 1132, 353, 354,
	610, 611, 355, 356, 357, 358, 359, 360, 361, 362,
	1368, 363, 612, 1369, 613, 364, 1370, 365, 366, 367,
	368, 369, 614, 615, 616, 445, 1134, 370, 371, 1371,
	372, 373, 374, 375, 0, 0, 0, 259, 376, 377,
	378, 380, 1372, 1133, 379, 617, 618, 1373, 619, 1374,
	381, 382, 1135, 620, 1136, 383, 384, 385, 1137, 386,
	0, 0, 0, 387, 388, 389, 390, 391, 392, 1375,
	393, 395, 394, 1376, 396, 621, 1138, 397, 398, 1139,
	1377, 399, 0, 0, 0, 400, 401, 1378, 1379, 402,
	403, 404, 405, 0, 406, 407, 409, 412, 408, 410,
	411, 413, 426, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 428, 0, 427, 1140, 429,
	430, 431, 436, 438, 439, 434, 435, 437, 440, 441,
	433, 1141, 432, 1380, 260, 1142, 442, 443, 1381, 622,
	444, 623, 446, 447, 1382, 0, 448, 0, 1383, 1384,
	450, 451, 452, 1385, 1386, 453, 454, 624, 1143, 455,
	1144, 625, 456, 457, 449, 458, 459, 460, 461, 462,
	463, 464, 465, 1387, 466, 467, 626, 468, 469, 470,
	627, 471, 472, 473, 628, 474, 629, 475, 476, 1388,
	477, 478, 0, 479, 480, 481, 482, 483, 484, 485,
	630, 486, 488, 487, 489, 1389, 490, 0, 491, 492,
	0, 0, 0, 0, 493, 0, 495, 496, 497, 494,
	498, 499, 500, 501, 1390, 502, 503, 504, 1145, 505,
	506, 507, 508, 631, 509, 0, 510, 511, 517, 518,
	512, 513, 519, 520, 521, 522, 523, 1391, 525, 526,
	524, 527, 528, 529, 1392, 530, 531, 514, 515, 532,
	533, 1146, 534, 535, 536, 537, 538, 539, 632, 0,
	540, 1393, 541, 542, 543, 544, 516, 545, 550, 633,
	546, 547, 548, 549, 634, 552, 1394, 553, 554, 0,
	551, 1395, 555, 556, 557, 558, 559, 560, 561, 341,
	562, 1396, 563, 635, 636, 637, 638, 1397, 572, 1398,
	564, 565, 566, 639, 567, 640, 1399, 568, 569, 570,
	571, 0, 573, 574, 1400, 1401, 575, 576, 577, 579,
	580, 578, 581, 1402, 582, 1403, 0, 583, 584, 585,
	641, 642, 643, 1404, 587, 586, 588, 644, 1405, 1406,
	1407, 1408, 589, 590, 645, 591, 592, 593, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1325, 0, 0, 0, 0, 3460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3462, 261, 263, 262,
	264, 265, 266, 267, 1330, 268, 269, 1331, 1332, 1333,
	0, 1334, 594, 1335, 1336, 1337, 1338, 270, 271, 1130,
	272, 273, 274, 275, 276, 277, 595, 596, 0, 278,
	597, 279, 598, 1339, 599, 280, 281, 282, 283, 284,
	285, 1340, 1341, 0, 286, 600, 601, 602, 1342, 287,
	288, 603, 1343, 1272, 1344, 289, 290, 291, 292, 293,
	294, 295, 0, 1345, 297, 298, 299, 296, 300, 1346,
	301, 0, 302, 303, 304, 305, 306, 307, 1347, 308,
	309, 310, 1131, 311, 312, 1348, 1349, 1351, 1350, 1352,
	1353, 1354, 313, 314, 315, 316, 0, 317, 604, 605,
	1355, 321, 318, 319, 1356, 322, 320, 1357, 323, 324,
	325, 1358, 1359, 326, 327, 328, 1360, 329, 330, 1361,
	331, 332, 333, 1362, 334, 335, 606, 336, 337, 338,
	340, 342, 339, 343, 344, 345, 346, 607, 608, 347,
	1363, 258, 1364, 0, 0, 0, 0, 348, 349, 350,
	609, 0, 0, 0, 351, 1365, 352, 1366, 1367, 1132,
	353, 354, 610, 611, 355, 356, 357, 358, 359, 360,
	361, 362, 1368, 363, 612, 1369, 613, 364, 1370, 365,
	366, 367, 368, 369, 614, 615, 616, 445, 1134, 370,
	371, 1371, 372, 373, 374, 375, 0, 0, 0, 259,
	376, 377, 378, 380, 1372, 1133, 379, 617, 618, 1373,
	619, 1374, 381, 382, 1135, 620, 1136, 383, 384, 385,
	1137, 386, 0, 0, 0, 387, 388, 389, 390, 391,
	392, 1375, 393, 395, 394, 1376, 396, 621, 1138, 397,
	398, 1139, 1377, 399, 0, 0, 0, 400, 401, 1378,
	1379, 402, 403, 404, 405, 0, 406, 407, 409, 412,
	408, 410, 411, 413, 426, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 428, 0, 427,
	1140, 429, 430, 431, 436, 438, 439, 434, 435, 437,
	440, 441, 433, 1141, 432, 1380, 260, 1142, 442, 443,
	1381, 622, 444, 623, 446, 447, 1382, 0, 448, 0,
	1383, 1384, 450, 451, 452, 1385, 1386, 453, 454, 624,
	1143, 455, 1144, 625, 456, 457, 449, 458, 459, 460,
	461, 462, 463, 464, 465, 1387, 466, 467, 626, 468,
	469, 470, 627, 471, 472, 473, 628, 474, 629, 475,
	476, 1388, 477, 478, 0, 479, 480, 481, 482, 483,
	484, 485, 630, 486, 488, 487, 489, 1389, 490, 0,
	491, 492, 0, 0, 0, 0, 493, 0, 495, 496,
	497, 494, 498, 499, 500, 501, 1390, 502, 503, 504,
	1145, 505, 506, 507, 508, 631, 509, 0, 510, 511,
	517, 518, 512, 513, 519, 520, 521, 522, 523, 1391,
	525, 526, 524, 527, 528, 529, 1392, 530, 531, 514,
	515, 532, 533, 1146, 534, 535, 536, 537, 538, 539,
	632, 0, 540, 1393, 541, 542, 543, 544, 516, 545,
	550, 633, 546, 547, 548, 549, 634, 552, 1394, 553,
	554, 0, 551, 1395, 555, 556, 557, 558, 559, 560,
	561, 341, 562, 1396, 563, 635, 636, 637, 638, 1397,
	572, 1398, 564, 565, 566, 639, 567, 640, 1399, 568,
	569, 570, 571, 0, 573, 574, 1400, 1401, 575, 576,
	577, 579, 580, 578, 581, 1402, 582, 1403, 0, 583,
	584, 585, 641, 642, 643, 1404, 587, 586, 588, 644,
	1405, 1406, 1407, 1408, 589, 590, 645, 591, 592, 593,
	0, 0, 0, 0, 0, 0, 1325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3814, 261, 263, 262, 264, 265, 266, 267,
	1330, 268, 269, 1331, 1332, 1333, 0, 1334, 594, 1335,
	1336, 1337, 1338, 270, 271, 1130, 272, 273, 274, 275,
	276, 277, 595, 596, 0, 278, 597, 279, 598, 1339,
	599, 280, 281, 282, 283, 284, 285, 1340, 1341, 0,
	286, 600, 601, 602, 1342, 287, 288, 603, 1343, 1272,
	1344, 289, 290, 291, 292, 293, 294, 295, 0, 1345,
	297, 298, 299, 296, 300, 1346, 301, 0, 302, 303,
	304, 305, 306, 307, 1347, 308, 309, 310, 1131, 311,
	312, 1348, 1349, 1351, 1350, 1352, 1353, 1354, 313, 314,
	315, 316, 0, 317, 604, 605, 1355, 321, 318, 319,
	1356, 322, 320, 1357, 323, 324, 325, 1358, 1359, 326,
	327, 328, 1360, 329, 330, 1361, 331, 332, 333, 1362,
	334, 335, 606, 336, 337, 338, 340, 342, 339, 343,
	344, 345, 346, 607, 608, 347, 1363, 258, 1364, 0,
	0, 0, 0, 348, 349, 350, 609, 0, 0, 0,
	351, 1365, 352, 1366, 1367, 1132, 353, 354, 610, 611,
	355, 356, 357, 358, 359, 360, 361, 362, 1368, 363,
	612, 1369, 613, 364, 1370, 365, 366, 367, 368, 369,
	614, 615, 616, 445, 1134, 370, 371, 1371, 372, 373,
	374, 375, 0, 0, 0, 259, 376, 377, 378, 380,
	1372, 1133, 379, 617, 618, 1373, 619, 1374, 381, 382,
	1135, 620, 1136, 383, 384, 385, 1137, 386, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 1375, 393, 395,
	394, 1376, 396, 621, 1138, 397, 398, 1139, 1377, 399,
	0, 0, 0, 400, 401, 1378, 1379, 402, 403, 404,
	405, 0, 406, 407, 409, 412, 408, 410, 411, 413,
	426, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 428, 0, 427, 1140, 429, 430, 431,
	436, 438, 439, 434, 435, 437, 440, 441, 433, 1141,
	432, 1380, 260, 1142, 442, 443, 1381, 622, 444, 623,
	446, 447, 1382, 0, 448, 0, 1383, 1384, 450, 451,
	452, 1385, 1386, 453, 454, 624, 1143, 455, 1144, 625,
	456, 457, 449, 458, 459, 460, 461, 462, 463, 464,
	465, 1387, 466, 467, 626, 468, 469, 470, 627, 471,
	472, 473, 628, 474, 629, 475, 476, 1388, 477, 478,
	0, 479, 480, 481, 482, 483, 484, 485, 630, 486,
	488, 487, 489, 1389, 490, 0, 491, 492, 0, 0,
	0, 0, 493, 0, 495, 496, 497, 494, 498, 499,
	500, 501, 1390, 502, 503, 504, 1145, 505, 506, 507,
	508, 631, 509, 0, 510, 511, 517, 518, 512, 513,
	519, 520, 521, 522, 523, 1391, 525, 526, 524, 527,
	528, 529, 1392, 530, 531, 514, 515, 532, 533, 1146,
	534, 535, 536, 537, 538, 539, 632, 0, 540, 1393,
	541, 542, 543, 544, 516, 545, 550, 633, 546, 547,
	548, 549, 634, 552, 1394, 553, 554, 0, 551, 1395,
	555, 556, 557, 558, 559, 560, 561, 341, 562, 1396,
	563, 635, 636, 637, 638, 1397, 572, 1398, 564, 565,
	566, 639, 567, 640, 1399, 568, 569, 570, 571, 0,
	573, 574, 1400, 1401, 575, 576, 577, 579, 580, 578,
	581, 1402, 582, 1403, 0, 583, 584, 585, 641, 642,
	643, 1404, 587, 586, 588, 644, 1405, 1406, 1407, 1408,
	589, 590, 645, 591, 592, 593, 0, 1325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3987, 261, 263, 262, 264, 265, 266,
	267, 1330, 268, 269, 1331, 1332, 1333, 0, 1334, 594,
	1335, 1336, 1337, 1338, 270, 271, 1130, 272, 273, 274,
	275, 276, 277, 595, 596, 0, 278, 597, 279, 598,
	1339, 599, 280, 281, 282, 283, 284, 285, 1340, 1341,
	0, 286, 600, 601, 602, 1342, 287, 288, 603, 1343,
	1272, 1344, 289, 290, 291, 292, 293, 294, 295, 0,
	1345, 297, 298, 299, 296, 300, 1346, 301, 0, 302,
	303, 304, 305, 306, 307, 1347, 308, 309, 310, 1131,
	311, 312, 1348, 1349, 1351, 1350, 1352, 1353, 1354, 313,
	314, 315, 316, 0, 317, 604, 605, 1355, 321, 318,
	319, 1356, 322, 320, 1357, 323, 324, 325, 1358, 1359,
	326, 327, 328, 1360, 329, 330, 1361, 331, 332, 333,
	1362, 334, 335, 606, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 607, 608, 347, 1363, 258, 1364,
	0, 0, 0, 0, 348, 349, 350, 609, 0, 0,
	0, 351, 1365, 352, 1366, 1367, 1132, 353, 354, 610,
	611, 355, 356, 357, 358, 359, 360, 361, 362, 1368,
	363, 612, 1369, 613, 364, 1370, 365, 366, 367, 368,
	369, 614, 615, 616, 445, 1134, 370, 371, 1371, 372,
	373, 374, 375, 0, 0, 0, 259, 376, 377, 378,
	380, 1372, 1133, 379, 617, 618, 1373, 619, 1374, 381,
	382, 1135, 620, 1136, 383, 384, 385, 1137, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 1375, 393,
	395, 394, 1376, 396, 621, 1138, 397, 398, 1139, 1377,
	399, 0, 0, 0, 400, 401, 1378, 1379, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 1140, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	1141, 432, 1380, 260, 1142, 442, 443, 1381, 622, 444,
	623, 446, 447, 1382, 0, 448, 0, 1383, 1384, 450,
	451, 452, 1385, 1386, 453, 454, 624, 1143, 455, 1144,
	625, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 1387, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 628, 474, 629, 475, 476, 1388, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 630,
	486, 488, 487, 489, 1389, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 1390, 502, 503, 504, 1145, 505, 506,
	507, 508, 631, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 1391, 525, 526, 524,
	527, 528, 529, 1392, 530, 531, 514, 515, 532, 533,
	1146, 534, 535, 536, 537, 538, 539, 632, 0, 540,
	1393, 541, 542, 543, 544, 516, 545, 550, 633, 546,
	547, 548, 549, 634, 552, 1394, 553, 554, 0, 551,
	1395, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	1396, 563, 635, 636, 637, 638, 1397, 572, 1398, 564,
	565, 566, 639, 567, 640, 1399, 568, 569, 570, 571,
	0, 573, 574, 1400, 1401, 575, 576, 577, 579, 580,
	578, 581, 1402, 582, 1403, 0, 583, 584, 585, 641,
	642, 643, 1404, 587, 586, 588, 644, 1405, 1406, 1407,
	1408, 589, 590, 645, 591, 592, 593, 0, 1325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3876, 261, 263, 262, 264, 265,
	266, 267, 1330, 268, 269, 1331, 1332, 1333, 0, 1334,
	594, 1335, 1336, 1337, 1338, 270, 271, 1130, 272, 273,
	274, 275, 276, 277, 595, 596, 0, 278, 597, 279,
	598, 1339, 599, 280, 281, 282, 283, 284, 285, 1340,
	1341, 0, 286, 600, 601, 602, 1342, 287, 288, 603,
	1343, 1272, 1344, 289, 290, 291, 292, 293, 294, 295,
	0, 1345, 297, 298, 299, 296, 300, 1346, 301, 0,
	302, 303, 304, 305, 306, 307, 1347, 308, 309, 310,
	1131, 311, 312, 1348, 1349, 1351, 1350, 1352, 1353, 1354,
	313, 314, 315, 316, 0, 317, 604, 605, 1355, 321,
	318, 319, 1356, 322, 320, 1357, 323, 324, 325, 1358,
	1359, 326, 327, 328, 1360, 329, 330, 1361, 331, 332,
	333, 1362, 334, 335, 606, 336, 337, 338, 340, 342,
	339, 343, 344, 345, 346, 607, 608, 347, 1363, 258,
	1364, 0, 0, 0, 0, 348, 349, 350, 609, 0,
	0, 0, 351, 1365, 352, 1366, 1367, 1132, 353, 354,
	610, 611, 355, 356, 357, 358, 359, 360, 361, 362,
	1368, 363, 612, 1369, 613, 364, 1370, 365, 366, 367,
	368, 369, 614, 615, 616, 445, 1134, 370, 371, 1371,
	372, 373, 374, 375, 0, 0, 0, 259, 376, 377,
	378, 380, 1372, 1133, 379, 617, 618, 1373, 619, 1374,
	381, 382, 1135, 620, 1136, 383, 384, 385, 1137, 386,
	0, 0, 0, 387, 388, 389, 390, 391, 392, 1375,
	393, 395, 394, 1376, 396, 621, 1138, 397, 398, 1139,
	1377, 399, 0, 0, 0, 400, 401, 1378, 1379, 402,
	403, 404, 405, 0, 406, 407, 409, 412, 408, 410,
	411, 413, 426, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 428, 0, 427, 1140, 429,
	430, 431, 436, 438, 439, 434, 435, 437, 440, 441,
	433, 1141, 432, 1380, 260, 1142, 442, 443, 1381, 622,
	444, 623, 446, 447, 1382, 0, 448, 0, 1383, 1384,
	450, 451, 452, 1385, 1386, 453, 454, 624, 1143, 455,
	1144, 625, 456, 457, 449, 458, 459, 460, 461, 462,
	463, 464, 465, 1387, 466, 467, 626, 468, 469, 470,
	627, 471, 472, 473, 628, 474, 629, 475, 476, 1388,
	477, 478, 0, 479, 480, 481, 482, 483, 484, 485,
	630, 486, 488, 487, 489, 1389, 490, 0, 491, 492,
	0, 0, 0, 0, 493, 0, 495, 496, 497, 494,
	498, 499, 500, 501, 1390, 502, 503, 504, 1145, 505,
	506, 507, 508, 631, 509, 0, 510, 511, 517, 518,
	512, 513, 519, 520, 521, 522, 523, 1391, 525, 526,
	524, 527, 528, 529, 1392, 530, 531, 514, 515, 532,
	533, 1146, 534, 535, 536, 537, 538, 539, 632, 0,
	540, 1393, 541, 542, 543, 544, 516, 545, 550, 633,
	546, 547, 548, 549, 634, 552, 1394, 553, 554, 0,
	551, 1395, 555, 556, 557, 558, 559, 560, 561, 341,
	562, 1396, 563, 635, 636, 637, 638, 1397, 572, 1398,
	564, 565, 566, 639, 567, 640, 1399, 568, 569, 570,
	571, 0, 573, 574, 1400, 1401, 575, 576, 577, 579,
	580, 578, 581, 1402, 582, 1403, 0, 583, 584, 585,
	641, 642, 643, 1404, 587, 586, 588, 644, 1405, 1406,
	1407, 1408, 589, 590, 645, 591, 592, 593, 0, 1325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3744, 261, 263, 262, 264,
	265, 266, 267, 1330, 268, 269, 1331, 1332, 1333, 0,
	1334, 594, 1335, 1336, 1337, 1338, 270, 271, 1130, 272,
	273, 274, 275, 276, 277, 595, 596, 0, 278, 597,
	279, 598, 1339, 599, 280, 281, 282, 283, 284, 285,
	1340, 1341, 0, 286, 600, 601, 602, 1342, 287, 288,
	603, 1343, 1272, 1344, 289, 290, 291, 292, 293, 294,
	295, 0, 1345, 297, 298, 299, 296, 300, 1346, 301,
	0, 302, 303, 304, 305, 306, 307, 1347, 308, 309,
	310, 1131, 311, 312, 1348, 1349, 1351, 1350, 1352, 1353,
	1354, 313, 314, 315, 316, 0, 317, 604, 605, 1355,
	321, 318, 319, 1356, 322, 320, 1357, 323, 324, 325,
	1358, 1359, 326, 327, 328, 1360, 329, 330, 1361, 331,
	332, 333, 1362, 334, 335, 606, 336, 337, 338, 340,
	342, 339, 343, 344, 345, 346, 607, 608, 347, 1363,
	258, 1364, 0, 0, 0, 0, 348, 349, 350, 609,
	0, 0, 0, 351, 1365, 352, 1366, 1367, 1132, 353,
	354, 610, 611, 355, 356, 357, 358, 359, 360, 361,
	362, 1368, 363, 612, 1369, 613, 364, 1370, 365, 366,
	367, 368, 369, 614, 615, 616, 445, 1134, 370, 371,
	1371, 372, 373, 374, 375, 0, 0, 0, 259, 376,
	377, 378, 380, 1372, 1133, 379, 617, 618, 1373, 619,
	1374, 381, 382, 1135, 620, 1136, 383, 384, 385, 1137,
	386, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	1375, 393, 395, 394, 1376, 396, 621, 1138, 397, 398,
	1139, 1377, 399, 0, 0, 0, 400, 401, 1378, 1379,
	402, 403, 404, 405, 0, 406, 407, 409, 412, 408,
	410, 411, 413, 426, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 428, 0, 427, 1140,
	429, 430, 431, 436, 438, 439, 434, 435, 437, 440,
	441, 433, 1141, 432, 1380, 260, 1142, 442, 443, 1381,
	622, 444, 623, 446, 447, 1382, 0, 448, 0, 1383,
	1384, 450, 451, 452, 1385, 1386, 453, 454, 624, 1143,
	455, 1144, 625, 456, 457, 449, 458, 459, 460, 461,
	462, 463, 464, 465, 1387, 466, 467, 626, 468, 469,
	470, 627, 471, 472, 473, 628, 474, 629, 475, 476,
	1388, 477, 478, 0, 479, 480, 481, 482, 483, 484,
	485, 630, 486, 488, 487, 489, 1389, 490, 0, 491,
	492, 0, 0, 0, 0, 493, 0, 495, 496, 497,
	494, 498, 499, 500, 501, 1390, 502, 503, 504, 1145,
	505, 506, 507, 508, 631, 509, 0, 510, 511, 517,
	518, 512, 513, 519, 520, 521, 522, 523, 1391, 525,
	526, 524, 527, 528, 529, 1392, 530, 531, 514, 515,
	532, 533, 1146, 534, 535, 536, 537, 538, 539, 632,
	0, 540, 1393, 541, 542, 543, 544, 516, 545, 550,
	633, 546, 547, 548, 549, 634, 552, 1394, 553, 554,
	0, 551, 1395, 555, 556, 557, 558, 559, 560, 561,
	341, 562, 1396, 563, 635, 636, 637, 638, 1397, 572,
	1398, 564, 565, 566, 639, 567, 640, 1399, 568, 569,
	570, 571, 0, 573, 574, 1400, 1401, 575, 576, 577,
	579, 580, 578, 581, 1402, 582, 1403, 0, 583, 584,
	585, 641, 642, 643, 1404, 587, 586, 588, 644, 1405,
	1406, 1407, 1408, 589, 590, 645, 591, 592, 593, 0,
	1325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3478, 261, 263, 262,
	264, 265, 266, 267, 1330, 268, 269, 1331, 1332, 1333,
	0, 1334, 594, 1335, 1336, 1337, 1338, 270, 271, 1130,
	272, 273, 274, 275, 276, 277, 595, 596, 0, 278,
	597, 279, 598, 1339, 599, 280, 281, 282, 283, 284,
	285, 1340, 1341, 0, 286, 600, 601, 602, 1342, 287,
	288, 603, 1343, 1272, 1344, 289, 290, 291, 292, 293,
	294, 295, 0, 1345, 297, 298, 299, 296, 300, 1346,
	301, 0, 302, 303, 304, 305, 306, 307, 1347, 308,
	309, 310, 1131, 311, 312, 1348, 1349, 1351, 1350, 1352,
	1353, 1354, 313, 314, 315, 316, 0, 317, 604, 605,
	1355, 321, 318, 319, 1356, 322, 320, 1357, 323, 324,
	325, 1358, 1359, 326, 327, 328, 1360, 329, 330, 1361,
	331, 332, 333, 1362, 334, 335, 606, 336, 337, 338,
	340, 342, 339, 343, 344, 345, 346, 607, 608, 347,
	1363, 258, 1364, 0, 0, 0, 0, 348, 349, 350,
	609, 0, 0, 0, 351, 1365, 352, 1366, 1367, 1132,
	353, 354, 610, 611, 355, 356, 357, 358, 359, 360,
	361, 362, 1368, 363, 612, 1369, 613, 364, 1370, 365,
	366, 367, 368, 369, 614, 615, 616, 445, 1134, 370,
	371, 1371, 372, 373, 374, 375, 0, 0, 0, 259,
	376, 377, 378, 380, 1372, 1133, 379, 617, 618, 1373,
	619, 1374, 381, 382, 1135, 620, 1136, 383, 384, 385,
	1137, 386, 0, 0, 0, 387, 388, 389, 390, 391,
	392, 1375, 393, 395, 394, 1376, 396, 621, 1138, 397,
	398, 1139, 1377, 399, 0, 0, 0, 400, 401, 1378,
	1379, 402, 403, 404, 405, 0, 406, 407, 409, 412,
	408, 410, 411, 413, 426, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 428, 0, 427,
	1140, 429, 430, 431, 436, 438, 439, 434, 435, 437,
	440, 441, 433, 1141, 432, 1380, 260, 1142, 442, 443,
	1381, 622, 444, 623, 446, 447, 1382, 0, 448, 0,
	1383, 1384, 450, 451, 452, 1385, 1386, 453, 454, 624,
	1143, 455, 1144, 625, 456, 457, 449, 458, 459, 460,
	461, 462, 463, 464, 465, 1387, 466, 467, 626, 468,
	469, 470, 627, 471, 472, 473, 628, 474, 629, 475,
	476, 1388, 477, 478, 0, 479, 480, 481, 482, 483,
	484, 485, 630, 486, 488, 487, 489, 1389, 490, 0,
	491, 492, 0, 0, 0, 0, 493, 0, 495, 496,
	497, 494, 498, 499, 500, 501, 1390, 502, 503, 504,
	1145, 505, 506, 507, 508, 631, 509, 0, 510, 511,
	517, 518, 512, 513, 519, 520, 521, 522, 523, 1391,
	525, 526, 524, 527, 528, 529, 1392, 530, 531, 514,
	515, 532, 533, 1146, 534, 535, 536, 537, 538, 539,
	632, 0, 540, 1393, 541, 542, 543, 544, 516, 545,
	550, 633, 546, 547, 548, 549, 634, 552, 1394, 553,
	554, 0, 551, 1395, 555, 556, 557, 558, 559, 560,
	561, 341, 562, 1396, 563, 635, 636, 637, 638, 1397,
	572, 1398, 564, 565, 566, 639, 567, 640, 1399, 568,
	569, 570, 571, 0, 573, 574, 1400, 1401, 575, 576,
	577, 579, 580, 578, 581, 1402, 582, 1403, 0, 583,
	584, 585, 641, 642, 643, 1404, 587, 586, 588, 644,
	1405, 1406, 1407, 1408, 589, 590, 645, 591, 592, 593,
	0, 1325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3315, 261, 263,
	262, 264, 265, 266, 267, 1330, 268, 269, 1331, 1332,
	1333, 0, 1334, 594, 1335, 1336, 1337, 1338, 270, 271,
	1130, 272, 273, 274, 275, 276, 277, 595, 596, 0,
	278, 597, 279, 598, 1339, 599, 280, 281, 282, 283,
	284, 285, 1340, 1341, 0, 286, 600, 601, 602, 1342,
	287, 288, 603, 1343, 1272, 1344, 289, 290, 291, 292,
	293, 294, 295, 0, 1345, 297, 298, 299, 296, 300,
	1346, 301, 0, 302, 303, 304, 305, 306, 307, 1347,
	308, 309, 310, 1131, 311, 312, 1348, 1349, 1351, 1350,
	1352, 1353, 1354, 313, 314, 315, 316, 0, 317, 604,
	605, 1355, 321, 318, 319, 1356, 322, 320, 1357, 323,
	324, 325, 1358, 1359, 326, 327, 328, 1360, 329, 330,
	1361, 331, 332, 333, 1362, 334, 335, 606, 336, 337,
	338, 340, 342, 339, 343, 344, 345, 346, 607, 608,
	347, 1363, 258, 1364, 0, 0, 0, 0, 348, 349,
	350, 609, 0, 0, 0, 351, 1365, 352, 1366, 1367,
	1132, 353, 354, 610, 611, 355, 356, 357, 358, 359,
	360, 361, 362, 1368, 363, 612, 1369, 613, 364, 1370,
	365, 366, 367, 368, 369, 614, 615, 616, 445, 1134,
	370, 371, 1371, 372, 373, 374, 375, 0, 0, 0,
	259, 376, 377, 378, 380, 1372, 1133, 379, 617, 618,
	1373, 619, 1374, 381, 382, 1135, 620, 1136, 383, 384,
	385, 1137, 386, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 1375, 393, 395, 394, 1376, 396, 621, 1138,
	397, 398, 1139, 1377, 399, 0, 0, 0, 400, 401,
	1378, 1379, 402, 403, 404, 405, 0, 406, 407, 409,
	412, 408, 410, 411, 413, 426, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 428, 0,
	427, 1140, 429, 430, 431, 436, 438, 439, 434, 435,
	437, 440, 441, 433, 1141, 432, 1380, 260, 1142, 442,
	443, 1381, 622, 444, 623, 446, 447, 1382, 0, 448,
	0, 1383, 1384, 450, 451, 452, 1385, 1386, 453, 454,
	624, 1143, 455, 1144, 625, 456, 457, 449, 458, 459,
	460, 461, 462, 463, 464, 465, 1387, 466, 467, 626,
	468, 469, 470, 627, 471, 472, 473, 628, 474, 629,
	475, 476, 1388, 477, 478, 0, 479, 480, 481, 482,
	483, 484, 485, 630, 486, 488, 487, 489, 1389, 490,
	0, 491, 492, 0, 0, 0, 0, 493, 0, 495,
	496, 497, 494, 498, 499, 500, 501, 1390, 502, 503,
	504, 1145, 505, 506, 507, 508, 631, 509, 0, 510,
	511, 517, 518, 512, 513, 519, 520, 521, 522, 523,
	1391, 525, 526, 524, 527, 528, 529, 1392, 530, 531,
	514, 515, 532, 533, 1146, 534, 535, 536, 537, 538,
	539, 632, 0, 540, 1393, 541, 542, 543, 544, 516,
	545, 550, 633, 546, 547, 548, 549, 634, 552, 1394,
	553, 554, 0, 551, 1395, 555, 556, 557, 558, 559,
	560, 561, 341, 562, 1396, 563, 635, 636, 637, 638,
	1397, 572, 1398, 564, 565, 566, 639, 567, 640, 1399,
	568, 569, 570, 571, 0, 573, 574, 1400, 1401, 575,
	576, 577, 579, 580, 578, 581, 1402, 582, 1403, 0,
	583, 584, 585, 641, 642, 643, 1404, 587, 586, 588,
	644, 1405, 1406, 1407, 1408, 589, 590, 645, 591, 592,
	593, 0, 1325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2415, 261,
	263, 262, 264, 265, 266, 267, 1330, 268, 269, 1331,
	1332, 1333, 0, 1334, 594, 1335, 1336, 1337, 1338, 270,
	271, 1130, 272, 273, 274, 275, 276, 277, 595, 596,
	0, 278, 597, 279, 598, 1339, 599, 280, 281, 282,
	283, 284, 285, 1340, 1341, 0, 286, 600, 601, 602,
	1342, 287, 288, 603, 1343, 1272, 1344, 289, 290, 291,
	292, 293, 294, 295, 0, 1345, 297, 298, 299, 296,
	300, 1346, 301, 0, 302, 303, 304, 305, 306, 307,
	1347, 308, 309, 310, 1131, 311, 312, 1348, 1349, 1351,
	1350, 1352, 1353, 1354, 313, 314, 315, 316, 0, 317,
	604, 605, 1355, 321, 318, 319, 1356, 322, 320, 1357,
	323, 324, 325, 1358, 1359, 326, 327, 328, 1360, 329,
	330, 1361, 331, 332, 333, 1362, 334, 335, 606, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 607,
	608, 347, 1363, 258, 1364, 0, 0, 0, 0, 348,
	349, 350, 609, 0, 0, 0, 351, 1365, 352, 1366,
	1367, 1132, 353, 354, 610, 611, 355, 356, 357, 358,
	359, 360, 361, 362, 1368, 363, 612, 1369, 613, 364,
	1370, 365, 366, 367, 368, 369, 614, 615, 616, 445,
	1134, 370, 371, 1371, 372, 373, 374, 375, 0, 0,
	0, 259, 376, 377, 378, 380, 1372, 1133, 379, 617,
	618, 1373, 619, 1374, 381, 382, 1135, 620, 1136, 383,
	384, 385, 1137, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 1375, 393, 395, 394, 1376, 396, 621,
	1138, 397, 398, 1139, 1377, 399, 0, 0, 0, 400,
	401, 1378, 1379, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 1140, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 1141, 432, 1380, 260, 1142,
	442, 443, 1381, 622, 444, 623, 446, 447, 1382, 0,
	448, 0, 1383, 1384, 450, 451, 452, 1385, 1386, 453,
	454, 624, 1143, 455, 1144, 625, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 1387, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 628, 474,
	629, 475, 476, 1388, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 630, 486, 488, 487, 489, 1389,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 1390, 502,
	503, 504, 1145, 505, 506, 507, 508, 631, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 1391, 525, 526, 524, 527, 528, 529, 1392, 530,
	531, 514, 515, 532, 533, 1146, 534, 535, 536, 537,
	538, 539, 632, 0, 540, 1393, 541, 542, 543, 544,
	516, 545, 550, 633, 546, 547, 548, 549, 634, 552,
	1394, 553, 554, 0, 551, 1395, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 1396, 563, 635, 636, 637,
	638, 1397, 572, 1398, 564, 565, 566, 639, 567, 640,
	1399, 568, 569, 570, 571, 0, 573, 574, 1400, 1401,
	575, 576, 577, 579, 580, 578, 581, 1402, 582, 1403,
	0, 583, 584, 585, 641, 642, 643, 1404, 587, 586,
	588, 644, 1405, 1406, 1407, 1408, 589, 590, 645, 591,
	592, 593, 1420, 0, 1325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2115,
	0, 261, 263, 262, 264, 265, 266, 267, 1330, 268,
	269, 1331, 1332, 1333, 0, 1334, 594, 1335, 1336, 1337,
	1338, 270, 271, 1130, 272, 273, 274, 275, 276, 277,
	595, 596, 0, 278, 597, 279, 598, 1339, 599, 280,
	281, 282, 283, 284, 285, 1340, 1341, 0, 286, 600,
	601, 602, 1342, 287, 288, 603, 1343, 1272, 1344, 289,
	290, 291, 292, 293, 294, 295, 0, 1345, 297, 298,
	299, 296, 300, 1346, 301, 0, 302, 303, 304, 305,
	306, 307, 1347, 308, 309, 310, 1131, 311, 312, 1348,
	1349, 1351, 1350, 1352, 1353, 1354, 313, 314, 315, 316,
	0, 317, 604, 605, 1355, 321, 318, 319, 1356, 322,
	320, 1357, 323, 324, 325, 1358, 1359, 326, 327, 328,
	1360, 329, 330, 1361, 331, 332, 333, 1362, 334, 335,
	606, 336, 337, 338, 340, 342, 339, 343, 344, 345,
	346, 607, 608, 347, 1363, 258, 1364, 0, 0, 0,
	0, 348, 349, 350, 609, 0, 0, 0, 351, 1365,
	352, 1366, 1367, 1132, 353, 354, 610, 611, 355, 356,
	357, 358, 359, 360, 361, 362, 1368, 363, 612, 1369,
	613, 364, 1370, 365, 366, 367, 368, 369, 614, 615,
	616, 445, 1134, 370, 371, 1371, 372, 373, 374, 375,
	0, 0, 0, 259, 376, 377, 378, 380, 1372, 1133,
	379, 617, 618, 1373, 619, 1374, 381, 382, 1135, 620,
	1136, 383, 384, 385, 1137, 386, 0, 0, 0, 387,
	388, 389, 390, 391, 392, 1375, 393, 395, 394, 1376,
	396, 621, 1138, 397, 398, 1139, 1377, 399, 0, 0,
	0, 400, 401, 1378, 1379, 402, 403, 404, 405, 0,
	406, 407, 409, 412, 408, 410, 411, 413, 426, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 428, 0, 427, 1140, 429, 430, 431, 436, 438,
	439, 434, 435, 437, 440, 441, 433, 1141, 432, 1380,
	260, 1142, 442, 443, 1381, 622, 444, 623, 446, 447,
	1382, 0, 448, 0, 1383, 1384, 450, 451, 452, 1385,
	1386, 453, 454, 624, 1143, 455, 1144, 625, 456, 457,
	449, 458, 459, 460, 461, 462, 463, 464, 465, 1387,
	466, 467, 626, 468, 469, 470, 627, 471, 472, 473,
	628, 474, 629, 475, 476, 1388, 477, 478, 0, 479,
	480, 481, 482, 483, 484, 485, 630, 486, 488, 487,
	489, 1389, 490, 0, 491, 492, 0, 0, 0, 0,
	493, 0, 495, 496, 497, 494, 498, 499, 500, 501,
	1390, 502, 503, 504, 1145, 505, 506, 507, 508, 631,
	509, 0, 510, 511, 517, 518, 512, 513, 519, 520,
	521, 522, 523, 1391, 525, 526, 524, 527, 528, 529,
	1392, 530, 531, 514, 515, 532, 533, 1146, 534, 535,
	536, 537, 538, 539, 632, 0, 540, 1393, 541, 542,
	543, 544, 516, 545, 550, 633, 546, 547, 548, 549,
	634, 552, 1394, 553, 554, 0, 551, 1395, 555, 556,
	557, 558, 559, 560, 561, 341, 562, 1396, 563, 635,
	636, 637, 638, 1397, 572, 1398, 564, 565, 566, 639,
	567, 640, 1399, 568, 569, 570, 571, 0, 573, 574,
	1400, 1401, 575, 576, 577, 579, 580, 578, 581, 1402,
	582, 1403, 0, 583, 584, 585, 641, 642, 643, 1404,
	587, 586, 588, 644, 1405, 1406, 1407, 1408, 589, 590,
	645, 591, 592, 593, 1322, 0, 1325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 263, 262, 264, 265, 266, 267,
	1330, 268, 269, 1331, 1332, 1333, 0, 1334, 594, 1335,
	1336, 1337, 1338, 270, 271, 1130, 272, 273, 274, 275,
	276, 277, 595, 596, 0, 278, 597, 279, 598, 1339,
	599, 280, 281, 282, 283, 284, 285, 1340, 1341, 0,
	286, 600, 601, 602, 1342, 287, 288, 603, 1343, 1272,
	1344, 289, 290, 291, 292, 293, 294, 295, 0, 1345,
	297, 298, 299, 296, 300, 1346, 301, 0, 302, 303,
	304, 305, 306, 307, 1347, 308, 309, 310, 1131, 311,
	312, 1348, 1349, 1351, 1350, 1352, 1353, 1354, 313, 314,
	315, 316, 0, 317, 604, 605, 1355, 321, 318, 319,
	1356, 322, 320, 1357, 323, 324, 325, 1358, 1359, 326,
	327, 328, 1360, 329, 330, 1361, 331, 332, 333, 1362,
	334, 335, 606, 336, 337, 338, 340, 342, 339, 343,
	344, 345, 346, 607, 608, 347, 1363, 258, 1364, 0,
	0, 0, 0, 348, 349, 350, 609, 0, 0, 0,
	351, 1365, 352, 1366, 1367, 1132, 353, 354, 610, 611,
	355, 356, 357, 358, 359, 360, 361, 362, 1368, 363,
	612, 1369, 613, 364, 1370, 365, 366, 367, 368, 369,
	614, 615, 616, 445, 1134, 370, 371, 1371, 372, 373,
	374, 375, 0, 0, 0, 259, 376, 377, 378, 380,
	1372, 1133, 379, 617, 618, 1373, 619, 1374, 381, 382,
	1135, 620, 1136, 383, 384, 385, 1137, 386, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 1375, 393, 395,
	394, 1376, 396, 621, 1138, 397, 398, 1139, 1377, 399,
	0, 0, 0, 400, 401, 1378, 1379, 402, 403, 404,
	405, 0, 406, 407, 409, 412, 408, 410, 411, 413,
	426, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 428, 0, 427, 1140, 429, 430, 431,
	436, 438, 439, 434, 435, 437, 440, 441, 433, 1141,
	432, 1380, 260, 1142, 442, 443, 1381, 622, 444, 623,
	446, 447, 1382, 0, 448, 0, 1383, 1384, 450, 451,
	452, 1385, 1386, 453, 454, 624, 1143, 455, 1144, 625,
	456, 457, 449, 458, 459, 460, 461, 462, 463, 464,
	465, 1387, 466, 467, 626, 468, 469, 470, 627, 471,
	472, 473, 628, 474, 629, 475, 476, 1388, 477, 478,
	0, 479, 480, 481, 482, 483, 484, 485, 630, 486,
	488, 487, 489, 1389, 490, 0, 491, 492, 0, 0,
	0, 0, 493, 0, 495, 496, 497, 494, 498, 499,
	500, 501, 1390, 502, 503, 504, 1145, 505, 506, 507,
	508, 631, 509, 0, 510, 511, 517, 518, 512, 513,
	519, 520, 521, 522, 523, 1391, 525, 526, 524, 527,
	528, 529, 1392, 530, 531, 514, 515, 532, 533, 1146,
	534, 535, 536, 537, 538, 539, 632, 0, 540, 1393,
	541, 542, 543, 544, 516, 545, 550, 633, 546, 547,
	548, 549, 634, 552, 1394, 553, 554, 0, 551, 1395,
	555, 556, 557, 558, 559, 560, 561, 341, 562, 1396,
	563, 635, 636, 637, 638, 1397, 572, 1398, 564, 565,
	566, 639, 567, 640, 1399, 568, 569, 570, 571, 0,
	573, 574, 1400, 1401, 575, 576, 577, 579, 580, 578,
	581, 1402, 582, 1403, 0, 583, 584, 585, 641, 642,
	643, 1404, 587, 586, 588, 644, 1405, 1406, 1407, 1408,
	589, 590, 645, 591, 592, 593, 1325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 263, 262, 264, 265, 266, 267,
	1330, 268, 269, 1331, 1332, 1333, 0, 1334, 594, 1335,
	1336, 1337, 1338, 270, 271, 1130, 272, 273, 274, 275,
	276, 277, 595, 596, 0, 278, 597, 279, 598, 1339,
	599, 280, 281, 282, 283, 284, 285, 1340, 1341, 0,
	286, 600, 601, 602, 1342, 287, 288, 603, 1343, 1272,
	1344, 289, 290, 291, 292, 293, 294, 295, 0, 1345,
	297, 298, 299, 296, 300, 1346, 301, 0, 302, 303,
	304, 305, 306, 307, 1347, 308, 309, 310, 1131, 311,
	312, 1348, 1349, 1351, 1350, 1352, 1353, 1354, 313, 314,
	315, 316, 0, 317, 604, 605, 1355, 321, 318, 319,
	1356, 322, 320, 1357, 323, 324, 325, 1358, 1359, 326,
	327, 328, 1360, 329, 330, 1361, 331, 332, 333, 1362,
	334, 335, 606, 336, 337, 338, 340, 342, 339, 343,
	344, 345, 346, 607, 608, 347, 1363, 258, 1364, 0,
	0, 0, 0, 348, 349, 350, 609, 0, 0, 0,
	351, 1365, 352, 1366, 1367, 1132, 353, 354, 610, 611,
	355, 356, 357, 358, 359, 360, 361, 362, 1368, 363,
	612, 1369, 613, 364, 1370, 365, 366, 367, 368, 369,
	614, 615, 616, 445, 1134, 370, 371, 1371, 372, 373,
	374, 375, 0, 0, 0, 259, 376, 377, 378, 380,
	1372, 1133, 379, 617, 618, 1373, 619, 1374, 381, 382,
	1135, 620, 1136, 383, 384, 385, 1137, 386, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 1375, 393, 395,
	394, 1376, 396, 621, 1138, 397, 398, 1139, 1377, 399,
	0, 0, 0, 400, 401, 1378, 1379, 402, 403, 404,
	405, 0, 406, 407, 409, 412, 408, 410, 411, 413,
	426, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 428, 0, 427, 1140, 429, 430, 431,
	436, 438, 439, 434, 435, 437, 440, 441, 433, 1141,
	432, 1380, 260, 1142, 442, 443, 1381, 622, 444, 623,
	446, 447, 1382, 0, 448, 0, 1383, 1384, 450, 451,
	452, 1385, 1386, 453, 454, 624, 1143, 455, 1144, 625,
	456, 457, 449, 458, 459, 460, 461, 462, 463, 464,
	465, 1387, 466, 467, 626, 468, 469, 470, 627, 471,
	472, 473, 628, 474, 629, 475, 476, 1388, 477, 478,
	0, 479, 480, 481, 482, 483, 484, 485, 630, 486,
	488, 487, 489, 1389, 490, 0, 491, 492, 0, 0,
	0, 0, 493, 0, 495, 496, 497, 494, 498, 499,
	500, 501, 1390, 502, 503, 504, 1145, 505, 506, 507,
	508, 631, 509, 0, 510, 511, 517, 518, 512, 513,
	519, 520, 521, 522, 523, 1391, 525, 526, 524, 527,
	528, 529, 1392, 530, 531, 514, 515, 532, 533, 1146,
	534, 535, 536, 537, 538, 539, 632, 0, 540, 1393,
	541, 542, 543, 544, 516, 545, 550, 633, 546, 547,
	548, 549, 634, 552, 1394, 553, 554, 0, 551, 1395,
	555, 556, 557, 558, 559, 560, 561, 341, 562, 1396,
	563, 635, 636, 637, 638, 1397, 572, 1398, 564, 565,
	566, 639, 567, 640, 1399, 568, 569, 570, 571, 0,
	573, 574, 1400, 1401, 575, 576, 577, 579, 580, 578,
	581, 1402, 582, 1403, 0, 583, 584, 585, 641, 642,
	643, 1404, 587, 586, 588, 644, 1405, 1406, 1407, 1408,
	589, 590, 645, 591, 592, 593, 2390, 0, 1066, 1038,
	1039, 1040, 1036, 1037, 1049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 263, 262, 264, 265,
	266, 267, 2387, 268, 269, 0, 0, 0, 0, 0,
	1090, 1054, 0, 0, 0, 270, 271, 1130, 272, 273,
	274, 275, 276, 277, 595, 1103, 0, 278, 1110, 279,
	1109, 0, 1120, 280, 281, 282, 283, 284, 285, 1056,
	1089, 1023, 286, 1150, 1151, 602, 0, 287, 288, 1096,
	0, 1077, 0, 289, 290, 291, 292, 293, 294, 295,
	0, 0, 297, 298, 299, 296, 300, 0, 301, 0,
	302, 303, 304, 305, 306, 307, 0, 308, 309, 310,
	1131, 311, 312, 1080, 1078, 1079, 1086, 1082, 1081, 1085,
	313, 314, 315, 316, 1113, 317, 1107, 1106, 1027, 321,
	318, 319, 0, 322, 320, 0, 323, 324, 325, 2388,
	0, 326, 1098, 328, 0, 329, 330, 0, 331, 332,
	333, 0, 334, 335, 1033, 336, 337, 338, 340, 342,
	339, 343, 344, 345, 346, 1121, 1122, 347, 1045, 258,
	0, 0, 0, 0, 0, 348, 349, 350, 1105, 0,
	0, 0, 351, 0, 352, 0, 0, 1132, 353, 354,
	1118, 1119, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 363, 1128, 0, 1055, 364, 0, 365, 366, 367,
	368, 369, 1091, 1092, 1095, 445, 1134, 370, 371, 0,
	372, 373, 374, 375, 0, 0, 0, 259, 376, 377,
	378, 380, 0, 1133, 379, 1100, 1101, 0, 1061, 0,
	381, 382, 1135, 1093, 1136, 383, 384, 385, 1137, 386,
	0, 0, 0, 387, 388, 389, 390, 391, 392, 0,
	393, 395, 394, 0, 396, 1129, 1138, 397, 398, 1139,
	0, 399, 0, 0, 0, 400, 401, 1084, 1083, 402,
	403, 404, 405, 0, 406, 407, 409, 412, 408, 410,
	411, 413, 426, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 428, 0, 427, 1140, 429,
	430, 431, 436, 438, 439, 434, 435, 437, 440, 441,
	433, 1141, 432, 1024, 260, 1142, 442, 443, 1046, 1094,
	444, 1108, 446, 447, 0, 0, 448, 0, 0, 0,
	450, 451, 452, 0, 0, 453, 454, 624, 1143, 455,
	1144, 1123, 456, 457, 449, 458, 459, 460, 461, 462,
	463, 464, 465, 0, 466, 467, 626, 468, 469, 470,
	627, 471, 472, 473, 1124, 474, 629, 475, 476, 0,
	477, 478, 0, 479, 480, 481, 482, 483, 484, 485,
	1104, 486, 488, 487, 489, 0, 490, 0, 491, 492,
	0, 0, 0, 0, 493, 0, 495, 496, 497, 494,
	498, 499, 500, 501, 0, 502, 503, 504, 1145, 505,
	506, 507, 508, 1034, 509, 0, 510, 511, 517, 518,
	512, 513, 519, 520, 521, 522, 523, 0, 525, 526,
	524, 527, 528, 529, 1087, 530, 531, 514, 515, 532,
	533, 1146, 534, 535, 536, 537, 538, 539, 1102, 0,
	540, 0, 541, 542, 543, 544, 516, 545, 550, 1149,
	546, 547, 548, 549, 1125, 552, 0, 553, 554, 1022,
	551, 0, 555, 556, 557, 558, 559, 560, 561, 341,
	562, 0, 563, 1114, 1115, 1116, 1117, 0, 572, 0,
	564, 565, 566, 1126, 567, 1127, 1044, 568, 569, 570,
	571, 0, 573, 574, 0, 1028, 575, 576, 577, 579,
	580, 578, 581, 1088, 582, 0, 0, 583, 584, 585,
	641, 1111, 1148, 2386, 587, 586, 588, 644, 0, 0,
	0, 0, 589, 590, 645, 591, 592, 593, 1025, 0,
	0, 0, 0, 0, 0, 0, 1021, 0, 0, 0,
	0, 0, 0, 1019, 1020, 2389, 0, 0, 0, 0,
	0, 0, 1050, 2385, 0, 1012, 1048, 1066, 1038, 1039,
	1040, 1036, 1037, 1049, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 1090,
	1054, 0, 0, 0, 270, 271, 1130, 272, 273, 274,
	275, 276, 277, 595, 1103, 0, 278, 1110, 279, 1109,
	0, 1120, 280, 281, 282, 283, 284, 285, 1056, 1089,
	1023, 286, 1150, 1151, 602, 0, 287, 288, 1096, 0,
	1077, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 1131,
	311, 312, 1080, 1078, 1079, 1086, 1082, 1081, 1085, 313,
	314, 315, 316, 1113, 317, 1107, 1106, 1027, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 1098, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 1033, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 1121, 1122, 347, 1045, 258, 0,
	0, 0, 0, 0, 348, 349, 350, 1105, 0, 0,
	0, 351, 0, 352, 0, 0, 1132, 353, 354, 1118,
	1119, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 1128, 0, 1055, 364, 0, 365, 366, 367, 368,
	369, 1091, 1092, 1095, 445, 1134, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 259, 376, 377, 378,
	380, 0, 1133, 379, 1100, 1101, 0, 1061, 0, 381,
	382, 1135, 1093, 1136, 383, 384, 385, 1137, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 1129, 1138, 397, 398, 1139, 0,
	399, 0, 0, 0, 400, 401, 1084, 1083, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 1140, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	1141, 432, 1024, 260, 1142, 442, 443, 1046, 1094, 444,
	1108, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 1143, 455, 1144,
	1123, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 1124, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 1104,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 1145, 505, 506,
	507, 508, 1034, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 220, 525, 526, 524,
	527, 528, 529, 1087, 530, 531, 514, 515, 532, 533,
	1146, 534, 535, 536, 537, 538, 539, 1102, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 1149, 546,
	547, 548, 549, 1125, 552, 0, 553, 554, 1022, 551,
	222, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 1114, 1115, 1116, 1117, 0, 572, 0, 564,
	565, 566, 1126, 567, 1127, 1044, 568, 569, 570, 571,
	0, 573, 574, 0, 1028, 575, 576, 577, 579, 580,
	578, 581, 1088, 582, 0, 0, 583, 584, 585, 1539,
	1111, 1148, 0, 587, 586, 588, 644, 0, 0, 0,
	214, 589, 590, 645, 591, 592, 593, 1025, 0, 215,
	0, 0, 0, 0, 0, 1021, 0, 0, 0, 0,
	0, 0, 1019, 1020, 1066, 1038, 1039, 1040, 1036, 1037,
	1049, 1777, 1775, 0, 0, 1048, 0, 0, 0, 0,
	0, 261, 263, 262, 264, 265, 266, 267, 0, 268,
	269, 0, 0, 0, 0, 0, 1090, 1054, 0, 0,
	0, 270, 271, 1130, 272, 273, 274, 275, 276, 277,
	595, 1103, 0, 278, 1110, 279, 1109, 0, 1120, 280,
	281, 282, 283, 284, 285, 1056, 1089, 1023, 286, 1150,
	1151, 602, 0, 287, 288, 1096, 0, 1077, 0, 289,
	290, 291, 292, 293, 294, 295, 0, 0, 297, 298,
	299, 296, 300, 0, 301, 0, 302, 303, 304, 305,
	306, 307, 0, 308, 309, 310, 1131, 311, 312, 1080,
	1078, 1079, 1086, 1082, 1081, 1085, 313, 314, 315, 316,
	1113, 317, 1107, 1106, 1027, 321, 318, 319, 0, 322,
	320, 0, 323, 324, 325, 0, 0, 326, 1098, 328,
	0, 329, 330, 0, 331, 332, 333, 0, 334, 335,
	1033, 336, 337, 338, 340, 342, 339, 343, 344, 345,
	346, 1121, 1122, 347, 1045, 258, 0, 0, 0, 0,
	0, 348, 349, 350, 1105, 0, 0, 0, 351, 0,
	352, 0, 0, 1132, 353, 354, 1118, 1119, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 363, 1128, 0,
	1055, 364, 0, 365, 366, 367, 368, 369, 1091, 1092,
	1095, 445, 1134, 370, 371, 0, 372, 373, 374, 375,
	0, 0, 0, 259, 376, 377, 378, 380, 0, 1133,
	379, 1100, 1101, 0, 1061, 0, 381, 382, 1135, 1093,
	1136, 383, 384, 385, 1137, 386, 0, 0, 0, 387,
	388, 389, 390, 391, 392, 0, 393, 395, 394, 0,
	396, 1129, 1138, 397, 398, 1139, 0, 399, 0, 0,
	0, 400, 401, 1084, 1083, 402, 403, 404, 405, 0,
	406, 407, 409, 412, 408, 410, 411, 413, 426, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 428, 0, 427, 1140, 429, 430, 431, 436, 438,
	439, 434, 435, 437, 440, 441, 433, 1141, 432, 1024,
	260, 1142, 442, 443, 1046, 1094, 444, 1108, 446, 447,
	0, 0, 448, 0, 0, 0, 450, 451, 452, 0,
	0, 453, 454, 624, 1143, 455, 1144, 1123, 456, 457,
	449, 458, 459, 460, 461, 462, 463, 464, 465, 0,
	466, 467, 626, 468, 469, 470, 627, 471, 472, 473,
	1124, 474, 629, 475, 476, 0, 477, 478, 0, 479,
	480, 481, 482, 483, 484, 485, 1104, 486, 488, 487,
	489, 0, 490, 0, 491, 492, 0, 0, 0, 0,
	493, 0, 495, 496, 497, 494, 498, 499, 500, 501,
	0, 502, 503, 504, 1145, 505, 506, 507, 508, 1034,
	509, 0, 510, 511, 517, 518, 512, 513, 519, 520,
	521, 522, 523, 220, 525, 526, 524, 527, 528, 529,
	1087, 530, 531, 514, 515, 532, 533, 1146, 534, 535,
	536, 537, 538, 539, 1102, 0, 540, 0, 541, 542,
	543, 544, 516, 545, 550, 1149, 546, 547, 548, 549,
	1125, 552, 0, 553, 554, 1022, 551, 222, 555, 556,
	557, 558, 559, 560, 561, 341, 562, 0, 563, 1114,
	1115, 1116, 1117, 0, 572, 0, 564, 565, 566, 1126,
	567, 1127, 1044, 568, 569, 570, 571, 0, 573, 574,
	0, 1028, 575, 576, 577, 579, 580, 578, 581, 1088,
	582, 0, 0, 583, 584, 585, 1539, 1111, 1148, 0,
	587, 586, 588, 644, 0, 0, 0, 214, 589, 590,
	645, 591, 592, 593, 1025, 0, 215, 0, 0, 0,
	0, 0, 1021, 0, 0, 0, 0, 0, 0, 1019,
	1020, 1066, 1038, 1039, 1040, 1036, 1037, 1049, 1777, 2974,
	0, 0, 1048, 0, 0, 0, 0, 0, 261, 263,
	262, 264, 265, 266, 267, 0, 268, 269, 0, 0,
	0, 0, 0, 1090, 1054, 0, 0, 0, 270, 271,
	1130, 272, 273, 274, 275, 276, 277, 595, 1103, 0,
	278, 1110, 279, 1109, 0, 1120, 280, 281, 282, 283,
	284, 285, 1056, 1089, 1023, 286, 1150, 1151, 602, 0,
	287, 288, 1096, 0, 1077, 0, 289, 290, 291, 292,
	293, 294, 295, 0, 0, 297, 298, 299, 296, 300,
	0, 301, 0, 302, 303, 304, 305, 306, 307, 0,
	308, 309, 310, 1131, 311, 312, 1080, 1078, 1079, 1086,
	1082, 1081, 1085, 313, 314, 315, 316, 1113, 317, 1107,
	1106, 1027, 321, 318, 319, 0, 322, 320, 0, 323,
	324, 325, 0, 0, 326, 1098, 328, 0, 329, 330,
	0, 331, 332, 333, 0, 334, 335, 1033, 336, 337,
	338, 340, 342, 339, 343, 344, 345, 346, 1121, 1122,
	347, 1045, 258, 0, 0, 0, 0, 0, 348, 349,
	350, 1105, 0, 0, 0, 351, 0, 352, 0, 0,
	1132, 353, 354, 1118, 1119, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 363, 1128, 0, 1055, 364, 0,
	365, 366, 367, 368, 369, 1091, 1092, 1095, 445, 1134,
	370, 371, 0, 372, 373, 374, 375, 0, 0, 0,
	259, 376, 377, 378, 380, 0, 1133, 379, 1100, 1101,
	0, 1061, 0, 381, 382, 1135, 1093, 1136, 383, 384,
	385, 1137, 386, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 0, 393, 395, 394, 0, 396, 1129, 1138,
	397, 398, 1139, 0, 399, 0, 0, 0, 400, 401,
	1084, 1083, 402, 403, 404, 405, 0, 406, 407, 409,
	412, 408, 410, 411, 413, 426, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 428, 0,
	427, 1140, 429, 430, 431, 436, 438, 439, 434, 435,
	437, 440, 441, 433, 1141, 432, 1024, 260, 1142, 442,
	443, 1046, 1094, 444, 1108, 446, 447, 0, 0, 448,
	0, 0, 0, 450, 451, 452, 0, 0, 453, 454,
	624, 1143, 455, 1144, 1123, 456, 457, 449, 458, 459,
	460, 461, 462, 463, 464, 465, 0, 466, 467, 626,
	468, 469, 470, 627, 471, 472, 473, 1124, 474, 629,
	475, 476, 0, 477, 478, 0, 479, 480, 481, 482,
	483, 484, 485, 1104, 486, 488, 487, 489, 0, 490,
	0, 491, 492, 0, 0, 0, 0, 493, 0, 495,
	496, 497, 494, 498, 499, 500, 501, 0, 502, 503,
	504, 1145, 505, 506, 507, 508, 1034, 509, 0, 510,
	511, 517, 518, 512, 513, 519, 520, 521, 522, 523,
	220, 525, 526, 524, 527, 528, 529, 1087, 530, 531,
	514, 515, 532, 533, 1146, 534, 535, 536, 537, 538,
	539, 1102, 0, 540, 0, 541, 542, 543, 544, 516,
	545, 550, 1149, 546, 547, 548, 549, 1125, 552, 0,
	553, 554, 1022, 551, 222, 555, 556, 557, 558, 559,
	560, 561, 341, 562, 0, 563, 1114, 1115, 1116, 1117,
	0, 572, 0, 564, 565, 566, 1126, 567, 1127, 1044,
	568, 569, 570, 571, 0, 573, 574, 0, 1028, 575,
	576, 577, 579, 580, 578, 581, 1088, 582, 0, 0,
	583, 584, 585, 1539, 1111, 1148, 0, 587, 586, 588,
	644, 0, 0, 0, 214, 589, 590, 645, 591, 592,
	593, 1025, 0, 215, 0, 0, 0, 0, 0, 1021,
	0, 0, 0, 0, 0, 0, 1019, 1020, 1066, 1038,
	1039, 1040, 1036, 1037, 1049, 1777, 1775, 0, 0, 1048,
	0, 0, 0, 0, 0, 261, 263, 262, 264, 265,
	266, 267, 0, 268, 269, 0, 0, 0, 0, 0,
	1090, 1054, 0, 0, 0, 270, 271, 1130, 272, 273,
	274, 275, 276, 277, 595, 1103, 0, 278, 1110, 279,
	1109, 2518, 1120, 280, 281, 282, 283, 284, 285, 1056,
	1089, 1023, 286, 1150, 1151, 602, 0, 287, 288, 1096,
	0, 1077, 0, 289, 290, 291, 292, 293, 294, 295,
	0, 0, 297, 298, 299, 296, 300, 0, 301, 0,
	302, 303, 304, 305, 306, 307, 0, 308, 309, 310,
	1131, 311, 312, 1080, 1078, 1079, 1086, 1082, 1081, 1085,
	313, 314, 315, 316, 1113, 317, 1107, 1106, 1027, 321,
	318, 319, 0, 322, 320, 0, 323, 324, 325, 0,
	0, 326, 1098, 328, 0, 329, 330, 0, 331, 332,
	333, 0, 334, 335, 1033, 336, 337, 338, 340, 342,
	339, 343, 344, 345, 346, 1121, 1122, 347, 1045, 258,
	0, 0, 0, 0, 0, 348, 349, 350, 1105, 0,
	0, 0, 351, 0, 352, 0, 2523, 1132, 353, 354,
	1118, 1119, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 363, 1128, 0, 1055, 364, 0, 365, 366, 367,
	368, 369, 1091, 1092, 1095, 445, 1134, 370, 371, 0,
	372, 373, 374, 375, 0, 0, 0, 259, 376, 377,
	378, 380, 0, 1133, 379, 1100, 1101, 0, 1061, 0,
	381, 382, 1135, 1093, 1136, 383, 384, 385, 1137, 386,
	0, 0, 0, 387, 388, 389, 390, 391, 392, 0,
	393, 395, 394, 2519, 396, 1129, 1138, 397, 398, 1139,
	0, 399, 0, 0, 0, 400, 401, 1084, 1083, 402,
	403, 404, 405, 0, 406, 407, 409, 412, 408, 410,
	411, 413, 426, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 428, 0, 427, 1140, 429,
	430, 431, 436, 438, 439, 434, 435, 437, 440, 441,
	433, 1141, 432, 1024, 260, 1142, 442, 443, 1046, 1094,
	444, 1108, 446, 447, 0, 0, 448, 0, 0, 0,
	450, 451, 452, 0, 0, 453, 454, 624, 1143, 455,
	1144, 1123, 456, 457, 449, 458, 459, 460, 461, 462,
	463, 464, 465, 0, 466, 467, 626, 468, 469, 470,
	627, 471, 472, 473, 1124, 474, 629, 475, 476, 0,
	477, 478, 0, 479, 480, 481, 482, 483, 484, 485,
	1104, 486, 488, 487, 489, 0, 490, 0, 491, 492,
	0, 0, 0, 0, 493, 0, 495, 496, 497, 494,
	498, 499, 500, 501, 0, 502, 503, 504, 1145, 505,
	506, 507, 508, 1034, 509, 0, 510, 511, 517, 518,
	512, 513, 519, 520, 521, 522, 523, 0, 525, 526,
	524, 527, 528, 529, 1087, 530, 531, 514, 515, 532,
	533, 1146, 534, 535, 536, 537, 538, 539, 1102, 0,
	540, 0, 541, 542, 543, 544, 516, 545, 550, 1149,
	546, 547, 548, 549, 1125, 552, 0, 553, 554, 1022,
	551, 0, 555, 556, 557, 558, 559, 560, 561, 341,
	562, 0, 563, 1114, 1115, 1116, 1117, 0, 572, 2520,
	564, 565, 566, 1126, 567, 1127, 1044, 568, 569, 570,
	571, 0, 573, 574, 0, 1028, 575, 576, 577, 579,
	580, 578, 581, 1088, 582, 0, 0, 583, 584, 585,
	641, 1111, 1148, 0, 587, 586, 588, 644, 0, 0,
	0, 0, 589, 590, 645, 591, 592, 593, 1025, 0,
	0, 0, 0, 0, 0, 0, 1021, 0, 0, 0,
	0, 0, 0, 1019, 1020, 0, 0, 0, 0, 0,
	0, 0, 1050, 0, 0, 2435, 1048, 1066, 1038, 1039,
	1040, 1036, 1037, 1049, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 1090,
	1054, 0, 0, 0, 270, 271, 1130, 272, 273, 274,
	275, 276, 277, 595, 1103, 0, 278, 1110, 279, 1109,
	0, 1120, 280, 281, 282, 283, 284, 285, 1056, 1089,
	1023, 286, 1150, 1151, 602, 0, 287, 288, 1096, 0,
	1077, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 1131,
	311, 312, 1080, 1078, 1079, 1086, 1082, 1081, 1085, 313,
	314, 315, 316, 1113, 317, 1107, 1106, 1027, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 1098, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 1033, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 1121, 1122, 347, 1045, 258, 0,
	0, 0, 0, 0, 348, 349, 350, 1105, 0, 0,
	0, 351, 0, 352, 0, 0, 1132, 353, 354, 1118,
	1119, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 1128, 0, 1055, 364, 0, 365, 366, 367, 368,
	369, 1091, 1092, 1095, 445, 1134, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 259, 376, 377, 378,
	380, 0, 1133, 379, 1100, 1101, 0, 1061, 0, 381,
	382, 1135, 1093, 1136, 383, 384, 385, 1137, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 1129, 1138, 397, 398, 1139, 0,
	399, 0, 0, 0, 400, 401, 1084, 1083, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 1140, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	1141, 432, 1024, 260, 1142, 442, 443, 1046, 1094, 444,
	1108, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 1143, 455, 1144,
	1123, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 1124, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 1104,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 1145, 505, 506,
	507, 508, 1034, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 1087, 530, 531, 514, 515, 532, 533,
	1146, 534, 535, 536, 537, 538, 539, 1102, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 1149, 546,
	547, 548, 549, 1125, 552, 0, 553, 554, 1022, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 1114, 1115, 1116, 1117, 0, 572, 0, 564,
	565, 566, 1126, 567, 1127, 1044, 568, 569, 570, 571,
	0, 573, 574, 0, 1028, 575, 576, 577, 579, 580,
	578, 581, 1088, 582, 0, 0, 583, 584, 585, 641,
	1111, 1148, 0, 587, 586, 588, 644, 0, 0, 0,
	0, 589, 590, 645, 591, 592, 593, 1025, 0, 0,
	0, 0, 0, 0, 0, 1021, 0, 0, 0, 0,
	0, 0, 1019, 1020, 0, 0, 0, 0, 0, 0,
	0, 1050, 2433, 0, 2432, 1048, 1066, 1038, 1039, 1040,
	1036, 1037, 1049, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 263, 262, 264, 265, 266, 267,
	0, 268, 269, 0, 0, 0, 0, 0, 1090, 1054,
	0, 0, 0, 270, 271, 1130, 272, 273, 274, 275,
	276, 277, 595, 1103, 0, 278, 1110, 279, 1109, 0,
	1120, 280, 281, 282, 283, 284, 285, 1056, 1089, 1023,
	286, 1150, 1151, 602, 0, 287, 288, 1096, 0, 1077,
	0, 289, 290, 291, 292, 293, 294, 295, 0, 0,
	297, 298, 299, 296, 300, 0, 301, 0, 302, 303,
	304, 305, 306, 307, 0, 308, 309, 310, 1131, 311,
	312, 1080, 1078, 1079, 1086, 1082, 1081, 1085, 313, 314,
	315, 316, 1113, 317, 1107, 1106, 1027, 321, 318, 319,
	0, 322, 320, 0, 323, 324, 325, 0, 0, 326,
	1098, 328, 0, 329, 330, 0, 331, 332, 333, 0,
	334, 335, 1033, 336, 337, 338, 340, 342, 339, 343,
	344, 345, 346, 1121, 1122, 347, 1045, 258, 0, 0,
	0, 0, 0, 348, 349, 350, 1105, 0, 0, 0,
	351, 0, 352, 0, 0, 1132, 353, 354, 1118, 1119,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 363,
	1128, 0, 1055, 364, 0, 365, 366, 367, 368, 369,
	1091, 1092, 1095, 445, 1134, 370, 371, 0, 372, 373,
	374, 375, 0, 0, 0, 259, 376, 377, 378, 380,
	0, 1133, 379, 1100, 1101, 0, 1061, 0, 381, 382,
	1135, 1093, 1136, 383, 384, 385, 1137, 386, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 0, 393, 395,
	394, 0, 396, 1129, 1138, 397, 398, 1139, 0, 399,
	0, 0, 0, 400, 401, 1084, 1083, 402, 403, 404,
	405, 0, 406, 407, 409, 412, 408, 410, 411, 413,
	426, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 428, 0, 427, 1140, 429, 430, 431,
	436, 438, 439, 434, 435, 437, 440, 441, 433, 1141,
	432, 1024, 260, 1142, 442, 443, 1046, 1094, 444, 1108,
	446, 447, 0, 0, 448, 0, 0, 0, 450, 451,
	452, 0, 0, 453, 454, 624, 1143, 455, 1144, 1123,
	456, 457, 449, 458, 459, 460, 461, 462, 463, 464,
	465, 0, 466, 467, 626, 468, 469, 470, 627, 471,
	472, 473, 1124, 474, 629, 475, 476, 0, 477, 478,
	0, 479, 480, 481, 482, 483, 484, 485, 1104, 486,
	488, 487, 489, 0, 490, 0, 491, 492, 0, 0,
	0, 0, 493, 0, 495, 496, 497, 494, 498, 499,
	500, 501, 0, 502, 503, 504, 1145, 505, 506, 507,
	508, 1034, 509, 0, 510, 511, 517, 518, 512, 513,
	519, 520, 521, 522, 523, 0, 525, 526, 524, 527,
	528, 529, 1087, 530, 531, 514, 515, 532, 533, 1146,
	534, 535, 536, 537, 538, 539, 1102, 0, 540, 0,
	541, 542, 543, 544, 516, 545, 550, 1149, 546, 547,
	548, 549, 1125, 552, 0, 553, 554, 1022, 551, 0,
	555, 556, 557, 558, 559, 560, 561, 341, 562, 0,
	563, 1114, 1115, 1116, 1117, 0, 572, 0, 564, 565,
	566, 1126, 567, 1127, 1044, 568, 569, 570, 571, 0,
	573, 574, 0, 1028, 575, 576, 577, 579, 580, 578,
	581, 1088, 582, 0, 0, 583, 584, 585, 641, 1111,
	1148, 0, 587, 586, 588, 644, 0, 0, 0, 0,
	589, 590, 645, 591, 592, 593, 1025, 0, 0, 0,
	0, 0, 0, 0, 1021, 0, 0, 0, 0, 0,
	0, 1019, 1020, 0, 0, 0, 0, 0, 0, 0,
	1050, 2430, 0, 2429, 1048, 1066, 1038, 1039, 1040, 1036,
	1037, 1049, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 263, 262, 264, 265, 266, 267, 0,
	268, 269, 0, 0, 0, 0, 0, 1090, 1054, 0,
	0, 0, 270, 271, 1130, 272, 273, 274, 275, 276,
	277, 595, 1103, 0, 278, 1110, 279, 1109, 0, 1120,
	280, 281, 282, 283, 284, 285, 1056, 1089, 1023, 286,
	1150, 1151, 602, 0, 287, 288, 1096, 0, 1077, 0,
	289, 290, 291, 292, 293, 294, 295, 0, 0, 297,
	298, 299, 296, 300, 0, 301, 0, 302, 303, 304,
	305, 306, 307, 0, 308, 309, 310, 1131, 311, 312,
	1080, 1078, 1079, 1086, 1082, 1081, 1085, 313, 314, 315,
	316, 1113, 317, 1107, 1106, 1027, 321, 318, 319, 0,
	322, 320, 0, 323, 324, 325, 0, 0, 326, 1098,
	328, 0, 329, 330, 0, 331, 332, 333, 0, 334,
	335, 1033, 336, 337, 338, 340, 342, 339, 343, 344,
	345, 346, 1121, 1122, 347, 1045, 258, 0, 0, 0,
	0, 0, 348, 349, 350, 1105, 0, 0, 0, 351,
	0, 352, 0, 0, 1132, 353, 354, 1118, 1119, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 363, 1128,
	0, 1055, 364, 0, 365, 366, 367, 368, 369, 1091,
	1092, 1095, 445, 1134, 370, 371, 0, 372, 373, 374,
	375, 0, 0, 0, 259, 376, 377, 378, 380, 0,
	1133, 379, 1100, 1101, 0, 1061, 0, 381, 382, 1135,
	1093, 1136, 383, 384, 385, 1137, 386, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 0, 393, 395, 394,
	0, 396, 1129, 1138, 397, 398, 1139, 0, 399, 0,
	0, 0, 400, 401, 1084, 1083, 402, 403, 404, 405,
	0, 406, 407, 409, 412, 408, 410, 411, 413, 426,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 428, 0, 427, 1140, 429, 430, 431, 436,
	438, 439, 434, 435, 437, 440, 441, 433, 1141, 432,
	1024, 260, 1142, 442, 443, 1046, 1094, 444, 1108, 446,
	447, 0, 0, 448, 0, 0, 0, 450, 451, 452,
	0, 0, 453, 454, 624, 1143, 455, 1144, 1123, 456,
	457, 449, 458, 459, 460, 461, 462, 463, 464, 465,
	0, 466, 467, 626, 468, 469, 470, 627, 471, 472,
	473, 1124, 474, 629, 475, 476, 0, 477, 478, 0,
	479, 480, 481, 482, 483, 484, 485, 1104, 486, 488,
	487, 489, 0, 490, 0, 491, 492, 0, 0, 0,
	0, 493, 0, 495, 496, 497, 494, 498, 499, 500,
	501, 0, 502, 503, 504, 1145, 505, 506, 507, 508,
	1034, 509, 0, 510, 511, 517, 518, 512, 513, 519,
	520, 521, 522, 523, 0, 525, 526, 524, 527, 528,
	529, 1087, 530, 531, 514, 515, 532, 533, 1146, 534,
	535, 536, 537, 538, 539, 1102, 0, 540, 0, 541,
	542, 543, 544, 516, 545, 550, 1149, 546, 547, 548,
	549, 1125, 552, 0, 553, 554, 1022, 551, 0, 555,
	556, 557, 558, 559, 560, 561, 341, 562, 0, 563,
	1114, 1115, 1116, 1117, 0, 572, 0, 564, 565, 566,
	1126, 567, 1127, 1044, 568, 569, 570, 571, 0, 573,
	574, 0, 1028, 575, 576, 577, 579, 580, 578, 581,
	1088, 582, 0, 0, 583, 584, 585, 641, 1111, 1148,
	0, 587, 586, 588, 644, 0, 0, 0, 0, 589,
	590, 645, 591, 592, 593, 1025, 0, 0, 0, 0,
	0, 0, 0, 1021, 0, 0, 0, 0, 0, 0,
	1019, 1020, 0, 0, 0, 0, 0, 0, 0, 1050,
	2427, 0, 2426, 1048, 1066, 1038, 1039, 1040, 1036, 1037,
	1049, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 263, 262, 264, 265, 266, 267, 0, 268,
	269, 0, 0, 0, 0, 0, 1090, 1054, 0, 0,
	0, 270, 271, 1130, 272, 273, 274, 275, 276, 277,
	595, 1103, 0, 278, 1110, 279, 1109, 0, 1120, 280,
	281, 282, 283, 284, 285, 1056, 1089, 1023, 286, 1150,
	1151, 602, 0, 287, 288, 1096, 0, 1077, 0, 289,
	290, 291, 292, 293, 294, 295, 0, 0, 297, 298,
	299, 296, 300, 0, 301, 0, 302, 303, 304, 305,
	306, 307, 0, 308, 309, 310, 1131, 311, 312, 1080,
	1078, 1079, 1086, 1082, 1081, 1085, 313, 314, 315, 316,
	1113, 317, 1107, 1106, 1027, 321, 318, 319, 0, 322,
	320, 0, 323, 324, 325, 0, 0, 326, 1098, 328,
	0, 329, 330, 0, 331, 332, 333, 0, 334, 335,
	1033, 336, 337, 338, 340, 342, 339, 343, 344, 345,
	346, 1121, 1122, 347, 1045, 258, 0, 0, 0, 0,
	0, 348, 349, 350, 1105, 0, 0, 0, 351, 0,
	352, 0, 0, 1132, 353, 354, 1118, 1119, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 363, 1128, 0,
	1055, 364, 0, 365, 366, 367, 368, 369, 1091, 1092,
	1095, 445, 1134, 370, 371, 0, 372, 373, 374, 375,
	0, 0, 0, 259, 376, 377, 378, 380, 0, 1133,
	379, 1100, 1101, 0, 1061, 0, 381, 382, 1135, 1093,
	1136, 383, 384, 385, 1137, 386, 0, 0, 0, 387,
	388, 389, 390, 391, 392, 0, 393, 395, 394, 0,
	396, 1129, 1138, 397, 398, 1139, 0, 399, 0, 0,
	0, 400, 401, 1084, 1083, 402, 403, 404, 405, 0,
	406, 407, 409, 412, 408, 410, 411, 413, 426, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 428, 0, 427, 1140, 429, 430, 431, 436, 438,
	439, 434, 435, 437, 440, 441, 433, 1141, 432, 1024,
	260, 1142, 442, 443, 1046, 1094, 444, 1108, 446, 447,
	0, 0, 448, 0, 0, 0, 450, 451, 452, 0,
	0, 453, 454, 624, 1143, 455, 1144, 1123, 456, 457,
	449, 458, 459, 460, 461, 462, 463, 464, 465, 0,
	466, 467, 626, 468, 469, 470, 627, 471, 472, 473,
	1124, 474, 629, 475, 476, 0, 477, 478, 0, 479,
	480, 481, 482, 483, 484, 485, 1104, 486, 488, 487,
	489, 0, 490, 0, 491, 492, 0, 0, 0, 0,
	493, 0, 495, 496, 497, 494, 498, 499, 500, 501,
	0, 502, 503, 504, 1145, 505, 506, 507, 508, 1034,
	509, 0, 510, 511, 517, 518, 512, 513, 519, 520,
	521, 522, 523, 0, 525, 526, 524, 527, 528, 529,
	1087, 530, 531, 514, 515, 532, 533, 1146, 534, 535,
	536, 537, 538, 539, 1102, 0, 540, 0, 541, 542,
	543, 544, 516, 545, 550, 1149, 546, 547, 548, 549,
	1125, 552, 0, 553, 554, 1022, 551, 0, 555, 556,
	557, 558, 559, 560, 561, 341, 562, 0, 563, 1114,
	1115, 1116, 1117, 0, 572, 0, 564, 565, 566, 1126,
	567, 1127, 1044, 568, 569, 570, 571, 0, 573, 574,
	0, 1028, 575, 576, 577, 579, 580, 578, 581, 1088,
	582, 0, 0, 583, 584, 585, 641, 1111, 1148, 0,
	587, 586, 588, 644, 0, 0, 0, 0, 589, 590,
	645, 591, 592, 593, 1025, 0, 0, 0, 0, 0,
	0, 0, 1021, 0, 0, 0, 0, 0, 0, 1019,
	1020, 0, 0, 0, 0, 0, 0, 0, 1050, 2424,
	0, 1629, 1048, 1066, 1038, 1039, 1040, 1036, 1037, 1049,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 263, 262, 264, 265, 266, 267, 0, 268, 269,
	0, 0, 0, 0, 0, 1090, 1054, 0, 0, 0,
	270, 271, 1130, 272, 273, 274, 275, 276, 277, 595,
	1103, 0, 278, 1110, 279, 1109, 0, 1120, 280, 281,
	282, 283, 284, 285, 1056, 1089, 1023, 286, 1150, 1151,
	602, 0, 287, 288, 1096, 0, 1077, 0, 289, 290,
	291, 292, 293, 294, 295, 0, 0, 297, 298, 299,
	296, 300, 0, 301, 0, 302, 303, 304, 305, 306,
	307, 0, 308, 309, 310, 1131, 311, 312, 1080, 1078,
	1079, 1086, 1082, 1081, 1085, 313, 314, 315, 316, 1113,
	317, 1107, 1106, 1027, 321, 318, 319, 0, 322, 320,
	0, 323, 324, 325, 0, 0, 326, 1098, 328, 0,
	329, 330, 0, 331, 332, 333, 0, 334, 335, 1033,
	336, 337, 338, 340, 342, 339, 343, 344, 345, 346,
	1121, 1122, 347, 1045, 258, 0, 0, 0, 0, 0,
	348, 349, 350, 1105, 0, 0, 0, 351, 0, 352,
	0, 0, 1132, 353, 354, 1118, 1119, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 363, 1128, 0, 1055,
	364, 0, 365, 366, 367, 368, 369, 1091, 1092, 1095,
	445, 1134, 370, 371, 0, 372, 373, 374, 375, 0,
	0, 0, 259, 376, 377, 378, 380, 0, 1133, 379,
	1100, 1101, 0, 1061, 0, 381, 382, 1135, 1093, 1136,
	383, 384, 385, 1137, 386, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 0, 393, 395, 394, 0, 396,
	1129, 1138, 397, 398, 1139, 0, 399, 0, 0, 0,
	400, 401, 1084, 1083, 402, 403, 404, 405, 0, 406,
	407, 409, 412, 408, 410, 411, 413, 426, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	428, 0, 427, 1140, 429, 430, 431, 436, 438, 439,
	434, 435, 437, 440, 441, 433, 1141, 432, 1024, 260,
	1142, 442, 443, 1046, 1094, 444, 1108, 446, 447, 0,
	0, 448, 0, 0, 0, 450, 451, 452, 0, 0,
	453, 454, 624, 1143, 455, 1144, 1123, 456, 457, 449,
	458, 459, 460, 461, 462, 463, 464, 465, 0, 466,
	467, 626, 468, 469, 470, 627, 471, 472, 473, 1124,
	474, 629, 475, 476, 0, 477, 478, 0, 479, 480,
	481, 482, 483, 484, 485, 1104, 486, 488, 487, 489,
	0, 490, 0, 491, 492, 0, 0, 0, 0, 493,
	0, 495, 496, 497, 494, 498, 499, 500, 501, 0,
	502, 503, 504, 1145, 505, 506, 507, 508, 1034, 509,
	0, 510, 511, 517, 518, 512, 513, 519, 520, 521,
	522, 523, 0, 525, 526, 524, 527, 528, 529, 1087,
	530, 531, 514, 515, 532, 533, 1146, 534, 535, 536,
	537, 538, 539, 1102, 0, 540, 0, 541, 542, 543,
	544, 516, 545, 550, 1149, 546, 547, 548, 549, 1125,
	552, 0, 553, 554, 1022, 551, 0, 555, 556, 557,
	558, 559, 560, 561, 341, 562, 0, 563, 1114, 1115,
	1116, 1117, 0, 572, 0, 564, 565, 566, 1126, 567,
	1127, 1044, 568, 569, 570, 571, 0, 573, 574, 0,
	1028, 575, 576, 577, 579, 580, 578, 581, 1088, 582,
	0, 0, 583, 584, 585, 641, 1111, 1148, 0, 587,
	586, 588, 644, 1628, 0, 0, 0, 589, 590, 645,
	591, 592, 593, 1025, 0, 0, 0, 0, 0, 0,
	0, 1021, 0, 0, 0, 0, 0, 0, 1019, 1020,
	0, 0, 0, 0, 0, 0, 0, 1050, 0, 0,
	1015, 1048, 1066, 1038, 1039, 1040, 1036, 1037, 1049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 0,
	0, 0, 0, 0, 1090, 1054, 0, 0, 0, 270,
	271, 1130, 272, 273, 274, 275, 276, 277, 595, 1103,
	0, 278, 1110, 279, 1109, 0, 1120, 280, 281, 282,
	283, 284, 285, 1056, 1089, 1023, 286, 1150, 1151, 602,
	0, 287, 288, 1096, 0, 1077, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 1131, 311, 312, 1080, 1078, 1079,
	1086, 1082, 1081, 1085, 313, 314, 315, 316, 1113, 317,
	1107, 1106, 1027, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 1098, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 1033, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 1121,
	1122, 347, 1045, 258, 0, 0, 0, 0, 0, 348,
	349, 350, 1105, 0, 0, 0, 351, 0, 352, 0,
	0, 1132, 353, 354, 1118, 1119, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 1128, 0, 1055, 364,
	0, 365, 366, 367, 368, 369, 1091, 1092, 1095, 445,
	1134, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 259, 376, 377, 378, 380, 0, 1133, 379, 1100,
	1101, 0, 1061, 0, 381, 382, 1135, 1093, 1136, 383,
	384, 385, 1137, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 1129,
	1138, 397, 398, 1139, 0, 399, 0, 0, 0, 400,
	401, 1084, 1083, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 1140, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 1141, 432, 1024, 260, 1142,
	442, 443, 1046, 1094, 444, 1108, 446, 447, 0, 0,
	448, 0, 1029, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 1143, 455, 1144, 1123, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 1124, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 1104, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 1145, 505, 506, 507, 508, 1034, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 1087, 530,
	531, 514, 515, 532, 533, 1146, 534, 535, 536, 537,
	538, 539, 1102, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 1149, 546, 547, 548, 549, 1125, 552,
	0, 553, 554, 1022, 551, 0, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 1114, 1115, 1116,
	1117, 0, 572, 0, 564, 565, 566, 1126, 567, 1127,
	1044, 568, 569, 570, 571, 0, 573, 574, 0, 1028,
	575, 576, 577, 579, 580, 578, 581, 1088, 582, 0,
	0, 583, 584, 585, 641, 1111, 1148, 0, 587, 586,
	588, 644, 0, 0, 0, 0, 589, 590, 645, 591,
	592, 593, 1025, 0, 0, 0, 0, 0, 0, 0,
	1021, 0, 0, 0, 0, 0, 0, 1019, 1020, 1066,
	1038, 1039, 1040, 1036, 1037, 1049, 1050, 0, 0, 0,
	1048, 0, 0, 0, 0, 0, 261, 263, 262, 264,
	265, 266, 267, 0, 268, 269, 0, 0, 0, 0,
	0, 1090, 1054, 0, 0, 0, 270, 271, 1130, 272,
	273, 274, 275, 276, 277, 595, 1103, 0, 278, 1110,
	279, 1109, 0, 1120, 280, 281, 282, 283, 284, 285,
	1056, 1089, 1023, 286, 1150, 1151, 602, 0, 287, 288,
	1096, 0, 1077, 0, 289, 290, 291, 292, 293, 294,
	295, 0, 0, 297, 298, 299, 296, 300, 0, 301,
	0, 302, 303, 304, 305, 4282, 307, 0, 308, 309,
	310, 1131, 311, 312, 1080, 1078, 1079, 1086, 1082, 1081,
	1085, 313, 314, 315, 316, 1113, 317, 1107, 1106, 1027,
	321, 318, 319, 0, 322, 320, 0, 323, 324, 325,
	0, 0, 326, 1098, 328, 0, 329, 330, 0, 331,
	332, 333, 0, 334, 335, 1033, 336, 337, 338, 340,
	342, 339, 343, 344, 345, 346, 1121, 1122, 347, 1045,
	258, 0, 0, 0, 0, 0, 348, 349, 350, 1105,
	0, 0, 0, 351, 0, 352, 0, 0, 1132, 353,
	354, 1118, 1119, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 363, 1128, 0, 1055, 364, 0, 365, 366,
	367, 368, 369, 1091, 1092, 1095, 445, 1134, 370, 371,
	0, 372, 373, 374, 375, 0, 0, 0, 259, 376,
	377, 378, 380, 0, 1133, 379, 1100, 1101, 0, 1061,
	0, 381, 382, 1135, 1093, 1136, 383, 384, 385, 1137,
	386, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	0, 393, 395, 394, 0, 396, 1129, 1138, 397, 398,
	1139, 0, 399, 0, 0, 0, 400, 401, 1084, 1083,
	402, 403, 404, 405, 0, 406, 407, 409, 412, 408,
	410, 411, 413, 426, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 428, 0, 427, 1140,
	429, 430, 431, 436, 438, 439, 434, 435, 437, 440,
	441, 433, 1141, 432, 1024, 260, 1142, 442, 443, 1046,
	1094, 444, 1108, 446, 447, 0, 0, 448, 0, 1029,
	0, 450, 451, 452, 0, 0, 453, 454, 624, 1143,
	455, 1144, 1123, 456, 457, 449, 458, 459, 460, 461,
	462, 463, 464, 465, 0, 466, 467, 626, 468, 469,
	470, 627, 471, 472, 473, 1124, 474, 629, 475, 476,
	0, 477, 478, 0, 479, 480, 481, 482, 483, 484,
	485, 1104, 486, 488, 487, 489, 0, 490, 0, 491,
	492, 0, 0, 0, 0, 493, 0, 495, 496, 497,
	494, 498, 499, 500, 501, 0, 502, 503, 504, 1145,
	505, 506, 507, 508, 1034, 509, 0, 510, 511, 517,
	518, 512, 513, 519, 520, 521, 522, 523, 0, 525,
	526, 524, 527, 528, 529, 1087, 530, 531, 514, 515,
	532, 533, 1146, 534, 535, 536, 537, 538, 539, 1102,
	0, 540, 0, 541, 542, 543, 544, 516, 545, 550,
	1149, 546, 547, 548, 549, 1125, 552, 0, 553, 554,
	1022, 551, 0, 555, 556, 557, 558, 559, 560, 561,
	341, 562, 0, 563, 1114, 1115, 1116, 1117, 0, 572,
	0, 564, 565, 566, 1126, 567, 1127, 1044, 568, 569,
	570, 571, 0, 573, 574, 0, 1028, 575, 576, 577,
	579, 580, 578, 581, 1088, 582, 0, 0, 583, 584,
	585, 641, 1111, 1148, 0, 587, 586, 588, 644, 0,
	0, 0, 0, 589, 590, 645, 591, 592, 593, 1025,
	0, 0, 0, 0, 0, 0, 0, 1021, 0, 0,
	0, 0, 0, 0, 1019, 1020, 1066, 1038, 1039, 1040,
	1036, 1037, 1049, 1050, 0, 0, 0, 1048, 0, 0,
	0, 0, 0, 261, 263, 262, 264, 265, 266, 267,
	0, 268, 269, 0, 0, 0, 0, 0, 1090, 1054,
	0, 0, 0, 270, 271, 1130, 272, 273, 274, 275,
	276, 277, 595, 1103, 0, 278, 1110, 279, 1109, 0,
	1120, 280, 281, 282, 283, 284, 285, 1056, 1089, 1023,
	286, 1150, 1151, 602, 0, 287, 288, 1096, 0, 1077,
	0, 289, 290, 291, 292, 293, 294, 295, 0, 0,
	297, 298, 299, 296, 300, 0, 301, 0, 302, 303,
	304, 305, 306, 307, 0, 308, 309, 310, 1131, 311,
	312, 1080, 1078, 1079, 1086, 1082, 1081, 1085, 313, 314,
	315, 316, 1113, 317, 1107, 1106, 1027, 321, 318, 319,
	0, 322, 320, 0, 323, 324, 325, 0, 0, 326,
	1098, 328, 0, 329, 330, 0, 331, 332, 333, 0,
	334, 335, 1033, 336, 337, 338, 340, 342, 339, 343,
	344, 345, 346, 1121, 1122, 347, 1045, 258, 0, 0,
	0, 0, 0, 348, 349, 350, 1105, 0, 0, 0,
	351, 0, 352, 0, 0, 1132, 353, 354, 1118, 1119,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 363,
	1128, 0, 1055, 364, 0, 365, 366, 367, 368, 369,
	1091, 1092, 1095, 445, 1134, 370, 371, 0, 372, 373,
	374, 375, 0, 0, 0, 2304, 376, 377, 378, 380,
	0, 1133, 379, 1100, 1101, 0, 1061, 0, 381, 382,
	1135, 1093, 1136, 383, 384, 385, 1137, 386, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 0, 393, 395,
	394, 0, 396, 1129, 1138, 397, 398, 1139, 0, 399,
	0, 0, 0, 400, 401, 1084, 1083, 402, 403, 404,
	405, 0, 406, 407, 409, 412, 408, 410, 411, 413,
	426, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 428, 0, 427, 1140, 429, 430, 431,
	436, 438, 439, 434, 435, 437, 440, 441, 433, 1141,
	432, 1024, 260, 1142, 442, 443, 1046, 1094, 444, 1108,
	446, 447, 0, 0, 448, 0, 0, 0, 450, 451,
	452, 0, 0, 453, 454, 624, 1143, 455, 1144, 1123,
	456, 457, 449, 458, 459, 460, 461, 462, 463, 464,
	465, 0, 466, 467, 626, 468, 469, 470, 627, 471,
	472, 473, 1124, 474, 629, 475, 476, 2303, 477, 478,
	0, 479, 480, 481, 482, 483, 484, 485, 1104, 486,
	488, 487, 489, 0, 490, 0, 491, 492, 0, 0,
	0, 0, 493, 0, 495, 496, 497, 494, 498, 499,
	500, 501, 0, 502, 503, 504, 1145, 505, 506, 507,
	508, 1034, 509, 0, 510, 511, 517, 518, 512, 513,
	519, 520, 521, 522, 523, 0, 525, 526, 524, 527,
	528, 529, 1087, 530, 531, 514, 515, 532, 533, 1146,
	534, 535, 536, 537, 538, 539, 1102, 0, 540, 0,
	541, 542, 543, 544, 516, 545, 550, 1149, 546, 547,
	548, 549, 1125, 552, 0, 553, 554, 1022, 551, 0,
	555, 556, 557, 558, 559, 560, 561, 341, 562, 0,
	563, 1114, 1115, 1116, 1117, 0, 572, 0, 564, 565,
	566, 1126, 567, 1127, 1044, 568, 569, 570, 571, 0,
	573, 574, 0, 1028, 575, 576, 577, 579, 580, 578,
	581, 1088, 582, 0, 0, 583, 584, 585, 641, 1111,
	1148, 0, 587, 586, 588, 644, 0, 0, 0, 0,
	589, 590, 645, 591, 592, 593, 1025, 0, 0, 0,
	0, 0, 0, 0, 1021, 0, 0, 0, 0, 0,
	0, 1019, 1020, 1066, 1038, 1039, 1040, 1036, 1037, 1049,
	1050, 0, 0, 0, 1048, 0, 0, 0, 0, 0,
	261, 263, 262, 264, 265, 266, 267, 0, 268, 269,
	0, 0, 0, 0, 0, 1090, 1054, 0, 0, 0,
	270, 271, 1130, 272, 273, 274, 275, 276, 277, 595,
	1103, 0, 278, 1110, 279, 1109, 0, 1120, 280, 281,
	282, 283, 284, 285, 1056, 1089, 1023, 286, 1150, 1151,
	602, 0, 287, 288, 1096, 0, 1077, 0, 289, 290,
	291, 292, 293, 294, 295, 0, 0, 297, 298, 299,
	296, 300, 0, 301, 0, 302, 303, 304, 305, 306,
	307, 0, 308, 309, 310, 1131, 311, 312, 1080, 1078,
	1079, 1086, 1082, 1081, 1085, 313, 314, 315, 316, 1113,
	317, 1107, 1106, 1027, 321, 318, 319, 0, 322, 320,
	0, 323, 324, 325, 0, 0, 326, 1098, 328, 0,
	329, 330, 0, 331, 332, 333, 0, 334, 335, 1033,
	336, 337, 338, 340, 342, 339, 343, 344, 345, 346,
	1121, 1122, 347, 1045, 258, 0, 0, 0, 0, 0,
	348, 349, 350, 1105, 0, 0, 0, 351, 0, 352,
	0, 0, 1132, 353, 354, 1118, 1119, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 363, 1128, 0, 1055,
	364, 0, 365, 366, 367, 368, 369, 1091, 1092, 1095,
	445, 1134, 370, 371, 0, 372, 373, 374, 375, 0,
	0, 0, 259, 376, 377, 378, 380, 0, 1133, 379,
	1100, 1101, 0, 1061, 0, 381, 382, 1135, 1093, 1136,
	383, 384, 385, 1137, 386, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 0, 393, 395, 394, 0, 396,
	1129, 1138, 397, 398, 1139, 0, 399, 0, 0, 0,
	400, 401, 1084, 1083, 402, 403, 404, 405, 0, 406,
	407, 409, 412, 408, 410, 411, 413, 426, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	428, 0, 427, 1140, 429, 430, 431, 436, 438, 439,
	434, 435, 437, 440, 441, 433, 1141, 432, 1024, 260,
	1142, 442, 443, 1046, 1094, 444, 1108, 446, 447, 0,
	0, 448, 0, 1029, 0, 450, 451, 452, 0, 0,
	453, 454, 624, 1143, 455, 1144, 1123, 456, 457, 449,
	458, 459, 460, 461, 462, 463, 464, 465, 0, 466,
	467, 626, 468, 469, 470, 627, 471, 472, 473, 1124,
	474, 629, 475, 476, 0, 477, 478, 0, 479, 480,
	481, 482, 483, 484, 485, 1104, 486, 488, 487, 489,
	0, 490, 0, 491, 492, 0, 0, 0, 0, 493,
	0, 495, 496, 497, 494, 498, 499, 500, 501, 0,
	502, 503, 504, 1145, 505, 506, 507, 508, 1034, 509,
	0, 510, 511, 517, 518, 512, 513, 519, 520, 521,
	522, 523, 0, 525, 526, 524, 527, 528, 529, 1087,
	530, 531, 514, 515, 532, 533, 1146, 534, 535, 536,
	537, 538, 539, 1102, 0, 540, 0, 541, 542, 543,
	544, 516, 545, 550, 1149, 546, 547, 548, 549, 1125,
	552, 0, 553, 554, 1022, 551, 0, 555, 556, 557,
	558, 559, 560, 561, 341, 562, 0, 563, 1114, 1115,
	1116, 1117, 0, 572, 0, 564, 565, 566, 1126, 567,
	1127, 1044, 568, 569, 570, 571, 0, 573, 574, 0,
	1028, 575, 576, 577, 579, 580, 578, 581, 1088, 582,
	0, 0, 583, 584, 585, 641, 1111, 1148, 0, 587,
	586, 588, 644, 0, 0, 0, 0, 589, 590, 645,
	591, 592, 593, 1025, 0, 0, 0, 0, 0, 0,
	0, 1021, 0, 0, 0, 0, 0, 0, 1019, 1020,
	1066, 1038, 1039, 1040, 1036, 1037, 1049, 1050, 0, 0,
	0, 1048, 0, 0, 0, 0, 0, 261, 263, 262,
	264, 265, 266, 267, 0, 268, 269, 0, 0, 0,
	0, 0, 1090, 1054, 0, 0, 0, 270, 271, 1130,
	272, 273, 274, 275, 276, 277, 595, 1103, 0, 278,
	1110, 279, 1109, 0, 1120, 280, 281, 282, 283, 284,
	285, 1056, 1089, 1023, 286, 1150, 1151, 602, 0, 287,
	288, 1096, 0, 1077, 0, 289, 290, 291, 292, 293,
	294, 295, 0, 0, 297, 298, 299, 296, 300, 0,
	301, 0, 302, 303, 304, 305, 4056, 307, 0, 308,
	309, 310, 1131, 311, 312, 1080, 1078, 1079, 1086, 1082,
	1081, 1085, 313, 314, 315, 316, 1113, 317, 1107, 1106,
	1027, 321, 318, 319, 0, 322, 320, 0, 323, 324,
	325, 0, 0, 326, 1098, 328, 0, 329, 330, 0,
	331, 332, 333, 0, 334, 335, 1033, 336, 337, 338,
	340, 342, 339, 343, 344, 345, 346, 1121, 1122, 347,
	1045, 258, 0, 0, 0, 0, 0, 348, 349, 350,
	1105, 0, 0, 0, 351, 0, 352, 0, 0, 1132,
	353, 354, 1118, 1119, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 363, 1128, 0, 1055, 364, 0, 365,
	366, 367, 368, 369, 1091, 1092, 1095, 445, 1134, 370,
	371, 0, 372, 373, 374, 375, 0, 0, 0, 259,
	376, 377, 378, 380, 0, 1133, 379, 1100, 1101, 0,
	1061, 0, 381, 382, 1135, 1093, 1136, 383, 384, 385,
	1137, 386, 0, 0, 0, 387, 388, 389, 390, 391,
	392, 0, 393, 395, 394, 0, 396, 1129, 1138, 397,
	398, 1139, 0, 399, 0, 0, 0, 400, 401, 1084,
	1083, 402, 403, 404, 405, 0, 406, 407, 409, 412,
	408, 410, 411, 413, 426, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 428, 0, 427,
	1140, 429, 430, 431, 436, 438, 439, 434, 435, 437,
	440, 441, 433, 1141, 432, 1024, 260, 1142, 442, 443,
	1046, 1094, 444, 1108, 446, 447, 0, 0, 448, 0,
	1029, 0, 450, 451, 452, 0, 0, 453, 454, 624,
	1143, 455, 1144, 1123, 456, 457, 449, 458, 459, 460,
	461, 462, 463, 464, 465, 0, 466, 467, 626, 468,
	469, 470, 627, 471, 472, 473, 1124, 474, 629, 475,
	476, 0, 477, 478, 0, 479, 480, 481, 482, 483,
	484, 485, 1104, 486, 488, 487, 489, 0, 490, 0,
	491, 492, 0, 0, 0, 0, 493, 0, 495, 496,
	497, 494, 498, 499, 500, 501, 0, 502, 503, 504,
	1145, 505, 506, 507, 508, 1034, 509, 0, 510, 511,
	517, 518, 512, 513, 519, 520, 521, 522, 523, 0,
	525, 526, 524, 527, 528, 529, 1087, 530, 531, 514,
	515, 532, 533, 1146, 534, 535, 536, 537, 538, 539,
	1102, 0, 540, 0, 541, 542, 543, 544, 516, 545,
	550, 1149, 546, 547, 548, 549, 1125, 552, 0, 553,
	554, 1022, 551, 0, 555, 556, 557, 558, 559, 560,
	561, 341, 562, 0, 563, 1114, 1115, 1116, 1117, 0,
	572, 0, 564, 565, 566, 1126, 567, 1127, 1044, 568,
	569, 570, 571, 0, 573, 574, 0, 1028, 575, 576,
	577, 579, 580, 578, 581, 1088, 582, 0, 0, 583,
	584, 585, 641, 1111, 1148, 0, 587, 586, 588, 644,
	0, 0, 0, 0, 589, 590, 645, 591, 592, 593,
	1025, 0, 0, 0, 0, 0, 0, 0, 1021, 0,
	0, 0, 0, 0, 0, 1019, 1020, 1066, 1038, 1039,
	1040, 1036, 1037, 1049, 1050, 0, 0, 0, 1048, 0,
	0, 0, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 1090,
	1054, 0, 0, 0, 270, 271, 1130, 272, 273, 274,
	275, 276, 277, 595, 1103, 0, 278, 1110, 279, 1109,
	0, 1120, 280, 281, 282, 283, 284, 285, 1056, 1089,
	1023, 286, 1150, 1151, 602, 0, 287, 288, 1096, 0,
	1077, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 1131,
	311, 312, 1080, 1078, 1079, 1086, 1082, 1081, 1085, 313,
	314, 315, 316, 1113, 317, 1107, 1106, 1027, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 1098, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 1033, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 1121, 1122, 347, 1045, 258, 0,
	0, 0, 0, 0, 348, 349, 350, 1105, 0, 0,
	0, 351, 0, 352, 0, 0, 1132, 353, 354, 1118,
	1119, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 1128, 0, 1055, 364, 0, 365, 366, 367, 368,
	369, 1091, 1092, 1095, 445, 1134, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 259, 376, 377, 378,
	380, 0, 1133, 379, 1100, 1101, 0, 1061, 0, 381,
	382, 1135, 1093, 1136, 383, 384, 385, 1137, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 1129, 1138, 397, 398, 1139, 0,
	399, 0, 0, 0, 400, 401, 1084, 1083, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 1140, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	1141, 432, 1024, 3708, 1142, 442, 443, 1046, 1094, 444,
	1108, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 1143, 455, 1144,
	1123, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 1124, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 1104,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 1145, 505, 506,
	507, 508, 1034, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 1087, 530, 531, 514, 515, 532, 533,
	1146, 534, 535, 536, 537, 538, 539, 1102, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 1149, 546,
	547, 548, 549, 1125, 552, 0, 553, 554, 1022, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 1114, 1115, 1116, 1117, 0, 572, 0, 564,
	565, 566, 1126, 567, 1127, 1044, 568, 569, 570, 571,
	0, 573, 574, 0, 1028, 575, 576, 577, 579, 580,
	578, 581, 1088, 582, 0, 0, 583, 584, 585, 641,
	1111, 1148, 0, 587, 586, 588, 644, 0, 0, 0,
	0, 589, 590, 645, 591, 592, 593, 1025, 0, 0,
	0, 0, 0, 0, 0, 1021, 0, 0, 0, 0,
	0, 0, 1019, 1020, 1845, 0, 0, 0, 0, 0,
	0, 1050, 0, 0, 0, 1048, 1066, 1038, 1039, 1040,
	1036, 1037, 1049, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 263, 262, 264, 265, 266, 267,
	0, 268, 269, 0, 0, 0, 0, 0, 1090, 1054,
	0, 0, 0, 270, 271, 1130, 272, 273, 274, 275,
	276, 277, 595, 1103, 0, 278, 1110, 279, 1109, 0,
	1120, 280, 281, 282, 283, 284, 285, 1056, 1089, 1023,
	286, 1150, 1151, 602, 0, 287, 288, 1096, 0, 1077,
	0, 289, 290, 291, 292, 293, 294, 295, 0, 0,
	297, 298, 299, 296, 300, 0, 301, 0, 302, 303,
	304, 305, 306, 307, 0, 308, 309, 310, 1131, 311,
	312, 1080, 1078, 1079, 1086, 1082, 1081, 1085, 313, 314,
	315, 316, 1113, 317, 1107, 1106, 1027, 321, 318, 319,
	0, 322, 320, 0, 323, 324, 325, 0, 0, 326,
	1098, 328, 0, 329, 330, 0, 331, 332, 333, 0,
	334, 335, 1033, 336, 337, 338, 340, 342, 339, 343,
	344, 345, 346, 1121, 1122, 347, 1045, 258, 0, 0,
	0, 0, 0, 348, 349, 350, 1105, 0, 0, 0,
	351, 0, 352, 0, 0, 1132, 353, 354, 1118, 1119,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 363,
	1128, 0, 1055, 364, 0, 365, 366, 367, 368, 369,
	1091, 1092, 1095, 445, 1134, 370, 371, 0, 372, 373,
	374, 375, 0, 0, 0, 259, 376, 377, 378, 380,
	0, 1133, 379, 1100, 1101, 0, 1061, 0, 381, 382,
	1135, 1093, 1136, 383, 384, 385, 1137, 386, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 0, 393, 395,
	394, 0, 396, 1129, 1138, 397, 398, 1139, 0, 399,
	0, 0, 0, 400, 401, 1084, 1083, 402, 403, 404,
	405, 0, 406, 407, 409, 412, 408, 410, 411, 413,
	426, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 428, 0, 427, 1140, 429, 430, 431,
	436, 438, 439, 434, 435, 437, 440, 441, 433, 1141,
	432, 1024, 260, 1142, 442, 443, 1046, 1094, 444, 1108,
	446, 447, 0, 0, 448, 0, 0, 0, 450, 451,
	452, 0, 0, 453, 454, 624, 1143, 455, 1144, 1123,
	456, 457, 449, 458, 459, 460, 461, 462, 463, 464,
	465, 0, 466, 467, 626, 468, 469, 470, 627, 471,
	472, 473, 1124, 474, 629, 475, 476, 0, 477, 478,
	0, 479, 480, 481, 482, 483, 484, 485, 1104, 486,
	488, 487, 489, 0, 490, 0, 491, 492, 0, 0,
	0, 0, 493, 0, 495, 496, 497, 494, 498, 499,
	500, 501, 0, 502, 503, 504, 1145, 505, 506, 507,
	508, 1034, 509, 0, 510, 511, 517, 518, 512, 513,
	519, 520, 521, 522, 523, 0, 525, 526, 524, 527,
	528, 529, 1087, 530, 531, 514, 515, 532, 533, 1146,
	534, 535, 536, 537, 538, 539, 1102, 0, 540, 0,
	541, 542, 543, 544, 516, 545, 550, 1149, 546, 547,
	548, 549, 1125, 552, 0, 553, 554, 1022, 551, 0,
	555, 556, 557, 558, 559, 560, 561, 341, 562, 0,
	563, 1114, 1115, 1116, 1117, 0, 572, 0, 564, 565,
	566, 1126, 567, 1127, 1044, 568, 569, 570, 571, 0,
	573, 574, 0, 1028, 575, 576, 577, 579, 580, 578,
	581, 1088, 582, 0, 0, 583, 584, 585, 641, 1111,
	1148, 3456, 587, 586, 588, 644, 0, 0, 0, 0,
	589, 590, 645, 591, 592, 593, 1025, 0, 0, 0,
	0, 0, 0, 0, 1021, 0, 0, 0, 0, 0,
	0, 1019, 1020, 1066, 1038, 1039, 1040, 1036, 1037, 1049,
	1050, 0, 0, 0, 1048, 0, 0, 0, 0, 0,
	261, 263, 262, 264, 265, 266, 267, 0, 268, 269,
	0, 0, 0, 0, 0, 1090, 1054, 0, 0, 0,
	270, 271, 1130, 272, 273, 274, 275, 276, 277, 595,
	1103, 0, 278, 1110, 279, 1109, 0, 1120, 280, 281,
	282, 283, 284, 285, 1056, 1089, 1023, 286, 1150, 1151,
	602, 0, 287, 288, 1096, 0, 1077, 0, 289, 290,
	291, 292, 293, 294, 295, 0, 0, 297, 298, 299,
	296, 300, 0, 301, 0, 302, 303, 304, 305, 306,
	307, 0, 308, 309, 310, 1131, 311, 312, 1080, 1078,
	1079, 1086, 1082, 1081, 1085, 313, 314, 315, 316, 1113,
	317, 1107, 1106, 1027, 321, 318, 319, 0, 322, 320,
	0, 323, 324, 325, 0, 0, 326, 1098, 328, 0,
	329, 330, 0, 331, 332, 333, 0, 334, 335, 1033,
	336, 337, 338, 340, 342, 339, 343, 344, 345, 346,
	1121, 1122, 347, 1045, 258, 0, 0, 0, 0, 0,
	348, 349, 350, 1105, 0, 0, 0, 351, 0, 352,
	0, 0, 1132, 353, 354, 1118, 1119, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 363, 1128, 0, 1055,
	364, 0, 365, 366, 367, 368, 369, 1091, 1092, 1095,
	445, 1134, 370, 371, 0, 372, 373, 374, 375, 0,
	0, 0, 259, 376, 377, 378, 380, 0, 1133, 379,
	1100, 1101, 0, 1061, 0, 381, 382, 1135, 1093, 1136,
	383, 384, 385, 1137, 386, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 0, 393, 395, 394, 0, 396,
	1129, 1138, 397, 398, 1139, 0, 399, 0, 0, 0,
	400, 401, 1084, 1083, 402, 403, 404, 405, 0, 406,
	407, 409, 412, 408, 410, 411, 413, 426, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	428, 0, 427, 1140, 429, 430, 431, 436, 438, 439,
	434, 435, 437, 440, 441, 433, 1141, 432, 1024, 260,
	1142, 442, 443, 1046, 1094, 444, 1108, 446, 447, 0,
	0, 448, 0, 0, 0, 450, 451, 452, 0, 0,
	453, 454, 624, 1143, 455, 1144, 1123, 456, 457, 449,
	458, 459, 460, 461, 462, 463, 464, 465, 0, 466,
	467, 626, 468, 469, 470, 627, 471, 472, 473, 1124,
	474, 629, 475, 476, 0, 477, 478, 0, 479, 480,
	481, 482, 483, 484, 485, 1104, 486, 488, 487, 489,
	0, 490, 0, 491, 492, 0, 0, 0, 0, 493,
	0, 495, 496, 497, 494, 498, 499, 500, 501, 0,
	502, 503, 504, 1145, 505, 506, 507, 508, 1034, 509,
	0, 510, 511, 517, 518, 512, 513, 519, 520, 521,
	522, 523, 0, 525, 526, 524, 527, 528, 529, 1087,
	530, 531, 514, 515, 532, 533, 1146, 534, 535, 536,
	537, 538, 539, 1102, 0, 540, 0, 541, 542, 543,
	544, 516, 545, 550, 1149, 546, 547, 548, 549, 1125,
	552, 0, 553, 554, 1022, 551, 0, 555, 556, 557,
	558, 559, 560, 561, 341, 562, 0, 563, 1114, 1115,
	1116, 1117, 0, 572, 0, 564, 565, 566, 1126, 567,
	1127, 1044, 568, 569, 570, 571, 0, 573, 574, 0,
	1028, 575, 576, 577, 579, 580, 578, 581, 1088, 582,
	0, 0, 583, 584, 585, 641, 1111, 1148, 0, 587,
	586, 588, 644, 0, 0, 0, 0, 589, 590, 645,
	591, 592, 593, 1025, 0, 0, 0, 0, 0, 0,
	0, 1021, 0, 0, 0, 0, 0, 0, 1019, 1020,
	1845, 0, 0, 0, 0, 0, 0, 1050, 0, 0,
	0, 1048, 1066, 1038, 1039, 1040, 1036, 1037, 1049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 0,
	0, 0, 0, 0, 1090, 1054, 0, 0, 0, 270,
	271, 1130, 272, 273, 274, 275, 276, 277, 595, 1103,
	0, 278, 1110, 279, 1109, 0, 1120, 280, 281, 282,
	283, 284, 285, 1056, 1089, 1023, 286, 1150, 1151, 602,
	0, 287, 288, 1096, 0, 1077, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 1131, 311, 312, 1080, 1078, 1079,
	1086, 1082, 1081, 1085, 313, 314, 315, 316, 1113, 317,
	1107, 1106, 1027, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 1098, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 1033, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 1121,
	1122, 347, 1045, 258, 0, 0, 0, 0, 0, 348,
	349, 350, 1105, 0, 0, 0, 351, 0, 352, 0,
	2523, 1132, 353, 354, 1118, 1119, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 1128, 0, 1055, 364,
	0, 365, 366, 367, 368, 369, 1091, 1092, 1095, 445,
	1134, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 259, 376, 377, 378, 380, 0, 1133, 379, 1100,
	1101, 0, 1061, 0, 381, 382, 1135, 1093, 1136, 383,
	384, 385, 1137, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 1129,
	1138, 397, 398, 1139, 0, 399, 0, 0, 0, 400,
	401, 1084, 1083, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 1140, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 1141, 432, 1024, 260, 1142,
	442, 443, 1046, 1094, 444, 1108, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 1143, 455, 1144, 1123, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 1124, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 1104, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 1145, 505, 506, 507, 508, 1034, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 1087, 530,
	531, 514, 515, 532, 533, 1146, 534, 535, 536, 537,
	538, 539, 1102, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 1149, 546, 547, 548, 549, 1125, 552,
	0, 553, 554, 1022, 551, 0, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 1114, 1115, 1116,
	1117, 0, 572, 0, 564, 565, 566, 1126, 567, 1127,
	1044, 568, 569, 570, 571, 0, 573, 574, 0, 1028,
	575, 576, 577, 579, 580, 578, 581, 1088, 582, 0,
	0, 583, 584, 585, 641, 1111, 1148, 0, 587, 586,
	588, 644, 0, 0, 0, 0, 589, 590, 645, 591,
	592, 593, 1025, 0, 0, 0, 0, 0, 0, 0,
	1021, 0, 0, 0, 0, 0, 0, 1019, 1020, 1066,
	1038, 1039, 1040, 1036, 1037, 1049, 1050, 0, 0, 0,
	1048, 0, 0, 0, 0, 0, 261, 263, 262, 264,
	265, 266, 267, 0, 268, 269, 0, 0, 0, 0,
	0, 1090, 1054, 0, 0, 0, 270, 271, 1130, 272,
	273, 274, 275, 276, 277, 595, 1103, 0, 278, 1110,
	279, 1109, 0, 1120, 280, 281, 282, 283, 284, 285,
	1056, 1089, 1023, 286, 1150, 1151, 602, 0, 287, 288,
	1096, 0, 1077, 0, 289, 290, 291, 292, 293, 294,
	295, 0, 0, 297, 298, 299, 296, 300, 0, 301,
	0, 302, 303, 304, 305, 306, 307, 0, 308, 309,
	310, 1131, 311, 312, 1080, 1078, 1079, 1086, 1082, 1081,
	1085, 313, 314, 315, 316, 1113, 317, 1107, 1106, 1027,
	321, 318, 319, 0, 322, 320, 0, 323, 324, 325,
	0, 0, 326, 1098, 328, 0, 329, 330, 0, 331,
	332, 333, 0, 334, 335, 1033, 336, 337, 338, 340,
	342, 339, 343, 344, 345, 346, 1121, 1122, 347, 1045,
	258, 0, 0, 0, 0, 0, 348, 349, 350, 1105,
	0, 0, 0, 351, 0, 352, 0, 0, 1132, 353,
	354, 1118, 1119, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 363, 1128, 0, 1055, 364, 0, 365, 366,
	367, 368, 369, 1091, 1092, 1095, 445, 1134, 370, 371,
	0, 372, 373, 374, 375, 0, 0, 0, 259, 376,
	377, 378, 380, 0, 1133, 379, 1100, 1101, 0, 1061,
	0, 381, 382, 1135, 1093, 1136, 383, 384, 385, 1137,
	386, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	0, 393, 395, 394, 0, 396, 1129, 1138, 397, 398,
	1139, 0, 399, 0, 0, 0, 400, 401, 1084, 1083,
	402, 403, 404, 405, 0, 406, 407, 409, 412, 408,
	410, 411, 413, 426, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 428, 0, 427, 1140,
	429, 430, 431, 436, 438, 439, 434, 435, 437, 440,
	441, 433, 1141, 432, 1024, 260, 1142, 442, 443, 1046,
	1094, 444, 1108, 446, 447, 0, 0, 448, 0, 0,
	0, 450, 451, 452, 0, 0, 453, 454, 624, 1143,
	455, 1144, 1123, 456, 457, 449, 458, 459, 460, 461,
	462, 463, 464, 465, 0, 466, 467, 626, 468, 469,
	470, 627, 471, 472, 473, 1124, 474, 629, 475, 476,
	0, 477, 478, 0, 479, 480, 481, 482, 483, 484,
	485, 1104, 486, 488, 487, 489, 0, 490, 0, 491,
	492, 0, 0, 0, 0, 493, 0, 495, 496, 497,
	494, 498, 499, 500, 501, 0, 502, 503, 504, 1145,
	505, 506, 507, 508, 1034, 509, 0, 510, 511, 517,
	518, 512, 513, 519, 520, 521, 522, 523, 0, 525,
	526, 524, 527, 528, 529, 1087, 530, 531, 514, 515,
	532, 533, 1146, 534, 535, 536, 537, 538, 539, 1102,
	0, 540, 0, 541, 542, 543, 544, 516, 545, 550,
	1149, 546, 547, 548, 549, 1125, 552, 0, 553, 554,
	1022, 551, 0, 555, 556, 557, 558, 559, 560, 561,
	341, 562, 0, 563, 1114, 1115, 1116, 1117, 0, 572,
	0, 564, 565, 566, 1126, 567, 1127, 1044, 568, 569,
	570, 571, 0, 573, 574, 0, 1028, 575, 576, 577,
	579, 580, 578, 581, 1088, 582, 0, 0, 583, 584,
	585, 641, 1111, 1148, 0, 587, 586, 588, 644, 0,
	0, 0, 0, 589, 590, 645, 591, 592, 593, 1025,
	0, 0, 0, 0, 0, 0, 0, 1021, 0, 0,
	0, 0, 0, 0, 1019, 1020, 0, 0, 0, 0,
	0, 0, 0, 1050, 1775, 0, 2528, 1048, 1066, 1038,
	1039, 1040, 1036, 1037, 1049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 263, 262, 264, 265,
	266, 267, 0, 268, 269, 0, 0, 0, 0, 0,
	1090, 1054, 0, 0, 0, 270, 271, 1130, 272, 273,
	274, 275, 276, 277, 595, 1103, 0, 278, 1110, 279,
	1109, 0, 1120, 280, 281, 282, 283, 284, 285, 1056,
	1089, 1023, 286, 1150, 1151, 602, 0, 287, 288, 1096,
	0, 1077, 0, 289, 290, 291, 292, 293, 294, 295,
	0, 0, 297, 298, 299, 296, 300, 0, 301, 0,
	302, 303, 304, 305, 306, 307, 0, 308, 309, 310,
	1131, 311, 312, 1080, 1078, 1079, 1086, 1082, 1081, 1085,
	313, 314, 315, 316, 1113, 317, 1107, 1106, 1027, 321,
	318, 319, 0, 322, 320, 0, 323, 324, 325, 0,
	0, 326, 1098, 328, 0, 329, 330, 0, 331, 332,
	333, 0, 334, 335, 1033, 336, 337, 338, 340, 342,
	339, 343, 344, 345, 346, 1121, 1122, 347, 1045, 258,
	0, 0, 0, 0, 0, 348, 349, 350, 1105, 0,
	0, 0, 351, 0, 352, 0, 0, 1132, 353, 354,
	1118, 1119, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 363, 1128, 0, 1055, 364, 0, 365, 366, 367,
	368, 369, 1091, 1092, 1095, 445, 1134, 370, 371, 0,
	372, 373, 374, 375, 0, 0, 0, 259, 376, 377,
	378, 380, 0, 1133, 379, 1100, 1101, 0, 1061, 0,
	381, 382, 1135, 1093, 1136, 383, 384, 385, 1137, 386,
	0, 0, 0, 387, 388, 389, 390, 391, 392, 0,
	393, 395, 394, 0, 396, 1129, 1138, 397, 398, 1139,
	0, 399, 0, 0, 0, 400, 401, 1084, 1083, 402,
	403, 404, 405, 0, 406, 407, 409, 412, 408, 410,
	411, 413, 426, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 428, 0, 427, 1140, 429,
	430, 431, 436, 438, 439, 434, 435, 437, 440, 441,
	433, 1141, 432, 1024, 260, 1142, 442, 443, 1046, 1094,
	444, 1108, 446, 447, 0, 0, 448, 0, 0, 0,
	450, 451, 452, 0, 0, 453, 454, 624, 1143, 455,
	1144, 1123, 456, 457, 449, 458, 459, 460, 461, 462,
	463, 464, 465, 0, 466, 467, 626, 468, 469, 470,
	627, 471, 472, 473, 1124, 474, 629, 475, 476, 0,
	477, 478, 0, 479, 480, 481, 482, 483, 484, 485,
	1104, 486, 488, 487, 489, 0, 490, 0, 491, 492,
	0, 0, 0, 0, 493, 0, 495, 496, 497, 494,
	498, 499, 500, 501, 0, 502, 503, 504, 1145, 505,
	506, 507, 508, 1034, 509, 0, 510, 511, 517, 518,
	512, 513, 519, 520, 521, 522, 523, 0, 525, 526,
	524, 527, 528, 529, 1087, 530, 531, 514, 515, 532,
	533, 1146, 534, 535, 536, 537, 538, 539, 1102, 0,
	540, 0, 541, 542, 543, 544, 516, 545, 550, 1149,
	546, 547, 548, 549, 1125, 552, 0, 553, 554, 1022,
	551, 0, 555, 556, 557, 558, 559, 560, 561, 341,
	562, 0, 563, 1114, 1115, 1116, 1117, 0, 572, 0,
	564, 565, 566, 1126, 567, 1127, 1044, 568, 569, 570,
	571, 0, 573, 574, 0, 1028, 575, 576, 577, 579,
	580, 578, 581, 1088, 582, 0, 0, 583, 584, 585,
	641, 1111, 1148, 0, 587, 586, 588, 644, 0, 0,
	0, 0, 589, 590, 645, 591, 592, 593, 1025, 0,
	0, 0, 0, 0, 0, 0, 1021, 0, 0, 0,
	0, 0, 0, 1019, 1020, 0, 0, 0, 0, 0,
	0, 0, 1050, 0, 0, 2526, 1048, 1066, 1038, 1039,
	1040, 1036, 1037, 1049, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 1090,
	1054, 0, 0, 0, 270, 271, 1130, 272, 273, 274,
	275, 276, 277, 595, 1103, 0, 278, 1110, 279, 1109,
	0, 1120, 280, 281, 282, 283, 284, 285, 1056, 1089,
	1023, 286, 1150, 1151, 602, 0, 287, 288, 1096, 0,
	1077, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 1131,
	311, 312, 1080, 1078, 1079, 1086, 1082, 1081, 1085, 313,
	314, 315, 316, 1113, 317, 1107, 1106, 1027, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 1098, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 1033, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 1121, 1122, 347, 1045, 258, 0,
	0, 0, 0, 0, 348, 349, 350, 1105, 0, 0,
	0, 351, 0, 352, 0, 0, 1132, 353, 354, 1118,
	1119, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 1128, 0, 1055, 364, 0, 365, 366, 367, 368,
	369, 1091, 1092, 1095, 445, 1134, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 259, 376, 377, 378,
	380, 0, 1133, 379, 1100, 1101, 0, 1061, 0, 381,
	382, 1135, 1093, 1136, 383, 384, 385, 1137, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 1129, 1138, 397, 398, 1139, 0,
	399, 0, 0, 0, 400, 401, 1084, 1083, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 1140, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	1141, 432, 1024, 260, 1142, 442, 443, 1046, 1094, 444,
	1108, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 1143, 455, 1144,
	1123, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 1124, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 1104,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 1145, 505, 506,
	507, 508, 1034, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 1087, 530, 531, 514, 515, 532, 533,
	1146, 534, 535, 536, 537, 538, 539, 1102, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 1149, 546,
	547, 548, 549, 1125, 552, 0, 553, 554, 1022, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 1114, 1115, 1116, 1117, 0, 572, 0, 564,
	565, 566, 1126, 567, 1127, 1044, 568, 569, 570, 571,
	0, 573, 574, 0, 1028, 575, 576, 577, 579, 580,
	578, 581, 1088, 582, 0, 0, 583, 584, 585, 641,
	1111, 1148, 0, 587, 586, 588, 644, 0, 0, 0,
	0, 589, 590, 645, 591, 592, 593, 1025, 0, 0,
	0, 0, 0, 0, 0, 1021, 0, 0, 0, 0,
	0, 0, 1019, 1020, 0, 0, 0, 0, 0, 0,
	0, 1050, 0, 0, 2514, 1048, 1066, 1038, 1039, 1040,
	1036, 1037, 1049, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 263, 262, 264, 265, 266, 267,
	0, 268, 269, 0, 0, 0, 0, 0, 1090, 1054,
	0, 0, 0, 270, 271, 1130, 272, 273, 274, 275,
	276, 277, 595, 1103, 0, 278, 1110, 279, 1109, 0,
	1120, 280, 281, 282, 283, 284, 285, 1056, 1089, 1023,
	286, 1150, 1151, 602, 0, 287, 288, 1096, 0, 1077,
	0, 289, 290, 291, 292, 293, 294, 295, 0, 0,
	297, 298, 299, 296, 300, 0, 301, 0, 302, 303,
	304, 305, 306, 307, 0, 308, 309, 310, 1131, 311,
	312, 1080, 1078, 1079, 1086, 1082, 1081, 1085, 313, 314,
	315, 316, 1113, 317, 1107, 1106, 1027, 321, 318, 319,
	0, 322, 320, 0, 323, 324, 325, 0, 0, 326,
	1098, 328, 0, 329, 330, 0, 331, 332, 333, 0,
	334, 335, 1033, 336, 337, 338, 340, 342, 339, 343,
	344, 345, 346, 1121, 1122, 347, 1045, 258, 0, 0,
	0, 0, 0, 348, 349, 350, 1105, 0, 0, 0,
	351, 0, 352, 0, 0, 1132, 353, 354, 1118, 1119,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 363,
	1128, 0, 1055, 364, 0, 365, 366, 367, 368, 369,
	1091, 1092, 1095, 445, 1134, 370, 371, 0, 372, 373,
	374, 375, 0, 0, 0, 259, 376, 377, 378, 380,
	0, 1133, 379, 1100, 1101, 0, 1061, 0, 381, 382,
	1135, 1093, 1136, 383, 384, 385, 1137, 386, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 0, 393, 395,
	394, 0, 396, 1129, 1138, 397, 398, 1139, 0, 399,
	0, 0, 0, 400, 401, 1084, 1083, 402, 403, 404,
	405, 0, 406, 407, 409, 412, 408, 410, 411, 413,
	426, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 428, 0, 427, 1140, 429, 430, 431,
	436, 438, 439, 434, 435, 437, 440, 441, 433, 1141,
	432, 1024, 260, 1142, 442, 443, 1046, 1094, 444, 1108,
	446, 447, 0, 0, 448, 0, 0, 0, 450, 451,
	452, 0, 0, 453, 454, 624, 1143, 455, 1144, 1123,
	456, 457, 449, 458, 459, 460, 461, 462, 463, 464,
	465, 0, 466, 467, 626, 468, 469, 470, 627, 471,
	472, 473, 1124, 474, 629, 475, 476, 0, 477, 478,
	0, 479, 480, 481, 482, 483, 484, 485, 1104, 486,
	488, 487, 489, 0, 490, 0, 491, 492, 0, 0,
	0, 0, 493, 0, 495, 496, 497, 494, 498, 499,
	500, 501, 0, 502, 503, 504, 1145, 505, 506, 507,
	508, 1034, 509, 0, 510, 511, 517, 518, 512, 513,
	519, 520, 521, 522, 523, 0, 525, 526, 524, 527,
	528, 529, 1087, 530, 531, 514, 515, 532, 533, 1146,
	534, 535, 536, 537, 538, 539, 1102, 0, 540, 0,
	541, 542, 543, 544, 516, 545, 550, 1149, 546, 547,
	548, 549, 1125, 552, 0, 553, 554, 1022, 551, 0,
	555, 556, 557, 558, 559, 560, 561, 341, 562, 0,
	563, 1114, 1115, 1116, 1117, 0, 572, 0, 564, 565,
	566, 1126, 567, 1127, 1044, 568, 569, 570, 571, 0,
	573, 574, 0, 1028, 575, 576, 577, 579, 580, 578,
	581, 1088, 582, 0, 0, 583, 584, 585, 641, 1111,
	1148, 0, 587, 586, 588, 644, 0, 0, 0, 0,
	589, 590, 645, 591, 592, 593, 1025, 0, 0, 0,
	0, 0, 0, 0, 1021, 0, 0, 0, 0, 0,
	0, 1019, 1020, 0, 0, 0, 0, 0, 0, 0,
	1050, 0, 0, 2503, 1048, 1066, 1038, 1039, 1040, 1036,
	1037, 1049, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 263, 262, 264, 265, 266, 267, 0,
	268, 269, 0, 0, 0, 0, 0, 1090, 1054, 0,
	0, 0, 270, 271, 1130, 272, 273, 274, 275, 276,
	277, 595, 1103, 0, 278, 1110, 279, 1109, 0, 1120,
	280, 281, 282, 283, 284, 285, 1056, 1089, 1023, 286,
	1150, 1151, 602, 0, 287, 288, 1096, 0, 1077, 0,
	289, 290, 291, 292, 293, 294, 295, 0, 0, 297,
	298, 299, 296, 300, 0, 301, 0, 302, 303, 304,
	305, 306, 307, 0, 308, 309, 310, 1131, 311, 312,
	1080, 1078, 1079, 1086, 1082, 1081, 1085, 313, 314, 315,
	316, 1113, 317, 1107, 1106, 1027, 321, 318, 319, 0,
	322, 320, 0, 323, 324, 325, 0, 0, 326, 1098,
	328, 0, 329, 330, 0, 331, 332, 333, 0, 334,
	335, 1033, 336, 337, 338, 340, 342, 339, 343, 344,
	345, 346, 1121, 1122, 347, 1045, 258, 0, 0, 0,
	0, 0, 348, 349, 350, 1105, 0, 0, 0, 351,
	0, 352, 0, 0, 1132, 353, 354, 1118, 1119, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 363, 1128,
	0, 1055, 364, 0, 365, 366, 367, 368, 369, 1091,
	1092, 1095, 445, 1134, 370, 371, 0, 372, 373, 374,
	375, 0, 0, 0, 259, 376, 377, 378, 380, 0,
	1133, 379, 1100, 1101, 0, 1061, 0, 381, 382, 1135,
	1093, 1136, 383, 384, 385, 1137, 386, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 0, 393, 395, 394,
	0, 396, 1129, 1138, 397, 398, 1139, 0, 399, 0,
	0, 0, 400, 401, 1084, 1083, 402, 403, 404, 405,
	0, 406, 407, 409, 412, 408, 410, 411, 413, 426,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 428, 0, 427, 1140, 429, 430, 431, 436,
	438, 439, 434, 435, 437, 440, 441, 433, 1141, 432,
	1024, 260, 1142, 442, 443, 1046, 1094, 444, 1108, 446,
	447, 0, 0, 448, 0, 0, 0, 450, 451, 452,
	0, 0, 453, 454, 624, 1143, 455, 1144, 1123, 456,
	457, 449, 458, 459, 460, 461, 462, 463, 464, 465,
	0, 466, 467, 626, 468, 469, 470, 627, 471, 472,
	473, 1124, 474, 629, 475, 476, 0, 477, 478, 0,
	479, 480, 481, 482, 483, 484, 485, 1104, 486, 488,
	487, 489, 0, 490, 0, 491, 492, 0, 0, 0,
	0, 493, 0, 495, 496, 497, 494, 498, 499, 500,
	501, 0, 502, 503, 504, 1145, 505, 506, 507, 508,
	1034, 509, 0, 510, 511, 517, 518, 512, 513, 519,
	520, 521, 522, 523, 0, 525, 526, 524, 527, 528,
	529, 1087, 530, 531, 514, 515, 532, 533, 1146, 534,
	535, 536, 537, 538, 539, 1102, 0, 540, 0, 541,
	542, 543, 544, 516, 545, 550, 1149, 546, 547, 548,
	549, 1125, 552, 0, 553, 554, 1022, 551, 0, 555,
	556, 557, 558, 559, 560, 561, 341, 562, 0, 563,
	1114, 1115, 1116, 1117, 0, 572, 0, 564, 565, 566,
	1126, 567, 1127, 1044, 568, 569, 570, 571, 0, 573,
	574, 0, 1028, 575, 576, 577, 579, 580, 578, 581,
	1088, 582, 0, 0, 583, 584, 585, 641, 1111, 1148,
	0, 587, 586, 588, 644, 0, 0, 0, 0, 589,
	590, 645, 591, 592, 593, 1025, 0, 0, 0, 0,
	0, 0, 0, 1021, 0, 0, 0, 0, 0, 0,
	1019, 1020, 0, 0, 0, 0, 0, 0, 0, 1050,
	0, 0, 2501, 1048, 2492, 2499, 1039, 1040, 1036, 1037,
	1049, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 263, 262, 264, 265, 266, 267, 0, 268,
	269, 0, 0, 0, 0, 0, 1090, 1054, 0, 0,
	0, 270, 271, 1130, 272, 273, 274, 275, 276, 277,
	595, 1103, 0, 278, 1110, 279, 1109, 0, 1120, 280,
	281, 282, 283, 284, 285, 1056, 1089, 1023, 286, 1150,
	1151, 602, 0, 287, 288, 1096, 0, 1077, 0, 289,
	290, 291, 292, 293, 294, 295, 0, 0, 297, 298,
	299, 296, 300, 0, 301, 0, 302, 303, 304, 305,
	306, 307, 0, 308, 309, 310, 1131, 311, 312, 1080,
	1078, 1079, 1086, 1082, 1081, 1085, 313, 314, 315, 316,
	1113, 2495, 1107, 1106, 1027, 321, 318, 319, 0, 322,
	320, 0, 323, 324, 325, 0, 0, 326, 1098, 328,
	0, 329, 330, 0, 331, 332, 333, 0, 334, 335,
	1033, 336, 337, 338, 340, 342, 339, 343, 344, 345,
	346, 1121, 1122, 347, 1045, 258, 0, 0, 0, 0,
	0, 348, 349, 350, 1105, 0, 0, 0, 351, 0,
	352, 0, 0, 1132, 353, 354, 1118, 1119, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 363, 1128, 0,
	1055, 364, 0, 365, 366, 367, 2496, 369, 1091, 1092,
	1095, 445, 1134, 370, 371, 0, 372, 373, 374, 375,
	0, 0, 0, 259, 376, 377, 378, 380, 0, 1133,
	379, 1100, 1101, 0, 1061, 0, 381, 382, 1135, 1093,
	1136, 383, 384, 385, 1137, 386, 0, 0, 0, 387,
	388, 389, 390, 391, 392, 0, 393, 395, 394, 0,
	396, 1129, 1138, 397, 398, 1139, 0, 399, 0, 0,
	0, 400, 401, 1084, 1083, 402, 403, 404, 405, 0,
	406, 407, 409, 412, 408, 410, 2497, 413, 2494, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 428, 0, 427, 1140, 429, 430, 431, 436, 438,
	439, 434, 435, 437, 440, 441, 433, 1141, 432, 1024,
	260, 1142, 442, 443, 1046, 1094, 444, 1108, 446, 447,
	0, 0, 448, 0, 0, 0, 450, 451, 452, 0,
	0, 453, 454, 624, 1143, 455, 1144, 1123, 456, 457,
	449, 458, 459, 460, 461, 462, 463, 464, 465, 0,
	466, 467, 626, 468, 469, 470, 627, 471, 472, 473,
	1124, 474, 629, 475, 476, 0, 477, 478, 0, 479,
	480, 481, 482, 483, 484, 485, 1104, 486, 488, 487,
	489, 0, 490, 0, 491, 492, 0, 0, 0, 0,
	493, 0, 495, 496, 497, 494, 498, 499, 500, 501,
	0, 502, 503, 504, 1145, 505, 506, 507, 508, 1034,
	509, 0, 510, 511, 517, 518, 512, 513, 519, 520,
	521, 522, 2498, 0, 525, 526, 524, 527, 528, 529,
	1087, 530, 531, 514, 515, 532, 533, 1146, 534, 535,
	536, 537, 538, 539, 1102, 0, 540, 0, 541, 542,
	543, 544, 516, 545, 550, 1149, 546, 547, 548, 549,
	1125, 552, 0, 553, 554, 1022, 551, 0, 555, 556,
	557, 558, 559, 560, 561, 341, 562, 0, 563, 1114,
	1115, 1116, 1117, 0, 572, 0, 564, 565, 566, 1126,
	567, 1127, 1044, 568, 569, 570, 571, 0, 573, 574,
	0, 1028, 575, 576, 577, 579, 580, 578, 581, 1088,
	582, 0, 0, 583, 584, 585, 641, 1111, 1148, 0,
	587, 586, 588, 644, 0, 0, 0, 0, 589, 590,
	645, 591, 2493, 593, 1025, 0, 0, 0, 0, 0,
	0, 0, 1021, 0, 0, 0, 0, 0, 0, 1019,
	1020, 0, 0, 0, 0, 0, 0, 0, 1050, 0,
	0, 2489, 1048, 2492, 2499, 1039, 1040, 1036, 1037, 1049,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 263, 262, 264, 265, 266, 267, 0, 268, 269,
	0, 0, 0, 0, 0, 1090, 1054, 0, 0, 0,
	270, 271, 1130, 272, 273, 274, 275, 276, 277, 595,
	1103, 0, 278, 1110, 279, 1109, 0, 1120, 280, 281,
	282, 283, 284, 285, 1056, 1089, 1023, 286, 1150, 1151,
	602, 0, 287, 288, 1096, 0, 1077, 0, 289, 290,
	291, 292, 293, 294, 295, 0, 0, 297, 298, 299,
	296, 300, 0, 301, 0, 302, 303, 304, 305, 306,
	307, 0, 308, 309, 310, 1131, 311, 312, 1080, 1078,
	1079, 1086, 1082, 1081, 1085, 313, 314, 315, 316, 1113,
	2495, 1107, 1106, 1027, 321, 318, 319, 0, 322, 320,
	0, 323, 324, 325, 0, 0, 326, 1098, 328, 0,
	329, 330, 0, 331, 332, 333, 0, 334, 335, 1033,
	336, 337, 338, 340, 342, 339, 343, 344, 345, 346,
	1121, 1122, 347, 1045, 258, 0, 0, 0, 0, 0,
	348, 349, 350, 1105, 0, 0, 0, 351, 0, 352,
	0, 0, 1132, 353, 354, 1118, 1119, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 363, 1128, 0, 1055,
	364, 0, 365, 366, 367, 2496, 369, 1091, 1092, 1095,
	445, 1134, 370, 371, 0, 372, 373, 374, 375, 0,
	0, 0, 259, 376, 377, 378, 380, 0, 1133, 379,
	1100, 1101, 0, 1061, 0, 381, 382, 1135, 1093, 1136,
	383, 384, 385, 1137, 386, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 0, 393, 395, 394, 0, 396,
	1129, 1138, 397, 398, 1139, 0, 399, 0, 0, 0,
	400, 401, 1084, 1083, 402, 403, 404, 405, 0, 406,
	407, 409, 412, 408, 410, 2497, 413, 2494, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	428, 0, 427, 1140, 429, 430, 431, 436, 438, 439,
	434, 435, 437, 440, 441, 433, 1141, 432, 1024, 260,
	1142, 442, 443, 1046, 1094, 444, 1108, 446, 447, 0,
	0, 448, 0, 0, 0, 450, 451, 452, 0, 0,
	453, 454, 624, 1143, 455, 1144, 1123, 456, 457, 449,
	458, 459, 460, 461, 462, 463, 464, 465, 0, 466,
	467, 626, 468, 469, 470, 627, 471, 472, 473, 1124,
	474, 629, 475, 476, 0, 477, 478, 0, 479, 480,
	481, 482, 483, 484, 485, 1104, 486, 488, 487, 489,
	0, 490, 0, 491, 492, 0, 0, 0, 0, 493,
	0, 495, 496, 497, 494, 498, 499, 500, 501, 0,
	502, 503, 504, 1145, 505, 506, 507, 508, 1034, 509,
	0, 510, 511, 517, 518, 512, 513, 519, 520, 521,
	522, 2498, 0, 525, 526, 524, 527, 528, 529, 1087,
	530, 531, 514, 515, 532, 533, 1146, 534, 535, 536,
	537, 538, 539, 1102, 0, 540, 0, 541, 542, 543,
	544, 516, 545, 550, 1149, 546, 547, 548, 549, 1125,
	552, 0, 553, 554, 1022, 551, 0, 555, 556, 557,
	558, 559, 560, 561, 341, 562, 0, 563, 1114, 1115,
	1116, 1117, 0, 572, 0, 564, 565, 566, 1126, 567,
	1127, 1044, 568, 569, 570, 571, 0, 573, 574, 0,
	1028, 575, 576, 577, 579, 580, 578, 581, 1088, 582,
	0, 0, 583, 584, 585, 641, 1111, 1148, 0, 587,
	586, 588, 644, 0, 0, 0, 0, 589, 590, 645,
	591, 2493, 593, 1025, 0, 0, 0, 0, 0, 0,
	0, 1021, 0, 0, 0, 0, 0, 0, 1019, 1020,
	1066, 1038, 1039, 1040, 1036, 1037, 1049, 1050, 0, 0,
	0, 1048, 0, 0, 0, 0, 0, 261, 263, 262,
	264, 265, 266, 267, 0, 268, 269, 0, 0, 0,
	0, 0, 1090, 1054, 0, 0, 0, 270, 271, 1130,
	272, 273, 274, 275, 276, 277, 595, 1103, 0, 278,
	1110, 279, 1109, 0, 1120, 280, 281, 282, 283, 284,
	285, 1056, 1089, 1023, 286, 1150, 1151, 602, 0, 287,
	288, 1096, 0, 1077, 0, 289, 290, 291, 292, 293,
	294, 295, 0, 0, 297, 298, 299, 296, 300, 0,
	301, 0, 302, 303, 304, 305, 306, 307, 0, 308,
	309, 310, 1131, 311, 312, 1080, 1078, 1079, 1086, 1082,
	1081, 1085, 313, 314, 315, 316, 1113, 317, 1107, 1106,
	1027, 321, 318, 319, 0, 322, 320, 0, 323, 324,
	325, 0, 0, 326, 1098, 328, 0, 329, 330, 0,
	331, 332, 333, 0, 334, 335, 1033, 336, 337, 338,
	340, 342, 339, 343, 344, 345, 346, 1121, 1122, 347,
	1045, 258, 0, 0, 0, 0, 0, 348, 349, 350,
	1105, 0, 0, 0, 351, 0, 352, 0, 0, 1132,
	353, 354, 1118, 1119, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 363, 1128, 0, 1055, 364, 0, 365,
	366, 367, 368, 369, 1091, 1092, 1095, 445, 1134, 370,
	371, 0, 372, 373, 374, 375, 0, 0, 0, 259,
	376, 377, 378, 380, 0, 1133, 379, 1100, 1101, 0,
	1061, 0, 381, 382, 1135, 1093, 1136, 383, 384, 385,
	1137, 386, 0, 0, 0, 387, 388, 389, 390, 391,
	392, 0, 393, 395, 394, 0, 396, 1129, 1138, 397,
	398, 1139, 0, 399, 0, 0, 0, 400, 401, 1084,
	1083, 402, 403, 404, 405, 0, 406, 407, 409, 412,
	408, 410, 411, 413, 426, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 428, 0, 427,
	1140, 429, 430, 431, 436, 438, 439, 434, 435, 437,
	440, 441, 433, 1141, 432, 1024, 260, 1142, 442, 443,
	1046, 1094, 444, 1108, 446, 447, 0, 0, 448, 0,
	0, 0, 450, 451, 452, 0, 0, 453, 454, 624,
	1143, 455, 1144, 1123, 456, 457, 449, 458, 459, 460,
	461, 462, 463, 464, 465, 0, 466, 467, 626, 468,
	469, 470, 627, 471, 472, 473, 1124, 474, 629, 475,
	476, 0, 477, 478, 0, 479, 480, 481, 482, 483,
	484, 485, 1104, 486, 488, 487, 489, 0, 490, 0,
	491, 492, 0, 0, 0, 0, 493, 0, 495, 496,
	497, 494, 498, 499, 500, 501, 0, 502, 503, 504,
	1145, 505, 506, 507, 508, 1034, 509, 0, 510, 511,
	517, 518, 512, 513, 519, 520, 521, 522, 523, 0,
	525, 526, 524, 527, 528, 529, 1087, 530, 531, 514,
	515, 532, 533, 1146, 534, 535, 536, 537, 538, 539,
	1102, 0, 540, 0, 541, 542, 543, 544, 516, 545,
	550, 1149, 546, 547, 548, 549, 1125, 552, 0, 553,
	554, 1022, 551, 0, 555, 556, 557, 558, 559, 560,
	561, 341, 562, 0, 563, 1114, 1115, 1116, 1117, 0,
	572, 0, 564, 565, 566, 1126, 567, 1127, 1044, 568,
	569, 570, 571, 0, 573, 574, 0, 1028, 575, 576,
	577, 579, 580, 578, 581, 1088, 582, 0, 0, 583,
	584, 585, 641, 1111, 1148, 0, 587, 586, 588, 644,
	0, 0, 0, 0, 589, 590, 645, 591, 592, 593,
	1025, 0, 0, 0, 0, 0, 0, 0, 1021, 0,
	0, 0, 0, 0, 0, 1019, 1020, 0, 0, 0,
	0, 0, 1783, 0, 1050, 0, 0, 0, 1048, 1066,
	1038, 1039, 1040, 1036, 1037, 1049, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 263, 262, 264,
	265, 266, 267, 2283, 268, 269, 0, 0, 0, 0,
	0, 1090, 1054, 0, 0, 0, 270, 271, 1130, 272,
	273, 274, 275, 276, 277, 595, 1103, 0, 278, 1110,
	279, 1109, 0, 1120, 280, 281, 282, 283, 284, 285,
	1056, 1089, 1023, 286, 1150, 1151, 602, 0, 287, 288,
	1096, 0, 1077, 0, 289, 290, 291, 292, 293, 294,
	295, 0, 0, 297, 298, 299, 296, 300, 0, 301,
	0, 302, 303, 304, 305, 306, 307, 0, 308, 309,
	310, 1131, 311, 312, 1080, 1078, 1079, 1086, 1082, 1081,
	1085, 313, 314, 315, 316, 1113, 317, 1107, 1106, 1027,
	321, 318, 319, 0, 322, 320, 0, 323, 324, 325,
	0, 0, 326, 1098, 328, 0, 329, 330, 0, 331,
	332, 333, 0, 334, 335, 1033, 336, 337, 338, 340,
	342, 339, 343, 344, 345, 346, 1121, 1122, 347, 1045,
	258, 0, 0, 0, 0, 0, 348, 349, 350, 1105,
	0, 0, 0, 351, 0, 352, 0, 0, 1132, 353,
	354, 1118, 1119, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 363, 1128, 0, 1055, 364, 0, 365, 366,
	367, 368, 369, 1091, 1092, 1095, 445, 1134, 370, 371,
	0, 372, 373, 374, 375, 0, 0, 0, 259, 376,
	377, 378, 380, 0, 1133, 379, 1100, 1101, 0, 1061,
	0, 381, 382, 1135, 1093, 1136, 383, 384, 385, 1137,
	386, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	0, 393, 395, 394, 0, 396, 1129, 1138, 397, 398,
	1139, 0, 399, 0, 0, 0, 400, 401, 1084, 1083,
	402, 403, 404, 405, 0, 406, 407, 409, 412, 408,
	410, 411, 413, 426, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 428, 0, 427, 1140,
	429, 430, 431, 436, 438, 439, 434, 435, 437, 440,
	441, 433, 1141, 432, 1024, 260, 1142, 442, 443, 1046,
	1094, 444, 1108, 446, 447, 0, 0, 448, 0, 0,
	0, 450, 451, 452, 0, 0, 453, 454, 624, 1143,
	455, 1144, 1123, 456, 457, 449, 458, 459, 460, 461,
	462, 463, 464, 465, 0, 466, 467, 626, 468, 469,
	470, 627, 471, 472, 473, 1124, 474, 629, 475, 476,
	0, 477, 478, 0, 479, 480, 481, 482, 483, 484,
	485, 1104, 486, 488, 487, 489, 0, 490, 0, 491,
	492, 0, 0, 0, 0, 493, 0, 495, 496, 497,
	494, 498, 499, 500, 501, 0, 502, 503, 504, 1145,
	505, 506, 507, 508, 1034, 509, 0, 510, 511, 517,
	518, 512, 513, 519, 520, 521, 522, 523, 0, 525,
	526, 524, 527, 528, 529, 1087, 530, 531, 514, 515,
	532, 533, 1146, 534, 535, 536, 537, 538, 539, 1102,
	0, 540, 0, 541, 542, 543, 544, 516, 545, 550,
	1149, 546, 547, 548, 549, 1125, 552, 0, 553, 554,
	1022, 551, 0, 555, 556, 557, 558, 559, 560, 561,
	341, 562, 0, 563, 1114, 1115, 1116, 1117, 0, 572,
	0, 564, 565, 566, 1126, 567, 1127, 1044, 568, 569,
	570, 571, 0, 573, 574, 0, 1028, 575, 576, 577,
	579, 580, 578, 581, 1088, 582, 0, 0, 583, 584,
	585, 641, 1111, 1148, 0, 587, 586, 588, 644, 0,
	0, 0, 0, 589, 590, 645, 591, 592, 593, 1025,
	0, 0, 0, 0, 0, 0, 0, 1021, 0, 0,
	0, 0, 0, 0, 1019, 1020, 0, 0, 0, 0,
	0, 0, 0, 1050, 0, 0, 1634, 1048, 1066, 1038,
	1039, 1040, 1036, 1037, 1049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 263, 262, 264, 265,
	266, 267, 0, 268, 269, 0, 0, 0, 0, 0,
	1090, 1054, 0, 0, 0, 270, 271, 1130, 272, 273,
	274, 275, 276, 277, 595, 1103, 0, 278, 1110, 279,
	1109, 0, 1120, 280, 281, 282, 283, 284, 285, 1056,
	1089, 1023, 286, 1150, 1151, 602, 0, 287, 288, 1096,
	0, 1077, 0, 289, 290, 291, 292, 293, 294, 295,
	0, 0, 297, 298, 299, 296, 300, 0, 301, 0,
	302, 303, 304, 305, 306, 307, 0, 308, 309, 310,
	1131, 311, 312, 1080, 1078, 1079, 1086, 1082, 1081, 1085,
	313, 314, 315, 316, 1113, 317, 1107, 1106, 1027, 321,
	318, 319, 0, 322, 320, 0, 323, 324, 325, 0,
	0, 326, 1098, 328, 0, 329, 330, 0, 331, 332,
	333, 0, 334, 335, 1033, 336, 337, 338, 340, 342,
	339, 343, 344, 345, 346, 1121, 1122, 347, 1045, 258,
	0, 0, 0, 0, 0, 348, 349, 350, 1105, 0,
	0, 0, 351, 0, 352, 0, 0, 1132, 353, 354,
	1118, 1119, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 363, 1128, 0, 1055, 364, 0, 365, 366, 367,
	368, 369, 1091, 1092, 1095, 445, 1134, 370, 371, 0,
	372, 373, 374, 375, 0, 0, 0, 259, 376, 377,
	378, 380, 0, 1133, 379, 1100, 1101, 0, 1061, 0,
	381, 382, 1135, 1093, 1136, 383, 384, 385, 1137, 386,
	0, 0, 0, 387, 388, 389, 390, 391, 392, 0,
	393, 395, 394, 0, 396, 1129, 1138, 397, 398, 1139,
	0, 399, 0, 0, 0, 400, 401, 1084, 1083, 402,
	403, 404, 405, 0, 406, 407, 409, 412, 408, 410,
	411, 413, 426, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 428, 0, 427, 1140, 429,
	430, 431, 436, 438, 439, 434, 435, 437, 440, 441,
	433, 1141, 432, 1024, 260, 1142, 442, 443, 1046, 1094,
	444, 1108, 446, 447, 0, 0, 448, 0, 0, 0,
	450, 451, 452, 0, 0, 453, 454, 624, 1143, 455,
	1144, 1123, 456, 457, 449, 458, 459, 460, 461, 462,
	463, 464, 465, 0, 466, 467, 626, 468, 469, 470,
	627, 471, 472, 473, 1124, 474, 629, 475, 476, 0,
	477, 478, 0, 479, 480, 481, 482, 483, 484, 485,
	1104, 486, 488, 487, 489, 0, 490, 0, 491, 492,
	0, 0, 0, 0, 493, 0, 495, 496, 497, 494,
	498, 499, 500, 501, 0, 502, 503, 504, 1145, 505,
	506, 507, 508, 1034, 509, 0, 510, 511, 517, 518,
	512, 513, 519, 520, 521, 522, 523, 0, 525, 526,
	524, 527, 528, 529, 1087, 530, 531, 514, 515, 532,
	533, 1146, 534, 535, 536, 537, 538, 539, 1102, 0,
	540, 0, 541, 542, 543, 544, 516, 545, 550, 1149,
	546, 547, 548, 549, 1125, 552, 0, 553, 554, 1022,
	551, 0, 555, 556, 557, 558, 559, 560, 561, 341,
	562, 0, 563, 1114, 1115, 1116, 1117, 0, 572, 0,
	564, 565, 566, 1126, 567, 1127, 1044, 568, 569, 570,
	571, 0, 573, 574, 0, 1028, 575, 576, 577, 579,
	580, 578, 581, 1088, 582, 0, 0, 583, 584, 585,
	641, 1111, 1148, 0, 587, 586, 588, 644, 0, 0,
	0, 0, 589, 590, 645, 591, 592, 593, 1025, 0,
	0, 0, 0, 0, 0, 0, 1021, 0, 0, 0,
	0, 0, 0, 1019, 1020, 0, 0, 0, 0, 0,
	0, 0, 1050, 0, 0, 1569, 1048, 1066, 1038, 1039,
	1040, 1036, 1037, 1049, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 1090,
	1054, 0, 0, 0, 270, 271, 1130, 272, 273, 274,
	275, 276, 277, 595, 1103, 0, 278, 1110, 279, 1109,
	0, 1120, 280, 281, 282, 283, 284, 285, 1056, 1089,
	1023, 286, 1150, 1151, 602, 0, 287, 288, 1096, 0,
	1077, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 1131,
	311, 312, 1080, 1078, 1079, 1086, 1082, 1081, 1085, 313,
	314, 315, 316, 1113, 317, 1107, 1106, 1027, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 1098, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 1033, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 1121, 1122, 347, 1045, 258, 0,
	0, 0, 0, 0, 348, 349, 350, 1105, 0, 0,
	0, 351, 0, 352, 0, 0, 1132, 353, 354, 1118,
	1119, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 1128, 0, 1055, 364, 0, 365, 366, 367, 368,
	369, 1091, 1092, 1095, 445, 1134, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 259, 376, 377, 378,
	380, 0, 1133, 379, 1100, 1101, 0, 1061, 0, 381,
	382, 1135, 1093, 1136, 383, 384, 385, 1137, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 1129, 1138, 397, 398, 1139, 0,
	399, 0, 0, 0, 400, 401, 1084, 1083, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 1140, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	1141, 432, 1024, 260, 1142, 442, 443, 1046, 1094, 444,
	1108, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 1143, 455, 1144,
	1123, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 1124, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 1104,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 1145, 505, 506,
	507, 508, 1034, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 1087, 530, 531, 514, 515, 532, 533,
	1146, 534, 535, 536, 537, 538, 539, 1102, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 1149, 546,
	547, 548, 549, 1125, 552, 0, 553, 554, 1022, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 1114, 1115, 1116, 1117, 0, 572, 0, 564,
	565, 566, 1126, 567, 1127, 1044, 568, 569, 570, 571,
	0, 573, 574, 0, 1028, 575, 576, 577, 579, 580,
	578, 581, 1088, 582, 0, 0, 583, 584, 585, 641,
	1111, 1148, 0, 587, 586, 588, 644, 0, 0, 0,
	0, 589, 590, 645, 591, 592, 593, 1025, 0, 0,
	0, 0, 0, 0, 0, 1021, 0, 0, 0, 0,
	0, 0, 1019, 1020, 0, 0, 0, 0, 0, 0,
	0, 1050, 0, 0, 1564, 1048, 1066, 1038, 1039, 1040,
	1036, 1037, 1049, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 263, 262, 264, 265, 266, 267,
	0, 268, 269, 0, 0, 0, 0, 0, 1090, 1054,
	0, 0, 0, 270, 271, 1130, 272, 273, 274, 275,
	276, 277, 595, 1103, 0, 278, 1110, 279, 1109, 0,
	1120, 280, 281, 282, 283, 284, 285, 1056, 1089, 1023,
	286, 1150, 1151, 602, 0, 287, 288, 1096, 0, 1077,
	0, 289, 290, 291, 292, 293, 294, 295, 0, 0,
	297, 298, 299, 296, 300, 0, 301, 0, 302, 303,
	304, 305, 306, 307, 0, 308, 309, 310, 1131, 311,
	312, 1080, 1078, 1079, 1086, 1082, 1081, 1085, 313, 314,
	315, 316, 1113, 317, 1107, 1106, 1027, 321, 318, 319,
	0, 322, 320, 0, 323, 324, 325, 0, 0, 326,
	1098, 328, 0, 329, 330, 0, 331, 332, 333, 0,
	334, 335, 1033, 336, 337, 338, 340, 342, 339, 343,
	344, 345, 346, 1121, 1122, 347, 1045, 258, 0, 0,
	0, 0, 0, 348, 349, 350, 1105, 0, 0, 0,
	351, 0, 352, 0, 0, 1132, 353, 354, 1118, 1119,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 363,
	1128, 0, 1055, 364, 0, 365, 366, 367, 368, 369,
	1091, 1092, 1095, 445, 1134, 370, 371, 0, 372, 373,
	374, 375, 0, 0, 0, 259, 376, 377, 378, 380,
	0, 1133, 379, 1100, 1101, 0, 1061, 0, 381, 382,
	1135, 1093, 1136, 383, 384, 385, 1137, 386, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 0, 393, 395,
	394, 0, 396, 1129, 1138, 397, 398, 1139, 0, 399,
	0, 0, 0, 400, 401, 1084, 1083, 402, 403, 404,
	405, 0, 406, 407, 409, 412, 408, 410, 411, 413,
	426, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 428, 0, 427, 1140, 429, 430, 431,
	436, 438, 439, 434, 435, 437, 440, 441, 433, 1141,
	432, 1024, 260, 1142, 442, 443, 1046, 1094, 444, 1108,
	446, 447, 0, 0, 448, 0, 0, 0, 450, 451,
	452, 0, 0, 453, 454, 624, 1143, 455, 1144, 1123,
	456, 457, 449, 458, 459, 460, 461, 462, 463, 464,
	465, 0, 466, 467, 626, 468, 469, 470, 627, 471,
	472, 473, 1124, 474, 629, 475, 476, 0, 477, 478,
	0, 479, 480, 481, 482, 483, 484, 485, 1104, 486,
	488, 487, 489, 0, 490, 0, 491, 492, 0, 0,
	0, 0, 493, 0, 495, 496, 497, 494, 498, 499,
	500, 501, 0, 502, 503, 504, 1145, 505, 506, 507,
	508, 1034, 509, 0, 510, 511, 517, 518, 512, 513,
	519, 520, 521, 522, 523, 0, 525, 526, 524, 527,
	528, 529, 1087, 530, 531, 514, 515, 532, 533, 1146,
	534, 535, 536, 537, 538, 539, 1102, 0, 540, 0,
	541, 542, 543, 544, 516, 545, 550, 1149, 546, 547,
	548, 549, 1125, 552, 0, 553, 554, 1022, 551, 0,
	555, 556, 557, 558, 559, 560, 561, 341, 562, 0,
	563, 1114, 1115, 1116, 1117, 0, 572, 0, 564, 565,
	566, 1126, 567, 1127, 1044, 568, 569, 570, 571, 0,
	573, 574, 0, 1028, 575, 576, 577, 579, 580, 578,
	581, 1088, 582, 0, 0, 583, 584, 585, 641, 1111,
	1148, 0, 587, 586, 588, 644, 0, 0, 0, 0,
	589, 590, 645, 591, 592, 593, 1025, 0, 0, 0,
	0, 0, 0, 0, 1021, 0, 0, 0, 0, 0,
	0, 1019, 1020, 0, 0, 0, 0, 0, 0, 0,
	1050, 0, 0, 1555, 1048, 1066, 1038, 1039, 1040, 1036,
	1037, 1049, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 263, 262, 264, 265, 266, 267, 0,
	268, 269, 0, 0, 0, 0, 0, 1090, 1054, 0,
	0, 0, 270, 271, 1130, 272, 273, 274, 275, 276,
	277, 595, 1103, 0, 278, 1110, 279, 1109, 0, 1120,
	280, 281, 282, 283, 284, 285, 1056, 1089, 1023, 286,
	1150, 1151, 602, 0, 287, 288, 1096, 0, 1077, 0,
	289, 290, 291, 292, 293, 294, 295, 0, 0, 297,
	298, 299, 296, 300, 0, 301, 0, 302, 303, 304,
	305, 306, 307, 0, 308, 309, 310, 1131, 311, 312,
	1080, 1078, 1079, 1086, 1082, 1081, 1085, 313, 314, 315,
	316, 1113, 317, 1107, 1106, 1027, 321, 318, 319, 0,
	322, 320, 0, 323, 324, 325, 0, 0, 326, 1098,
	328, 0, 329, 330, 0, 331, 332, 333, 0, 334,
	335, 1033, 336, 337, 338, 340, 342, 339, 343, 344,
	345, 346, 1121, 1122, 347, 1045, 258, 0, 0, 0,
	0, 0, 348, 349, 350, 1105, 0, 0, 0, 351,
	0, 352, 0, 0, 1132, 353, 354, 1118, 1119, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 363, 1128,
	0, 1055, 364, 0, 365, 366, 367, 368, 369, 1091,
	1092, 1095, 445, 1134, 370, 371, 0, 372, 373, 374,
	375, 0, 0, 0, 259, 376, 377, 378, 380, 0,
	1133, 379, 1100, 1101, 0, 1061, 0, 381, 382, 1135,
	1093, 1136, 383, 384, 385, 1137, 386, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 0, 393, 395, 394,
	0, 396, 1129, 1138, 397, 398, 1139, 0, 399, 0,
	0, 0, 400, 401, 1084, 1083, 402, 403, 404, 405,
	0, 406, 407, 409, 412, 408, 410, 411, 413, 426,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 428, 0, 427, 1140, 429, 430, 431, 436,
	438, 439, 434, 435, 437, 440, 441, 433, 1141, 432,
	1024, 260, 1142, 442, 443, 1046, 1094, 444, 1108, 446,
	447, 0, 0, 448, 0, 0, 0, 450, 451, 452,
	0, 0, 453, 454, 624, 1143, 455, 1144, 1123, 456,
	457, 449, 458, 459, 460, 461, 462, 463, 464, 465,
	0, 466, 467, 626, 468, 469, 470, 627, 471, 472,
	473, 1124, 474, 629, 475, 476, 0, 477, 478, 0,
	479, 480, 481, 482, 483, 484, 485, 1104, 486, 488,
	487, 489, 0, 490, 0, 491, 492, 0, 0, 0,
	0, 493, 0, 495, 496, 497, 494, 498, 499, 500,
	501, 0, 502, 503, 504, 1145, 505, 506, 507, 508,
	1034, 509, 0, 510, 511, 517, 518, 512, 513, 519,
	520, 521, 522, 523, 0, 525, 526, 524, 527, 528,
	529, 1087, 530, 531, 514, 515, 532, 533, 1146, 534,
	535, 536, 537, 538, 539, 1102, 0, 540, 0, 541,
	542, 543, 544, 516, 545, 550, 1149, 546, 547, 548,
	549, 1125, 552, 0, 553, 554, 1022, 551, 0, 555,
	556, 557, 558, 559, 560, 561, 341, 562, 0, 563,
	1114, 1115, 1116, 1117, 0, 572, 0, 564, 565, 566,
	1126, 567, 1127, 1044, 568, 569, 570, 571, 0, 573,
	574, 0, 1028, 575, 576, 577, 579, 580, 578, 581,
	1088, 582, 0, 0, 583, 584, 585, 641, 1111, 1148,
	0, 587, 586, 588, 644, 0, 0, 0, 0, 589,
	590, 645, 591, 592, 593, 1025, 0, 0, 0, 0,
	0, 0, 0, 1021, 0, 0, 0, 0, 0, 0,
	1019, 1020, 0, 0, 0, 0, 0, 0, 0, 1050,
	0, 0, 1550, 1048, 1066, 1038, 1039, 1040, 1036, 1037,
	1049, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 263, 262, 264, 265, 266, 267, 0, 268,
	269, 0, 0, 0, 0, 0, 1090, 1054, 0, 0,
	0, 270, 271, 1130, 272, 273, 274, 275, 276, 277,
	595, 1103, 0, 278, 1110, 279, 1109, 0, 1120, 280,
	281, 282, 283, 284, 285, 1056, 1089, 1023, 286, 1150,
	1151, 602, 0, 287, 288, 1096, 0, 1077, 0, 289,
	290, 291, 292, 293, 294, 295, 0, 0, 297, 298,
	299, 296, 300, 0, 301, 0, 302, 303, 304, 305,
	306, 307, 0, 308, 309, 310, 1131, 311, 312, 1080,
	1078, 1079, 1086, 1082, 1081, 1085, 313, 314, 315, 316,
	1113, 317, 1107, 1106, 1027, 321, 318, 319, 0, 322,
	320, 0, 323, 324, 325, 0, 0, 326, 1098, 328,
	0, 329, 330, 0, 331, 332, 333, 0, 334, 335,
	1033, 336, 337, 338, 340, 342, 339, 343, 344, 345,
	346, 1121, 1122, 347, 1045, 258, 0, 0, 0, 0,
	0, 348, 349, 350, 1105, 0, 0, 0, 351, 0,
	352, 0, 0, 1132, 353, 354, 1118, 1119, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 363, 1128, 0,
	1055, 364, 0, 365, 366, 367, 368, 369, 1091, 1092,
	1095, 445, 1134, 370, 371, 0, 372, 373, 374, 375,
	0, 0, 0, 259, 376, 377, 378, 380, 0, 1133,
	379, 1100, 1101, 0, 1061, 0, 381, 382, 1135, 1093,
	1136, 383, 384, 385, 1137, 386, 0, 0, 0, 387,
	388, 389, 390, 391, 392, 0, 393, 395, 394, 0,
	396, 1129, 1138, 397, 398, 1139, 0, 399, 0, 0,
	0, 400, 401, 1084, 1083, 402, 403, 404, 405, 0,
	406, 407, 409, 412, 408, 410, 411, 413, 426, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 428, 0, 427, 1140, 429, 430, 431, 436, 438,
	439, 434, 435, 437, 440, 441, 433, 1141, 432, 1024,
	260, 1142, 442, 443, 1046, 1094, 444, 1108, 446, 447,
	0, 0, 448, 0, 0, 0, 450, 451, 452, 0,
	0, 453, 454, 624, 1143, 455, 1144, 1123, 456, 457,
	449, 458, 459, 460, 461, 462, 463, 464, 465, 0,
	466, 467, 626, 468, 469, 470, 627, 471, 472, 473,
	1124, 474, 629, 475, 476, 0, 477, 478, 0, 479,
	480, 481, 482, 483, 484, 485, 1104, 486, 488, 487,
	489, 0, 490, 0, 491, 492, 0, 0, 0, 0,
	493, 0, 495, 496, 497, 494, 498, 499, 500, 501,
	0, 502, 503, 504, 1145, 505, 506, 507, 508, 1034,
	509, 0, 510, 511, 517, 518, 512, 513, 519, 520,
	521, 522, 523, 0, 525, 526, 524, 527, 528, 529,
	1087, 530, 531, 514, 515, 532, 533, 1146, 534, 535,
	536, 537, 538, 539, 1102, 0, 540, 0, 541, 542,
	543, 544, 516, 545, 550, 1149, 546, 547, 548, 549,
	1125, 552, 0, 553, 554, 1022, 551, 0, 555, 556,
	557, 558, 559, 560, 561, 341, 562, 0, 563, 1114,
	1115, 1116, 1117, 0, 572, 0, 564, 565, 566, 1126,
	567, 1127, 1044, 568, 569, 570, 571, 0, 573, 574,
	0, 1028, 575, 576, 577, 579, 580, 578, 581, 1088,
	582, 0, 0, 583, 584, 585, 641, 1111, 1148, 0,
	587, 586, 588, 644, 0, 0, 0, 0, 589, 590,
	645, 591, 592, 593, 1025, 0, 0, 0, 0, 0,
	0, 0, 1021, 0, 0, 0, 0, 0, 0, 1019,
	1020, 0, 0, 0, 0, 0, 0, 0, 1050, 0,
	0, 1462, 1048, 1066, 1038, 1039, 1040, 1036, 1037, 1049,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 263, 262, 264, 265, 266, 267, 0, 268, 269,
	0, 0, 0, 0, 0, 1090, 1054, 0, 0, 0,
	270, 271, 1130, 272, 273, 274, 275, 276, 277, 595,
	1103, 0, 278, 1110, 279, 1109, 0, 1120, 280, 281,
	282, 283, 284, 285, 1056, 1089, 1023, 286, 1150, 1151,
	602, 0, 287, 288, 1096, 0, 1077, 0, 289, 290,
	291, 292, 293, 294, 295, 0, 0, 297, 298, 299,
	296, 300, 0, 301, 0, 302, 303, 304, 305, 306,
	307, 0, 308, 309, 310, 1131, 311, 312, 1080, 1078,
	1079, 1086, 1082, 1081, 1085, 313, 314, 315, 316, 1113,
	317, 1107, 1106, 1027, 321, 318, 319, 0, 322, 320,
	0, 323, 324, 325, 0, 0, 326, 1098, 328, 0,
	329, 330, 0, 331, 332, 333, 0, 334, 335, 1033,
	336, 337, 338, 340, 342, 339, 343, 344, 345, 346,
	1121, 1122, 347, 1045, 258, 0, 0, 0, 0, 0,
	348, 349, 350, 1105, 0, 0, 0, 351, 0, 352,
	0, 0, 1132, 353, 354, 1118, 1119, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 363, 1128, 0, 1055,
	364, 0, 365, 366, 367, 368, 369, 1461, 1092, 1095,
	445, 1134, 370, 371, 0, 372, 373, 374, 375, 0,
	0, 0, 259, 376, 377, 378, 380, 0, 1133, 379,
	1100, 1101, 0, 1061, 0, 381, 382, 1135, 1093, 1136,
	383, 384, 385, 1137, 386, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 0, 393, 395, 394, 0, 396,
	1129, 1138, 397, 398, 1139, 0, 399, 0, 0, 0,
	400, 401, 1084, 1083, 402, 403, 404, 405, 0, 406,
	407, 409, 412, 408, 410, 411, 413, 426, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	428, 0, 427, 1140, 429, 430, 431, 436, 438, 439,
	434, 435, 437, 440, 441, 433, 1141, 432, 1024, 260,
	1142, 442, 443, 1046, 1094, 444, 1108, 446, 447, 0,
	0, 448, 0, 0, 0, 450, 451, 452, 0, 0,
	453, 454, 624, 1143, 455, 1144, 1123, 456, 457, 449,
	458, 459, 460, 461, 462, 463, 464, 465, 0, 466,
	467, 626, 468, 469, 470, 627, 471, 472, 473, 1124,
	474, 629, 475, 476, 0, 477, 478, 0, 479, 480,
	481, 482, 483, 484, 485, 1104, 486, 488, 487, 489,
	0, 490, 0, 491, 492, 0, 0, 0, 0, 493,
	0, 495, 496, 497, 494, 498, 499, 500, 501, 0,
	502, 503, 504, 1145, 505, 506, 507, 508, 1034, 509,
	0, 510, 511, 517, 518, 512, 513, 519, 520, 521,
	522, 523, 0, 525, 526, 524, 527, 528, 529, 1087,
	530, 531, 514, 515, 532, 533, 1146, 534, 535, 536,
	537, 538, 539, 1102, 0, 540, 0, 541, 542, 543,
	544, 516, 545, 550, 1149, 546, 547, 548, 549, 1125,
	552, 0, 553, 554, 1022, 551, 0, 555, 556, 557,
	558, 559, 560, 561, 341, 562, 0, 563, 1114, 1115,
	1116, 1117, 0, 572, 0, 564, 565, 566, 1126, 567,
	1127, 1044, 568, 569, 570, 571, 0, 573, 574, 0,
	1028, 575, 576, 577, 579, 580, 578, 581, 1088, 582,
	0, 0, 583, 584, 585, 641, 1111, 1148, 0, 587,
	586, 588, 644, 0, 0, 0, 0, 589, 590, 645,
	591, 592, 593, 1025, 0, 0, 0, 0, 0, 0,
	0, 1021, 0, 0, 0, 0, 0, 0, 1019, 1020,
	0, 0, 0, 0, 0, 0, 0, 1050, 0, 0,
	1456, 1048, 1066, 1038, 1039, 1040, 1036, 1037, 1049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 0,
	0, 0, 0, 0, 1090, 1054, 0, 0, 0, 270,
	271, 1130, 272, 273, 274, 275, 276, 277, 595, 1103,
	0, 278, 1110, 279, 1109, 0, 1120, 280, 281, 282,
	283, 284, 285, 1056, 1089, 1023, 286, 1150, 1151, 602,
	0, 287, 288, 1096, 0, 1077, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 1131, 311, 312, 1080, 1078, 1079,
	1086, 1082, 1081, 1085, 313, 314, 315, 316, 1113, 317,
	1107, 1106, 1027, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 1098, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 1033, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 1121,
	1122, 347, 1045, 258, 0, 0, 0, 0, 0, 348,
	349, 350, 1105, 0, 0, 0, 351, 0, 352, 0,
	0, 1132, 353, 354, 1118, 1119, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 1128, 0, 1055, 364,
	0, 365, 366, 367, 368, 369, 1455, 1092, 1095, 445,
	1134, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 259, 376, 377, 378, 380, 0, 1133, 379, 1100,
	1101, 0, 1061, 0, 381, 382, 1135, 1093, 1136, 383,
	384, 385, 1137, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 1129,
	1138, 397, 398, 1139, 0, 399, 0, 0, 0, 400,
	401, 1084, 1083, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 1140, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 1141, 432, 1024, 260, 1142,
	442, 443, 1046, 1094, 444, 1108, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 1143, 455, 1144, 1123, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 1124, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 1104, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 1145, 505, 506, 507, 508, 1034, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 1087, 530,
	531, 514, 515, 532, 533, 1146, 534, 535, 536, 537,
	538, 539, 1102, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 1149, 546, 547, 548, 549, 1125, 552,
	0, 553, 554, 1022, 551, 0, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 1114, 1115, 1116,
	1117, 0, 572, 0, 564, 565, 566, 1126, 567, 1127,
	1044, 568, 569, 570, 571, 0, 573, 574, 0, 1028,
	575, 576, 577, 579, 580, 578, 581, 1088, 582, 0,
	0, 583, 584, 585, 641, 1111, 1148, 0, 587, 586,
	588, 644, 0, 0, 0, 0, 589, 590, 645, 591,
	592, 593, 1025, 0, 0, 0, 0, 0, 0, 0,
	1021, 0, 0, 0, 0, 0, 0, 1019, 1020, 0,
	0, 0, 0, 0, 0, 0, 1050, 0, 0, 1449,
	1048, 1066, 1038, 1039, 1040, 1036, 1037, 1049, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 263,
	262, 264, 265, 266, 267, 0, 268, 269, 0, 0,
	0, 0, 0, 1090, 1054, 0, 0, 0, 270, 271,
	1130, 272, 273, 274, 275, 276, 277, 595, 1103, 0,
	278, 1110, 279, 1109, 0, 1120, 280, 281, 282, 283,
	284, 285, 1056, 1089, 1023, 286, 1150, 1151, 602, 0,
	287, 288, 1096, 0, 1077, 0, 289, 290, 291, 292,
	293, 294, 295, 0, 0, 297, 298, 299, 296, 300,
	0, 301, 0, 302, 303, 304, 305, 306, 307, 0,
	308, 309, 310, 1131, 311, 312, 1080, 1078, 1079, 1086,
	1082, 1081, 1085, 313, 314, 315, 316, 1113, 317, 1107,
	1106, 1027, 321, 318, 319, 0, 322, 320, 0, 323,
	324, 325, 0, 0, 326, 1098, 328, 0, 329, 330,
	0, 331, 332, 333, 0, 334, 335, 1033, 336, 337,
	338, 340, 342, 339, 343, 344, 345, 346, 1121, 1122,
	347, 1045, 258, 0, 0, 0, 0, 0, 348, 349,
	350, 1105, 0, 0, 0, 351, 0, 352, 0, 0,
	1132, 353, 354, 1118, 1119, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 363, 1128, 0, 1055, 364, 0,
	365, 366, 367, 368, 369, 1091, 1092, 1095, 445, 1134,
	370, 371, 0, 372, 373, 374, 375, 0, 0, 0,
	259, 376, 377, 378, 380, 0, 1133, 379, 1100, 1101,
	0, 1061, 0, 381, 382, 1135, 1093, 1136, 383, 384,
	385, 1137, 386, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 0, 393, 395, 394, 0, 396, 1129, 1138,
	397, 398, 1139, 0, 399, 0, 0, 0, 400, 401,
	1084, 1083, 402, 403, 404, 405, 0, 406, 407, 409,
	412, 408, 410, 411, 413, 426, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 428, 0,
	427, 1140, 429, 430, 431, 436, 438, 439, 434, 435,
	437, 440, 441, 433, 1141, 432, 1024, 260, 1142, 442,
	443, 1046, 1094, 444, 1108, 446, 447, 0, 0, 448,
	0, 0, 0, 450, 451, 452, 0, 0, 453, 454,
	624, 1143, 455, 1144, 1123, 456, 457, 449, 458, 459,
	460, 461, 462, 463, 464, 465, 0, 466, 467, 626,
	468, 469, 470, 627, 471, 472, 473, 1124, 474, 629,
	475, 476, 0, 477, 478, 0, 479, 480, 481, 482,
	483, 484, 485, 1104, 486, 488, 487, 489, 0, 490,
	0, 491, 492, 0, 0, 0, 0, 493, 0, 495,
	496, 497, 494, 498, 499, 500, 501, 0, 502, 503,
	504, 1145, 505, 506, 507, 508, 1034, 509, 0, 510,
	511, 517, 518, 512, 513, 519, 520, 521, 522, 523,
	0, 525, 526, 524, 527, 528, 529, 1087, 530, 531,
	514, 515, 532, 533, 1146, 534, 535, 536, 537, 538,
	539, 1102, 0, 540, 0, 541, 542, 543, 544, 516,
	545, 550, 1149, 546, 547, 548, 549, 1125, 552, 0,
	553, 554, 1022, 551, 0, 555, 556, 557, 558, 559,
	560, 561, 341, 562, 0, 563, 1114, 1115, 1116, 1117,
	0, 572, 0, 564, 565, 566, 1126, 567, 1127, 1044,
	568, 569, 570, 571, 0, 573, 574, 0, 1028, 575,
	576, 577, 579, 580, 578, 581, 1088, 582, 0, 0,
	583, 584, 585, 641, 1111, 1148, 0, 587, 586, 588,
	644, 0, 0, 0, 0, 589, 590, 645, 591, 592,
	593, 1025, 0, 0, 0, 0, 0, 0, 0, 1021,
	0, 0, 0, 0, 0, 0, 1019, 1020, 0, 0,
	0, 0, 0, 0, 0, 1050, 0, 0, 1274, 1048,
	1066, 1038, 1039, 1040, 1036, 1037, 1049, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 263, 262,
	264, 265, 266, 267, 0, 268, 269, 0, 0, 0,
	0, 0, 1090, 1054, 0, 0, 0, 270, 271, 1130,
	272, 273, 274, 275, 276, 277, 595, 1103, 0, 278,
	1110, 279, 1109, 0, 1120, 280, 281, 282, 283, 284,
	285, 1056, 1089, 1023, 286, 1150, 1151, 602, 0, 287,
	288, 1096, 0, 1077, 0, 289, 290, 291, 292, 293,
	294, 295, 0, 0, 297, 298, 299, 296, 300, 0,
	301, 0, 302, 303, 304, 305, 306, 307, 0, 308,
	309, 310, 1131, 311, 312, 1080, 1078, 1079, 1086, 1082,
	1081, 1085, 313, 314, 315, 316, 1113, 317, 1107, 1106,
	1027, 321, 318, 319, 0, 322, 320, 0, 323, 324,
	325, 0, 0, 326, 1098, 328, 0, 329, 330, 0,
	331, 332, 333, 0, 334, 335, 1033, 336, 337, 338,
	340, 342, 339, 343, 344, 345, 346, 1121, 1122, 347,
	1045, 258, 0, 0, 0, 0, 0, 348, 349, 350,
	1105, 0, 0, 0, 351, 0, 352, 0, 0, 1132,
	353, 354, 1118, 1119, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 363, 1128, 0, 1055, 364, 0, 365,
	366, 367, 368, 369, 1091, 1092, 1095, 445, 1134, 370,
	371, 0, 372, 373, 374, 375, 0, 0, 0, 259,
	376, 377, 378, 380, 0, 1133, 379, 1100, 1101, 0,
	1061, 0, 381, 382, 1135, 1093, 1136, 383, 384, 385,
	1137, 386, 0, 0, 0, 387, 388, 389, 390, 391,
	392, 0, 393, 395, 394, 0, 396, 1129, 1138, 397,
	398, 1139, 0, 399, 0, 0, 0, 400, 401, 1084,
	1083, 402, 403, 404, 405, 0, 406, 407, 409, 412,
	408, 410, 411, 413, 426, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 428, 0, 427,
	1140, 429, 430, 431, 436, 438, 439, 434, 435, 437,
	440, 441, 433, 1141, 432, 1024, 260, 1142, 442, 443,
	1046, 1094, 444, 1108, 446, 447, 0, 0, 448, 0,
	0, 0, 450, 451, 452, 0, 0, 453, 454, 624,
	1143, 455, 1144, 1123, 456, 457, 449, 458, 459, 460,
	461, 462, 463, 464, 465, 0, 466, 467, 626, 468,
	469, 470, 627, 471, 472, 473, 1124, 474, 629, 475,
	476, 0, 477, 478, 0, 479, 480, 481, 482, 483,
	484, 485, 1104, 486, 488, 487, 489, 0, 490, 0,
	491, 492, 0, 0, 0, 0, 493, 0, 495, 496,
	497, 494, 498, 499, 500, 501, 0, 502, 503, 504,
	1145, 505, 506, 507, 508, 1034, 509, 0, 510, 511,
	517, 518, 512, 513, 519, 520, 521, 522, 523, 0,
	525, 526, 524, 527, 528, 529, 1087, 530, 531, 514,
	515, 532, 533, 1146, 534, 535, 536, 537, 538, 539,
	1102, 0, 540, 0, 541, 542, 543, 544, 516, 545,
	550, 1149, 546, 547, 548, 549, 1125, 552, 0, 553,
	554, 1022, 551, 0, 555, 556, 557, 558, 559, 560,
	561, 341, 562, 0, 563, 1114, 1115, 1116, 1117, 0,
	572, 0, 564, 565, 566, 1126, 567, 1127, 1044, 568,
	569, 570, 571, 0, 573, 574, 0, 1028, 575, 576,
	577, 579, 580, 578, 581, 1088, 582, 0, 0, 583,
	584, 585, 641, 1111, 1148, 0, 587, 586, 588, 644,
	0, 0, 0, 0, 589, 590, 645, 591, 592, 593,
	1025, 0, 0, 0, 0, 0, 0, 0, 1021, 0,
	0, 0, 0, 0, 0, 1019, 1020, 1066, 1038, 1039,
	1040, 1036, 1037, 1049, 1050, 0, 0, 0, 1048, 0,
	0, 0, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 1090,
	1054, 0, 0, 0, 270, 271, 1130, 272, 273, 274,
	275, 276, 277, 595, 1103, 0, 278, 1110, 279, 1109,
	0, 1120, 280, 281, 282, 283, 284, 285, 1056, 1089,
	1023, 286, 1150, 1151, 602, 0, 287, 288, 1096, 0,
	1077, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 1131,
	311, 312, 1080, 1078, 1079, 1086, 1082, 1081, 1085, 313,
	314, 315, 316, 1113, 317, 1107, 1106, 1027, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 1098, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 1033, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 1121, 1122, 347, 1045, 258, 0,
	0, 0, 0, 0, 348, 349, 350, 1105, 0, 0,
	0, 351, 0, 352, 0, 0, 1132, 353, 354, 1118,
	1119, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 1128, 0, 1055, 364, 0, 365, 366, 367, 368,
	369, 1091, 1092, 1095, 445, 1134, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 259, 376, 377, 378,
	380, 0, 1133, 379, 1100, 1101, 0, 1061, 0, 381,
	382, 1135, 1093, 1136, 383, 384, 385, 1137, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 1129, 1138, 397, 398, 1139, 0,
	399, 0, 0, 0, 400, 401, 1084, 1083, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 1140, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	1141, 432, 1024, 260, 1142, 442, 443, 1046, 1094, 444,
	1108, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 1143, 455, 1144,
	1123, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 1124, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 1104,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 1145, 505, 506,
	507, 508, 1034, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 1087, 530, 531, 514, 515, 532, 533,
	1146, 534, 535, 536, 537, 538, 539, 1102, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 1149, 546,
	547, 548, 549, 1125, 552, 0, 553, 554, 1022, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 1114, 1115, 1116, 1117, 0, 572, 0, 564,
	565, 566, 1126, 567, 1127, 1044, 568, 569, 570, 571,
	0, 573, 574, 0, 1028, 575, 576, 577, 579, 580,
	578, 581, 1088, 582, 0, 0, 583, 584, 585, 641,
	1111, 1148, 0, 587, 586, 588, 644, 0, 0, 0,
	0, 589, 590, 645, 591, 592, 593, 1025, 0, 0,
	0, 0, 0, 0, 0, 1021, 0, 0, 0, 0,
	0, 0, 1019, 1020, 1066, 1038, 1039, 1040, 1036, 1037,
	1049, 1050, 0, 0, 0, 1048, 0, 0, 0, 0,
	0, 261, 263, 262, 264, 265, 266, 267, 0, 268,
	269, 0, 0, 0, 0, 0, 1090, 1054, 0, 0,
	0, 270, 271, 1130, 272, 273, 274, 275, 276, 277,
	595, 1103, 0, 278, 1110, 279, 1109, 0, 1120, 280,
	281, 282, 283, 284, 285, 1056, 1089, 1023, 286, 1150,
	1151, 602, 0, 287, 288, 1096, 0, 1077, 0, 289,
	290, 291, 292, 293, 294, 295, 0, 0, 297, 298,
	299, 296, 300, 0, 301, 0, 302, 303, 304, 305,
	306, 307, 0, 308, 309, 310, 1131, 311, 4325, 1080,
	1078, 1079, 1086, 1082, 1081, 1085, 313, 314, 315, 316,
	1113, 317, 1107, 1106, 1027, 321, 318, 319, 0, 322,
	320, 0, 323, 324, 325, 0, 0, 326, 1098, 328,
	0, 329, 330, 0, 331, 332, 333, 0, 334, 335,
	1033, 336, 337, 338, 340, 342, 339, 343, 344, 345,
	346, 1121, 1122, 347, 1045, 258, 0, 0, 0, 0,
	0, 348, 349, 350, 1105, 0, 0, 0, 351, 0,
	352, 0, 0, 1132, 353, 354, 1118, 1119, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 363, 1128, 0,
	1055, 364, 0, 365, 366, 367, 368, 369, 1091, 1092,
	1095, 445, 1134, 370, 371, 0, 372, 373, 374, 375,
	0, 0, 0, 259, 376, 377, 378, 380, 0, 1133,
	379, 1100, 1101, 0, 1061, 0, 381, 382, 1135, 1093,
	1136, 383, 384, 385, 1137, 386, 0, 0, 0, 387,
	388, 389, 390, 391, 392, 0, 393, 395, 394, 0,
	396, 1129, 1138, 397, 398, 1139, 0, 399, 0, 0,
	0, 400, 401, 1084, 1083, 402, 403, 404, 405, 0,
	406, 407, 409, 412, 408, 410, 411, 413, 426, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 428, 0, 427, 1140, 429, 430, 431, 436, 438,
	439, 434, 435, 437, 440, 441, 433, 1141, 432, 1024,
	260, 1142, 442, 443, 1046, 1094, 444, 1108, 446, 447,
	0, 0, 448, 0, 0, 0, 450, 451, 452, 0,
	0, 453, 454, 624, 1143, 455, 1144, 1123, 456, 457,
	449, 458, 459, 460, 461, 462, 463, 464, 465, 0,
	466, 467, 626, 468, 469, 470, 627, 471, 472, 473,
	1124, 474, 629, 475, 476, 0, 477, 478, 0, 479,
	480, 481, 482, 483, 484, 485, 1104, 486, 488, 487,
	489, 0, 490, 0, 491, 492, 0, 0, 0, 0,
	493, 0, 495, 496, 497, 494, 498, 499, 500, 501,
	0, 502, 503, 504, 1145, 505, 506, 507, 508, 1034,
	509, 0, 510, 511, 517, 518, 512, 513, 519, 520,
	521, 522, 523, 0, 525, 526, 524, 527, 528, 529,
	1087, 530, 531, 514, 515, 532, 533, 1146, 534, 535,
	536, 537, 538, 539, 1102, 0, 540, 0, 541, 542,
	543, 544, 516, 545, 550, 1149, 546, 547, 548, 549,
	1125, 552, 0, 553, 554, 1022, 551, 0, 555, 556,
	557, 558, 559, 560, 561, 341, 562, 0, 563, 1114,
	1115, 1116, 1117, 0, 572, 0, 564, 565, 566, 1126,
	567, 1127, 1044, 568, 569, 570, 571, 0, 4324, 574,
	0, 1028, 575, 576, 577, 579, 580, 578, 581, 1088,
	582, 0, 0, 583, 584, 585, 641, 1111, 1148, 0,
	587, 586, 588, 644, 0, 0, 0, 0, 589, 590,
	645, 591, 592, 593, 1025, 0, 0, 0, 0, 0,
	0, 0, 1021, 0, 0, 0, 0, 0, 0, 1019,
	1020, 1066, 1038, 1039, 1040, 1036, 1037, 1049, 1050, 0,
	0, 0, 1048, 0, 0, 0, 0, 0, 261, 263,
	262, 264, 265, 266, 267, 0, 268, 269, 0, 0,
	0, 0, 0, 1090, 1054, 0, 0, 0, 270, 271,
	1130, 272, 273, 274, 275, 276, 277, 4323, 1103, 0,
	278, 1110, 279, 1109, 0, 1120, 280, 281, 282, 283,
	284, 285, 1056, 1089, 1023, 286, 1150, 1151, 602, 0,
	287, 288, 1096, 0, 1077, 0, 289, 290, 291, 292,
	293, 294, 295, 0, 0, 297, 298, 299, 296, 300,
	0, 301, 0, 302, 303, 304, 305, 306, 307, 0,
	308, 309, 310, 1131, 311, 4325, 1080, 1078, 1079, 1086,
	1082, 1081, 1085, 313, 314, 315, 316, 1113, 317, 1107,
	1106, 1027, 321, 318, 319, 0, 322, 320, 0, 323,
	324, 325, 0, 0, 326, 1098, 328, 0, 329, 330,
	0, 331, 332, 333, 0, 334, 335, 1033, 336, 337,
	338, 340, 342, 339, 343, 344, 345, 346, 1121, 1122,
	347, 1045, 258, 0, 0, 0, 0, 0, 348, 349,
	350, 1105, 0, 0, 0, 351, 0, 352, 0, 0,
	1132, 353, 354, 1118, 1119, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 363, 1128, 0, 1055, 364, 0,
	365, 366, 367, 368, 369, 1091, 1092, 1095, 445, 1134,
	370, 371, 0, 372, 373, 374, 375, 0, 0, 0,
	259, 376, 377, 378, 380, 0, 1133, 379, 1100, 1101,
	0, 1061, 0, 381, 382, 1135, 1093, 1136, 383, 384,
	385, 1137, 386, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 0, 393, 395, 394, 0, 396, 1129, 1138,
	397, 398, 1139, 0, 399, 0, 0, 0, 400, 401,
	1084, 1083, 402, 403, 404, 405, 0, 406, 407, 409,
	412, 408, 410, 411, 413, 426, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 428, 0,
	427, 1140, 429, 430, 431, 436, 438, 439, 434, 435,
	437, 440, 441, 433, 1141, 432, 1024, 260, 1142, 442,
	443, 1046, 1094, 444, 1108, 446, 447, 0, 0, 448,
	0, 0, 0, 450, 451, 452, 0, 0, 453, 454,
	624, 1143, 455, 1144, 1123, 456, 457, 449, 458, 459,
	460, 461, 462, 463, 464, 465, 0, 466, 467, 626,
	468, 469, 470, 627, 471, 472, 473, 1124, 474, 629,
	475, 476, 0, 477, 478, 0, 479, 480, 481, 482,
	483, 484, 485, 1104, 486, 488, 487, 489, 0, 490,
	0, 491, 492, 0, 0, 0, 0, 493, 0, 495,
	496, 497, 494, 498, 499, 500, 501, 0, 502, 503,
	504, 1145, 505, 506, 507, 508, 1034, 509, 0, 510,
	511, 517, 518, 512, 513, 519, 520, 521, 522, 523,
	0, 525, 526, 524, 527, 528, 529, 1087, 530, 531,
	514, 515, 532, 533, 1146, 534, 535, 536, 537, 538,
	539, 1102, 0, 540, 0, 541, 542, 543, 544, 516,
	545, 550, 1149, 546, 547, 548, 549, 1125, 552, 0,
	553, 554, 1022, 551, 0, 555, 556, 557, 558, 559,
	560, 561, 341, 562, 0, 563, 1114, 1115, 1116, 1117,
	0, 572, 0, 564, 565, 566, 1126, 567, 1127, 1044,
	568, 569, 570, 571, 0, 4324, 574, 0, 1028, 575,
	576, 577, 579, 580, 578, 581, 1088, 582, 0, 0,
	583, 584, 585, 641, 1111, 1148, 0, 587, 586, 588,
	644, 0, 0, 0, 0, 589, 590, 645, 591, 592,
	593, 1025, 0, 0, 0, 0, 0, 0, 0, 1021,
	0, 0, 0, 0, 0, 0, 1019, 1020, 1066, 1038,
	1039, 1040, 1036, 1037, 1049, 1050, 0, 0, 0, 1048,
	0, 0, 0, 0, 0, 261, 263, 262, 264, 265,
	266, 267, 0, 268, 269, 0, 0, 0, 0, 0,
	1090, 1054, 0, 0, 0, 270, 271, 1130, 272, 273,
	274, 275, 276, 277, 595, 1103, 0, 278, 1110, 279,
	1109, 0, 1120, 280, 281, 282, 283, 284, 285, 1056,
	1089, 1023, 286, 1150, 1151, 602, 0, 287, 288, 1096,
	0, 1077, 0, 289, 290, 291, 292, 293, 294, 295,
	0, 0, 297, 298, 299, 296, 300, 0, 301, 0,
	302, 303, 304, 305, 306, 307, 0, 308, 309, 310,
	1131, 4006, 312, 1080, 1078, 1079, 1086, 1082, 1081, 1085,
	313, 314, 315, 316, 1113, 317, 1107, 1106, 1027, 321,
	318, 319, 0, 322, 320, 0, 323, 324, 325, 0,
	0, 326, 1098, 328, 0, 329, 330, 0, 331, 332,
	333, 0, 334, 335, 1033, 336, 337, 338, 340, 342,
	339, 343, 344, 345, 346, 1121, 1122, 347, 1045, 258,
	0, 0, 0, 0, 0, 348, 349, 350, 1105, 0,
	0, 0, 351, 0, 352, 0, 0, 1132, 353, 354,
	1118, 1119, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 363, 1128, 0, 4007, 364, 0, 365, 366, 367,
	368, 369, 1091, 1092, 1095, 445, 1134, 370, 371, 0,
	372, 373, 374, 375, 0, 0, 0, 259, 376, 377,
	378, 380, 0, 1133, 379, 1100, 1101, 0, 1061, 0,
	381, 382, 1135, 1093, 1136, 383, 384, 385, 1137, 386,
	0, 0, 0, 387, 388, 389, 390, 391, 392, 0,
	393, 395, 394, 0, 396, 1129, 1138, 397, 398, 1139,
	0, 399, 0, 0, 0, 400, 401, 1084, 1083, 402,
	403, 404, 405, 0, 406, 407, 409, 412, 408, 410,
	411, 413, 426, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 428, 0, 427, 1140, 429,
	430, 431, 436, 438, 439, 434, 435, 437, 440, 441,
	433, 1141, 432, 1024, 260, 1142, 442, 443, 1046, 1094,
	444, 1108, 446, 447, 0, 0, 448, 0, 0, 0,
	450, 451, 452, 0, 0, 453, 454, 624, 1143, 455,
	1144, 1123, 456, 457, 449, 458, 459, 460, 461, 462,
	463, 464, 465, 0, 466, 467, 626, 468, 469, 470,
	627, 471, 472, 473, 1124, 474, 629, 475, 476, 0,
	477, 478, 0, 479, 480, 481, 482, 483, 484, 485,
	1104, 486, 488, 487, 489, 0, 490, 0, 491, 492,
	0, 0, 0, 0, 493, 0, 495, 496, 497, 494,
	498, 499, 500, 501, 0, 502, 503, 504, 1145, 505,
	506, 507, 4005, 1034, 509, 0, 510, 511, 517, 518,
	512, 513, 519, 520, 521, 522, 523, 0, 525, 526,
	524, 527, 528, 529, 1087, 530, 531, 514, 515, 532,
	533, 1146, 534, 535, 536, 537, 538, 539, 1102, 0,
	540, 0, 541, 542, 543, 544, 516, 545, 550, 1149,
	546, 547, 548, 549, 1125, 552, 0, 553, 554, 1022,
	551, 0, 555, 556, 557, 558, 559, 560, 561, 341,
	562, 0, 563, 1114, 1115, 1116, 1117, 0, 572, 0,
	564, 565, 566, 1126, 567, 1127, 1044, 568, 569, 570,
	571, 0, 573, 574, 0, 1028, 575, 576, 577, 579,
	580, 578, 581, 1088, 582, 0, 0, 583, 584, 585,
	641, 1111, 1148, 0, 587, 586, 588, 644, 0, 0,
	0, 0, 589, 590, 645, 591, 592, 593, 1025, 0,
	0, 0, 0, 0, 0, 0, 1021, 0, 0, 0,
	0, 0, 0, 1019, 1020, 1066, 1038, 1039, 1040, 2941,
	2942, 1049, 1050, 0, 0, 0, 1048, 0, 0, 0,
	0, 0, 261, 263, 262, 264, 265, 266, 267, 0,
	268, 269, 0, 0, 0, 0, 0, 1090, 1054, 0,
	0, 0, 270, 271, 1130, 272, 273, 274, 275, 276,
	277, 595, 1103, 0, 278, 1110, 279, 1109, 0, 1120,
	280, 281, 282, 283, 284, 285, 1056, 1089, 1023, 286,
	1150, 1151, 602, 0, 287, 288, 1096, 0, 1077, 0,
	289, 290, 291, 292, 293, 294, 295, 0, 0, 297,
	298, 299, 296, 300, 0, 301, 0, 302, 303, 304,
	305, 306, 307, 0, 308, 309, 310, 1131, 311, 312,
	1080, 1078, 1079, 1086, 1082, 1081, 1085, 313, 314, 315,
	316, 1113, 317, 1107, 1106, 1027, 321, 318, 319, 0,
	322, 320, 0, 323, 324, 325, 0, 0, 326, 1098,
	328, 0, 329, 330, 0, 331, 332, 333, 0, 334,
	335, 1033, 336, 337, 338, 340, 342, 339, 343, 344,
	345, 346, 1121, 1122, 347, 1045, 258, 0, 0, 0,
	0, 0, 348, 349, 350, 1105, 0, 0, 0, 351,
	0, 352, 0, 0, 1132, 353, 354, 1118, 1119, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 363, 1128,
	0, 1055, 364, 0, 365, 366, 367, 368, 369, 1091,
	1092, 1095, 445, 1134, 370, 371, 0, 372, 373, 374,
	375, 0, 0, 0, 259, 376, 377, 378, 380, 0,
	1133, 379, 1100, 1101, 0, 1061, 0, 381, 382, 1135,
	1093, 1136, 383, 384, 385, 1137, 386, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 0, 393, 395, 394,
	0, 396, 1129, 1138, 397, 398, 1139, 0, 399, 0,
	0, 0, 400, 401, 1084, 1083, 402, 403, 404, 405,
	0, 406, 407, 409, 412, 408, 410, 411, 413, 426,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 428, 0, 427, 1140, 429, 430, 431, 436,
	438, 439, 434, 435, 437, 440, 441, 433, 1141, 432,
	1024, 260, 1142, 442, 443, 1046, 1094, 444, 1108, 446,
	447, 0, 0, 448, 0, 0, 0, 450, 451, 452,
	0, 0, 453, 454, 624, 1143, 455, 1144, 1123, 456,
	457, 449, 458, 459, 460, 461, 462, 463, 464, 465,
	0, 466, 467, 626, 468, 469, 470, 627, 471, 472,
	473, 1124, 474, 629, 475, 476, 0, 477, 478, 0,
	479, 480, 481, 482, 483, 484, 485, 1104, 486, 488,
	487, 489, 0, 490, 0, 491, 492, 0, 0, 0,
	0, 493, 0, 495, 496, 497, 494, 498, 499, 500,
	501, 0, 502, 503, 504, 1145, 505, 506, 507, 508,
	1034, 509, 0, 510, 511, 517, 518, 512, 513, 519,
	520, 521, 522, 523, 0, 525, 526, 524, 527, 528,
	529, 1087, 530, 531, 514, 515, 532, 533, 1146, 534,
	535, 536, 537, 538, 539, 1102, 0, 540, 0, 541,
	542, 543, 544, 516, 545, 550, 1149, 546, 547, 548,
	549, 1125, 552, 0, 553, 554, 1022, 551, 0, 555,
	556, 557, 558, 559, 560, 561, 341, 562, 0, 563,
	1114, 1115, 1116, 1117, 0, 572, 0, 564, 565, 566,
	1126, 567, 1127, 1044, 568, 569, 570, 571, 0, 573,
	574, 0, 1028, 575, 576, 577, 579, 580, 578, 581,
	1088, 582, 0, 0, 583, 584, 585, 641, 1111, 1148,
	0, 587, 586, 588, 644, 0, 0, 0, 0, 589,
	590, 645, 591, 592, 593, 1025, 0, 0, 0, 0,
	0, 0, 0, 1021, 0, 0, 0, 0, 0, 0,
	1019, 1020, 1066, 1038, 1039, 1040, 2939, 2940, 1049, 1050,
	0, 0, 0, 1048, 0, 0, 0, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 0,
	0, 0, 0, 0, 1090, 1054, 0, 0, 0, 270,
	271, 1130, 272, 273, 274, 275, 276, 277, 595, 1103,
	0, 278, 1110, 279, 1109, 0, 1120, 280, 281, 282,
	283, 284, 285, 1056, 1089, 1023, 286, 1150, 1151, 602,
	0, 287, 288, 1096, 0, 1077, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 1131, 311, 312, 1080, 1078, 1079,
	1086, 1082, 1081, 1085, 313, 314, 315, 316, 1113, 317,
	1107, 1106, 1027, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 1098, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 1033, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 1121,
	1122, 347, 1045, 258, 0, 0, 0, 0, 0, 348,
	349, 350, 1105, 0, 0, 0, 351, 0, 352, 0,
	0, 1132, 353, 354, 1118, 1119, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 1128, 0, 1055, 364,
	0, 365, 366, 367, 368, 369, 1091, 1092, 1095, 445,
	1134, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 259, 376, 377, 378, 380, 0, 1133, 379, 1100,
	1101, 0, 1061, 0, 381, 382, 1135, 1093, 1136, 383,
	384, 385, 1137, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 1129,
	1138, 397, 398, 1139, 0, 399, 0, 0, 0, 400,
	401, 1084, 1083, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 1140, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 1141, 432, 1024, 260, 1142,
	442, 443, 1046, 1094, 444, 1108, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 1143, 455, 1144, 1123, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 1124, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 1104, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 1145, 505, 506, 507, 508, 1034, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 1087, 530,
	531, 514, 515, 532, 533, 1146, 534, 535, 536, 537,
	538, 539, 1102, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 1149, 546, 547, 548, 549, 1125, 552,
	0, 553, 554, 1022, 551, 0, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 1114, 1115, 1116,
	1117, 0, 572, 0, 564, 565, 566, 1126, 567, 1127,
	1044, 568, 569, 570, 571, 0, 573, 574, 0, 1028,
	575, 576, 577, 579, 580, 578, 581, 1088, 582, 0,
	0, 583, 584, 585, 641, 1111, 1148, 0, 587, 586,
	588, 644, 0, 0, 0, 0, 589, 590, 645, 591,
	592, 593, 1025, 0, 0, 0, 0, 0, 0, 0,
	1021, 0, 0, 0, 0, 0, 0, 1019, 1020, 1066,
	1038, 1039, 1040, 1036, 1037, 1049, 1050, 0, 0, 0,
	1048, 0, 0, 0, 0, 0, 261, 263, 262, 264,
	265, 266, 267, 0, 268, 269, 0, 0, 0, 0,
	0, 1090, 1054, 0, 0, 0, 270, 271, 1130, 272,
	273, 274, 275, 276, 277, 595, 1103, 0, 278, 1110,
	279, 1109, 0, 1120, 280, 281, 282, 283, 284, 285,
	1056, 1089, 1023, 286, 1150, 1151, 602, 0, 287, 288,
	1096, 0, 1077, 0, 289, 290, 291, 292, 293, 294,
	295, 0, 0, 297, 298, 299, 296, 300, 0, 301,
	0, 302, 303, 304, 305, 306, 307, 0, 308, 309,
	310, 1131, 311, 312, 1080, 1078, 1079, 1086, 1082, 1081,
	1085, 313, 314, 315, 316, 1113, 317, 1107, 1106, 1027,
	321, 318, 319, 0, 322, 320, 0, 323, 324, 325,
	0, 0, 326, 1098, 328, 0, 329, 330, 0, 331,
	332, 333, 0, 334, 335, 1033, 336, 337, 338, 340,
	342, 339, 343, 344, 345, 346, 1121, 1122, 347, 1045,
	258, 0, 0, 0, 0, 0, 348, 349, 350, 1105,
	0, 0, 0, 351, 0, 352, 0, 0, 1132, 353,
	354, 1118, 1119, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 363, 1128, 0, 1055, 364, 0, 365, 366,
	367, 368, 369, 1091, 1092, 1095, 445, 1134, 370, 371,
	0, 372, 373, 374, 375, 0, 0, 0, 259, 376,
	377, 378, 380, 0, 1133, 379, 1100, 1101, 0, 1061,
	0, 381, 382, 1135, 1093, 1136, 383, 384, 385, 1137,
	386, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	0, 393, 395, 394, 0, 396, 1129, 1138, 397, 398,
	1139, 0, 399, 0, 0, 0, 400, 401, 1084, 1083,
	402, 403, 404, 405, 0, 406, 407, 409, 412, 408,
	410, 411, 413, 426, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 428, 0, 427, 1140,
	429, 430, 431, 436, 438, 439, 434, 435, 437, 440,
	441, 433, 1141, 432, 1024, 260, 1142, 442, 443, 1046,
	1094, 444, 1108, 446, 447, 0, 0, 448, 0, 0,
	0, 450, 451, 452, 0, 0, 453, 454, 624, 1143,
	455, 1144, 1123, 456, 457, 449, 458, 459, 460, 461,
	462, 463, 464, 465, 0, 466, 467, 626, 468, 469,
	470, 627, 471, 472, 473, 1124, 474, 629, 475, 476,
	0, 477, 478, 0, 479, 480, 481, 482, 483, 484,
	485, 1104, 486, 488, 487, 489, 0, 490, 0, 491,
	492, 0, 0, 0, 0, 493, 0, 495, 496, 497,
	494, 498, 499, 500, 501, 0, 502, 503, 504, 1145,
	505, 506, 507, 508, 1034, 509, 0, 510, 511, 517,
	518, 512, 513, 519, 520, 521, 522, 523, 0, 525,
	526, 524, 527, 528, 529, 1087, 530, 531, 514, 515,
	532, 533, 1146, 534, 535, 536, 537, 538, 539, 1102,
	0, 540, 0, 541, 542, 543, 544, 516, 545, 550,
	1149, 546, 547, 548, 549, 1125, 552, 0, 553, 554,
	1022, 551, 0, 555, 556, 557, 558, 559, 560, 561,
	341, 562, 0, 563, 1114, 1115, 1116, 1117, 0, 572,
	0, 564, 565, 566, 1126, 567, 1127, 1044, 568, 569,
	570, 571, 0, 573, 574, 0, 1028, 575, 576, 577,
	579, 580, 578, 581, 1088, 582, 0, 0, 583, 584,
	585, 641, 1111, 1148, 0, 587, 586, 588, 644, 0,
	0, 0, 0, 589, 590, 645, 591, 592, 593, 1025,
	0, 0, 0, 0, 0, 0, 0, 1021, 0, 0,
	0, 0, 0, 0, 2291, 2292, 1066, 1038, 1039, 1040,
	1036, 1037, 1049, 1050, 0, 0, 0, 1048, 0, 0,
	0, 0, 0, 261, 263, 262, 264, 265, 266, 267,
	0, 268, 269, 0, 0, 0, 0, 0, 1090, 1054,
	0, 0, 0, 270, 271, 1130, 272, 273, 274, 275,
	276, 277, 595, 1103, 0, 278, 1110, 279, 1109, 0,
	1120, 280, 281, 282, 283, 284, 285, 1056, 1089, 0,
	286, 1150, 1151, 602, 0, 287, 288, 1096, 0, 1077,
	0, 289, 290, 291, 292, 293, 294, 295, 0, 0,
	297, 298, 299, 296, 300, 0, 301, 0, 302, 303,
	304, 305, 306, 307, 0, 308, 309, 310, 1131, 311,
	312, 1080, 1078, 1079, 1086, 1082, 1081, 1085, 313, 314,
	315, 316, 1113, 317, 1107, 1106, 0, 321, 318, 319,
	0, 322, 320, 0, 323, 324, 325, 0, 0, 326,
	1098, 328, 0, 329, 330, 0, 331, 332, 333, 0,
	334, 335, 1033, 336, 337, 338, 340, 342, 339, 343,
	344, 345, 346, 1121, 1122, 347, 1045, 258, 0, 0,
	0, 0, 0, 348, 349, 350, 1105, 0, 0, 0,
	351, 0, 352, 0, 0, 1132, 353, 354, 1118, 1119,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 363,
	1128, 0, 1055, 364, 0, 365, 366, 367, 368, 369,
	1091, 1092, 1095, 445, 1134, 370, 371, 0, 372, 373,
	374, 375, 0, 0, 0, 259, 376, 377, 378, 380,
	0, 1133, 379, 1100, 1101, 0, 1061, 0, 381, 382,
	1135, 1093, 1136, 383, 384, 385, 1137, 386, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 0, 393, 395,
	394, 0, 396, 1129, 1138, 397, 398, 1139, 0, 399,
	0, 0, 0, 400, 401, 1084, 1083, 402, 403, 404,
	405, 0, 406, 407, 409, 412, 408, 410, 411, 413,
	426, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 428, 0, 427, 1140, 429, 430, 431,
	436, 438, 439, 434, 435, 437, 440, 441, 433, 1141,
	432, 0, 260, 1142, 442, 443, 1046, 1094, 444, 1108,
	446, 447, 0, 0, 448, 0, 0, 0, 450, 451,
	452, 0, 0, 453, 454, 624, 1143, 455, 1144, 1123,
	456, 457, 449, 458, 459, 460, 461, 462, 463, 464,
	465, 0, 466, 467, 626, 468, 469, 470, 627, 471,
	472, 473, 1124, 474, 629, 475, 476, 0, 477, 478,
	0, 479, 480, 481, 482, 483, 484, 485, 1104, 486,
	488, 487, 489, 0, 490, 0, 491, 492, 0, 0,
	0, 0, 493, 0, 495, 496, 497, 494, 498, 499,
	500, 501, 0, 502, 503, 504, 1145, 505, 506, 507,
	508, 1034, 509, 0, 510, 511, 517, 518, 512, 513,
	519, 520, 521, 522, 523, 0, 525, 526, 524, 527,
	528, 529, 1087, 530, 531, 514, 515, 532, 533, 1146,
	534, 535, 536, 537, 538, 539, 1102, 0, 540, 0,
	541, 542, 543, 544, 516, 545, 550, 1149, 546, 547,
	548, 549, 1125, 552, 0, 553, 554, 0, 551, 0,
	555, 556, 557, 558, 559, 560, 561, 341, 562, 0,
	563, 1114, 1115, 1116, 1117, 0, 572, 0, 564, 565,
	566, 1126, 567, 1127, 1044, 568, 569, 570, 571, 0,
	573, 574, 0, 0, 575, 576, 577, 579, 580, 578,
	581, 1088, 582, 0, 0, 583, 584, 585, 641, 1111,
	1148, 0, 587, 586, 588, 644, 0, 0, 0, 0,
	589, 590, 645, 591, 592, 593, 1066, 1038, 1039, 1040,
	1036, 1037, 1049, 0, 2511, 0, 0, 0, 0, 0,
	0, 2509, 2510, 261, 263, 262, 264, 265, 266, 267,
	1050, 268, 269, 0, 1048, 0, 0, 0, 1090, 1054,
	0, 0, 0, 270, 271, 1130, 272, 273, 274, 275,
	276, 277, 595, 1103, 0, 278, 1110, 279, 1109, 0,
	1120, 280, 281, 282, 283, 284, 285, 1056, 1089, 0,
	286, 1150, 1151, 602, 0, 287, 288, 1096, 0, 1077,
	0, 289, 290, 291, 292, 293, 294, 295, 0, 0,
	297, 298, 299, 296, 300, 0, 301, 0, 302, 303,
	304, 305, 306, 307, 0, 308, 309, 310, 1131, 311,
	312, 1080, 1078, 1079, 1086, 1082, 1081, 1085, 313, 314,
	315, 316, 1113, 317, 1107, 1106, 0, 321, 318, 319,
	0, 322, 320, 0, 323, 324, 325, 0, 0, 326,
	1098, 328, 0, 329, 330, 0, 331, 332, 333, 0,
	334, 335, 1033, 336, 337, 338, 340, 342, 339, 343,
	344, 345, 346, 1121, 1122, 347, 1045, 258, 0, 0,
	0, 0, 0, 348, 349, 350, 1105, 0, 0, 0,
	351, 0, 352, 0, 0, 1132, 353, 354, 1118, 1119,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 363,
	1128, 0, 1055, 364, 0, 365, 366, 367, 368, 369,
	1091, 1092, 1095, 445, 1134, 370, 371, 0, 372, 373,
	374, 375, 0, 0, 0, 259, 376, 377, 378, 380,
	0, 1133, 379, 1100, 1101, 0, 1061, 0, 381, 382,
	1135, 1093, 1136, 383, 384, 385, 1137, 386, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 0, 393, 395,
	394, 0, 396, 1129, 1138, 397, 398, 1139, 0, 399,
	0, 0, 0, 400, 401, 1084, 1083, 402, 403, 404,
	405, 0, 406, 407, 409, 412, 408, 410, 411, 413,
	426, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 428, 0, 427, 1140, 429, 430, 431,
	436, 438, 439, 434, 435, 437, 440, 441, 433, 1141,
	432, 0, 260, 1142, 442, 443, 1046, 1094, 444, 1108,
	446, 447, 0, 0, 448, 0, 0, 0, 450, 451,
	452, 0, 0, 453, 454, 624, 1143, 455, 1144, 1123,
	456, 457, 449, 458, 459, 460, 461, 462, 463, 464,
	465, 0, 466, 467, 626, 468, 469, 470, 627, 471,
	472, 473, 1124, 474, 629, 475, 476, 0, 477, 478,
	0, 479, 480, 481, 482, 483, 484, 485, 1104, 486,
	488, 487, 489, 0, 490, 0, 491, 492, 0, 0,
	0, 0, 493, 0, 495, 496, 497, 494, 498, 499,
	500, 501, 0, 502, 503, 504, 1145, 505, 506, 507,
	508, 2934, 2935, 0, 510, 511, 517, 518, 512, 513,
	519, 520, 521, 522, 523, 0, 525, 526, 524, 527,
	528, 529, 1087, 530, 531, 514, 515, 532, 533, 1146,
	534, 535, 536, 537, 538, 539, 1102, 0, 540, 0,
	541, 542, 543, 544, 516, 545, 550, 1149, 546, 547,
	548, 549, 1125, 552, 0, 553, 554, 0, 551, 0,
	555, 556, 557, 558, 559, 560, 561, 341, 562, 0,
	563, 1114, 1115, 1116, 1117, 0, 572, 0, 564, 565,
	566, 1126, 567, 1127, 1044, 568, 569, 570, 571, 0,
	573, 574, 0, 0, 575, 576, 577, 579, 580, 578,
	581, 1088, 582, 0, 0, 583, 584, 585, 641, 1111,
	1148, 0, 587, 586, 588, 644, 0, 0, 0, 0,
	589, 590, 645, 591, 592, 593, 1066, 1038, 1039, 1040,
	1036, 1037, 1049, 0, 0, 0, 0, 0, 0, 0,
	0, 2020, 2021, 261, 263, 262, 264, 265, 266, 267,
	1050, 268, 269, 0, 1048, 0, 0, 0, 1090, 1054,
	0, 0, 0, 270, 271, 1130, 272, 273, 274, 275,
	276, 277, 0, 1103, 0, 278, 1110, 279, 1109, 0,
	1120, 280, 281, 282, 283, 284, 285, 1056, 1089, 1023,
	286, 1150, 1151, 602, 0, 287, 288, 1096, 0, 1077,
	0, 289, 290, 291, 292, 293, 294, 295, 0, 0,
	297, 298, 299, 296, 300, 0, 301, 0, 302, 303,
	304, 305, 306, 307, 0, 308, 309, 310, 1131, 311,
	4325, 1080, 1078, 1079, 1086, 1082, 1081, 1085, 313, 314,
	315, 316, 1113, 317, 1107, 1106, 1027, 321, 318, 319,
	0, 322, 320, 0, 323, 324, 325, 0, 0, 326,
	1098, 328, 0, 329, 330, 0, 331, 332, 333, 0,
	334, 335, 1033, 336, 337, 338, 340, 342, 339, 343,
	344, 345, 346, 1121, 1122, 347, 1045, 258, 0, 0,
	0, 0, 0, 348, 349, 350, 1105, 0, 0, 0,
	351, 0, 352, 0, 0, 1132, 353, 354, 1118, 1119,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 363,
	1128, 0, 1055, 364, 0, 365, 366, 367, 368, 369,
	1091, 1092, 1095, 445, 0, 370, 371, 0, 372, 373,
	374, 375, 0, 0, 0, 259, 376, 377, 378, 380,
	0, 1133, 379, 1100, 1101, 0, 1061, 0, 381, 382,
	0, 1093, 0, 383, 384, 385, 1137, 386, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 0, 393, 395,
	394, 0, 396, 1129, 1138, 397, 398, 0, 0, 399,
	0, 0, 0, 400, 401, 1084, 1083, 402, 403, 404,
	405, 0, 406, 407, 409, 412, 408, 410, 411, 413,
	426, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 428, 0, 427, 1140, 429, 430, 431,
	436, 438, 439, 434, 435, 437, 440, 441, 433, 1141,
	432, 1024, 260, 0, 442, 443, 1046, 1094, 444, 1108,
	446, 447, 0, 0, 448, 0, 0, 0, 450, 451,
	452, 0, 0, 453, 454, 624, 1143, 455, 1144, 1123,
	456, 457, 449, 458, 459, 460, 461, 462, 463, 464,
	465, 0, 466, 467, 626, 468, 469, 470, 627, 471,
	472, 473, 1124, 474, 629, 475, 476, 0, 477, 478,
	0, 479, 480, 481, 482, 483, 484, 485, 1104, 486,
	488, 487, 489, 0, 490, 0, 491, 492, 0, 0,
	0, 0, 493, 0, 495, 496, 497, 494, 498, 499,
	500, 501, 0, 502, 503, 504, 1145, 505, 506, 507,
	508, 1034, 509, 0, 510, 511, 517, 518, 512, 513,
	519, 520, 521, 522, 523, 0, 525, 526, 524, 527,
	528, 529, 1087, 530, 531, 514, 515, 532, 533, 0,
	534, 535, 536, 537, 538, 539, 1102, 0, 540, 0,
	541, 542, 543, 544, 516, 545, 550, 1149, 546, 547,
	548, 549, 1125, 552, 0, 553, 554, 1022, 551, 0,
	555, 556, 557, 558, 559, 560, 561, 341, 562, 0,
	563, 1114, 1115, 1116, 1117, 0, 572, 0, 564, 565,
	566, 1126, 567, 1127, 1044, 568, 569, 570, 571, 0,
	4324, 574, 0, 1028, 575, 576, 577, 579, 580, 578,
	581, 1088, 582, 0, 0, 583, 584, 585, 641, 1111,
	1148, 0, 587, 586, 588, 644, 0, 0, 0, 0,
	589, 590, 645, 591, 592, 593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1012, 0, 1188, 0,
	0, 1019, 1020, 0, 0, 0, 0, 0, 0, 0,
	1050, 0, 0, 0, 1048, 261, 263, 262, 264, 265,
	266, 267, 0, 268, 269, 0, 0, 0, 0, 0,
	1090, 0, 0, 0, 0, 270, 271, 1130, 272, 273,
	274, 275, 276, 277, 595, 596, 0, 278, 597, 279,
	598, 0, 599, 280, 281, 282, 283, 284, 285, 0,
	1089, 0, 286, 600, 601, 602, 0, 287, 288, 1096,
	0, 1077, 0, 289, 290, 291, 292, 293, 294, 295,
	0, 0, 297, 298, 299, 296, 300, 0, 301, 0,
	302, 303, 304, 305, 306, 307, 0, 308, 309, 310,
	1131, 311, 312, 1080, 1078, 1079, 1086, 1082, 1081, 1085,
	313, 314, 315, 316, 0, 317, 604, 605, 0, 321,
	318, 319, 0, 322, 320, 0, 323, 324, 325, 0,
	0, 326, 327, 328, 0, 329, 330, 0, 331, 332,
	333, 0, 334, 335, 606, 336, 337, 338, 340, 342,
	339, 343, 344, 345, 346, 1121, 1122, 347, 0, 258,
	0, 0, 0, 0, 0, 348, 349, 350, 609, 0,
	0, 0, 351, 0, 352, 0, 0, 1132, 353, 354,
	610, 611, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 363, 1128, 0, 613, 364, 0, 365, 366, 367,
	368, 369, 1091, 1092, 1095, 445, 1134, 370, 371, 0,
	372, 373, 374, 375, 0, 0, 0, 259, 376, 377,
	378, 380, 0, 1133, 379, 617, 618, 0, 619, 0,
	381, 382, 1135, 1093, 1136, 383, 384, 385, 1137, 386,
	0, 0, 0, 387, 388, 389, 390, 391, 392, 1174,
	393, 395, 394, 0, 396, 1129, 1138, 397, 398, 1139,
	0, 399, 0, 0, 0, 400, 401, 1084, 1083, 402,
	403, 404, 405, 0, 406, 407, 409, 412, 408, 410,
	411, 413, 426, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 428, 0, 427, 1140, 429,
	430, 431, 436, 438, 439, 434, 435, 437, 440, 441,
	433, 1141, 432, 0, 260, 1142, 442, 443, 0, 1094,
	444, 623, 446, 447, 0, 0, 448, 0, 0, 1180,
	450, 451, 452, 0, 0, 453, 454, 624, 1143, 455,
	1144, 1123, 456, 457, 449, 458, 459, 460, 461, 462,
	463, 464, 465, 0, 466, 467, 626, 468, 469, 470,
	627, 471, 472, 473, 1124, 474, 629, 475, 476, 0,
	477, 478, 0, 479, 480, 481, 482, 483, 484, 485,
	630, 486, 488, 487, 489, 0, 490, 0, 491, 492,
	0, 0, 0, 0, 493, 0, 495, 496, 497, 494,
	498, 499, 500, 501, 0, 502, 503, 504, 1145, 505,
	506, 507, 508, 631, 1182, 0, 510, 511, 517, 518,
	512, 513, 519, 520, 521, 522, 523, 220, 525, 526,
	524, 527, 528, 529, 1087, 530, 531, 514, 515, 532,
	533, 1146, 534, 535, 536, 537, 538, 539, 632, 0,
	540, 0, 541, 542, 543, 544, 516, 545, 550, 633,
	546, 547, 548, 549, 1125, 552, 0, 553, 554, 0,
	551, 222, 555, 556, 557, 558, 559, 560, 561, 341,
	562, 0, 563, 635, 636, 637, 638, 0, 572, 0,
	564, 565, 566, 1126, 567, 1127, 0, 568, 569, 570,
	571, 0, 573, 574, 0, 0, 575, 576, 577, 579,
	580, 578, 581, 1088, 582, 0, 0, 583, 584, 585,
	1539, 642, 643, 0, 587, 586, 588, 644, 0, 1188,
	0, 214, 589, 590, 645, 591, 592, 593, 0, 0,
	215, 0, 0, 0, 0, 0, 261, 263, 262, 264,
	265, 266, 267, 0, 268, 269, 0, 0, 0, 0,
	1178, 1090, 1869, 0, 0, 0, 270, 271, 1130, 272,
	273, 274, 275, 276, 277, 595, 596, 0, 278, 597,
	279, 598, 0, 599, 280, 281, 282, 283, 284, 285,
	0, 1089, 0, 286, 600, 601, 602, 0, 287, 288,
	1096, 0, 1077, 0, 289, 290, 291, 292, 293, 294,
	295, 0, 0, 297, 298, 299, 296, 300, 0, 301,
	0, 302, 303, 304, 305, 306, 307, 0, 308, 309,
	310, 1131, 311, 312, 1080, 1078, 1079, 1086, 1082, 1081,
	1085, 313, 314, 315, 316, 0, 317, 604, 605, 0,
	321, 318, 319, 0, 322, 320, 0, 323, 324, 325,
	0, 0, 326, 327, 328, 0, 329, 330, 0, 331,
	332, 333, 0, 334, 335, 606, 336, 337, 338, 340,
	342, 339, 343, 344, 345, 346, 1121, 1122, 347, 0,
	258, 0, 0, 0, 0, 0, 348, 349, 350, 609,
	0, 0, 0, 351, 0, 352, 0, 0, 1132, 353,
	354, 610, 611, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 363, 1128, 0, 613, 364, 0, 365, 366,
	367, 368, 369, 1091, 1092, 1095, 445, 1134, 370, 371,
	0, 372, 373, 374, 375, 0, 0, 0, 259, 376,
	377, 378, 380, 0, 1133, 379, 617, 618, 0, 619,
	0, 381, 382, 1135, 1093, 1136, 383, 384, 385, 1137,
	386, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	1174, 393, 395, 394, 0, 396, 1129, 1138, 397, 398,
	1139, 0, 399, 0, 0, 0, 400, 401, 1084, 1083,
	402, 403, 404, 405, 0, 406, 407, 409, 412, 408,
	410, 411, 413, 426, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 428, 0, 427, 1140,
	429, 430, 431, 436, 438, 439, 434, 435, 437, 440,
	441, 433, 1141, 432, 0, 260, 1142, 442, 443, 0,
	1094, 444, 623, 446, 447, 0, 0, 448, 0, 0,
	1180, 450, 451, 452, 0, 0, 453, 454, 624, 1143,
	455, 1144, 1123, 456, 457, 449, 458, 459, 460, 461,
	462, 463, 464, 465, 0, 466, 467, 626, 468, 469,
	470, 627, 471, 472, 473, 1124, 474, 629, 475, 476,
	0, 477, 478, 0, 479, 480, 481, 482, 483, 484,
	485, 630, 486, 488, 487, 489, 0, 490, 0, 491,
	492, 0, 0, 0, 0, 493, 0, 495, 496, 497,
	494, 498, 499, 500, 501, 0, 502, 503, 504, 1145,
	505, 506, 507, 508, 631, 1182, 0, 510, 511, 517,
	518, 512, 513, 519, 520, 521, 522, 523, 220, 525,
	526, 524, 527, 528, 529, 1087, 530, 531, 514, 515,
	532, 533, 1146, 534, 535, 536, 537, 538, 539, 632,
	0, 540, 0, 541, 542, 543, 544, 516, 545, 550,
	633, 546, 547, 548, 549, 1125, 552, 0, 553, 554,
	0, 551, 222, 555, 556, 557, 558, 559, 560, 561,
	341, 562, 0, 563, 635, 636, 637, 638, 0, 572,
	0, 564, 565, 566, 1126, 567, 1127, 0, 568, 569,
	570, 571, 0, 573, 574, 0, 0, 575, 576, 577,
	579, 580, 578, 581, 1088, 582, 0, 0, 583, 584,
	585, 1539, 642, 643, 0, 587, 586, 588, 644, 0,
	0, 0, 214, 589, 590, 645, 591, 592, 593, 0,
	0, 215, 0, 0, 0, 3118, 0, 1188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1178, 0, 1869, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 1090,
	0, 0, 0, 0, 270, 271, 1130, 272, 273, 274,
	275, 276, 277, 595, 596, 0, 278, 597, 279, 598,
	0, 599, 280, 281, 282, 283, 284, 285, 0, 1089,
	0, 286, 600, 601, 602, 0, 287, 288, 1096, 0,
	1077, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 1131,
	311, 312, 1080, 1078, 1079, 1086, 1082, 1081, 1085, 313,
	314, 315, 316, 0, 317, 604, 605, 0, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 327, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 606, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 1121, 1122, 347, 0, 258, 0,
	0, 0, 0, 0, 348, 349, 350, 609, 0, 0,
	0, 351, 0, 352, 0, 0, 1132, 353, 354, 610,
	611, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 1128, 0, 613, 364, 0, 365, 366, 367, 368,
	369, 1091, 1092, 1095, 445, 1134, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 259, 376, 377, 378,
	380, 0, 1133, 379, 617, 618, 0, 619, 0, 381,
	382, 1135, 1093, 1136, 383, 384, 385, 1137, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 1174, 393,
	395, 394, 0, 396, 1129, 1138, 397, 398, 1139, 0,
	399, 0, 0, 0, 400, 401, 1084, 1083, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 1140, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	1141, 432, 0, 260, 1142, 442, 443, 0, 1094, 444,
	623, 446, 447, 0, 0, 448, 0, 0, 1180, 450,
	451, 452, 0, 0, 453, 454, 624, 1143, 455, 1144,
	1123, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 1124, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 630,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 1145, 505, 506,
	507, 508, 631, 1182, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 1087, 530, 531, 514, 515, 532, 533,
	1146, 534, 535, 536, 537, 538, 539, 632, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 633, 546,
	547, 548, 549, 1125, 552, 0, 553, 554, 0, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 635, 636, 637, 638, 0, 572, 0, 564,
	565, 566, 1126, 567, 1127, 0, 568, 569, 570, 571,
	0, 573, 574, 0, 0, 575, 576, 577, 579, 580,
	578, 581, 1088, 582, 0, 0, 583, 584, 585, 641,
	642, 643, 0, 587, 586, 588, 644, 0, 1170, 0,
	1188, 589, 590, 645, 591, 592, 593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 263, 262,
	264, 265, 266, 267, 0, 268, 269, 0, 0, 1178,
	0, 1176, 1090, 0, 0, 0, 0, 270, 271, 1130,
	272, 273, 274, 275, 276, 277, 595, 596, 0, 278,
	597, 279, 598, 0, 599, 280, 281, 282, 283, 284,
	285, 0, 1089, 0, 286, 600, 601, 602, 0, 287,
	288, 1096, 0, 1077, 0, 289, 290, 291, 292, 293,
	294, 295, 0, 0, 297, 298, 299, 296, 300, 0,
	301, 0, 302, 303, 304, 305, 306, 307, 0, 308,
	309, 310, 1131, 311, 312, 1080, 1078, 1079, 1086, 1082,
	1081, 1085, 313, 314, 315, 316, 0, 317, 604, 605,
	0, 321, 318, 319, 0, 322, 320, 0, 323, 324,
	325, 0, 0, 326, 327, 328, 0, 329, 330, 0,
	331, 332, 333, 0, 334, 335, 606, 336, 337, 338,
	340, 342, 339, 343, 344, 345, 346, 1121, 1122, 347,
	0, 258, 0, 0, 0, 0, 0, 348, 349, 350,
	609, 0, 0, 0, 351, 0, 352, 0, 0, 1132,
	353, 354, 610, 611, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 363, 1128, 0, 613, 364, 0, 365,
	366, 367, 368, 369, 1091, 1092, 1095, 445, 1134, 370,
	371, 0, 372, 373, 374, 375, 0, 0, 0, 259,
	376, 377, 378, 380, 0, 1133, 379, 617, 618, 0,
	619, 0, 381, 382, 1135, 1093, 1136, 383, 384, 385,
	1137, 386, 0, 0, 0, 387, 388, 389, 390, 391,
	392, 1174, 393, 395, 394, 0, 396, 1129, 1138, 397,
	398, 1139, 0, 399, 0, 0, 0, 400, 401, 1084,
	1083, 402, 403, 404, 405, 0, 406, 407, 409, 412,
	408, 410, 411, 413, 426, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 428, 0, 427,
	1140, 429, 430, 431, 436, 438, 439, 434, 435, 437,
	440, 441, 433, 1141, 432, 0, 260, 1142, 442, 443,
	0, 1094, 444, 623, 446, 447, 0, 0, 448, 0,
	0, 1180, 450, 451, 452, 0, 0, 453, 454, 624,
	1143, 455, 1144, 1123, 456, 457, 449, 458, 459, 460,
	461, 462, 463, 464, 465, 0, 466, 467, 626, 468,
	469, 470, 627, 471, 472, 473, 1124, 474, 629, 475,
	476, 0, 477, 478, 0, 479, 480, 481, 482, 483,
	484, 485, 630, 486, 488, 487, 489, 0, 490, 0,
	491, 492, 0, 0, 0, 0, 493, 0, 495, 496,
	497, 494, 498, 499, 500, 501, 0, 502, 503, 504,
	1145, 505, 506, 507, 508, 631, 1182, 0, 510, 511,
	517, 518, 512, 513, 519, 520, 521, 522, 523, 0,
	525, 526, 524, 527, 528, 529, 1087, 530, 531, 514,
	515, 532, 533, 1146, 534, 535, 536, 537, 538, 539,
	632, 0, 540, 0, 541, 542, 543, 544, 516, 545,
	550, 633, 546, 547, 548, 549, 1125, 552, 0, 553,
	554, 0, 551, 0, 555, 556, 557, 558, 559, 560,
	561, 341, 562, 0, 563, 635, 636, 637, 638, 0,
	572, 0, 564, 565, 566, 1126, 567, 1127, 0, 568,
	569, 570, 571, 0, 573, 574, 0, 0, 575, 576,
	577, 579, 580, 578, 581, 1088, 582, 0, 0, 583,
	584, 585, 641, 642, 643, 0, 587, 586, 588, 644,
	0, 1188, 0, 0, 589, 590, 645, 591, 592, 593,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 263,
	262, 264, 265, 266, 267, 0, 268, 269, 0, 0,
	0, 0, 1178, 1090, 1176, 0, 0, 0, 270, 271,
	1130, 272, 273, 274, 275, 276, 277, 595, 596, 0,
	278, 597, 279, 598, 0, 599, 280, 281, 282, 283,
	284, 285, 0, 1089, 0, 286, 600, 601, 602, 0,
	287, 288, 1096, 0, 1077, 0, 289, 290, 291, 292,
	293, 294, 295, 0, 0, 297, 298, 299, 296, 300,
	0, 301, 0, 302, 303, 304, 305, 306, 307, 0,
	308, 309, 310, 1131, 311, 312, 1080, 1078, 1079, 1086,
	1082, 1081, 1085, 313, 314, 315, 316, 0, 317, 604,
	605, 0, 321, 318, 319, 0, 322, 320, 0, 323,
	324, 325, 0, 0, 326, 327, 328, 0, 329, 330,
	0, 331, 332, 333, 0, 334, 335, 606, 336, 337,
	338, 340, 342, 339, 343, 344, 345, 346, 1121, 1122,
	347, 0, 258, 0, 0, 0, 0, 0, 348, 349,
	350, 609, 0, 0, 0, 351, 0, 352, 0, 0,
	1132, 353, 354, 610, 611, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 363, 1128, 0, 613, 364, 0,
	365, 366, 367, 368, 369, 1091, 1092, 1095, 445, 1134,
	370, 371, 0, 372, 373, 374, 375, 0, 0, 0,
	259, 376, 377, 378, 380, 0, 1133, 379, 617, 618,
	0, 619, 0, 381, 382, 1135, 1093, 1136, 383, 384,
	385, 1137, 386, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 1174, 393, 395, 394, 0, 396, 1129, 1138,
	397, 398, 1139, 0, 399, 0, 0, 0, 400, 401,
	1084, 1083, 402, 403, 404, 405, 0, 406, 407, 409,
	412, 408, 410, 411, 413, 426, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 428, 0,
	427, 1140, 429, 430, 431, 436, 438, 439, 434, 435,
	437, 440, 441, 433, 1141, 432, 0, 260, 1142, 442,
	443, 0, 1094, 444, 623, 446, 447, 0, 0, 448,
	0, 0, 1180, 450, 451, 452, 0, 0, 453, 454,
	624, 1143, 455, 1144, 1123, 456, 457, 449, 458, 459,
	460, 461, 462, 463, 464, 465, 0, 466, 467, 626,
	468, 469, 470, 627, 471, 472, 473, 1124, 474, 629,
	475, 476, 0, 477, 478, 0, 479, 480, 481, 482,
	483, 484, 485, 630, 486, 488, 487, 489, 0, 490,
	0, 491, 492, 0, 0, 0, 0, 493, 0, 495,
	496, 497, 494, 498, 499, 500, 501, 0, 502, 503,
	504, 1145, 505, 506, 507, 508, 631, 1182, 0, 510,
	511, 517, 518, 512, 513, 519, 520, 521, 522, 523,
	0, 525, 526, 524, 527, 528, 529, 1087, 530, 531,
	514, 515, 532, 533, 1146, 534, 535, 536, 537, 538,
	539, 632, 0, 540, 0, 541, 542, 543, 544, 516,
	545, 550, 633, 546, 547, 548, 549, 1125, 552, 0,
	553, 554, 0, 551, 0, 555, 556, 557, 558, 559,
	560, 561, 341, 562, 0, 563, 635, 636, 637, 638,
	0, 572, 0, 564, 565, 566, 1126, 567, 1127, 0,
	568, 569, 570, 571, 0, 573, 574, 0, 0, 575,
	576, 577, 579, 580, 578, 581, 1088, 582, 0, 0,
	583, 584, 585, 641, 642, 643, 0, 587, 586, 588,
	644, 0, 1188, 0, 0, 589, 590, 645, 591, 592,
	593, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 0,
	0, 0, 0, 1178, 1090, 1176, 0, 0, 0, 270,
	271, 1130, 272, 273, 274, 275, 276, 277, 595, 596,
	0, 278, 597, 279, 598, 0, 599, 280, 281, 282,
	283, 284, 285, 0, 1089, 0, 286, 600, 601, 602,
	0, 287, 288, 1096, 0, 1077, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 1131, 311, 312, 1080, 1078, 1079,
	1086, 1082, 1081, 1085, 313, 314, 315, 316, 0, 317,
	604, 605, 0, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 327, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 606, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 1121,
	1122, 347, 0, 258, 0, 0, 0, 0, 0, 348,
	349, 350, 609, 0, 0, 0, 351, 0, 352, 0,
	0, 1132, 353, 354, 610, 611, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 1128, 0, 613, 364,
	0, 365, 366, 367, 368, 369, 1091, 1092, 1095, 445,
	1134, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 259, 376, 377, 378, 380, 0, 1133, 379, 617,
	618, 0, 619, 0, 381, 382, 1135, 1093, 1136, 383,
	384, 385, 1137, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 1129,
	1138, 397, 398, 1139, 0, 399, 0, 0, 0, 400,
	401, 1084, 1083, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 1140, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 1141, 432, 0, 260, 1142,
	442, 443, 0, 1094, 444, 623, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 1143, 455, 1144, 1123, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 1124, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 630, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 1145, 505, 506, 507, 508, 631, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 1087, 530,
	531, 514, 515, 532, 533, 1146, 534, 535, 536, 537,
	538, 539, 632, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 633, 546, 547, 548, 549, 1125, 552,
	0, 553, 554, 0, 551, 0, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 635, 636, 637,
	638, 0, 572, 0, 564, 565, 566, 1126, 567, 1127,
	0, 568, 569, 570, 571, 0, 573, 574, 0, 0,
	575, 576, 577, 579, 580, 578, 581, 1088, 582, 0,
	0, 583, 584, 585, 641, 642, 643, 0, 587, 586,
	588, 644, 1188, 0, 0, 0, 589, 590, 645, 591,
	592, 593, 0, 0, 0, 0, 0, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 0,
	0, 0, 0, 0, 1090, 0, 3852, 0, 0, 270,
	271, 1130, 272, 273, 274, 275, 276, 277, 595, 596,
	0, 278, 597, 279, 598, 0, 599, 280, 281, 282,
	283, 284, 285, 0, 1089, 0, 286, 600, 601, 602,
	0, 287, 288, 1096, 0, 1077, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 1131, 311, 312, 1080, 1078, 1079,
	1086, 1082, 1081, 1085, 313, 314, 315, 316, 0, 317,
	604, 605, 0, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 327, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 606, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 1121,
	1122, 347, 0, 258, 0, 0, 0, 0, 0, 348,
	349, 350, 609, 0, 0, 0, 351, 0, 352, 0,
	0, 1132, 353, 354, 610, 611, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 1128, 0, 613, 364,
	0, 365, 366, 367, 368, 369, 1091, 1092, 1095, 445,
	1134, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 259, 376, 377, 378, 380, 0, 1133, 379, 617,
	618, 0, 619, 0, 381, 382, 1135, 1093, 1136, 383,
	384, 385, 1137, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 1129,
	1138, 397, 398, 1139, 0, 399, 0, 0, 0, 400,
	401, 1084, 1083, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 1140, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 1141, 432, 0, 260, 1142,
	442, 443, 0, 1094, 444, 623, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 1143, 455, 1144, 1123, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 1124, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 630, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 1145, 505, 506, 507, 508, 631, 1182, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 1087, 530,
	531, 514, 515, 532, 533, 1146, 534, 535, 536, 537,
	538, 539, 632, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 633, 546, 547, 548, 549, 1125, 552,
	0, 553, 554, 0, 551, 0, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 635, 636, 637,
	638, 0, 572, 0, 564, 565, 566, 1126, 567, 1127,
	0, 568, 569, 570, 571, 0, 573, 574, 0, 0,
	575, 576, 577, 579, 580, 578, 581, 1088, 582, 0,
	0, 583, 584, 585, 641, 642, 643, 0, 587, 586,
	588, 644, 0, 1012, 0, 1267, 589, 590, 645, 591,
	592, 593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 263, 262, 264, 265, 266, 267, 0,
	268, 269, 0, 0, 0, 0, 1768, 594, 0, 0,
	0, 0, 270, 271, 1130, 272, 273, 274, 275, 276,
	277, 595, 596, 0, 278, 597, 279, 598, 0, 599,
	280, 281, 282, 283, 284, 285, 0, 0, 0, 286,
	600, 601, 602, 0, 287, 288, 603, 0, 1272, 0,
	289, 290, 291, 292, 293, 294, 295, 0, 0, 297,
	298, 299, 296, 300, 0, 301, 0, 302, 303, 304,
	305, 306, 307, 0, 308, 309, 310, 1131, 311, 312,
	0, 0, 0, 0, 0, 0, 0, 313, 314, 315,
	316, 0, 317, 604, 605, 0, 321, 318, 319, 0,
	322, 320, 0, 323, 324, 325, 0, 0, 326, 327,
	328, 0, 329, 330, 0, 331, 332, 333, 0, 334,
	335, 606, 336, 337, 338, 340, 342, 339, 343, 344,
	345, 346, 607, 608, 347, 0, 258, 0, 0, 0,
	0, 0, 348, 349, 350, 609, 0, 0, 0, 351,
	0, 352, 0, 0, 1132, 353, 354, 610, 611, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 363, 612,
	0, 613, 364, 0, 365, 366, 367, 368, 369, 614,
	615, 616, 445, 1134, 370, 371, 0, 372, 373, 374,
	375, 0, 0, 0, 0, 376, 377, 378, 380, 0,
	1133, 379, 617, 618, 0, 619, 0, 381, 382, 1135,
	620, 1136, 383, 384, 385, 1137, 386, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 0, 393, 395, 394,
	0, 396, 621, 1138, 397, 398, 1139, 0, 399, 0,
	0, 0, 400, 401, 0, 0, 402, 403, 404, 405,
	0, 406, 407, 409, 412, 408, 410, 411, 413, 426,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 428, 0, 427, 1140, 429, 430, 431, 436,
	438, 439, 434, 435, 437, 440, 441, 433, 1141, 432,
	0, 0, 1142, 442, 443, 0, 622, 444, 623, 446,
	447, 0, 0, 448, 0, 0, 0, 450, 451, 452,
	0, 0, 453, 454, 624, 1143, 455, 1144, 625, 456,
	457, 449, 458, 459, 460, 461, 462, 463, 464, 465,
	0, 466, 467, 626, 468, 469, 470, 627, 471, 472,
	473, 628, 474, 629, 475, 476, 0, 477, 478, 0,
	479, 480, 481, 482, 483, 484, 485, 630, 486, 488,
	487, 489, 0, 490, 0, 491, 492, 0, 0, 0,
	0, 493, 0, 495, 496, 497, 494, 498, 499, 500,
	501, 0, 502, 503, 504, 1145, 505, 506, 507, 508,
	631, 509, 0, 510, 511, 517, 518, 512, 513, 519,
	520, 521, 522, 523, 220, 525, 526, 524, 527, 528,
	529, 0, 530, 531, 514, 515, 532, 533, 1146, 534,
	535, 536, 537, 538, 539, 632, 0, 540, 0, 541,
	542, 543, 544, 516, 545, 550, 633, 546, 547, 548,
	549, 634, 552, 0, 553, 554, 0, 551, 222, 555,
	556, 557, 558, 559, 560, 561, 341, 562, 0, 563,
	635, 636, 637, 638, 0, 572, 0, 564, 565, 566,
	639, 567, 640, 0, 568, 569, 570, 571, 0, 573,
	574, 0, 0, 575, 576, 577, 579, 580, 578, 581,
	0, 582, 0, 0, 583, 584, 585, 1539, 642, 643,
	0, 587, 586, 588, 644, 0, 0, 0, 214, 589,
	590, 645, 591, 592, 593, 0, 0, 215, 0, 0,
	0, 1536, 0, 1267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	261, 263, 262, 264, 265, 266, 267, 0, 268, 269,
	0, 0, 0, 0, 0, 594, 0, 0, 0, 0,
	270, 271, 1130, 272, 273, 274, 275, 276, 277, 595,
	596, 0, 278, 597, 279, 598, 0, 599, 280, 281,
	282, 283, 284, 285, 0, 0, 0, 286, 600, 601,
	602, 0, 287, 288, 603, 0, 1272, 0, 289, 290,
	291, 292, 293, 294, 295, 0, 0, 297, 298, 299,
	296, 300, 0, 301, 0, 302, 303, 304, 305, 306,
	307, 0, 308, 309, 310, 1131, 311, 312, 0, 0,
	0, 0, 0, 0, 0, 313, 314, 315, 316, 0,
	317, 604, 605, 0, 321, 318, 319, 0, 322, 320,
	0, 323, 324, 325, 0, 0, 326, 327, 328, 0,
	329, 330, 0, 331, 332, 333, 0, 334, 335, 606,
	336, 337, 338, 340, 342, 339, 343, 344, 345, 346,
	607, 608, 347, 0, 258, 0, 0, 0, 0, 0,
	348, 349, 350, 609, 0, 0, 0, 351, 0, 352,
	0, 0, 1132, 353, 354, 610, 611, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 363, 612, 0, 613,
	364, 0, 365, 366, 367, 368, 369, 614, 615, 616,
	445, 1134, 370, 371, 0, 372, 373, 374, 375, 0,
	0, 0, 0, 376, 377, 378, 380, 0, 1133, 379,
	617, 618, 0, 619, 0, 381, 382, 1135, 620, 1136,
	383, 384, 385, 1137, 386, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 0, 393, 395, 394, 0, 396,
	621, 1138, 397, 398, 1139, 0, 399, 0, 0, 0,
	400, 401, 0, 0, 402, 403, 404, 405, 0, 406,
	407, 409, 412, 408, 410, 411, 413, 426, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	428, 0, 427, 1140, 429, 430, 431, 436, 438, 439,
	434, 435, 437, 440, 441, 433, 1141, 432, 0, 0,
	1142, 442, 443, 0, 622, 444, 623, 446, 447, 0,
	0, 448, 0, 0, 0, 450, 451, 452, 0, 0,
	453, 454, 624, 1143, 455, 1144, 625, 456, 457, 449,
	458, 459, 460, 461, 462, 463, 464, 465, 0, 466,
	467, 626, 468, 469, 470, 627, 471, 472, 473, 628,
	474, 629, 475, 476, 0, 477, 478, 0, 479, 480,
	481, 482, 483, 484, 485, 630, 486, 488, 487, 489,
	0, 490, 0, 491, 492, 0, 0, 0, 0, 493,
	0, 495, 496, 497, 494, 498, 499, 500, 501, 0,
	502, 503, 504, 1145, 505, 506, 507, 508, 631, 509,
	0, 510, 511, 517, 518, 512, 513, 519, 520, 521,
	522, 523, 220, 525, 526, 524, 527, 528, 529, 0,
	530, 531, 514, 515, 532, 533, 1146, 534, 535, 536,
	537, 538, 539, 632, 0, 540, 0, 541, 542, 543,
	544, 516, 545, 550, 633, 546, 547, 548, 549, 634,
	552, 0, 553, 554, 0, 551, 222, 555, 556, 557,
	558, 559, 560, 561, 341, 562, 0, 563, 635, 636,
	637, 638, 0, 572, 0, 564, 565, 566, 639, 567,
	640, 0, 568, 569, 570, 571, 0, 573, 574, 0,
	0, 575, 576, 577, 579, 580, 578, 581, 0, 582,
	0, 0, 583, 584, 585, 1539, 642, 643, 0, 587,
	586, 588, 644, 0, 0, 0, 214, 589, 590, 645,
	591, 592, 593, 1267, 1266, 215, 0, 0, 0, 1264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 263, 262, 264, 265, 266, 267, 181, 268, 269,
	0, 0, 0, 0, 0, 594, 0, 0, 0, 0,
	270, 271, 1130, 272, 273, 274, 275, 276, 277, 595,
	596, 0, 278, 597, 279, 598, 0, 599, 280, 281,
	282, 283, 284, 285, 0, 0, 0, 286, 600, 601,
	602, 0, 287, 288, 603, 0, 1272, 0, 289, 290,
	291, 292, 293, 294, 295, 0, 0, 297, 298, 299,
	296, 300, 0, 301, 0, 302, 303, 304, 305, 306,
	307, 0, 308, 309, 310, 1131, 311, 312, 0, 0,
	0, 0, 0, 0, 0, 313, 314, 315, 316, 0,
	317, 604, 605, 0, 321, 318, 319, 0, 322, 320,
	0, 323, 324, 325, 0, 0, 326, 327, 328, 0,
	329, 330, 0, 331, 332, 333, 0, 334, 335, 606,
	336, 337, 338, 340, 342, 339, 343, 344, 345, 346,
	607, 608, 347, 0, 258, 0, 0, 0, 0, 0,
	348, 349, 350, 609, 0, 0, 0, 351, 0, 352,
	0, 0, 1132, 353, 354, 610, 611, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 363, 612, 0, 613,
	364, 0, 365, 366, 367, 368, 369, 614, 615, 616,
	445, 1134, 370, 371, 0, 372, 373, 374, 375, 0,
	0, 0, 0, 376, 377, 378, 380, 0, 1133, 379,
	617, 618, 0, 619, 0, 381, 382, 1135, 620, 1136,
	383, 384, 385, 1137, 386, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 0, 393, 395, 394, 0, 396,
	621, 1138, 397, 398, 1139, 0, 399, 0, 0, 0,
	400, 401, 0, 0, 402, 403, 404, 405, 0, 406,
	407, 409, 412, 408, 410, 411, 413, 426, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	428, 0, 427, 1140, 429, 430, 431, 436, 438, 439,
	434, 435, 437, 440, 441, 433, 1141, 432, 0, 0,
	1142, 442, 443, 0, 622, 444, 623, 446, 447, 0,
	0, 448, 0, 0, 0, 450, 451, 452, 0, 0,
	453, 454, 624, 1143, 455, 1144, 625, 456, 457, 449,
	458, 459, 460, 461, 462, 463, 464, 465, 0, 466,
	467, 626, 468, 469, 470, 627, 471, 472, 473, 628,
	474, 629, 475, 476, 0, 477, 478, 0, 479, 480,
	481, 482, 483, 484, 485, 630, 486, 488, 487, 489,
	0, 490, 0, 491, 492, 0, 0, 0, 0, 493,
	0, 495, 496, 497, 494, 498, 499, 500, 501, 0,
	502, 503, 504, 1145, 505, 506, 507, 508, 631, 509,
	0, 510, 511, 517, 518, 512, 513, 519, 520, 521,
	522, 523, 0, 525, 526, 524, 527, 528, 529, 0,
	530, 531, 514, 515, 532, 533, 1146, 534, 535, 536,
	537, 538, 539, 632, 0, 540, 0, 541, 542, 543,
	544, 516, 545, 550, 633, 546, 547, 548, 549, 634,
	552, 0, 553, 554, 0, 551, 0, 555, 556, 557,
	558, 559, 560, 561, 341, 562, 0, 563, 635, 636,
	637, 638, 0, 572, 0, 564, 565, 566, 639, 567,
	640, 0, 568, 569, 570, 571, 0, 573, 574, 0,
	0, 575, 576, 577, 579, 580, 578, 581, 0, 582,
	0, 0, 583, 584, 585, 641, 642, 643, 0, 587,
	586, 588, 644, 0, 0, 0, 0, 589, 590, 645,
	591, 592, 593, 1267, 1266, 0, 0, 0, 0, 1264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 263, 262, 264, 265, 266, 267, 1561, 268, 269,
	0, 0, 0, 0, 0, 594, 0, 0, 0, 0,
	270, 271, 1130, 272, 273, 274, 275, 276, 277, 595,
	596, 0, 278, 597, 279, 598, 0, 599, 280, 281,
	282, 283, 284, 285, 0, 0, 0, 286, 600, 601,
	602, 0, 287, 288, 603, 0, 1272, 0, 289, 290,
	291, 292, 293, 294, 295, 0, 0, 297, 298, 299,
	296, 300, 0, 301, 0, 302, 303, 304, 305, 306,
	307, 0, 308, 309, 310, 1131, 311, 312, 0, 0,
	0, 0, 0, 0, 0, 313, 314, 315, 316, 0,
	317, 604, 605, 0, 321, 318, 319, 0, 322, 320,
	0, 323, 324, 325, 0, 0, 326, 327, 328, 0,
	329, 330, 0, 331, 332, 333, 0, 334, 335, 606,
	336, 337, 338, 340, 342, 339, 343, 344, 345, 346,
	607, 608, 347, 0, 258, 0, 0, 0, 0, 0,
	348, 349, 350, 609, 0, 0, 0, 351, 0, 352,
	0, 0, 1132, 353, 354, 610, 611, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 363, 612, 0, 613,
	364, 0, 365, 366, 367, 368, 369, 614, 615, 616,
	445, 1134, 370, 371, 0, 372, 373, 374, 375, 0,
	0, 0, 0, 376, 377, 378, 380, 0, 1133, 379,
	617, 618, 0, 619, 0, 381, 382, 1135, 620, 1136,
	383, 384, 385, 1137, 386, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 0, 393, 395, 394, 0, 396,
	621, 1138, 397, 398, 1139, 0, 399, 0, 0, 0,
	400, 401, 0, 0, 402, 403, 404, 405, 0, 406,
	407, 409, 412, 408, 410, 411, 413, 426, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	428, 0, 427, 1140, 429, 430, 431, 436, 438, 439,
	434, 435, 437, 440, 441, 433, 1141, 432, 0, 0,
	1142, 442, 443, 0, 622, 444, 623, 446, 447, 0,
	0, 448, 0, 0, 0, 450, 451, 452, 0, 0,
	453, 454, 624, 1143, 455, 1144, 625, 456, 457, 449,
	458, 459, 460, 461, 462, 463, 464, 465, 0, 466,
	467, 626, 468, 469, 470, 627, 471, 472, 473, 628,
	474, 629, 475, 476, 0, 477, 478, 0, 479, 480,
	481, 482, 483, 484, 485, 630, 486, 488, 487, 489,
	0, 490, 0, 491, 492, 0, 0, 0, 0, 493,
	0, 495, 496, 497, 494, 498, 499, 500, 501, 0,
	502, 503, 504, 1145, 505, 506, 507, 508, 631, 509,
	0, 510, 511, 517, 518, 512, 513, 519, 520, 521,
	522, 523, 0, 525, 526, 524, 527, 528, 529, 0,
	530, 531, 514, 515, 532, 533, 1146, 534, 535, 536,
	537, 538, 539, 632, 0, 540, 0, 541, 542, 543,
	544, 516, 545, 550, 633, 546, 547, 548, 549, 634,
	552, 0, 553, 554, 0, 551, 0, 555, 556, 557,
	558, 559, 560, 561, 341, 562, 0, 563, 635, 636,
	637, 638, 0, 572, 0, 564, 565, 566, 639, 567,
	640, 0, 568, 569, 570, 571, 0, 573, 574, 0,
	0, 575, 576, 577, 579, 580, 578, 581, 0, 582,
	0, 0, 583, 584, 585, 641, 642, 643, 0, 587,
	586, 588, 644, 0, 0, 0, 0, 589, 590, 645,
	591, 592, 593, 1267, 2109, 0, 0, 0, 0, 2110,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 263, 262, 264, 265, 266, 267, 3380, 268, 269,
	0, 0, 0, 0, 0, 594, 0, 0, 0, 0,
	270, 271, 1130, 272, 273, 274, 275, 276, 277, 595,
	596, 0, 278, 597, 279, 598, 0, 599, 280, 281,
	282, 283, 284, 285, 0, 0, 0, 286, 600, 601,
	602, 0, 287, 288, 603, 0, 1272, 0, 289, 290,
	291, 292, 293, 294, 295, 0, 0, 297, 298, 299,
	296, 300, 0, 301, 0, 302, 303, 304, 305, 306,
	307, 0, 308, 309, 310, 1131, 311, 312, 0, 0,
	0, 0, 0, 0, 0, 313, 314, 315, 316, 0,
	317, 604, 605, 0, 321, 318, 319, 0, 322, 320,
	0, 323, 324, 325, 0, 0, 326, 327, 328, 0,
	329, 330, 0, 331, 332, 333, 0, 334, 335, 606,
	336, 337, 338, 340, 342, 339, 343, 344, 345, 346,
	607, 608, 347, 0, 258, 0, 0, 0, 0, 0,
	348, 349, 350, 609, 0, 0, 0, 351, 0, 352,
	0, 0, 1132, 353, 354, 610, 611, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 363, 612, 0, 613,
	364, 0, 365, 366, 367, 368, 369, 614, 615, 616,
	445, 1134, 370, 371, 0, 372, 373, 374, 375, 0,
	0, 0, 0, 376, 377, 378, 380, 0, 1133, 379,
	617, 618, 0, 619, 0, 381, 382, 1135, 620, 1136,
	383, 384, 385, 1137, 386, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 0, 2108, 395, 394, 0, 396,
	621, 1138, 397, 398, 1139, 0, 399, 0, 0, 0,
	400, 401, 0, 0, 402, 403, 404, 405, 0, 406,
	407, 409, 412, 408, 410, 411, 413, 426, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	428, 0, 427, 1140, 429, 430, 431, 436, 438, 439,
	434, 435, 437, 440, 441, 433, 1141, 432, 0, 0,
	1142, 442, 443, 0, 622, 444, 623, 446, 447, 0,
	0, 448, 0, 0, 0, 450, 451, 452, 0, 0,
	453, 454, 624, 1143, 455, 1144, 625, 456, 457, 449,
	458, 459, 460, 461, 462, 463, 464, 465, 0, 466,
	467, 626, 468, 469, 470, 627, 471, 472, 473, 628,
	474, 629, 475, 476, 0, 477, 478, 0, 479, 480,
	481, 482, 483, 484, 485, 630, 486, 488, 487, 489,
	0, 490, 0, 491, 492, 0, 0, 0, 0, 493,
	0, 495, 496, 497, 494, 498, 499, 500, 501, 0,
	502, 503, 504, 1145, 505, 506, 507, 508, 631, 509,
	0, 510, 511, 517, 518, 512, 513, 519, 520, 521,
	522, 523, 0, 525, 526, 524, 527, 528, 529, 0,
	530, 531, 514, 515, 532, 533, 1146, 534, 535, 536,
	537, 538, 539, 632, 0, 540, 0, 541, 542, 543,
	544, 516, 545, 550, 633, 546, 547, 548, 549, 634,
	552, 0, 553, 554, 0, 551, 0, 555, 556, 557,
	558, 559, 560, 561, 341, 562, 0, 563, 635, 636,
	637, 638, 0, 572, 0, 564, 565, 566, 639, 567,
	640, 0, 568, 569, 570, 571, 0, 573, 574, 0,
	0, 575, 576, 577, 579, 580, 578, 581, 0, 582,
	0, 0, 583, 584, 585, 641, 642, 643, 0, 587,
	586, 588, 644, 0, 0, 0, 0, 589, 590, 645,
	591, 592, 593, 1267, 1266, 0, 0, 0, 0, 1264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 263, 262, 264, 265, 266, 267, 1561, 268, 269,
	0, 0, 0, 0, 0, 594, 0, 0, 0, 0,
	270, 271, 1130, 272, 273, 274, 275, 276, 277, 595,
	596, 0, 278, 597, 279, 598, 0, 599, 280, 281,
	282, 283, 284, 285, 0, 0, 0, 286, 600, 601,
	602, 0, 287, 288, 603, 0, 1272, 0, 289, 290,
	291, 292, 293, 294, 295, 0, 0, 297, 298, 299,
	296, 300, 0, 301, 0, 302, 303, 304, 305, 306,
	307, 0, 308, 309, 310, 1131, 311, 312, 0, 0,
	0, 0, 0, 0, 0, 313, 314, 315, 316, 0,
	317, 604, 605, 0, 321, 318, 319, 0, 322, 320,
	0, 323, 324, 325, 0, 0, 326, 327, 328, 0,
	329, 330, 0, 331, 332, 333, 0, 334, 335, 606,
	336, 337, 338, 340, 342, 339, 343, 344, 345, 346,
	607, 608, 347, 0, 258, 0, 0, 0, 0, 0,
	348, 349, 350, 609, 0, 0, 0, 351, 0, 352,
	0, 0, 1132, 353, 354, 610, 611, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 363, 612, 0, 613,
	364, 0, 365, 366, 367, 368, 369, 614, 615, 616,
	445, 1134, 370, 371, 0, 372, 373, 374, 375, 0,
	0, 0, 0, 376, 377, 378, 380, 0, 1133, 379,
	617, 618, 0, 619, 0, 381, 382, 1135, 620, 1136,
	383, 384, 385, 1137, 386, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 0, 393, 395, 394, 0, 396,
	621, 1138, 397, 398, 1139, 0, 399, 0, 0, 0,
	400, 401, 0, 0, 402, 403, 404, 405, 0, 406,
	407, 409, 412, 408, 410, 411, 413, 426, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	428, 0, 427, 1140, 429, 430, 431, 436, 438, 439,
	434, 435, 437, 440, 441, 433, 1141, 432, 0, 0,
	1142, 442, 443, 0, 622, 444, 623, 446, 447, 0,
	0, 448, 0, 0, 0, 450, 451, 452, 0, 0,
	453, 454, 624, 1143, 455, 1144, 625, 456, 457, 449,
	458, 459, 460, 461, 462, 463, 464, 465, 0, 466,
	467, 626, 468, 469, 470, 627, 471, 472, 473, 628,
	474, 629, 475, 476, 0, 477, 478, 0, 479, 480,
	481, 482, 483, 484, 485, 630, 486, 488, 487, 489,
	0, 490, 0, 491, 492, 0, 0, 0, 0, 493,
	0, 495, 496, 497, 494, 498, 499, 500, 501, 0,
	502, 503, 504, 1145, 505, 506, 507, 508, 631, 509,
	0, 510, 511, 517, 518, 512, 513, 519, 520, 521,
	522, 523, 0, 525, 526, 524, 527, 528, 529, 0,
	530, 531, 514, 515, 532, 533, 1146, 534, 535, 536,
	537, 538, 539, 632, 0, 540, 0, 541, 542, 543,
	544, 516, 545, 550, 633, 546, 547, 548, 549, 634,
	552, 0, 553, 554, 0, 551, 0, 555, 556, 557,
	558, 559, 560, 561, 341, 562, 0, 563, 635, 636,
	637, 638, 0, 572, 0, 564, 565, 566, 639, 567,
	640, 0, 568, 569, 570, 571, 0, 573, 574, 0,
	0, 575, 576, 577, 579, 580, 578, 581, 0, 582,
	0, 0, 583, 584, 585, 641, 642, 643, 0, 587,
	586, 588, 644, 1188, 0, 0, 0, 589, 590, 645,
	591, 592, 593, 0, 0, 0, 0, 0, 0, 0,
	261, 263, 262, 264, 265, 266, 267, 0, 268, 269,
	0, 0, 0, 0, 0, 1090, 0, 1545, 0, 0,
	270, 271, 1130, 272, 273, 274, 275, 276, 277, 595,
	596, 0, 278, 597, 279, 598, 0, 599, 280, 281,
	282, 283, 284, 285, 0, 1089, 0, 286, 600, 601,
	602, 0, 287, 288, 1096, 0, 1077, 0, 289, 290,
	291, 292, 293, 294, 295, 0, 0, 297, 298, 299,
	296, 300, 0, 301, 0, 302, 303, 304, 305, 306,
	307, 0, 308, 309, 310, 1131, 311, 312, 1080, 1078,
	1079, 1086, 1082, 1081, 1085, 313, 314, 315, 316, 0,
	317, 604, 605, 0, 321, 318, 319, 0, 322, 320,
	0, 323, 324, 325, 0, 0, 326, 327, 328, 0,
	329, 330, 0, 331, 332, 333, 0, 334, 335, 606,
	336, 337, 338, 340, 342, 339, 343, 344, 345, 346,
	1121, 1122, 347, 0, 258, 0, 0, 0, 0, 0,
	348, 349, 350, 609, 0, 0, 0, 351, 0, 352,
	0, 0, 1132, 353, 354, 610, 611, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 363, 1128, 0, 613,
	364, 0, 365, 366, 367, 368, 369, 1091, 1092, 1095,
	445, 1134, 370, 371, 0, 372, 373, 374, 375, 0,
	0, 0, 259, 376, 377, 378, 380, 0, 1133, 379,
	617, 618, 0, 619, 0, 381, 382, 1135, 1093, 1136,
	383, 384, 385, 1137, 386, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 0, 393, 395, 394, 0, 396,
	1129, 1138, 397, 398, 1139, 0, 399, 0, 0, 0,
	400, 401, 1084, 1083, 402, 403, 404, 405, 0, 406,
	407, 409, 412, 408, 410, 411, 413, 426, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	428, 0, 427, 1140, 429, 430, 431, 436, 438, 439,
	434, 435, 437, 440, 441, 433, 1141, 432, 0, 260,
	1142, 442, 443, 0, 1094, 444, 623, 446, 447, 0,
	0, 448, 0, 0, 0, 450, 451, 452, 0, 0,
	453, 454, 624, 1143, 455, 1144, 1123, 456, 457, 449,
	458, 459, 460, 461, 462, 463, 464, 465, 0, 466,
	467, 626, 468, 469, 470, 627, 471, 472, 473, 1124,
	474, 629, 475, 476, 0, 477, 478, 0, 479, 480,
	481, 482, 483, 484, 485, 630, 486, 488, 487, 489,
	0, 490, 0, 491, 492, 0, 0, 0, 0, 493,
	0, 495, 496, 497, 494, 498, 499, 500, 501, 0,
	502, 503, 504, 1145, 505, 506, 507, 508, 631, 509,
	0, 510, 511, 517, 518, 512, 513, 519, 520, 521,
	522, 523, 0, 525, 526, 524, 527, 528, 529, 1087,
	530, 531, 514, 515, 532, 533, 1146, 534, 535, 536,
	537, 538, 539, 632, 0, 540, 0, 541, 542, 543,
	544, 516, 545, 550, 633, 546, 547, 548, 549, 1125,
	552, 0, 553, 554, 0, 551, 0, 555, 556, 557,
	558, 559, 560, 561, 341, 562, 0, 563, 635, 636,
	637, 638, 0, 572, 0, 564, 565, 566, 1126, 567,
	1127, 0, 568, 569, 570, 571, 0, 573, 574, 0,
	0, 575, 576, 577, 579, 580, 578, 581, 1088, 582,
	0, 0, 583, 584, 585, 641, 642, 643, 0, 587,
	586, 588, 644, 1012, 0, 255, 0, 589, 590, 645,
	591, 592, 593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 263, 262, 264, 265, 266, 267, 0,
	268, 269, 0, 0, 0, 0, 0, 594, 0, 0,
	0, 0, 270, 271, 0, 272, 273, 274, 275, 276,
	277, 595, 596, 0, 278, 597, 279, 598, 0, 599,
	280, 281, 282, 283, 284, 285, 0, 0, 0, 286,
	600, 601, 602, 0, 287, 288, 603, 0, 0, 0,
	289, 290, 291, 292, 293, 294, 295, 0, 0, 297,
	298, 299, 296, 300, 0, 301, 0, 302, 303, 304,
	305, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	0, 0, 0, 0, 0, 0, 0, 313, 314, 315,
	316, 0, 317, 604, 605, 0, 321, 318, 319, 0,
	322, 320, 0, 323, 324, 325, 0, 0, 326, 327,
	328, 0, 329, 330, 0, 331, 332, 333, 0, 334,
	335, 606, 336, 337, 338, 340, 342, 339, 343, 344,
	345, 346, 607, 608, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 609, 0, 0, 0, 351,
	0, 352, 0, 0, 0, 353, 354, 610, 611, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 363, 612,
	0, 613, 364, 0, 365, 366, 367, 368, 369, 614,
	615, 616, 445, 0, 370, 371, 0, 372, 373, 374,
	375, 0, 0, 0, 0, 376, 377, 378, 380, 0,
	0, 379, 617, 618, 0, 619, 0, 381, 382, 0,
	620, 0, 383, 384, 385, 0, 386, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 0, 393, 395, 394,
	0, 396, 621, 0, 397, 398, 0, 0, 399, 0,
	0, 0, 400, 401, 0, 0, 402, 403, 404, 405,
	0, 406, 407, 409, 412, 408, 410, 411, 413, 426,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 428, 0, 427, 0, 429, 430, 431, 436,
	438, 439, 434, 435, 437, 440, 441, 433, 0, 432,
	0, 0, 0, 442, 443, 0, 622, 444, 623, 446,
	447, 0, 0, 448, 0, 0, 0, 450, 451, 452,
	0, 0, 453, 454, 624, 0, 455, 0, 625, 456,
	457, 449, 458, 459, 460, 461, 462, 463, 464, 465,
	0, 466, 467, 626, 468, 469, 470, 627, 471, 472,
	473, 628, 474, 629, 475, 476, 0, 477, 478, 0,
	479, 480, 481, 482, 483, 484, 485, 630, 486, 488,
	487, 489, 0, 490, 0, 491, 492, 0, 0, 0,
	0, 493, 0, 495, 496, 497, 494, 498, 499, 500,
	501, 0, 502, 503, 504, 0, 505, 506, 507, 508,
	631, 509, 0, 510, 511, 517, 518, 512, 513, 519,
	520, 521, 522, 523, 220, 525, 526, 524, 527, 528,
	529, 0, 530, 531, 514, 515, 532, 533, 0, 534,
	535, 536, 537, 538, 539, 632, 0, 540, 0, 541,
	542, 543, 544, 516, 545, 550, 633, 546, 547, 548,
	549, 634, 552, 0, 553, 554, 0, 551, 222, 555,
	556, 557, 558, 559, 560, 561, 341, 562, 0, 563,
	635, 636, 637, 638, 0, 572, 0, 564, 565, 566,
	639, 567, 640, 0, 568, 569, 570, 571, 0, 573,
	574, 0, 0, 575, 576, 577, 579, 580, 578, 581,
	0, 582, 0, 0, 583, 584, 585, 1539, 642, 643,
	0, 587, 586, 588, 644, 255, 0, 0, 214, 589,
	590, 645, 591, 592, 593, 0, 0, 215, 0, 0,
	0, 0, 261, 263, 262, 264, 265, 266, 267, 0,
	268, 269, 0, 0, 0, 0, 0, 594, 0, 181,
	0, 0, 270, 271, 0, 272, 273, 274, 275, 276,
	277, 595, 596, 0, 278, 597, 279, 598, 0, 599,
	280, 281, 282, 283, 284, 285, 0, 0, 0, 286,
	600, 601, 602, 0, 287, 288, 603, 0, 0, 0,
	289, 290, 291, 292, 293, 294, 295, 0, 0, 297,
	298, 299, 296, 300, 0, 301, 0, 302, 303, 304,
	305, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	0, 0, 0, 0, 0, 0, 0, 313, 314, 315,
	316, 0, 317, 604, 605, 0, 321, 318, 319, 0,
	322, 320, 0, 323, 324, 325, 0, 0, 326, 327,
	328, 0, 329, 330, 0, 331, 332, 333, 0, 334,
	335, 606, 336, 337, 338, 340, 342, 339, 343, 344,
	345, 346, 607, 608, 347, 0, 258, 0, 0, 0,
	0, 0, 348, 349, 350, 609, 0, 0, 0, 351,
	0, 352, 0, 0, 0, 353, 354, 610, 611, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 363, 612,
	0, 613, 364, 0, 365, 366, 367, 368, 369, 614,
	615, 616, 445, 0, 370, 371, 0, 372, 373, 374,
	375, 0, 0, 0, 259, 376, 377, 378, 380, 0,
	0, 379, 617, 618, 0, 619, 0, 381, 382, 0,
	620, 0, 383, 384, 385, 0, 386, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 0, 393, 395, 394,
	0, 396, 621, 0, 397, 398, 0, 0, 399, 0,
	0, 0, 400, 401, 0, 0, 402, 403, 404, 405,
	0, 406, 407, 409, 412, 408, 410, 411, 413, 426,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 428, 0, 427, 0, 429, 430, 431, 436,
	438, 439, 434, 435, 437, 440, 441, 433, 0, 432,
	0, 260, 0, 442, 443, 0, 622, 444, 623, 446,
	447, 0, 0, 448, 0, 0, 0, 450, 451, 452,
	0, 0, 453, 454, 624, 0, 455, 0, 625, 456,
	457, 449, 458, 459, 460, 461, 462, 463, 464, 465,
	0, 466, 467, 626, 468, 469, 470, 627, 471, 472,
	473, 628, 474, 629, 475, 476, 0, 477, 478, 0,
	479, 480, 481, 482, 483, 484, 485, 630, 486, 488,
	487, 489, 0, 490, 0, 491, 492, 0, 0, 0,
	0, 493, 0, 495, 496, 497, 494, 498, 499, 500,
	501, 0, 502, 503, 504, 0, 505, 506, 507, 508,
	631, 509, 0, 510, 511, 517, 518, 512, 513, 519,
	520, 521, 522, 523, 0, 525, 526, 524, 527, 528,
	529, 0, 530, 531, 514, 515, 532, 533, 0, 534,
	535, 536, 537, 538, 539, 632, 0, 540, 0, 541,
	542, 543, 544, 516, 545, 550, 633, 546, 547, 548,
	549, 634, 552, 0, 553, 554, 0, 551, 0, 555,
	556, 557, 558, 559, 560, 561, 341, 562, 0, 563,
	635, 636, 637, 638, 0, 572, 0, 564, 565, 566,
	639, 567, 640, 0, 568, 569, 570, 571, 0, 573,
	574, 0, 0, 575, 576, 577, 579, 580, 578, 581,
	0, 582, 0, 0, 583, 584, 585, 641, 642, 643,
	0, 587, 586, 588, 644, 255, 2853, 0, 0, 589,
	590, 645, 591, 592, 593, 0, 0, 0, 0, 0,
	0, 0, 261, 263, 262, 264, 265, 266, 267, 0,
	268, 269, 0, 0, 0, 0, 0, 594, 0, 1883,
	0, 0, 270, 271, 0, 272, 273, 274, 275, 276,
	277, 595, 596, 0, 278, 597, 279, 598, 0, 599,
	280, 281, 282, 283, 284, 285, 0, 0, 0, 286,
	600, 601, 602, 0, 287, 288, 603, 0, 0, 0,
	289, 290, 291, 292, 293, 294, 295, 0, 0, 297,
	298, 299, 296, 300, 0, 301, 0, 302, 303, 304,
	305, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	0, 0, 0, 0, 0, 0, 0, 313, 314, 315,
	316, 0, 317, 604, 605, 0, 321, 318, 319, 0,
	322, 320, 0, 323, 324, 325, 0, 0, 326, 327,
	328, 0, 329, 330, 0, 331, 332, 333, 0, 334,
	335, 606, 336, 337, 338, 340, 342, 339, 343, 344,
	345, 346, 607, 608, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 609, 0, 0, 0, 351,
	0, 352, 0, 0, 0, 353, 354, 610, 611, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 363, 612,
	0, 613, 364, 0, 365, 366, 367, 368, 369, 614,
	615, 616, 445, 0, 370, 371, 0, 372, 373, 374,
	375, 0, 0, 0, 0, 376, 377, 378, 380, 0,
	0, 379, 617, 618, 0, 619, 0, 381, 382, 0,
	620, 0, 383, 384, 385, 0, 386, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 0, 393, 395, 394,
	0, 396, 621, 0, 397, 398, 0, 0, 399, 0,
	0, 0, 400, 401, 0, 0, 402, 403, 404, 405,
	0, 406, 407, 409, 412, 408, 410, 411, 413, 426,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 428, 0, 427, 0, 429, 430, 431, 436,
	438, 439, 434, 435, 437, 440, 441, 433, 0, 432,
	0, 0, 0, 442, 443, 0, 622, 444, 623, 446,
	447, 0, 0, 448, 0, 0, 0, 450, 451, 452,
	0, 0, 453, 454, 624, 0, 455, 0, 625, 456,
	457, 449, 458, 459, 460, 461, 462, 463, 464, 465,
	0, 466, 467, 626, 468, 469, 470, 627, 471, 472,
	473, 628, 474, 629, 475, 476, 0, 477, 478, 0,
	479, 480, 481, 482, 483, 484, 485, 630, 486, 488,
	487, 489, 0, 490, 0, 491, 492, 0, 0, 0,
	0, 493, 0, 495, 496, 497, 494, 498, 499, 500,
	501, 0, 502, 503, 504, 0, 505, 506, 507, 508,
	631, 509, 0, 510, 511, 517, 518, 512, 513, 519,
	520, 521, 522, 523, 0, 525, 526, 524, 527, 528,
	529, 0, 530, 531, 514, 515, 532, 533, 0, 534,
	535, 536, 537, 538, 539, 632, 0, 540, 0, 541,
	542, 543, 544, 516, 545, 550, 633, 546, 547, 548,
	549, 634, 552, 0, 553, 554, 0, 551, 0, 555,
	556, 557, 558, 559, 560, 561, 341, 562, 0, 563,
	635, 636, 637, 638, 0, 572, 0, 564, 565, 566,
	639, 567, 640, 0, 568, 569, 570, 571, 0, 573,
	574, 0, 0, 575, 576, 577, 579, 580, 578, 581,
	0, 582, 0, 0, 583, 584, 585, 641, 642, 643,
	255, 587, 586, 588, 644, 0, 0, 0, 0, 589,
	590, 645, 591, 592, 593, 0, 0, 261, 263, 262,
	264, 265, 266, 267, 0, 268, 269, 0, 0, 0,
	0, 0, 594, 0, 0, 0, 0, 270, 271, 4473,
	272, 273, 274, 275, 276, 277, 595, 596, 0, 278,
	597, 279, 598, 0, 599, 280, 281, 282, 283, 284,
	285, 0, 0, 0, 286, 600, 601, 602, 0, 287,
	288, 603, 0, 0, 0, 289, 290, 291, 292, 293,
	294, 295, 0, 0, 297, 298, 299, 296, 300, 0,
	301, 0, 302, 303, 304, 305, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 0, 0, 0, 0, 0,
	0, 0, 313, 314, 315, 316, 0, 317, 604, 605,
	0, 321, 318, 319, 0, 322, 320, 0, 323, 324,
	325, 0, 0, 326, 327, 328, 0, 329, 330, 0,
	331, 332, 333, 0, 334, 335, 606, 336, 337, 338,
	340, 342, 339, 343, 344, 345, 346, 607, 608, 347,
	0, 258, 0, 0, 0, 0, 0, 348, 349, 350,
	609, 0, 0, 0, 351, 0, 352, 0, 0, 0,
	353, 354, 610, 611, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 363, 612, 0, 613, 364, 0, 365,
	366, 367, 368, 369, 614, 615, 616, 445, 0, 370,
	371, 0, 372, 373, 374, 375, 0, 0, 0, 259,
	376, 377, 378, 380, 0, 0, 379, 617, 618, 0,
	619, 0, 381, 382, 0, 620, 0, 383, 384, 385,
	0, 386, 0, 0, 0, 387, 388, 389, 390, 391,
	392, 0, 393, 395, 394, 0, 396, 621, 0, 397,
	398, 0, 0, 399, 0, 0, 0, 400, 401, 0,
	0, 402, 403, 404, 405, 0, 406, 407, 409, 412,
	408, 410, 411, 413, 426, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 428, 0, 427,
	0, 429, 430, 431, 436, 438, 439, 434, 435, 437,
	440, 441, 433, 0, 432, 0, 260, 0, 442, 443,
	0, 622, 444, 623, 446, 447, 0, 0, 448, 0,
	0, 0, 450, 451, 452, 0, 0, 453, 454, 624,
	0, 455, 0, 625, 456, 457, 449, 458, 459, 460,
	461, 462, 463, 464, 465, 0, 466, 467, 626, 468,
	469, 470, 627, 471, 472, 473, 628, 474, 629, 475,
	476, 0, 477, 478, 0, 479, 480, 481, 482, 483,
	484, 485, 630, 486, 488, 487, 489, 0, 490, 0,
	491, 492, 0, 0, 0, 0, 493, 0, 495, 496,
	497, 494, 498, 499, 500, 501, 0, 502, 503, 504,
	0, 505, 506, 507, 508, 631, 509, 0, 510, 511,
	517, 518, 512, 513, 519, 520, 521, 522, 523, 0,
	525, 526, 524, 527, 528, 529, 0, 530, 531, 514,
	515, 532, 533, 0, 534, 535, 536, 537, 538, 539,
	632, 0, 540, 0, 541, 542, 543, 544, 516, 545,
	550, 633, 546, 547, 548, 549, 634, 552, 0, 553,
	554, 0, 551, 0, 555, 556, 557, 558, 559, 560,
	561, 341, 562, 0, 563, 635, 636, 637, 638, 0,
	572, 0, 564, 565, 566, 639, 567, 640, 0, 568,
	569, 570, 571, 0, 573, 574, 0, 0, 575, 576,
	577, 579, 580, 578, 581, 0, 582, 0, 0, 583,
	584, 585, 641, 642, 643, 0, 587, 586, 588, 644,
	0, 255, 0, 0, 589, 590, 645, 591, 592, 593,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 263,
	262, 264, 265, 266, 267, 0, 268, 269, 0, 0,
	0, 0, 3331, 594, 0, 0, 0, 0, 270, 271,
	0, 272, 273, 274, 275, 276, 277, 595, 596, 0,
	278, 597, 279, 598, 0, 599, 280, 281, 282, 283,
	284, 285, 0, 0, 0, 286, 600, 601, 602, 0,
	287, 288, 603, 0, 0, 0, 289, 290, 291, 292,
	293, 294, 295, 0, 0, 297, 298, 299, 296, 300,
	0, 301, 0, 302, 303, 304, 305, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 0, 0, 0, 0,
	0, 0, 0, 313, 314, 315, 316, 0, 317, 604,
	605, 0, 321, 318, 319, 0, 322, 320, 0, 323,
	324, 325, 0, 0, 326, 327, 328, 0, 329, 330,
	0, 331, 332, 333, 0, 334, 335, 606, 336, 337,
	338, 340, 342, 339, 343, 344, 345, 346, 607, 608,
	347, 0, 258, 0, 0, 0, 0, 0, 348, 349,
	350, 609, 0, 0, 0, 351, 0, 352, 0, 0,
	0, 353, 354, 610, 611, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 363, 612, 0, 613, 364, 0,
	365, 366, 367, 368, 369, 614, 615, 616, 445, 0,
	370, 371, 0, 372, 373, 374, 375, 0, 0, 0,
	259, 376, 377, 378, 380, 0, 0, 379, 617, 618,
	0, 619, 0, 381, 382, 0, 620, 0, 383, 384,
	385, 0, 386, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 0, 393, 395, 394, 0, 396, 621, 0,
	397, 398, 0, 0, 399, 0, 0, 0, 400, 401,
	0, 0, 402, 403, 404, 405, 0, 406, 407, 409,
	412, 408, 410, 411, 413, 426, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 428, 0,
	427, 0, 429, 430, 431, 436, 438, 439, 434, 435,
	437, 440, 441, 433, 0, 432, 0, 260, 0, 442,
	443, 0, 622, 444, 623, 446, 447, 0, 0, 448,
	0, 0, 0, 450, 451, 452, 0, 0, 453, 454,
	624, 0, 455, 0, 625, 456, 457, 449, 458, 459,
	460, 461, 462, 463, 464, 465, 0, 466, 467, 626,
	468, 469, 470, 627, 471, 472, 473, 628, 474, 629,
	475, 476, 0, 477, 478, 0, 479, 480, 481, 482,
	483, 484, 485, 630, 486, 488, 487, 489, 0, 490,
	0, 491, 492, 0, 0, 0, 0, 493, 0, 495,
	496, 497, 494, 498, 499, 500, 501, 0, 502, 503,
	504, 0, 505, 506, 507, 508, 631, 509, 0, 510,
	511, 517, 518, 512, 513, 519, 520, 521, 522, 523,
	0, 525, 526, 524, 527, 528, 529, 0, 530, 531,
	514, 515, 532, 533, 0, 534, 535, 536, 537, 538,
	539, 632, 0, 540, 0, 541, 542, 543, 544, 516,
	545, 550, 633, 546, 547, 548, 549, 634, 552, 0,
	553, 554, 0, 551, 0, 555, 556, 557, 558, 559,
	560, 561, 341, 562, 0, 563, 635, 636, 637, 638,
	0, 572, 0, 564, 565, 566, 639, 567, 640, 0,
	568, 569, 570, 571, 0, 573, 574, 0, 0, 575,
	576, 577, 579, 580, 578, 581, 0, 582, 0, 0,
	583, 584, 585, 641, 642, 643, 0, 587, 586, 588,
	644, 0, 255, 0, 0, 589, 590, 645, 591, 592,
	593, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 0,
	0, 0, 0, 1533, 594, 0, 0, 0, 0, 270,
	271, 0, 272, 273, 274, 275, 276, 277, 595, 596,
	0, 278, 597, 279, 598, 0, 599, 280, 281, 282,
	283, 284, 285, 0, 0, 0, 286, 600, 601, 602,
	0, 287, 288, 603, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 0, 0, 0,
	0, 0, 0, 0, 313, 314, 315, 316, 0, 317,
	604, 605, 0, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 327, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 606, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 607,
	608, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 609, 0, 0, 0, 351, 0, 352, 0,
	0, 0, 353, 354, 610, 611, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 612, 0, 613, 364,
	0, 365, 366, 367, 368, 369, 614, 615, 616, 445,
	0, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 0, 376, 377, 378, 380, 0, 0, 379, 617,
	618, 0, 619, 0, 381, 382, 0, 620, 0, 383,
	384, 385, 0, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 621,
	0, 397, 398, 0, 0, 399, 0, 0, 0, 400,
	401, 0, 0, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 0, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 0, 432, 0, 0, 0,
	442, 443, 0, 622, 444, 623, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 0, 455, 0, 625, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 628, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 630, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 0, 505, 506, 507, 508, 631, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 0, 530,
	531, 514, 515, 532, 533, 0, 534, 535, 536, 537,
	538, 539, 632, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 633, 546, 547, 548, 549, 634, 552,
	0, 553, 554, 0, 551, 0, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 635, 636, 637,
	638, 0, 572, 0, 564, 565, 566, 639, 567, 640,
	0, 568, 569, 570, 571, 0, 573, 574, 0, 0,
	575, 576, 577, 579, 580, 578, 581, 0, 582, 0,
	0, 583, 584, 585, 641, 642, 643, 255, 587, 586,
	588, 644, 0, 0, 0, 0, 589, 590, 645, 591,
	592, 593, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 594,
	0, 0, 0, 0, 270, 271, 2841, 272, 273, 274,
	275, 276, 277, 595, 596, 0, 278, 597, 279, 598,
	0, 599, 280, 281, 282, 283, 284, 285, 0, 0,
	0, 286, 600, 601, 602, 0, 287, 288, 603, 0,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 0, 0, 0, 0, 0, 0, 0, 313,
	314, 315, 316, 0, 317, 604, 605, 0, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 327, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 606, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 607, 608, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 609, 0, 0,
	0, 351, 0, 352, 0, 0, 0, 353, 354, 610,
	611, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 612, 0, 613, 364, 0, 365, 366, 367, 368,
	369, 614, 615, 616, 445, 0, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 0, 376, 377, 378,
	380, 0, 0, 379, 617, 618, 0, 619, 0, 381,
	382, 0, 620, 0, 383, 384, 385, 0, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 621, 0, 397, 398, 0, 0,
	399, 0, 0, 0, 400, 401, 0, 0, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 0, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	0, 432, 0, 0, 0, 442, 443, 0, 622, 444,
	623, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 0, 455, 0,
	625, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 628, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 630,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 0, 505, 506,
	507, 508, 631, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 0, 530, 531, 514, 515, 532, 533,
	0, 534, 535, 536, 537, 538, 539, 632, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 633, 546,
	547, 548, 549, 634, 552, 0, 553, 554, 0, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 635, 636, 637, 638, 0, 572, 0, 564,
	565, 566, 639, 567, 640, 0, 568, 569, 570, 571,
	0, 573, 574, 0, 0, 575, 576, 577, 579, 580,
	578, 581, 0, 582, 0, 0, 583, 584, 585, 641,
	642, 643, 255, 587, 586, 588, 644, 0, 0, 0,
	0, 589, 590, 645, 591, 592, 593, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 0,
	0, 0, 0, 0, 594, 0, 0, 0, 0, 270,
	271, 3481, 272, 273, 274, 275, 276, 277, 595, 596,
	0, 278, 597, 279, 598, 0, 599, 280, 281, 282,
	283, 284, 285, 0, 0, 0, 286, 600, 601, 602,
	0, 287, 288, 603, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 0, 0, 0,
	0, 0, 0, 0, 313, 314, 315, 316, 0, 317,
	604, 605, 0, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 327, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 606, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 607,
	608, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 609, 0, 0, 0, 351, 0, 352, 0,
	0, 0, 353, 354, 610, 611, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 612, 0, 613, 364,
	0, 365, 366, 367, 368, 369, 614, 615, 616, 445,
	0, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 0, 376, 377, 378, 380, 0, 0, 379, 617,
	618, 0, 619, 0, 381, 382, 0, 620, 0, 383,
	384, 385, 0, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 621,
	0, 397, 398, 0, 0, 399, 0, 0, 0, 400,
	401, 0, 0, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 0, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 0, 432, 0, 0, 0,
	442, 443, 0, 622, 444, 623, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 0, 455, 0, 625, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 628, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 630, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 0, 505, 506, 507, 508, 631, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 0, 530,
	531, 514, 515, 532, 533, 0, 534, 535, 536, 537,
	538, 539, 632, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 633, 546, 547, 548, 549, 634, 552,
	0, 553, 554, 0, 551, 0, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 635, 636, 637,
	638, 0, 572, 0, 564, 565, 566, 639, 567, 640,
	0, 568, 569, 570, 571, 0, 573, 574, 0, 0,
	575, 576, 577, 579, 580, 578, 581, 0, 582, 0,
	0, 583, 584, 585, 641, 642, 643, 0, 587, 586,
	588, 644, 0, 856, 0, 764, 589, 590, 645, 591,
	592, 593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 263, 262, 264, 265, 266, 267, 0,
	268, 269, 0, 0, 0, 0, 2182, 594, 0, 0,
	0, 0, 270, 271, 0, 272, 273, 274, 275, 276,
	277, 595, 596, 0, 278, 597, 279, 598, 0, 599,
	280, 281, 282, 283, 284, 285, 0, 0, 0, 286,
	600, 601, 602, 0, 287, 288, 603, 0, 0, 0,
	289, 290, 291, 292, 293, 294, 295, 0, 0, 297,
	298, 299, 296, 300, 0, 301, 0, 302, 303, 304,
	305, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	0, 0, 0, 0, 0, 0, 0, 313, 314, 771,
	316, 0, 317, 604, 605, 0, 321, 318, 319, 0,
	322, 320, 0, 323, 324, 325, 0, 0, 326, 327,
	328, 0, 329, 330, 0, 331, 332, 333, 0, 334,
	335, 606, 336, 337, 338, 340, 342, 339, 343, 344,
	345, 346, 607, 608, 347, 0, 258, 0, 0, 0,
	0, 0, 348, 349, 350, 609, 0, 0, 0, 351,
	0, 352, 0, 854, 0, 353, 354, 610, 611, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 363, 612,
	0, 613, 364, 0, 365, 366, 367, 368, 369, 614,
	615, 616, 445, 0, 370, 371, 0, 372, 373, 374,
	375, 0, 0, 0, 259, 376, 377, 378, 380, 0,
	0, 379, 617, 618, 0, 619, 0, 381, 382, 0,
	620, 0, 383, 384, 385, 0, 386, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 0, 393, 395, 394,
	0, 396, 621, 0, 397, 398, 0, 0, 399, 0,
	0, 0, 400, 401, 0, 0, 402, 403, 404, 405,
	0, 406, 407, 409, 412, 408, 410, 411, 413, 426,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 428, 0, 427, 0, 429, 430, 431, 436,
	438, 439, 434, 435, 437, 440, 441, 433, 0, 432,
	0, 260, 0, 442, 443, 0, 622, 444, 623, 446,
	447, 0, 0, 448, 0, 0, 0, 450, 451, 452,
	0, 0, 453, 454, 624, 0, 455, 0, 625, 456,
	457, 449, 458, 459, 460, 461, 462, 463, 464, 465,
	0, 466, 467, 626, 468, 469, 470, 627, 471, 472,
	473, 628, 474, 629, 475, 476, 0, 477, 478, 0,
	479, 480, 481, 482, 483, 484, 485, 630, 486, 488,
	487, 489, 0, 490, 0, 491, 492, 0, 0, 0,
	0, 493, 0, 495, 496, 497, 494, 498, 499, 500,
	501, 0, 502, 503, 504, 0, 505, 506, 507, 508,
	631, 509, 0, 510, 511, 517, 518, 512, 513, 519,
	520, 521, 522, 523, 0, 525, 526, 524, 527, 528,
	529, 0, 530, 531, 514, 515, 532, 533, 0, 534,
	535, 536, 537, 538, 539, 632, 0, 540, 0, 541,
	542, 543, 544, 516, 545, 550, 633, 546, 547, 548,
	549, 634, 552, 0, 553, 554, 0, 551, 769, 555,
	556, 557, 558, 559, 770, 561, 341, 562, 0, 563,
	635, 636, 637, 638, 0, 572, 0, 564, 565, 566,
	639, 567, 640, 0, 568, 569, 570, 571, 0, 573,
	574, 0, 0, 575, 576, 577, 579, 580, 578, 581,
	0, 582, 0, 0, 583, 584, 585, 641, 642, 643,
	0, 587, 586, 588, 644, 0, 762, 0, 764, 589,
	590, 645, 591, 592, 593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 263, 262, 264, 265,
	266, 267, 774, 268, 269, 0, 0, 0, 0, 0,
	594, 0, 0, 0, 0, 270, 271, 0, 272, 273,
	274, 275, 276, 277, 595, 596, 0, 278, 597, 279,
	598, 0, 599, 280, 281, 282, 283, 284, 285, 0,
	0, 0, 286, 600, 601, 602, 0, 287, 288, 603,
	0, 0, 0, 289, 290, 291, 292, 293, 294, 295,
	0, 0, 297, 298, 299, 296, 300, 0, 301, 0,
	302, 303, 304, 305, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 0, 0, 0, 0, 0, 0, 0,
	313, 314, 771, 316, 0, 317, 604, 605, 0, 321,
	318, 319, 0, 322, 320, 0, 323, 324, 325, 0,
	0, 326, 327, 328, 0, 329, 330, 0, 331, 332,
	333, 0, 334, 335, 606, 336, 337, 338, 340, 342,
	339, 343, 344, 345, 346, 607, 608, 347, 0, 258,
	0, 0, 0, 0, 0, 348, 349, 350, 609, 0,
	0, 0, 351, 0, 352, 0, 0, 0, 353, 354,
	610, 611, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 363, 612, 0, 613, 364, 0, 365, 366, 367,
	368, 369, 614, 615, 616, 445, 0, 370, 371, 0,
	372, 373, 374, 375, 0, 0, 0, 259, 376, 377,
	378, 380, 0, 0, 379, 617, 618, 0, 619, 0,
	381, 382, 0, 620, 0, 383, 384, 385, 0, 386,
	0, 0, 0, 387, 388, 389, 390, 391, 392, 0,
	393, 395, 394, 0, 396, 621, 0, 397, 398, 0,
	0, 399, 0, 0, 0, 400, 401, 0, 0, 402,
	403, 404, 405, 0, 406, 407, 409, 412, 408, 410,
	411, 413, 426, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 428, 0, 427, 0, 429,
	430, 431, 436, 438, 439, 434, 435, 437, 440, 441,
	433, 0, 432, 0, 260, 0, 442, 443, 0, 622,
	444, 623, 446, 447, 0, 0, 448, 0, 0, 0,
	450, 451, 452, 0, 0, 453, 454, 624, 0, 455,
	0, 625, 456, 457, 449, 458, 459, 460, 461, 462,
	463, 464, 465, 0, 466, 467, 626, 468, 469, 470,
	627, 471, 472, 473, 628, 474, 629, 475, 476, 0,
	477, 478, 0, 479, 480, 481, 482, 483, 484, 485,
	630, 486, 488, 487, 489, 0, 490, 0, 491, 492,
	0, 0, 0, 0, 493, 0, 495, 496, 497, 494,
	498, 499, 500, 501, 0, 502, 503, 504, 0, 505,
	506, 507, 508, 631, 509, 0, 510, 511, 517, 518,
	512, 513, 519, 520, 521, 522, 523, 0, 525, 526,
	524, 527, 528, 529, 0, 530, 531, 514, 515, 532,
	533, 0, 534, 535, 536, 537, 538, 539, 632, 0,
	540, 0, 541, 542, 543, 544, 516, 545, 550, 633,
	546, 547, 548, 549, 634, 552, 0, 553, 554, 0,
	551, 769, 555, 556, 557, 558, 559, 770, 561, 341,
	562, 0, 563, 635, 636, 637, 638, 0, 572, 0,
	564, 565, 566, 639, 567, 640, 0, 568, 569, 570,
	571, 0, 573, 574, 0, 0, 575, 576, 577, 579,
	580, 578, 581, 0, 582, 0, 0, 583, 584, 585,
	641, 642, 643, 1920, 587, 586, 588, 644, 0, 0,
	0, 0, 589, 590, 645, 591, 592, 593, 0, 0,
	261, 263, 262, 264, 265, 266, 267, 0, 268, 269,
	0, 0, 0, 0, 0, 774, 0, 0, 0, 0,
	270, 271, 1130, 272, 273, 274, 275, 276, 277, 0,
	1926, 0, 278, 1916, 279, 1932, 0, 1939, 280, 281,
	282, 283, 284, 285, 0, 0, 0, 286, 1942, 1943,
	0, 0, 287, 288, 0, 0, 1272, 0, 289, 290,
	291, 292, 293, 294, 295, 0, 0, 297, 298, 299,
	296, 300, 0, 301, 0, 302, 303, 304, 305, 306,
	307, 0, 308, 309, 310, 1131, 311, 312, 0, 0,
	0, 0, 0, 0, 0, 313, 314, 315, 316, 1113,
	317, 1930, 1929, 0, 321, 318, 319, 0, 322, 320,
	0, 323, 324, 325, 0, 0, 326, 1098, 328, 0,
	329, 330, 0, 331, 332, 333, 0, 334, 335, 0,
	336, 337, 338, 340, 342, 339, 343, 344, 345, 346,
	0, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 1928, 0, 0, 0, 351, 0, 352,
	0, 0, 1132, 353, 354, 1937, 1938, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 363, 0, 0, 0,
	364, 0, 365, 366, 367, 368, 369, 0, 0, 0,
	445, 1134, 370, 371, 0, 372, 373, 374, 375, 0,
	0, 0, 0, 376, 377, 378, 380, 0, 1133, 379,
	1923, 1924, 0, 1919, 0, 381, 382, 1135, 0, 1136,
	383, 384, 385, 1137, 386, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 0, 393, 395, 394, 0, 396,
	0, 1138, 397, 398, 1139, 0, 399, 0, 0, 0,
	400, 401, 0, 0, 402, 403, 404, 405, 0, 406,
	407, 409, 412, 408, 410, 411, 413, 426, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	428, 0, 427, 1140, 429, 430, 431, 436, 438, 439,
	434, 435, 437, 440, 441, 433, 1141, 432, 0, 0,
	1142, 442, 443, 0, 0, 444, 1931, 446, 447, 0,
	0, 448, 0, 0, 0, 450, 451, 452, 0, 0,
	453, 454, 0, 1143, 455, 1144, 0, 456, 457, 449,
	458, 459, 460, 461, 462, 463, 464, 465, 0, 466,
	467, 1913, 468, 469, 470, 1914, 471, 472, 473, 0,
	474, 0, 475, 476, 0, 477, 478, 0, 479, 480,
	481, 482, 483, 484, 485, 1927, 486, 488, 487, 489,
	0, 490, 0, 491, 492, 0, 0, 0, 0, 493,
	0, 495, 496, 497, 494, 498, 499, 500, 501, 0,
	502, 503, 504, 1145, 505, 506, 507, 508, 0, 509,
	0, 510, 511, 517, 518, 512, 513, 519, 520, 521,
	522, 523, 0, 525, 526, 524, 527, 528, 529, 0,
	530, 531, 514, 515, 532, 533, 1146, 534, 535, 536,
	537, 538, 539, 1925, 0, 540, 0, 541, 542, 543,
	544, 516, 545, 550, 1941, 546, 547, 548, 549, 0,
	552, 0, 553, 554, 0, 551, 0, 555, 556, 557,
	558, 559, 560, 561, 341, 562, 0, 563, 1933, 1934,
	1935, 1936, 0, 572, 0, 564, 565, 566, 0, 567,
	0, 0, 568, 569, 570, 571, 0, 573, 574, 0,
	0, 575, 576, 577, 579, 580, 578, 581, 0, 582,
	0, 0, 583, 584, 585, 0, 1917, 1940, 0, 587,
	586, 588, 764, 0, 0, 0, 0, 589, 590, 0,
	591, 592, 593, 0, 0, 0, 0, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 0,
	0, 0, 0, 0, 594, 0, 0, 0, 0, 270,
	271, 1907, 272, 273, 274, 275, 276, 277, 595, 596,
	0, 278, 597, 279, 598, 0, 599, 280, 281, 282,
	283, 284, 285, 0, 0, 0, 286, 600, 601, 602,
	0, 287, 288, 603, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 0, 0, 0,
	0, 0, 0, 0, 313, 314, 771, 316, 0, 317,
	604, 605, 0, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 327, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 606, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 607,
	608, 347, 0, 258, 0, 0, 0, 0, 0, 348,
	349, 350, 609, 0, 0, 0, 351, 0, 352, 0,
	0, 0, 353, 354, 610, 611, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 612, 0, 613, 364,
	0, 365, 366, 367, 368, 369, 614, 615, 616, 445,
	0, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 259, 376, 377, 378, 380, 0, 0, 379, 617,
	618, 0, 619, 0, 381, 382, 0, 620, 0, 383,
	384, 385, 0, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 621,
	0, 397, 398, 0, 0, 399, 0, 0, 0, 400,
	401, 0, 0, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 0, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 0, 432, 0, 260, 0,
	442, 443, 0, 622, 444, 623, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 0, 455, 0, 625, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 628, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 630, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 0, 505, 506, 507, 508, 631, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 0, 530,
	531, 514, 515, 532, 533, 0, 534, 535, 536, 537,
	538, 539, 632, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 633, 546, 547, 548, 549, 634, 552,
	0, 553, 554, 0, 551, 769, 555, 556, 557, 558,
	559, 770, 561, 341, 562, 0, 563, 635, 636, 637,
	638, 0, 572, 0, 564, 565, 566, 639, 567, 640,
	0, 568, 569, 570, 571, 0, 573, 574, 0, 0,
	575, 576, 577, 579, 580, 578, 581, 0, 582, 0,
	0, 583, 584, 585, 641, 642, 643, 0, 587, 586,
	588, 644, 764, 0, 0, 0, 589, 590, 645, 591,
	592, 593, 0, 0, 0, 0, 0, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 774,
	0, 0, 0, 0, 594, 0, 0, 0, 0, 270,
	271, 0, 272, 273, 274, 275, 276, 277, 595, 596,
	0, 278, 597, 279, 598, 0, 599, 280, 281, 282,
	283, 284, 285, 0, 0, 0, 286, 600, 601, 602,
	0, 287, 288, 603, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 0, 0, 0,
	0, 0, 0, 0, 313, 314, 771, 316, 0, 317,
	604, 605, 0, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 327, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 606, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 607,
	608, 347, 0, 258, 0, 0, 0, 0, 0, 348,
	349, 350, 609, 0, 0, 0, 351, 0, 352, 0,
	0, 0, 353, 354, 610, 611, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 612, 0, 613, 364,
	0, 365, 366, 367, 368, 369, 614, 615, 616, 445,
	0, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 259, 376, 377, 378, 380, 0, 0, 379, 617,
	618, 0, 619, 0, 381, 382, 0, 620, 0, 383,
	384, 385, 0, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 621,
	0, 397, 398, 0, 0, 399, 0, 0, 0, 400,
	401, 0, 0, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 0, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 0, 432, 0, 260, 0,
	442, 443, 0, 622, 444, 623, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 0, 455, 0, 625, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 628, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 630, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 0, 2222, 506, 507, 508, 631, 509, 0,
	510, 511, 517, 518, 512, 513, 2223, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 0, 530,
	531, 514, 515, 532, 533, 0, 534, 535, 536, 537,
	538, 539, 632, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 633, 546, 547, 548, 549, 634, 552,
	0, 553, 554, 0, 551, 769, 555, 556, 557, 558,
	559, 770, 561, 341, 562, 0, 563, 635, 636, 637,
	638, 0, 572, 0, 564, 565, 566, 639, 567, 640,
	0, 568, 569, 2224, 571, 0, 573, 574, 0, 0,
	575, 576, 577, 579, 580, 578, 581, 0, 582, 0,
	0, 583, 584, 585, 641, 642, 643, 0, 587, 586,
	588, 644, 0, 0, 0, 0, 589, 590, 645, 591,
	592, 593, 1986, 0, 1267, 1266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 774,
	0, 261, 263, 262, 264, 265, 266, 267, 0, 268,
	269, 0, 0, 0, 0, 0, 594, 0, 0, 0,
	0, 270, 271, 1130, 272, 273, 274, 275, 276, 277,
	595, 596, 0, 278, 597, 279, 598, 0, 599, 280,
	281, 282, 283, 284, 285, 0, 0, 0, 286, 600,
	601, 602, 0, 287, 288, 603, 0, 1272, 0, 289,
	290, 291, 292, 293, 294, 295, 0, 0, 297, 298,
	299, 296, 300, 0, 301, 0, 302, 303, 304, 305,
	306, 307, 0, 308, 309, 310, 1131, 311, 312, 0,
	0, 0, 0, 0, 0, 1953, 313, 314, 315, 316,
	0, 317, 604, 605, 0, 321, 318, 319, 0, 322,
	320, 0, 323, 324, 325, 0, 0, 326, 327, 328,
	0, 329, 330, 0, 331, 332, 333, 0, 334, 335,
	606, 336, 337, 338, 340, 342, 339, 343, 344, 345,
	346, 607, 608, 347, 0, 258, 0, 0, 0, 0,
	0, 348, 349, 350, 609, 0, 0, 0, 351, 0,
	352, 0, 0, 1132, 353, 354, 610, 611, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 363, 612, 0,
	613, 364, 0, 365, 366, 367, 368, 369, 614, 615,
	616, 445, 1134, 370, 371, 0, 372, 373, 374, 375,
	0, 0, 0, 0, 376, 377, 378, 380, 0, 1133,
	379, 617, 618, 0, 619, 0, 381, 382, 1135, 620,
	1136, 383, 384, 385, 1137, 386, 0, 0, 0, 387,
	388, 389, 390, 391, 392, 0, 393, 395, 394, 0,
	396, 621, 1138, 397, 398, 1139, 0, 399, 0, 0,
	0, 400, 401, 0, 0, 402, 403, 404, 405, 0,
	406, 407, 409, 412, 408, 410, 411, 413, 426, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 428, 0, 427, 1140, 429, 430, 431, 436, 438,
	439, 434, 435, 437, 440, 441, 433, 1141, 432, 0,
	0, 1142, 442, 443, 0, 622, 444, 623, 446, 447,
	0, 0, 448, 0, 0, 0, 450, 451, 452, 0,
	0, 453, 454, 624, 1143, 455, 1144, 625, 456, 457,
	449, 458, 459, 460, 461, 462, 463, 464, 465, 0,
	466, 467, 626, 468, 469, 470, 627, 471, 472, 473,
	628, 474, 629, 475, 476, 0, 477, 478, 0, 479,
	480, 481, 482, 483, 484, 485, 630, 486, 488, 487,
	489, 0, 490, 0, 491, 492, 0, 0, 0, 0,
	493, 0, 495, 496, 497, 494, 498, 499, 500, 501,
	0, 502, 503, 504, 1145, 505, 506, 507, 508, 631,
	509, 0, 510, 511, 517, 518, 512, 513, 519, 520,
	521, 522, 523, 0, 525, 526, 524, 527, 528, 529,
	1954, 530, 531, 514, 515, 532, 533, 1146, 534, 535,
	536, 537, 538, 539, 632, 0, 540, 0, 541, 542,
	543, 544, 516, 545, 550, 633, 546, 547, 548, 549,
	634, 552, 0, 553, 554, 0, 551, 0, 555, 556,
	557, 558, 559, 560, 561, 341, 562, 0, 563, 635,
	636, 637, 638, 0, 572, 0, 564, 565, 566, 639,
	567, 640, 0, 568, 569, 570, 571, 0, 573, 574,
	0, 0, 575, 576, 577, 579, 580, 578, 581, 0,
	582, 0, 0, 583, 584, 585, 641, 642, 643, 0,
	587, 586, 588, 644, 1950, 0, 1267, 1266, 589, 590,
	645, 591, 592, 593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 263, 262, 264, 265, 266, 267,
	0, 268, 269, 0, 0, 0, 0, 0, 594, 0,
	0, 0, 0, 270, 271, 1130, 272, 273, 274, 275,
	276, 277, 595, 596, 0, 278, 597, 279, 598, 0,
	599, 280, 281, 282, 283, 284, 285, 0, 0, 0,
	286, 600, 601, 602, 0, 287, 288, 603, 0, 1272,
	0, 289, 290, 291, 292, 293, 294, 295, 0, 0,
	297, 298, 299, 296, 300, 0, 301, 0, 302, 303,
	304, 305, 306, 307, 0, 308, 309, 310, 1131, 311,
	312, 0, 0, 0, 0, 0, 0, 1953, 313, 314,
	315, 316, 0, 317, 604, 605, 0, 321, 318, 319,
	0, 322, 320, 0, 323, 324, 325, 0, 0, 326,
	327, 328, 0, 329, 330, 0, 331, 332, 333, 0,
	334, 335, 606, 336, 337, 338, 340, 342, 339, 343,
	344, 345, 346, 607, 608, 347, 0, 258, 0, 0,
	0, 0, 0, 348, 349, 350, 609, 0, 0, 0,
	351, 0, 352, 0, 0, 1132, 353, 354, 610, 611,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 363,
	612, 0, 613, 364, 0, 365, 366, 367, 368, 369,
	614, 615, 616, 445, 1134, 370, 371, 0, 372, 373,
	374, 375, 0, 0, 0, 0, 376, 377, 378, 380,
	0, 1133, 379, 617, 618, 0, 619, 0, 381, 382,
	1135, 620, 1136, 383, 384, 385, 1137, 386, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 0, 393, 395,
	394, 0, 396, 621, 1138, 397, 398, 1139, 0, 399,
	0, 0, 0, 400, 401, 0, 0, 402, 403, 404,
	405, 0, 406, 407, 409, 412, 408, 410, 411, 413,
	426, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 428, 0, 427, 1140, 429, 430, 431,
	436, 438, 439, 434, 435, 437, 440, 441, 433, 1141,
	432, 0, 0, 1142, 442, 443, 0, 622, 444, 623,
	446, 447, 0, 0, 448, 0, 0, 0, 450, 451,
	452, 0, 0, 453, 454, 624, 1143, 455, 1144, 625,
	456, 457, 449, 458, 459, 460, 461, 462, 463, 464,
	465, 0, 466, 467, 626, 468, 469, 470, 627, 471,
	472, 473, 628, 474, 629, 475, 476, 0, 477, 478,
	0, 479, 480, 481, 482, 483, 484, 485, 630, 486,
	488, 487, 489, 0, 490, 0, 491, 492, 0, 0,
	0, 0, 493, 0, 495, 496, 497, 494, 498, 499,
	500, 501, 0, 502, 503, 504, 1145, 505, 506, 507,
	508, 631, 509, 0, 510, 511, 517, 518, 512, 513,
	519, 520, 521, 522, 523, 0, 525, 526, 524, 527,
	528, 529, 1954, 530, 531, 514, 515, 532, 533, 1146,
	534, 535, 536, 537, 538, 539, 632, 0, 540, 0,
	541, 542, 543, 544, 516, 545, 550, 633, 546, 547,
	548, 549, 634, 552, 0, 553, 554, 0, 551, 0,
	555, 556, 557, 558, 559, 560, 561, 341, 562, 0,
	563, 635, 636, 637, 638, 0, 572, 0, 564, 565,
	566, 639, 567, 640, 0, 568, 569, 570, 571, 0,
	573, 574, 0, 0, 575, 576, 577, 579, 580, 578,
	581, 0, 582, 0, 0, 583, 584, 585, 641, 642,
	643, 764, 587, 586, 588, 644, 0, 0, 0, 0,
	589, 590, 645, 591, 592, 593, 0, 0, 261, 263,
	262, 264, 265, 266, 267, 0, 268, 269, 0, 0,
	0, 0, 0, 594, 0, 0, 0, 0, 270, 271,
	0, 272, 273, 274, 275, 276, 277, 595, 596, 0,
	278, 597, 279, 598, 0, 599, 280, 281, 282, 283,
	284, 285, 0, 0, 0, 286, 600, 601, 602, 0,
	287, 288, 603, 0, 0, 0, 289, 290, 291, 292,
	293, 294, 295, 0, 0, 297, 298, 299, 296, 300,
	0, 301, 0, 302, 303, 304, 305, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 0, 0, 0, 0,
	0, 0, 0, 313, 314, 771, 316, 0, 317, 604,
	605, 0, 321, 318, 319, 0, 322, 320, 0, 323,
	324, 325, 0, 0, 326, 327, 328, 0, 329, 330,
	0, 331, 332, 333, 0, 334, 335, 606, 336, 337,
	338, 340, 342, 339, 343, 344, 345, 346, 607, 608,
	347, 0, 258, 0, 0, 0, 0, 0, 348, 349,
	350, 609, 0, 0, 0, 351, 0, 352, 0, 0,
	0, 353, 354, 610, 611, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 363, 612, 0, 613, 364, 0,
	365, 366, 367, 368, 369, 614, 615, 616, 445, 0,
	370, 371, 0, 372, 373, 374, 375, 0, 0, 0,
	259, 376, 377, 378, 380, 0, 0, 379, 617, 618,
	0, 619, 0, 381, 382, 0, 620, 0, 383, 384,
	385, 0, 386, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 0, 393, 395, 394, 0, 396, 621, 0,
	397, 398, 0, 0, 399, 0, 0, 0, 400, 401,
	0, 0, 402, 403, 404, 405, 0, 406, 407, 409,
	412, 408, 410, 411, 413, 426, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 428, 0,
	427, 0, 429, 430, 431, 436, 438, 439, 434, 435,
	437, 440, 441, 433, 0, 432, 0, 260, 0, 442,
	443, 0, 622, 444, 623, 446, 447, 0, 0, 448,
	0, 0, 0, 450, 451, 452, 0, 0, 453, 454,
	624, 0, 455, 0, 625, 456, 457, 449, 458, 459,
	460, 461, 462, 463, 464, 465, 0, 466, 467, 626,
	468, 469, 470, 627, 471, 472, 473, 628, 474, 629,
	475, 476, 0, 477, 478, 0, 479, 480, 481, 482,
	483, 484, 485, 630, 486, 488, 487, 489, 0, 490,
	0, 491, 492, 0, 0, 0, 0, 493, 0, 495,
	496, 497, 494, 498, 499, 500, 501, 0, 502, 503,
	504, 0, 505, 506, 507, 508, 631, 509, 0, 510,
	511, 517, 518, 512, 513, 1946, 520, 521, 522, 523,
	0, 525, 526, 524, 527, 528, 529, 0, 530, 531,
	514, 515, 532, 533, 0, 534, 535, 536, 537, 538,
	539, 632, 0, 540, 0, 541, 542, 543, 544, 516,
	545, 550, 633, 546, 547, 548, 549, 634, 552, 0,
	553, 554, 0, 551, 769, 555, 556, 557, 558, 559,
	770, 561, 341, 562, 0, 563, 635, 636, 637, 638,
	0, 572, 0, 564, 565, 566, 639, 567, 640, 0,
	568, 569, 1945, 571, 0, 573, 574, 0, 0, 575,
	576, 577, 579, 580, 578, 581, 0, 582, 0, 0,
	583, 584, 585, 641, 642, 643, 0, 587, 586, 588,
	644, 764, 0, 0, 0, 589, 590, 645, 591, 592,
	593, 0, 0, 0, 0, 0, 0, 0, 261, 263,
	262, 264, 265, 266, 267, 0, 268, 269, 774, 0,
	0, 0, 0, 594, 0, 0, 0, 0, 270, 271,
	0, 272, 273, 274, 275, 276, 277, 595, 596, 0,
	278, 597, 279, 598, 0, 599, 280, 281, 282, 283,
	284, 285, 0, 0, 0, 286, 600, 601, 602, 0,
	287, 288, 603, 0, 0, 0, 289, 290, 291, 292,
	293, 294, 295, 0, 0, 297, 298, 299, 296, 300,
	0, 301, 0, 302, 303, 304, 305, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 0, 0, 0, 0,
	0, 0, 0, 313, 314, 771, 316, 0, 317, 604,
	605, 0, 321, 318, 319, 0, 322, 320, 0, 323,
	324, 325, 0, 0, 326, 327, 328, 0, 329, 330,
	0, 331, 332, 333, 0, 334, 335, 606, 336, 337,
	338, 340, 342, 339, 343, 344, 345, 346, 607, 608,
	347, 0, 258, 0, 0, 0, 0, 0, 348, 349,
	350, 609, 0, 0, 0, 351, 0, 352, 0, 0,
	0, 353, 354, 610, 611, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 363, 612, 0, 613, 364, 0,
	365, 366, 367, 368, 369, 614, 615, 616, 445, 0,
	370, 371, 0, 372, 373, 374, 375, 0, 0, 0,
	259, 376, 377, 378, 380, 0, 0, 379, 617, 618,
	0, 619, 0, 381, 382, 0, 620, 0, 383, 384,
	385, 0, 386, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 0, 393, 395, 394, 0, 396, 621, 0,
	397, 398, 0, 0, 399, 0, 0, 0, 400, 401,
	0, 0, 402, 403, 404, 405, 0, 406, 407, 409,
	412, 408, 410, 411, 413, 426, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 428, 0,
	427, 0, 429, 430, 431, 436, 438, 439, 434, 435,
	437, 440, 441, 433, 0, 432, 0, 260, 0, 442,
	443, 0, 622, 444, 623, 446, 447, 0, 0, 448,
	0, 0, 0, 450, 451, 452, 0, 0, 453, 454,
	624, 0, 455, 0, 625, 456, 457, 449, 458, 459,
	460, 461, 462, 463, 464, 465, 0, 466, 467, 626,
	468, 469, 470, 627, 471, 472, 473, 628, 474, 629,
	475, 476, 0, 477, 478, 0, 479, 480, 481, 482,
	483, 484, 485, 630, 486, 488, 487, 489, 0, 490,
	0, 491, 492, 0, 0, 0, 0, 493, 0, 495,
	496, 497, 494, 498, 499, 500, 501, 0, 502, 503,
	504, 0, 505, 506, 507, 508, 631, 509, 0, 510,
	511, 517, 518, 512, 513, 1899, 520, 521, 522, 523,
	0, 525, 526, 524, 527, 528, 529, 0, 530, 531,
	514, 515, 532, 533, 0, 534, 535, 536, 537, 538,
	539, 632, 0, 540, 0, 541, 542, 543, 544, 516,
	545, 550, 633, 546, 547, 548, 549, 634, 552, 0,
	553, 554, 0, 551, 769, 555, 556, 557, 558, 559,
	770, 561, 341, 562, 0, 563, 635, 636, 637, 638,
	0, 572, 0, 564, 565, 566, 639, 567, 640, 0,
	568, 569, 1898, 571, 0, 573, 574, 0, 0, 575,
	576, 577, 579, 580, 578, 581, 0, 582, 0, 0,
	583, 584, 585, 641, 642, 643, 0, 587, 586, 588,
	644, 1267, 1266, 0, 0, 589, 590, 645, 591, 592,
	593, 0, 0, 0, 0, 0, 0, 0, 261, 263,
	262, 264, 265, 266, 267, 0, 268, 269, 774, 0,
	0, 0, 0, 594, 0, 0, 0, 0, 270, 271,
	1130, 272, 273, 274, 275, 276, 277, 595, 596, 0,
	278, 597, 279, 598, 0, 599, 280, 281, 282, 283,
	284, 285, 0, 0, 0, 286, 600, 601, 602, 0,
	287, 288, 603, 0, 1272, 0, 289, 290, 291, 292,
	293, 294, 295, 0, 0, 297, 298, 299, 296, 300,
	0, 301, 0, 302, 303, 304, 305, 306, 307, 0,
	308, 309, 310, 1131, 311, 312, 0, 0, 0, 0,
	0, 0, 1953, 313, 314, 315, 316, 0, 317, 604,
	605, 0, 321, 318, 319, 0, 322, 320, 0, 323,
	324, 325, 0, 0, 326, 327, 328, 0, 329, 330,
	0, 331, 332, 333, 0, 334, 335, 606, 336, 337,
	338, 340, 342, 339, 343, 344, 345, 346, 607, 608,
	347, 0, 258, 0, 0, 0, 0, 0, 348, 349,
	350, 609, 0, 0, 0, 351, 0, 352, 0, 0,
	1132, 353, 354, 610, 611, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 363, 612, 0, 613, 364, 0,
	365, 366, 367, 368, 369, 614, 615, 616, 445, 1134,
	370, 371, 0, 372, 373, 374, 375, 0, 0, 0,
	0, 376, 377, 378, 380, 0, 1133, 379, 617, 618,
	0, 619, 0, 381, 382, 1135, 620, 1136, 383, 384,
	385, 1137, 386, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 0, 393, 395, 394, 0, 396, 621, 1138,
	397, 398, 1139, 0, 399, 0, 0, 0, 400, 401,
	0, 0, 402, 403, 404, 405, 0, 406, 407, 409,
	412, 408, 410, 411, 413, 426, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 428, 0,
	427, 1140, 429, 430, 431, 436, 438, 439, 434, 435,
	437, 440, 441, 433, 1141, 432, 0, 0, 1142, 442,
	443, 0, 622, 444, 623, 446, 447, 0, 0, 448,
	0, 0, 0, 450, 451, 452, 0, 0, 453, 454,
	624, 1143, 455, 1144, 625, 456, 457, 449, 458, 459,
	460, 461, 462, 463, 464, 465, 0, 466, 467, 626,
	468, 469, 470, 627, 471, 472, 473, 628, 474, 629,
	475, 476, 0, 477, 478, 0, 479, 480, 481, 482,
	483, 484, 485, 630, 486, 488, 487, 489, 0, 490,
	0, 491, 492, 0, 0, 0, 0, 493, 0, 495,
	496, 497, 494, 498, 499, 500, 501, 0, 502, 503,
	504, 1145, 505, 506, 507, 508, 631, 509, 0, 510,
	511, 517, 518, 512, 513, 519, 520, 521, 522, 523,
	0, 525, 526, 524, 527, 528, 529, 1954, 530, 531,
	514, 515, 532, 533, 1146, 534, 535, 536, 537, 538,
	539, 632, 0, 540, 0, 541, 542, 543, 544, 516,
	545, 550, 633, 546, 547, 548, 549, 634, 552, 0,
	553, 554, 0, 551, 0, 555, 556, 557, 558, 559,
	560, 561, 341, 562, 0, 563, 635, 636, 637, 638,
	0, 572, 0, 564, 565, 566, 639, 567, 640, 0,
	568, 569, 570, 571, 0, 573, 574, 0, 0, 575,
	576, 577, 579, 580, 578, 581, 0, 582, 0, 0,
	583, 584, 585, 641, 642, 643, 0, 587, 586, 588,
	644, 0, 0, 0, 0, 589, 590, 645, 591, 592,
	593, 1267, 1266, 0, 0, 0, 0, 1264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 263,
	262, 264, 265, 266, 267, 0, 268, 269, 0, 0,
	0, 0, 0, 594, 0, 0, 0, 0, 270, 271,
	1130, 272, 273, 274, 275, 276, 277, 595, 596, 0,
	278, 597, 279, 598, 0, 599, 280, 281, 282, 283,
	284, 285, 0, 0, 0, 286, 600, 601, 602, 0,
	287, 288, 603, 0, 1272, 0, 289, 290, 291, 292,
	293, 294, 295, 0, 0, 297, 298, 299, 296, 300,
	0, 301, 0, 302, 303, 304, 305, 306, 307, 0,
	308, 309, 310, 1131, 311, 312, 0, 0, 0, 0,
	0, 0, 0, 313, 314, 315, 316, 0, 317, 604,
	605, 0, 321, 318, 319, 0, 322, 320, 0, 323,
	324, 325, 0, 0, 326, 327, 328, 0, 329, 330,
	0, 331, 332, 333, 0, 334, 335, 606, 336, 337,
	338, 340, 342, 339, 343, 344, 345, 346, 607, 608,
	347, 0, 258, 0, 0, 0, 0, 0, 348, 349,
	350, 609, 0, 0, 0, 351, 0, 352, 0, 0,
	1132, 353, 354, 610, 611, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 363, 612, 0, 613, 364, 0,
	365, 366, 367, 368, 369, 614, 615, 616, 445, 1134,
	370, 371, 0, 372, 373, 374, 375, 0, 0, 0,
	0, 376, 377, 378, 380, 0, 1133, 379, 617, 618,
	0, 619, 0, 381, 382, 1135, 620, 1136, 383, 384,
	385, 1137, 386, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 0, 393, 395, 394, 0, 396, 621, 1138,
	397, 398, 1139, 0, 399, 0, 0, 0, 400, 401,
	0, 0, 402, 403, 404, 405, 0, 406, 407, 409,
	412, 408, 410, 411, 413, 426, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 428, 0,
	427, 1140, 429, 430, 431, 436, 438, 439, 434, 435,
	437, 440, 441, 433, 1141, 432, 0, 0, 1142, 442,
	443, 3654, 622, 444, 623, 446, 447, 0, 0, 448,
	0, 0, 0, 450, 451, 452, 0, 0, 453, 454,
	624, 1143, 455, 1144, 625, 456, 457, 449, 458, 459,
	460, 461, 462, 463, 464, 465, 0, 466, 467, 626,
	468, 469, 470, 627, 471, 472, 473, 628, 474, 629,
	475, 476, 0, 477, 478, 0, 479, 480, 481, 482,
	483, 484, 485, 630, 486, 488, 487, 489, 0, 490,
	0, 491, 492, 0, 0, 0, 0, 493, 0, 495,
	496, 497, 494, 498, 499, 500, 501, 0, 502, 503,
	504, 1145, 505, 506, 507, 508, 631, 509, 0, 510,
	511, 517, 518, 512, 513, 519, 520, 521, 522, 523,
	0, 525, 526, 524, 527, 528, 529, 0, 530, 531,
	514, 515, 532, 533, 1146, 534, 535, 536, 537, 538,
	539, 632, 0, 540, 0, 541, 542, 543, 544, 516,
	545, 550, 633, 546, 547, 548, 549, 634, 552, 0,
	553, 554, 0, 551, 0, 555, 556, 557, 558, 559,
	560, 561, 341, 562, 0, 563, 635, 636, 637, 638,
	0, 572, 0, 564, 565, 566, 639, 567, 640, 0,
	568, 569, 570, 571, 0, 573, 574, 0, 0, 575,
	576, 577, 579, 580, 578, 581, 0, 582, 0, 0,
	583, 584, 585, 641, 642, 643, 0, 587, 586, 588,
	644, 0, 0, 0, 0, 589, 590, 645, 591, 592,
	593, 1267, 1266, 0, 0, 0, 0, 1264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 263,
	262, 264, 265, 266, 267, 0, 268, 269, 0, 0,
	0, 0, 0, 594, 0, 0, 0, 0, 270, 271,
	1130, 272, 273, 274, 275, 276, 277, 595, 596, 0,
	278, 597, 279, 598, 0, 599, 280, 281, 282, 283,
	284, 285, 0, 0, 0, 286, 600, 601, 602, 0,
	287, 288, 603, 0, 1272, 0, 289, 290, 291, 292,
	293, 294, 295, 0, 0, 297, 298, 299, 296, 300,
	0, 301, 0, 302, 303, 304, 305, 306, 307, 0,
	308, 309, 310, 1131, 311, 312, 0, 0, 0, 0,
	0, 0, 0, 313, 314, 315, 316, 0, 317, 604,
	605, 0, 321, 318, 319, 0, 322, 320, 0, 323,
	324, 325, 0, 0, 326, 327, 328, 0, 329, 330,
	0, 331, 332, 333, 0, 334, 335, 606, 336, 337,
	338, 340, 342, 339, 343, 344, 345, 346, 607, 608,
	347, 0, 258, 0, 0, 0, 0, 0, 348, 349,
	350, 609, 0, 0, 0, 351, 0, 352, 0, 0,
	1132, 353, 354, 610, 611, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 363, 612, 0, 613, 364, 0,
	365, 366, 367, 368, 369, 614, 615, 616, 445, 1134,
	370, 371, 0, 372, 373, 374, 375, 0, 0, 0,
	0, 376, 377, 378, 380, 0, 1133, 379, 617, 618,
	0, 619, 0, 381, 382, 1135, 620, 1136, 383, 384,
	385, 1137, 386, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 0, 393, 395, 394, 0, 396, 621, 1138,
	397, 398, 1139, 0, 399, 0, 0, 0, 400, 401,
	0, 0, 402, 403, 404, 405, 0, 406, 407, 409,
	412, 408, 410, 411, 413, 426, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 428, 0,
	427, 1140, 429, 430, 431, 436, 438, 439, 434, 435,
	437, 440, 441, 433, 1141, 432, 0, 0, 1142, 442,
	443, 3303, 622, 444, 623, 446, 447, 0, 0, 448,
	0, 0, 0, 450, 451, 452, 0, 0, 453, 454,
	624, 1143, 455, 1144, 625, 456, 457, 449, 458, 459,
	460, 461, 462, 463, 464, 465, 0, 466, 467, 626,
	468, 469, 470, 627, 471, 472, 473, 628, 474, 629,
	475, 476, 0, 477, 478, 0, 479, 480, 481, 482,
	483, 484, 485, 630, 486, 488, 487, 489, 0, 490,
	0, 491, 492, 0, 0, 0, 0, 493, 0, 495,
	496, 497, 494, 498, 499, 500, 501, 0, 502, 503,
	504, 1145, 505, 506, 507, 508, 631, 509, 0, 510,
	511, 517, 518, 512, 513, 519, 520, 521, 522, 523,
	0, 525, 526, 524, 527, 528, 529, 0, 530, 531,
	514, 515, 532, 533, 1146, 534, 535, 536, 537, 538,
	539, 632, 0, 540, 0, 541, 542, 543, 544, 516,
	545, 550, 633, 546, 547, 548, 549, 634, 552, 0,
	553, 554, 0, 551, 0, 555, 556, 557, 558, 559,
	560, 561, 341, 562, 0, 563, 635, 636, 637, 638,
	0, 572, 0, 564, 565, 566, 639, 567, 640, 0,
	568, 569, 570, 571, 0, 573, 574, 0, 0, 575,
	576, 577, 579, 580, 578, 581, 0, 582, 0, 0,
	583, 584, 585, 641, 642, 643, 255, 587, 586, 588,
	644, 0, 0, 0, 0, 589, 590, 645, 591, 592,
	593, 0, 0, 261, 263, 262, 264, 265, 266, 267,
	0, 268, 269, 0, 0, 0, 0, 0, 594, 0,
	0, 0, 0, 270, 271, 0, 272, 273, 274, 275,
	276, 277, 595, 596, 0, 278, 597, 279, 598, 0,
	599, 280, 281, 282, 283, 284, 285, 0, 0, 0,
	286, 600, 601, 602, 0, 287, 288, 603, 0, 0,
	0, 289, 290, 291, 292, 293, 294, 295, 0, 0,
	297, 298, 299, 296, 300, 0, 301, 0, 302, 303,
	304, 305, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 0, 0, 0, 0, 0, 0, 0, 313, 314,
	315, 316, 0, 317, 604, 605, 0, 321, 318, 319,
	0, 322, 320, 0, 323, 324, 325, 0, 0, 326,
	327, 328, 0, 329, 330, 0, 331, 332, 333, 0,
	334, 335, 606, 336, 337, 338, 340, 342, 339, 343,
	344, 345, 346, 607, 608, 347, 0, 258, 0, 0,
	0, 0, 0, 348, 349, 350, 609, 0, 0, 0,
	351, 0, 352, 0, 0, 0, 353, 354, 610, 611,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 363,
	612, 0, 613, 364, 0, 365, 366, 367, 368, 369,
	614, 615, 616, 445, 0, 370, 371, 0, 372, 373,
	374, 375, 0, 0, 0, 259, 376, 377, 378, 380,
	0, 0, 379, 617, 618, 0, 619, 0, 381, 382,
	0, 620, 0, 383, 384, 385, 0, 386, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 0, 393, 395,
	394, 0, 396, 621, 0, 397, 398, 0, 0, 399,
	0, 0, 0, 400, 401, 0, 0, 402, 403, 404,
	405, 0, 406, 407, 409, 412, 408, 410, 411, 413,
	426, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 428, 0, 427, 0, 429, 430, 431,
	436, 438, 439, 434, 435, 437, 440, 441, 433, 0,
	432, 0, 260, 0, 442, 443, 0, 622, 444, 623,
	446, 447, 0, 0, 448, 0, 0, 0, 450, 451,
	452, 0, 0, 453, 454, 624, 0, 455, 0, 625,
	456, 457, 449, 458, 459, 460, 461, 462, 463, 464,
	465, 0, 466, 467, 626, 468, 469, 470, 627, 471,
	472, 473, 628, 474, 629, 475, 476, 0, 477, 478,
	0, 479, 480, 481, 482, 483, 484, 485, 630, 486,
	488, 487, 489, 0, 490, 0, 491, 492, 0, 0,
	0, 0, 493, 0, 495, 496, 497, 494, 498, 499,
	500, 501, 0, 502, 503, 504, 0, 505, 506, 507,
	508, 631, 509, 0, 510, 511, 517, 518, 512, 513,
	519, 520, 521, 522, 523, 0, 525, 526, 524, 527,
	528, 529, 0, 530, 531, 514, 515, 532, 533, 0,
	534, 535, 536, 537, 538, 539, 632, 0, 540, 0,
	541, 542, 543, 544, 516, 545, 550, 633, 546, 547,
	548, 549, 634, 552, 0, 553, 554, 0, 551, 0,
	555, 556, 557, 558, 559, 560, 561, 341, 562, 0,
	563, 635, 636, 637, 638, 0, 572, 0, 564, 565,
	566, 639, 567, 640, 0, 568, 569, 570, 571, 0,
	573, 574, 0, 0, 575, 576, 577, 579, 580, 578,
	581, 0, 582, 0, 0, 583, 584, 585, 641, 642,
	643, 0, 587, 586, 588, 644, 0, 0, 0, 0,
	589, 590, 645, 591, 592, 593, 1589, 0, 1267, 1266,
	0, 0, 0, 0, 1264, 0, 0, 0, 0, 0,
	0, 0, 0, 774, 0, 261, 263, 262, 264, 265,
	266, 267, 0, 268, 269, 0, 0, 0, 0, 0,
	594, 0, 0, 0, 0, 270, 271, 1130, 272, 273,
	274, 275, 276, 277, 595, 596, 0, 278, 597, 279,
	598, 0, 599, 280, 281, 282, 283, 284, 285, 0,
	0, 0, 286, 600, 601, 602, 0, 287, 288, 603,
	0, 1272, 0, 289, 290, 291, 292, 293, 294, 295,
	0, 0, 297, 298, 299, 296, 300, 0, 301, 0,
	302, 303, 304, 305, 306, 307, 0, 308, 309, 310,
	1131, 311, 312, 0, 0, 0, 0, 0, 0, 0,
	313, 314, 315, 316, 0, 317, 604, 605, 0, 321,
	318, 319, 0, 322, 320, 0, 323, 324, 325, 0,
	0, 326, 327, 328, 0, 329, 330, 0, 331, 332,
	333, 0, 334, 335, 606, 336, 337, 338, 340, 342,
	339, 343, 344, 345, 346, 607, 608, 347, 0, 258,
	0, 0, 0, 0, 0, 1588, 349, 350, 609, 0,
	0, 0, 351, 0, 352, 0, 0, 1132, 353, 354,
	610, 611, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 363, 612, 0, 613, 364, 0, 365, 366, 367,
	368, 369, 614, 615, 616, 445, 1134, 370, 371, 0,
	372, 373, 374, 375, 0, 0, 0, 0, 376, 377,
	378, 380, 0, 1133, 379, 617, 618, 0, 619, 0,
	381, 382, 1135, 620, 1136, 383, 384, 385, 1137, 386,
	0, 0, 0, 387, 388, 389, 390, 391, 392, 0,
	393, 395, 394, 0, 396, 621, 1138, 397, 398, 1139,
	0, 399, 0, 0, 0, 400, 401, 0, 0, 402,
	403, 404, 405, 0, 406, 407, 409, 412, 408, 410,
	411, 413, 426, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 428, 0, 427, 1140, 429,
	430, 431, 436, 438, 439, 434, 435, 437, 440, 441,
	433, 1141, 432, 0, 0, 1142, 442, 443, 0, 622,
	444, 623, 446, 447, 0, 0, 448, 0, 0, 0,
	450, 451, 452, 0, 0, 453, 454, 624, 1143, 455,
	1144, 625, 456, 457, 449, 458, 459, 460, 461, 462,
	463, 464, 465, 0, 466, 467, 626, 468, 469, 470,
	627, 471, 472, 473, 628, 474, 629, 475, 476, 0,
	477, 478, 0, 479, 480, 481, 482, 483, 1587, 485,
	630, 486, 488, 487, 489, 0, 490, 0, 491, 492,
	0, 0, 0, 0, 493, 0, 495, 496, 497, 494,
	498, 499, 500, 501, 0, 502, 503, 504, 1145, 505,
	506, 507, 508, 631, 509, 0, 510, 511, 517, 518,
	512, 513, 519, 1586, 521, 522, 523, 0, 525, 526,
	524, 527, 528, 529, 0, 530, 531, 514, 515, 532,
	533, 1146, 534, 535, 536, 537, 538, 539, 632, 0,
	540, 0, 541, 542, 543, 544, 516, 545, 550, 633,
	546, 547, 548, 549, 634, 552, 0, 553, 554, 0,
	551, 0, 555, 556, 557, 558, 559, 560, 561, 341,
	562, 0, 563, 635, 636, 637, 638, 0, 572, 0,
	564, 565, 566, 639, 567, 640, 0, 568, 569, 570,
	571, 0, 573, 574, 0, 0, 575, 576, 577, 579,
	580, 578, 581, 0, 582, 0, 0, 583, 584, 585,
	641, 642, 643, 0, 587, 586, 588, 644, 0, 0,
	0, 0, 589, 590, 645, 591, 592, 593, 1508, 0,
	1267, 1266, 0, 0, 0, 0, 1264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 263, 262,
	264, 265, 266, 267, 0, 268, 269, 0, 0, 0,
	0, 0, 594, 0, 0, 0, 0, 270, 271, 1130,
	272, 273, 274, 275, 276, 277, 595, 596, 0, 278,
	597, 279, 598, 0, 599, 280, 281, 282, 283, 284,
	285, 0, 0, 0, 286, 600, 601, 602, 0, 287,
	288, 603, 0, 1272, 0, 289, 290, 291, 292, 293,
	294, 295, 0, 0, 297, 298, 299, 296, 300, 0,
	301, 0, 302, 303, 304, 305, 306, 307, 0, 308,
	309, 310, 1131, 311, 312, 0, 0, 0, 0, 0,
	0, 0, 313, 314, 315, 316, 0, 317, 604, 605,
	0, 321, 318, 319, 0, 322, 320, 0, 323, 324,
	325, 0, 0, 326, 327, 328, 0, 329, 330, 0,
	331, 332, 333, 0, 334, 335, 606, 336, 337, 338,
	340, 342, 339, 343, 344, 345, 346, 607, 608, 347,
	0, 258, 0, 0, 0, 0, 0, 348, 349, 350,
	609, 0, 0, 0, 351, 0, 352, 0, 0, 1132,
	353, 354, 610, 611, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 363, 612, 0, 613, 364, 0, 365,
	366, 367, 368, 369, 1507, 615, 616, 445, 1134, 370,
	371, 0, 372, 373, 374, 375, 0, 0, 0, 0,
	376, 377, 378, 380, 0, 1133, 379, 617, 618, 0,
	619, 0, 381, 382, 1135, 620, 1136, 383, 384, 385,
	1137, 386, 0, 0, 0, 387, 388, 389, 390, 391,
	392, 0, 393, 395, 394, 0, 396, 621, 1138, 397,
	398, 1139, 0, 399, 0, 0, 0, 400, 401, 0,
	0, 402, 403, 404, 405, 0, 406, 407, 409, 412,
	408, 410, 411, 413, 426, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 428, 0, 427,
	1140, 429, 430, 431, 436, 438, 439, 434, 435, 437,
	440, 441, 433, 1141, 432, 0, 0, 1142, 442, 443,
	0, 622, 444, 623, 446, 447, 0, 0, 448, 0,
	0, 0, 450, 451, 452, 0, 0, 453, 454, 624,
	1143, 455, 1144, 625, 456, 457, 449, 458, 459, 460,
	461, 462, 463, 464, 465, 0, 466, 467, 626, 468,
	469, 470, 627, 471, 472, 473, 628, 474, 629, 475,
	476, 0, 477, 478, 0, 479, 480, 481, 482, 483,
	484, 485, 630, 486, 488, 487, 489, 0, 490, 0,
	491, 492, 0, 0, 0, 0, 493, 0, 495, 496,
	497, 494, 498, 499, 500, 501, 0, 502, 503, 504,
	1145, 505, 506, 507, 508, 631, 509, 0, 510, 511,
	517, 518, 512, 513, 519, 520, 521, 522, 523, 0,
	525, 526, 524, 527, 528, 529, 0, 530, 531, 514,
	515, 532, 533, 1146, 534, 535, 536, 537, 538, 539,
	632, 0, 540, 0, 541, 542, 543, 544, 516, 545,
	550, 633, 546, 547, 548, 549, 634, 552, 0, 553,
	554, 0, 551, 0, 555, 556, 557, 558, 559, 560,
	561, 341, 562, 0, 563, 635, 636, 637, 638, 0,
	572, 0, 564, 565, 566, 639, 567, 640, 0, 568,
	569, 570, 571, 0, 573, 574, 0, 0, 575, 576,
	577, 579, 580, 578, 581, 0, 582, 0, 0, 583,
	584, 585, 641, 642, 643, 0, 587, 586, 588, 644,
	0, 0, 0, 0, 589, 590, 645, 591, 592, 593,
	1467, 0, 1267, 1266, 0, 0, 0, 0, 1264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 0,
	0, 0, 0, 0, 594, 0, 0, 0, 0, 270,
	271, 1130, 272, 273, 274, 275, 276, 277, 595, 596,
	0, 278, 597, 279, 598, 0, 599, 280, 281, 282,
	283, 284, 285, 0, 0, 0, 286, 600, 601, 602,
	0, 287, 288, 603, 0, 1272, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 1131, 311, 312, 0, 0, 0,
	0, 0, 0, 0, 313, 314, 315, 316, 0, 317,
	604, 605, 0, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 327, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 606, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 607,
	608, 347, 0, 258, 0, 0, 0, 0, 0, 348,
	349, 350, 609, 0, 0, 0, 351, 0, 352, 0,
	0, 1132, 353, 354, 610, 611, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 612, 0, 613, 364,
	0, 365, 366, 367, 368, 369, 614, 615, 616, 445,
	1134, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 0, 376, 377, 378, 380, 0, 1133, 379, 617,
	618, 0, 619, 0, 381, 382, 1135, 620, 1136, 383,
	384, 385, 1137, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 621,
	1138, 397, 398, 1139, 0, 399, 0, 0, 0, 400,
	401, 0, 0, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 1140, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 1141, 432, 0, 0, 1142,
	442, 443, 0, 622, 444, 623, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 1143, 455, 1144, 625, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 628, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 630, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 1145, 505, 506, 507, 508, 631, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 0, 530,
	531, 514, 515, 532, 533, 1146, 534, 535, 536, 537,
	538, 539, 632, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 633, 546, 547, 548, 549, 634, 552,
	0, 553, 554, 0, 551, 0, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 635, 636, 637,
	638, 0, 572, 0, 564, 565, 566, 639, 567, 640,
	0, 568, 569, 570, 571, 0, 573, 574, 0, 0,
	575, 576, 577, 579, 580, 578, 581, 0, 582, 0,
	0, 583, 584, 585, 641, 642, 643, 0, 587, 586,
	588, 644, 0, 0, 0, 0, 589, 590, 645, 591,
	592, 593, 1436, 0, 1267, 1266, 0, 0, 0, 0,
	1264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 263, 262, 264, 265, 266, 267, 0, 268,
	269, 0, 0, 0, 0, 0, 594, 0, 0, 0,
	0, 270, 271, 1130, 272, 273, 274, 275, 276, 277,
	595, 596, 0, 278, 597, 279, 598, 0, 599, 280,
	281, 282, 283, 284, 285, 0, 0, 0, 286, 600,
	601, 602, 0, 287, 288, 603, 0, 1272, 0, 289,
	290, 291, 292, 293, 294, 295, 0, 0, 297, 298,
	299, 296, 300, 0, 301, 0, 302, 303, 304, 305,
	306, 307, 0, 308, 309, 310, 1131, 311, 312, 0,
	0, 0, 0, 0, 0, 0, 313, 314, 315, 316,
	0, 317, 604, 605, 0, 321, 318, 319, 0, 322,
	320, 0, 323, 324, 325, 0, 0, 326, 327, 328,
	0, 329, 330, 0, 331, 332, 333, 0, 334, 335,
	606, 336, 337, 338, 340, 342, 339, 343, 344, 345,
	346, 607, 608, 347, 0, 258, 0, 0, 0, 0,
	0, 348, 349, 350, 609, 0, 0, 0, 351, 0,
	352, 0, 0, 1132, 353, 354, 610, 611, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 363, 612, 0,
	613, 364, 0, 365, 366, 367, 368, 369, 1435, 615,
	616, 445, 1134, 370, 371, 0, 372, 373, 374, 375,
	0, 0, 0, 0, 376, 377, 378, 380, 0, 1133,
	379, 617, 618, 0, 619, 0, 381, 382, 1135, 620,
	1136, 383, 384, 385, 1137, 386, 0, 0, 0, 387,
	388, 389, 390, 391, 392, 0, 393, 395, 394, 0,
	396, 621, 1138, 397, 398, 1139, 0, 399, 0, 0,
	0, 400, 401, 0, 0, 402, 403, 404, 405, 0,
	406, 407, 409, 412, 408, 410, 411, 413, 426, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 428, 0, 427, 1140, 429, 430, 431, 436, 438,
	439, 434, 435, 437, 440, 441, 433, 1141, 432, 0,
	0, 1142, 442, 443, 0, 622, 444, 623, 446, 447,
	0, 0, 448, 0, 0, 0, 450, 451, 452, 0,
	0, 453, 454, 624, 1143, 455, 1144, 625, 456, 457,
	449, 458, 459, 460, 461, 462, 463, 464, 465, 0,
	466, 467, 626, 468, 469, 470, 627, 471, 472, 473,
	628, 474, 629, 475, 476, 0, 477, 478, 0, 479,
	480, 481, 482, 483, 484, 485, 630, 486, 488, 487,
	489, 0, 490, 0, 491, 492, 0, 0, 0, 0,
	493, 0, 495, 496, 497, 494, 498, 499, 500, 501,
	0, 502, 503, 504, 1145, 505, 506, 507, 508, 631,
	509, 0, 510, 511, 517, 518, 512, 513, 519, 520,
	521, 522, 523, 0, 525, 526, 524, 527, 528, 529,
	0, 530, 531, 514, 515, 532, 533, 1146, 534, 535,
	536, 537, 538, 539, 632, 0, 540, 0, 541, 542,
	543, 544, 516, 545, 550, 633, 546, 547, 548, 549,
	634, 552, 0, 553, 554, 0, 551, 0, 555, 556,
	557, 558, 559, 560, 561, 341, 562, 0, 563, 635,
	636, 637, 638, 0, 572, 0, 564, 565, 566, 639,
	567, 640, 0, 568, 569, 570, 571, 0, 573, 574,
	0, 0, 575, 576, 577, 579, 580, 578, 581, 0,
	582, 0, 0, 583, 584, 585, 641, 642, 643, 0,
	587, 586, 588, 644, 0, 0, 0, 0, 589, 590,
	645, 591, 592, 593, 1261, 0, 1267, 1266, 0, 0,
	0, 0, 1264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 263, 262, 264, 265, 266, 267,
	0, 268, 269, 0, 0, 0, 0, 0, 594, 0,
	0, 0, 0, 270, 271, 1130, 272, 273, 274, 275,
	276, 277, 595, 596, 0, 278, 597, 279, 598, 0,
	599, 280, 281, 282, 283, 284, 285, 0, 0, 0,
	286, 600, 601, 602, 0, 287, 288, 603, 0, 1272,
	0, 289, 290, 291, 292, 293, 294, 295, 0, 0,
	297, 298, 299, 296, 300, 0, 301, 0, 302, 303,
	304, 305, 306, 307, 0, 308, 309, 310, 1131, 311,
	312, 0, 0, 0, 0, 0, 0, 0, 313, 314,
	315, 316, 0, 317, 604, 605, 0, 321, 318, 319,
	0, 322, 320, 0, 323, 324, 325, 0, 0, 326,
	327, 328, 0, 329, 330, 0, 331, 332, 333, 0,
	334, 335, 606, 336, 337, 338, 340, 342, 339, 343,
	344, 345, 346, 607, 608, 347, 0, 258, 0, 0,
	0, 0, 0, 348, 349, 350, 609, 0, 0, 0,
	351, 0, 352, 0, 0, 1132, 353, 354, 610, 611,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 363,
	612, 0, 613, 364, 0, 365, 366, 367, 368, 369,
	1260, 615, 616, 445, 1134, 370, 371, 0, 372, 373,
	374, 375, 0, 0, 0, 0, 376, 377, 378, 380,
	0, 1133, 379, 617, 618, 0, 619, 0, 381, 382,
	1135, 620, 1136, 383, 384, 385, 1137, 386, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 0, 393, 395,
	394, 0, 396, 621, 1138, 397, 398, 1139, 0, 399,
	0, 0, 0, 400, 401, 0, 0, 402, 403, 404,
	405, 0, 406, 407, 409, 412, 408, 410, 411, 413,
	426, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 428, 0, 427, 1140, 429, 430, 431,
	436, 438, 439, 434, 435, 437, 440, 441, 433, 1141,
	432, 0, 0, 1142, 442, 443, 0, 622, 444, 623,
	446, 447, 0, 0, 448, 0, 0, 0, 450, 451,
	452, 0, 0, 453, 454, 624, 1143, 455, 1144, 625,
	456, 457, 449, 458, 459, 460, 461, 462, 463, 464,
	465, 0, 466, 467, 626, 468, 469, 470, 627, 471,
	472, 473, 628, 474, 629, 475, 476, 0, 477, 478,
	0, 479, 480, 481, 482, 483, 484, 485, 630, 486,
	488, 487, 489, 0, 490, 0, 491, 492, 0, 0,
	0, 0, 493, 0, 495, 496, 497, 494, 498, 499,
	500, 501, 0, 502, 503, 504, 1145, 505, 506, 507,
	508, 631, 509, 0, 510, 511, 517, 518, 512, 513,
	519, 520, 521, 522, 523, 0, 525, 526, 524, 527,
	528, 529, 0, 530, 531, 514, 515, 532, 533, 1146,
	534, 535, 536, 537, 538, 539, 632, 0, 540, 0,
	541, 542, 543, 544, 516, 545, 550, 633, 546, 547,
	548, 549, 634, 552, 0, 553, 554, 0, 551, 0,
	555, 556, 557, 558, 559, 560, 561, 341, 562, 0,
	563, 635, 636, 637, 638, 0, 572, 0, 564, 565,
	566, 639, 567, 640, 0, 568, 569, 570, 571, 0,
	573, 574, 0, 0, 575, 576, 577, 579, 580, 578,
	581, 0, 582, 0, 0, 583, 584, 585, 641, 642,
	643, 0, 587, 586, 588, 644, 0, 0, 0, 0,
	589, 590, 645, 591, 592, 593, 1267, 1266, 0, 0,
	0, 0, 1264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 263, 262, 264, 265, 266, 267,
	0, 268, 269, 0, 0, 0, 0, 0, 594, 0,
	0, 0, 0, 270, 271, 1130, 272, 273, 274, 275,
	276, 277, 595, 596, 0, 278, 597, 279, 598, 0,
	599, 280, 281, 282, 283, 284, 285, 0, 0, 0,
	286, 600, 601, 602, 0, 287, 288, 603, 0, 1272,
	0, 289, 290, 291, 292, 293, 294, 295, 0, 0,
	297, 298, 299, 296, 300, 0, 301, 0, 302, 303,
	304, 305, 306, 307, 0, 308, 309, 310, 1131, 311,
	312, 0, 0, 0, 0, 0, 0, 0, 313, 314,
	315, 316, 0, 317, 604, 605, 0, 321, 318, 319,
	0, 322, 320, 0, 323, 324, 325, 0, 0, 326,
	327, 328, 0, 329, 330, 0, 331, 332, 333, 0,
	334, 335, 606, 336, 337, 338, 340, 342, 339, 343,
	344, 345, 346, 607, 608, 347, 0, 258, 0, 0,
	0, 0, 0, 348, 349, 350, 609, 0, 0, 0,
	351, 0, 352, 0, 0, 1132, 353, 354, 610, 611,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 363,
	612, 0, 613, 364, 0, 365, 366, 367, 368, 369,
	614, 615, 616, 445, 1134, 370, 371, 0, 372, 373,
	374, 375, 0, 0, 0, 0, 376, 377, 378, 380,
	0, 1133, 379, 617, 618, 0, 619, 0, 381, 382,
	1135, 620, 1136, 383, 384, 385, 1137, 386, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 0, 393, 395,
	394, 0, 396, 621, 1138, 397, 398, 1139, 0, 399,
	0, 0, 0, 400, 401, 0, 0, 402, 403, 404,
	405, 0, 406, 407, 409, 412, 408, 410, 411, 413,
	426, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 428, 0, 427, 1140, 429, 430, 431,
	436, 438, 439, 434, 435, 437, 440, 441, 433, 1141,
	432, 0, 0, 1142, 442, 443, 0, 622, 444, 623,
	446, 447, 0, 0, 448, 0, 0, 0, 450, 451,
	452, 0, 0, 453, 454, 624, 1143, 455, 1144, 625,
	456, 457, 449, 458, 459, 460, 461, 462, 463, 464,
	465, 0, 466, 467, 626, 468, 469, 470, 627, 471,
	472, 473, 628, 474, 629, 475, 476, 0, 477, 478,
	0, 479, 480, 481, 482, 483, 484, 485, 630, 486,
	488, 487, 489, 0, 490, 0, 491, 492, 0, 0,
	0, 0, 493, 0, 495, 496, 497, 494, 498, 499,
	500, 501, 0, 502, 503, 504, 1145, 505, 506, 507,
	508, 631, 509, 0, 510, 511, 517, 518, 512, 513,
	519, 520, 521, 522, 523, 0, 525, 526, 524, 527,
	528, 529, 0, 530, 531, 514, 515, 532, 533, 1146,
	534, 535, 536, 537, 538, 539, 632, 0, 540, 0,
	541, 542, 543, 544, 516, 545, 550, 633, 546, 547,
	548, 549, 634, 552, 0, 553, 554, 0, 551, 0,
	555, 556, 557, 558, 559, 560, 561, 341, 562, 0,
	563, 635, 636, 637, 638, 0, 572, 0, 564, 565,
	566, 639, 567, 640, 0, 568, 569, 570, 571, 0,
	573, 574, 0, 0, 575, 576, 577, 579, 580, 578,
	581, 0, 582, 0, 0, 583, 584, 585, 641, 642,
	643, 0, 587, 586, 588, 644, 1267, 1266, 0, 0,
	589, 590, 645, 591, 592, 593, 0, 0, 0, 0,
	0, 0, 0, 261, 263, 262, 264, 265, 266, 267,
	0, 268, 269, 0, 0, 0, 0, 0, 594, 0,
	0, 0, 0, 270, 271, 1130, 272, 273, 274, 275,
	276, 277, 595, 596, 0, 278, 597, 279, 598, 0,
	599, 280, 281, 282, 283, 284, 285, 0, 0, 0,
	286, 600, 601, 602, 0, 287, 288, 603, 0, 1272,
	0, 289, 290, 291, 292, 293, 294, 295, 0, 0,
	297, 298, 299, 296, 300, 0, 301, 0, 302, 303,
	304, 305, 306, 307, 0, 308, 309, 310, 1131, 311,
	312, 0, 0, 0, 0, 0, 0, 0, 313, 314,
	315, 316, 0, 317, 604, 605, 1993, 321, 318, 319,
	0, 322, 320, 0, 323, 324, 325, 0, 0, 326,
	327, 328, 0, 329, 330, 0, 331, 332, 333, 0,
	334, 335, 606, 336, 337, 338, 340, 342, 339, 343,
	344, 345, 346, 607, 608, 347, 0, 258, 0, 0,
	0, 0, 0, 348, 349, 350, 609, 0, 0, 0,
	351, 0, 352, 0, 0, 1132, 353, 354, 610, 611,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 363,
	612, 0, 613, 364, 0, 365, 366, 367, 368, 369,
	614, 615, 616, 445, 1134, 370, 371, 0, 372, 373,
	374, 375, 0, 0, 0, 0, 376, 377, 378, 380,
	0, 1133, 379, 617, 618, 0, 619, 0, 381, 382,
	1135, 620, 1136, 383, 384, 385, 1137, 386, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 0, 393, 395,
	394, 0, 396, 621, 1138, 397, 398, 1139, 0, 399,
	0, 0, 0, 400, 401, 0, 0, 402, 403, 404,
	405, 0, 406, 407, 409, 412, 408, 410, 411, 413,
	426, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 428, 0, 427, 1140, 429, 430, 431,
	436, 438, 439, 434, 435, 437, 440, 441, 433, 1141,
	432, 0, 0, 1142, 442, 443, 0, 622, 444, 623,
	446, 447, 0, 0, 448, 0, 0, 0, 450, 451,
	452, 0, 0, 453, 454, 624, 1143, 455, 1144, 625,
	456, 457, 449, 458, 459, 460, 461, 462, 463, 464,
	465, 0, 466, 467, 626, 468, 469, 470, 627, 471,
	472, 473, 628, 474, 629, 475, 476, 0, 477, 478,
	0, 479, 480, 481, 482, 483, 484, 485, 630, 486,
	488, 487, 489, 0, 490, 0, 491, 492, 0, 0,
	0, 0, 493, 0, 495, 496, 497, 494, 498, 499,
	500, 501, 0, 502, 503, 504, 1145, 505, 506, 507,
	508, 631, 509, 0, 510, 511, 517, 518, 512, 513,
	519, 520, 521, 522, 523, 0, 525, 526, 524, 527,
	528, 529, 0, 530, 531, 514, 515, 532, 533, 1146,
	534, 535, 536, 537, 538, 539, 632, 0, 540, 0,
	541, 542, 543, 544, 516, 545, 550, 633, 546, 547,
	548, 549, 634, 552, 0, 553, 554, 0, 551, 0,
	555, 556, 557, 558, 559, 560, 561, 341, 562, 0,
	563, 635, 636, 637, 638, 0, 572, 0, 564, 565,
	566, 639, 567, 640, 0, 568, 569, 570, 571, 0,
	573, 574, 0, 0, 575, 576, 577, 579, 580, 578,
	581, 0, 582, 0, 0, 583, 584, 585, 641, 642,
	643, 0, 587, 586, 588, 644, 1267, 1266, 0, 0,
	589, 590, 645, 591, 592, 593, 0, 0, 0, 0,
	0, 0, 0, 261, 263, 262, 264, 265, 266, 267,
	0, 268, 269, 0, 0, 0, 0, 0, 594, 0,
	0, 0, 0, 270, 271, 1130, 272, 273, 274, 275,
	276, 277, 595, 596, 0, 278, 597, 279, 598, 0,
	599, 280, 281, 282, 283, 284, 285, 0, 0, 0,
	286, 600, 601, 602, 0, 287, 288, 603, 0, 1272,
	0, 289, 290, 291, 292, 293, 294, 295, 0, 0,
	297, 298, 299, 296, 300, 0, 301, 0, 302, 303,
	304, 305, 306, 307, 0, 308, 309, 310, 1131, 311,
	312, 0, 0, 0, 0, 0, 0, 0, 313, 314,
	315, 316, 0, 317, 604, 605, 0, 321, 318, 319,
	0, 322, 320, 0, 323, 324, 325, 0, 0, 326,
	327, 328, 0, 329, 330, 0, 331, 332, 333, 0,
	334, 335, 606, 336, 337, 338, 340, 342, 339, 343,
	344, 345, 346, 607, 608, 347, 0, 258, 0, 0,
	0, 0, 0, 348, 349, 350, 609, 0, 0, 0,
	351, 0, 352, 0, 0, 1132, 353, 354, 610, 611,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 363,
	612, 0, 613, 364, 0, 365, 366, 367, 368, 369,
	614, 615, 616, 445, 1134, 370, 371, 0, 372, 373,
	374, 375, 0, 0, 0, 0, 376, 377, 378, 380,
	0, 1133, 379, 617, 618, 0, 619, 0, 381, 382,
	1135, 620, 1136, 383, 384, 385, 1137, 386, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 0, 393, 395,
	394, 0, 396, 621, 1138, 397, 398, 1139, 0, 399,
	0, 0, 0, 400, 401, 0, 0, 402, 403, 404,
	405, 0, 406, 407, 409, 412, 408, 410, 411, 413,
	426, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 428, 0, 427, 1140, 429, 430, 431,
	436, 438, 439, 434, 435, 437, 440, 441, 433, 1141,
	432, 0, 0, 1142, 442, 443, 0, 622, 444, 623,
	446, 447, 0, 0, 448, 0, 0, 0, 450, 451,
	452, 0, 0, 453, 454, 624, 1143, 455, 1144, 625,
	456, 457, 449, 458, 459, 460, 461, 462, 463, 464,
	465, 0, 466, 467, 626, 468, 469, 470, 627, 471,
	472, 473, 628, 474, 629, 475, 476, 0, 477, 478,
	0, 479, 480, 481, 482, 483, 484, 485, 630, 486,
	488, 487, 489, 0, 490, 0, 491, 492, 0, 0,
	0, 0, 493, 0, 495, 496, 497, 494, 498, 499,
	500, 501, 0, 502, 503, 504, 1145, 505, 506, 507,
	508, 631, 509, 0, 510, 511, 517, 518, 512, 513,
	519, 520, 521, 522, 523, 0, 525, 526, 524, 527,
	528, 529, 0, 530, 531, 514, 515, 532, 533, 1146,
	534, 535, 536, 537, 538, 539, 632, 0, 540, 0,
	541, 542, 543, 544, 516, 545, 550, 633, 546, 547,
	548, 549, 634, 552, 0, 553, 554, 0, 551, 0,
	555, 556, 557, 558, 559, 560, 561, 341, 562, 0,
	563, 635, 636, 637, 638, 0, 572, 0, 564, 565,
	566, 639, 567, 640, 0, 568, 569, 570, 571, 0,
	573, 574, 0, 0, 575, 576, 577, 579, 580, 578,
	581, 0, 582, 0, 0, 583, 584, 585, 641, 642,
	643, 1267, 587, 586, 588, 644, 0, 0, 0, 0,
	589, 590, 645, 591, 592, 593, 0, 0, 261, 263,
	262, 264, 265, 266, 267, 0, 268, 269, 0, 0,
	0, 0, 0, 594, 0, 0, 0, 0, 270, 271,
	1130, 272, 273, 274, 275, 276, 277, 595, 596, 0,
	278, 597, 279, 598, 0, 599, 280, 281, 282, 283,
	284, 285, 0, 0, 0, 286, 600, 601, 602, 0,
	287, 288, 603, 0, 1272, 0, 289, 290, 291, 292,
	293, 294, 295, 0, 0, 297, 298, 299, 296, 300,
	0, 301, 0, 302, 303, 304, 305, 306, 307, 0,
	308, 309, 310, 1131, 311, 312, 0, 0, 0, 0,
	0, 0, 0, 313, 314, 315, 316, 0, 317, 604,
	605, 0, 321, 318, 319, 0, 322, 320, 0, 323,
	324, 325, 0, 0, 326, 327, 328, 0, 329, 330,
	0, 331, 332, 333, 0, 334, 335, 606, 336, 337,
	338, 340, 342, 339, 343, 344, 345, 346, 607, 608,
	347, 0, 258, 0, 0, 0, 0, 0, 348, 349,
	350, 609, 0, 0, 0, 351, 0, 352, 0, 0,
	1132, 353, 354, 610, 611, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 363, 612, 0, 613, 364, 0,
	365, 366, 367, 368, 369, 614, 615, 616, 445, 1134,
	370, 371, 0, 372, 373, 374, 375, 0, 0, 0,
	0, 376, 377, 378, 380, 0, 1133, 379, 617, 618,
	0, 619, 0, 381, 382, 1135, 620, 1136, 383, 384,
	385, 1137, 386, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 0, 393, 395, 394, 0, 396, 621, 1138,
	397, 398, 1139, 0, 399, 0, 0, 0, 400, 401,
	0, 0, 402, 403, 404, 405, 0, 406, 407, 409,
	412, 408, 410, 411, 413, 426, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 428, 0,
	427, 1140, 429, 430, 431, 436, 438, 439, 434, 435,
	437, 440, 441, 433, 1141, 432, 0, 0, 1142, 442,
	443, 0, 622, 444, 623, 446, 447, 0, 0, 448,
	0, 0, 0, 450, 451, 452, 0, 0, 453, 454,
	624, 1143, 455, 1144, 625, 456, 457, 449, 458, 459,
	460, 461, 462, 463, 464, 465, 0, 466, 467, 626,
	468, 469, 470, 627, 471, 472, 473, 628, 474, 629,
	475, 476, 0, 477, 478, 0, 479, 480, 481, 482,
	483, 484, 485, 630, 486, 488, 487, 489, 0, 490,
	0, 491, 492, 0, 0, 0, 0, 493, 0, 495,
	496, 497, 494, 498, 499, 500, 501, 0, 502, 503,
	504, 1145, 505, 506, 507, 508, 631, 509, 0, 510,
	511, 517, 518, 512, 513, 519, 520, 521, 522, 523,
	0, 525, 526, 524, 527, 528, 529, 0, 530, 531,
	514, 515, 532, 533, 1146, 534, 535, 536, 537, 538,
	539, 632, 0, 540, 0, 541, 542, 543, 544, 516,
	545, 550, 633, 546, 547, 548, 549, 634, 552, 0,
	553, 554, 0, 551, 0, 555, 556, 557, 558, 559,
	560, 561, 341, 562, 0, 563, 635, 636, 637, 638,
	0, 572, 0, 564, 565, 566, 639, 567, 640, 0,
	568, 569, 570, 571, 0, 573, 574, 0, 0, 575,
	576, 577, 579, 580, 578, 581, 0, 582, 0, 0,
	583, 584, 585, 641, 642, 643, 255, 587, 586, 588,
	644, 0, 0, 0, 0, 589, 590, 645, 591, 592,
	593, 0, 0, 261, 263, 262, 264, 265, 266, 267,
	0, 268, 269, 0, 0, 0, 0, 0, 594, 0,
	0, 0, 0, 270, 271, 0, 272, 273, 274, 275,
	276, 277, 595, 596, 0, 278, 597, 279, 598, 0,
	599, 280, 281, 282, 283, 284, 285, 0, 0, 0,
	286, 600, 601, 602, 2669, 287, 288, 603, 0, 0,
	0, 289, 290, 291, 292, 293, 294, 295, 0, 0,
	297, 298, 299, 296, 300, 2666, 301, 0, 302, 303,
	304, 305, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 0, 0, 0, 0, 0, 0, 0, 313, 314,
	315, 316, 0, 317, 604, 605, 0, 321, 318, 319,
	0, 322, 320, 0, 323, 324, 325, 0, 0, 326,
	327, 328, 0, 329, 330, 0, 331, 332, 333, 0,
	2673, 335, 606, 336, 337, 338, 340, 342, 339, 343,
	344, 345, 346, 607, 608, 347, 0, 2866, 0, 0,
	0, 0, 0, 348, 349, 350, 609, 0, 0, 0,
	351, 0, 352, 2672, 0, 0, 353, 354, 610, 611,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 363,
	612, 0, 613, 364, 0, 365, 366, 367, 368, 369,
	614, 615, 616, 445, 0, 370, 371, 0, 372, 373,
	374, 375, 0, 0, 0, 2863, 376, 377, 378, 380,
	0, 0, 379, 617, 618, 0, 619, 0, 381, 2865,
	0, 620, 0, 383, 384, 385, 0, 386, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 0, 393, 395,
	394, 0, 396, 621, 0, 397, 398, 2862, 0, 399,
	0, 0, 0, 400, 401, 0, 0, 402, 403, 404,
	405, 0, 406, 407, 409, 412, 408, 410, 411, 413,
	426, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 428, 0, 427, 0, 429, 430, 431,
	436, 438, 439, 434, 435, 437, 440, 441, 433, 0,
	432, 0, 0, 0, 442, 443, 0, 622, 444, 623,
	446, 447, 0, 0, 448, 0, 0, 0, 450, 451,
	452, 0, 0, 453, 454, 624, 0, 455, 0, 625,
	456, 457, 449, 458, 459, 460, 461, 462, 463, 464,
	465, 0, 466, 467, 626, 468, 469, 470, 627, 471,
	472, 473, 628, 474, 629, 475, 476, 2671, 477, 478,
	0, 479, 480, 481, 482, 483, 484, 485, 630, 486,
	488, 487, 489, 0, 490, 0, 491, 492, 0, 0,
	0, 0, 493, 0, 495, 496, 497, 494, 498, 499,
	500, 501, 0, 502, 503, 504, 0, 505, 506, 507,
	508, 631, 509, 0, 510, 511, 517, 518, 512, 513,
	519, 520, 521, 522, 523, 0, 525, 526, 524, 527,
	528, 529, 0, 530, 531, 514, 515, 532, 533, 0,
	534, 535, 536, 537, 538, 539, 632, 0, 540, 0,
	541, 542, 543, 544, 516, 545, 550, 633, 546, 547,
	548, 549, 634, 552, 0, 553, 554, 0, 551, 0,
	555, 556, 557, 558, 559, 560, 561, 341, 562, 0,
	563, 635, 636, 637, 638, 0, 572, 0, 564, 565,
	566, 639, 567, 640, 0, 568, 569, 570, 571, 0,
	573, 574, 0, 2864, 575, 576, 577, 579, 580, 578,
	581, 0, 582, 0, 0, 583, 584, 585, 641, 642,
	643, 255, 587, 586, 588, 644, 0, 0, 0, 0,
	589, 590, 645, 591, 592, 593, 0, 0, 261, 263,
	262, 264, 265, 266, 267, 0, 268, 269, 0, 0,
	0, 0, 0, 594, 0, 0, 0, 0, 270, 271,
	0, 272, 273, 274, 275, 276, 277, 595, 596, 0,
	278, 597, 279, 598, 0, 599, 280, 281, 282, 283,
	284, 285, 0, 0, 0, 286, 600, 601, 602, 2669,
	287, 288, 603, 0, 0, 2663, 289, 290, 291, 292,
	293, 294, 295, 0, 0, 297, 298, 299, 296, 300,
	2666, 301, 0, 302, 303, 304, 305, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 0, 0, 0, 0,
	0, 0, 0, 313, 314, 315, 316, 0, 317, 604,
	605, 0, 321, 318, 319, 0, 322, 320, 0, 323,
	324, 325, 0, 0, 326, 327, 328, 0, 329, 330,
	0, 331, 332, 333, 0, 2673, 335, 606, 336, 337,
	338, 340, 342, 339, 343, 344, 345, 346, 607, 608,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 609, 0, 0, 0, 351, 0, 352, 2672, 0,
	0, 353, 354, 610, 611, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 363, 612, 0, 613, 364, 0,
	365, 366, 367, 368, 369, 2662, 615, 616, 445, 0,
	370, 371, 0, 372, 373, 374, 375, 0, 0, 0,
	0, 376, 377, 378, 380, 0, 0, 379, 617, 618,
	0, 619, 0, 381, 382, 0, 620, 0, 383, 384,
	385, 0, 386, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 0, 393, 395, 394, 0, 396, 621, 0,
	397, 398, 0, 0, 399, 0, 0, 0, 400, 401,
	0, 0, 402, 403, 404, 405, 0, 406, 407, 409,
	412, 408, 410, 411, 413, 426, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 428, 0,
	427, 0, 429, 430, 431, 436, 438, 439, 434, 435,
	437, 440, 441, 433, 0, 432, 0, 0, 0, 442,
	443, 0, 622, 444, 623, 446, 447, 0, 0, 448,
	0, 0, 0, 450, 451, 452, 0, 0, 453, 454,
	624, 0, 455, 0, 625, 456, 457, 449, 458, 459,
	460, 461, 462, 463, 464, 465, 0, 466, 467, 626,
	468, 469, 470, 627, 471, 472, 473, 628, 474, 629,
	475, 476, 2671, 477, 478, 0, 479, 480, 481, 482,
	483, 484, 485, 630, 486, 488, 487, 489, 0, 490,
	0, 491, 492, 0, 0, 0, 0, 493, 0, 495,
	496, 497, 494, 498, 499, 500, 501, 0, 502, 503,
	504, 0, 505, 506, 507, 508, 631, 509, 0, 510,
	511, 517, 518, 512, 513, 519, 520, 521, 522, 523,
	0, 525, 526, 524, 527, 528, 529, 0, 530, 531,
	514, 515, 532, 533, 0, 534, 535, 536, 537, 538,
	539, 632, 0, 540, 0, 541, 542, 543, 544, 516,
	545, 550, 633, 546, 547, 548, 549, 634, 552, 0,
	553, 554, 0, 551, 0, 555, 556, 557, 558, 559,
	560, 561, 341, 562, 0, 563, 635, 636, 637, 638,
	0, 572, 0, 564, 565, 566, 639, 567, 640, 0,
	568, 569, 570, 571, 0, 573, 574, 0, 2670, 575,
	576, 577, 579, 580, 578, 581, 0, 582, 0, 0,
	583, 584, 585, 641, 642, 643, 0, 587, 586, 588,
	644, 1656, 0, 255, 0, 589, 590, 645, 591, 592,
	593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 263, 262, 264, 265, 266, 267, 0, 268, 269,
	0, 0, 0, 0, 0, 594, 0, 0, 0, 0,
	270, 271, 0, 272, 273, 274, 275, 276, 277, 595,
	596, 0, 278, 597, 279, 598, 0, 599, 280, 281,
	282, 283, 284, 285, 0, 0, 0, 286, 600, 601,
	602, 0, 287, 288, 603, 0, 0, 0, 289, 290,
	291, 292, 293, 294, 295, 0, 0, 297, 298, 299,
	296, 300, 0, 301, 0, 302, 303, 304, 305, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 0, 0,
	0, 0, 0, 0, 0, 313, 314, 315, 316, 0,
	317, 604, 605, 0, 321, 318, 319, 0, 322, 320,
	0, 323, 324, 325, 0, 0, 326, 327, 328, 0,
	329, 330, 0, 331, 332, 333, 0, 334, 335, 606,
	336, 337, 338, 340, 342, 339, 343, 344, 345, 346,
	607, 608, 347, 0, 258, 0, 0, 0, 0, 0,
	348, 349, 350, 609, 0, 0, 0, 351, 0, 352,
	0, 0, 0, 353, 354, 610, 611, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 363, 612, 0, 613,
	364, 0, 365, 366, 367, 368, 369, 614, 615, 616,
	445, 0, 370, 371, 0, 372, 373, 374, 375, 0,
	0, 0, 259, 376, 377, 378, 380, 0, 0, 379,
	617, 618, 0, 619, 0, 381, 382, 0, 620, 0,
	383, 384, 385, 0, 386, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 0, 393, 395, 394, 0, 396,
	621, 0, 397, 398, 0, 0, 399, 0, 0, 0,
	400, 401, 0, 0, 402, 403, 404, 405, 0, 406,
	407, 409, 412, 408, 410, 411, 413, 426, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	428, 0, 427, 0, 429, 430, 431, 436, 438, 439,
	434, 435, 437, 440, 441, 433, 0, 432, 0, 260,
	0, 442, 443, 0, 622, 444, 623, 446, 447, 0,
	0, 448, 0, 0, 0, 450, 451, 452, 0, 0,
	453, 454, 624, 0, 455, 0, 625, 456, 457, 449,
	458, 459, 460, 461, 462, 463, 464, 465, 0, 466,
	467, 626, 468, 469, 470, 627, 471, 472, 473, 628,
	474, 629, 475, 476, 0, 477, 478, 0, 479, 480,
	481, 482, 483, 484, 485, 630, 486, 488, 487, 489,
	0, 490, 0, 491, 492, 0, 0, 0, 0, 493,
	0, 495, 496, 497, 494, 498, 499, 500, 501, 0,
	502, 503, 504, 0, 505, 506, 507, 508, 631, 509,
	0, 510, 511, 517, 518, 512, 513, 519, 520, 521,
	522, 523, 0, 1659, 526, 524, 527, 528, 529, 0,
	530, 531, 514, 515, 532, 533, 0, 534, 535, 536,
	537, 538, 539, 632, 0, 540, 0, 541, 542, 543,
	544, 516, 545, 550, 633, 546, 547, 548, 549, 634,
	552, 0, 553, 554, 0, 551, 1657, 555, 556, 557,
	558, 559, 560, 561, 341, 562, 0, 563, 635, 636,
	637, 638, 0, 572, 0, 564, 565, 566, 639, 567,
	640, 0, 568, 569, 570, 571, 0, 573, 574, 0,
	0, 575, 576, 577, 579, 580, 578, 581, 0, 582,
	0, 0, 583, 584, 585, 641, 642, 643, 0, 1658,
	586, 588, 644, 1413, 0, 255, 0, 589, 590, 645,
	591, 592, 593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 263, 262, 264, 265, 266, 267, 0,
	268, 269, 0, 0, 0, 0, 0, 594, 0, 0,
	0, 0, 270, 271, 0, 272, 273, 274, 275, 276,
	277, 595, 596, 0, 278, 597, 279, 598, 0, 599,
	280, 281, 282, 283, 284, 285, 0, 0, 0, 286,
	600, 601, 602, 0, 287, 288, 603, 0, 0, 0,
	289, 290, 291, 292, 293, 294, 295, 0, 0, 297,
	298, 299, 296, 300, 0, 301, 0, 302, 303, 304,
	305, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	0, 0, 0, 0, 0, 0, 0, 313, 314, 315,
	316, 0, 317, 604, 605, 0, 321, 318, 319, 0,
	322, 320, 0, 323, 324, 325, 0, 0, 326, 327,
	328, 0, 329, 330, 0, 331, 332, 333, 0, 334,
	335, 606, 336, 337, 338, 340, 342, 339, 343, 344,
	345, 346, 607, 608, 347, 0, 258, 0, 0, 0,
	0, 0, 348, 349, 350, 609, 0, 0, 0, 351,
	0, 352, 0, 0, 0, 353, 354, 610, 611, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 363, 612,
	0, 613, 364, 0, 365, 366, 367, 368, 369, 1415,
	615, 616, 445, 0, 370, 371, 0, 372, 373, 374,
	375, 0, 0, 0, 259, 376, 377, 378, 380, 0,
	0, 379, 617, 618, 0, 619, 0, 381, 382, 0,
	620, 0, 383, 384, 385, 0, 386, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 0, 393, 395, 394,
	0, 396, 621, 0, 397, 398, 0, 0, 399, 0,
	0, 0, 400, 401, 0, 0, 402, 403, 404, 405,
	0, 406, 407, 409, 412, 408, 410, 411, 413, 426,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 428, 0, 427, 0, 429, 430, 431, 436,
	438, 439, 434, 435, 437, 440, 441, 433, 0, 432,
	0, 260, 0, 442, 443, 0, 622, 444, 623, 446,
	447, 0, 0, 448, 0, 0, 1180, 450, 451, 452,
	0, 0, 453, 454, 624, 0, 455, 0, 625, 456,
	457, 449, 458, 459, 460, 461, 462, 463, 464, 465,
	0, 466, 467, 626, 468, 469, 470, 627, 471, 472,
	473, 628, 474, 629, 475, 476, 0, 477, 478, 0,
	479, 480, 481, 482, 483, 484, 485, 630, 486, 488,
	487, 489, 0, 490, 0, 491, 492, 0, 0, 0,
	0, 493, 0, 495, 496, 497, 494, 498, 499, 500,
	501, 0, 502, 503, 504, 0, 505, 506, 507, 508,
	631, 509, 0, 510, 511, 517, 518, 512, 513, 519,
	520, 521, 522, 523, 0, 525, 526, 524, 527, 528,
	529, 0, 530, 531, 514, 515, 532, 533, 0, 534,
	535, 536, 537, 538, 539, 632, 0, 540, 0, 541,
	542, 543, 544, 516, 545, 550, 633, 546, 547, 548,
	549, 634, 552, 0, 553, 554, 0, 551, 0, 555,
	556, 557, 558, 559, 560, 561, 341, 562, 0, 563,
	635, 636, 637, 638, 0, 572, 0, 564, 565, 566,
	639, 567, 640, 0, 568, 569, 570, 571, 0, 573,
	574, 0, 0, 575, 576, 577, 579, 580, 578, 581,
	0, 582, 0, 0, 583, 584, 585, 641, 642, 643,
	0, 587, 586, 588, 644, 1410, 0, 255, 0, 589,
	590, 645, 591, 592, 593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 594,
	0, 0, 0, 0, 270, 271, 0, 272, 273, 274,
	275, 276, 277, 595, 596, 0, 278, 597, 279, 598,
	0, 599, 280, 281, 282, 283, 284, 285, 0, 0,
	0, 286, 600, 601, 602, 0, 287, 288, 603, 0,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 0, 0, 0, 0, 0, 0, 0, 313,
	314, 315, 316, 0, 317, 604, 605, 0, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 327, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 606, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 607, 608, 347, 0, 258, 0,
	0, 0, 0, 0, 348, 349, 350, 609, 0, 0,
	0, 351, 0, 352, 0, 0, 0, 353, 354, 610,
	611, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 612, 0, 613, 364, 0, 365, 366, 367, 368,
	369, 1412, 615, 616, 445, 0, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 259, 376, 377, 378,
	380, 0, 0, 379, 617, 618, 0, 619, 0, 381,
	382, 0, 620, 0, 383, 384, 385, 0, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 621, 0, 397, 398, 0, 0,
	399, 0, 0, 0, 400, 401, 0, 0, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 0, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	0, 432, 0, 260, 0, 442, 443, 0, 622, 444,
	623, 446, 447, 0, 0, 448, 0, 0, 1180, 450,
	451, 452, 0, 0, 453, 454, 624, 0, 455, 0,
	625, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 628, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 630,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 0, 505, 506,
	507, 508, 631, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 0, 530, 531, 514, 515, 532, 533,
	0, 534, 535, 536, 537, 538, 539, 632, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 633, 546,
	547, 548, 549, 634, 552, 0, 553, 554, 0, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 635, 636, 637, 638, 0, 572, 0, 564,
	565, 566, 639, 567, 640, 0, 568, 569, 570, 571,
	0, 573, 574, 0, 0, 575, 576, 577, 579, 580,
	578, 581, 0, 582, 0, 0, 583, 584, 585, 641,
	642, 643, 0, 587, 586, 588, 644, 1318, 0, 255,
	0, 589, 590, 645, 591, 592, 593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 263, 262, 264,
	265, 266, 267, 0, 268, 269, 0, 0, 0, 0,
	0, 594, 0, 0, 0, 0, 270, 271, 0, 272,
	273, 274, 275, 276, 277, 595, 596, 0, 278, 597,
	279, 598, 0, 599, 280, 281, 282, 283, 284, 285,
	0, 0, 0, 286, 600, 601, 602, 0, 287, 288,
	603, 0, 0, 0, 289, 290, 291, 292, 293, 294,
	295, 0, 0, 297, 298, 299, 296, 300, 0, 301,
	0, 302, 303, 304, 305, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 0, 0, 0, 0, 0, 0,
	0, 313, 314, 315, 316, 0, 317, 604, 605, 0,
	321, 318, 319, 0, 322, 320, 0, 323, 324, 325,
	0, 0, 326, 327, 328, 0, 329, 330, 0, 331,
	332, 333, 0, 334, 335, 606, 336, 337, 338, 340,
	342, 339, 343, 344, 345, 346, 607, 608, 347, 0,
	258, 0, 0, 0, 0, 0, 348, 349, 350, 609,
	0, 0, 0, 351, 0, 352, 0, 0, 0, 353,
	354, 610, 611, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 363, 612, 0, 613, 364, 0, 365, 366,
	367, 368, 369, 1320, 615, 616, 445, 0, 370, 371,
	0, 372, 373, 374, 375, 0, 0, 0, 259, 376,
	377, 378, 380, 0, 0, 379, 617, 618, 0, 619,
	0, 381, 382, 0, 620, 0, 383, 384, 385, 0,
	386, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	0, 393, 395, 394, 0, 396, 621, 0, 397, 398,
	0, 0, 399, 0, 0, 0, 400, 401, 0, 0,
	402, 403, 404, 405, 0, 406, 407, 409, 412, 408,
	410, 411, 413, 426, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 428, 0, 427, 0,
	429, 430, 431, 436, 438, 439, 434, 435, 437, 440,
	441, 433, 0, 432, 0, 260, 0, 442, 443, 0,
	622, 444, 623, 446, 447, 0, 0, 448, 0, 0,
	1180, 450, 451, 452, 0, 0, 453, 454, 624, 0,
	455, 0, 625, 456, 457, 449, 458, 459, 460, 461,
	462, 463, 464, 465, 0, 466, 467, 626, 468, 469,
	470, 627, 471, 472, 473, 628, 474, 629, 475, 476,
	0, 477, 478, 0, 479, 480, 481, 482, 483, 484,
	485, 630, 486, 488, 487, 489, 0, 490, 0, 491,
	492, 0, 0, 0, 0, 493, 0, 495, 496, 497,
	494, 498, 499, 500, 501, 0, 502, 503, 504, 0,
	505, 506, 507, 508, 631, 509, 0, 510, 511, 517,
	518, 512, 513, 519, 520, 521, 522, 523, 0, 525,
	526, 524, 527, 528, 529, 0, 530, 531, 514, 515,
	532, 533, 0, 534, 535, 536, 537, 538, 539, 632,
	0, 540, 0, 541, 542, 543, 544, 516, 545, 550,
	633, 546, 547, 548, 549, 634, 552, 0, 553, 554,
	0, 551, 0, 555, 556, 557, 558, 559, 560, 561,
	341, 562, 0, 563, 635, 636, 637, 638, 0, 572,
	0, 564, 565, 566, 639, 567, 640, 0, 568, 569,
	570, 571, 0, 573, 574, 0, 0, 575, 576, 577,
	579, 580, 578, 581, 0, 582, 0, 0, 583, 584,
	585, 641, 642, 643, 0, 587, 586, 588, 644, 677,
	0, 255, 0, 589, 590, 645, 591, 592, 593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 263,
	262, 264, 676, 266, 267, 666, 268, 269, 0, 0,
	0, 0, 0, 594, 0, 0, 0, 0, 270, 271,
	0, 272, 273, 274, 275, 276, 277, 595, 596, 0,
	278, 597, 279, 598, 0, 599, 280, 281, 282, 283,
	284, 285, 0, 0, 0, 286, 600, 601, 602, 0,
	287, 288, 603, 0, 0, 0, 289, 290, 291, 292,
	293, 294, 295, 0, 0, 297, 298, 299, 296, 300,
	0, 301, 0, 302, 303, 304, 305, 306, 307, 669,
	308, 309, 310, 0, 311, 312, 0, 0, 0, 0,
	0, 0, 0, 313, 314, 315, 316, 0, 317, 604,
	605, 0, 321, 318, 319, 0, 322, 320, 0, 323,
	324, 325, 0, 0, 326, 327, 328, 0, 329, 330,
	0, 331, 332, 333, 0, 334, 335, 606, 336, 337,
	338, 340, 342, 339, 343, 344, 345, 346, 607, 608,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 609, 0, 0, 0, 351, 0, 352, 0, 0,
	0, 353, 354, 610, 611, 355, 356, 357, 358, 359,
	360, 361, 362, 670, 363, 612, 0, 613, 364, 0,
	365, 366, 367, 368, 369, 614, 615, 616, 445, 0,
	370, 371, 0, 372, 373, 374, 375, 0, 0, 0,
	0, 376, 377, 378, 380, 0, 0, 379, 617, 618,
	0, 619, 0, 381, 382, 0, 620, 0, 383, 384,
	385, 0, 386, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 0, 393, 395, 394, 0, 396, 621, 0,
	397, 398, 0, 0, 399, 0, 0, 0, 400, 401,
	0, 0, 402, 403, 404, 405, 0, 406, 407, 409,
	412, 408, 410, 411, 413, 426, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 428, 0,
	427, 0, 429, 430, 431, 436, 438, 439, 434, 435,
	437, 440, 441, 433, 0, 432, 0, 0, 0, 442,
	443, 0, 622, 444, 623, 446, 447, 0, 0, 448,
	0, 0, 0, 450, 451, 452, 0, 0, 453, 454,
	624, 0, 455, 0, 625, 456, 457, 449, 458, 459,
	460, 461, 462, 463, 464, 465, 0, 466, 467, 626,
	468, 469, 470, 627, 471, 472, 473, 628, 474, 629,
	475, 476, 0, 477, 478, 0, 479, 480, 481, 482,
	483, 484, 485, 630, 486, 488, 487, 489, 0, 490,
	0, 491, 492, 0, 0, 0, 0, 493, 0, 495,
	496, 497, 494, 498, 499, 500, 501, 0, 502, 503,
	504, 0, 505, 506, 507, 508, 631, 509, 0, 510,
	511, 517, 518, 512, 513, 519, 520, 521, 522, 523,
	671, 525, 526, 524, 527, 528, 529, 0, 530, 531,
	514, 515, 532, 533, 0, 534, 535, 536, 537, 538,
	539, 632, 0, 540, 0, 541, 542, 543, 544, 516,
	545, 550, 633, 546, 547, 548, 549, 634, 552, 0,
	553, 554, 0, 551, 0, 555, 556, 557, 558, 559,
	560, 561, 341, 562, 0, 563, 635, 636, 637, 638,
	0, 572, 0, 564, 565, 566, 639, 567, 640, 0,
	568, 569, 570, 571, 0, 573, 574, 0, 0, 575,
	576, 577, 579, 580, 578, 581, 0, 582, 0, 0,
	583, 584, 585, 641, 642, 643, 0, 587, 586, 588,
	644, 665, 0, 255, 0, 589, 590, 645, 591, 592,
	593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 263, 262, 264, 265, 266, 267, 666, 268, 269,
	0, 0, 0, 0, 0, 594, 0, 0, 0, 0,
	270, 271, 0, 272, 273, 274, 275, 276, 277, 595,
	596, 0, 278, 597, 279, 598, 0, 599, 280, 281,
	282, 283, 284, 285, 0, 0, 0, 286, 600, 601,
	602, 0, 287, 288, 603, 0, 0, 0, 289, 290,
	291, 292, 293, 294, 295, 0, 0, 297, 298, 299,
	296, 300, 0, 301, 0, 302, 303, 304, 305, 306,
	307, 669, 308, 309, 310, 0, 311, 312, 0, 0,
	0, 0, 0, 0, 0, 313, 314, 315, 316, 0,
	317, 604, 605, 0, 321, 318, 319, 0, 322, 320,
	0, 323, 324, 325, 0, 0, 326, 327, 328, 0,
	329, 330, 0, 331, 332, 333, 0, 334, 335, 606,
	336, 337, 338, 340, 342, 339, 343, 344, 345, 346,
	607, 608, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 609, 0, 0, 0, 351, 0, 352,
	0, 0, 0, 353, 354, 610, 611, 355, 356, 357,
	358, 359, 360, 361, 362, 670, 363, 612, 0, 613,
	364, 0, 365, 366, 367, 368, 369, 614, 615, 616,
	445, 0, 370, 371, 0, 372, 373, 374, 375, 0,
	0, 0, 0, 376, 377, 378, 380, 0, 0, 379,
	617, 618, 0, 619, 0, 381, 382, 0, 620, 0,
	383, 384, 385, 0, 386, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 0, 393, 395, 394, 0, 396,
	621, 0, 397, 398, 0, 0, 399, 0, 0, 0,
	400, 401, 0, 0, 402, 403, 404, 405, 0, 406,
	407, 409, 412, 408, 410, 411, 413, 426, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	428, 0, 427, 0, 429, 430, 431, 436, 438, 439,
	434, 435, 437, 440, 441, 433, 0, 432, 0, 0,
	0, 442, 443, 0, 622, 444, 623, 446, 447, 0,
	0, 448, 0, 0, 0, 450, 451, 452, 0, 0,
	453, 454, 624, 0, 455, 0, 625, 456, 457, 449,
	458, 459, 460, 461, 462, 463, 464, 465, 0, 466,
	467, 626, 468, 469, 470, 627, 471, 472, 473, 628,
	474, 629, 475, 476, 0, 477, 478, 0, 479, 480,
	481, 482, 483, 484, 485, 630, 486, 488, 487, 489,
	0, 490, 0, 491, 492, 0, 0, 0, 0, 493,
	0, 495, 496, 497, 494, 498, 499, 500, 501, 0,
	502, 503, 504, 0, 505, 506, 507, 508, 631, 509,
	0, 510, 511, 517, 518, 512, 513, 519, 520, 521,
	522, 523, 671, 525, 526, 524, 527, 528, 529, 0,
	530, 531, 514, 515, 532, 533, 0, 534, 535, 536,
	537, 538, 539, 632, 0, 540, 0, 541, 542, 543,
	544, 516, 545, 550, 633, 546, 547, 548, 549, 634,
	552, 0, 553, 554, 0, 551, 0, 555, 556, 557,
	558, 559, 560, 561, 341, 562, 0, 563, 635, 636,
	637, 638, 0, 572, 0, 564, 565, 566, 639, 567,
	640, 0, 568, 569, 570, 571, 0, 573, 574, 0,
	0, 575, 576, 577, 579, 580, 578, 581, 0, 582,
	0, 0, 583, 584, 585, 641, 642, 643, 255, 587,
	586, 588, 644, 0, 0, 0, 0, 589, 590, 645,
	591, 592, 593, 0, 0, 261, 263, 262, 264, 265,
	266, 267, 0, 268, 269, 0, 0, 0, 0, 0,
	594, 0, 0, 0, 0, 270, 271, 0, 272, 273,
	274, 275, 276, 277, 595, 596, 0, 278, 597, 279,
	598, 0, 599, 280, 281, 282, 283, 284, 285, 0,
	0, 0, 286, 600, 601, 602, 0, 287, 288, 603,
	0, 0, 0, 289, 290, 291, 292, 293, 294, 295,
	0, 0, 297, 298, 299, 296, 300, 0, 301, 0,
	302, 303, 304, 305, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 0, 0, 0, 0, 0, 0, 0,
	313, 314, 315, 316, 0, 317, 604, 605, 0, 321,
	318, 319, 0, 322, 320, 0, 323, 324, 325, 0,
	0, 326, 327, 328, 0, 329, 330, 0, 331, 332,
	333, 0, 334, 335, 606, 336, 337, 338, 340, 342,
	339, 343, 344, 345, 346, 607, 608, 347, 0, 258,
	0, 0, 0, 0, 0, 348, 349, 350, 609, 0,
	0, 0, 351, 0, 352, 0, 0, 0, 353, 354,
	610, 611, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 363, 612, 0, 613, 364, 0, 365, 366, 367,
	368, 369, 614, 615, 616, 445, 0, 370, 371, 0,
	372, 373, 374, 375, 0, 0, 0, 259, 376, 377,
	378, 380, 0, 0, 379, 617, 618, 0, 619, 0,
	381, 382, 0, 620, 0, 383, 384, 385, 0, 386,
	0, 0, 0, 387, 388, 389, 390, 391, 392, 0,
	393, 395, 394, 0, 396, 621, 0, 397, 398, 0,
	0, 399, 0, 0, 0, 400, 401, 0, 0, 402,
	403, 404, 405, 0, 406, 407, 409, 412, 408, 410,
	411, 413, 426, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 428, 0, 427, 0, 429,
	430, 431, 436, 438, 439, 434, 435, 437, 440, 441,
	433, 0, 432, 0, 260, 0, 442, 443, 0, 622,
	444, 623, 446, 447, 0, 0, 448, 0, 0, 1180,
	450, 451, 452, 0, 0, 453, 454, 624, 0, 455,
	0, 625, 456, 457, 449, 458, 459, 460, 461, 462,
	463, 464, 465, 0, 466, 467, 626, 468, 469, 470,
	627, 471, 472, 473, 628, 474, 629, 475, 476, 0,
	477, 478, 0, 479, 480, 481, 482, 483, 484, 485,
	630, 486, 488, 487, 489, 0, 490, 0, 491, 492,
	0, 0, 0, 0, 493, 0, 495, 496, 497, 494,
	498, 499, 500, 501, 0, 502, 503, 504, 0, 505,
	506, 507, 508, 631, 509, 0, 510, 511, 517, 518,
	512, 513, 519, 520, 521, 522, 523, 0, 525, 526,
	524, 527, 528, 529, 0, 530, 531, 514, 515, 532,
	533, 0, 534, 535, 536, 537, 538, 539, 632, 0,
	540, 0, 541, 542, 543, 544, 516, 545, 550, 633,
	546, 547, 548, 549, 634, 552, 0, 553, 554, 0,
	551, 0, 555, 556, 557, 558, 559, 560, 561, 341,
	562, 0, 563, 635, 636, 637, 638, 0, 572, 0,
	564, 565, 566, 639, 567, 640, 0, 568, 569, 570,
	571, 0, 573, 574, 0, 0, 575, 576, 577, 579,
	580, 578, 581, 0, 582, 0, 0, 583, 584, 585,
	641, 642, 643, 255, 587, 586, 588, 644, 0, 0,
	0, 0, 589, 590, 645, 591, 592, 593, 0, 0,
	261, 263, 262, 264, 265, 266, 267, 0, 268, 269,
	0, 0, 0, 0, 0, 594, 0, 0, 0, 0,
	270, 271, 0, 272, 273, 274, 275, 276, 277, 595,
	596, 0, 278, 597, 279, 598, 0, 599, 280, 281,
	282, 283, 284, 285, 0, 0, 0, 286, 600, 601,
	602, 0, 287, 288, 603, 0, 0, 0, 289, 290,
	291, 292, 293, 294, 295, 0, 0, 297, 298, 299,
	296, 300, 0, 301, 0, 302, 303, 304, 305, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 0, 0,
	0, 0, 0, 0, 0, 313, 314, 315, 316, 0,
	317, 604, 605, 0, 321, 318, 319, 0, 322, 320,
	0, 323, 324, 325, 0, 0, 326, 327, 328, 0,
	329, 330, 0, 331, 332, 333, 0, 334, 335, 606,
	336, 337, 338, 340, 342, 339, 343, 344, 345, 346,
	607, 608, 347, 0, 258, 0, 0, 0, 0, 0,
	348, 349, 350, 609, 0, 0, 0, 351, 0, 352,
	0, 0, 0, 353, 354, 610, 611, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 363, 612, 0, 613,
	364, 0, 365, 366, 367, 368, 369, 614, 615, 616,
	445, 0, 370, 371, 0, 372, 373, 374, 375, 0,
	0, 0, 259, 376, 377, 378, 380, 0, 0, 379,
	617, 618, 0, 619, 0, 381, 382, 0, 620, 0,
	383, 384, 385, 0, 386, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 0, 393, 395, 394, 0, 396,
	621, 0, 397, 398, 0, 0, 399, 0, 0, 0,
	400, 401, 0, 0, 402, 403, 404, 405, 0, 406,
	407, 409, 412, 408, 410, 411, 413, 426, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	428, 0, 427, 0, 429, 430, 431, 436, 438, 439,
	434, 435, 437, 440, 441, 433, 3262, 432, 0, 260,
	0, 442, 443, 0, 622, 444, 623, 446, 447, 0,
	0, 448, 0, 0, 0, 450, 451, 452, 0, 0,
	453, 454, 624, 0, 455, 0, 625, 456, 457, 449,
	458, 459, 460, 461, 462, 463, 464, 465, 0, 466,
	467, 626, 468, 469, 470, 627, 471, 472, 473, 628,
	474, 629, 475, 476, 0, 477, 478, 0, 479, 480,
	481, 482, 483, 484, 485, 630, 486, 488, 487, 489,
	0, 490, 0, 491, 492, 0, 0, 0, 0, 493,
	0, 495, 496, 497, 494, 498, 499, 500, 501, 0,
	502, 503, 504, 0, 505, 506, 507, 508, 631, 509,
	0, 510, 511, 517, 518, 512, 513, 519, 520, 521,
	522, 523, 0, 525, 526, 524, 527, 528, 529, 0,
	530, 531, 514, 515, 532, 533, 0, 534, 535, 536,
	537, 538, 539, 632, 0, 540, 0, 541, 542, 543,
	544, 516, 545, 550, 633, 546, 547, 548, 549, 634,
	552, 0, 553, 554, 0, 551, 0, 555, 556, 557,
	558, 559, 560, 561, 341, 562, 0, 563, 635, 636,
	637, 638, 0, 572, 0, 564, 565, 566, 639, 567,
	640, 0, 568, 569, 570, 571, 0, 573, 574, 0,
	0, 575, 576, 577, 579, 580, 578, 581, 0, 582,
	0, 0, 583, 584, 585, 641, 642, 643, 0, 587,
	586, 588, 644, 2812, 0, 255, 0, 589, 590, 645,
	591, 592, 593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 263, 262, 264, 265, 266, 267, 0,
	268, 269, 0, 0, 0, 0, 0, 594, 0, 0,
	0, 0, 270, 271, 0, 272, 273, 274, 275, 276,
	277, 595, 596, 0, 278, 597, 279, 598, 0, 599,
	280, 281, 282, 283, 284, 285, 0, 0, 0, 286,
	600, 601, 602, 0, 287, 288, 603, 0, 0, 0,
	289, 290, 291, 292, 293, 294, 295, 0, 0, 297,
	298, 299, 296, 300, 0, 301, 0, 302, 303, 304,
	305, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	0, 0, 0, 0, 0, 0, 0, 313, 314, 315,
	316, 0, 317, 604, 605, 0, 321, 318, 319, 0,
	322, 320, 0, 323, 324, 325, 0, 0, 326, 327,
	328, 0, 329, 330, 0, 331, 332, 333, 0, 334,
	335, 606, 336, 337, 338, 340, 342, 339, 343, 344,
	345, 346, 607, 608, 347, 0, 258, 0, 0, 0,
	0, 0, 348, 349, 350, 609, 0, 0, 0, 351,
	0, 352, 0, 0, 0, 353, 354, 610, 611, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 363, 612,
	0, 613, 364, 0, 365, 366, 367, 368, 369, 2811,
	615, 616, 445, 0, 370, 371, 0, 372, 373, 374,
	375, 0, 0, 0, 259, 376, 377, 378, 380, 0,
	0, 379, 617, 618, 0, 619, 0, 381, 382, 0,
	620, 0, 383, 384, 385, 0, 386, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 0, 393, 395, 394,
	0, 396, 621, 0, 397, 398, 0, 0, 399, 0,
	0, 0, 400, 401, 0, 0, 402, 403, 404, 405,
	0, 406, 407, 409, 412, 408, 410, 411, 413, 426,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 428, 0, 427, 0, 429, 430, 431, 436,
	438, 439, 434, 435, 437, 440, 441, 433, 0, 432,
	0, 260, 0, 442, 443, 0, 622, 444, 623, 446,
	447, 0, 0, 448, 0, 0, 0, 450, 451, 452,
	0, 0, 453, 454, 624, 0, 455, 0, 625, 456,
	457, 449, 458, 459, 460, 461, 462, 463, 464, 465,
	0, 466, 467, 626, 468, 469, 470, 627, 471, 472,
	473, 628, 474, 629, 475, 476, 0, 477, 478, 0,
	479, 480, 481, 482, 483, 484, 485, 630, 486, 488,
	487, 489, 0, 490, 0, 491, 492, 0, 0, 0,
	0, 493, 0, 495, 496, 497, 494, 498, 499, 500,
	501, 0, 502, 503, 504, 0, 505, 506, 507, 508,
	631, 509, 0, 510, 511, 517, 518, 512, 513, 519,
	520, 521, 522, 523, 0, 525, 526, 524, 527, 528,
	529, 0, 530, 531, 514, 515, 532, 533, 0, 534,
	535, 536, 537, 538, 539, 632, 0, 540, 0, 541,
	542, 543, 544, 516, 545, 550, 633, 546, 547, 548,
	549, 634, 552, 0, 553, 554, 0, 551, 0, 555,
	556, 557, 558, 559, 560, 561, 341, 562, 0, 563,
	635, 636, 637, 638, 0, 572, 0, 564, 565, 566,
	639, 567, 640, 0, 568, 569, 570, 571, 0, 573,
	574, 0, 0, 575, 576, 577, 579, 580, 578, 581,
	0, 582, 0, 0, 583, 584, 585, 641, 642, 643,
	0, 587, 586, 588, 644, 2195, 0, 255, 0, 589,
	590, 645, 591, 592, 593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 594,
	0, 0, 0, 0, 270, 271, 0, 272, 273, 274,
	275, 276, 277, 595, 596, 0, 278, 597, 279, 598,
	0, 599, 280, 281, 282, 283, 284, 285, 0, 0,
	0, 286, 600, 601, 602, 0, 287, 288, 603, 0,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 0, 0, 0, 0, 0, 0, 0, 313,
	314, 315, 316, 0, 317, 604, 605, 0, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 327, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 606, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 607, 608, 347, 0, 258, 0,
	0, 0, 0, 0, 348, 349, 350, 609, 0, 0,
	0, 351, 0, 352, 0, 0, 0, 353, 354, 610,
	611, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 612, 0, 613, 364, 0, 365, 366, 367, 368,
	369, 614, 615, 616, 445, 0, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 259, 376, 377, 378,
	380, 0, 0, 379, 617, 618, 0, 619, 0, 381,
	382, 0, 620, 0, 383, 384, 385, 0, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 621, 0, 397, 398, 0, 0,
	399, 0, 0, 0, 400, 401, 0, 0, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 0, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	0, 432, 0, 260, 0, 442, 443, 0, 622, 444,
	623, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 0, 455, 0,
	625, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 628, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 630,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 0, 505, 506,
	507, 508, 631, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 0, 530, 531, 514, 515, 532, 533,
	0, 534, 535, 536, 537, 538, 539, 632, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 633, 546,
	547, 548, 549, 634, 552, 0, 553, 554, 0, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 635, 636, 637, 638, 0, 572, 0, 564,
	565, 566, 639, 567, 640, 0, 568, 569, 570, 571,
	0, 573, 574, 0, 0, 575, 576, 577, 579, 580,
	578, 581, 0, 582, 0, 0, 583, 584, 585, 641,
	642, 643, 255, 587, 586, 588, 644, 0, 0, 0,
	0, 589, 590, 645, 591, 592, 593, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 0,
	0, 0, 0, 0, 594, 0, 0, 0, 0, 270,
	271, 0, 272, 273, 274, 275, 276, 277, 595, 596,
	0, 278, 597, 279, 598, 0, 599, 280, 281, 282,
	283, 284, 285, 0, 0, 0, 286, 600, 601, 602,
	0, 287, 288, 603, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 0, 0, 0,
	0, 0, 0, 0, 313, 314, 315, 316, 0, 317,
	604, 605, 0, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 327, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 606, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 607,
	608, 347, 0, 258, 0, 0, 0, 0, 0, 348,
	349, 350, 609, 0, 0, 0, 351, 0, 352, 0,
	0, 0, 353, 354, 610, 611, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 612, 0, 613, 364,
	0, 365, 366, 367, 368, 369, 614, 615, 616, 445,
	0, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 259, 376, 377, 378, 380, 0, 0, 379, 617,
	618, 0, 619, 0, 381, 382, 0, 620, 0, 383,
	384, 385, 0, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 621,
	0, 397, 398, 0, 0, 399, 0, 0, 0, 400,
	401, 0, 0, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 0, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 0, 432, 0, 260, 0,
	442, 443, 0, 622, 444, 623, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 0, 455, 0, 625, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 628, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 630, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 0, 505, 506, 507, 508, 631, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 0, 530,
	531, 514, 515, 532, 533, 0, 534, 535, 536, 537,
	538, 539, 632, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 633, 546, 547, 548, 549, 634, 552,
	0, 553, 554, 0, 551, 2140, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 635, 636, 637,
	638, 0, 572, 0, 564, 565, 566, 639, 567, 640,
	0, 568, 569, 570, 571, 0, 573, 574, 0, 0,
	575, 576, 577, 579, 580, 578, 581, 0, 582, 0,
	0, 583, 584, 585, 641, 642, 643, 0, 587, 586,
	588, 644, 2146, 0, 255, 0, 589, 590, 645, 591,
	592, 593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 263, 262, 264, 265, 266, 267, 0, 268,
	269, 0, 0, 0, 0, 0, 594, 0, 0, 0,
	0, 270, 271, 0, 272, 273, 274, 275, 276, 277,
	595, 596, 0, 278, 597, 279, 598, 0, 599, 280,
	281, 282, 283, 284, 285, 0, 0, 0, 286, 600,
	601, 602, 0, 287, 288, 603, 0, 0, 0, 289,
	290, 291, 292, 293, 294, 295, 0, 0, 297, 298,
	299, 296, 300, 0, 301, 0, 302, 303, 304, 305,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 0,
	0, 0, 0, 0, 0, 0, 313, 314, 315, 316,
	0, 317, 604, 605, 0, 321, 318, 319, 0, 322,
	320, 0, 323, 324, 325, 0, 0, 326, 327, 328,
	0, 329, 330, 0, 331, 332, 333, 0, 334, 335,
	606, 336, 337, 338, 340, 342, 339, 343, 344, 345,
	346, 607, 608, 347, 0, 258, 0, 0, 0, 0,
	0, 348, 349, 350, 609, 0, 0, 0, 351, 0,
	352, 0, 0, 0, 353, 354, 610, 611, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 363, 612, 0,
	613, 364, 0, 365, 366, 367, 368, 369, 2145, 615,
	616, 445, 0, 370, 371, 0, 372, 373, 374, 375,
	0, 0, 0, 259, 376, 377, 378, 380, 0, 0,
	379, 617, 618, 0, 619, 0, 381, 382, 0, 620,
	0, 383, 384, 385, 0, 386, 0, 0, 0, 387,
	388, 389, 390, 391, 392, 0, 393, 395, 394, 0,
	396, 621, 0, 397, 398, 0, 0, 399, 0, 0,
	0, 400, 401, 0, 0, 402, 403, 404, 405, 0,
	406, 407, 409, 412, 408, 410, 411, 413, 426, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 428, 0, 427, 0, 429, 430, 431, 436, 438,
	439, 434, 435, 437, 440, 441, 433, 0, 432, 0,
	260, 0, 442, 443, 0, 622, 444, 623, 446, 447,
	0, 0, 448, 0, 0, 0, 450, 451, 452, 0,
	0, 453, 454, 624, 0, 455, 0, 625, 456, 457,
	449, 458, 459, 460, 461, 462, 463, 464, 465, 0,
	466, 467, 626, 468, 469, 470, 627, 471, 472, 473,
	628, 474, 629, 475, 476, 0, 477, 478, 0, 479,
	480, 481, 482, 483, 484, 485, 630, 486, 488, 487,
	489, 0, 490, 0, 491, 492, 0, 0, 0, 0,
	493, 0, 495, 496, 497, 494, 498, 499, 500, 501,
	0, 502, 503, 504, 0, 505, 506, 507, 508, 631,
	509, 0, 510, 511, 517, 518, 512, 513, 519, 520,
	521, 522, 523, 0, 525, 526, 524, 527, 528, 529,
	0, 530, 531, 514, 515, 532, 533, 0, 534, 535,
	536, 537, 538, 539, 632, 0, 540, 0, 541, 542,
	543, 544, 516, 545, 550, 633, 546, 547, 548, 549,
	634, 552, 0, 553, 554, 0, 551, 0, 555, 556,
	557, 558, 559, 560, 561, 341, 562, 0, 563, 635,
	636, 637, 638, 0, 572, 0, 564, 565, 566, 639,
	567, 640, 0, 568, 569, 570, 571, 0, 573, 574,
	0, 0, 575, 576, 577, 579, 580, 578, 581, 0,
	582, 0, 0, 583, 584, 585, 641, 642, 643, 0,
	587, 586, 588, 644, 2133, 0, 255, 0, 589, 590,
	645, 591, 592, 593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 263, 262, 264, 265, 266, 267,
	0, 268, 269, 0, 0, 0, 0, 0, 594, 0,
	0, 0, 0, 270, 271, 0, 272, 273, 274, 275,
	276, 277, 595, 596, 0, 278, 597, 279, 598, 0,
	599, 280, 281, 282, 283, 284, 285, 0, 0, 0,
	286, 600, 601, 602, 0, 287, 288, 603, 0, 0,
	0, 289, 290, 291, 292, 293, 294, 295, 0, 0,
	297, 298, 299, 296, 300, 0, 301, 0, 302, 303,
	304, 305, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 0, 0, 0, 0, 0, 0, 0, 313, 314,
	315, 316, 0, 317, 604, 605, 0, 321, 318, 319,
	0, 322, 320, 0, 323, 324, 325, 0, 0, 326,
	327, 328, 0, 329, 330, 0, 331, 332, 333, 0,
	334, 335, 606, 336, 337, 338, 340, 342, 339, 343,
	344, 345, 346, 607, 608, 347, 0, 258, 0, 0,
	0, 0, 0, 348, 349, 350, 609, 0, 0, 0,
	351, 0, 352, 0, 0, 0, 353, 354, 610, 611,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 363,
	612, 0, 613, 364, 0, 365, 366, 367, 368, 369,
	2135, 615, 616, 445, 0, 370, 371, 0, 372, 373,
	374, 375, 0, 0, 0, 259, 376, 377, 378, 380,
	0, 0, 379, 617, 618, 0, 619, 0, 381, 382,
	0, 620, 0, 383, 384, 385, 0, 386, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 0, 393, 395,
	394, 0, 396, 621, 0, 397, 398, 0, 0, 399,
	0, 0, 0, 400, 401, 0, 0, 402, 403, 404,
	405, 0, 406, 407, 409, 412, 408, 410, 411, 413,
	426, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 428, 0, 427, 0, 429, 430, 431,
	436, 438, 439, 434, 435, 437, 440, 441, 433, 0,
	432, 0, 260, 0, 442, 443, 0, 622, 444, 623,
	446, 447, 0, 0, 448, 0, 0, 0, 450, 451,
	452, 0, 0, 453, 454, 624, 0, 455, 0, 625,
	456, 457, 449, 458, 459, 460, 461, 462, 463, 464,
	465, 0, 466, 467, 626, 468, 469, 470, 627, 471,
	472, 473, 628, 474, 629, 475, 476, 0, 477, 478,
	0, 479, 480, 481, 482, 483, 484, 485, 630, 486,
	488, 487, 489, 0, 490, 0, 491, 492, 0, 0,
	0, 0, 493, 0, 495, 496, 497, 494, 498, 499,
	500, 501, 0, 502, 503, 504, 0, 505, 506, 507,
	508, 631, 509, 0, 510, 511, 517, 518, 512, 513,
	519, 520, 521, 522, 523, 0, 525, 526, 524, 527,
	528, 529, 0, 530, 531, 514, 515, 532, 533, 0,
	534, 535, 536, 537, 538, 539, 632, 0, 540, 0,
	541, 542, 543, 544, 516, 545, 550, 633, 546, 547,
	548, 549, 634, 552, 0, 553, 554, 0, 551, 0,
	555, 556, 557, 558, 559, 560, 561, 341, 562, 0,
	563, 635, 636, 637, 638, 0, 572, 0, 564, 565,
	566, 639, 567, 640, 0, 568, 569, 570, 571, 0,
	573, 574, 0, 0, 575, 576, 577, 579, 580, 578,
	581, 0, 582, 0, 0, 583, 584, 585, 641, 642,
	643, 255, 587, 586, 588, 644, 0, 0, 0, 0,
	589, 590, 645, 591, 592, 593, 0, 0, 261, 263,
	262, 264, 265, 266, 267, 0, 268, 269, 0, 0,
	0, 0, 0, 594, 0, 0, 0, 0, 270, 271,
	0, 272, 273, 274, 275, 276, 277, 595, 596, 0,
	278, 597, 279, 598, 0, 599, 280, 281, 282, 283,
	284, 285, 0, 0, 0, 286, 600, 601, 602, 0,
	287, 288, 603, 0, 0, 0, 289, 290, 291, 292,
	293, 294, 295, 0, 0, 297, 298, 299, 296, 300,
	0, 301, 0, 302, 303, 304, 305, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 0, 0, 0, 0,
	0, 0, 0, 313, 314, 315, 316, 0, 317, 604,
	605, 0, 321, 318, 319, 0, 322, 320, 0, 323,
	324, 325, 0, 0, 326, 327, 328, 0, 329, 330,
	0, 331, 332, 333, 0, 334, 335, 606, 336, 337,
	338, 340, 342, 339, 343, 344, 345, 346, 607, 608,
	347, 0, 258, 0, 0, 0, 0, 0, 348, 349,
	350, 609, 0, 0, 0, 351, 0, 352, 0, 0,
	0, 353, 354, 610, 611, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 363, 612, 0, 613, 364, 0,
	365, 366, 367, 368, 369, 2105, 615, 616, 445, 0,
	370, 371, 0, 372, 373, 374, 375, 0, 0, 0,
	259, 376, 377, 378, 380, 0, 0, 379, 617, 618,
	0, 619, 0, 381, 382, 0, 620, 0, 383, 384,
	385, 0, 386, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 0, 393, 395, 394, 0, 396, 621, 0,
	397, 398, 0, 0, 399, 0, 0, 0, 400, 401,
	0, 0, 402, 403, 404, 405, 0, 406, 407, 409,
	412, 408, 410, 411, 413, 426, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 428, 0,
	427, 0, 429, 430, 431, 436, 438, 439, 434, 435,
	437, 440, 441, 433, 0, 432, 0, 260, 0, 442,
	443, 0, 622, 444, 623, 446, 447, 0, 0, 448,
	0, 0, 1180, 450, 451, 452, 0, 0, 453, 454,
	624, 0, 455, 0, 625, 456, 457, 449, 458, 459,
	460, 461, 462, 463, 464, 465, 0, 466, 467, 626,
	468, 469, 470, 627, 471, 472, 473, 628, 474, 629,
	475, 476, 0, 477, 478, 0, 479, 480, 481, 482,
	483, 484, 485, 630, 486, 488, 487, 489, 0, 490,
	0, 491, 492, 0, 0, 0, 0, 493, 0, 495,
	496, 497, 494, 498, 499, 500, 501, 0, 502, 503,
	504, 0, 505, 506, 507, 508, 631, 509, 0, 510,
	511, 517, 518, 512, 513, 519, 520, 521, 522, 523,
	0, 525, 526, 524, 527, 528, 529, 0, 530, 531,
	514, 515, 532, 533, 0, 534, 535, 536, 537, 538,
	539, 632, 0, 540, 0, 541, 542, 543, 544, 516,
	545, 550, 633, 546, 547, 548, 549, 634, 552, 0,
	553, 554, 0, 551, 0, 555, 556, 557, 558, 559,
	560, 561, 341, 562, 0, 563, 635, 636, 637, 638,
	0, 572, 0, 564, 565, 566, 639, 567, 640, 0,
	568, 569, 570, 571, 0, 573, 574, 0, 0, 575,
	576, 577, 579, 580, 578, 581, 0, 582, 0, 0,
	583, 584, 585, 641, 642, 643, 0, 587, 586, 588,
	644, 1511, 0, 255, 0, 589, 590, 645, 591, 592,
	593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 263, 262, 264, 265, 266, 267, 0, 268, 269,
	0, 0, 0, 0, 0, 594, 0, 0, 0, 0,
	270, 271, 0, 272, 273, 274, 275, 276, 277, 595,
	596, 0, 278, 597, 279, 598, 0, 599, 280, 281,
	282, 283, 284, 285, 0, 0, 0, 286, 600, 601,
	602, 0, 287, 288, 603, 0, 0, 0, 289, 290,
	291, 292, 293, 294, 295, 0, 0, 297, 298, 299,
	296, 300, 0, 301, 0, 302, 303, 304, 305, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 0, 0,
	0, 0, 0, 0, 0, 313, 314, 315, 316, 0,
	317, 604, 605, 0, 321, 318, 319, 0, 322, 320,
	0, 323, 324, 325, 0, 0, 326, 327, 328, 0,
	329, 330, 0, 331, 332, 333, 0, 334, 335, 606,
	336, 337, 338, 340, 342, 339, 343, 344, 345, 346,
	607, 608, 347, 0, 258, 0, 0, 0, 0, 0,
	348, 349, 350, 609, 0, 0, 0, 351, 0, 352,
	0, 0, 0, 353, 354, 610, 611, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 363, 612, 0, 613,
	364, 0, 365, 366, 367, 368, 369, 614, 615, 616,
	445, 0, 370, 371, 0, 372, 373, 374, 375, 0,
	0, 0, 259, 376, 377, 378, 380, 0, 0, 379,
	617, 618, 0, 619, 0, 381, 382, 0, 620, 0,
	383, 384, 385, 0, 386, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 0, 393, 395, 394, 0, 396,
	621, 0, 397, 398, 0, 0, 399, 0, 0, 0,
	400, 401, 0, 0, 402, 403, 404, 405, 0, 406,
	407, 409, 412, 408, 410, 411, 413, 426, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	428, 0, 427, 0, 429, 430, 431, 436, 438, 439,
	434, 435, 437, 440, 441, 433, 0, 432, 0, 260,
	0, 442, 443, 0, 622, 444, 623, 446, 447, 0,
	0, 448, 0, 0, 0, 450, 451, 452, 0, 0,
	453, 454, 624, 0, 455, 0, 625, 456, 457, 449,
	458, 459, 460, 461, 462, 463, 464, 465, 0, 466,
	467, 626, 468, 469, 470, 627, 471, 472, 473, 628,
	474, 629, 475, 476, 0, 477, 478, 0, 479, 480,
	481, 482, 483, 484, 485, 630, 486, 488, 487, 489,
	0, 490, 0, 491, 492, 0, 0, 0, 0, 493,
	0, 495, 496, 497, 494, 498, 499, 500, 501, 0,
	502, 503, 504, 0, 505, 506, 507, 508, 631, 509,
	0, 510, 511, 517, 518, 512, 513, 519, 520, 521,
	522, 523, 0, 525, 526, 524, 527, 528, 529, 0,
	530, 531, 514, 515, 532, 533, 0, 534, 535, 536,
	537, 538, 539, 632, 0, 540, 0, 541, 542, 543,
	544, 516, 545, 550, 633, 546, 547, 548, 549, 634,
	552, 0, 553, 554, 0, 551, 0, 555, 556, 557,
	558, 559, 560, 561, 341, 562, 0, 563, 635, 636,
	637, 638, 0, 572, 0, 564, 565, 566, 639, 567,
	640, 0, 568, 569, 570, 571, 0, 573, 574, 0,
	0, 575, 576, 577, 579, 580, 578, 581, 0, 582,
	0, 0, 583, 584, 585, 641, 642, 643, 0, 587,
	586, 588, 644, 1430, 0, 255, 0, 589, 590, 645,
	591, 592, 593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 263, 262, 264, 265, 266, 267, 0,
	268, 269, 0, 0, 0, 0, 0, 594, 0, 0,
	0, 0, 270, 271, 0, 272, 273, 274, 275, 276,
	277, 595, 596, 0, 278, 597, 279, 598, 0, 599,
	280, 281, 282, 283, 284, 285, 0, 0, 0, 286,
	600, 601, 602, 0, 287, 288, 603, 0, 0, 0,
	289, 290, 291, 292, 293, 294, 295, 0, 0, 297,
	298, 299, 296, 300, 0, 301, 0, 302, 303, 304,
	305, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	0, 0, 0, 0, 0, 0, 0, 313, 314, 315,
	316, 0, 317, 604, 605, 0, 321, 318, 319, 0,
	322, 320, 0, 323, 324, 325, 0, 0, 326, 327,
	328, 0, 329, 330, 0, 331, 332, 333, 0, 334,
	335, 606, 336, 337, 338, 340, 342, 339, 343, 344,
	345, 346, 607, 608, 347, 0, 258, 0, 0, 0,
	0, 0, 348, 349, 350, 609, 0, 0, 0, 351,
	0, 352, 0, 0, 0, 353, 354, 610, 611, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 363, 612,
	0, 613, 364, 0, 365, 366, 367, 368, 369, 614,
	615, 616, 445, 0, 370, 371, 0, 372, 373, 374,
	375, 0, 0, 0, 259, 376, 377, 378, 380, 0,
	0, 379, 617, 618, 0, 619, 0, 381, 382, 0,
	620, 0, 383, 384, 385, 0, 386, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 0, 393, 395, 394,
	0, 396, 621, 0, 397, 398, 0, 0, 399, 0,
	0, 0, 400, 401, 0, 0, 402, 403, 404, 405,
	0, 406, 407, 409, 412, 408, 410, 411, 413, 426,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 428, 0, 427, 0, 429, 430, 431, 436,
	438, 439, 434, 435, 437, 440, 441, 433, 0, 432,
	0, 260, 0, 442, 443, 0, 622, 444, 623, 446,
	447, 0, 0, 448, 0, 0, 0, 450, 451, 452,
	0, 0, 453, 454, 624, 0, 455, 0, 625, 456,
	457, 449, 458, 459, 460, 461, 462, 463, 464, 465,
	0, 466, 467, 626, 468, 469, 470, 627, 471, 472,
	473, 628, 474, 629, 475, 476, 0, 477, 478, 0,
	479, 480, 481, 482, 483, 484, 485, 630, 486, 488,
	487, 489, 0, 490, 0, 491, 492, 0, 0, 0,
	0, 493, 0, 495, 496, 497, 494, 498, 499, 500,
	501, 0, 502, 503, 504, 0, 505, 506, 507, 508,
	631, 509, 0, 510, 511, 517, 518, 512, 513, 519,
	520, 521, 522, 523, 0, 525, 526, 524, 527, 528,
	529, 0, 530, 531, 514, 515, 532, 533, 0, 534,
	535, 536, 537, 538, 539, 632, 0, 540, 0, 541,
	542, 543, 544, 516, 545, 550, 633, 546, 547, 548,
	549, 634, 552, 0, 553, 554, 0, 551, 0, 555,
	556, 557, 558, 559, 560, 561, 341, 562, 0, 563,
	635, 636, 637, 638, 0, 572, 0, 564, 565, 566,
	639, 567, 640, 0, 568, 569, 570, 571, 0, 573,
	574, 0, 0, 575, 576, 577, 579, 580, 578, 581,
	0, 582, 0, 0, 583, 584, 585, 641, 642, 643,
	0, 587, 586, 588, 644, 1423, 0, 255, 0, 589,
	590, 645, 591, 592, 593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 594,
	0, 0, 0, 0, 270, 271, 0, 272, 273, 274,
	275, 276, 277, 595, 596, 0, 278, 597, 279, 598,
	0, 599, 280, 281, 282, 283, 284, 285, 0, 0,
	0, 286, 600, 601, 602, 0, 287, 288, 603, 0,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 0, 0, 0, 0, 0, 0, 0, 313,
	314, 315, 316, 0, 317, 604, 605, 0, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 327, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 606, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 607, 608, 347, 0, 258, 0,
	0, 0, 0, 0, 348, 349, 350, 609, 0, 0,
	0, 351, 0, 352, 0, 0, 0, 353, 354, 610,
	611, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 612, 0, 613, 364, 0, 365, 366, 367, 368,
	369, 1425, 615, 616, 445, 0, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 259, 376, 377, 378,
	380, 0, 0, 379, 617, 618, 0, 619, 0, 381,
	382, 0, 620, 0, 383, 384, 385, 0, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 621, 0, 397, 398, 0, 0,
	399, 0, 0, 0, 400, 401, 0, 0, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 0, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	0, 432, 0, 260, 0, 442, 443, 0, 622, 444,
	623, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 0, 455, 0,
	625, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 628, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 630,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 0, 505, 506,
	507, 508, 631, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 0, 530, 531, 514, 515, 532, 533,
	0, 534, 535, 536, 537, 538, 539, 632, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 633, 546,
	547, 548, 549, 634, 552, 0, 553, 554, 0, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 635, 636, 637, 638, 0, 572, 0, 564,
	565, 566, 639, 567, 640, 0, 568, 569, 570, 571,
	0, 573, 574, 0, 0, 575, 576, 577, 579, 580,
	578, 581, 0, 582, 0, 0, 583, 584, 585, 641,
	642, 643, 0, 587, 586, 588, 644, 1252, 0, 255,
	0, 589, 590, 645, 591, 592, 593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 263, 262, 264,
	265, 266, 267, 0, 268, 269, 0, 0, 0, 0,
	0, 594, 0, 0, 0, 0, 270, 271, 0, 272,
	273, 274, 275, 276, 277, 595, 596, 0, 278, 597,
	279, 598, 0, 599, 280, 281, 282, 283, 284, 285,
	0, 0, 0, 286, 600, 601, 602, 0, 287, 288,
	603, 0, 0, 0, 289, 290, 291, 292, 293, 294,
	295, 0, 0, 297, 298, 299, 296, 300, 0, 301,
	0, 302, 303, 304, 305, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 0, 0, 0, 0, 0, 0,
	0, 313, 314, 315, 316, 0, 317, 604, 605, 0,
	321, 318, 319, 0, 322, 320, 0, 323, 324, 325,
	0, 0, 326, 327, 328, 0, 329, 330, 0, 331,
	332, 333, 0, 334, 335, 606, 336, 337, 338, 340,
	342, 339, 343, 344, 345, 346, 607, 608, 347, 0,
	258, 0, 0, 0, 0, 0, 348, 349, 350, 609,
	0, 0, 0, 351, 0, 352, 0, 0, 0, 353,
	354, 610, 611, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 363, 612, 0, 613, 364, 0, 365, 366,
	367, 368, 369, 1251, 615, 616, 445, 0, 370, 371,
	0, 372, 373, 374, 375, 0, 0, 0, 259, 376,
	377, 378, 380, 0, 0, 379, 617, 618, 0, 619,
	0, 381, 382, 0, 620, 0, 383, 384, 385, 0,
	386, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	0, 393, 395, 394, 0, 396, 621, 0, 397, 398,
	0, 0, 399, 0, 0, 0, 400, 401, 0, 0,
	402, 403, 404, 405, 0, 406, 407, 409, 412, 408,
	410, 411, 413, 426, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 428, 0, 427, 0,
	429, 430, 431, 436, 438, 439, 434, 435, 437, 440,
	441, 433, 0, 432, 0, 260, 0, 442, 443, 0,
	622, 444, 623, 446, 447, 0, 0, 448, 0, 0,
	0, 450, 451, 452, 0, 0, 453, 454, 624, 0,
	455, 0, 625, 456, 457, 449, 458, 459, 460, 461,
	462, 463, 464, 465, 0, 466, 467, 626, 468, 469,
	470, 627, 471, 472, 473, 628, 474, 629, 475, 476,
	0, 477, 478, 0, 479, 480, 481, 482, 483, 484,
	485, 630, 486, 488, 487, 489, 0, 490, 0, 491,
	492, 0, 0, 0, 0, 493, 0, 495, 496, 497,
	494, 498, 499, 500, 501, 0, 502, 503, 504, 0,
	505, 506, 507, 508, 631, 509, 0, 510, 511, 517,
	518, 512, 513, 519, 520, 521, 522, 523, 0, 525,
	526, 524, 527, 528, 529, 0, 530, 531, 514, 515,
	532, 533, 0, 534, 535, 536, 537, 538, 539, 632,
	0, 540, 0, 541, 542, 543, 544, 516, 545, 550,
	633, 546, 547, 548, 549, 634, 552, 0, 553, 554,
	0, 551, 0, 555, 556, 557, 558, 559, 560, 561,
	341, 562, 0, 563, 635, 636, 637, 638, 0, 572,
	0, 564, 565, 566, 639, 567, 640, 0, 568, 569,
	570, 571, 0, 573, 574, 0, 0, 575, 576, 577,
	579, 580, 578, 581, 0, 582, 0, 0, 583, 584,
	585, 641, 642, 643, 0, 587, 586, 588, 644, 1242,
	0, 255, 0, 589, 590, 645, 591, 592, 593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 263,
	262, 264, 265, 266, 267, 0, 268, 269, 0, 0,
	0, 0, 0, 594, 0, 0, 0, 0, 270, 271,
	0, 272, 273, 274, 275, 276, 277, 595, 596, 0,
	278, 597, 279, 598, 0, 599, 280, 281, 282, 283,
	284, 285, 0, 0, 0, 286, 600, 601, 602, 0,
	287, 288, 603, 0, 0, 0, 289, 290, 291, 292,
	293, 294, 295, 0, 0, 297, 298, 299, 296, 300,
	0, 301, 0, 302, 303, 304, 305, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 0, 0, 0, 0,
	0, 0, 0, 313, 314, 315, 316, 0, 317, 604,
	605, 0, 321, 318, 319, 0, 322, 320, 0, 323,
	324, 325, 0, 0, 326, 327, 328, 0, 329, 330,
	0, 331, 332, 333, 0, 334, 335, 606, 336, 337,
	338, 340, 342, 339, 343, 344, 345, 346, 607, 608,
	347, 0, 258, 0, 0, 0, 0, 0, 348, 349,
	350, 609, 0, 0, 0, 351, 0, 352, 0, 0,
	0, 353, 354, 610, 611, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 363, 612, 0, 613, 364, 0,
	365, 366, 367, 368, 369, 1241, 615, 616, 445, 0,
	370, 371, 0, 372, 373, 374, 375, 0, 0, 0,
	259, 376, 377, 378, 380, 0, 0, 379, 617, 618,
	0, 619, 0, 381, 382, 0, 620, 0, 383, 384,
	385, 0, 386, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 0, 393, 395, 394, 0, 396, 621, 0,
	397, 398, 0, 0, 399, 0, 0, 0, 400, 401,
	0, 0, 402, 403, 404, 405, 0, 406, 407, 409,
	412, 408, 410, 411, 413, 426, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 428, 0,
	427, 0, 429, 430, 431, 436, 438, 439, 434, 435,
	437, 440, 441, 433, 0, 432, 0, 260, 0, 442,
	443, 0, 622, 444, 623, 446, 447, 0, 0, 448,
	0, 0, 0, 450, 451, 452, 0, 0, 453, 454,
	624, 0, 455, 0, 625, 456, 457, 449, 458, 459,
	460, 461, 462, 463, 464, 465, 0, 466, 467, 626,
	468, 469, 470, 627, 471, 472, 473, 628, 474, 629,
	475, 476, 0, 477, 478, 0, 479, 480, 481, 482,
	483, 484, 485, 630, 486, 488, 487, 489, 0, 490,
	0, 491, 492, 0, 0, 0, 0, 493, 0, 495,
	496, 497, 494, 498, 499, 500, 501, 0, 502, 503,
	504, 0, 505, 506, 507, 508, 631, 509, 0, 510,
	511, 517, 518, 512, 513, 519, 520, 521, 522, 523,
	0, 525, 526, 524, 527, 528, 529, 0, 530, 531,
	514, 515, 532, 533, 0, 534, 535, 536, 537, 538,
	539, 632, 0, 540, 0, 541, 542, 543, 544, 516,
	545, 550, 633, 546, 547, 548, 549, 634, 552, 0,
	553, 554, 0, 551, 0, 555, 556, 557, 558, 559,
	560, 561, 341, 562, 0, 563, 635, 636, 637, 638,
	0, 572, 0, 564, 565, 566, 639, 567, 640, 0,
	568, 569, 570, 571, 0, 573, 574, 0, 0, 575,
	576, 577, 579, 580, 578, 581, 0, 582, 0, 0,
	583, 584, 585, 641, 642, 643, 0, 587, 586, 588,
	644, 1239, 0, 255, 0, 589, 590, 645, 591, 592,
	593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 263, 262, 264, 265, 266, 267, 0, 268, 269,
	0, 0, 0, 0, 0, 594, 0, 0, 0, 0,
	270, 271, 0, 272, 273, 274, 275, 276, 277, 595,
	596, 0, 278, 597, 279, 598, 0, 599, 280, 281,
	282, 283, 284, 285, 0, 0, 0, 286, 600, 601,
	602, 0, 287, 288, 603, 0, 0, 0, 289, 290,
	291, 292, 293, 294, 295, 0, 0, 297, 298, 299,
	296, 300, 0, 301, 0, 302, 303, 304, 305, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 0, 0,
	0, 0, 0, 0, 0, 313, 314, 315, 316, 0,
	317, 604, 605, 0, 321, 318, 319, 0, 322, 320,
	0, 323, 324, 325, 0, 0, 326, 327, 328, 0,
	329, 330, 0, 331, 332, 333, 0, 334, 335, 606,
	336, 337, 338, 340, 342, 339, 343, 344, 345, 346,
	607, 608, 347, 0, 258, 0, 0, 0, 0, 0,
	348, 349, 350, 609, 0, 0, 0, 351, 0, 352,
	0, 0, 0, 353, 354, 610, 611, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 363, 612, 0, 613,
	364, 0, 365, 366, 367, 368, 369, 1238, 615, 616,
	445, 0, 370, 371, 0, 372, 373, 374, 375, 0,
	0, 0, 259, 376, 377, 378, 380, 0, 0, 379,
	617, 618, 0, 619, 0, 381, 382, 0, 620, 0,
	383, 384, 385, 0, 386, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 0, 393, 395, 394, 0, 396,
	621, 0, 397, 398, 0, 0, 399, 0, 0, 0,
	400, 401, 0, 0, 402, 403, 404, 405, 0, 406,
	407, 409, 412, 408, 410, 411, 413, 426, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	428, 0, 427, 0, 429, 430, 431, 436, 438, 439,
	434, 435, 437, 440, 441, 433, 0, 432, 0, 260,
	0, 442, 443, 0, 622, 444, 623, 446, 447, 0,
	0, 448, 0, 0, 0, 450, 451, 452, 0, 0,
	453, 454, 624, 0, 455, 0, 625, 456, 457, 449,
	458, 459, 460, 461, 462, 463, 464, 465, 0, 466,
	467, 626, 468, 469, 470, 627, 471, 472, 473, 628,
	474, 629, 475, 476, 0, 477, 478, 0, 479, 480,
	481, 482, 483, 484, 485, 630, 486, 488, 487, 489,
	0, 490, 0, 491, 492, 0, 0, 0, 0, 493,
	0, 495, 496, 497, 494, 498, 499, 500, 501, 0,
	502, 503, 504, 0, 505, 506, 507, 508, 631, 509,
	0, 510, 511, 517, 518, 512, 513, 519, 520, 521,
	522, 523, 0, 525, 526, 524, 527, 528, 529, 0,
	530, 531, 514, 515, 532, 533, 0, 534, 535, 536,
	537, 538, 539, 632, 0, 540, 0, 541, 542, 543,
	544, 516, 545, 550, 633, 546, 547, 548, 549, 634,
	552, 0, 553, 554, 0, 551, 0, 555, 556, 557,
	558, 559, 560, 561, 341, 562, 0, 563, 635, 636,
	637, 638, 0, 572, 0, 564, 565, 566, 639, 567,
	640, 0, 568, 569, 570, 571, 0, 573, 574, 0,
	0, 575, 576, 577, 579, 580, 578, 581, 0, 582,
	0, 0, 583, 584, 585, 641, 642, 643, 0, 587,
	586, 588, 644, 1234, 0, 255, 0, 589, 590, 645,
	591, 592, 593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 263, 262, 264, 265, 266, 267, 0,
	268, 269, 0, 0, 0, 0, 0, 594, 0, 0,
	0, 0, 270, 271, 0, 272, 273, 274, 275, 276,
	277, 595, 596, 0, 278, 597, 279, 598, 0, 599,
	280, 281, 282, 283, 284, 285, 0, 0, 0, 286,
	600, 601, 602, 0, 287, 288, 603, 0, 0, 0,
	289, 290, 291, 292, 293, 294, 295, 0, 0, 297,
	298, 299, 296, 300, 0, 301, 0, 302, 303, 304,
	305, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	0, 0, 0, 0, 0, 0, 0, 313, 314, 315,
	316, 0, 317, 604, 605, 0, 321, 318, 319, 0,
	322, 320, 0, 323, 324, 325, 0, 0, 326, 327,
	328, 0, 329, 330, 0, 331, 332, 333, 0, 334,
	335, 606, 336, 337, 338, 340, 342, 339, 343, 344,
	345, 346, 607, 608, 347, 0, 258, 0, 0, 0,
	0, 0, 348, 349, 350, 609, 0, 0, 0, 351,
	0, 352, 0, 0, 0, 353, 354, 610, 611, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 363, 612,
	0, 613, 364, 0, 365, 366, 367, 368, 369, 1233,
	615, 616, 445, 0, 370, 371, 0, 372, 373, 374,
	375, 0, 0, 0, 259, 376, 377, 378, 380, 0,
	0, 379, 617, 618, 0, 619, 0, 381, 382, 0,
	620, 0, 383, 384, 385, 0, 386, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 0, 393, 395, 394,
	0, 396, 621, 0, 397, 398, 0, 0, 399, 0,
	0, 0, 400, 401, 0, 0, 402, 403, 404, 405,
	0, 406, 407, 409, 412, 408, 410, 411, 413, 426,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 428, 0, 427, 0, 429, 430, 431, 436,
	438, 439, 434, 435, 437, 440, 441, 433, 0, 432,
	0, 260, 0, 442, 443, 0, 622, 444, 623, 446,
	447, 0, 0, 448, 0, 0, 0, 450, 451, 452,
	0, 0, 453, 454, 624, 0, 455, 0, 625, 456,
	457, 449, 458, 459, 460, 461, 462, 463, 464, 465,
	0, 466, 467, 626, 468, 469, 470, 627, 471, 472,
	473, 628, 474, 629, 475, 476, 0, 477, 478, 0,
	479, 480, 481, 482, 483, 484, 485, 630, 486, 488,
	487, 489, 0, 490, 0, 491, 492, 0, 0, 0,
	0, 493, 0, 495, 496, 497, 494, 498, 499, 500,
	501, 0, 502, 503, 504, 0, 505, 506, 507, 508,
	631, 509, 0, 510, 511, 517, 518, 512, 513, 519,
	520, 521, 522, 523, 0, 525, 526, 524, 527, 528,
	529, 0, 530, 531, 514, 515, 532, 533, 0, 534,
	535, 536, 537, 538, 539, 632, 0, 540, 0, 541,
	542, 543, 544, 516, 545, 550, 633, 546, 547, 548,
	549, 634, 552, 0, 553, 554, 0, 551, 0, 555,
	556, 557, 558, 559, 560, 561, 341, 562, 0, 563,
	635, 636, 637, 638, 0, 572, 0, 564, 565, 566,
	639, 567, 640, 0, 568, 569, 570, 571, 0, 573,
	574, 0, 0, 575, 576, 577, 579, 580, 578, 581,
	0, 582, 0, 0, 583, 584, 585, 641, 642, 643,
	0, 587, 586, 588, 644, 647, 0, 255, 0, 589,
	590, 645, 591, 592, 593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 594,
	0, 0, 0, 0, 270, 271, 0, 272, 273, 274,
	275, 276, 277, 595, 596, 0, 278, 597, 279, 598,
	0, 599, 280, 281, 282, 283, 284, 285, 0, 0,
	0, 286, 600, 601, 602, 0, 287, 288, 603, 0,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 0, 0, 0, 0, 0, 0, 0, 313,
	314, 315, 316, 0, 317, 604, 605, 0, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 327, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 606, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 607, 608, 347, 0, 258, 0,
	0, 0, 0, 0, 348, 349, 350, 609, 0, 0,
	0, 351, 0, 352, 0, 0, 0, 353, 354, 610,
	611, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 612, 0, 613, 364, 0, 365, 366, 367, 368,
	369, 614, 615, 616, 445, 0, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 259, 376, 377, 378,
	380, 0, 0, 379, 617, 618, 0, 619, 0, 381,
	382, 0, 620, 0, 383, 384, 385, 0, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 621, 0, 397, 398, 0, 0,
	399, 0, 0, 0, 400, 401, 0, 0, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 0, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	0, 432, 0, 260, 0, 442, 443, 0, 622, 444,
	623, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 0, 455, 0,
	625, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 628, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 630,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 0, 505, 506,
	507, 508, 631, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 0, 530, 531, 514, 515, 532, 533,
	0, 534, 535, 536, 537, 538, 539, 632, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 633, 546,
	547, 548, 549, 634, 552, 0, 553, 554, 0, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 635, 636, 637, 638, 0, 572, 0, 564,
	565, 566, 639, 567, 640, 0, 568, 569, 570, 571,
	0, 573, 574, 0, 0, 575, 576, 577, 579, 580,
	578, 581, 0, 582, 0, 0, 583, 584, 585, 641,
	642, 643, 0, 587, 586, 588, 644, 246, 0, 255,
	0, 589, 590, 645, 591, 592, 593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 263, 262, 264,
	265, 266, 267, 0, 268, 269, 0, 0, 0, 0,
	0, 594, 0, 0, 0, 0, 270, 271, 0, 272,
	273, 274, 275, 276, 277, 595, 596, 0, 278, 597,
	279, 598, 0, 599, 280, 281, 282, 283, 284, 285,
	0, 0, 0, 286, 600, 601, 602, 0, 287, 288,
	603, 0, 0, 0, 289, 290, 291, 292, 293, 294,
	295, 0, 0, 297, 298, 299, 296, 300, 0, 301,
	0, 302, 303, 304, 305, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 0, 0, 0, 0, 0, 0,
	0, 313, 314, 315, 316, 0, 317, 604, 605, 0,
	321, 318, 319, 0, 322, 320, 0, 323, 324, 325,
	0, 0, 326, 327, 328, 0, 329, 330, 0, 331,
	332, 333, 0, 334, 335, 606, 336, 337, 338, 340,
	342, 339, 343, 344, 345, 346, 607, 608, 347, 0,
	258, 0, 0, 0, 0, 0, 348, 349, 350, 609,
	0, 0, 0, 351, 0, 352, 0, 0, 0, 353,
	354, 610, 611, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 363, 612, 0, 613, 364, 0, 365, 366,
	367, 368, 369, 614, 615, 616, 445, 0, 370, 371,
	0, 372, 373, 374, 375, 0, 0, 0, 259, 376,
	377, 378, 380, 0, 0, 379, 617, 618, 0, 619,
	0, 381, 382, 0, 620, 0, 383, 384, 385, 0,
	386, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	0, 393, 395, 394, 0, 396, 621, 0, 397, 398,
	0, 0, 399, 0, 0, 0, 400, 401, 0, 0,
	402, 403, 404, 405, 0, 406, 407, 409, 412, 408,
	410, 411, 413, 426, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 428, 0, 427, 0,
	429, 430, 431, 436, 438, 439, 434, 435, 437, 440,
	441, 433, 0, 432, 0, 260, 0, 442, 443, 0,
	622, 444, 623, 446, 447, 0, 0, 448, 0, 0,
	0, 450, 451, 452, 0, 0, 453, 454, 624, 0,
	455, 0, 625, 456, 457, 449, 458, 459, 460, 461,
	462, 463, 464, 465, 0, 466, 467, 626, 468, 469,
	470, 627, 471, 472, 473, 628, 474, 629, 475, 476,
	0, 477, 478, 0, 479, 480, 481, 482, 483, 484,
	485, 630, 486, 488, 487, 489, 0, 490, 0, 491,
	492, 0, 0, 0, 0, 493, 0, 495, 496, 497,
	494, 498, 499, 500, 501, 0, 502, 503, 504, 0,
	505, 506, 507, 508, 631, 509, 0, 510, 511, 517,
	518, 512, 513, 519, 520, 521, 522, 523, 0, 525,
	526, 524, 527, 528, 529, 0, 530, 531, 514, 515,
	532, 533, 0, 534, 535, 536, 537, 538, 539, 632,
	0, 540, 0, 541, 542, 543, 544, 516, 545, 550,
	633, 546, 547, 548, 549, 634, 552, 0, 553, 554,
	0, 551, 0, 555, 556, 557, 558, 559, 560, 561,
	341, 562, 0, 563, 635, 636, 637, 638, 0, 572,
	0, 564, 565, 566, 639, 567, 640, 0, 568, 569,
	570, 571, 0, 573, 574, 0, 0, 575, 576, 577,
	579, 580, 578, 581, 0, 582, 0, 0, 583, 584,
	585, 641, 642, 643, 255, 587, 586, 588, 644, 0,
	0, 0, 0, 589, 590, 645, 591, 592, 593, 0,
	0, 261, 263, 262, 264, 265, 266, 267, 0, 268,
	269, 0, 0, 0, 0, 0, 594, 0, 0, 0,
	0, 270, 271, 0, 272, 273, 274, 275, 276, 277,
	595, 596, 0, 278, 597, 279, 598, 0, 599, 280,
	281, 282, 283, 284, 285, 0, 0, 0, 286, 600,
	601, 602, 0, 287, 288, 603, 0, 0, 0, 289,
	290, 291, 292, 293, 294, 295, 0, 0, 297, 298,
	299, 296, 300, 0, 301, 0, 302, 303, 304, 305,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 0,
	0, 0, 0, 0, 0, 0, 313, 314, 315, 316,
	0, 317, 604, 605, 0, 321, 318, 319, 0, 322,
	320, 0, 323, 324, 325, 0, 0, 326, 327, 328,
	0, 329, 330, 0, 331, 332, 333, 0, 334, 335,
	606, 336, 337, 338, 340, 342, 339, 343, 344, 345,
	346, 607, 608, 347, 0, 258, 0, 0, 0, 0,
	0, 348, 349, 350, 609, 0, 0, 0, 351, 0,
	352, 0, 0, 0, 353, 354, 610, 611, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 363, 612, 0,
	613, 364, 0, 365, 366, 367, 368, 369, 614, 615,
	616, 445, 0, 370, 371, 0, 372, 373, 374, 375,
	0, 0, 0, 259, 376, 377, 378, 380, 0, 0,
	379, 617, 618, 0, 619, 0, 381, 382, 0, 620,
	0, 383, 384, 385, 0, 386, 0, 0, 0, 387,
	388, 389, 390, 391, 392, 0, 393, 395, 394, 0,
	396, 621, 0, 397, 398, 0, 0, 399, 0, 0,
	0, 400, 401, 0, 0, 402, 403, 404, 405, 0,
	406, 407, 409, 412, 408, 410, 411, 413, 426, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 428, 0, 427, 0, 429, 430, 431, 436, 438,
	439, 434, 435, 437, 440, 441, 433, 0, 432, 0,
	260, 0, 442, 443, 0, 622, 444, 623, 446, 447,
	0, 0, 448, 0, 0, 0, 450, 451, 452, 0,
	0, 453, 454, 624, 0, 455, 0, 625, 456, 457,
	449, 458, 459, 460, 461, 462, 463, 464, 465, 0,
	466, 467, 626, 468, 469, 470, 627, 471, 472, 473,
	628, 474, 629, 475, 476, 0, 477, 478, 0, 479,
	480, 481, 482, 483, 484, 485, 630, 486, 488, 487,
	489, 0, 490, 0, 491, 492, 0, 0, 0, 0,
	493, 0, 495, 496, 497, 494, 498, 499, 500, 501,
	0, 502, 503, 504, 0, 505, 506, 507, 508, 631,
	509, 0, 510, 511, 517, 518, 512, 513, 519, 520,
	521, 522, 523, 0, 525, 526, 524, 527, 528, 529,
	0, 530, 531, 514, 515, 532, 533, 0, 534, 535,
	536, 537, 538, 539, 632, 0, 540, 0, 541, 542,
	543, 544, 516, 545, 550, 633, 546, 547, 548, 549,
	634, 552, 0, 553, 554, 0, 551, 0, 555, 556,
	557, 558, 559, 560, 561, 341, 562, 0, 563, 635,
	636, 637, 638, 0, 572, 0, 564, 565, 566, 639,
	567, 640, 0, 568, 569, 570, 571, 0, 573, 574,
	0, 0, 575, 576, 577, 579, 580, 578, 581, 0,
	582, 0, 0, 583, 584, 585, 641, 642, 643, 255,
	587, 586, 588, 644, 0, 0, 0, 0, 589, 590,
	645, 591, 592, 593, 0, 0, 261, 263, 262, 264,
	265, 266, 267, 0, 268, 269, 0, 0, 0, 0,
	0, 594, 0, 0, 0, 0, 270, 271, 0, 272,
	273, 274, 275, 276, 277, 595, 596, 0, 278, 597,
	279, 598, 0, 599, 280, 281, 282, 283, 284, 285,
	0, 0, 0, 286, 600, 601, 602, 0, 287, 288,
	603, 0, 0, 0, 289, 290, 291, 292, 293, 294,
	295, 0, 0, 297, 298, 299, 296, 300, 0, 301,
	0, 302, 303, 304, 305, 306, 307, 669, 308, 309,
	310, 0, 311, 312, 0, 0, 0, 0, 0, 0,
	0, 313, 314, 315, 316, 0, 317, 604, 605, 0,
	321, 318, 319, 0, 322, 320, 0, 323, 324, 325,
	0, 0, 326, 327, 328, 0, 329, 330, 0, 331,
	332, 333, 0, 334, 335, 606, 336, 337, 338, 340,
	342, 339, 343, 344, 345, 346, 607, 608, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 609,
	0, 0, 0, 351, 0, 352, 0, 0, 0, 353,
	354, 610, 611, 355, 356, 357, 358, 359, 360, 361,
	362, 670, 363, 612, 0, 613, 364, 0, 365, 366,
	367, 368, 369, 614, 615, 616, 445, 0, 370, 371,
	0, 372, 373, 374, 375, 0, 0, 0, 0, 376,
	377, 378, 380, 0, 0, 379, 617, 618, 0, 619,
	0, 381, 382, 0, 620, 0, 383, 384, 385, 0,
	386, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	0, 393, 395, 394, 0, 396, 621, 0, 397, 398,
	0, 0, 399, 0, 0, 0, 400, 401, 0, 0,
	402, 403, 404, 405, 0, 406, 407, 409, 412, 408,
	410, 411, 413, 426, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 428, 0, 427, 0,
	429, 430, 431, 436, 438, 439, 434, 435, 437, 440,
	441, 433, 0, 432, 0, 0, 0, 442, 443, 0,
	622, 444, 623, 446, 447, 0, 0, 448, 0, 0,
	0, 450, 451, 452, 0, 0, 453, 454, 624, 0,
	455, 0, 625, 456, 457, 449, 458, 459, 460, 461,
	462, 463, 464, 465, 0, 466, 467, 626, 468, 469,
	470, 627, 471, 472, 473, 628, 474, 629, 475, 476,
	0, 477, 478, 0, 479, 480, 481, 482, 483, 484,
	485, 630, 486, 488, 487, 489, 0, 490, 0, 491,
	492, 0, 0, 0, 0, 493, 0, 495, 496, 497,
	494, 498, 499, 500, 501, 0, 502, 503, 504, 0,
	505, 506, 507, 508, 631, 509, 0, 510, 511, 517,
	518, 512, 513, 519, 520, 521, 522, 523, 671, 525,
	526, 524, 527, 528, 529, 0, 530, 531, 514, 515,
	532, 533, 0, 534, 535, 536, 537, 538, 539, 632,
	0, 540, 0, 541, 542, 543, 544, 516, 545, 550,
	633, 546, 547, 548, 549, 634, 552, 0, 553, 554,
	0, 551, 0, 555, 556, 557, 558, 559, 560, 561,
	341, 562, 0, 563, 635, 636, 637, 638, 0, 572,
	0, 564, 565, 566, 639, 567, 640, 0, 568, 569,
	570, 571, 0, 573, 574, 0, 0, 575, 576, 577,
	579, 580, 578, 581, 0, 582, 0, 0, 583, 584,
	585, 641, 642, 643, 255, 587, 586, 588, 644, 0,
	0, 0, 0, 589, 590, 645, 591, 592, 593, 0,
	0, 261, 263, 262, 264, 265, 266, 267, 0, 268,
	269, 0, 0, 0, 0, 0, 594, 0, 0, 0,
	0, 270, 271, 0, 272, 273, 274, 275, 276, 277,
	595, 596, 0, 278, 597, 279, 598, 0, 599, 280,
	281, 282, 283, 284, 285, 0, 0, 0, 286, 600,
	601, 602, 0, 287, 288, 603, 0, 0, 0, 289,
	290, 291, 292, 293, 294, 295, 0, 0, 297, 298,
	299, 296, 300, 0, 301, 0, 302, 303, 304, 305,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 0,
	0, 0, 0, 0, 0, 0, 313, 314, 2231, 316,
	0, 317, 604, 605, 0, 321, 318, 319, 0, 322,
	320, 0, 323, 324, 325, 0, 0, 326, 327, 328,
	0, 329, 330, 0, 331, 332, 333, 0, 334, 335,
	606, 336, 337, 338, 340, 342, 339, 343, 344, 345,
	346, 607, 608, 347, 0, 258, 0, 0, 0, 0,
	0, 348, 349, 350, 609, 0, 0, 0, 351, 0,
	352, 0, 0, 0, 353, 354, 610, 611, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 363, 612, 0,
	613, 364, 0, 365, 366, 367, 368, 369, 614, 615,
	616, 445, 0, 370, 371, 0, 372, 373, 374, 375,
	0, 0, 0, 259, 376, 377, 378, 380, 0, 0,
	379, 617, 618, 0, 619, 0, 381, 382, 0, 620,
	0, 383, 384, 385, 0, 386, 0, 0, 0, 387,
	388, 389, 390, 391, 392, 0, 393, 395, 394, 0,
	396, 621, 0, 397, 398, 0, 0, 399, 0, 0,
	0, 400, 401, 0, 0, 402, 403, 404, 405, 0,
	406, 407, 409, 412, 408, 410, 411, 413, 426, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 428, 0, 427, 0, 429, 430, 431, 436, 438,
	439, 434, 435, 437, 440, 441, 433, 0, 432, 0,
	260, 0, 442, 443, 0, 622, 444, 623, 446, 447,
	0, 0, 448, 0, 0, 0, 450, 451, 452, 0,
	0, 453, 454, 624, 0, 455, 0, 625, 456, 457,
	449, 458, 459, 460, 461, 462, 463, 464, 465, 0,
	466, 467, 626, 468, 469, 470, 627, 471, 472, 473,
	628, 474, 629, 475, 476, 0, 477, 478, 0, 479,
	480, 481, 482, 483, 484, 485, 630, 486, 488, 487,
	489, 0, 490, 0, 491, 492, 0, 0, 0, 0,
	493, 0, 495, 496, 497, 494, 498, 499, 500, 501,
	0, 502, 503, 504, 0, 505, 506, 507, 508, 631,
	509, 0, 510, 511, 517, 518, 512, 513, 519, 520,
	521, 522, 523, 0, 525, 526, 524, 527, 528, 529,
	0, 530, 531, 514, 515, 532, 533, 0, 534, 535,
	536, 537, 538, 539, 632, 0, 540, 0, 541, 542,
	543, 544, 516, 545, 550, 633, 546, 547, 548, 549,
	634, 552, 0, 553, 554, 0, 551, 0, 555, 556,
	557, 558, 559, 560, 561, 341, 562, 0, 563, 635,
	636, 637, 638, 0, 572, 0, 564, 565, 566, 639,
	567, 640, 0, 568, 569, 570, 571, 0, 573, 574,
	0, 0, 575, 576, 577, 579, 580, 578, 581, 0,
	582, 0, 0, 583, 584, 585, 641, 642, 643, 255,
	587, 586, 588, 644, 0, 0, 0, 0, 589, 590,
	645, 591, 592, 593, 0, 0, 261, 263, 262, 264,
	265, 266, 267, 0, 268, 269, 0, 0, 0, 0,
	0, 594, 0, 0, 0, 0, 270, 271, 0, 272,
	273, 274, 275, 276, 277, 595, 596, 0, 278, 597,
	279, 598, 0, 599, 280, 281, 282, 283, 284, 285,
	0, 0, 0, 286, 600, 601, 602, 0, 287, 288,
	603, 0, 0, 0, 289, 290, 291, 292, 293, 294,
	295, 0, 0, 297, 298, 299, 296, 300, 0, 301,
	0, 302, 303, 304, 305, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 0, 0, 0, 0, 0, 0,
	0, 313, 314, 2229, 316, 0, 317, 604, 605, 0,
	321, 318, 319, 0, 322, 320, 0, 323, 324, 325,
	0, 0, 326, 327, 328, 0, 329, 330, 0, 331,
	332, 333, 0, 334, 335, 606, 336, 337, 338, 340,
	342, 339, 343, 344, 345, 346, 607, 608, 347, 0,
	258, 0, 0, 0, 0, 0, 348, 349, 350, 609,
	0, 0, 0, 351, 0, 352, 0, 0, 0, 353,
	354, 610, 611, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 363, 612, 0, 613, 364, 0, 365, 366,
	367, 368, 369, 614, 615, 616, 445, 0, 370, 371,
	0, 372, 373, 374, 375, 0, 0, 0, 259, 376,
	377, 378, 380, 0, 0, 379, 617, 618, 0, 619,
	0, 381, 382, 0, 620, 0, 383, 384, 385, 0,
	386, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	0, 393, 395, 394, 0, 396, 621, 0, 397, 398,
	0, 0, 399, 0, 0, 0, 400, 401, 0, 0,
	402, 403, 404, 405, 0, 406, 407, 409, 412, 408,
	410, 411, 413, 426, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 428, 0, 427, 0,
	429, 430, 431, 436, 438, 439, 434, 435, 437, 440,
	441, 433, 0, 432, 0, 260, 0, 442, 443, 0,
	622, 444, 623, 446, 447, 0, 0, 448, 0, 0,
	0, 450, 451, 452, 0, 0, 453, 454, 624, 0,
	455, 0, 625, 456, 457, 449, 458, 459, 460, 461,
	462, 463, 464, 465, 0, 466, 467, 626, 468, 469,
	470, 627, 471, 472, 473, 628, 474, 629, 475, 476,
	0, 477, 478, 0, 479, 480, 481, 482, 483, 484,
	485, 630, 486, 488, 487, 489, 0, 490, 0, 491,
	492, 0, 0, 0, 0, 493, 0, 495, 496, 497,
	494, 498, 499, 500, 501, 0, 502, 503, 504, 0,
	505, 506, 507, 508, 631, 509, 0, 510, 511, 517,
	518, 512, 513, 519, 520, 521, 522, 523, 0, 525,
	526, 524, 527, 528, 529, 0, 530, 531, 514, 515,
	532, 533, 0, 534, 535, 536, 537, 538, 539, 632,
	0, 540, 0, 541, 542, 543, 544, 516, 545, 550,
	633, 546, 547, 548, 549, 634, 552, 0, 553, 554,
	0, 551, 0, 555, 556, 557, 558, 559, 560, 561,
	341, 562, 0, 563, 635, 636, 637, 638, 0, 572,
	0, 564, 565, 566, 639, 567, 640, 0, 568, 569,
	570, 571, 0, 573, 574, 0, 0, 575, 576, 577,
	579, 580, 578, 581, 0, 582, 0, 0, 583, 584,
	585, 641, 642, 643, 255, 587, 586, 588, 644, 0,
	0, 0, 0, 589, 590, 645, 591, 592, 593, 0,
	0, 261, 263, 262, 264, 265, 266, 267, 0, 268,
	269, 0, 0, 0, 0, 0, 594, 0, 0, 0,
	0, 270, 271, 0, 272, 273, 274, 275, 276, 277,
	595, 596, 0, 278, 597, 279, 598, 0, 599, 280,
	281, 282, 283, 284, 285, 0, 0, 0, 286, 600,
	601, 602, 0, 287, 288, 603, 0, 0, 0, 289,
	290, 291, 292, 293, 294, 295, 0, 0, 297, 298,
	299, 296, 300, 0, 301, 0, 302, 303, 304, 305,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 0,
	0, 0, 0, 0, 0, 0, 313, 314, 2227, 316,
	0, 317, 604, 605, 0, 321, 318, 319, 0, 322,
	320, 0, 323, 324, 325, 0, 0, 326, 327, 328,
	0, 329, 330, 0, 331, 332, 333, 0, 334, 335,
	606, 336, 337, 338, 340, 342, 339, 343, 344, 345,
	346, 607, 608, 347, 0, 258, 0, 0, 0, 0,
	0, 348, 349, 350, 609, 0, 0, 0, 351, 0,
	352, 0, 0, 0, 353, 354, 610, 611, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 363, 612, 0,
	613, 364, 0, 365, 366, 367, 368, 369, 614, 615,
	616, 445, 0, 370, 371, 0, 372, 373, 374, 375,
	0, 0, 0, 259, 376, 377, 378, 380, 0, 0,
	379, 617, 618, 0, 619, 0, 381, 382, 0, 620,
	0, 383, 384, 385, 0, 386, 0, 0, 0, 387,
	388, 389, 390, 391, 392, 0, 393, 395, 394, 0,
	396, 621, 0, 397, 398, 0, 0, 399, 0, 0,
	0, 400, 401, 0, 0, 402, 403, 404, 405, 0,
	406, 407, 409, 412, 408, 410, 411, 413, 426, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 428, 0, 427, 0, 429, 430, 431, 436, 438,
	439, 434, 435, 437, 440, 441, 433, 0, 432, 0,
	260, 0, 442, 443, 0, 622, 444, 623, 446, 447,
	0, 0, 448, 0, 0, 0, 450, 451, 452, 0,
	0, 453, 454, 624, 0, 455, 0, 625, 456, 457,
	449, 458, 459, 460, 461, 462, 463, 464, 465, 0,
	466, 467, 626, 468, 469, 470, 627, 471, 472, 473,
	628, 474, 629, 475, 476, 0, 477, 478, 0, 479,
	480, 481, 482, 483, 484, 485, 630, 486, 488, 487,
	489, 0, 490, 0, 491, 492, 0, 0, 0, 0,
	493, 0, 495, 496, 497, 494, 498, 499, 500, 501,
	0, 502, 503, 504, 0, 505, 506, 507, 508, 631,
	509, 0, 510, 511, 517, 518, 512, 513, 519, 520,
	521, 522, 523, 0, 525, 526, 524, 527, 528, 529,
	0, 530, 531, 514, 515, 532, 533, 0, 534, 535,
	536, 537, 538, 539, 632, 0, 540, 0, 541, 542,
	543, 544, 516, 545, 550, 633, 546, 547, 548, 549,
	634, 552, 0, 553, 554, 0, 551, 0, 555, 556,
	557, 558, 559, 560, 561, 341, 562, 0, 563, 635,
	636, 637, 638, 0, 572, 0, 564, 565, 566, 639,
	567, 640, 0, 568, 569, 570, 571, 0, 573, 574,
	0, 0, 575, 576, 577, 579, 580, 578, 581, 0,
	582, 0, 0, 583, 584, 585, 641, 642, 643, 255,
	587, 586, 588, 644, 0, 0, 0, 0, 589, 590,
	645, 591, 592, 593, 0, 0, 261, 263, 262, 264,
	265, 266, 267, 0, 268, 269, 0, 0, 0, 0,
	0, 594, 0, 0, 0, 0, 270, 271, 0, 272,
	273, 274, 275, 276, 277, 595, 596, 0, 278, 597,
	279, 598, 0, 599, 280, 281, 282, 283, 284, 285,
	0, 0, 0, 286, 600, 601, 602, 0, 287, 288,
	603, 0, 0, 0, 289, 290, 291, 292, 293, 294,
	295, 0, 0, 297, 298, 299, 296, 300, 0, 301,
	0, 302, 303, 304, 305, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 0, 0, 0, 0, 0, 0,
	0, 313, 314, 315, 316, 0, 317, 604, 605, 0,
	321, 318, 319, 0, 322, 320, 0, 323, 324, 325,
	0, 0, 326, 327, 328, 0, 329, 330, 0, 331,
	332, 333, 0, 334, 335, 606, 336, 337, 338, 340,
	342, 339, 343, 344, 345, 346, 607, 608, 347, 0,
	258, 0, 0, 0, 0, 0, 348, 349, 350, 609,
	0, 0, 0, 351, 0, 352, 0, 0, 0, 353,
	354, 610, 611, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 363, 612, 0, 613, 364, 0, 365, 366,
	367, 368, 369, 2152, 615, 616, 445, 0, 370, 371,
	0, 372, 373, 374, 375, 0, 0, 0, 259, 376,
	377, 378, 380, 0, 0, 379, 617, 618, 0, 619,
	0, 381, 382, 0, 620, 0, 383, 384, 385, 0,
	386, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	0, 393, 395, 394, 0, 396, 621, 0, 397, 398,
	0, 0, 399, 0, 0, 0, 400, 401, 0, 0,
	402, 403, 404, 405, 0, 406, 407, 409, 412, 408,
	410, 411, 413, 426, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 428, 0, 427, 0,
	429, 430, 431, 436, 438, 439, 434, 435, 437, 440,
	441, 433, 0, 432, 0, 260, 0, 442, 443, 0,
	622, 444, 623, 446, 447, 0, 0, 448, 0, 0,
	0, 450, 451, 452, 0, 0, 453, 454, 624, 0,
	455, 0, 625, 456, 457, 449, 458, 459, 460, 461,
	462, 463, 464, 465, 0, 466, 467, 626, 468, 469,
	470, 627, 471, 472, 473, 628, 474, 629, 475, 476,
	0, 477, 478, 0, 479, 480, 481, 482, 483, 484,
	485, 630, 486, 488, 487, 489, 0, 490, 0, 491,
	492, 0, 0, 0, 0, 493, 0, 495, 496, 497,
	494, 498, 499, 500, 501, 0, 502, 503, 504, 0,
	505, 506, 507, 508, 631, 509, 0, 510, 511, 517,
	518, 512, 513, 519, 520, 521, 522, 523, 0, 525,
	526, 524, 527, 528, 529, 0, 530, 531, 514, 515,
	532, 533, 0, 534, 535, 536, 537, 538, 539, 632,
	0, 540, 0, 541, 542, 543, 544, 516, 545, 550,
	633, 546, 547, 548, 549, 634, 552, 0, 553, 554,
	0, 551, 0, 555, 556, 557, 558, 559, 560, 561,
	341, 562, 0, 563, 635, 636, 637, 638, 0, 572,
	0, 564, 565, 566, 639, 567, 640, 0, 568, 569,
	570, 571, 0, 573, 574, 0, 0, 575, 576, 577,
	579, 580, 578, 581, 0, 582, 0, 0, 583, 584,
	585, 641, 642, 643, 255, 587, 586, 588, 644, 0,
	0, 0, 0, 589, 590, 645, 591, 592, 593, 0,
	0, 261, 263, 262, 264, 265, 266, 267, 0, 268,
	269, 0, 0, 0, 0, 0, 594, 0, 0, 0,
	0, 270, 271, 0, 272, 273, 274, 275, 276, 277,
	595, 596, 0, 278, 597, 279, 598, 0, 599, 280,
	281, 282, 283, 284, 285, 0, 0, 0, 286, 600,
	601, 602, 0, 287, 288, 603, 0, 0, 0, 289,
	290, 291, 292, 293, 294, 295, 0, 0, 297, 298,
	299, 296, 300, 0, 301, 0, 302, 303, 304, 305,
	306, 307, 0, 308, 309, 310, 0, 311, 312, 0,
	0, 0, 0, 0, 0, 0, 313, 314, 315, 316,
	0, 317, 604, 605, 0, 321, 318, 319, 0, 322,
	320, 0, 323, 324, 325, 0, 0, 326, 327, 328,
	0, 329, 330, 0, 331, 332, 333, 0, 334, 335,
	606, 336, 337, 338, 340, 342, 339, 343, 344, 345,
	346, 607, 608, 347, 0, 258, 0, 0, 0, 0,
	0, 348, 349, 350, 609, 0, 0, 0, 351, 0,
	352, 0, 0, 0, 353, 354, 610, 611, 355, 356,
	357, 358, 359, 360, 361, 362, 0, 363, 612, 0,
	613, 364, 0, 365, 366, 367, 368, 369, 1973, 615,
	616, 445, 0, 370, 371, 0, 372, 373, 374, 375,
	0, 0, 0, 259, 376, 377, 378, 380, 0, 0,
	379, 617, 618, 0, 619, 0, 381, 382, 0, 620,
	0, 383, 384, 385, 0, 386, 0, 0, 0, 387,
	388, 389, 390, 391, 392, 0, 393, 395, 394, 0,
	396, 621, 0, 397, 398, 0, 0, 399, 0, 0,
	0, 400, 401, 0, 0, 402, 403, 404, 405, 0,
	406, 407, 409, 412, 408, 410, 411, 413, 426, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 428, 0, 427, 0, 429, 430, 431, 436, 438,
	439, 434, 435, 437, 440, 441, 433, 0, 432, 0,
	260, 0, 442, 443, 0, 622, 444, 623, 446, 447,
	0, 0, 448, 0, 0, 0, 450, 451, 452, 0,
	0, 453, 454, 624, 0, 455, 0, 625, 456, 457,
	449, 458, 459, 460, 461, 462, 463, 464, 465, 0,
	466, 467, 626, 468, 469, 470, 627, 471, 472, 473,
	628, 474, 629, 475, 476, 0, 477, 478, 0, 479,
	480, 481, 482, 483, 484, 485, 630, 486, 488, 487,
	489, 0, 490, 0, 491, 492, 0, 0, 0, 0,
	493, 0, 495, 496, 497, 494, 498, 499, 500, 501,
	0, 502, 503, 504, 0, 505, 506, 507, 508, 631,
	509, 0, 510, 511, 517, 518, 512, 513, 519, 520,
	521, 522, 523, 0, 525, 526, 524, 527, 528, 529,
	0, 530, 531, 514, 515, 532, 533, 0, 534, 535,
	536, 537, 538, 539, 632, 0, 540, 0, 541, 542,
	543, 544, 516, 545, 550, 633, 546, 547, 548, 549,
	634, 552, 0, 553, 554, 0, 551, 0, 555, 556,
	557, 558, 559, 560, 561, 341, 562, 0, 563, 635,
	636, 637, 638, 0, 572, 0, 564, 565, 566, 639,
	567, 640, 0, 568, 569, 570, 571, 0, 573, 574,
	0, 0, 575, 576, 577, 579, 580, 578, 581, 0,
	582, 0, 0, 583, 584, 585, 641, 642, 643, 255,
	587, 586, 588, 644, 0, 0, 0, 0, 589, 590,
	645, 591, 592, 593, 0, 0, 261, 263, 262, 264,
	265, 266, 267, 0, 268, 269, 0, 0, 0, 0,
	0, 594, 0, 0, 0, 0, 270, 271, 0, 272,
	273, 274, 275, 276, 277, 595, 596, 0, 278, 597,
	279, 598, 0, 599, 280, 281, 282, 283, 284, 285,
	0, 0, 0, 286, 600, 601, 602, 0, 287, 288,
	603, 0, 0, 0, 289, 290, 291, 292, 293, 294,
	295, 0, 0, 297, 298, 299, 296, 300, 0, 301,
	0, 302, 303, 304, 305, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 0, 0, 0, 0, 0, 0,
	0, 313, 314, 315, 316, 0, 317, 604, 605, 0,
	321, 318, 319, 0, 322, 320, 0, 323, 324, 325,
	0, 0, 326, 327, 328, 0, 329, 330, 0, 331,
	332, 333, 0, 334, 335, 606, 336, 337, 338, 340,
	342, 339, 343, 344, 345, 346, 607, 608, 347, 0,
	258, 0, 0, 0, 0, 0, 348, 349, 350, 609,
	0, 0, 0, 351, 0, 352, 0, 0, 0, 353,
	354, 610, 611, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 363, 612, 0, 613, 364, 0, 365, 366,
	367, 368, 369, 1967, 615, 616, 445, 0, 370, 371,
	0, 372, 373, 374, 375, 0, 0, 0, 259, 376,
	377, 378, 380, 0, 0, 379, 617, 618, 0, 619,
	0, 381, 382, 0, 620, 0, 383, 384, 385, 0,
	386, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	0, 393, 395, 394, 0, 396, 621, 0, 397, 398,
	0, 0, 399, 0, 0, 0, 400, 401, 0, 0,
	402, 403, 404, 405, 0, 406, 407, 409, 412, 408,
	410, 411, 413, 426, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 428, 0, 427, 0,
	429, 430, 431, 436, 438, 439, 434, 435, 437, 440,
	441, 433, 0, 432, 0, 260, 0, 442, 443, 0,
	622, 444, 623, 446, 447, 0, 0, 448, 0, 0,
	0, 450, 451, 452, 0, 0, 453, 454, 624, 0,
	455, 0, 625, 456, 457, 449, 458, 459, 460, 461,
	462, 463, 464, 465, 0, 466, 467, 626, 468, 469,
	470, 627, 471, 472, 473, 628, 474, 629, 475, 476,
	0, 477, 478, 0, 479, 480, 481, 482, 483, 484,
	485, 630, 486, 488, 487, 489, 0, 490, 0, 491,
	492, 0, 0, 0, 0, 493, 0, 495, 496, 497,
	494, 498, 499, 500, 501, 0, 502, 503, 504, 0,
	505, 506, 507, 508, 631, 509, 0, 510, 511, 517,
	518, 512, 513, 519, 520, 521, 522, 523, 0, 525,
	526, 524, 527, 528, 529, 0, 530, 531, 514, 515,
	532, 533, 0, 534, 535, 536, 537, 538, 539, 632,
	0, 540, 0, 541, 542, 543, 544, 516, 545, 550,
	633, 546, 547, 548, 549, 634, 552, 0, 553, 554,
	0, 551, 0, 555, 556, 557, 558, 559, 560, 561,
	341, 562, 0, 563, 635, 636, 637, 638, 0, 572,
	0, 564, 565, 566, 639, 567, 640, 0, 568, 569,
	570, 571, 0, 573, 574, 0, 0, 575, 576, 577,
	579, 580, 578, 581, 0, 582, 0, 0, 583, 584,
	585, 641, 642, 643, 0, 587, 586, 588, 644, 843,
	0, 255, 0, 589, 590, 645, 591, 592, 593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 263,
	262, 264, 265, 266, 267, 0, 268, 269, 0, 0,
	0, 0, 0, 594, 0, 0, 0, 0, 270, 271,
	0, 272, 273, 274, 275, 276, 277, 595, 596, 0,
	278, 597, 279, 598, 0, 599, 280, 281, 282, 283,
	284, 285, 0, 0, 0, 286, 600, 601, 602, 0,
	287, 288, 603, 0, 0, 0, 289, 290, 291, 292,
	293, 294, 295, 0, 0, 297, 298, 299, 296, 300,
	0, 301, 0, 302, 303, 304, 305, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 0, 0, 0, 0,
	0, 0, 0, 313, 314, 315, 316, 0, 317, 604,
	605, 0, 321, 318, 319, 0, 322, 320, 0, 323,
	324, 325, 0, 0, 326, 327, 328, 0, 329, 330,
	0, 331, 332, 333, 0, 334, 335, 606, 336, 337,
	338, 340, 342, 339, 343, 344, 345, 346, 607, 608,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 609, 0, 0, 0, 351, 0, 352, 0, 0,
	0, 353, 354, 610, 611, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 363, 612, 0, 613, 364, 0,
	365, 366, 367, 368, 369, 614, 615, 616, 445, 0,
	370, 371, 0, 372, 373, 374, 375, 0, 0, 0,
	0, 376, 377, 378, 380, 0, 0, 379, 617, 618,
	0, 619, 842, 381, 382, 0, 620, 0, 383, 384,
	385, 0, 386, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 0, 393, 395, 394, 0, 396, 621, 0,
	397, 398, 0, 0, 399, 0, 0, 0, 400, 401,
	0, 0, 402, 403, 404, 405, 0, 406, 407, 409,
	412, 408, 410, 411, 413, 426, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 428, 0,
	427, 0, 429, 430, 431, 436, 438, 439, 434, 435,
	437, 440, 441, 433, 0, 432, 0, 0, 0, 442,
	443, 0, 622, 444, 623, 446, 447, 0, 0, 448,
	0, 0, 0, 450, 451, 452, 0, 0, 453, 454,
	624, 0, 455, 0, 625, 456, 457, 449, 458, 459,
	460, 461, 462, 463, 464, 465, 0, 466, 467, 626,
	468, 469, 470, 627, 471, 472, 473, 628, 474, 629,
	475, 476, 0, 477, 478, 0, 479, 480, 481, 482,
	483, 484, 485, 630, 486, 488, 487, 489, 0, 490,
	0, 491, 492, 0, 0, 0, 0, 493, 0, 495,
	496, 497, 494, 498, 499, 500, 501, 0, 502, 503,
	504, 0, 505, 506, 507, 508, 631, 509, 0, 510,
	511, 517, 518, 512, 513, 519, 520, 521, 522, 523,
	0, 525, 526, 524, 527, 528, 529, 0, 530, 531,
	514, 515, 532, 533, 0, 534, 535, 536, 537, 538,
	539, 632, 0, 540, 0, 541, 542, 543, 544, 516,
	545, 550, 633, 546, 547, 548, 549, 634, 552, 0,
	553, 554, 0, 551, 841, 555, 556, 557, 558, 559,
	560, 561, 341, 562, 0, 563, 635, 636, 637, 638,
	0, 572, 0, 564, 565, 566, 639, 567, 640, 0,
	568, 569, 570, 571, 0, 573, 574, 0, 0, 575,
	576, 577, 579, 580, 578, 581, 0, 582, 0, 0,
	583, 584, 585, 641, 642, 643, 255, 587, 586, 588,
	644, 0, 0, 0, 0, 589, 590, 645, 591, 592,
	593, 0, 0, 261, 263, 262, 264, 265, 266, 267,
	0, 268, 269, 0, 0, 0, 0, 0, 594, 0,
	0, 0, 0, 270, 271, 0, 272, 273, 274, 275,
	276, 277, 595, 596, 0, 278, 597, 279, 598, 0,
	599, 280, 281, 282, 283, 284, 285, 0, 0, 0,
	286, 600, 601, 602, 0, 287, 288, 603, 0, 0,
	0, 289, 290, 291, 292, 293, 294, 295, 0, 0,
	297, 298, 299, 296, 300, 0, 301, 0, 302, 303,
	304, 305, 306, 307, 0, 308, 309, 310, 0, 311,
	312, 0, 0, 0, 0, 0, 0, 0, 313, 314,
	315, 316, 0, 317, 604, 605, 0, 321, 318, 319,
	0, 322, 320, 0, 323, 324, 325, 0, 0, 326,
	327, 328, 0, 329, 330, 0, 331, 332, 333, 0,
	334, 335, 606, 336, 337, 338, 340, 342, 339, 343,
	344, 345, 346, 607, 608, 347, 0, 2866, 0, 0,
	0, 0, 0, 348, 349, 350, 609, 0, 0, 0,
	351, 0, 352, 0, 0, 0, 353, 354, 610, 611,
	355, 356, 357, 358, 359, 360, 361, 362, 0, 363,
	612, 0, 613, 364, 0, 365, 366, 367, 368, 369,
	614, 615, 616, 445, 0, 370, 371, 0, 372, 373,
	374, 375, 0, 0, 0, 0, 376, 377, 378, 380,
	0, 0, 379, 617, 618, 0, 619, 0, 381, 382,
	0, 620, 0, 383, 384, 385, 0, 386, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 0, 393, 395,
	394, 0, 396, 621, 0, 397, 398, 0, 0, 399,
	0, 0, 0, 400, 401, 0, 0, 402, 403, 404,
	405, 0, 406, 407, 409, 412, 408, 410, 411, 413,
	426, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 428, 0, 427, 0, 429, 430, 431,
	436, 438, 439, 434, 435, 437, 440, 441, 433, 0,
	432, 0, 0, 0, 442, 443, 0, 622, 444, 623,
	446, 447, 0, 0, 448, 0, 0, 0, 450, 451,
	452, 0, 0, 453, 454, 624, 0, 455, 0, 625,
	456, 457, 449, 458, 459, 460, 461, 462, 463, 464,
	465, 0, 466, 467, 626, 468, 469, 470, 627, 471,
	472, 473, 628, 474, 629, 475, 476, 3912, 477, 478,
	0, 479, 480, 481, 482, 483, 484, 485, 630, 486,
	488, 487, 489, 0, 490, 0, 491, 492, 0, 0,
	0, 0, 493, 0, 495, 496, 497, 494, 498, 499,
	500, 501, 0, 502, 503, 504, 0, 505, 506, 507,
	508, 631, 509, 0, 510, 511, 517, 518, 512, 513,
	519, 520, 521, 522, 523, 0, 525, 526, 524, 527,
	528, 529, 0, 530, 531, 514, 515, 532, 533, 0,
	534, 535, 536, 537, 538, 539, 632, 0, 540, 0,
	541, 542, 543, 544, 516, 545, 550, 633, 546, 547,
	548, 549, 634, 552, 0, 553, 554, 0, 551, 0,
	555, 556, 557, 558, 559, 560, 561, 341, 562, 0,
	563, 635, 636, 637, 638, 0, 572, 0, 564, 565,
	566, 639, 567, 640, 0, 568, 569, 570, 571, 0,
	573, 574, 0, 0, 575, 576, 577, 579, 580, 578,
	581, 0, 582, 0, 0, 583, 584, 585, 641, 642,
	643, 0, 587, 586, 588, 644, 734, 0, 255, 0,
	589, 590, 645, 591, 592, 593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 263, 262, 264, 265,
	266, 267, 0, 268, 269, 0, 0, 0, 0, 0,
	594, 0, 0, 0, 0, 270, 271, 1288, 272, 273,
	274, 275, 276, 277, 595, 596, 0, 278, 597, 279,
	598, 0, 599, 280, 281, 282, 283, 284, 285, 0,
	0, 0, 286, 600, 601, 1286, 0, 287, 288, 603,
	0, 0, 0, 289, 290, 291, 292, 293, 294, 295,
	0, 0, 297, 298, 299, 296, 300, 0, 301, 0,
	302, 303, 304, 305, 306, 307, 0, 308, 309, 310,
	0, 311, 312, 0, 0, 0, 0, 0, 0, 0,
	313, 314, 315, 316, 0, 317, 604, 605, 0, 321,
	318, 319, 0, 322, 320, 0, 323, 324, 325, 0,
	0, 326, 327, 328, 0, 329, 330, 0, 331, 332,
	333, 0, 334, 335, 606, 336, 337, 338, 340, 342,
	339, 343, 344, 345, 346, 607, 608, 347, 0, 0,
	0, 0, 0, 0, 0, 348, 349, 350, 609, 0,
	0, 0, 351, 0, 352, 0, 0, 0, 353, 354,
	610, 611, 355, 356, 357, 358, 359, 360, 361, 362,
	0, 363, 612, 0, 613, 364, 0, 365, 366, 367,
	368, 369, 614, 615, 616, 445, 0, 370, 371, 0,
	372, 373, 374, 375, 0, 0, 0, 0, 376, 377,
	378, 380, 0, 0, 379, 617, 618, 0, 619, 0,
	381, 382, 0, 620, 0, 383, 384, 385, 0, 386,
	0, 0, 0, 387, 388, 389, 390, 391, 392, 0,
	393, 395, 394, 0, 396, 621, 0, 397, 398, 0,
	0, 399, 0, 0, 0, 400, 401, 0, 0, 402,
	403, 404, 405, 0, 406, 407, 409, 412, 408, 410,
	411, 413, 426, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 428, 0, 735, 0, 429,
	430, 431, 436, 438, 439, 434, 435, 437, 440, 441,
	433, 0, 432, 0, 0, 0, 442, 443, 0, 622,
	444, 623, 446, 447, 0, 0, 448, 0, 0, 0,
	450, 451, 452, 0, 0, 453, 454, 624, 0, 455,
	0, 625, 456, 457, 449, 458, 459, 460, 461, 462,
	463, 464, 465, 0, 466, 467, 626, 468, 469, 470,
	627, 471, 472, 473, 628, 474, 629, 475, 476, 0,
	477, 478, 0, 479, 480, 481, 482, 483, 484, 485,
	630, 486, 488, 487, 489, 0, 490, 0, 491, 492,
	0, 0, 0, 0, 493, 0, 495, 496, 497, 494,
	498, 499, 500, 501, 0, 502, 503, 504, 0, 505,
	506, 507, 508, 631, 509, 0, 510, 511, 517, 518,
	512, 513, 731, 520, 521, 522, 523, 0, 525, 526,
	524, 527, 1289, 529, 0, 530, 531, 514, 515, 532,
	533, 0, 534, 535, 536, 537, 538, 539, 632, 0,
	540, 0, 541, 542, 543, 544, 516, 545, 550, 633,
	546, 547, 548, 549, 634, 552, 0, 553, 554, 0,
	551, 0, 555, 556, 557, 558, 559, 560, 561, 341,
	562, 0, 563, 730, 636, 637, 638, 0, 572, 0,
	564, 565, 566, 639, 567, 640, 0, 568, 569, 570,
	571, 0, 573, 574, 0, 0, 575, 576, 577, 579,
	580, 578, 581, 0, 582, 0, 0, 583, 584, 585,
	641, 642, 643, 0, 587, 586, 588, 644, 734, 0,
	255, 0, 589, 590, 645, 591, 592, 593, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 263, 262,
	264, 265, 266, 267, 0, 268, 269, 0, 0, 0,
	0, 0, 594, 0, 0, 0, 0, 270, 271, 1288,
	272, 273, 274, 275, 276, 277, 595, 596, 0, 278,
	597, 279, 598, 0, 599, 280, 281, 282, 283, 284,
	285, 0, 0, 0, 286, 600, 601, 1286, 0, 287,
	288, 603, 0, 0, 0, 289, 290, 291, 292, 293,
	294, 295, 0, 0, 297, 298, 299, 296, 300, 0,
	301, 0, 302, 303, 304, 305, 306, 307, 0, 308,
	309, 310, 0, 311, 312, 0, 0, 0, 0, 0,
	0, 0, 313, 314, 315, 316, 0, 317, 604, 605,
	0, 321, 318, 319, 0, 322, 320, 0, 323, 324,
	325, 0, 0, 326, 327, 328, 0, 329, 330, 0,
	331, 332, 333, 0, 334, 335, 606, 336, 337, 338,
	340, 342, 339, 343, 344, 345, 346, 607, 608, 347,
	0, 0, 0, 0, 0, 0, 0, 348, 349, 350,
	609, 0, 0, 0, 351, 0, 352, 0, 0, 0,
	353, 354, 610, 611, 355, 356, 357, 358, 359, 360,
	361, 362, 0, 363, 612, 0, 613, 364, 0, 365,
	366, 367, 368, 369, 614, 615, 616, 445, 0, 370,
	371, 0, 372, 373, 374, 375, 0, 0, 0, 0,
	376, 377, 378, 380, 0, 0, 379, 617, 618, 0,
	619, 0, 381, 382, 0, 620, 0, 383, 384, 385,
	0, 386, 0, 0, 0, 387, 388, 389, 390, 391,
	392, 0, 393, 395, 394, 0, 396, 621, 0, 397,
	398, 0, 0, 399, 0, 0, 0, 400, 401, 0,
	0, 402, 403, 404, 405, 0, 406, 407, 409, 412,
	408, 410, 411, 413, 426, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 428, 0, 735,
	0, 429, 430, 431, 436, 438, 439, 434, 435, 437,
	440, 441, 433, 0, 432, 0, 0, 0, 442, 443,
	0, 622, 444, 623, 446, 447, 0, 0, 448, 0,
	0, 0, 450, 451, 452, 0, 0, 453, 454, 624,
	0, 455, 0, 625, 456, 457, 449, 458, 459, 460,
	461, 462, 463, 464, 465, 0, 466, 467, 626, 468,
	469, 470, 627, 471, 472, 473, 628, 474, 629, 475,
	476, 0, 477, 478, 0, 479, 480, 481, 482, 483,
	484, 485, 630, 486, 488, 487, 489, 0, 490, 0,
	491, 492, 0, 0, 0, 0, 493, 0, 495, 496,
	497, 494, 498, 499, 500, 501, 0, 502, 503, 504,
	0, 505, 506, 507, 508, 631, 509, 0, 510, 511,
	517, 518, 512, 513, 731, 520, 521, 522, 523, 0,
	525, 526, 524, 527, 1289, 529, 0, 530, 531, 514,
	515, 532, 533, 0, 534, 535, 536, 537, 538, 539,
	632, 0, 540, 0, 541, 542, 543, 544, 516, 545,
	550, 633, 546, 547, 548, 549, 634, 552, 0, 553,
	554, 0, 551, 0, 555, 556, 557, 558, 559, 560,
	561, 341, 562, 0, 563, 730, 636, 637, 638, 0,
	572, 0, 564, 1287, 566, 639, 567, 640, 0, 568,
	569, 570, 571, 0, 573, 574, 0, 0, 575, 576,
	577, 579, 580, 578, 581, 0, 582, 0, 0, 583,
	584, 585, 641, 642, 643, 0, 587, 586, 588, 644,
	656, 0, 255, 0, 589, 590, 645, 591, 592, 593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 655, 268, 269, 0,
	0, 0, 0, 0, 594, 0, 0, 0, 0, 270,
	271, 0, 272, 273, 274, 275, 276, 277, 595, 596,
	0, 278, 597, 279, 598, 0, 599, 280, 281, 282,
	283, 284, 285, 0, 0, 0, 286, 600, 601, 602,
	0, 287, 288, 603, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 0, 0, 0,
	0, 0, 0, 0, 313, 314, 315, 316, 0, 317,
	604, 605, 0, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 327, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 606, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 607,
	608, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 609, 0, 0, 0, 351, 0, 352, 0,
	0, 0, 353, 354, 610, 611, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 612, 0, 613, 364,
	0, 365, 366, 367, 368, 369, 614, 615, 616, 445,
	0, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 0, 376, 377, 378, 380, 0, 0, 379, 617,
	618, 0, 619, 0, 381, 382, 0, 620, 0, 383,
	384, 385, 0, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 621,
	0, 397, 398, 0, 0, 399, 0, 0, 0, 400,
	401, 0, 0, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 0, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 0, 432, 0, 0, 0,
	442, 443, 0, 622, 444, 623, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 0, 455, 0, 625, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 628, 474,
	629, 654, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 630, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 0, 505, 506, 507, 508, 631, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 0, 530,
	531, 514, 515, 532, 533, 0, 534, 535, 536, 537,
	538, 539, 632, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 633, 546, 547, 548, 549, 634, 552,
	0, 553, 554, 0, 551, 0, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 635, 636, 637,
	638, 0, 572, 0, 564, 565, 566, 639, 567, 640,
	0, 568, 569, 570, 571, 0, 573, 574, 0, 0,
	575, 576, 577, 579, 580, 578, 581, 0, 582, 0,
	0, 583, 584, 585, 641, 642, 643, 0, 587, 586,
	588, 644, 255, 2853, 0, 0, 589, 590, 645, 591,
	592, 593, 0, 0, 0, 0, 0, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 0,
	0, 0, 0, 0, 594, 0, 0, 0, 0, 270,
	271, 0, 272, 273, 274, 275, 276, 277, 595, 596,
	0, 278, 597, 279, 598, 0, 599, 280, 281, 282,
	283, 284, 285, 0, 0, 0, 286, 600, 601, 602,
	0, 287, 288, 603, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 0, 0, 0,
	0, 0, 0, 0, 313, 314, 315, 316, 0, 317,
	604, 605, 0, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 327, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 606, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 607,
	608, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 609, 0, 0, 0, 351, 0, 352, 0,
	0, 0, 353, 354, 610, 611, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 612, 0, 613, 364,
	0, 365, 366, 367, 368, 369, 614, 615, 616, 445,
	0, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 0, 376, 377, 378, 380, 0, 0, 379, 617,
	618, 0, 619, 0, 381, 382, 0, 620, 0, 383,
	384, 385, 0, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 621,
	0, 397, 398, 0, 0, 399, 0, 0, 0, 400,
	401, 0, 0, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 0, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 0, 432, 0, 0, 0,
	442, 443, 0, 622, 444, 623, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 0, 455, 0, 625, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 628, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 630, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 0, 505, 506, 507, 508, 631, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 0, 530,
	531, 514, 515, 532, 533, 0, 534, 535, 536, 537,
	538, 539, 632, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 633, 546, 547, 548, 549, 634, 552,
	0, 553, 554, 0, 551, 0, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 635, 636, 637,
	638, 0, 572, 0, 564, 565, 566, 639, 567, 640,
	0, 568, 569, 570, 571, 0, 573, 574, 0, 0,
	575, 576, 577, 579, 580, 578, 581, 0, 582, 0,
	0, 583, 584, 585, 641, 642, 643, 0, 587, 586,
	588, 644, 255, 3922, 0, 0, 589, 590, 645, 591,
	592, 593, 0, 0, 0, 0, 0, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 0,
	0, 0, 0, 0, 594, 0, 0, 0, 0, 270,
	271, 0, 272, 273, 274, 275, 276, 277, 595, 596,
	0, 278, 597, 279, 598, 0, 599, 280, 281, 282,
	283, 284, 285, 0, 0, 0, 286, 600, 601, 602,
	0, 287, 288, 603, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 0, 0, 0,
	0, 0, 0, 0, 313, 314, 315, 316, 0, 317,
	604, 605, 0, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 327, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 606, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 607,
	608, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 609, 0, 0, 0, 351, 0, 352, 0,
	0, 0, 353, 354, 610, 611, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 612, 0, 613, 364,
	0, 365, 366, 367, 368, 369, 614, 615, 616, 445,
	0, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 0, 376, 377, 378, 380, 0, 0, 379, 617,
	618, 0, 619, 0, 381, 382, 0, 620, 0, 383,
	384, 385, 0, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 621,
	0, 397, 398, 0, 0, 399, 0, 0, 0, 400,
	401, 0, 0, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 0, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 0, 432, 0, 0, 0,
	442, 443, 0, 622, 444, 623, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 0, 455, 0, 625, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 628, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 630, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 0, 505, 506, 507, 508, 631, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 0, 530,
	531, 514, 515, 532, 533, 0, 534, 535, 536, 537,
	538, 539, 632, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 633, 546, 547, 548, 549, 634, 552,
	0, 553, 554, 0, 551, 0, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 635, 636, 637,
	638, 0, 572, 0, 564, 565, 566, 639, 567, 640,
	0, 568, 569, 570, 571, 0, 573, 574, 0, 0,
	575, 576, 577, 579, 580, 578, 581, 0, 582, 0,
	0, 583, 584, 585, 641, 642, 643, 255, 587, 586,
	588, 644, 0, 0, 0, 0, 589, 590, 645, 591,
	592, 593, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 594,
	0, 0, 0, 0, 270, 271, 0, 272, 273, 274,
	275, 276, 277, 595, 596, 0, 278, 597, 279, 598,
	0, 599, 280, 281, 282, 283, 284, 285, 0, 0,
	0, 286, 600, 601, 602, 0, 287, 288, 603, 0,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 0, 0, 0, 0, 0, 0, 0, 313,
	314, 315, 316, 0, 317, 604, 605, 3627, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 327, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 606, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 607, 608, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 609, 0, 0,
	0, 351, 0, 352, 0, 0, 0, 353, 354, 610,
	611, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 612, 0, 613, 364, 0, 365, 366, 367, 368,
	369, 614, 615, 616, 445, 0, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 0, 376, 377, 378,
	380, 0, 0, 379, 617, 618, 0, 619, 0, 381,
	382, 0, 620, 0, 383, 384, 385, 0, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 621, 0, 397, 398, 0, 0,
	399, 0, 0, 0, 400, 401, 0, 0, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 0, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	0, 432, 0, 0, 0, 442, 443, 0, 622, 444,
	623, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 0, 455, 0,
	625, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 628, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 630,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 0, 505, 506,
	507, 508, 631, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 0, 530, 531, 514, 515, 532, 533,
	0, 534, 535, 536, 537, 538, 539, 632, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 633, 546,
	547, 548, 549, 634, 552, 0, 553, 554, 0, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 635, 636, 637, 638, 0, 572, 0, 564,
	565, 566, 639, 567, 640, 0, 568, 569, 570, 571,
	0, 573, 574, 0, 0, 575, 576, 577, 579, 580,
	578, 581, 0, 582, 0, 0, 583, 584, 585, 641,
	642, 643, 255, 587, 586, 588, 644, 0, 0, 0,
	0, 589, 590, 645, 591, 592, 593, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 0,
	0, 0, 0, 0, 594, 0, 2562, 0, 0, 270,
	271, 0, 272, 273, 274, 275, 276, 277, 595, 596,
	0, 278, 597, 279, 598, 0, 599, 280, 281, 282,
	283, 284, 285, 0, 0, 0, 286, 600, 601, 602,
	0, 287, 288, 603, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 0, 0, 0,
	0, 0, 0, 0, 313, 314, 315, 316, 0, 317,
	604, 605, 0, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 327, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 606, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 607,
	608, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 609, 0, 0, 0, 351, 0, 352, 0,
	0, 0, 353, 354, 610, 611, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 612, 0, 613, 364,
	0, 365, 366, 367, 368, 369, 614, 615, 616, 445,
	0, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 0, 376, 377, 378, 380, 0, 0, 379, 617,
	618, 0, 619, 0, 381, 382, 0, 620, 0, 383,
	384, 385, 0, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 621,
	0, 397, 398, 0, 0, 399, 0, 0, 0, 400,
	401, 0, 0, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 0, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 0, 432, 0, 0, 0,
	442, 443, 0, 622, 444, 623, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 0, 455, 0, 625, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 628, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 630, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 0, 505, 506, 507, 508, 631, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 0, 530,
	531, 514, 515, 532, 533, 0, 534, 535, 536, 537,
	538, 539, 632, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 633, 546, 547, 548, 549, 634, 552,
	0, 553, 554, 0, 551, 0, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 635, 636, 637,
	638, 0, 572, 0, 564, 565, 566, 639, 567, 640,
	0, 568, 569, 570, 571, 0, 573, 574, 0, 0,
	575, 576, 577, 579, 580, 578, 581, 0, 582, 0,
	0, 583, 584, 585, 641, 642, 643, 0, 587, 586,
	588, 644, 255, 2853, 0, 0, 589, 590, 645, 591,
	592, 593, 0, 0, 0, 0, 0, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 0,
	0, 0, 0, 0, 594, 0, 0, 0, 0, 270,
	271, 0, 272, 273, 274, 275, 276, 277, 595, 596,
	0, 278, 597, 279, 598, 0, 599, 280, 281, 282,
	283, 284, 285, 0, 0, 0, 286, 600, 601, 602,
	0, 287, 288, 603, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 0, 0, 0,
	0, 0, 0, 0, 313, 314, 315, 316, 0, 317,
	604, 605, 0, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 327, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 606, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 607,
	608, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 609, 0, 0, 0, 351, 0, 352, 0,
	0, 0, 353, 354, 610, 611, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 612, 0, 613, 364,
	0, 365, 366, 367, 368, 369, 614, 615, 616, 445,
	0, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 0, 376, 377, 378, 380, 0, 0, 379, 617,
	618, 0, 619, 0, 381, 382, 0, 620, 0, 383,
	384, 385, 0, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 621,
	0, 397, 398, 0, 0, 399, 0, 0, 0, 400,
	401, 0, 0, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 0, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 0, 432, 0, 0, 0,
	442, 443, 0, 622, 444, 623, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 2850, 0, 0, 453,
	454, 624, 0, 455, 0, 625, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 628, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 630, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 0, 505, 506, 507, 508, 631, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 0, 530,
	531, 514, 515, 532, 533, 0, 534, 535, 536, 537,
	538, 539, 632, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 633, 546, 547, 548, 549, 634, 552,
	0, 553, 554, 0, 551, 0, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 635, 636, 637,
	638, 0, 572, 0, 564, 565, 566, 639, 567, 640,
	0, 568, 569, 570, 571, 0, 573, 574, 0, 0,
	575, 576, 577, 579, 580, 578, 581, 0, 582, 0,
	0, 583, 584, 585, 641, 642, 643, 255, 587, 586,
	588, 644, 0, 0, 0, 0, 589, 590, 645, 591,
	592, 593, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 2205, 268, 269, 0, 0, 0, 0, 0, 594,
	0, 0, 0, 0, 270, 271, 0, 272, 273, 274,
	275, 276, 277, 595, 596, 0, 278, 597, 279, 598,
	0, 599, 280, 281, 282, 283, 284, 285, 0, 0,
	0, 286, 600, 601, 602, 0, 287, 288, 603, 0,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 0, 0, 0, 0, 0, 0, 0, 313,
	314, 315, 316, 0, 317, 604, 605, 0, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 327, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 606, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 607, 608, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 609, 0, 0,
	0, 351, 0, 352, 0, 0, 0, 353, 354, 610,
	611, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 612, 0, 613, 364, 0, 365, 366, 367, 368,
	369, 614, 615, 616, 445, 0, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 0, 376, 377, 378,
	380, 0, 0, 379, 617, 618, 0, 619, 0, 381,
	382, 0, 620, 0, 383, 384, 385, 0, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 621, 0, 397, 398, 0, 0,
	399, 0, 0, 0, 400, 401, 0, 0, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 0, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	0, 432, 0, 0, 0, 442, 443, 0, 622, 444,
	623, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 0, 455, 0,
	625, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 628, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 630,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 0, 505, 506,
	507, 508, 631, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 0, 530, 531, 514, 515, 532, 533,
	0, 534, 535, 536, 537, 538, 539, 632, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 633, 546,
	547, 548, 549, 634, 552, 0, 553, 554, 0, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 635, 636, 637, 638, 0, 572, 0, 564,
	565, 566, 639, 567, 640, 0, 568, 569, 570, 571,
	0, 573, 574, 0, 0, 575, 576, 577, 579, 580,
	578, 581, 0, 582, 0, 0, 583, 584, 585, 641,
	642, 643, 0, 587, 586, 588, 644, 2193, 0, 255,
	0, 589, 590, 645, 591, 592, 593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 263, 262, 264,
	265, 266, 267, 0, 268, 269, 0, 0, 0, 0,
	0, 594, 0, 0, 0, 0, 270, 271, 0, 272,
	273, 274, 275, 276, 277, 595, 596, 0, 278, 597,
	279, 598, 0, 599, 280, 281, 282, 283, 284, 285,
	0, 0, 0, 286, 600, 601, 602, 0, 287, 288,
	603, 0, 0, 0, 289, 290, 291, 292, 293, 294,
	295, 0, 0, 297, 298, 299, 296, 300, 0, 301,
	0, 302, 303, 304, 305, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 0, 0, 0, 0, 0, 0,
	0, 313, 314, 315, 316, 0, 317, 604, 605, 0,
	321, 318, 319, 0, 322, 320, 0, 323, 324, 325,
	0, 0, 326, 327, 328, 0, 329, 330, 0, 331,
	332, 333, 0, 334, 335, 606, 336, 337, 338, 340,
	342, 339, 343, 344, 345, 346, 607, 608, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 609,
	0, 0, 0, 351, 0, 352, 0, 0, 0, 353,
	354, 610, 611, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 363, 612, 0, 613, 364, 0, 365, 366,
	367, 368, 369, 614, 615, 616, 445, 0, 370, 371,
	0, 372, 373, 374, 375, 0, 0, 0, 0, 376,
	377, 378, 380, 0, 0, 379, 617, 618, 0, 619,
	0, 381, 382, 0, 620, 0, 383, 384, 385, 0,
	386, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	0, 393, 395, 394, 0, 396, 621, 0, 397, 398,
	0, 0, 399, 0, 0, 0, 400, 401, 0, 0,
	402, 403, 404, 405, 0, 406, 407, 409, 412, 408,
	410, 411, 413, 426, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 428, 0, 427, 0,
	429, 430, 431, 436, 438, 439, 434, 435, 437, 440,
	441, 433, 0, 432, 0, 0, 0, 442, 443, 0,
	622, 444, 623, 446, 447, 0, 0, 448, 0, 0,
	0, 450, 451, 452, 0, 0, 453, 454, 624, 0,
	455, 0, 625, 456, 457, 449, 458, 459, 460, 461,
	462, 463, 464, 465, 0, 466, 467, 626, 468, 469,
	470, 627, 471, 472, 473, 628, 474, 629, 475, 476,
	0, 477, 478, 0, 479, 480, 481, 482, 483, 484,
	485, 630, 486, 488, 487, 489, 0, 490, 0, 491,
	492, 0, 0, 0, 0, 493, 0, 495, 496, 497,
	494, 498, 499, 500, 501, 0, 502, 503, 504, 0,
	505, 506, 507, 508, 631, 509, 0, 510, 511, 517,
	518, 512, 513, 519, 520, 521, 522, 523, 0, 525,
	526, 524, 527, 528, 529, 0, 530, 531, 514, 515,
	532, 533, 0, 534, 535, 536, 537, 538, 539, 632,
	0, 540, 0, 541, 542, 543, 544, 516, 545, 550,
	633, 546, 547, 548, 549, 634, 552, 0, 553, 554,
	0, 551, 0, 555, 556, 557, 558, 559, 560, 561,
	341, 562, 0, 563, 635, 636, 637, 638, 0, 572,
	0, 564, 565, 566, 639, 567, 640, 0, 568, 569,
	570, 571, 0, 573, 574, 0, 0, 575, 576, 577,
	579, 580, 578, 581, 0, 582, 0, 0, 583, 584,
	585, 641, 642, 643, 0, 587, 586, 588, 644, 734,
	0, 255, 0, 589, 590, 645, 591, 592, 593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 263,
	262, 264, 265, 266, 267, 0, 268, 269, 0, 0,
	0, 0, 0, 594, 0, 0, 0, 0, 270, 271,
	0, 272, 273, 274, 275, 276, 277, 595, 596, 0,
	278, 597, 279, 598, 0, 599, 280, 281, 282, 283,
	284, 285, 0, 0, 0, 286, 600, 601, 602, 0,
	287, 724, 603, 0, 0, 0, 289, 290, 291, 292,
	293, 294, 295, 0, 0, 297, 298, 299, 296, 300,
	0, 301, 0, 302, 303, 304, 305, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 0, 0, 0, 0,
	0, 0, 0, 313, 314, 315, 316, 0, 317, 604,
	605, 0, 321, 318, 319, 0, 322, 320, 0, 323,
	324, 325, 0, 0, 326, 327, 328, 0, 329, 330,
	0, 331, 332, 333, 0, 334, 335, 606, 336, 337,
	338, 340, 342, 339, 343, 344, 345, 346, 607, 608,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 609, 0, 0, 0, 351, 0, 352, 0, 0,
	0, 353, 354, 610, 611, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 363, 612, 0, 613, 364, 0,
	365, 366, 367, 368, 369, 614, 615, 616, 445, 0,
	370, 371, 0, 372, 373, 374, 375, 0, 0, 0,
	0, 376, 377, 378, 380, 0, 0, 379, 617, 618,
	0, 619, 0, 381, 382, 0, 620, 0, 383, 384,
	385, 0, 386, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 0, 393, 395, 394, 0, 396, 621, 0,
	397, 398, 0, 0, 399, 0, 0, 0, 400, 401,
	0, 0, 402, 403, 404, 405, 0, 406, 407, 409,
	412, 408, 410, 411, 413, 426, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 428, 0,
	735, 0, 429, 430, 431, 436, 438, 439, 434, 435,
	437, 440, 441, 433, 0, 432, 0, 0, 0, 442,
	443, 0, 622, 444, 623, 446, 447, 0, 0, 448,
	0, 0, 0, 450, 451, 452, 0, 0, 453, 454,
	624, 0, 455, 0, 625, 456, 457, 449, 458, 459,
	460, 461, 462, 463, 464, 465, 0, 466, 467, 626,
	468, 469, 470, 627, 471, 472, 473, 628, 474, 629,
	475, 476, 0, 477, 478, 0, 479, 480, 481, 482,
	483, 484, 485, 630, 486, 488, 487, 489, 0, 490,
	0, 491, 492, 0, 0, 0, 0, 493, 0, 495,
	496, 497, 494, 498, 499, 500, 501, 0, 502, 503,
	504, 0, 505, 506, 507, 508, 631, 509, 0, 510,
	511, 517, 518, 512, 513, 731, 520, 521, 522, 523,
	0, 525, 526, 524, 527, 1544, 529, 0, 530, 531,
	514, 515, 532, 533, 0, 534, 535, 536, 537, 538,
	539, 632, 0, 540, 0, 541, 542, 543, 544, 516,
	545, 550, 633, 546, 547, 548, 549, 634, 552, 0,
	553, 554, 0, 551, 0, 555, 556, 557, 558, 559,
	560, 561, 341, 562, 0, 563, 730, 636, 637, 638,
	0, 572, 0, 564, 565, 566, 639, 567, 640, 0,
	568, 569, 570, 571, 0, 573, 574, 0, 0, 575,
	576, 577, 579, 580, 578, 581, 0, 582, 0, 0,
	583, 584, 585, 641, 642, 643, 0, 587, 586, 588,
	644, 1517, 0, 255, 0, 589, 590, 645, 591, 592,
	593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 263, 262, 264, 265, 266, 267, 0, 268, 269,
	0, 0, 0, 0, 0, 594, 0, 0, 0, 0,
	270, 271, 0, 272, 273, 274, 275, 276, 277, 595,
	596, 0, 278, 597, 279, 598, 0, 599, 280, 281,
	282, 283, 284, 285, 0, 0, 0, 286, 600, 601,
	602, 0, 287, 288, 603, 0, 0, 0, 289, 290,
	291, 292, 293, 294, 295, 0, 0, 297, 298, 299,
	296, 300, 0, 301, 0, 302, 303, 304, 305, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 0, 0,
	0, 0, 0, 0, 0, 313, 314, 315, 316, 0,
	317, 604, 605, 0, 321, 318, 319, 0, 322, 320,
	0, 323, 324, 325, 0, 0, 326, 327, 328, 0,
	329, 330, 0, 331, 332, 333, 0, 334, 335, 606,
	336, 337, 338, 340, 342, 339, 343, 344, 345, 346,
	607, 608, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 609, 0, 0, 0, 351, 0, 352,
	0, 0, 0, 353, 354, 610, 611, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 363, 612, 0, 613,
	364, 0, 365, 366, 367, 368, 369, 1516, 615, 616,
	445, 0, 370, 371, 0, 372, 373, 374, 375, 0,
	0, 0, 0, 376, 377, 378, 380, 0, 0, 379,
	617, 618, 0, 619, 0, 381, 382, 0, 620, 0,
	383, 384, 385, 0, 386, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 0, 393, 395, 394, 0, 396,
	621, 0, 397, 398, 0, 0, 399, 0, 0, 0,
	400, 401, 0, 0, 402, 403, 404, 405, 0, 406,
	407, 409, 412, 408, 410, 411, 413, 426, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	428, 0, 427, 0, 429, 430, 431, 436, 438, 439,
	434, 435, 437, 440, 441, 433, 0, 432, 0, 0,
	0, 442, 443, 0, 622, 444, 623, 446, 447, 0,
	0, 448, 0, 0, 0, 450, 451, 452, 0, 0,
	453, 454, 624, 0, 455, 0, 625, 456, 457, 449,
	458, 459, 460, 461, 462, 463, 464, 465, 0, 466,
	467, 626, 468, 469, 470, 627, 471, 472, 473, 628,
	474, 629, 475, 476, 0, 477, 478, 0, 479, 480,
	481, 482, 483, 484, 485, 630, 486, 488, 487, 489,
	0, 490, 0, 491, 492, 0, 0, 0, 0, 493,
	0, 495, 496, 497, 494, 498, 499, 500, 501, 0,
	502, 503, 504, 0, 505, 506, 507, 508, 631, 509,
	0, 510, 511, 517, 518, 512, 513, 519, 520, 521,
	522, 523, 0, 525, 526, 524, 527, 528, 529, 0,
	530, 531, 514, 515, 532, 533, 0, 534, 535, 536,
	537, 538, 539, 632, 0, 540, 0, 541, 542, 543,
	544, 516, 545, 550, 633, 546, 547, 548, 549, 634,
	552, 0, 553, 554, 0, 551, 0, 555, 556, 557,
	558, 559, 560, 561, 341, 562, 0, 563, 635, 636,
	637, 638, 0, 572, 0, 564, 565, 566, 639, 567,
	640, 0, 568, 569, 570, 571, 0, 573, 574, 0,
	0, 575, 576, 577, 579, 580, 578, 581, 0, 582,
	0, 0, 583, 584, 585, 641, 642, 643, 0, 587,
	586, 588, 644, 1500, 0, 255, 0, 589, 590, 645,
	591, 592, 593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 263, 262, 264, 265, 266, 267, 0,
	268, 269, 0, 0, 0, 0, 0, 594, 0, 0,
	0, 0, 270, 271, 0, 272, 273, 274, 275, 276,
	277, 595, 596, 0, 278, 597, 279, 598, 0, 599,
	280, 281, 282, 283, 284, 285, 0, 0, 0, 286,
	600, 601, 602, 0, 287, 288, 603, 0, 0, 0,
	289, 290, 291, 292, 293, 294, 295, 0, 0, 297,
	298, 299, 296, 300, 0, 301, 0, 302, 303, 304,
	305, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	0, 0, 0, 0, 0, 0, 0, 313, 314, 315,
	316, 0, 317, 604, 605, 0, 321, 318, 319, 0,
	322, 320, 0, 323, 324, 325, 0, 0, 326, 327,
	328, 0, 329, 330, 0, 331, 332, 333, 0, 334,
	335, 606, 336, 337, 338, 340, 342, 339, 343, 344,
	345, 346, 607, 608, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 609, 0, 0, 0, 351,
	0, 352, 0, 0, 0, 353, 354, 610, 611, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 363, 612,
	0, 613, 364, 0, 365, 366, 367, 368, 369, 1498,
	615, 616, 445, 0, 370, 371, 0, 372, 373, 374,
	375, 0, 0, 0, 0, 376, 377, 378, 380, 0,
	0, 379, 617, 618, 0, 619, 0, 381, 382, 0,
	620, 0, 383, 384, 385, 0, 386, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 0, 393, 395, 394,
	0, 396, 621, 0, 397, 398, 0, 0, 399, 0,
	0, 0, 400, 401, 0, 0, 402, 403, 404, 405,
	0, 406, 407, 409, 412, 408, 410, 411, 413, 426,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 428, 0, 427, 0, 429, 430, 431, 436,
	438, 439, 434, 435, 437, 440, 441, 433, 0, 432,
	0, 0, 0, 442, 443, 0, 622, 444, 623, 446,
	447, 0, 0, 448, 0, 0, 0, 450, 451, 452,
	0, 0, 453, 454, 624, 0, 455, 0, 625, 456,
	457, 449, 458, 459, 460, 461, 462, 463, 464, 465,
	0, 466, 467, 626, 468, 469, 470, 627, 471, 472,
	473, 628, 474, 629, 475, 476, 0, 477, 478, 0,
	479, 480, 481, 482, 483, 484, 485, 630, 486, 488,
	487, 489, 0, 490, 0, 491, 492, 0, 0, 0,
	0, 493, 0, 495, 496, 497, 494, 498, 499, 500,
	501, 0, 502, 503, 504, 0, 505, 506, 507, 508,
	631, 509, 0, 510, 511, 517, 518, 512, 513, 519,
	520, 521, 522, 523, 0, 525, 526, 524, 527, 528,
	529, 0, 530, 531, 514, 515, 532, 533, 0, 534,
	535, 536, 537, 538, 539, 632, 0, 540, 0, 541,
	542, 543, 544, 516, 545, 550, 633, 546, 547, 548,
	549, 634, 552, 0, 553, 554, 0, 551, 0, 555,
	556, 557, 558, 559, 560, 561, 341, 562, 0, 563,
	635, 636, 637, 638, 0, 572, 0, 564, 565, 566,
	639, 567, 640, 0, 568, 569, 570, 571, 0, 573,
	574, 0, 0, 575, 576, 577, 579, 580, 578, 581,
	0, 582, 0, 0, 583, 584, 585, 641, 642, 643,
	0, 587, 586, 588, 644, 1494, 0, 255, 0, 589,
	590, 645, 591, 592, 593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 594,
	0, 0, 0, 0, 270, 271, 0, 272, 273, 274,
	275, 276, 277, 595, 596, 0, 278, 597, 279, 598,
	0, 599, 280, 281, 282, 283, 284, 285, 0, 0,
	0, 286, 600, 601, 602, 0, 287, 288, 603, 0,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 0, 0, 0, 0, 0, 0, 0, 313,
	314, 315, 316, 0, 317, 604, 605, 0, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 327, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 606, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 607, 608, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 609, 0, 0,
	0, 351, 0, 352, 0, 0, 0, 353, 354, 610,
	611, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 612, 0, 613, 364, 0, 365, 366, 367, 368,
	369, 614, 615, 616, 445, 0, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 0, 376, 377, 378,
	380, 0, 0, 379, 617, 618, 0, 619, 0, 381,
	382, 0, 620, 0, 383, 384, 385, 0, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 621, 0, 397, 398, 0, 0,
	399, 0, 0, 0, 400, 401, 0, 0, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 0, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	0, 432, 0, 0, 0, 442, 443, 0, 622, 444,
	623, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 0, 455, 0,
	625, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 628, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 630,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 0, 505, 506,
	507, 508, 631, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 0, 530, 531, 514, 515, 532, 533,
	0, 534, 535, 536, 537, 538, 539, 632, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 633, 546,
	547, 548, 549, 634, 552, 0, 553, 554, 0, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 635, 636, 637, 638, 0, 572, 0, 564,
	565, 566, 639, 567, 640, 0, 568, 569, 570, 571,
	0, 573, 574, 0, 0, 575, 576, 577, 579, 580,
	578, 581, 0, 582, 0, 0, 583, 584, 585, 641,
	642, 643, 0, 587, 586, 588, 644, 1471, 0, 255,
	0, 589, 590, 645, 591, 592, 593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 263, 262, 264,
	265, 266, 267, 0, 268, 269, 0, 0, 0, 0,
	0, 594, 0, 0, 0, 0, 270, 271, 0, 272,
	273, 274, 275, 276, 277, 595, 596, 0, 278, 597,
	279, 598, 0, 599, 280, 281, 282, 283, 284, 285,
	0, 0, 0, 286, 600, 601, 602, 0, 287, 288,
	603, 0, 0, 0, 289, 290, 291, 292, 293, 294,
	295, 0, 0, 297, 298, 299, 296, 300, 0, 301,
	0, 302, 303, 304, 305, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 0, 0, 0, 0, 0, 0,
	0, 313, 314, 315, 316, 0, 317, 604, 605, 0,
	321, 318, 319, 0, 322, 320, 0, 323, 324, 325,
	0, 0, 326, 327, 328, 0, 329, 330, 0, 331,
	332, 333, 0, 334, 335, 606, 336, 337, 338, 340,
	342, 339, 343, 344, 345, 346, 607, 608, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 609,
	0, 0, 0, 351, 0, 352, 0, 0, 0, 353,
	354, 610, 611, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 363, 612, 0, 613, 364, 0, 365, 366,
	367, 368, 369, 1469, 615, 616, 445, 0, 370, 371,
	0, 372, 373, 374, 375, 0, 0, 0, 0, 376,
	377, 378, 380, 0, 0, 379, 617, 618, 0, 619,
	0, 381, 382, 0, 620, 0, 383, 384, 385, 0,
	386, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	0, 393, 395, 394, 0, 396, 621, 0, 397, 398,
	0, 0, 399, 0, 0, 0, 400, 401, 0, 0,
	402, 403, 404, 405, 0, 406, 407, 409, 412, 408,
	410, 411, 413, 426, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 428, 0, 427, 0,
	429, 430, 431, 436, 438, 439, 434, 435, 437, 440,
	441, 433, 0, 432, 0, 0, 0, 442, 443, 0,
	622, 444, 623, 446, 447, 0, 0, 448, 0, 0,
	0, 450, 451, 452, 0, 0, 453, 454, 624, 0,
	455, 0, 625, 456, 457, 449, 458, 459, 460, 461,
	462, 463, 464, 465, 0, 466, 467, 626, 468, 469,
	470, 627, 471, 472, 473, 628, 474, 629, 475, 476,
	0, 477, 478, 0, 479, 480, 481, 482, 483, 484,
	485, 630, 486, 488, 487, 489, 0, 490, 0, 491,
	492, 0, 0, 0, 0, 493, 0, 495, 496, 497,
	494, 498, 499, 500, 501, 0, 502, 503, 504, 0,
	505, 506, 507, 508, 631, 509, 0, 510, 511, 517,
	518, 512, 513, 519, 520, 521, 522, 523, 0, 525,
	526, 524, 527, 528, 529, 0, 530, 531, 514, 515,
	532, 533, 0, 534, 535, 536, 537, 538, 539, 632,
	0, 540, 0, 541, 542, 543, 544, 516, 545, 550,
	633, 546, 547, 548, 549, 634, 552, 0, 553, 554,
	0, 551, 0, 555, 556, 557, 558, 559, 560, 561,
	341, 562, 0, 563, 635, 636, 637, 638, 0, 572,
	0, 564, 565, 566, 639, 567, 640, 0, 568, 569,
	570, 571, 0, 573, 574, 0, 0, 575, 576, 577,
	579, 580, 578, 581, 0, 582, 0, 0, 583, 584,
	585, 641, 642, 643, 0, 587, 586, 588, 644, 1432,
	0, 255, 0, 589, 590, 645, 591, 592, 593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 263,
	262, 264, 265, 266, 267, 0, 268, 269, 0, 0,
	0, 0, 0, 594, 0, 0, 0, 0, 270, 271,
	0, 272, 273, 274, 275, 276, 277, 595, 596, 0,
	278, 597, 279, 598, 0, 599, 280, 281, 282, 283,
	284, 285, 0, 0, 0, 286, 600, 601, 602, 0,
	287, 288, 603, 0, 0, 0, 289, 290, 291, 292,
	293, 294, 295, 0, 0, 297, 298, 299, 296, 300,
	0, 301, 0, 302, 303, 304, 305, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 0, 0, 0, 0,
	0, 0, 0, 313, 314, 315, 316, 0, 317, 604,
	605, 0, 321, 318, 319, 0, 322, 320, 0, 323,
	324, 325, 0, 0, 326, 327, 328, 0, 329, 330,
	0, 331, 332, 333, 0, 334, 335, 606, 336, 337,
	338, 340, 342, 339, 343, 344, 345, 346, 607, 608,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 609, 0, 0, 0, 351, 0, 352, 0, 0,
	0, 353, 354, 610, 611, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 363, 612, 0, 613, 364, 0,
	365, 366, 367, 368, 369, 614, 615, 616, 445, 0,
	370, 371, 0, 372, 373, 374, 375, 0, 0, 0,
	0, 376, 377, 378, 380, 0, 0, 379, 617, 618,
	0, 619, 0, 381, 382, 0, 620, 0, 383, 384,
	385, 0, 386, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 0, 393, 395, 394, 0, 396, 621, 0,
	397, 398, 0, 0, 399, 0, 0, 0, 400, 401,
	0, 0, 402, 403, 404, 405, 0, 406, 407, 409,
	412, 408, 410, 411, 413, 426, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 428, 0,
	427, 0, 429, 430, 431, 436, 438, 439, 434, 435,
	437, 440, 441, 433, 0, 432, 0, 0, 0, 442,
	443, 0, 622, 444, 623, 446, 447, 0, 0, 448,
	0, 0, 0, 450, 451, 452, 0, 0, 453, 454,
	624, 0, 455, 0, 625, 456, 457, 449, 458, 459,
	460, 461, 462, 463, 464, 465, 0, 466, 467, 626,
	468, 469, 470, 627, 471, 472, 473, 628, 474, 629,
	475, 476, 0, 477, 478, 0, 479, 480, 481, 482,
	483, 484, 485, 630, 486, 488, 487, 489, 0, 490,
	0, 491, 492, 0, 0, 0, 0, 493, 0, 495,
	496, 497, 494, 498, 499, 500, 501, 0, 502, 503,
	504, 0, 505, 506, 507, 508, 631, 509, 0, 510,
	511, 517, 518, 512, 513, 519, 520, 521, 522, 523,
	0, 525, 526, 524, 527, 528, 529, 0, 530, 531,
	514, 515, 532, 533, 0, 534, 535, 536, 537, 538,
	539, 632, 0, 540, 0, 541, 542, 543, 544, 516,
	545, 550, 633, 546, 547, 548, 549, 634, 552, 0,
	553, 554, 0, 551, 0, 555, 556, 557, 558, 559,
	560, 561, 341, 562, 0, 563, 635, 636, 637, 638,
	0, 572, 0, 564, 565, 566, 639, 567, 640, 0,
	568, 569, 570, 571, 0, 573, 574, 0, 0, 575,
	576, 577, 579, 580, 578, 581, 0, 582, 0, 0,
	583, 584, 585, 641, 642, 643, 0, 587, 586, 588,
	644, 1418, 0, 255, 0, 589, 590, 645, 591, 592,
	593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 263, 262, 264, 265, 266, 267, 0, 268, 269,
	0, 0, 0, 0, 0, 594, 0, 0, 0, 0,
	270, 271, 0, 272, 273, 274, 275, 276, 277, 595,
	596, 0, 278, 597, 279, 598, 0, 599, 280, 281,
	282, 283, 284, 285, 0, 0, 0, 286, 600, 601,
	602, 0, 287, 288, 603, 0, 0, 0, 289, 290,
	291, 292, 293, 294, 295, 0, 0, 297, 298, 299,
	296, 300, 0, 301, 0, 302, 303, 304, 305, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 0, 0,
	0, 0, 0, 0, 0, 313, 314, 315, 316, 0,
	317, 604, 605, 0, 321, 318, 319, 0, 322, 320,
	0, 323, 324, 325, 0, 0, 326, 327, 328, 0,
	329, 330, 0, 331, 332, 333, 0, 334, 335, 606,
	336, 337, 338, 340, 342, 339, 343, 344, 345, 346,
	607, 608, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 609, 0, 0, 0, 351, 0, 352,
	0, 0, 0, 353, 354, 610, 611, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 363, 612, 0, 613,
	364, 0, 365, 366, 367, 368, 369, 614, 615, 616,
	445, 0, 370, 371, 0, 372, 373, 374, 375, 0,
	0, 0, 0, 376, 377, 378, 380, 0, 0, 379,
	617, 618, 0, 619, 0, 381, 382, 0, 620, 0,
	383, 384, 385, 0, 386, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 0, 393, 395, 394, 0, 396,
	621, 0, 397, 398, 0, 0, 399, 0, 0, 0,
	400, 401, 0, 0, 402, 403, 404, 405, 0, 406,
	407, 409, 412, 408, 410, 411, 413, 426, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	428, 0, 427, 0, 429, 430, 431, 436, 438, 439,
	434, 435, 437, 440, 441, 433, 0, 432, 0, 0,
	0, 442, 443, 0, 622, 444, 623, 446, 447, 0,
	0, 448, 0, 0, 0, 450, 451, 452, 0, 0,
	453, 454, 624, 0, 455, 0, 625, 456, 457, 449,
	458, 459, 460, 461, 462, 463, 464, 465, 0, 466,
	467, 626, 468, 469, 470, 627, 471, 472, 473, 628,
	474, 629, 475, 476, 0, 477, 478, 0, 479, 480,
	481, 482, 483, 484, 485, 630, 486, 488, 487, 489,
	0, 490, 0, 491, 492, 0, 0, 0, 0, 493,
	0, 495, 496, 497, 494, 498, 499, 500, 501, 0,
	502, 503, 504, 0, 505, 506, 507, 508, 631, 509,
	0, 510, 511, 517, 518, 512, 513, 519, 520, 521,
	522, 523, 0, 525, 526, 524, 527, 528, 529, 0,
	530, 531, 514, 515, 532, 533, 0, 534, 535, 536,
	537, 538, 539, 632, 0, 540, 0, 541, 542, 543,
	544, 516, 545, 550, 633, 546, 547, 548, 549, 634,
	552, 0, 553, 554, 0, 551, 0, 555, 556, 557,
	558, 559, 560, 561, 341, 562, 0, 563, 635, 636,
	637, 638, 0, 572, 0, 564, 565, 566, 639, 567,
	640, 0, 568, 569, 570, 571, 0, 573, 574, 0,
	0, 575, 576, 577, 579, 580, 578, 581, 0, 582,
	0, 0, 583, 584, 585, 641, 642, 643, 0, 587,
	586, 588, 644, 1257, 0, 255, 0, 589, 590, 645,
	591, 592, 593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 263, 262, 264, 265, 266, 267, 0,
	268, 269, 0, 0, 0, 0, 0, 594, 0, 0,
	0, 0, 270, 271, 0, 272, 273, 274, 275, 276,
	277, 595, 596, 0, 278, 597, 279, 598, 0, 599,
	280, 281, 282, 283, 284, 285, 0, 0, 0, 286,
	600, 601, 602, 0, 287, 288, 603, 0, 0, 0,
	289, 290, 291, 292, 293, 294, 295, 0, 0, 297,
	298, 299, 296, 300, 0, 301, 0, 302, 303, 304,
	305, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	0, 0, 0, 0, 0, 0, 0, 313, 314, 315,
	316, 0, 317, 604, 605, 0, 321, 318, 319, 0,
	322, 320, 0, 323, 324, 325, 0, 0, 326, 327,
	328, 0, 329, 330, 0, 331, 332, 333, 0, 334,
	335, 606, 336, 337, 338, 340, 342, 339, 343, 344,
	345, 346, 607, 608, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 609, 0, 0, 0, 351,
	0, 352, 0, 0, 0, 353, 354, 610, 611, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 363, 612,
	0, 613, 364, 0, 365, 366, 367, 368, 369, 1256,
	615, 616, 445, 0, 370, 371, 0, 372, 373, 374,
	375, 0, 0, 0, 0, 376, 377, 378, 380, 0,
	0, 379, 617, 618, 0, 619, 0, 381, 382, 0,
	620, 0, 383, 384, 385, 0, 386, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 0, 393, 395, 394,
	0, 396, 621, 0, 397, 398, 0, 0, 399, 0,
	0, 0, 400, 401, 0, 0, 402, 403, 404, 405,
	0, 406, 407, 409, 412, 408, 410, 411, 413, 426,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 428, 0, 427, 0, 429, 430, 431, 436,
	438, 439, 434, 435, 437, 440, 441, 433, 0, 432,
	0, 0, 0, 442, 443, 0, 622, 444, 623, 446,
	447, 0, 0, 448, 0, 0, 0, 450, 451, 452,
	0, 0, 453, 454, 624, 0, 455, 0, 625, 456,
	457, 449, 458, 459, 460, 461, 462, 463, 464, 465,
	0, 466, 467, 626, 468, 469, 470, 627, 471, 472,
	473, 628, 474, 629, 475, 476, 0, 477, 478, 0,
	479, 480, 481, 482, 483, 484, 485, 630, 486, 488,
	487, 489, 0, 490, 0, 491, 492, 0, 0, 0,
	0, 493, 0, 495, 496, 497, 494, 498, 499, 500,
	501, 0, 502, 503, 504, 0, 505, 506, 507, 508,
	631, 509, 0, 510, 511, 517, 518, 512, 513, 519,
	520, 521, 522, 523, 0, 525, 526, 524, 527, 528,
	529, 0, 530, 531, 514, 515, 532, 533, 0, 534,
	535, 536, 537, 538, 539, 632, 0, 540, 0, 541,
	542, 543, 544, 516, 545, 550, 633, 546, 547, 548,
	549, 634, 552, 0, 553, 554, 0, 551, 0, 555,
	556, 557, 558, 559, 560, 561, 341, 562, 0, 563,
	635, 636, 637, 638, 0, 572, 0, 564, 565, 566,
	639, 567, 640, 0, 568, 569, 570, 571, 0, 573,
	574, 0, 0, 575, 576, 577, 579, 580, 578, 581,
	0, 582, 0, 0, 583, 584, 585, 641, 642, 643,
	0, 587, 586, 588, 644, 1248, 0, 255, 0, 589,
	590, 645, 591, 592, 593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 594,
	0, 0, 0, 0, 270, 271, 0, 272, 273, 274,
	275, 276, 277, 595, 596, 0, 278, 597, 279, 598,
	0, 599, 280, 281, 282, 283, 284, 285, 0, 0,
	0, 286, 600, 601, 602, 0, 287, 288, 603, 0,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 0, 0, 0, 0, 0, 0, 0, 313,
	314, 315, 316, 0, 317, 604, 605, 0, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 327, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 606, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 607, 608, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 609, 0, 0,
	0, 351, 0, 352, 0, 0, 0, 353, 354, 610,
	611, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 612, 0, 613, 364, 0, 365, 366, 367, 368,
	369, 1247, 615, 616, 445, 0, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 0, 376, 377, 378,
	380, 0, 0, 379, 617, 618, 0, 619, 0, 381,
	382, 0, 620, 0, 383, 384, 385, 0, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 621, 0, 397, 398, 0, 0,
	399, 0, 0, 0, 400, 401, 0, 0, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 0, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	0, 432, 0, 0, 0, 442, 443, 0, 622, 444,
	623, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 0, 455, 0,
	625, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 628, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 630,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 0, 505, 506,
	507, 508, 631, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 0, 530, 531, 514, 515, 532, 533,
	0, 534, 535, 536, 537, 538, 539, 632, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 633, 546,
	547, 548, 549, 634, 552, 0, 553, 554, 0, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 635, 636, 637, 638, 0, 572, 0, 564,
	565, 566, 639, 567, 640, 0, 568, 569, 570, 571,
	0, 573, 574, 0, 0, 575, 576, 577, 579, 580,
	578, 581, 0, 582, 0, 0, 583, 584, 585, 641,
	642, 643, 255, 587, 586, 588, 644, 0, 0, 0,
	0, 589, 590, 645, 591, 592, 593, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 1201, 268, 269, 0,
	0, 0, 0, 0, 594, 0, 0, 0, 0, 270,
	271, 0, 272, 273, 274, 275, 276, 277, 595, 596,
	0, 278, 597, 279, 598, 0, 599, 280, 281, 282,
	283, 284, 285, 0, 0, 0, 286, 600, 601, 602,
	0, 287, 288, 603, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 0, 0, 0,
	0, 0, 0, 0, 313, 314, 315, 316, 0, 317,
	604, 605, 0, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 327, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 606, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 607,
	608, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 609, 0, 0, 0, 351, 0, 352, 0,
	0, 0, 353, 354, 610, 611, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 612, 0, 613, 364,
	0, 365, 366, 367, 368, 369, 614, 615, 616, 445,
	0, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 0, 376, 377, 378, 380, 0, 0, 379, 617,
	618, 0, 619, 0, 381, 382, 0, 620, 0, 383,
	384, 385, 0, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 621,
	0, 397, 398, 0, 0, 399, 0, 0, 0, 400,
	401, 0, 0, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 0, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 0, 432, 0, 0, 0,
	442, 443, 0, 622, 444, 623, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 0, 455, 0, 625, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 628, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 630, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 0, 505, 506, 507, 508, 631, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 0, 530,
	531, 514, 515, 532, 533, 0, 534, 535, 536, 537,
	538, 539, 632, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 633, 546, 547, 548, 549, 634, 552,
	0, 553, 554, 0, 551, 0, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 635, 636, 637,
	638, 0, 572, 0, 564, 565, 566, 639, 567, 640,
	0, 568, 569, 570, 571, 0, 573, 574, 0, 0,
	575, 576, 577, 579, 580, 578, 581, 0, 582, 0,
	0, 583, 584, 585, 641, 642, 643, 255, 587, 586,
	588, 644, 0, 0, 0, 0, 589, 590, 645, 591,
	592, 593, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 740, 268, 269, 0, 0, 0, 0, 0, 594,
	0, 0, 0, 0, 270, 271, 0, 272, 273, 274,
	275, 276, 277, 595, 596, 0, 278, 597, 279, 598,
	0, 599, 280, 281, 282, 283, 284, 285, 0, 0,
	0, 286, 600, 601, 602, 0, 287, 288, 603, 0,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 0, 0, 0, 0, 0, 0, 0, 313,
	314, 315, 316, 0, 317, 604, 605, 0, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 327, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 606, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 607, 608, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 609, 0, 0,
	0, 351, 0, 352, 0, 0, 0, 353, 354, 610,
	611, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 612, 0, 613, 364, 0, 365, 366, 367, 368,
	369, 614, 615, 616, 445, 0, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 0, 376, 377, 378,
	380, 0, 0, 379, 617, 618, 0, 619, 0, 381,
	382, 0, 620, 0, 383, 384, 385, 0, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 621, 0, 397, 398, 0, 0,
	399, 0, 0, 0, 400, 401, 0, 0, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 0, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	0, 432, 0, 0, 0, 442, 443, 0, 622, 444,
	623, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 0, 455, 0,
	625, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 628, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 630,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 0, 505, 506,
	507, 508, 631, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 0, 530, 531, 514, 515, 532, 533,
	0, 534, 535, 536, 537, 538, 539, 632, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 633, 546,
	547, 548, 549, 634, 552, 0, 553, 554, 0, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 635, 636, 637, 638, 0, 572, 0, 564,
	565, 566, 639, 567, 640, 0, 568, 569, 570, 571,
	0, 573, 574, 0, 0, 575, 576, 577, 579, 580,
	578, 581, 0, 582, 0, 0, 583, 584, 585, 641,
	642, 643, 0, 587, 586, 588, 644, 734, 0, 255,
	0, 589, 590, 645, 591, 592, 593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 263, 262, 264,
	265, 266, 267, 0, 268, 269, 0, 0, 0, 0,
	0, 594, 0, 0, 0, 0, 270, 271, 0, 272,
	273, 274, 275, 276, 277, 595, 596, 0, 278, 597,
	279, 598, 0, 599, 280, 281, 282, 283, 284, 285,
	0, 0, 0, 286, 600, 601, 602, 0, 287, 724,
	603, 0, 0, 0, 289, 290, 291, 292, 293, 294,
	295, 0, 0, 297, 298, 299, 296, 300, 0, 722,
	0, 302, 303, 304, 305, 306, 307, 0, 308, 309,
	310, 0, 311, 312, 0, 0, 0, 0, 0, 0,
	0, 313, 314, 315, 316, 0, 317, 604, 605, 0,
	321, 318, 319, 0, 322, 320, 0, 323, 324, 325,
	0, 0, 326, 327, 328, 0, 329, 330, 0, 331,
	332, 333, 0, 334, 335, 606, 336, 337, 338, 340,
	342, 339, 343, 344, 345, 346, 607, 608, 347, 0,
	0, 0, 0, 0, 0, 0, 348, 349, 350, 609,
	0, 0, 0, 351, 0, 352, 0, 0, 0, 353,
	354, 610, 611, 355, 356, 357, 358, 359, 360, 361,
	362, 0, 363, 612, 0, 613, 364, 0, 365, 366,
	367, 368, 369, 614, 615, 616, 445, 0, 370, 371,
	0, 372, 373, 374, 375, 0, 0, 0, 0, 376,
	377, 378, 380, 0, 0, 379, 617, 618, 0, 619,
	0, 381, 382, 0, 620, 0, 383, 384, 385, 0,
	386, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	0, 393, 395, 394, 0, 396, 621, 0, 397, 398,
	0, 0, 399, 0, 0, 0, 400, 723, 0, 0,
	402, 403, 404, 405, 0, 406, 407, 409, 412, 408,
	410, 411, 413, 426, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 428, 0, 735, 0,
	429, 430, 431, 436, 438, 439, 434, 435, 437, 440,
	441, 433, 0, 432, 0, 0, 0, 442, 443, 0,
	622, 444, 623, 446, 447, 0, 0, 448, 0, 0,
	0, 450, 451, 452, 0, 0, 453, 454, 624, 0,
	455, 0, 625, 456, 457, 449, 458, 459, 460, 461,
	462, 463, 464, 465, 0, 466, 467, 626, 468, 469,
	470, 627, 471, 472, 473, 628, 474, 629, 475, 476,
	0, 477, 478, 0, 479, 480, 481, 482, 483, 484,
	485, 630, 486, 488, 487, 489, 0, 490, 0, 491,
	492, 0, 0, 0, 0, 493, 0, 495, 496, 497,
	494, 498, 499, 500, 501, 0, 502, 503, 504, 0,
	505, 506, 507, 508, 725, 509, 0, 510, 511, 517,
	518, 512, 513, 731, 520, 521, 522, 523, 0, 525,
	526, 524, 527, 726, 529, 0, 530, 531, 514, 515,
	532, 533, 0, 534, 535, 536, 537, 538, 539, 632,
	0, 540, 0, 541, 542, 543, 544, 516, 545, 550,
	633, 546, 547, 548, 549, 634, 552, 0, 553, 554,
	0, 551, 0, 555, 556, 557, 558, 559, 560, 561,
	341, 562, 0, 563, 730, 636, 637, 638, 0, 572,
	0, 564, 728, 566, 639, 567, 640, 0, 568, 569,
	570, 571, 0, 573, 574, 0, 0, 575, 576, 577,
	579, 580, 578, 581, 0, 582, 0, 0, 583, 584,
	585, 641, 642, 643, 0, 587, 586, 588, 644, 716,
	0, 255, 0, 589, 590, 645, 591, 592, 593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 263,
	262, 264, 265, 266, 267, 0, 268, 269, 0, 0,
	0, 0, 0, 594, 0, 0, 0, 0, 270, 271,
	0, 272, 273, 274, 275, 276, 277, 595, 596, 0,
	278, 597, 279, 598, 0, 599, 280, 281, 282, 283,
	284, 285, 0, 0, 0, 286, 600, 601, 602, 0,
	287, 288, 603, 0, 0, 0, 289, 290, 291, 292,
	293, 294, 295, 0, 0, 297, 298, 299, 296, 300,
	0, 301, 0, 302, 303, 304, 305, 306, 307, 0,
	308, 309, 310, 0, 311, 312, 0, 0, 0, 0,
	0, 0, 0, 313, 314, 315, 316, 0, 317, 604,
	605, 0, 321, 318, 319, 0, 322, 320, 0, 323,
	324, 325, 0, 0, 326, 327, 328, 0, 329, 330,
	0, 331, 332, 333, 0, 334, 335, 606, 336, 337,
	338, 340, 342, 339, 343, 344, 345, 346, 607, 608,
	347, 0, 0, 0, 0, 0, 0, 0, 348, 349,
	350, 609, 0, 0, 0, 351, 0, 352, 0, 0,
	0, 353, 354, 610, 611, 355, 356, 357, 358, 359,
	360, 361, 362, 0, 363, 612, 0, 613, 364, 0,
	365, 366, 367, 368, 369, 614, 615, 616, 445, 0,
	370, 371, 0, 372, 373, 374, 375, 0, 0, 0,
	0, 376, 377, 378, 380, 0, 0, 379, 617, 618,
	0, 619, 0, 381, 382, 0, 620, 0, 383, 384,
	385, 0, 386, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 0, 393, 395, 394, 0, 396, 621, 0,
	397, 398, 0, 0, 399, 0, 0, 0, 400, 401,
	0, 0, 402, 403, 404, 405, 0, 406, 407, 409,
	412, 408, 410, 411, 413, 426, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 428, 0,
	427, 0, 429, 430, 431, 436, 438, 439, 434, 435,
	437, 440, 441, 433, 0, 432, 0, 0, 0, 442,
	443, 0, 622, 444, 623, 446, 447, 0, 0, 448,
	0, 0, 0, 450, 451, 452, 0, 0, 453, 454,
	624, 0, 455, 0, 625, 456, 457, 449, 458, 459,
	460, 461, 462, 463, 464, 465, 0, 466, 467, 626,
	468, 469, 470, 627, 471, 472, 473, 628, 474, 629,
	475, 476, 0, 477, 478, 0, 479, 480, 481, 482,
	483, 484, 485, 630, 486, 488, 487, 489, 0, 490,
	0, 491, 492, 0, 0, 0, 0, 493, 0, 495,
	496, 497, 494, 498, 499, 500, 501, 0, 502, 503,
	504, 0, 505, 506, 507, 508, 631, 509, 0, 510,
	511, 717, 518, 512, 513, 519, 520, 521, 522, 523,
	0, 525, 526, 524, 527, 528, 529, 0, 530, 531,
	514, 515, 532, 533, 0, 534, 535, 536, 537, 538,
	539, 632, 0, 540, 0, 541, 542, 543, 544, 516,
	545, 550, 633, 546, 547, 548, 549, 634, 552, 0,
	553, 554, 0, 551, 0, 555, 556, 557, 558, 559,
	560, 561, 341, 562, 0, 563, 635, 636, 637, 638,
	0, 572, 0, 564, 565, 566, 639, 567, 640, 0,
	568, 569, 570, 571, 0, 573, 574, 0, 0, 575,
	576, 577, 579, 580, 578, 581, 0, 582, 0, 0,
	583, 584, 585, 641, 642, 643, 0, 587, 586, 588,
	644, 679, 0, 255, 0, 589, 590, 645, 591, 592,
	593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 263, 262, 264, 265, 266, 267, 0, 268, 269,
	0, 0, 0, 0, 0, 594, 0, 0, 0, 0,
	270, 271, 0, 272, 273, 274, 275, 276, 277, 595,
	596, 0, 278, 597, 279, 598, 0, 599, 280, 281,
	282, 283, 284, 285, 0, 0, 0, 286, 600, 601,
	602, 0, 287, 288, 603, 0, 0, 0, 289, 290,
	291, 292, 293, 294, 295, 0, 0, 297, 298, 299,
	296, 300, 0, 301, 0, 302, 303, 304, 305, 306,
	307, 0, 308, 309, 310, 0, 311, 312, 0, 0,
	0, 0, 0, 0, 0, 313, 314, 315, 316, 0,
	317, 604, 605, 0, 321, 318, 319, 0, 322, 320,
	0, 323, 324, 325, 0, 0, 326, 327, 328, 0,
	329, 330, 0, 331, 332, 333, 0, 334, 335, 606,
	336, 337, 338, 340, 342, 339, 343, 344, 345, 346,
	607, 608, 347, 0, 0, 0, 0, 0, 0, 0,
	348, 349, 350, 609, 0, 0, 0, 351, 0, 352,
	0, 0, 0, 353, 354, 610, 611, 355, 356, 357,
	358, 359, 360, 361, 362, 0, 363, 612, 0, 613,
	364, 0, 365, 366, 367, 368, 369, 614, 615, 616,
	445, 0, 370, 371, 0, 372, 373, 374, 375, 0,
	0, 0, 0, 376, 377, 378, 380, 0, 0, 379,
	617, 618, 0, 619, 0, 381, 382, 0, 620, 0,
	383, 384, 385, 0, 386, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 0, 393, 395, 394, 0, 396,
	621, 0, 397, 398, 0, 0, 399, 0, 0, 0,
	400, 401, 0, 0, 402, 403, 404, 405, 0, 406,
	407, 409, 412, 408, 410, 411, 413, 426, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	428, 0, 427, 0, 429, 430, 431, 436, 438, 439,
	434, 435, 437, 440, 441, 433, 0, 432, 0, 0,
	0, 442, 443, 0, 622, 444, 623, 446, 447, 0,
	0, 448, 0, 0, 0, 450, 451, 452, 0, 0,
	453, 454, 624, 0, 455, 0, 625, 456, 457, 449,
	458, 459, 460, 461, 462, 463, 464, 465, 0, 466,
	467, 626, 468, 469, 470, 627, 471, 472, 473, 628,
	474, 629, 475, 476, 0, 477, 478, 0, 479, 480,
	481, 482, 483, 484, 485, 630, 486, 488, 487, 489,
	0, 490, 0, 491, 492, 0, 0, 0, 0, 493,
	0, 495, 496, 497, 494, 498, 499, 500, 501, 0,
	502, 503, 504, 0, 505, 506, 507, 508, 631, 509,
	0, 510, 511, 517, 518, 512, 513, 519, 520, 521,
	522, 523, 0, 525, 526, 524, 527, 528, 529, 0,
	530, 531, 514, 515, 532, 533, 0, 534, 535, 536,
	537, 538, 539, 632, 0, 540, 0, 541, 542, 543,
	544, 516, 545, 550, 633, 546, 547, 548, 549, 634,
	552, 0, 553, 554, 0, 551, 0, 555, 556, 557,
	558, 559, 560, 561, 341, 562, 0, 563, 635, 636,
	637, 638, 0, 572, 0, 564, 565, 566, 639, 567,
	640, 0, 568, 569, 570, 571, 0, 573, 574, 0,
	0, 575, 576, 577, 579, 580, 578, 581, 0, 582,
	0, 0, 583, 584, 585, 641, 642, 643, 0, 587,
	586, 588, 644, 673, 0, 255, 0, 589, 590, 645,
	591, 592, 593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 263, 262, 264, 265, 266, 267, 0,
	268, 269, 0, 0, 0, 0, 0, 594, 0, 0,
	0, 0, 270, 271, 0, 272, 273, 274, 275, 276,
	277, 595, 596, 0, 278, 597, 279, 598, 0, 599,
	280, 281, 282, 283, 284, 285, 0, 0, 0, 286,
	600, 601, 602, 0, 287, 288, 603, 0, 0, 0,
	289, 290, 291, 292, 293, 294, 295, 0, 0, 297,
	298, 299, 296, 300, 0, 301, 0, 302, 303, 304,
	305, 306, 307, 0, 308, 309, 310, 0, 311, 312,
	0, 0, 0, 0, 0, 0, 0, 313, 314, 315,
	316, 0, 317, 604, 605, 0, 321, 318, 319, 0,
	322, 320, 0, 323, 324, 325, 0, 0, 326, 327,
	328, 0, 329, 330, 0, 331, 332, 333, 0, 334,
	335, 606, 336, 337, 338, 340, 342, 339, 343, 344,
	345, 346, 607, 608, 347, 0, 0, 0, 0, 0,
	0, 0, 348, 349, 350, 609, 0, 0, 0, 351,
	0, 352, 0, 0, 0, 353, 354, 610, 611, 355,
	356, 357, 358, 359, 360, 361, 362, 0, 363, 612,
	0, 613, 364, 0, 365, 366, 367, 368, 369, 614,
	615, 616, 445, 0, 370, 371, 0, 372, 373, 374,
	375, 0, 0, 0, 0, 376, 377, 378, 380, 0,
	0, 379, 617, 618, 0, 619, 0, 381, 382, 0,
	620, 0, 383, 384, 385, 0, 386, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 0, 393, 395, 394,
	0, 396, 621, 0, 397, 398, 0, 0, 399, 0,
	0, 0, 400, 401, 0, 0, 402, 403, 404, 405,
	0, 406, 407, 409, 412, 408, 410, 411, 413, 426,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 428, 0, 427, 0, 429, 430, 431, 436,
	438, 439, 434, 435, 437, 440, 441, 433, 0, 432,
	0, 0, 0, 442, 443, 0, 622, 444, 623, 446,
	447, 0, 0, 448, 0, 0, 0, 450, 451, 452,
	0, 0, 453, 454, 624, 0, 455, 0, 625, 456,
	457, 449, 458, 459, 460, 461, 462, 463, 464, 465,
	0, 466, 467, 626, 468, 469, 470, 627, 471, 472,
	473, 628, 474, 629, 475, 476, 0, 477, 478, 0,
	479, 480, 481, 482, 483, 484, 485, 630, 486, 488,
	487, 489, 0, 490, 0, 491, 492, 0, 0, 0,
	0, 493, 0, 495, 496, 497, 494, 498, 499, 500,
	501, 0, 502, 503, 504, 0, 505, 506, 507, 508,
	631, 509, 0, 510, 511, 517, 518, 512, 513, 519,
	520, 521, 522, 523, 0, 525, 526, 524, 527, 528,
	529, 0, 530, 531, 514, 515, 532, 533, 0, 534,
	535, 536, 537, 538, 539, 632, 0, 540, 0, 541,
	542, 543, 544, 516, 545, 550, 633, 546, 547, 548,
	549, 634, 552, 0, 553, 554, 0, 551, 0, 555,
	556, 557, 558, 559, 560, 561, 341, 562, 0, 563,
	635, 636, 637, 638, 0, 572, 0, 564, 565, 566,
	639, 567, 640, 0, 568, 569, 570, 571, 0, 573,
	574, 0, 0, 575, 576, 577, 579, 580, 578, 581,
	0, 582, 0, 0, 583, 584, 585, 641, 642, 643,
	0, 587, 586, 588, 644, 651, 0, 255, 0, 589,
	590, 645, 591, 592, 593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 594,
	0, 0, 0, 0, 270, 271, 0, 272, 273, 274,
	275, 276, 277, 595, 596, 0, 278, 597, 279, 598,
	0, 599, 280, 281, 282, 283, 284, 285, 0, 0,
	0, 286, 600, 601, 602, 0, 287, 288, 603, 0,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 0, 0, 0, 0, 0, 0, 0, 313,
	314, 315, 316, 0, 317, 604, 605, 0, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 327, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 606, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 607, 608, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 609, 0, 0,
	0, 351, 0, 352, 0, 0, 0, 353, 354, 610,
	611, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 612, 0, 613, 364, 0, 365, 366, 367, 368,
	369, 614, 615, 616, 445, 0, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 0, 376, 377, 378,
	380, 0, 0, 379, 617, 618, 0, 619, 0, 381,
	382, 0, 620, 0, 383, 384, 385, 0, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 621, 0, 397, 398, 0, 0,
	399, 0, 0, 0, 400, 401, 0, 0, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 0, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	0, 432, 0, 0, 0, 442, 443, 0, 622, 444,
	623, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 0, 455, 0,
	625, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 628, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 630,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 0, 505, 506,
	507, 508, 631, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 0, 530, 531, 514, 515, 532, 533,
	0, 534, 535, 536, 537, 538, 539, 632, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 633, 546,
	547, 548, 549, 634, 552, 0, 553, 554, 0, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 635, 636, 637, 638, 0, 572, 0, 564,
	565, 566, 639, 567, 640, 0, 568, 569, 570, 571,
	0, 573, 574, 0, 0, 575, 576, 577, 579, 580,
	578, 581, 0, 582, 0, 0, 583, 584, 585, 641,
	642, 643, 255, 587, 586, 588, 644, 0, 0, 0,
	0, 589, 590, 645, 591, 592, 593, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 0,
	0, 0, 0, 0, 594, 0, 0, 0, 0, 270,
	271, 0, 272, 273, 274, 275, 276, 277, 595, 596,
	0, 278, 597, 279, 598, 0, 599, 280, 281, 282,
	283, 284, 285, 0, 0, 0, 286, 600, 601, 602,
	0, 287, 288, 603, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 0, 0, 0,
	0, 0, 0, 0, 313, 314, 315, 316, 0, 317,
	604, 605, 0, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 327, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 606, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 607,
	608, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 609, 0, 0, 0, 351, 0, 352, 0,
	0, 0, 353, 354, 610, 611, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 612, 0, 613, 364,
	0, 365, 366, 367, 368, 369, 614, 615, 616, 445,
	0, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 0, 376, 377, 378, 380, 0, 0, 379, 617,
	618, 0, 619, 0, 381, 382, 0, 620, 0, 383,
	384, 385, 0, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 621,
	0, 397, 398, 0, 0, 399, 0, 0, 0, 400,
	401, 0, 0, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 0, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 0, 432, 0, 0, 0,
	442, 443, 0, 622, 444, 623, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 0, 455, 0, 625, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 628, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 630, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 0, 505, 506, 507, 508, 631, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 0, 530,
	531, 514, 515, 532, 533, 0, 534, 535, 536, 537,
	538, 539, 632, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 633, 546, 547, 548, 549, 634, 552,
	0, 553, 554, 0, 551, 0, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 635, 636, 637,
	638, 0, 572, 0, 564, 565, 566, 639, 567, 640,
	0, 568, 569, 570, 571, 0, 573, 574, 0, 0,
	575, 576, 577, 579, 580, 578, 581, 0, 582, 0,
	0, 583, 584, 585, 641, 642, 643, 255, 587, 586,
	588, 644, 0, 0, 0, 0, 589, 590, 645, 591,
	592, 593, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 594,
	0, 0, 0, 0, 270, 271, 0, 272, 273, 274,
	275, 276, 277, 595, 596, 0, 278, 597, 279, 598,
	0, 599, 280, 281, 282, 283, 284, 285, 0, 0,
	0, 286, 600, 601, 602, 0, 287, 288, 603, 0,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 0, 0, 0, 0, 0, 0, 0, 313,
	314, 315, 316, 0, 317, 604, 605, 0, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 327, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 606, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 607, 608, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 609, 0, 0,
	0, 351, 0, 352, 0, 0, 0, 353, 354, 610,
	611, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 612, 0, 613, 364, 0, 365, 366, 367, 368,
	369, 3349, 615, 616, 445, 0, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 0, 376, 377, 378,
	380, 0, 0, 379, 617, 618, 0, 619, 0, 381,
	382, 0, 620, 0, 383, 384, 385, 0, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 621, 0, 397, 398, 0, 0,
	399, 0, 0, 0, 400, 401, 0, 0, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 0, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	0, 432, 0, 0, 0, 442, 443, 0, 622, 444,
	623, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 0, 455, 0,
	625, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 628, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 630,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 0, 505, 506,
	507, 508, 631, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 0, 530, 531, 514, 515, 532, 533,
	0, 534, 535, 536, 537, 538, 539, 632, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 633, 546,
	547, 548, 549, 634, 552, 0, 553, 554, 0, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 635, 636, 637, 638, 0, 572, 0, 564,
	565, 566, 639, 567, 640, 0, 568, 569, 570, 571,
	0, 573, 574, 0, 0, 575, 576, 577, 579, 580,
	578, 581, 0, 582, 0, 0, 583, 584, 585, 641,
	642, 643, 255, 587, 586, 588, 644, 0, 0, 0,
	0, 589, 590, 645, 591, 592, 593, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 0,
	0, 0, 0, 0, 594, 0, 0, 0, 0, 270,
	271, 0, 272, 273, 274, 275, 276, 277, 595, 596,
	0, 278, 597, 279, 598, 0, 599, 280, 281, 282,
	283, 284, 285, 0, 0, 0, 286, 600, 601, 602,
	0, 287, 288, 603, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 0, 0, 0,
	0, 0, 0, 0, 313, 314, 315, 316, 0, 317,
	604, 605, 0, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 327, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 606, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 607,
	608, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 609, 0, 0, 0, 351, 0, 352, 0,
	0, 0, 353, 354, 610, 611, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 612, 0, 613, 364,
	0, 365, 366, 367, 368, 369, 3297, 615, 616, 445,
	0, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 0, 376, 377, 378, 380, 0, 0, 379, 617,
	618, 0, 619, 0, 381, 382, 0, 620, 0, 383,
	384, 385, 0, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 621,
	0, 397, 398, 0, 0, 399, 0, 0, 0, 400,
	401, 0, 0, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 0, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 0, 432, 0, 0, 0,
	442, 443, 0, 622, 444, 623, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 0, 455, 0, 625, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 628, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 630, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 0, 505, 506, 507, 508, 631, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 0, 530,
	531, 514, 515, 532, 533, 0, 534, 535, 536, 537,
	538, 539, 632, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 633, 546, 547, 548, 549, 634, 552,
	0, 553, 554, 0, 551, 0, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 635, 636, 637,
	638, 0, 572, 0, 564, 565, 566, 639, 567, 640,
	0, 568, 569, 570, 571, 0, 573, 574, 0, 0,
	575, 576, 577, 579, 580, 578, 581, 0, 582, 0,
	0, 583, 584, 585, 641, 642, 643, 255, 587, 586,
	588, 644, 0, 0, 0, 0, 589, 590, 645, 591,
	592, 593, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 594,
	0, 0, 0, 0, 270, 271, 0, 272, 273, 274,
	275, 276, 277, 595, 596, 0, 278, 597, 279, 598,
	0, 599, 280, 281, 282, 283, 284, 285, 0, 0,
	0, 286, 600, 601, 602, 0, 287, 288, 603, 0,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 0, 0, 0, 0, 0, 0, 0, 313,
	314, 315, 316, 0, 317, 604, 605, 0, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 327, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 606, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 607, 608, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 609, 0, 0,
	0, 351, 0, 352, 0, 0, 0, 353, 354, 610,
	611, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 612, 0, 613, 364, 0, 365, 366, 367, 368,
	369, 3233, 615, 616, 445, 0, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 0, 376, 377, 378,
	380, 0, 0, 379, 617, 618, 0, 619, 0, 381,
	382, 0, 620, 0, 383, 384, 385, 0, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 621, 0, 397, 398, 0, 0,
	399, 0, 0, 0, 400, 401, 0, 0, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 0, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	0, 432, 0, 0, 0, 442, 443, 0, 622, 444,
	623, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 0, 455, 0,
	625, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 628, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 630,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 0, 505, 506,
	507, 508, 631, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 0, 530, 531, 514, 515, 532, 533,
	0, 534, 535, 536, 537, 538, 539, 632, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 633, 546,
	547, 548, 549, 634, 552, 0, 553, 554, 0, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 635, 636, 637, 638, 0, 572, 0, 564,
	565, 566, 639, 567, 640, 0, 568, 569, 570, 571,
	0, 573, 574, 0, 0, 575, 576, 577, 579, 580,
	578, 581, 0, 582, 0, 0, 583, 584, 585, 641,
	642, 643, 255, 587, 586, 588, 644, 0, 0, 0,
	0, 589, 590, 645, 591, 592, 593, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 0,
	0, 0, 0, 0, 594, 0, 0, 0, 0, 270,
	271, 0, 272, 273, 274, 275, 276, 277, 595, 596,
	0, 278, 597, 279, 598, 0, 599, 280, 281, 282,
	283, 284, 285, 0, 0, 0, 286, 600, 601, 602,
	0, 287, 288, 603, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 0, 0, 0,
	0, 0, 0, 0, 313, 314, 315, 316, 0, 317,
	604, 605, 0, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 327, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 606, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 607,
	608, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 609, 0, 0, 0, 351, 0, 352, 0,
	0, 0, 353, 354, 610, 611, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 612, 0, 613, 364,
	0, 365, 366, 367, 368, 369, 3231, 615, 616, 445,
	0, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 0, 376, 377, 378, 380, 0, 0, 379, 617,
	618, 0, 619, 0, 381, 382, 0, 620, 0, 383,
	384, 385, 0, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 621,
	0, 397, 398, 0, 0, 399, 0, 0, 0, 400,
	401, 0, 0, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 0, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 0, 432, 0, 0, 0,
	442, 443, 0, 622, 444, 623, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 0, 455, 0, 625, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 628, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 630, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 0, 505, 506, 507, 508, 631, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 0, 530,
	531, 514, 515, 532, 533, 0, 534, 535, 536, 537,
	538, 539, 632, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 633, 546, 547, 548, 549, 634, 552,
	0, 553, 554, 0, 551, 0, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 635, 636, 637,
	638, 0, 572, 0, 564, 565, 566, 639, 567, 640,
	0, 568, 569, 570, 571, 0, 573, 574, 0, 0,
	575, 576, 577, 579, 580, 578, 581, 0, 582, 0,
	0, 583, 584, 585, 641, 642, 643, 255, 587, 586,
	588, 644, 0, 0, 0, 0, 589, 590, 645, 591,
	592, 593, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 594,
	0, 0, 0, 0, 270, 271, 0, 272, 273, 274,
	275, 276, 277, 595, 596, 0, 278, 597, 279, 598,
	0, 599, 280, 281, 282, 283, 284, 285, 0, 0,
	0, 286, 600, 601, 602, 0, 287, 288, 603, 0,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 0, 0, 0, 0, 0, 0, 0, 313,
	314, 315, 316, 0, 317, 604, 605, 0, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 327, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 606, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 607, 608, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 609, 0, 0,
	0, 351, 0, 352, 0, 0, 0, 353, 354, 610,
	611, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 612, 0, 613, 364, 0, 365, 366, 367, 368,
	369, 3216, 615, 616, 445, 0, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 0, 376, 377, 378,
	380, 0, 0, 379, 617, 618, 0, 619, 0, 381,
	382, 0, 620, 0, 383, 384, 385, 0, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 621, 0, 397, 398, 0, 0,
	399, 0, 0, 0, 400, 401, 0, 0, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 0, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	0, 432, 0, 0, 0, 442, 443, 0, 622, 444,
	623, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 0, 455, 0,
	625, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 628, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 630,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 0, 505, 506,
	507, 508, 631, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 0, 530, 531, 514, 515, 532, 533,
	0, 534, 535, 536, 537, 538, 539, 632, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 633, 546,
	547, 548, 549, 634, 552, 0, 553, 554, 0, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 635, 636, 637, 638, 0, 572, 0, 564,
	565, 566, 639, 567, 640, 0, 568, 569, 570, 571,
	0, 573, 574, 0, 0, 575, 576, 577, 579, 580,
	578, 581, 0, 582, 0, 0, 583, 584, 585, 641,
	642, 643, 255, 587, 586, 588, 644, 0, 0, 0,
	0, 589, 590, 645, 591, 592, 593, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 0,
	0, 0, 0, 0, 594, 0, 0, 0, 0, 270,
	271, 0, 272, 273, 274, 275, 276, 277, 595, 596,
	0, 278, 597, 279, 598, 0, 599, 280, 281, 282,
	283, 284, 285, 0, 0, 0, 286, 600, 601, 602,
	0, 287, 288, 603, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 0, 0, 0,
	0, 0, 0, 0, 313, 314, 315, 316, 0, 317,
	604, 605, 0, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 327, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 606, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 607,
	608, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 609, 0, 0, 0, 351, 0, 352, 0,
	0, 0, 353, 354, 610, 611, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 612, 0, 613, 364,
	0, 365, 366, 367, 368, 369, 2821, 615, 616, 445,
	0, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 0, 376, 377, 378, 380, 0, 0, 379, 617,
	618, 0, 619, 0, 381, 382, 0, 620, 0, 383,
	384, 385, 0, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 621,
	0, 397, 398, 0, 0, 399, 0, 0, 0, 400,
	401, 0, 0, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 0, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 0, 432, 0, 0, 0,
	442, 443, 0, 622, 444, 623, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 0, 455, 0, 625, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 628, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 630, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 0, 505, 506, 507, 508, 631, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 0, 530,
	531, 514, 515, 532, 533, 0, 534, 535, 536, 537,
	538, 539, 632, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 633, 546, 547, 548, 549, 634, 552,
	0, 553, 554, 0, 551, 0, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 635, 636, 637,
	638, 0, 572, 0, 564, 565, 566, 639, 567, 640,
	0, 568, 569, 570, 571, 0, 573, 574, 0, 0,
	575, 576, 577, 579, 580, 578, 581, 0, 582, 0,
	0, 583, 584, 585, 641, 642, 643, 255, 587, 586,
	588, 644, 0, 0, 0, 0, 589, 590, 645, 591,
	592, 593, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 594,
	0, 0, 0, 0, 270, 271, 0, 272, 273, 274,
	275, 276, 277, 595, 596, 0, 278, 597, 279, 598,
	0, 599, 280, 281, 282, 283, 284, 285, 0, 0,
	0, 286, 600, 601, 602, 0, 287, 288, 603, 0,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 0, 0, 0, 0, 0, 0, 0, 313,
	314, 315, 316, 0, 317, 604, 605, 0, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 327, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 606, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 607, 608, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 609, 0, 0,
	0, 351, 0, 352, 0, 0, 0, 353, 354, 610,
	611, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 612, 0, 613, 364, 0, 365, 366, 367, 368,
	369, 614, 615, 616, 445, 0, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 0, 376, 377, 378,
	380, 0, 0, 379, 617, 618, 0, 619, 0, 381,
	382, 0, 620, 0, 383, 384, 385, 0, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 621, 0, 397, 398, 0, 0,
	399, 0, 0, 0, 400, 401, 0, 0, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 0, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	0, 432, 0, 0, 0, 442, 443, 0, 622, 444,
	623, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 0, 455, 0,
	625, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 628, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 630,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 0, 505, 506,
	507, 508, 631, 509, 0, 510, 511, 717, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 0, 530, 531, 514, 515, 532, 533,
	0, 534, 535, 536, 537, 538, 539, 632, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 633, 546,
	547, 548, 549, 634, 552, 0, 553, 554, 0, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 635, 636, 637, 638, 0, 572, 0, 564,
	565, 566, 639, 567, 640, 0, 568, 569, 570, 571,
	0, 573, 574, 0, 0, 575, 576, 577, 579, 580,
	578, 581, 0, 582, 0, 0, 583, 584, 585, 641,
	642, 643, 255, 587, 586, 588, 644, 0, 0, 0,
	0, 589, 590, 645, 591, 592, 593, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 0,
	0, 0, 0, 0, 594, 0, 2169, 0, 0, 270,
	271, 0, 272, 273, 274, 275, 276, 277, 595, 596,
	0, 278, 597, 279, 598, 0, 599, 280, 281, 282,
	283, 284, 285, 0, 0, 0, 286, 600, 601, 602,
	0, 287, 288, 603, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 0, 0, 0,
	0, 0, 0, 0, 313, 314, 315, 316, 0, 317,
	604, 605, 0, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 327, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 606, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 607,
	608, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 609, 0, 0, 0, 351, 0, 352, 0,
	0, 0, 353, 354, 610, 611, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 612, 0, 613, 364,
	0, 365, 366, 367, 368, 369, 614, 615, 616, 445,
	0, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 0, 376, 377, 378, 380, 0, 0, 379, 617,
	618, 0, 619, 0, 381, 382, 0, 620, 0, 383,
	384, 385, 0, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 621,
	0, 397, 398, 0, 0, 399, 0, 0, 0, 400,
	401, 0, 0, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 0, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 0, 432, 0, 0, 0,
	442, 443, 0, 622, 444, 623, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 0, 455, 0, 625, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 628, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 630, 486, 488, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 0, 505, 506, 507, 508, 631, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 0, 0,
	531, 514, 515, 532, 533, 0, 534, 535, 536, 537,
	538, 539, 632, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 633, 546, 547, 548, 549, 634, 552,
	0, 553, 554, 0, 551, 0, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 635, 636, 637,
	638, 0, 572, 0, 564, 565, 566, 639, 567, 640,
	0, 568, 569, 570, 571, 0, 573, 574, 0, 0,
	575, 576, 577, 579, 580, 578, 581, 0, 582, 0,
	0, 583, 584, 585, 641, 642, 643, 255, 587, 586,
	588, 644, 0, 0, 0, 0, 589, 590, 645, 591,
	592, 593, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 594,
	0, 0, 0, 0, 270, 271, 0, 272, 273, 274,
	275, 276, 277, 595, 596, 0, 278, 597, 279, 598,
	0, 599, 280, 281, 282, 283, 284, 285, 0, 0,
	0, 286, 600, 601, 602, 0, 287, 288, 603, 0,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 0, 0, 0, 0, 0, 0, 0, 313,
	314, 315, 316, 0, 317, 604, 605, 0, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 327, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 606, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 607, 608, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 609, 0, 0,
	0, 351, 0, 352, 0, 0, 0, 353, 354, 610,
	611, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 612, 0, 613, 364, 0, 365, 366, 367, 368,
	369, 1219, 615, 616, 445, 0, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 0, 376, 377, 378,
	380, 0, 0, 379, 617, 618, 0, 619, 0, 381,
	382, 0, 620, 0, 383, 384, 385, 0, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 621, 0, 397, 398, 0, 0,
	399, 0, 0, 0, 400, 401, 0, 0, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 0, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	0, 432, 0, 0, 0, 442, 443, 0, 622, 444,
	623, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 0, 455, 0,
	625, 456, 457, 449, 458, 459, 460, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 628, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 483, 484, 485, 630,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 0, 505, 506,
	507, 508, 631, 509, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 0, 530, 531, 514, 515, 532, 533,
	0, 534, 535, 536, 537, 538, 539, 632, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 633, 546,
	547, 548, 549, 634, 552, 0, 553, 554, 0, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 635, 636, 637, 638, 0, 572, 0, 564,
	565, 566, 639, 567, 640, 0, 568, 569, 570, 571,
	0, 573, 574, 0, 0, 575, 576, 577, 579, 580,
	578, 581, 0, 582, 0, 0, 583, 584, 585, 641,
	642, 643, 255, 587, 586, 588, 644, 0, 0, 0,
	0, 589, 590, 645, 591, 592, 593, 0, 0, 261,
	263, 262, 264, 265, 266, 267, 0, 268, 269, 0,
	0, 0, 0, 0, 594, 0, 0, 0, 0, 270,
	271, 0, 272, 273, 274, 275, 276, 277, 595, 596,
	0, 278, 597, 279, 598, 0, 599, 280, 281, 282,
	283, 284, 285, 0, 0, 0, 286, 600, 601, 602,
	0, 287, 288, 603, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 295, 0, 0, 297, 298, 299, 296,
	300, 0, 301, 0, 302, 303, 304, 305, 306, 307,
	0, 308, 309, 310, 0, 311, 312, 0, 0, 0,
	0, 0, 0, 0, 313, 314, 315, 316, 0, 317,
	604, 605, 0, 321, 318, 319, 0, 322, 320, 0,
	323, 324, 325, 0, 0, 326, 327, 328, 0, 329,
	330, 0, 331, 332, 333, 0, 334, 335, 606, 336,
	337, 338, 340, 342, 339, 343, 344, 345, 346, 607,
	608, 347, 0, 0, 0, 0, 0, 0, 0, 348,
	349, 350, 609, 0, 0, 0, 351, 0, 352, 0,
	0, 0, 353, 354, 610, 611, 355, 356, 357, 358,
	359, 360, 361, 362, 0, 363, 612, 0, 613, 364,
	0, 365, 366, 367, 368, 369, 614, 615, 616, 445,
	0, 370, 371, 0, 372, 373, 374, 375, 0, 0,
	0, 0, 376, 377, 378, 380, 0, 0, 379, 617,
	618, 0, 619, 0, 381, 382, 0, 620, 0, 383,
	384, 385, 0, 386, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 0, 393, 395, 394, 0, 396, 621,
	0, 397, 398, 0, 0, 399, 0, 0, 0, 400,
	401, 0, 0, 402, 403, 404, 405, 0, 406, 407,
	409, 412, 408, 410, 411, 413, 426, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 428,
	0, 427, 0, 429, 430, 431, 436, 438, 439, 434,
	435, 437, 440, 441, 433, 0, 432, 0, 0, 0,
	442, 443, 0, 622, 444, 623, 446, 447, 0, 0,
	448, 0, 0, 0, 450, 451, 452, 0, 0, 453,
	454, 624, 0, 455, 0, 625, 456, 457, 449, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 466, 467,
	626, 468, 469, 470, 627, 471, 472, 473, 628, 474,
	629, 475, 476, 0, 477, 478, 0, 479, 480, 481,
	482, 483, 484, 485, 630, 486, 1153, 487, 489, 0,
	490, 0, 491, 492, 0, 0, 0, 0, 493, 0,
	495, 496, 497, 494, 498, 499, 500, 501, 0, 502,
	503, 504, 0, 505, 506, 507, 508, 631, 509, 0,
	510, 511, 517, 518, 512, 513, 519, 520, 521, 522,
	523, 0, 525, 526, 524, 527, 528, 529, 0, 530,
	531, 514, 515, 532, 533, 0, 534, 535, 536, 537,
	538, 539, 632, 0, 540, 0, 541, 542, 543, 544,
	516, 545, 550, 633, 546, 547, 548, 549, 634, 552,
	0, 553, 554, 0, 551, 0, 555, 556, 557, 558,
	559, 560, 561, 341, 562, 0, 563, 635, 636, 637,
	638, 0, 572, 0, 564, 565, 566, 639, 567, 640,
	0, 568, 569, 570, 571, 0, 573, 574, 0, 0,
	575, 576, 577, 579, 580, 578, 581, 0, 582, 0,
	0, 583, 584, 585, 641, 642, 643, 255, 587, 586,
	588, 644, 0, 0, 0, 0, 589, 590, 645, 591,
	592, 593, 0, 0, 261, 263, 262, 264, 265, 266,
	267, 0, 268, 269, 0, 0, 0, 0, 0, 594,
	0, 0, 0, 0, 270, 271, 0, 272, 273, 274,
	275, 276, 277, 595, 596, 0, 278, 597, 279, 598,
	0, 599, 280, 281, 282, 283, 284, 285, 0, 0,
	0, 286, 600, 601, 602, 0, 287, 288, 603, 0,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 0,
	0, 297, 298, 299, 296, 300, 0, 301, 0, 302,
	303, 304, 305, 306, 307, 0, 308, 309, 310, 0,
	311, 312, 0, 0, 0, 0, 0, 0, 0, 313,
	314, 315, 316, 0, 317, 604, 605, 0, 321, 318,
	319, 0, 322, 320, 0, 323, 324, 325, 0, 0,
	326, 327, 328, 0, 329, 330, 0, 331, 332, 333,
	0, 334, 335, 606, 336, 337, 338, 340, 342, 339,
	343, 344, 345, 346, 607, 608, 347, 0, 0, 0,
	0, 0, 0, 0, 348, 349, 350, 609, 0, 0,
	0, 351, 0, 352, 0, 0, 0, 353, 354, 610,
	611, 355, 356, 357, 358, 359, 360, 361, 362, 0,
	363, 612, 0, 613, 0, 0, 365, 366, 367, 368,
	369, 614, 615, 616, 445, 0, 370, 371, 0, 372,
	373, 374, 375, 0, 0, 0, 0, 376, 377, 378,
	380, 0, 0, 379, 617, 618, 0, 619, 0, 381,
	382, 0, 620, 0, 383, 384, 385, 0, 386, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 0, 393,
	395, 394, 0, 396, 621, 0, 397, 398, 0, 0,
	399, 0, 0, 0, 400, 401, 0, 0, 402, 403,
	404, 405, 0, 406, 407, 409, 412, 408, 410, 411,
	413, 426, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 428, 0, 427, 0, 429, 430,
	431, 436, 438, 439, 434, 435, 437, 440, 441, 433,
	0, 432, 0, 0, 0, 442, 443, 0, 622, 444,
	623, 446, 447, 0, 0, 448, 0, 0, 0, 450,
	451, 452, 0, 0, 453, 454, 624, 0, 455, 0,
	625, 456, 457, 449, 458, 459, 0, 461, 462, 463,
	464, 465, 0, 466, 467, 626, 468, 469, 470, 627,
	471, 472, 473, 628, 474, 629, 475, 476, 0, 477,
	478, 0, 479, 480, 481, 482, 0, 484, 485, 630,
	486, 488, 487, 489, 0, 490, 0, 491, 492, 0,
	0, 0, 0, 493, 0, 495, 496, 497, 494, 498,
	499, 500, 501, 0, 502, 503, 504, 0, 505, 506,
	507, 508, 631, 0, 0, 510, 511, 517, 518, 512,
	513, 519, 520, 521, 522, 523, 0, 525, 526, 524,
	527, 528, 529, 0, 530, 531, 514, 515, 532, 533,
	0, 534, 535, 536, 537, 538, 539, 632, 0, 540,
	0, 541, 542, 543, 544, 516, 545, 550, 633, 546,
	547, 548, 549, 634, 552, 0, 553, 554, 0, 551,
	0, 555, 556, 557, 558, 559, 560, 561, 341, 562,
	0, 563, 635, 636, 637, 638, 0, 572, 0, 564,
	565, 566, 639, 567, 640, 0, 568, 569, 570, 571,
	0, 573, 574, 0, 0, 575, 576, 577, 579, 580,
	578, 581, 0, 582, 0, 0, 583, 584, 585, 641,
	642, 643, 0, 587, 586, 588, 644, 0, 0, 0,
	0, 589, 590, 645, 591, 592, 593, 1702, 1703, 0,
	1735, 1736, 1737, 1745, 1746, 1747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	1733, 0, 0, 0, 0, 0, 0, 1705, 0, 0,
	0, 0, 0, 0, 1702, 1703, 1751, 1735, 1736, 1737,
	1745, 1746, 1747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 1733, 0, 0,
	0, 0, 1704, 0, 1705, 0, 0, 0, 0, 0,
	0, 0, 1724, 1751, 0, 0, 0, 0, 0, 0,
	0, 1721, 0, 1702, 1703, 0, 1735, 1736, 1737, 1745,
	1746, 1747, 0, 0, 0, 0, 0, 0, 0, 1704,
	0, 0, 0, 0, 0, 1738, 1733, 0, 0, 1724,
	0, 0, 0, 1705, 0, 0, 0, 0, 1721, 0,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1704, 0,
	0, 0, 0, 1727, 1728, 1729, 1730, 0, 1724, 0,
	0, 0, 0, 1710, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1727, 1728, 1729, 1730, 0, 0, 0, 0, 1742, 0,
	1710, 1752, 0, 0, 0, 0, 0, 1732, 1734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1748, 0, 1749, 0, 0, 0,
	0, 0, 0, 1719, 1720, 1742, 0, 0, 1752, 1727,
	1728, 1729, 1730, 0, 1732, 1734, 0, 0, 0, 1710,
	0, 1740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1748, 0, 1749, 0, 1725, 0, 0, 0, 0,
	1719, 1720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1742, 0, 0, 1752, 1740, 0,
	0, 0, 0, 1732, 1734, 0, 0, 0, 0, 0,
	0, 0, 1725, 0, 0, 0, 0, 1750, 0, 0,
	1748, 0, 1749, 0, 0, 0, 0, 0, 0, 1719,
	1720, 0, 0, 0, 0, 1739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1740, 0, 0,
	0, 0, 0, 0, 1750, 0, 0, 0, 0, 0,
	0, 1725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1731, 0, 0,
	0, 0, 0, 1750, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 1739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 0, 0, 0, 0, 0, 0,
	0, 0, 1702, 1703, 1726, 1735, 1736, 1737, 1745, 1746,
	1747, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 1733, 0, 0, 0, 0,
	1743, 0, 1705, 1731, 0, 0, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1704, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1724, 0, 1743,
	0, 0, 0, 0, 0, 0, 1721, 0, 0, 0,
	1741, 0, 0, 0, 0, 1716, 1717, 1723, 1744, 1722,
	1718, 0, 1715, 1713, 1714, 1706, 1707, 1708, 1709, 1711,
	1712, 0, 0, 0, 0, 0, 0, 0, 0, 3016,
	0, 0, 0, 0, 0, 0, 0, 1741, 0, 0,
	0, 0, 1716, 1717, 1723, 1744, 1722, 1718, 0, 1715,
	1713, 1714, 1706, 1707, 1708, 1709, 1711, 1712, 0, 0,
	0, 0, 0, 0, 0, 0, 2392, 0, 1727, 1728,
	1729, 1730, 0, 0, 0, 0, 0, 0, 1710, 0,
	0, 0, 0, 0, 0, 0, 1741, 0, 0, 0,
	0, 1716, 1717, 1723, 1744, 1722, 1718, 0, 1715, 1713,
	1714, 1706, 1707, 1708, 1709, 1711, 1712, 0, 0, 0,
	0, 4257, 0, 1742, 0, 0, 1752, 0, 0, 0,
	0, 0, 1732, 1734, 0, 0, 0, 0, 1702, 1703,
	0, 1735, 1736, 1737, 1745, 1746, 1747, 0, 0, 1748,
	0, 1749, 0, 0, 0, 0, 0, 0, 1719, 1720,
	1738, 1733, 0, 0, 0, 0, 0, 0, 1705, 0,
	0, 0, 0, 0, 0, 0, 1740, 1751, 1702, 1703,
	0, 1735, 1736, 1737, 1745, 1746, 1747, 0, 0, 0,
	1725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1738, 1733, 0, 1704, 0, 0, 0, 0, 1705, 0,
	0, 0, 0, 1724, 0, 0, 0, 1751, 0, 0,
	0, 0, 1721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1704, 0, 0, 0, 0, 0, 0,
	1739, 0, 0, 1724, 0, 0, 0, 0, 0, 0,
	0, 0, 1721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1727, 1728, 1729, 1730, 0, 0,
	0, 0, 0, 0, 1710, 0, 0, 0, 0, 0,
	0, 0, 1731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1726, 0, 1727, 1728, 1729, 1730, 0, 1742,
	0, 0, 1752, 0, 1710, 0, 0, 0, 1732, 1734,
	0, 0, 0, 0, 0, 0, 0, 0, 1743, 0,
	0, 0, 0, 0, 0, 1748, 0, 1749, 0, 0,
	0, 0, 0, 0, 1719, 1720, 0, 0, 0, 1742,
	0, 0, 1752, 0, 0, 0, 0, 0, 1732, 1734,
	0, 0, 1740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1748, 1725, 1749, 0, 0,
	0, 0, 0, 0, 1719, 1720, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1725, 0, 1750, 0,
	0, 0, 0, 0, 0, 1741, 0, 0, 0, 0,
	1716, 1717, 1723, 1744, 1722, 1718, 1739, 1715, 1713, 1714,
	1706, 1707, 1708, 1709, 1711, 1712, 0, 0, 0, 0,
	4183, 0, 0, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1731, 0,
	0, 0, 0, 0, 0, 0, 1702, 1703, 0, 1735,
	1736, 1737, 1745, 1746, 1747, 0, 0, 0, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1738, 1733,
	0, 0, 0, 0, 0, 0, 1705, 0, 1731, 0,
	0, 0, 0, 0, 1743, 1751, 1702, 1703, 0, 1735,
	1736, 1737, 1745, 1746, 1747, 0, 0, 0, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1738, 1733,
	0, 1704, 0, 0, 0, 0, 1705, 0, 0, 0,
	0, 1724, 0, 0, 1743, 1751, 0, 0, 0, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1724, 0, 0, 0, 0, 0, 0, 0, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1741, 0, 0, 0, 0, 1716, 1717, 1723, 1744,
	1722, 1718, 0, 1715, 1713, 1714, 1706, 1707, 1708, 1709,
	1711, 1712, 1727, 1728, 1729, 1730, 4151, 0, 0, 0,
	0, 0, 1710, 0, 0, 0, 0, 0, 0, 0,
	0, 1741, 0, 0, 0, 0, 1716, 1717, 1723, 1744,
	1722, 1718, 0, 1715, 1713, 1714, 1706, 1707, 1708, 1709,
	1711, 1712, 1727, 1728, 1729, 1730, 4150, 1742, 0, 0,
	1752, 0, 1710, 0, 0, 0, 1732, 1734, 0, 0,
	0, 0, 1702, 1703, 0, 1735, 1736, 1737, 1745, 1746,
	1747, 0, 0, 1748, 0, 1749, 0, 0, 0, 0,
	0, 0, 1719, 1720, 1738, 1733, 0, 1742, 0, 0,
	1752, 0, 1705, 0, 0, 0, 1732, 1734, 0, 0,
	1740, 1751, 1702, 1703, 0, 1735, 1736, 1737, 1745, 1746,
	1747, 0, 0, 1748, 1725, 1749, 0, 0, 0, 0,
	0, 0, 1719, 1720, 1738, 1733, 0, 1704, 0, 0,
	0, 0, 1705, 0, 0, 0, 0, 1724, 0, 0,
	1740, 1751, 0, 0, 0, 0, 1721, 0, 0, 0,
	0, 0, 0, 0, 1725, 0, 1750, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1704, 0, 0,
	0, 0, 0, 0, 1739, 0, 0, 1724, 0, 0,
	0, 0, 0, 0, 0, 0, 1721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1750, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1739, 0, 0, 0, 1727, 1728,
	1729, 1730, 0, 0, 0, 0, 0, 0, 1710, 0,
	0, 0, 0, 0, 0, 0, 1731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 1727, 1728,
	1729, 1730, 0, 1742, 0, 0, 1752, 0, 1710, 0,
	0, 0, 1732, 1734, 0, 0, 1731, 0, 0, 0,
	0, 0, 1743, 0, 0, 0, 0, 0, 0, 1748,
	0, 1749, 0, 0, 0, 0, 1726, 0, 1719, 1720,
	0, 0, 0, 1742, 0, 0, 1752, 0, 0, 0,
	0, 0, 1732, 1734, 0, 0, 1740, 0, 0, 0,
	0, 0, 1743, 0, 0, 0, 0, 0, 0, 1748,
	1725, 1749, 0, 0, 0, 0, 0, 0, 1719, 1720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1725, 0, 1750, 0, 0, 0, 0, 0, 0, 1741,
	0, 0, 0, 0, 1716, 1717, 1723, 1744, 1722, 1718,
	1739, 1715, 1713, 1714, 1706, 1707, 1708, 1709, 1711, 1712,
	0, 0, 0, 0, 3990, 0, 0, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 1741,
	0, 0, 0, 0, 1716, 1717, 1723, 1744, 1722, 1718,
	1739, 1715, 1713, 1714, 1706, 1707, 1708, 1709, 1711, 1712,
	0, 0, 0, 0, 3848, 0, 0, 0, 0, 0,
	0, 0, 1731, 0, 0, 0, 0, 0, 0, 0,
	1702, 1703, 0, 1735, 1736, 1737, 1745, 1746, 1747, 0,
	0, 0, 1726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1738, 1733, 0, 0, 0, 0, 0, 0,
	1705, 0, 1731, 0, 0, 0, 0, 0, 1743, 1751,
	1702, 1703, 0, 1735, 1736, 1737, 1745, 1746, 1747, 0,
	0, 0, 1726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1738, 1733, 0, 1704, 0, 0, 0, 0,
	1705, 0, 0, 0, 0, 1724, 0, 0, 1743, 1751,
	0, 0, 0, 0, 1721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1724, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1741, 0, 0, 0, 0,
	1716, 1717, 1723, 1744, 1722, 1718, 0, 1715, 1713, 1714,
	1706, 1707, 1708, 1709, 1711, 1712, 1727, 1728, 1729, 1730,
	3791, 0, 0, 0, 0, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 1741, 0, 0, 0, 0,
	1716, 1717, 1723, 1744, 1722, 1718, 0, 1715, 1713, 1714,
	1706, 1707, 1708, 1709, 1711, 1712, 1727, 1728, 1729, 1730,
	3790, 1742, 0, 0, 1752, 0, 1710, 0, 0, 0,
	1732, 1734, 0, 0, 0, 0, 1702, 1703, 0, 1735,
	1736, 1737, 1745, 1746, 1747, 0, 0, 1748, 0, 1749,
	0, 0, 0, 0, 0, 0, 1719, 1720, 1738, 1733,
	0, 1742, 0, 0, 1752, 0, 1705, 0, 0, 0,
	1732, 1734, 0, 0, 1740, 1751, 1702, 1703, 0, 1735,
	1736, 1737, 1745, 1746, 1747, 0, 0, 1748, 1725, 1749,
	0, 0, 0, 0, 0, 0, 1719, 1720, 1738, 1733,
	0, 1704, 0, 0, 0, 0, 1705, 0, 0, 0,
	0, 1724, 0, 0, 1740, 1751, 0, 0, 0, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 1725, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1704, 0, 0, 0, 0, 0, 0, 1739, 0,
	0, 1724, 0, 0, 0, 0, 0, 0, 0, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1739, 0,
	0, 0, 1727, 1728, 1729, 1730, 0, 0, 0, 0,
	0, 0, 1710, 0, 0, 0, 0, 0, 0, 0,
	1731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1726, 0, 1727, 1728, 1729, 1730, 0, 1742, 0, 0,
	1752, 0, 1710, 0, 0, 0, 1732, 1734, 0, 0,
	1731, 0, 0, 0, 0, 0, 1743, 0, 0, 0,
	0, 0, 0, 1748, 0, 1749, 0, 0, 0, 0,
	1726, 0, 1719, 1720, 0, 0, 0, 1742, 0, 0,
	1752, 0, 0, 0, 0, 0, 1732, 1734, 0, 0,
	1740, 0, 0, 0, 0, 0, 1743, 0, 0, 0,
	0, 0, 0, 1748, 1725, 1749, 0, 0, 0, 0,
	0, 0, 1719, 1720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1725, 0, 1750, 0, 0, 0,
	0, 0, 0, 1741, 0, 0, 0, 0, 1716, 1717,
	1723, 1744, 1722, 1718, 1739, 1715, 1713, 1714, 1706, 1707,
	1708, 1709, 1711, 1712, 0, 0, 0, 0, 3789, 0,
	0, 0, 0, 0, 0, 0, 1750, 0, 0, 0,
	0, 0, 0, 1741, 0, 0, 0, 0, 1716, 1717,
	1723, 1744, 1722, 1718, 1739, 1715, 1713, 1714, 1706, 1707,
	1708, 1709, 1711, 1712, 0, 0, 0, 0, 3486, 0,
	0, 0, 0, 0, 0, 0, 1731, 0, 0, 0,
	0, 0, 0, 0, 1702, 1703, 0, 1735, 1736, 1737,
	1745, 1746, 1747, 0, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 1733, 0, 0,
	0, 0, 0, 0, 1705, 0, 1731, 0, 0, 0,
	0, 0, 1743, 1751, 1702, 1703, 0, 1735, 1736, 1737,
	1745, 1746, 1747, 0, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 1733, 0, 1704,
	0, 0, 0, 0, 1705, 0, 0, 0, 0, 1724,
	0, 0, 1743, 1751, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1724,
	0, 0, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1741,
	0, 0, 0, 0, 1716, 1717, 1723, 1744, 1722, 1718,
	0, 1715, 1713, 1714, 1706, 1707, 1708, 1709, 1711, 1712,
	1727, 1728, 1729, 1730, 3014, 0, 0, 0, 0, 0,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 1741,
	0, 0, 0, 0, 1716, 1717, 1723, 1744, 1722, 1718,
	0, 1715, 1713, 1714, 1706, 1707, 1708, 1709, 1711, 1712,
	1727, 1728, 1729, 1730, 3013, 1742, 0, 0, 1752, 0,
	1710, 0, 0, 0, 1732, 1734, 0, 0, 0, 0,
	1702, 1703, 0, 1735, 1736, 1737, 1745, 1746, 1747, 0,
	0, 1748, 0, 1749, 0, 0, 0, 0, 0, 0,
	1719, 1720, 1738, 1733, 0, 1742, 0, 0, 1752, 0,
	1705, 0, 0, 0, 1732, 1734, 0, 0, 1740, 1751,
	1702, 1703, 0, 1735, 1736, 1737, 1745, 1746, 1747, 0,
	0, 1748, 1725, 1749, 0, 0, 0, 0, 0, 0,
	1719, 1720, 1738, 1733, 0, 1704, 0, 0, 0, 0,
	1705, 0, 0, 0, 0, 1724, 0, 0, 1740, 1751,
	0, 0, 0, 0, 1721, 0, 0, 0, 0, 0,
	0, 0, 1725, 0, 1750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1704, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 1724, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 1727, 1728, 1729, 1730,
	0, 0, 0, 0, 0, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1726, 0, 1727, 1728, 1729, 1730,
	0, 1742, 0, 0, 1752, 0, 1710, 4392, 0, 0,
	1732, 1734, 0, 0, 1731, 0, 0, 0, 0, 0,
	1743, 0, 0, 0, 0, 0, 0, 1748, 0, 1749,
	0, 0, 0, 0, 1726, 0, 1719, 1720, 0, 0,
	0, 1742, 0, 0, 1752, 0, 0, 0, 0, 0,
	1732, 1734, 0, 0, 1740, 0, 0, 0, 0, 0,
	1743, 0, 0, 0, 0, 0, 0, 1748, 1725, 1749,
	0, 0, 0, 0, 0, 0, 1719, 1720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1725, 0,
	1750, 0, 0, 0, 0, 0, 0, 1741, 0, 0,
	0, 0, 1716, 1717, 1723, 1744, 1722, 1718, 1739, 1715,
	1713, 1714, 1706, 1707, 1708, 1709, 1711, 1712, 0, 0,
	0, 0, 3012, 0, 0, 0, 0, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 1741, 0, 0,
	0, 0, 1716, 1717, 1723, 1744, 1722, 1718, 1739, 1715,
	1713, 1714, 1706, 1707, 1708, 1709, 1711, 1712, 0, 0,
	0, 0, 3011, 0, 0, 0, 0, 0, 0, 0,
	1731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1731, 0, 0, 0, 0, 0, 1743, 0, 1702, 1703,
	0, 1735, 1736, 1737, 1745, 1746, 1747, 0, 0, 0,
	1726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1738, 1733, 0, 0, 0, 0, 0, 0, 1705, 0,
	0, 0, 0, 0, 0, 0, 1743, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1704, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1724, 0, 0, 0, 0, 0, 0,
	0, 0, 1721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1741, 0, 0, 0, 0, 1716, 1717,
	1723, 1744, 1722, 1718, 0, 1715, 1713, 1714, 1706, 1707,
	1708, 1709, 1711, 1712, 0, 0, 2978, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1741, 0, 0, 0, 0, 1716, 1717,
	1723, 1744, 1722, 1718, 0, 1715, 1713, 1714, 1706, 1707,
	1708, 1709, 1711, 1712, 1727, 1728, 1729, 1730, 0, 0,
	0, 0, 0, 0, 1710, 0, 3098, 0, 0, 3097,
	0, 0, 0, 1702, 1703, 0, 1735, 1736, 1737, 1745,
	1746, 1747, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 1733, 0, 0, 1742,
	0, 2949, 1752, 1705, 0, 0, 0, 0, 1732, 1734,
	0, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1748, 0, 1749, 0, 0,
	0, 0, 0, 0, 1719, 1720, 0, 0, 1704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1724, 0,
	0, 0, 1740, 0, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 1725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2536, 0, 2950, 0, 0, 0, 0, 1702, 1703,
	0, 1735, 1736, 1737, 1745, 1746, 1747, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1738, 1733, 0, 0, 0, 2535, 1739, 0, 1705, 1727,
	1728, 1729, 1730, 0, 0, 0, 0, 1751, 0, 1710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1704, 1702, 1703, 0, 1735, 1736, 1737,
	1745, 1746, 1747, 1724, 1742, 0, 0, 1752, 0, 0,
	0, 0, 1721, 1732, 1734, 0, 1738, 1733, 1731, 0,
	0, 0, 0, 0, 1705, 0, 0, 0, 0, 0,
	1748, 0, 1749, 1751, 0, 0, 0, 0, 1726, 1719,
	1720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1740, 0, 1704,
	0, 0, 0, 0, 1743, 0, 0, 0, 0, 1724,
	0, 1725, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 0, 1727, 1728, 1729, 1730, 0, 0,
	0, 0, 0, 0, 1710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1750, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1742,
	0, 1739, 1752, 0, 0, 0, 0, 0, 1732, 1734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1727, 1728, 1729, 1730, 0, 1748, 0, 1749, 0, 0,
	1710, 1741, 0, 0, 1719, 1720, 1716, 1717, 1723, 1744,
	1722, 1718, 0, 1715, 1713, 1714, 1706, 1707, 1708, 1709,
	1711, 1712, 1740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1731, 0, 1742, 1725, 0, 1752, 0,
	0, 0, 0, 0, 1732, 1734, 0, 0, 0, 0,
	0, 0, 0, 1726, 0, 0, 0, 0, 0, 0,
	0, 1748, 0, 1749, 0, 0, 0, 0, 0, 0,
	1719, 1720, 0, 0, 0, 0, 0, 0, 1750, 1743,
	0, 0, 0, 0, 0, 0, 0, 0, 1740, 0,
	0, 0, 0, 0, 0, 0, 1739, 0, 0, 0,
	0, 0, 1725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1702, 1703, 0, 1735, 1736, 1737,
	1745, 1746, 1747, 0, 1750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 1733, 1731, 0,
	0, 0, 1739, 1009, 1705, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 1741, 0, 1726, 0,
	0, 1716, 1717, 1723, 1744, 1722, 1718, 0, 1715, 1713,
	1714, 1706, 1707, 1708, 1709, 1711, 1712, 0, 0, 1704,
	0, 0, 0, 0, 1743, 0, 0, 0, 0, 1724,
	0, 0, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 0, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	1703, 0, 1735, 1736, 1737, 1745, 1746, 1747, 0, 0,
	1743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 1733, 0, 0, 0, 0, 0, 0, 1705,
	1727, 1728, 1729, 1730, 0, 0, 0, 0, 1751, 0,
	1710, 1741, 0, 0, 0, 0, 1716, 1717, 1723, 1744,
	1722, 1718, 0, 1715, 1713, 1714, 1706, 1707, 1708, 1709,
	1711, 1712, 0, 0, 1704, 1702, 1703, 0, 1735, 1736,
	1737, 1745, 1746, 1747, 1724, 1742, 0, 0, 1752, 0,
	0, 0, 0, 1721, 1732, 1734, 0, 1738, 1733, 0,
	0, 0, 3099, 0, 0, 1705, 0, 0, 0, 0,
	0, 1748, 0, 1749, 1751, 0, 0, 1741, 0, 0,
	1719, 1720, 1716, 1717, 1723, 1744, 1722, 1718, 0, 1715,
	1713, 1714, 1706, 1707, 1708, 1709, 1711, 1712, 1740, 0,
	1704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1724, 0, 1725, 0, 0, 0, 0, 0, 0, 1721,
	0, 0, 0, 0, 0, 1727, 1728, 1729, 1730, 0,
	0, 0, 0, 0, 0, 1710, 0, 0, 0, 0,
	3104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1742, 0, 1739, 1752, 0, 0, 0, 0, 0, 1732,
	1734, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1727, 1728, 1729, 1730, 0, 1748, 0, 1749, 0,
	0, 1710, 0, 0, 0, 1719, 1720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1731, 0, 1742, 1725, 0, 1752,
	0, 0, 0, 0, 0, 1732, 1734, 0, 0, 0,
	0, 0, 0, 0, 1726, 0, 0, 0, 0, 0,
	0, 0, 1748, 0, 1749, 0, 0, 0, 0, 0,
	0, 1719, 1720, 0, 0, 0, 0, 0, 0, 1750,
	1743, 0, 0, 0, 0, 0, 0, 0, 0, 1740,
	0, 0, 0, 0, 0, 0, 0, 1739, 0, 0,
	0, 0, 0, 1725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3467, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1702, 1703, 0, 1735, 1736,
	1737, 1745, 1746, 1747, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1738, 1733, 1731,
	0, 0, 0, 1739, 0, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 1751, 0, 0, 1741, 0, 1726,
	0, 0, 1716, 1717, 1723, 1744, 1722, 1718, 0, 1715,
	1713, 1714, 1706, 1707, 1708, 1709, 1711, 1712, 0, 0,
	1704, 0, 0, 0, 0, 1743, 0, 0, 0, 0,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	0, 0, 0, 0, 0, 1731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1702, 1703, 0, 1735, 1736, 1737, 1745, 1746, 1747, 0,
	0, 1743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1738, 1733, 0, 0, 0, 3015, 0, 0,
	1705, 1727, 1728, 1729, 1730, 0, 0, 0, 0, 1751,
	0, 1710, 1741, 0, 0, 0, 0, 1716, 1717, 1723,
	1744, 1722, 1718, 0, 1715, 1713, 1714, 1706, 1707, 1708,
	1709, 1711, 1712, 0, 0, 1704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1724, 1742, 0, 0, 1752,
	0, 0, 0, 0, 1721, 1732, 1734, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1748, 0, 1749, 0, 0, 0, 1741, 0,
	0, 1719, 1720, 1716, 1717, 1723, 1744, 1722, 1718, 0,
	1715, 1713, 1714, 1706, 1707, 1708, 1709, 1711, 1712, 1740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1727, 1728, 1729, 1730,
	0, 0, 0, 0, 0, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 1702, 1703, 0, 1735, 1736,
	1737, 1745, 1746, 1747, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1738, 1733, 0,
	0, 1742, 0, 1739, 1752, 1705, 0, 0, 0, 0,
	1732, 1734, 0, 0, 1751, 0, 0, 0, 0, 0,
	0, 0, 0, 3066, 0, 0, 0, 1748, 0, 1749,
	0, 0, 0, 0, 0, 0, 1719, 1720, 0, 0,
	1704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1724, 0, 0, 0, 1740, 0, 0, 0, 0, 1721,
	0, 0, 0, 0, 0, 1731, 0, 0, 1725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1702, 1703, 0, 1735, 1736, 1737, 1745, 1746, 1747, 0,
	1750, 1743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1738, 1733, 0, 0, 0, 0, 1739, 0,
	1705, 1727, 1728, 1729, 1730, 0, 0, 0, 0, 1751,
	0, 1710, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1704, 1702, 1703, 0, 1735,
	1736, 1737, 1745, 1746, 1747, 1724, 1742, 0, 0, 1752,
	0, 0, 0, 0, 1721, 1732, 1734, 0, 0, 1733,
	1731, 0, 0, 0, 0, 0, 1705, 0, 0, 0,
	0, 0, 1748, 0, 1749, 1751, 0, 0, 1741, 0,
	1726, 1719, 1720, 1716, 1717, 1723, 1744, 1722, 1718, 0,
	1715, 1713, 1714, 1706, 1707, 1708, 1709, 1711, 1712, 1740,
	0, 1704, 0, 0, 0, 0, 1743, 0, 0, 0,
	0, 1724, 0, 1725, 0, 0, 0, 0, 0, 0,
	1721, 0, 0, 0, 0, 0, 1727, 1728, 1729, 1730,
	0, 0, 0, 0, 0, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1742, 0, 1739, 1752, 0, 0, 0, 0, 0,
	1732, 1734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1727, 1728, 1729, 1730, 0, 1748, 0, 1749,
	0, 0, 1710, 1741, 0, 0, 1719, 1720, 1716, 1717,
	1723, 1744, 1722, 1718, 0, 1715, 1713, 1714, 1706, 1707,
	1708, 1709, 1711, 1712, 1740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1731, 0, 1742, 1725, 0,
	1752, 0, 0, 0, 0, 0, 1732, 1734, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 1748, 0, 1749, 0, 0, 0, 0,
	0, 0, 1719, 1720, 0, 0, 0, 0, 0, 0,
	1750, 1743, 0, 0, 0, 0, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1750, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1741, 0,
	1726, 0, 0, 1716, 1717, 1723, 1744, 1722, 1718, 0,
	1715, 1713, 1714, 1706, 1707, 1708, 1709, 1711, 1712, 0,
	0, 0, 0, 0, 0, 0, 1743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1743, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1741, 0, 0, 0, 0, 1716, 1717,
	1723, 1744, 1722, 1718, 0, 1715, 1713, 1714, 1706, 1707,
	1708, 1709, 1711, 1712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1741,
	0, 0, 0, 0, 1716, 1717, 1723, 1744, 1722, 1718,
	0, 1715, 1713, 1714, 1706, 1707, 1708, 1709, 1711, 1712,
}
var sqlPact = [...]int{

	7950, -1000, -1000, -1000, -1000, 171, -1000, -1000, 164, 162,
	160, 159, 157, 155, 154, 153, 152, 151, 150, -1000,
	-1000, -1000, -1000, -1000, -1000, 148, -1000, -1000, 141, -1000,
	139, 136, 135, -1000, -1000, 134, -1000, 133, -1000, -1000,
	-1000, -1000, 132, 131, 129, 85625, 85093, 86150, 2166, 104673,
	92478, 1990, 76609, 104141, 76077, 103609, 2031, 9724, 103077, 2622,
	127, -1000, 102545, 126, 125, 124, -1000, 102013, -1000, 1847,
	-1000, 116, 1985, 61684, 115, 114, 111, 2869, 109, -1000,
	108, 107, 106, -1000, 11694, 1538, -1000, 102, 101, -1000,
	307, 90357, 99, 96, 2072, 95, 94, 61151, 93, 91,
	2067, 2755, -1000, -1000, 1996, -1000, -1000, 90, 89, 88,
	85, 84, 82, 81, 79, 76, 74, 73, -1000, 72,
	71, 70, 69, 68, 67, 66, 65, -1000, 64, 63,
	62, 60, 59, 58, 51, 50, 49, 47, 44, 43,
	39, 38, -1000, 10204, 31, 1877, 1640, 1636, 1633, 1628,
	1626, 1009, 30, 29, 28, 26, 25, 24, 22, 21,
	20, -1000, 19, 18, 13, 12, 10, 9, 7, 5,
	149, 4, 2, -2, -3, -5, -7, -9, 2499, -1000,
	1669, 954, 28628, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 110448, 105198, -10, -68, -11, -1000,
	3163, 977, 51026, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 247, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 519, 2030,
	766, -1000, -1000, -1000, 101488, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2161, -26, -1000, 1920, -1000, -1000, -1000,
	-1000, -1000, 754, -1000, 2157, 292, 2109, -1000, -1000, -1000,
	3205, 2310, 3601, 3600, 3599, 3598, 3597, 109923, 1771, 3594,
	2385, 3592, 3590, 3588, 3584, 3583, 3582, 3581, -1000, 84561,
	1051, 84029, 83497, 3225, 100963, 82965, 100431, 70242, 43326, 953,
	3203, -1000, -1000, -1000, -1000, -1000, -1000, 105198, -1000, 1050,
	-1000, -1000, 3579, 3578, 1974, 753, 91946, -1000, 1696, -1000,
	961, 30299, -1000, 1276, -1000, 30299, 243, -1000, -1000, -1000,
	-1000, -1000, -1000, 3577, 3575, 3574, 3573, 3571, -1000, -1000,
	75545, 21892, 75013, 74481, 99899, 21350, 82433, 81901, 99367, 69700,
	1049, 1396, -1000, -1000, -1000, -1000, -1000, -1000, -31, 67532,
	3349, 105198, -1000, 238, -1000, -1000, -1000, -1000, -1000, -1000,
	42757, 939, 42188, 644, 41619, 586, -1000, -1000, -1000, -1000,
	69158, -1000, 98835, 2308, 3570, 3568, 1115, 3567, 3100, 1755,
	3566, 1801, 1261, 3562, 3561, 3560, 3558, 3555, 3553, 3551,
	1429, 98303, 2845, 97771, 1650, 68616, 1048, 81369, 86150, 2575,
	97239, 1382, 1346, -1000, -1000, -1000, -1000, 2982, 2684, 2672,
	1350, -1000, -1000, -1000, -1000, 53699, 5477, 5447, 10558, 96707,
	55859, 86150, 86150, -1000, -1000, -1000, -1000, -1000, 41050, 765,
	40481, 951, -1000, -1000, 54239, 2804, -1000, -1000, -1000, -1000,
	39912, 585, 39343, 868, 105198, -1000, 2835, 1941, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2436, 1601, 3359, 2646, 68074, 1940, 1420,
	3169, 2974, 2963, 1511, 3549, 3548, 2463, 2961, 2951, 2948,
	2940, 2936, 1432, 2428, 322, 28059, 2829, 1653, 38774, 1668,
	1591, 2933, 2928, 3381, 1898, 1932, 2021, 73949, 3546, 3545,
	3137, 2924, 2910, 2799, 2797, -1000, -1000, -1000, -1000, 1479,
	-1000, -1000, -1000, -1000, -1000, 77134, -1000, -1000, 1775, -1000,
	-1000, 1775, -1000, -1000, -1000, -1000, -1000, 1301, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1669,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2521, -1000, 1966, -1000, -1000, 2456, 3149, 3149, 3149, 3202,
	485, 476, -1000, 149, -1000, -1000, 115904, -1000, -1000, 43883,
	43883, 43883, 43883, 43883, 43883, 43883, 2039, -1000, 751, -1000,
	-1000, 826, -1000, 750, 619, -1000, -1000, -1000, -1000, -1000,
	-1000, 749, -1000, -1000, -1000, -1000, -1000, -1000, 3349, -1000,
	24657, -1000, -1000, -1000, 410, 748, 43883, -1000, -1000, 3400,
	3397, 1032, -1000, 232, 978, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2834, 747, 746,
	-1000, 744, 742, 740, 731, 730, -1000, -1000, -1000, 729,
	728, 726, 725, 724, 722, 720, 718, -1000, 1929, -1000,
	-1000, -1000, -1000, -1000, -1000, 675, 669, 669, 669, -1000,
	1044, -1000, -1000, -1000, 308, 667, 259, 662, 657, 656,
	-1000, 713, 712, 709, 708, 706, 705, 699, 698, 693,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1041, -1000, -1000,
	-1000, -1000, -38, 105198, -1000, 519, -38, -1000, -1000, 688,
	-1000, 32539, 32539, 32539, -1000, -1000, 2155, 43883, -1000, 2758,
	-1000, -23, -23, 907, 52618, -1000, 49945, 907, 569, 840,
	57451, -1000, 2796, -1000, -1000, 687, 225, -1000, -1000, -1000,
	-1000, 22432, 2795, 105198, 105198, 86150, 86150, 86150, 3036, 43883,
	-1000, -1000, 65397, 105198, 86675, -1000, -1000, 3296, 62209, 64867,
	105198, 2833, 64342, 3544, -1000, -1000, -1000, -1000, -1000, 3004,
	3543, 3539, 3538, -1000, 105198, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 203, 3003, -1000, -1000, 89825, 203, 3002, -1000,
	203, 3001, -1000, 89300, -1000, -1000, 2151, 2996, -1000, -1000,
	217, 2992, -1000, -1000, -1000, 204, 2991, -1000, -1000, -69,
	2987, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 115904, -1000, -1000, -1000, 63810, -1000, 3141,
	-1000, -1000, 105198, -1000, 43883, -1000, 3291, 1548, 71312, 3236,
	-50, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2369, 2354,
	1212, 2202, -1000, 3051, 1842, -1000, 30299, 3089, -1000, -1000,
	-1000, 201, 22432, -1000, -1000, -1000, -1000, -1000, -1000, 4393,
	2976, 1397, -1000, 2201, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1660, 2975, -1000, 1995, 2973, 1641, -1000, -1000, 2457,
	-1000, 3127, -1000, -1000, 1753, 2971, -22, -1000, -1000, 2468,
	-1000, 1863, -1000, -1000, 1001, 2970, -1000, 80837, 55319, 54239,
	67532, -45, -1000, -1000, -1000, -1000, -168, 20808, 115904, -1000,
	-1000, -1000, -1000, 1746, 115904, 902, -1000, -1000, 2969, -1000,
	115904, 898, -1000, -1000, 2967, -1000, 2832, -1000, -1000, 2271,
	-1000, -1000, 3537, -1000, -1000, 3536, -1000, 3534, 3533, 3532,
	-1000, 1672, 1912, 3531, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 80312, 2154, -1000, -1000, 79248, -1000, 2270, 3234,
	-1000, -1000, -1000, 79780, 1047, -1000, 1001, 2269, -1000, 88775,
	1003, -1000, 3528, 3214, 2597, 1001, 2268, -1000, -1000, -1000,
	-1000, -1000, 1031, -1000, 59037, -1000, 59037, -1000, 1566, -1000,
	109398, -23, 86150, 3349, -1000, -71, -1000, -1000, -1000, 977,
	-1000, 53151, -1000, 53151, 91414, 70782, 983, 695, 60618, 115904,
	-1000, -1000, -1000, -1000, 115904, -1000, -1000, -1000, -190, -1000,
	-1000, 70782, 54239, 115904, -1000, -1000, -1000, -1000, 115904, -1000,
	-1000, -1000, 70782, 79248, -1000, 96175, 78723, -1000, -1000, 1413,
	2419, -1000, -1000, -1000, 70782, 1303, 70782, 70782, 70782, -1000,
	95643, -1000, -1000, 1987, 1263, 3131, 1977, 86150, -1000, 1767,
	-1000, -1000, -1000, 3159, -1000, -1000, 2830, -1000, 63268, 88250,
	-1000, 87725, -1000, 87200, -1000, 86150, -1000, 86150, -1000, 3525,
	3524, 3516, 3512, -1000, 3511, 3148, -1000, 115904, 3146, -1000,
	3510, 3230, 2829, 115904, -1000, 2989, 1651, 1643, 105198, -1000,
	-1000, 105198, -1000, 105198, -1000, -1000, -1000, 1474, -1000, -1000,
	2363, -1000, -1000, -1000, -1000, 86150, -1000, -1000, -1000, -1000,
	-1000, -1000, 2828, -1000, 1661, -1000, 1750, -1000, 3062, 1400,
	-1000, -1000, 220, -1000, -1000, -50, -1000, 108873, -1000, 2456,
	-1000, 105198, -1000, 2348, 2816, 2826, 1634, 2172, 2482, -1000,
	38205, 2413, 47225, 2195, 149, -1000, -1000, 149, 149, 29742,
	-1000, -1000, 62209, 62209, 22432, 1330, 43883, 43883, 43883, 43883,
	43883, 43883, 43883, 43883, 43883, 43883, 43883, 43883, 43883, 43883,
	43883, 43883, 43883, 43883, 43883, 43883, 43883, 43883, 43883, 43883,
	43883, 43883, 43883, 43883, 43883, 43883, 43883, 43883, 43883, 43883,
	43883, 2130, 43883, 1298, 43883, 43883, 43883, 43883, 2006, -1000,
	-1000, 1891, 541, 1953, -1000, 3352, 3352, 3352, 1388, 1388,
	116095, 116095, 552, 3509, 826, -1000, 43883, -1000, 48, 43883,
	22974, -1000, 476, 8521, 2389, -1000, 475, 23543, -1000, -1000,
	-1000, 24657, 619, 37636, 43883, 1034, 115904, -1000, -1000, 1667,
	3362, 20267, 2853, 2692, 686, 813, 802, 27490, 26921, 26352,
	25783, 787, 43883, 43883, 43883, 43883, 43883, 43883, 43883, 43883,
	-1000, -1000, 3370, -1000, 3362, -1000, -1000, -1000, -1000, 3362,
	1329, 1326, 3362, -1000, 3362, 3362, 7332, 7332, 37079, 36510,
	35941, 47782, 35372, 43883, 25214, 34803, 34234, -1000, 105198, -38,
	3290, 43883, 258, -1000, 114747, -1000, 258, 258, 684, -74,
	115904, 2423, 2423, 51557, 2464, 2060, 2060, 2060, -1000, 907,
	15910, 907, 94588, 2074, 907, 907, 196, 261, 470, 49414,
	2758, 94588, 782, 683, -12, -13, -14, -1000, -1000, -16,
	-17, -1000, -1000, 86150, 682, 22974, 22432, 193, 1462, -80,
	2441, 2439, 2438, -1000, 2437, 1751, -81, 1293, 86150, 105198,
	-79, -1000, 332, -93, -1000, 1314, 192, 3362, -1000, -1000,
	-1000, -1000, -1000, 3508, 3507, -1000, 1039, 677, 676, 608,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 675, 669,
	669, 669, -1000, 308, 667, 259, 662, 657, 656, -1000,
	-1000, -1000, -1000, -1000, 2788, 86150, 105198, -168, 86675, -58,
	-1000, -1000, -1000, -1000, -1000, -1000, 105198, -1000, -1000, -1000,
	3506, -1000, 86150, -1000, -1000, 86150, 203, 2957, -1000, 86150,
	-1000, 86150, 199, 2954, -1000, -1000, 105198, -1000, 86150, 86150,
	-1000, 105198, 105198, 70782, 70782, 219, -1000, 86150, 911, -94,
	1130, -50, -1000, -1000, -1000, 1775, -1000, 1774, -1000, -1000,
	-1000, -1000, -1000, -1000, 1433, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1032, -1000, -1000, -1000, -1000, -1000, -1000,
	3364, 3357, -41, -1000, -1000, 22432, -1000, -53, 1595, 1729,
	-1000, 73417, 2283, 3128, 3505, 2534, 3115, 1565, -1000, 1398,
	1290, 3201, 77134, 3254, 3269, 692, -1000, 2784, -1000, -1000,
	952, 1652, 1715, 1288, 77134, 1995, -1000, 62209, -1000, 2495,
	3200, 1410, 1385, 1410, 1410, 1402, -1000, 77134, 1689, 1283,
	1281, 1876, 1876, -1000, -1000, 1279, 1266, 2267, -1000, -55,
	3251, 3265, 658, -1000, 2770, 1206, -1000, -1000, 86150, 22432,
	1541, 1552, 1687, 1203, -44, -1000, 3247, 3243, 1202, 1197,
	-1000, 5764, -1000, 70782, 1637, 2953, 2643, 872, 2639, -1000,
	-1000, 872, -45, 67532, 189, -1000, 48, 43883, 43883, 48,
	43883, 48, 3229, 2952, -1000, -1000, -1000, -1000, -1000, 3503,
	1843, 2384, -1000, -1000, 655, 2265, 2767, 105198, 2489, -46,
	86150, -1000, 2947, 65927, 1995, 2263, -1000, -1000, 78191, -1000,
	2946, 519, 2262, -1000, 659, 3502, -1000, 108348, -1000, 3141,
	1306, 2916, 1085, 694, 3289, -1000, 694, 59568, -1000, 105198,
	-1000, -23, 5311, 72367, -101, -110, 458, -1000, 95118, 105198,
	1083, 72892, 105198, 3079, 999, 54239, -1000, -112, -190, 2634,
	983, 983, 872, -1000, 872, -1000, 86150, 2825, -1000, -1000,
	70782, 983, 983, 983, -1000, -1000, -1000, -1000, 3501, 3500,
	3495, -1000, -1000, -1000, 1000, 86150, 105198, 86150, -1000, -1000,
	105198, -1000, 105198, 105198, 86150, -1000, 1000, 105198, 1000, 105198,
	1000, 105198, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 48,
	43883, -1000, -1000, 3492, 1576, -1000, 2821, -1000, 2820, -1000,
	16, -1000, -1000, -1000, -1000, -1000, 2088, 86150, 86150, 86150,
	86150, 105198, 105198, 86150, -1000, 77134, -1000, 2348, 2816, -1000,
	-1000, -1000, -1000, -1000, -1000, 1616, 2128, -1000, 2414, -1000,
	1495, -1000, -1000, -1000, 115904, 48322, -1000, -1000, 115904, 1677,
	-1000, 46668, 46111, -1000, -1000, 1644, 86150, 2447, -1000, 2447,
	-143, -1000, 114622, 2410, 86150, -1000, -1000, -1000, -1000, -1000,
	950, 1057, 1057, 1294, 1294, 1294, 1294, 3245, 402, 1118,
	4342, 6423, 6423, 1102, 1102, 1102, 1102, 1102, 6423, 472,
	1388, 1388, 472, 472, 472, 472, 472, 1388, 1388, 1388,
	6423, 6423, 6423, 116095, 116029, 8606, 43883, 43883, 1196, 1834,
	541, 8483, 43883, 8783, 8783, 8783, 8783, -1000, 2104, -1000,
	-1000, -1000, -1000, 2751, 647, 47782, 47782, -1000, -1000, -1000,
	-1000, 24100, 43883, -1000, -1000, -1000, -1000, 33665, -1000, -1000,
	114009, -319, 448, -100, -6, -1000, 43883, 43883, 43883, 447,
	-1000, 188, 43883, 105198, -1000, 111543, 781, -111, -1000, -124,
	1426, -1000, 43883, -1000, -1000, 1193, -1000, 1191, 1181, 1178,
	-1000, 646, 445, -1000, 184, -1000, 2051, 643, 640, 43883,
	-1000, -1000, -1000, -1000, -1000, 113833, -1000, -1000, 113793, -1000,
	-1000, 113435, -1000, -1000, 113395, -1000, -1000, -1000, 115729, 111506,
	15132, 14877, 5790, 14523, 13953, -131, 444, -132, 443, 949,
	946, 442, 441, 437, -140, -1000, 3486, 3484, 3483, -1000,
	3481, 3479, 3475, -1000, 3474, 3473, 3472, -1000, 3471, 3470,
	3469, -1000, 3468, 3462, 3461, -1000, 3460, 3459, 3458, -1000,
	3452, 3450, 3446, -1000, 3442, 3441, 3440, -146, 435, -1000,
	2750, -100, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	422, -1000, 414, -1000, 115604, -100, 405, 6192, -1000, 47782,
	47782, 47782, -1000, 401, -1000, 114447, -1000, 115304, 33108, 33108,
	33108, 398, 115238, 43883, -100, -148, -1000, -149, -1000, -1000,
	487, -151, 1026, 32539, 50493, 22432, -1000, 1026, 1026, 43883,
	-1000, 43883, 2426, -1000, -1000, -1000, 2424, 2108, 2423, 51557,
	-1000, -1000, -1000, -1000, 94588, -1000, 3349, 2964, -1000, 94588,
	-1000, -1000, 105198, 519, -1000, 94588, 94588, 22432, 907, -1000,
	907, 94588, 557, -1000, -1000, -1000, -1000, -1000, 381, 56389,
	-6, 180, 22432, 1001, -1000, 2558, 2558, 2558, 2558, -1000,
	-1000, 105198, 1177, -47, -77, 3314, -1000, 1943, -1000, 62209,
	-1000, 823, 1082, 22432, -1000, -1000, -1000, 639, -1000, 3362,
	3362, -1000, 3362, 105198, 2749, 147, 138, 65927, 65927, 3439,
	-1000, -1000, 203, -1000, 86150, 203, 203, -1000, 86150, 86150,
	2151, -1000, 217, -1000, 204, -1000, -69, -1000, 1017, 30299,
	-1000, 1775, -1000, -1000, 1528, -1000, 1878, -1000, 1323, -1000,
	-1000, -1000, -1000, 30299, -1000, 2260, 105198, 105198, 86150, -1000,
	105198, -1000, 2259, 107823, 2257, 62209, 105198, -1000, -1000, 638,
	969, 2407, 2406, 1080, 105198, 105198, 2402, 107298, 106773, -1000,
	3435, 105198, 1970, 43883, 65927, 2158, 2226, 48, 48, -1000,
	-1000, 48, 637, 1269, 86150, 86150, 105198, 86150, 1630, -1000,
	-1000, -1000, -1000, -1000, 77659, -1000, -1000, 3369, 3368, -1000,
	1410, -1000, -1000, -1000, 1410, 1995, 1619, 105198, 86150, 65927,
	105198, -1000, -1000, 105198, 1684, 105198, 2866, 943, -1000, 1952,
	48, 48, -1000, -1000, 48, 634, 22432, 1875, -1000, 2885,
	105198, 3396, 105198, 105198, 105198, 65927, 3142, 106248, 105198, 105198,
	65927, 5764, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 67007, 1090, 1001, 1679, 1176, 77134, 54239,
	998, 54239, 2606, -1000, 19726, -1000, 115904, 115904, -1000, 115904,
	-1000, 62738, 105198, -1000, 1046, 105198, 72892, 975, 2915, 58506,
	-168, 983, 70782, 86150, -46, 105198, -1000, -1000, 1995, 2914,
	519, 2255, -1000, 70782, 3288, 2911, 633, 3433, 3432, -1000,
	2153, 2252, -1000, -1000, 105723, 3014, 862, 105198, 1026, 51557,
	1890, -1000, 56921, 1064, 105198, 1792, 98, -1000, -1000, -1000,
	0, 105198, -1000, 834, -1000, -1000, 5311, 5311, 983, -199,
	628, -1000, 922, 921, 54779, 70782, -154, -1000, -1000, -1000,
	-1000, -1000, 86150, 105198, 1286, 2546, 105198, -161, -1000, 179,
	623, -1000, 2470, -1000, -1000, 999, 54239, 2747, -1000, -1000,
	1016, -1000, 1344, 983, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -27, -168, -168, -168, -47, -1000,
	1000, -1000, 1000, -1000, 1000, -1000, 115904, -1000, -1000, 1572,
	1570, 105198, -1000, 22432, 105198, 86150, 22432, 86150, 2815, 2814,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1095,
	-1000, 1677, 2125, -1000, 619, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2350, -1000, -49, 29742, 933, -1000,
	-1000, 86150, -28, 43883, 43883, 7772, 7557, 43883, 47782, 47782,
	-1000, 43883, 6725, -1000, -1000, -1000, -1000, -1000, 2736, 615,
	43883, 62209, 6168, 4753, -1000, 380, 10853, 472, -1000, 43883,
	-1000, 379, 31982, -1000, 114813, -63, -162, -1000, 16464, -100,
	-163, -1000, -1000, 822, -1000, 2958, -1000, 43883, 115113, 2303,
	1899, 1743, 1585, 3362, 3394, 19185, -1000, 60093, 1029, 2093,
	113219, -1000, -1000, -1000, -1000, 62209, 62209, 43883, 43883, -1000,
	43883, 43883, 43883, -1000, -1000, -1000, 3362, 936, -1000, -1000,
	-1000, 936, -1000, -1000, 1410, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1410, -1000, 43883, -1000, -1000, 2728, 43883, -1000, 62209, 62209,
	47782, 47782, 47782, 47782, 47782, 47782, 47782, 47782, 47782, 47782,
	47782, 47782, 47782, 47782, 47782, 47782, 47782, 47782, 47782, 2397,
	47782, 3343, 3343, 3343, -1000, 2813, 2728, 43883, 43883, 62209,
	358, 355, 351, -1000, 43883, -100, -1000, -1000, 5311, 611,
	-1000, 2318, -1000, 2687, -1000, 43883, -1000, -156, -1000, 2758,
	-1000, -1000, 2687, 2687, -169, 115904, 51557, 51557, -1000, 606,
	43883, 2421, -1000, -1000, 779, -315, -1000, 920, -1000, -1000,
	-1000, -1000, -1000, 519, -1000, -1000, -1000, 177, 94588, 94588,
	777, -1000, -170, -1000, -1000, -171, -1000, 3285, 350, 22432,
	-1000, 1026, 3123, -1000, -1000, -1000, -1000, -1000, -1000, -168,
	105198, 105198, 2107, 3393, -1000, 3367, 807, 775, 176, 3362,
	337, 329, 328, -168, 105198, 105198, 105198, -1000, -1000, -1000,
	-1000, 203, -1000, -1000, -1000, 199, -1000, -1000, -1000, -1000,
	2528, -1000, -50, -1000, -1000, -1000, 43883, -1000, -1000, 3126,
	1159, 1158, -1000, -1000, 2909, -1000, 2247, -1000, 1068, -1000,
	1745, -1000, 43883, 604, 2541, 599, 597, 3431, 1820, 3428,
	1081, 2906, 2151, 2903, 2151, -1000, -1000, -1000, 964, -1000,
	115904, -1000, 593, 592, -1000, -53, 1562, 1670, 1015, -1000,
	-1000, 43883, 43883, 94063, -1000, 429, 3127, -29, -1000, -1000,
	1664, 1157, -1000, -1000, -1000, -1000, 1995, 1657, 1155, -1000,
	-1000, -1000, -168, -168, 1014, -1000, -1000, 2864, -1000, 1011,
	-1000, -1000, 43883, -1000, -55, 1154, 3246, 2242, 86150, 1150,
	-1000, 1148, -1000, -1000, -1000, 3240, 2151, 2902, 1182, -1000,
	-1000, -1000, -1000, -1000, 66467, -1000, 105198, 86150, 1600, 872,
	-1000, 2139, 872, 998, 2726, -1000, 2478, -1000, 86150, 3426,
	326, -172, -56, 62209, 3284, -1000, 2143, 571, 86150, 937,
	-1000, 3349, -1000, -1000, -1000, -1000, 3228, 86150, 3281, 2899,
	1001, 48, 86150, 3391, -1000, -1000, 86150, 2898, 2150, 2241,
	2376, 862, 71842, -1000, 1001, 2084, -66, -1000, 1792, 31413,
	3121, -177, -1000, -1000, -1000, 1026, 59568, 51557, 43883, 3425,
	-180, -1000, -1000, -1000, -1000, -1000, 93008, 93008, 70782, 70782,
	70782, 983, 105198, 105198, 72892, -1000, 590, 105198, 105198, 589,
	-1000, 105198, 105198, 3424, 70782, -57, 583, -1000, 917, 916,
	912, -1000, -1000, -1000, -1000, -1000, -1000, -190, 48, -1000,
	2105, 86150, -1000, 18644, -1000, -1000, -1000, -1000, -1000, 1000,
	-1000, -1000, 1980, 2178, 1980, 1778, 1777, -1000, 2115, -1000,
	-1000, -1000, -1000, 2476, 3135, 22432, 3233, 8783, 43883, 43883,
	4540, 4637, 4512, 8783, 43883, 43883, 62209, 522, -185, 43883,
	43883, -1000, 43883, 774, 115904, 3389, 43883, 323, 320, -1000,
	-1000, -1000, 3351, -1000, -1000, -1000, 115904, 43883, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 319, -1000, 175, -1000, -1000,
	-1000, 110973, -1000, 43883, 318, 3198, -1000, 317, 316, 9427,
	436, 113179, 112821, 112781, 315, -1000, -1000, 311, 305, 115904,
	2813, 115904, -1000, -1000, 893, 893, 1365, 1365, 1365, 1365,
	3343, 970, 996, 768, 353, 353, 353, 375, 800, 800,
	353, 353, 353, 2722, 2370, 580, 5234, -1000, -1000, 115904,
	115904, 277, -1000, -1000, -1000, -100, 276, 5311, -1000, 2673,
	3194, 115904, -1000, 51557, 2673, 2673, -1000, -1000, 2108, 105198,
	115904, 51557, -1000, 2964, -1000, 17016, -1000, 22432, -1000, -1000,
	-1000, -1000, 3349, -1000, 56389, -1000, 578, -1000, 1, -1000,
	3123, -1000, 910, -1000, -168, -168, -1000, -1000, 770, 3422,
	803, 22432, 271, -1000, -1000, -1000, -168, -168, -168, -1000,
	-1000, -1000, 3078, 115904, 105198, 105198, 105198, 2897, -1000, 3521,
	-1000, 1080, 112605, 52088, -1000, 52088, 105198, -1000, -1000, 1848,
	2481, 1109, -1000, 3161, 105198, -1000, 105198, -1000, -1000, 105198,
	105198, 86150, 105198, 2879, -193, 115904, -59, -1000, 908, -1000,
	1366, -1000, 18103, 105198, 86150, 105198, 86150, 2026, -1000, 2878,
	-194, 22432, -1000, 3388, 3384, 2894, 3166, 3382, 105198, -1000,
	105198, 86150, 3077, -1000, -1000, -1000, -1000, 1592, 1144, 998,
	-62, 577, -1000, 900, -1000, -1000, 895, 998, -1000, 70782,
	54239, 519, -1000, 2466, -1000, 90882, 2194, 48, -1000, 3420,
	93538, 576, -1000, 2098, -1000, 769, 65927, 1995, 48, 86150,
	-1000, -1000, 519, 270, -64, -1000, 1074, 22432, 86150, 2889,
	2379, 862, 71842, -1000, 1306, 2482, -1000, -65, -1000, 533,
	48, 2084, -1000, -66, 115904, -1000, 890, -1000, -196, -1000,
	-1000, 269, -1000, 3072, 3068, -1000, 2688, 52088, 574, 573,
	105198, 3067, -1000, -1000, -201, 2590, 2590, 70782, 54239, 70782,
	999, -1000, 2236, -1000, -1000, -1000, -1000, -1000, 22432, 1625,
	-1000, 572, 570, -1000, -1000, -1000, -1000, 3135, 8783, 8783,
	43883, 43883, 43883, 8783, 522, -202, -1000, 8783, 8783, -100,
	-1000, -1000, 114813, -1000, -1000, -1000, 115904, -1000, 17562, 2011,
	-1000, 112565, -1000, 29742, -1000, -1000, 43883, 43883, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 47782, 2719, 560, 62209,
	-1000, -1000, 265, 1004, 43883, 45554, 2758, 1004, 1004, -1000,
	-203, -1000, -1000, -1000, 3349, 1, -1000, -1000, 3417, 22432,
	-1000, 70782, 789, -1000, 3416, -1000, -1000, -1000, -1000, -1000,
	-1000, 105198, -1000, 105198, -1000, 22432, 105198, 2708, 2221, -1000,
	969, 2395, 556, 47782, 86150, 716, -1000, 3305, 2632, -210,
	-1000, 105198, 43883, 105198, -211, -213, 2214, -1000, -1000, 2213,
	43883, -1000, 62209, 551, 2151, 2151, -218, -219, -1000, -1000,
	43883, 1143, 105198, 30856, -1000, 3413, 3127, -1000, -1000, -1000,
	-1000, 105198, 43883, 1139, -1000, -1000, -1000, 3380, 2151, 22432,
	-1000, 2151, 2151, 3166, 1108, 105198, 86150, -1000, 2141, 2141,
	70782, 54239, -1000, -69, 998, 3279, 2520, 3410, -1000, -1000,
	-1000, -1000, 2394, -1000, -1000, 105198, 2392, 987, -1000, -221,
	-1000, 887, 882, 72892, 975, 955, -1000, -1000, -1000, -1000,
	519, 3277, -1000, 3379, 548, 105198, 2148, 542, 22432, 3117,
	862, 71842, -1000, 3014, 1792, -1000, 2232, 105198, 3110, -1000,
	2482, 541, -1000, 983, 540, 539, 2445, 2445, -224, 52088,
	52088, -226, 535, 983, -1000, -227, -1000, -1000, -1000, -1000,
	-73, -1000, 838, 815, -1000, -1000, 86150, 86150, 43883, 43883,
	-1000, 8783, 8783, 8783, -1000, 263, -1000, -1000, 2084, 3189,
	-1000, -76, 112207, 112167, 6381, 47782, 62209, -229, -1000, -1000,
	105198, 115904, -86, -1000, 115904, 534, 532, 400, -1000, -1000,
	-1000, 52, -1000, -1000, 3409, -1000, -1000, 1725, -1000, -1000,
	-1000, 105198, 2227, -1000, -1000, 1078, 43883, 5234, 531, 43883,
	-1000, 3275, -1000, 2503, 2754, 1893, 52088, -1000, 3135, -1000,
	111951, -1000, 1071, 1838, -1000, -1000, 115904, 3166, 52088, -1000,
	-1000, 529, 528, 115904, 526, 881, 2716, -1000, -1000, -1000,
	-1000, 115904, 525, 3246, -1000, -1000, -1000, -1000, 2151, 86150,
	-1000, -1000, -1000, -232, -1000, -1000, 1858, 48, 1952, 2631,
	-1000, 2194, 524, -1000, -1000, 2132, 2480, -1000, 93538, 30299,
	30299, 257, 3266, 955, -1000, 3338, -1000, 3262, 48, -1000,
	52088, -1000, 86150, 52088, 2142, 1876, 2357, 71842, -1000, 2376,
	-1000, -1000, -238, 105198, 1792, -1000, -1000, 70782, 70782, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1071, -241, -246, -1000, 70782, -1000, -1000, 2236, -1000, 105198,
	-1000, 105198, -1000, -1000, -247, -248, -1000, 2003, 43883, 29742,
	-1000, -1000, 6381, -254, -1000, -91, -1000, 3261, 45554, 3408,
	3407, 3406, -1000, -1000, -1000, -1000, 2888, 2682, 111592, 2341,
	105198, 12959, -1000, 2738, -1000, -1000, 2520, 521, -1000, -1000,
	-1000, -1000, 933, 105198, 2520, 2669, 86150, 1077, -255, 1980,
	1980, 43883, 29185, 2024, 43883, -1000, -1000, 3166, -1000, 2710,
	3340, -1000, 975, -1000, 2020, 105198, -1000, 3140, -1000, 3066,
	-1000, -1000, -1000, 2466, 48, -1000, -1000, 48, -1000, -256,
	1074, -257, 86150, 1437, 862, 862, -1000, 2379, 1026, -1000,
	-1000, -262, -263, 1893, 1071, 980, -265, -1000, -268, -273,
	-1000, -1000, 253, 44997, 44997, 44997, -100, -143, -1000, 105198,
	520, -1000, -1000, -1000, -1000, 2861, 990, -1000, 2134, 1816,
	250, 1101, -1000, -1000, 1952, 105198, -1000, -1000, -1000, 989,
	519, -1000, 43883, 1071, -274, -1000, 1058, -275, -1000, 1056,
	-276, -1000, 2715, -1000, -281, 2151, 988, 3227, -1000, -1000,
	-1000, 2132, 86150, -282, -1000, -1000, 2174, -1000, 2520, 987,
	-1000, 1071, 499, 1893, 497, -1000, -1000, 105198, 1410, 3117,
	3033, 983, 983, 2520, 1893, 1026, 493, 983, -1000, -1000,
	-1000, 2912, -1000, 48862, 2145, 1764, 114049, 2912, 2912, -1000,
	-1000, 105198, 3213, -1000, 2140, 2135, 1482, -1000, -1000, -1000,
	-1000, -1000, -1000, 2632, -283, 3212, 2341, 115904, 2520, -1000,
	1980, 2629, -1000, 1980, 2713, -1000, 2018, -1000, -1000, -1000,
	1663, 3332, -1000, 490, -1000, 105198, 1742, 1738, 3405, 1952,
	2132, 1893, 52088, 2520, 52088, -168, -1000, 1876, 1296, -1000,
	-1000, 1952, 2520, -1000, -1000, -1000, 1758, 3270, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 860, -1000, 3048, -1000,
	1093, 2123, 2123, 1026, -1000, 858, 2134, -1000, -1000, 488,
	-1000, 354, -1000, 2097, -1000, -1000, 105198, -1000, -1000, 3404,
	-1000, 975, -1000, 2520, -284, 1952, -291, 1437, -1000, 1542,
	980, 1952, 1757, -1000, -1000, 2064, 44440, 43883, -1000, 3317,
	-1000, -1000, 2431, -1000, -1000, 43883, 2632, 43883, 43883, 57981,
	-297, -1000, 2132, 1952, 1071, 980, 1893, -1000, 59568, 1026,
	980, -1000, -1000, -1000, 115904, -1000, -1000, -1000, 115904, -1000,
	-298, -300, -199, 93008, 2101, -1000, 980, 1893, 1026, 2520,
	-271, -1000, 1026, 1952, 1136, -303, -1000, -1000, -1000, 1026,
	2520, -1000, 1952, -1000, -1000, -1000, 260, -1000, -1000, 1952,
	980, 43883, 980, 1026, -308, 1026, -1000, 1952, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4247, 4238, 4235, 4233, 4232, 4221, 4218, 4216, 4214,
	4213, 4209, 4208, 4207, 4205, 4203, 4201, 4200, 4199, 4197,
	4191, 4189, 4188, 4186, 4184, 4183, 4180, 4173, 4167, 4166,
	4160, 4158, 4155, 4154, 4153, 4152, 4151, 4148, 4147, 4146,
	4145, 4144, 4139, 4136, 4128, 4125, 4122, 4121, 4117, 4115,
	4114, 4113, 4112, 4111, 4110, 4109, 4107, 52, 4106, 4105,
	4103, 4102, 4100, 4098, 4097, 4096, 4095, 4087, 4086, 4084,
	4083, 4082, 4078, 4077, 4073, 4072, 4070, 49, 4068, 247,
	4066, 4064, 4063, 4060, 4057, 4055, 4054, 4053, 4052, 4050,
	4046, 4043, 246, 4042, 109, 4041, 4040, 4039, 4036, 4035,
	244, 4033, 4031, 4029, 4028, 255, 4026, 4025, 4024, 4023,
	4022, 4020, 4015, 4014, 4008, 4007, 4005, 71, 138, 4003,
	4002, 78, 4001, 4000, 3998, 3994, 3993, 3984, 3977, 3974,
	3971, 3970, 230, 3967, 243, 3966, 3965, 3964, 3962, 3956,
	3954, 3952, 3950, 3947, 3946, 3943, 3940, 3937, 3936, 3935,
	3933, 3932, 3930, 3928, 3927, 3926, 3925, 3923, 3922, 3921,
	3920, 3919, 3917, 3916, 3914, 3911, 3910, 3908, 3907, 252,
	188, 3906, 3905, 242, 241, 3904, 3903, 3900, 3898, 3897,
	118, 4, 31, 3895, 3892, 83, 82, 72, 88, 90,
	86, 3891, 97, 3887, 108, 53, 3886, 9, 19, 213,
	219, 9317, 214, 3885, 3884, 3882, 215, 168, 3881, 210,
	3880, 3879, 3878, 3877, 54, 42, 159, 153, 151, 150,
	196, 3876, 3875, 87, 62, 55, 38, 16, 234, 2,
	35, 3873, 3872, 3870, 3869, 3469, 107, 3868, 239, 222,
	144, 3867, 3866, 3865, 761, 3862, 3860, 44, 3858, 217,
	95, 111, 24, 105, 3857, 130, 29, 3856, 166, 117,
	3855, 136, 79, 73, 8425, 4912, 3854, 120, 63, 147,
	428, 205, 155, 173, 93, 139, 184, 181, 157, 22,
	3852, 225, 3851, 3269, 67, 164, 3850, 3849, 3848, 75,
	175, 94, 3847, 3846, 61, 10, 17, 7, 149, 20,
	104, 39, 13, 3843, 25, 3841, 3838, 3835, 3834, 3833,
	37, 140, 3832, 251, 3831, 69, 48, 26, 3824, 28,
	185, 3821, 199, 114, 3819, 3818, 226, 179, 170, 3817,
	68, 202, 3816, 3815, 3814, 3813, 3811, 119, 3, 113,
	3808, 3804, 124, 3803, 47, 211, 171, 3802, 64, 3801,
	3798, 152, 89, 137, 250, 129, 193, 103, 197, 160,
	204, 3796, 3795, 3794, 191, 3791, 3790, 190, 133, 3785,
	3780, 180, 256, 77, 40, 65, 206, 70, 172, 158,
	3778, 182, 3774, 3772, 254, 162, 194, 1, 14, 81,
	116, 3770, 5, 209, 134, 174, 102, 3769, 5527, 2317,
	2146, 3764, 3760, 127, 106, 60, 112, 135, 238, 59,
	3752, 3748, 2181, 3746, 3745, 3744, 3741, 161, 3736, 3735,
	3733, 125, 128, 165, 3732, 80, 57, 45, 12, 110,
	233, 249, 101, 198, 148, 227, 3731, 3726, 3725, 169,
	3724, 91, 146, 3723, 176, 235, 3722, 3720, 92, 3719,
	132, 274, 56, 131, 3718, 195, 3714, 3712, 3711, 3710,
	3708, 3707, 3706, 218, 208, 3705, 3704, 3702, 33, 167,
	3701, 236, 178, 154, 100, 50, 3699, 84, 2924, 3697,
	141, 207, 96, 143, 237, 3696, 1155, 43, 187, 0,
	11809, 6712, 10038, 11045, 3695, 4429, 3694, 3693, 3691, 189,
	115, 3690, 3689, 3688, 99, 3683, 66, 3682, 3681, 58,
	3679, 21, 8, 11, 27, 23, 221, 203, 3677, 3674,
	30, 123, 121, 3672, 248, 201, 3669, 3667, 3664, 3661,
	85, 3660, 36, 3655, 34, 3653, 3650, 46, 15, 41,
	3646, 3644, 232, 3643, 186, 228, 3641, 142, 3640, 3270,
	126, 3638, 3637, 231, 76, 3631, 262, 3630, 3229, 3629,
	3627, 18, 3625, 3624, 224, 156, 192, 3622, 3621, 145,
	3618, 3617, 3616, 259, 3615, 3613, 32, 3612, 6, 3611,
	3610, 177, 3037, 3609, 3608, 51, 3605, 163,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 11, 11,
	7, 7, 7, 8, 8, 8, 8, 44, 44, 9,
	9, 9, 9, 9, 9, 9, 9, 32, 28, 29,
	30, 488, 488, 10, 10, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 16, 16, 33, 33, 17, 17,
	35, 35, 18, 18, 36, 36, 553, 553, 21, 38,
	22, 39, 15, 554, 554, 554, 554, 31, 23, 40,
	25, 25, 25, 25, 25, 183, 183, 183, 183, 20,
	20, 34, 34, 217, 217, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	552, 552, 219, 219, 218, 213, 213, 555, 555, 220,
	220, 220, 222, 222, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 452, 452, 452, 484, 484, 483, 483,
	483, 568, 568, 569, 569, 569, 569, 569, 120, 120,
	350, 350, 350, 46, 46, 46, 46, 46, 547, 547,
	185, 185, 185, 187, 187, 186, 186, 186, 186, 68,
	68, 560, 560, 561, 561, 559, 562, 562, 562, 184,
	184, 184, 116, 116, 116, 116, 117, 117, 118, 118,
	188, 188, 188, 190, 190, 189, 189, 189, 189, 189,
	189, 189, 189, 194, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 96, 96, 486, 486, 487, 487, 179,
	179, 180, 180, 180, 180, 181, 181, 182, 182, 182,
	60, 191, 191, 193, 193, 192, 192, 48, 48, 48,
	48, 48, 48, 48, 49, 49, 49, 49, 49, 50,
	50, 50, 50, 50, 50, 51, 51, 51, 51, 51,
	51, 58, 58, 58, 58, 170, 170, 61, 61, 61,
	61, 61, 61, 61, 61, 61, 61, 61, 65, 65,
	65, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	571, 571, 572, 572, 573, 573, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 74, 74, 312, 312, 282, 282, 75,
	75, 75, 76, 76, 77, 77, 62, 62, 545, 545,
	327, 327, 443, 443, 79, 79, 349, 349, 80, 80,
	80, 80, 80, 80, 81, 81, 81, 81, 81, 81,
	81, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 89, 89, 89, 89, 89,
	90, 90, 90, 87, 87, 87, 84, 84, 84, 83,
	83, 83, 88, 88, 88, 544, 273, 273, 86, 86,
	86, 85, 85, 85, 328, 328, 91, 91, 91, 91,
	283, 92, 92, 92, 92, 92, 92, 92, 92, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 445, 445, 93, 93, 93, 410, 410, 97,
	97, 97, 365, 365, 98, 98, 98, 98, 98, 99,
	99, 99, 99, 99, 99, 119, 119, 119, 119, 119,
	119, 549, 549, 320, 320, 238, 238, 238, 238, 109,
	109, 109, 109, 110, 110, 110, 111, 111, 175, 175,
	126, 126, 126, 126, 126, 125, 125, 125, 125, 125,
	125, 52, 52, 52, 53, 53, 54, 54, 55, 55,
	56, 56, 57, 57, 57, 57, 57, 128, 128, 565,
	565, 130, 127, 127, 127, 129, 129, 129, 129, 131,
	132, 132, 132, 132, 132, 132, 132, 132, 133, 133,
	477, 477, 336, 336, 475, 475, 496, 496, 476, 476,
	287, 287, 287, 287, 287, 288, 288, 288, 485, 485,
	485, 485, 485, 485, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	176, 176, 177, 178, 178, 178, 178, 178, 155, 155,
	155, 169, 169, 169, 169, 169, 169, 169, 158, 158,
	158, 144, 144, 135, 135, 135, 135, 135, 135, 135,
	139, 139, 139, 139, 139, 139, 139, 139, 136, 136,
	146, 146, 146, 146, 146, 140, 140, 141, 141, 165,
	165, 143, 143, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 137, 137, 137, 137, 148, 148, 148, 148,
	372, 372, 372, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 168, 168, 168, 168, 168, 168,
	563, 563, 564, 564, 162, 162, 162, 162, 162, 162,
	424, 424, 156, 156, 156, 156, 161, 161, 161, 161,
	164, 164, 164, 164, 355, 355, 153, 153, 153, 154,
	154, 154, 159, 159, 160, 157, 157, 163, 163, 163,
	163, 138, 138, 138, 575, 575, 575, 166, 166, 152,
	152, 167, 167, 167, 167, 167, 167, 167, 167, 150,
	150, 150, 149, 149, 149, 149, 151, 151, 142, 546,
	546, 542, 542, 542, 542, 542, 542, 542, 542, 543,
	543, 543, 543, 548, 548, 102, 102, 102, 102, 102,
	112, 112, 112, 112, 112, 103, 103, 103, 103, 103,
	105, 105, 104, 104, 104, 104, 69, 69, 69, 69,
	69, 14, 14, 14, 70, 70, 197, 197, 197, 301,
	301, 198, 198, 295, 295, 295, 295, 195, 195, 196,
	196, 71, 71, 576, 576, 576, 556, 556, 556, 557,
	557, 557, 557, 557, 557, 289, 289, 290, 290, 390,
	390, 390, 390, 390, 293, 293, 293, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 296, 296, 221, 221,
	221, 299, 300, 300, 297, 297, 298, 298, 298, 303,
	303, 302, 305, 305, 304, 389, 505, 505, 507, 507,
	507, 507, 507, 507, 507, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 373, 373, 577, 577,
	503, 503, 503, 504, 499, 499, 500, 500, 500, 500,
	500, 291, 291, 292, 292, 292, 292, 501, 502, 318,
	318, 428, 506, 506, 508, 508, 510, 578, 578, 578,
	578, 578, 578, 579, 579, 579, 388, 388, 387, 387,
	310, 310, 511, 511, 511, 511, 512, 512, 512, 512,
	512, 515, 514, 513, 513, 513, 513, 513, 73, 73,
	73, 352, 352, 351, 351, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	172, 172, 241, 241, 67, 67, 67, 12, 12, 12,
	558, 558, 558, 72, 72, 72, 72, 72, 72, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 551,
	551, 550, 550, 242, 242, 581, 581, 78, 78, 78,
	78, 78, 78, 78, 446, 446, 447, 447, 66, 66,
	66, 66, 66, 374, 374, 371, 371, 370, 370, 317,
	317, 426, 426, 426, 427, 246, 246, 247, 247, 214,
	214, 214, 27, 26, 19, 19, 24, 24, 42, 42,
	42, 42, 45, 45, 41, 41, 41, 41, 43, 43,
	37, 37, 566, 566, 567, 567, 108, 108, 113, 113,
	113, 113, 113, 114, 114, 114, 114, 115, 115, 115,
	115, 124, 124, 171, 171, 171, 171, 171, 171, 171,
	47, 47, 47, 47, 59, 59, 59, 59, 122, 583,
	583, 583, 123, 123, 123, 582, 582, 239, 239, 384,
	384, 385, 385, 584, 584, 386, 386, 386, 386, 386,
	232, 231, 233, 233, 234, 234, 64, 64, 64, 227,
	227, 228, 228, 228, 229, 229, 223, 223, 224, 224,
	225, 225, 226, 226, 230, 230, 585, 585, 100, 100,
	100, 174, 174, 281, 281, 281, 381, 381, 381, 311,
	311, 253, 253, 383, 383, 383, 383, 348, 348, 348,
	173, 173, 325, 325, 338, 338, 339, 339, 440, 440,
	340, 106, 106, 107, 107, 121, 121, 201, 201, 199,
	199, 199, 199, 199, 199, 199, 199, 206, 206, 207,
	207, 208, 208, 209, 210, 210, 210, 210, 329, 329,
	211, 211, 211, 200, 200, 200, 202, 202, 202, 202,
	202, 202, 202, 205, 205, 205, 205, 212, 212, 212,
	204, 204, 522, 522, 522, 524, 524, 526, 526, 525,
	525, 521, 521, 523, 523, 580, 580, 354, 354, 354,
	308, 309, 306, 306, 307, 307, 315, 315, 313, 314,
	314, 316, 316, 425, 425, 425, 215, 215, 215, 345,
	345, 345, 345, 346, 346, 377, 377, 375, 375, 375,
	375, 376, 376, 378, 378, 378, 379, 379, 380, 380,
	342, 342, 343, 343, 344, 344, 344, 344, 406, 406,
	203, 203, 203, 322, 322, 322, 323, 323, 396, 396,
	396, 396, 396, 396, 397, 397, 395, 395, 395, 395,
	429, 429, 429, 429, 429, 429, 429, 429, 429, 430,
	431, 431, 324, 324, 432, 382, 382, 540, 540, 540,
	541, 541, 423, 423, 433, 433, 433, 433, 433, 433,
	421, 421, 422, 422, 441, 442, 442, 358, 358, 358,
	358, 356, 356, 359, 359, 359, 359, 357, 357, 434,
	434, 434, 434, 347, 347, 435, 435, 435, 435, 436,
	437, 437, 438, 438, 391, 392, 392, 448, 448, 448,
	448, 450, 321, 321, 321, 321, 321, 498, 497, 497,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 465, 465, 465, 465, 465, 465, 465, 451, 451,
	451, 451, 451, 455, 455, 455, 454, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 456, 456, 461,
	461, 462, 462, 462, 457, 458, 463, 463, 463, 463,
	586, 586, 467, 467, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 453, 453, 453, 460, 460, 460, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 366, 366, 368, 368, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 400, 400, 400, 400, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 516, 516, 516, 516, 516, 516, 516, 516,
	402, 402, 519, 519, 520, 520, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 527, 527, 528, 528, 530,
	530, 531, 531, 532, 533, 533, 533, 534, 535, 535,
	529, 529, 536, 536, 536, 536, 537, 537, 538, 538,
	538, 538, 538, 539, 539, 539, 539, 539, 412, 412,
	413, 413, 419, 419, 419, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 243, 243, 243, 243, 243, 334, 334, 332, 332,
	332, 335, 335, 333, 333, 331, 331, 330, 330, 409,
	409, 407, 407, 411, 411, 360, 360, 466, 466, 466,
	466, 466, 466, 466, 466, 361, 361, 361, 369, 362,
	362, 363, 363, 363, 363, 363, 403, 404, 364, 364,
	364, 405, 405, 414, 418, 418, 417, 416, 416, 415,
	415, 393, 393, 394, 394, 341, 341, 587, 587, 337,
	337, 439, 439, 439, 439, 285, 285, 326, 326, 284,
	284, 276, 276, 277, 277, 277, 277, 319, 319, 420,
	420, 468, 468, 469, 469, 470, 470, 471, 471, 472,
	473, 474, 408, 408, 263, 262, 250, 251, 261, 260,
	259, 249, 252, 256, 257, 258, 254, 255, 269, 268,
	267, 274, 275, 265, 266, 444, 248, 278, 278, 279,
	279, 279, 280, 280, 280, 280, 244, 244, 245, 245,
	270, 270, 271, 272, 272, 264, 264, 264, 235, 235,
	235, 236, 236, 237, 237, 482, 482, 479, 479, 479,
	480, 480, 480, 481, 481, 481, 481, 478, 478, 478,
	478, 478, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 490, 490, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 492, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 495, 495,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 3, 1, 1, 1, 3, 4, 6, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 6, 6,
	4, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 6, 6, 9,
	6, 9, 6, 5, 6, 5, 1, 1, 5, 5,
	6, 6, 4, 4, 4, 4, 3, 4, 4, 4,
	7, 7, 9, 8, 9, 5, 3, 5, 7, 4,
	12, 4, 12, 1, 3, 5, 5, 2, 5, 3,
	6, 4, 6, 5, 6, 6, 4, 8, 3, 4,
	2, 3, 10, 3, 6, 4, 3, 1, 3, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 8, 6, 6, 6,
	9, 4, 3, 2, 2, 0, 1, 3, 1, 1,
	1, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 12,
	3, 1, 0, 1, 1, 2, 3, 3, 0, 4,
	6, 0, 5, 6, 8, 2, 1, 3, 1, 3,
	2, 5, 0, 1, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 6, 4, 9, 7, 12, 12,
	12, 9, 2, 7, 2, 1, 1, 1, 3, 3,
	0, 3, 1, 3, 1, 1, 3, 2, 5, 0,
	7, 2, 0, 1, 2, 3, 1, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 6, 6, 6, 6, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 6, 3,
	3, 4, 3, 3, 4, 3, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 3,
	2, 0, 1, 0, 1, 0, 4, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 7, 3, 2, 0, 1, 3, 3,
	1, 0, 1, 2, 2, 1, 6, 5, 1, 2,
	1, 3, 2, 0, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 6, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 1, 1, 3, 4, 6,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 6,
	4, 7, 7, 7, 2, 6, 4, 7, 7, 7,
	2, 2, 1, 1, 3, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 2, 6, 3, 3, 4, 4, 3,
	1, 3, 2, 3, 3, 1, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 2, 1, 3, 3, 3, 3, 3, 2, 3,
	3, 1, 1, 1, 1, 1, 2, 2, 5, 7,
	3, 3, 3, 4, 4, 6, 5, 5, 5, 3,
	4, 4, 3, 4, 4, 3, 4, 4, 5, 3,
	5, 5, 5, 7, 3, 3, 3, 2, 3, 2,
	3, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 4, 3, 4, 3, 3, 4, 4, 5,
	0, 1, 1, 3, 2, 4, 3, 3, 5, 3,
	4, 3, 5, 3, 3, 4, 4, 5, 3, 3,
	1, 1, 0, 2, 5, 4, 6, 4, 6, 4,
	1, 0, 3, 4, 4, 5, 7, 5, 3, 3,
	3, 4, 4, 5, 2, 0, 4, 2, 3, 4,
	2, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 3, 4, 3, 1, 1, 1, 2, 3, 2,
	3, 6, 6, 7, 9, 7, 9, 3, 4, 10,
	10, 3, 5, 5, 5, 3, 2, 5, 5, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 1, 2, 0, 1, 2, 1, 2, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 6, 5, 8,
	3, 6, 6, 3, 12, 15, 1, 2, 3, 0,
	2, 0, 4, 0, 4, 5, 4, 3, 3, 1,
	3, 10, 13, 0, 2, 3, 1, 1, 0, 1,
	2, 2, 2, 2, 1, 1, 0, 1, 3, 1,
	1, 1, 1, 3, 3, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 8, 0, 1, 1,
	0, 2, 1, 0, 1, 0, 9, 9, 3, 1,
	3, 7, 1, 3, 11, 3, 2, 0, 3, 1,
	2, 2, 3, 2, 6, 2, 1, 2, 2, 8,
	4, 2, 5, 5, 5, 2, 2, 0, 1, 3,
	11, 12, 8, 5, 3, 1, 5, 10, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 5, 1,
	3, 1, 2, 0, 1, 2, 2, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 6, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 2, 2, 4, 7, 3, 4, 6, 3,
	1, 1, 1, 8, 10, 11, 7, 10, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 17, 20,
	16, 19, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 2, 4, 2, 3, 1, 0, 2, 0, 1,
	1, 0, 9, 6, 6, 8, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 8, 1, 0, 2, 0, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	3, 2, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 0, 2, 4, 2, 1, 0, 2, 1, 1,
	0, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	2, 3, 2, 2, 1, 2, 11, 14, 3, 3,
	0, 3, 4, 2, 1, 0, 3, 0, 3, 0,
	3, 0, 3, 0, 4, 0, 1, 0, 6, 7,
	3, 6, 3, 1, 3, 1, 1, 4, 2, 1,
	3, 1, 3, 4, 8, 11, 5, 2, 2, 0,
	10, 3, 2, 0, 1, 3, 1, 1, 3, 3,
	5, 6, 4, 5, 4, 1, 1, 3, 3, 1,
	2, 4, 4, 2, 3, 5, 5, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 0, 2,
	0, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 8, 8, 8, 2, 4, 4, 4,
	2, 2, 2, 2, 3, 1, 3, 1, 2, 6,
	7, 1, 0, 1, 0, 1, 0, 1, 1, 0,
	1, 5, 1, 0, 1, 0, 1, 0, 3, 3,
	5, 1, 3, 3, 4, 5, 2, 2, 0, 2,
	2, 1, 1, 1, 0, 1, 0, 2, 2, 5,
	4, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 3, 1, 3, 3, 3, 2, 0,
	4, 2, 5, 3, 2, 0, 1, 3, 3, 5,
	1, 1, 1, 1, 1, 3, 2, 4, 4, 0,
	4, 4, 3, 4, 1, 5, 3, 4, 5, 5,
	1, 5, 1, 3, 2, 0, 3, 0, 2, 3,
	1, 3, 2, 0, 3, 5, 6, 4, 6, 4,
	3, 2, 1, 0, 5, 1, 0, 2, 2, 2,
	1, 1, 0, 1, 1, 1, 0, 4, 2, 1,
	2, 2, 4, 1, 3, 1, 2, 3, 2, 4,
	1, 0, 1, 0, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 3, 5,
	1, 2, 1, 1, 1, 1, 1, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 1, 1, 4, 4, 6, 6, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 1, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	2, 2, 4, 1, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 6, 6,
	8, 8, 6, 4, 6, 6, 6, 4, 1, 3,
	3, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 1, 2,
	3, 2, 3, 2, 3, 1, 0, 1, 3, 1,
	3, 3, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 1, 2, 3,
	0, 3, 3, 2, 2, 1, 2, 2, 3, 2,
	1, 1, 1, 5, 1, 2, 4, 2, 0, 1,
	0, 3, 5, 1, 0, 1, 2, 1, 0, 1,
	3, 3, 2, 1, 1, 1, 3, 1, 3, 3,
	1, 1, 1, 1, 5, 3, 1, 1, 3, 1,
	1, 1, 1, 2, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 571, -94, -91, -60, -58, -97, -98,
	-80, -99, -93, -119, -124, -106, -107, -108, -120, -126,
	-171, -176, -177, -178, -3, -46, -48, -61, -79, -81,
	-92, -101, -100, -102, -109, -116, -112, -96, -52, -121,
	-125, -134, -172, -173, -174, 32, 31, 100, 80, 151,
	126, 134, 196, 373, 413, 424, 387, 139, 405, 392,
	-129, -130, 441, -47, -59, -123, -122, 73, 127, 400,
	-4, -12, 29, 46, -49, -50, -51, 62, -67, -63,
	-74, -68, -65, -570, 102, -523, -82, -85, -115, -574,
	158, 214, -103, -104, 356, -110, -111, 407, -113, -114,
	409, 159, -54, -53, 153, -199, -201, -127, -128, -175,
	-135, -136, -137, -138, -139, -140, -141, -165, -142, -143,
	-144, -145, -146, -147, -168, -148, -149, -150, -151, -152,
	-157, -153, -154, -155, -156, -158, -159, -161, -162, -163,
	-164, -166, -167, 446, -160, 503, 49, 460, 82, 143,
	417, 21, -5, -6, -7, -8, -9, -10, -11, -14,
	-13, -62, -64, -66, -69, -70, -71, -78, -72, -73,
	-522, -83, -84, -87, -89, -90, -86, -88, 406, -202,
	-200, 568, 518, -16, -21, -22, -17, -18, -20, -23,
	-19, -24, -33, -38, -39, -35, -36, -34, -37, -40,
	-41, -42, -43, -44, -45, -26, -31, -32, -27, -28,
	-29, -30, -15, -25, 537, 546, -205, -203, -204, -212,
	433, 526, 477, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, -283, 2, -265, -270, -271,
	-272, -264, -235, -492, -495, 4, -489, -493, 165, 223,
	320, 21, 23, 22, 24, 25, 26, 27, 29, 30,
	41, 42, 44, 45, 46, 47, 48, 49, 53, 55,
	59, 60, 61, 62, 63, 64, 68, 73, 74, 79,
	80, 81, 82, 83, 84, 85, 91, 88, 89, 90,
	92, 94, 96, 97, 98, 99, 100, 101, 103, 104,
	105, 107, 108, 116, 117, 118, 119, 121, 126, 127,
	130, 125, 129, 132, 133, 134, 137, 138, 139, 141,
	142, 144, 145, 146, 148, 149, 151, 152, 153, 156,
	154, 485, 155, 157, 158, 159, 160, 163, 171, 172,
	173, 178, 180, 184, 185, 188, 189, 190, 191, 192,
	193, 194, 195, 197, 201, 203, 204, 205, 206, 207,
	213, 214, 216, 217, 218, 219, 224, 225, 226, 230,
	227, 236, 237, 241, 242, 243, 245, 249, 250, 251,
	252, 253, 254, 256, 258, 257, 260, 263, 264, 267,
	271, 272, 275, 276, 277, 278, 280, 281, 284, 282,
	285, 286, 283, 287, 289, 290, 291, 292, 293, 294,
	295, 296, 297, 298, 299, 300, 288, 303, 301, 305,
	306, 307, 318, 316, 311, 312, 308, 313, 309, 310,
	314, 315, 322, 323, 326, 211, 328, 329, 332, 350,
	336, 337, 338, 341, 342, 345, 348, 349, 351, 352,
	353, 354, 355, 356, 357, 358, 360, 361, 363, 364,
	365, 367, 368, 369, 371, 373, 374, 376, 377, 379,
	380, 381, 382, 383, 384, 385, 387, 389, 388, 390,
	392, 394, 395, 400, 405, 402, 403, 404, 406, 407,
	408, 409, 411, 412, 413, 415, 416, 417, 418, 420,
	422, 423, 426, 427, 443, 444, 462, 424, 425, 428,
	429, 430, 431, 432, 436, 434, 435, 437, 438, 439,
	441, 442, 445, 446, 448, 449, 450, 451, 452, 453,
	456, 458, 459, 460, 461, 463, 466, 467, 468, 469,
	464, 476, 471, 473, 474, 478, 479, 480, 481, 482,
	483, 484, 486, 488, 496, 497, 498, 500, 503, 504,
	505, 506, 494, 508, 509, 512, 513, 514, 517, 515,
	516, 518, 520, 523, 524, 525, 531, 530, 532, 538,
	539, 541, 542, 543, 36, 50, 51, 54, 56, 58,
	69, 70, 71, 75, 122, 123, 150, 161, 162, 174,
	186, 187, 198, 200, 208, 209, 210, 231, 232, 234,
	239, 261, 325, 327, 343, 347, 362, 366, 370, 372,
	386, 419, 454, 465, 470, 489, 490, 491, 492, 499,
	501, 526, 527, 528, 533, 540, -283, 2, -265, 334,
	-258, 2, -235, -235, 373, 28, 2, 28, 361, 435,
	480, 482, 2, -549, -320, 2, 28, -238, -235, 102,
	196, 433, -258, 2, -549, -320, 25, 2, -235, 2,
	348, 22, 27, 66, 77, 98, 137, 160, 181, 184,
	-573, 350, 380, 422, 437, 476, 486, 500, 2, 530,
	281, 434, 477, 223, 118, 505, 428, -558, 426, 427,
	348, 378, 415, 199, 519, -239, 2, 424, -235, 281,
	2, 571, 94, 272, 74, 419, 438, -132, 497, -131,
	489, 428, -133, -477, 2, 303, -235, 571, 571, 571,
	28, -248, -235, 477, 223, 428, 118, 474, 571, 2,
	477, 353, 530, 434, 118, 383, 223, 505, 428, -558,
	281, -547, 2, -542, 4, -493, -489, -277, -276, 477,
	483, 118, -272, -264, 561, -271, 571, 571, 571, 2,
	242, 243, 382, 381, 438, 439, 571, 571, 571, 571,
	426, 2, 160, 22, 27, 66, 93, 98, 124, 181,
	184, 339, -571, 350, 380, 437, 476, 479, 486, 500,
	-557, 461, 68, 428, -556, -558, 281, 505, 137, -370,
	118, 272, 195, 513, 482, 480, 511, 130, 230, 516,
	515, 571, 571, -94, 2, 568, 32, 31, 139, 441,
	-194, 477, 235, 2, -235, 571, 571, 2, 242, 243,
	426, 427, 571, 571, 182, -542, 2, 571, 571, 2,
	242, 243, 426, 427, 235, 2, 68, 430, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 2, -169, 438, 461, 205, 47, 46, 74, 28,
	379, 79, 354, 119, 145, 506, 197, 223, 224, 250,
	93, 94, -372, 44, 243, 242, 427, -563, 426, -424,
	478, 429, 435, 473, 254, 424, 497, 102, 520, 416,
	543, 383, 384, 395, 154, 4, 118, 303, 440, 489,
	272, 423, 357, 84, 571, -580, 2, 477, -582, 2,
	497, 497, 2, -582, 2, -582, 2, -582, 2, -583,
	497, 540, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, -200,
	-202, -201, 571, 571, 571, 571, 571, 571, 571, -169,
	438, 2, 74, 28, -313, -315, 510, 233, 147, 340,
	-199, -201, 2, -522, -475, 2, -398, -496, -400, 559,
	560, 552, 475, 67, 319, 544, -412, 124, 511, 334,
	-495, -401, -414, 150, 419, -335, 8, 9, 5, 6,
	7, -244, -402, -408, 502, 164, 324, -280, 572, 10,
	568, -519, -201, -413, 37, 200, 65, -479, -279, -245,
	-451, 234, -278, -264, -516, -517, 4, -489, -490, -480,
	-454, -462, -458, -459, -465, -235, -492, 77, 110, 111,
	109, 114, 113, 274, 273, 115, 112, 440, 519, 66,
	36, 208, 209, 239, 325, 210, 75, -518, 138, -491,
	231, 232, 454, 51, 386, 174, 123, 122, 327, 56,
	54, 527, -463, 120, 489, 490, 491, 492, 186, 187,
	58, 161, 162, 347, 370, 470, 499, 501, 198, 261,
	43, 106, 183, 229, 212, 238, 240, 244, 262, 265,
	304, 317, 321, 344, 346, 414, 447, -586, 528, 465,
	69, 70, -524, 388, -525, -258, -524, 571, 571, 573,
	571, -306, -308, -309, 2, 28, 135, 568, 2, -429,
	2, -430, -434, -201, 255, -433, 568, -431, 566, -265,
	335, -520, 420, -516, -517, -244, -264, -279, 4, -489,
	-491, 570, -310, 568, 118, 477, 78, 223, -365, 568,
	-235, 28, 334, 493, 573, -307, 377, -410, 568, 334,
	182, 337, 60, 285, 2, 2, 2, 2, 2, 208,
	-235, 477, 117, 2, 253, 2, 2, 2, 2, 2,
	2, 2, -328, 208, 2, -265, 530, -328, 208, 2,
	-328, 208, 2, -371, 2, 87, -249, 208, 2, -235,
	-273, 208, 2, -268, -270, -319, 208, 2, -235, -487,
	208, 2, -486, -482, 10, -481, 5, 4, -489, -493,
	-490, -492, 77, -398, 2, -121, 2, 60, -235, 530,
	2, 2, 443, 2, 568, -132, 71, 497, 43, 438,
	-385, 2, -386, -231, -232, -233, -441, -234, 241, 376,
	385, 547, 128, 319, 543, -475, -565, 182, 551, 493,
	-475, -336, 570, 2, 2, 2, 2, 2, 2, -434,
	208, -265, 2, -262, -478, 4, -489, -493, -490, -494,
	28, 31, 32, 33, 35, 37, 38, 39, 40, 57,
	65, 66, 72, 76, 78, 87, 93, 102, 109, 110,
	112, 111, 113, 114, 115, 124, 128, 131, 135, 136,
	140, 143, 147, 164, 166, 179, 181, 182, 196, 199,
	202, 215, 228, 233, 235, 255, 259, 266, 273, 274,
	319, 324, 330, 334, 335, 339, 340, 359, 375, 391,
	410, 433, 440, 457, 472, 477, 487, 493, 495, 502,
	510, 511, 519, 521, 529, 534, 535, 536, 537, -495,
	2, -434, 208, 2, -267, 208, -434, -270, 2, -249,
	2, -261, -478, 2, -284, 208, -265, -266, -270, -268,
	2, -274, 2, -235, -486, 208, 2, 530, 235, 493,
	573, -326, -276, -277, -474, 8, -319, 570, -398, 2,
	-121, -105, 2, 179, -398, 208, 2, -121, 208, 2,
	-398, 208, 2, -121, 208, 2, -560, 2, -486, 208,
	-235, 2, 285, 2, 2, 500, 2, 98, 477, 117,
	2, 404, -572, 422, 504, 2, 2, 2, 2, 2,
	2, 2, 477, -254, 2, -235, 179, -274, 208, -275,
	2, -235, -236, 434, -581, 388, -486, 208, 2, 530,
	-268, 2, -268, 223, 237, -249, 208, 2, 482, 480,
	482, 480, 182, 2, 235, 2, 235, 2, -435, 2,
	-436, -430, -437, 566, 335, -445, 2, -444, -481, 526,
	-94, 568, -94, 568, 438, 568, -486, -265, -265, -398,
	2, -121, -105, 2, -398, 2, -121, 2, -118, -117,
	-486, 568, 182, -398, 2, -121, -105, 2, -398, 2,
	-121, 2, -194, 179, 2, 118, 477, -169, 2, 179,
	521, 2, 8, 2, 215, -486, 429, 384, 171, 2,
	443, 2, 444, 74, -372, 543, 74, 182, 2, 182,
	2, -355, 2, 537, 2, 2, -546, 2, 334, 182,
	2, 182, 2, 182, 2, 182, 2, 182, 2, 381,
	439, 498, 243, 2, -121, 534, -105, -398, 534, 2,
	-564, 179, 427, -398, 2, 496, 252, 155, 182, -355,
	2, 182, 2, 182, 2, 5, 2, 382, 462, 2,
	241, 376, 462, 2, -265, -575, 2, 477, 530, 434,
	2, 2, 88, 89, 182, 2, 182, 2, 182, 182,
	543, 2, -347, -434, -384, -385, -384, 493, -313, -315,
	-169, 443, 2, -206, -345, -208, 179, -375, -376, -209,
	266, 166, 330, -210, -354, 28, 135, -354, -354, 60,
	569, 569, 11, 12, 76, 41, 559, 560, 561, 562,
	177, 563, 564, 557, 558, 556, 549, 550, 554, 247,
	248, 95, 553, 551, 86, 279, 421, 167, 168, 169,
	170, 401, 221, 34, 222, 14, 15, 16, 33, 339,
	265, 544, 212, 447, 552, 17, 18, 19, 238, 240,
	321, 50, 215, -243, -286, -398, -398, -398, -398, -398,
	-398, -398, 346, 568, -341, -393, 566, -201, 568, 568,
	568, -474, -201, -398, -412, 569, -333, 568, -201, -412,
	-407, 568, 419, 566, 568, -415, -398, 5, 5, 5,
	568, 570, -527, 538, 179, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	372, -456, 568, -455, 568, -455, -455, 531, -453, 568,
	546, 539, 568, -453, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 531, 573, -524,
	-310, 568, -337, -439, -398, 561, -337, -337, 334, -330,
	-398, 106, -358, 244, 304, 183, 262, 414, 229, -395,
	572, -395, -423, 546, -201, -431, -264, -201, -433, 568,
	-429, -423, -95, -474, -79, -92, -100, -121, -134, -173,
	-174, 561, -265, 568, 182, 568, 570, -478, 182, -319,
	-249, -265, -278, -279, -284, 134, -330, -542, 505, 428,
	-319, -238, 38, -409, -448, -449, -498, 572, -497, -451,
	-461, -457, -460, 362, 366, -480, 54, 527, -463, 234,
	4, -489, -491, 231, 232, 454, 51, 386, 174, 123,
	122, 327, 56, 489, 490, 491, 492, 186, 187, 58,
	528, 465, 69, 70, -542, 505, 428, -319, 179, -484,
	2, -483, -482, 115, 440, 2, 150, 2, 2, 2,
	-235, -220, 573, 64, 408, 150, -328, 208, -220, 150,
	-220, 150, -285, 208, -284, -220, 150, -220, 573, 150,
	-220, 573, 150, 573, 150, -484, 2, -371, -477, -330,
	38, -385, 2, 124, -482, -584, 573, 264, -288, 278,
	318, 204, 335, 541, 328, 128, -485, 5, 4, -408,
	-420, 124, 272, 234, -468, -470, 8, -469, 9, -471,
	559, 560, -476, -475, 108, 570, -478, -217, 402, 441,
	-216, 24, 29, 139, 225, 307, 524, 156, -298, 226,
	349, 353, 150, 458, 514, -553, -554, 425, 484, 485,
	90, 328, 441, 402, 150, -351, -353, 38, 116, 307,
	348, 61, 218, 283, 284, 460, 533, 150, 441, 402,
	349, 24, 139, -228, -554, 99, 402, 471, -554, -219,
	458, 514, -553, -554, 425, 402, -218, -298, 150, 572,
	24, 402, 441, 349, -568, -569, 139, 29, 402, 349,
	-550, -521, 537, 150, -434, 208, -561, -117, 256, 5,
	10, -117, -326, 573, -478, 561, 427, 426, 150, 150,
	150, 150, 179, 319, 2, 2, 2, 2, 2, 184,
	-556, -573, 2, 2, -265, 208, -312, 334, -545, -327,
	477, -265, 319, 43, -267, 208, 2, -270, 530, -550,
	319, -269, 208, -265, 38, 568, 2, -371, 2, 223,
	-521, 319, -435, -281, -265, -430, -281, 441, -258, 38,
	-395, -265, 569, 573, -445, -445, -486, -182, 537, 182,
	102, 568, 568, -194, -442, 573, -441, -487, -118, -486,
	-486, -545, -249, 2, -265, 2, 477, 245, -486, -182,
	215, -486, -486, -486, -477, 28, 444, 2, 381, 439,
	498, 89, 444, 2, -265, 477, 118, 223, 80, -548,
	179, -543, 415, 428, 505, -542, -265, 118, -265, 118,
	-265, 118, -265, -265, 2, 2, 2, 2, 2, 85,
	85, 2, 46, -564, 179, 2, 496, 2, 496, 2,
	-235, -235, -235, 461, 264, -265, 179, 477, 223, 477,
	223, 118, 118, 477, -220, 573, -239, -206, -345, -477,
	-346, -345, -207, -206, -209, 179, 385, 515, 307, 445,
	249, -376, -375, 28, -398, -380, 173, 306, -398, -378,
	-400, 559, 560, -469, -471, -329, 328, -200, -200, -200,
	-316, -425, -398, 375, 223, -450, -448, -448, -263, -478,
	489, -398, -398, -398, -398, -398, -398, -398, -398, -398,
	-398, -398, -398, -398, -398, -398, -398, -398, -398, -398,
	-398, -398, -398, -398, -398, -398, -398, -398, -398, -398,
	-398, -398, -398, -398, -398, -398, 265, 212, 447, 50,
	215, -398, 493, -398, -398, -398, -398, 301, 319, 324,
	502, 164, 512, 135, 328, -587, 472, 40, -405, -201,
	-334, 568, -419, 35, 457, 28, -412, 568, 2, -393,
	-398, -394, -331, -330, -330, 569, 529, 28, 135, 561,
	2, 569, 573, 38, 569, -398, -331, -411, -407, -330,
	-418, -417, 534, -366, -367, 542, 288, 121, 206, 286,
	-368, 432, -472, 8, -478, 561, -528, 172, 199, 568,
	569, 2, 569, 2, 569, -398, 2, 569, -398, 2,
	569, -398, 2, 569, -398, 2, 569, 2, -398, -398,
	-398, -398, -398, -398, -398, -330, 8, -472, -472, 489,
	489, -472, -472, -472, -464, 362, 363, 364, 365, 267,
	268, 269, 270, 366, 367, 368, 369, 293, 294, 295,
	296, 289, 290, 291, 292, 297, 298, 299, 300, 191,
	192, 193, 194, 187, 188, 189, 190, -464, -360, 2,
	-466, -330, 4, 542, 288, 121, 206, 286, 432, 5,
	-360, 2, -361, 2, -398, -330, -362, -399, -400, 559,
	560, 552, -412, -363, 2, -398, -331, -398, 57, 259,
	495, -364, -398, 182, -330, -330, 2, -330, 2, -525,
	38, -330, -322, 573, 182, 38, 4, -322, -322, 568,
	569, 573, -359, 203, 282, 277, -359, -429, -358, 244,
	-356, 344, -356, -356, -423, -250, 566, 574, -478, -423,
	-422, -421, 38, -258, 341, -423, -423, 570, 569, -422,
	567, -540, 568, 571, 571, 571, 571, 571, -265, 568,
	-330, -478, 570, 463, 569, 238, 238, 238, 238, 420,
	569, 493, -544, -273, -319, 537, -94, 336, 569, 573,
	-321, 37, 566, 570, -472, 2, 2, -467, 531, 568,
	568, -367, 568, 182, -544, -319, -320, 573, 493, -235,
	2, -265, -328, -220, 150, -328, -328, -220, 573, 150,
	-249, -268, -273, -235, -319, -486, -487, -220, -269, -565,
	569, 497, -386, -287, 385, 456, 403, 436, 474, 8,
	9, 8, 9, 573, -478, 573, -566, 93, 493, 78,
	428, -389, 208, 78, -499, -252, 93, -500, -235, 72,
	511, 375, 181, 148, -566, 93, 375, -566, 93, 2,
	225, 93, 441, 461, 493, 60, -434, 41, 41, 28,
	-121, 260, 182, 543, 477, 223, 428, 493, -434, -353,
	-448, 116, 283, 284, 60, -473, -468, 559, 560, -473,
	60, -473, -473, -473, 537, -267, -434, 428, 493, 493,
	-488, 394, 395, -488, 493, 493, 394, 45, 124, 573,
	41, 41, 28, -121, 260, 182, 493, -284, -250, 525,
	42, 525, 493, 42, 428, 493, 573, 42, 42, 493,
	493, -551, -240, 105, 313, 276, 314, 97, 310, 96,
	309, 103, 311, 104, 312, 532, 322, 63, 308, 287,
	315, -241, -242, 355, 523, -486, 441, 402, 150, 215,
	-442, 215, -442, -276, 570, -121, -398, -398, -121, -398,
	-121, 46, 150, 2, -581, 253, 568, -291, 319, 182,
	-319, -443, 235, 573, -327, 150, -483, -352, -351, 319,
	-269, 208, 2, 150, -310, 319, 144, 568, 383, 2,
	-251, 208, -236, -235, -371, -223, 481, 150, -349, 521,
	-381, -121, 568, 124, 38, -381, -338, -339, -440, -340,
	-252, 568, -258, -395, -94, -444, 569, 569, 569, -181,
	338, -180, -235, 5, -194, 521, -290, -390, -389, -503,
	-504, -499, 265, 223, 511, 237, 165, -311, -253, -252,
	117, -188, 537, -117, 569, -442, 215, -182, -182, -442,
	-442, -265, 179, -486, -182, -182, -182, 2, 2, 2,
	-355, -265, -249, -284, -265, -319, -319, -319, -273, -355,
	-249, -355, -249, -355, -249, -121, -398, 2, 438, 179,
	179, 570, -355, 383, 118, 477, 353, 223, -265, -284,
	-265, -284, -249, -249, -265, -434, -346, -207, 335, 249,
	445, -378, -379, -400, 419, 420, -379, 419, 420, 8,
	9, 8, 9, -211, 449, 323, -328, 573, -214, 39,
	131, 249, -265, 543, 146, -398, -398, 493, -587, 472,
	-405, 146, -398, 301, 324, 502, 164, 512, 135, 328,
	182, 568, -399, -399, 569, -332, -398, -398, 567, 576,
	569, -315, 573, -313, -398, -330, -330, 569, 570, -330,
	-319, 567, 567, 573, 569, -416, -417, 140, -398, 493,
	493, 493, 493, 568, 569, 570, -533, 345, 568, 568,
	-398, 569, 569, 569, 569, 38, 573, 573, 573, 569,
	573, 573, 573, 569, 569, 569, 573, 569, 543, 543,
	569, 569, 569, 569, 573, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 569,
	573, 569, 182, 569, 569, -369, 359, 569, 11, 12,
	559, 560, 561, 562, 177, 563, 564, 557, 558, 556,
	549, 550, 551, 86, 279, 421, 14, 15, 16, 238,
	215, -399, -399, -399, 569, -403, -404, 182, 179, 38,
	-364, -364, -364, 569, 182, -330, 569, 569, 568, -526,
	281, 319, 569, -392, -391, 535, -439, -323, 2, -429,
	-260, -478, -392, -392, -330, -398, 244, 244, -357, 521,
	334, -359, -429, -422, -474, -397, -396, 180, 39, 131,
	316, 211, -422, -258, -310, -422, -422, -478, -423, -423,
	-421, 569, -541, -474, 569, -324, -432, -520, -315, 570,
	-478, -191, -521, -170, 5, 324, -170, -170, -170, -319,
	493, 493, 25, 360, -448, 566, 567, 8, -478, 568,
	-472, -472, -472, -319, 182, 182, 182, -483, -483, 2,
	-220, -328, -220, -220, -284, -285, -220, -220, -220, -350,
	537, -475, -385, 509, 83, 385, 489, -475, -216, 402,
	-252, -252, -265, -274, 319, -389, 208, -222, 319, -448,
	-259, -235, 568, -373, 539, 249, 249, 521, -252, -259,
	249, 208, -252, 208, -259, 2, -259, -552, 385, 329,
	-398, -483, 271, 383, 320, -217, 402, 441, -121, -121,
	-121, 568, -565, 521, 134, -265, -284, -265, -274, -269,
	441, 402, 317, -278, -473, -473, -351, 441, 402, -274,
	-267, -483, -319, -319, 428, -249, 163, 543, -218, -121,
	-121, -121, 568, -250, -219, 402, 5, 208, -252, 5,
	-235, -252, -274, -483, -569, 24, -252, 208, -252, -274,
	-483, -240, -486, 324, 517, -550, 428, 493, -434, -117,
	-185, 537, -117, -179, 219, 561, -547, -235, 530, -235,
	-289, -292, -290, -252, -197, -198, 539, 537, 150, -282,
	-265, 566, -182, -486, -265, -274, -275, 150, -310, 319,
	-486, 38, 150, 568, 2, 2, 334, 319, -251, 208,
	-224, 141, -585, 551, -249, -392, -323, -348, -383, 410,
	334, -311, 526, -258, -348, -325, 573, 182, 551, 570,
	-311, -438, 561, -94, -94, -182, 573, 568, 551, 551,
	568, -486, -486, 569, 573, -265, -251, 223, 223, -257,
	-236, 569, 573, 570, 568, -190, 338, -189, 142, 251,
	236, 450, 451, 452, 453, 133, -188, -118, 182, -55,
	537, 477, -182, 572, -355, -355, -355, 438, 438, -235,
	-261, -249, -265, -262, -284, 179, 179, 515, -379, 335,
	275, -425, -215, 545, -265, 572, -398, -398, 146, 146,
	-398, -399, -399, -398, 146, 182, 568, -398, -409, 33,
	33, 569, 573, -394, -398, 569, 529, -315, -315, 569,
	561, -478, 572, 569, -407, 143, -398, 487, 288, 206,
	286, -368, 286, -368, -368, -472, 5, -478, 561, -534,
	-255, 568, -235, 535, -314, 340, 569, -450, -448, -398,
	-398, -398, -398, -398, -472, -453, -453, -468, -468, -398,
	-403, -398, -450, -448, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, 135, 319, 328, -399, -404, -403, -398,
	-398, -448, 569, 569, 569, -330, -94, 568, 281, -342,
	199, -398, -442, 573, -342, -342, 569, -429, -429, 568,
	-398, 244, 567, 573, 575, 551, -310, 570, -421, -422,
	567, 569, 573, 569, 573, -382, 38, 569, -478, -392,
	-193, -192, 132, 53, -319, -319, 337, 5, 8, 566,
	567, 570, -472, 569, 569, 569, -319, -319, -319, -220,
	-220, 117, 307, -398, 493, 493, 150, 319, 523, -505,
	-500, 148, -398, 568, 223, 568, 568, 2, -213, 139,
	441, -567, 2, 521, 150, -220, 150, -220, 541, 568,
	568, 493, 428, 537, -330, -398, -183, 124, -477, -554,
	572, -554, 572, 428, 493, 428, 493, 537, 163, 537,
	-330, 493, -452, 48, 26, 319, -268, 493, 493, -220,
	150, 505, 441, -486, 324, -274, -269, 441, 402, -442,
	-187, 338, -186, 142, 412, 133, 251, -442, -185, 182,
	235, -269, 2, 569, 569, 573, -506, 38, 332, 332,
	568, -265, -75, 537, -441, -474, 43, -267, 38, 150,
	-550, -121, -269, -446, -447, 5, -265, 150, 334, 319,
	-225, 258, -585, -482, -521, -315, -348, -337, 320, 91,
	569, -392, -339, -323, -398, 2, 569, -180, -181, -486,
	-486, -486, -182, -194, -194, -390, -293, 568, -251, -236,
	568, -194, -253, 2, -487, 573, 568, 551, 551, 551,
	-442, -121, 338, -265, 561, -355, -300, -299, 353, 328,
	-300, 419, 419, 335, 173, 254, -214, -250, -398, -398,
	146, 33, 33, -398, -398, -409, 569, -398, -398, -330,
	567, 5, -398, 569, 569, 8, -398, 569, 570, -535,
	-235, -398, 569, 60, 569, 569, 573, 573, 569, 569,
	569, 569, 569, 569, 569, -404, 182, 135, 328, 568,
	569, 569, -94, -406, 202, 60, -429, -406, -406, -357,
	-319, -429, -396, -250, 566, -478, -474, -432, 568, 570,
	-192, 551, 567, 2, 566, -478, 569, 117, -252, -252,
	-389, 150, -507, 93, -509, 76, 165, 102, 319, 324,
	511, 375, 72, 124, 391, -577, 38, 548, 569, -317,
	-426, -520, 568, -235, -317, -319, 319, 468, 124, 319,
	124, 117, 505, 79, -252, -259, -319, -319, -265, -274,
	157, 569, 573, 551, 2, 561, 561, -274, -269, -274,
	-267, 351, 157, 569, -250, 5, 5, 150, -247, 76,
	5, -252, -252, -268, 117, 428, 493, -185, 573, 568,
	551, 551, -185, -487, -117, -310, -301, 225, -252, -504,
	-501, -502, 375, -508, -510, 165, 375, -121, 2, -196,
	-195, -235, 5, 568, -291, 338, 567, -483, -352, -121,
	-269, -310, 569, 573, -374, 521, -250, -265, 150, -226,
	257, -585, -482, -223, -377, -375, 136, 568, 334, -121,
	-315, 551, 569, 569, 117, 117, 217, 149, -317, 568,
	568, -319, 117, 569, -189, -190, -486, -117, -486, -188,
	-56, -57, 223, 93, 358, -262, 477, 223, 568, 568,
	-214, -398, -398, -398, 569, -315, -478, 561, -529, 353,
	569, -425, -398, -398, -399, 182, 568, -409, 569, -530,
	536, -398, -343, -344, -398, 418, 107, 200, -530, -530,
	569, -474, 2, -486, 566, 2, -389, -259, -263, -256,
	-235, 165, 208, 324, -373, 249, 568, -399, -265, 568,
	2, 30, -578, 128, 228, 569, 573, -427, -246, -235,
	-398, -427, 569, 569, 324, 324, -398, -448, 568, -220,
	-220, 569, 569, -398, 493, -477, 100, -475, 2, -554,
	-249, -398, 493, 5, -220, -263, -220, -220, -247, 505,
	-274, -269, -186, -187, -486, -117, -185, 38, -296, 227,
	2, -506, 249, -256, 249, -576, 537, 569, 573, 551,
	551, -289, -197, -76, -77, 494, -441, -310, 38, 5,
	568, -235, 334, 568, -250, -230, 92, -585, -482, -224,
	-348, 320, -319, 93, -377, -405, -182, 568, 568, -294,
	81, 94, 125, 207, 185, 224, 461, 466, 28, -294,
	569, -317, -317, 569, 568, -182, 569, 573, 28, 568,
	28, 568, -265, -284, -330, -330, 569, -315, 60, 573,
	569, 569, -399, -409, 569, -531, -532, -255, 573, 568,
	568, 442, 567, 2, -509, -256, 319, 521, -398, -237,
	568, -398, 38, 228, 129, 213, -388, -579, 101, 469,
	216, -426, -214, 569, -387, 521, 391, -247, -317, 568,
	568, 568, 551, 182, 568, -452, -220, -268, 569, -559,
	389, -121, -297, -298, 215, 568, -295, 334, 117, 307,
	-195, -475, -475, 569, 38, -77, 9, 38, -121, -317,
	-265, -317, 334, -227, -488, 266, -482, -225, 569, -259,
	-348, -487, -487, -387, 569, 569, -487, -57, -319, -319,
	569, 569, -536, 383, 420, 201, -330, -316, 569, 573,
	38, -344, 2, 2, 2, 150, 203, 569, -511, 280,
	-235, 569, 129, 213, -296, 568, -215, -427, -296, 203,
	-265, -555, 521, 569, -303, -302, -299, -305, -304, -299,
	-330, -475, 100, 351, -330, -247, -562, 183, -561, 5,
	10, -197, 351, -318, -428, -252, 82, 117, -301, -121,
	-121, 569, -374, 569, -265, -229, -228, -585, -585, -226,
	-392, 569, 569, -388, -387, -198, 537, 569, 569, 569,
	569, -537, -538, 50, 508, 108, -398, -537, -537, -532,
	-534, 165, 537, -512, -515, -514, 334, 448, 183, 352,
	569, 468, 533, -297, -319, 537, -310, -398, -387, 569,
	573, 526, 569, 573, 526, 569, 182, 569, -220, -184,
	537, 46, -295, -265, 569, 573, 374, 130, 139, -296,
	-576, -387, 568, -388, 568, -319, -468, -230, 136, -182,
	-182, -296, -388, -392, -182, -539, 148, -538, 371, 178,
	419, 371, 178, -539, -539, -256, 55, -514, 334, -515,
	334, 515, 130, -578, 569, 55, -511, -296, -302, 215,
	-304, 182, 351, 426, -561, 30, 568, -428, 420, 420,
	2, -297, -295, -388, -317, -296, -317, -227, 320, 515,
	-297, -296, 108, 199, 488, 307, 33, 551, -513, 307,
	408, 64, 441, -513, -392, 551, -512, 568, 568, 338,
	-319, 2, -197, -296, 569, -297, 569, -229, 441, -198,
	-297, 419, 342, -538, -398, 23, 324, 124, -398, -578,
	-330, -330, -181, 568, 569, -295, -297, -387, -198, -388,
	-338, -392, -198, 569, 569, -181, -221, 64, 408, -198,
	-388, -392, -296, -392, -392, -297, 493, 569, -392, -296,
	-297, 568, -297, -198, -330, -198, -392, 569, -392, -297,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 499, 500, 502, 503, 504, 506,
	507, 509, 511, 513, 514, 515, 517, 518, 520, 521,
	522, 523, 524, 526, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	590, 592, 0, 1233, 1235, 1237, 1239, 0, 732, 0,
	36, 37, 0, -2, 297, 299, 301, 0, 327, 329,
	330, 332, 334, 336, -2, 0, 434, 435, 437, 439,
	-2, 0, 905, 907, 0, 579, 581, 0, 910, 912,
	0, 0, 601, 602, 0, 1335, -2, 595, 597, 599,
	664, 666, 668, 670, 672, 674, 676, 678, 680, 681,
	683, 685, 687, 689, 691, 693, 695, 697, 698, 700,
	702, 704, 706, 708, 710, 712, 714, 716, 718, 720,
	722, 724, 726, -2, 728, -2, -2, 0, -2, -2,
	-2, 1251, 40, 42, 44, 46, 48, 50, 52, 54,
	56, 385, 386, 388, 390, 392, 394, 397, 399, 401,
	1393, 441, 443, 445, 447, 449, 451, 453, 0, -2,
	1407, 0, 0, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 95, 96, 97, 98, 99, 100, 101, 102,
	70, 71, 73, 74, 75, 79, 80, 81, 82, 83,
	84, 85, 93, 68, 0, 0, 1366, 1368, 1370, 1372,
	-2, 0, 0, 5, 9, 11, 13, 15, 17, 19,
	21, 23, 25, 27, 29, 501, 505, 508, 510, 512,
	516, 519, 525, 527, 529, 486, 487, 490, 2063, 2080,
	2081, 2082, 2085, 2086, 2087, 2088, 2089, 2090, 2517, 2598,
	2599, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120,
	2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130,
	2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140,
	2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150,
	2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160,
	2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170,
	2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180,
	2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190,
	2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200,
	2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210,
	2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220,
	2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230,
	2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240,
	2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250,
	2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260,
	2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270,
	2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
	2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290,
	2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300,
	2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310,
	2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320,
	2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330,
	2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340,
	2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350,
	2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360,
	2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370,
	2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380,
	2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390,
	2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400,
	2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410,
	2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420,
	2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430,
	2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440,
	2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450,
	2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460,
	2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470,
	2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
	2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 488, 489, 1071, 0,
	553, 551, 2055, 554, 2326, 556, 558, 428, 429, 430,
	431, 432, 433, 0, 572, 564, 1405, 573, 575, 576,
	577, 578, 548, 546, 0, 572, 2116, 570, 1231, 1232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 440, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 364, 1120, 1121, 1122, 1216, 1217, 2368, 1258, 0,
	209, 591, -2, -2, -2, 2482, -2, 623, -2, 630,
	2486, 2370, 635, 0, 637, -2, 640, 1234, 1236, 1238,
	730, 731, 2066, 0, 0, 0, 0, 0, 38, 39,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 219, -2, -2, -2, -2, 0, 0,
	2411, 2166, 2023, 2082, 2026, 2021, 298, 300, 302, 303,
	0, 0, 0, 0, 0, 0, 328, 331, 333, 335,
	-2, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 964, 956, 957, 1177, 0, 0, 0,
	-2, 436, 438, 491, 492, 0, 1394, 1394, -2, 0,
	0, 0, 0, 272, 263, 906, 908, 909, 0, 0,
	0, 0, 580, 582, 0, 0, 245, 911, 913, 914,
	0, 0, 0, 0, 0, 274, 0, 0, 596, 598,
	600, 665, 667, 669, 671, 673, 675, 677, 679, 682,
	684, 686, 688, 690, 692, 694, 696, 699, 701, 703,
	705, 707, 709, 711, 713, 715, 717, 719, 721, 723,
	725, 727, 738, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, -2, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 822, 0, 0, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 886, 0, 741, 743, 744, 745, 0,
	802, 820, 821, 830, 729, 0, 1111, 1395, 1260, 1241,
	1255, 1260, 1243, 1244, 1245, 1246, 1247, 1252, 1254, 1248,
	1249, 1250, 41, 43, 45, 47, 49, 51, 53, 55,
	57, 387, 389, 391, 393, 395, 398, 400, 402, -2,
	1364, 1365, 442, 444, 446, 448, 450, 452, 454, 583,
	0, 585, 0, 742, -2, 0, 1399, 1399, 1399, 0,
	0, 1365, 1363, 0, 588, 589, 644, 645, 1666, 0,
	0, 0, 0, 0, 0, 0, 1920, 1752, 0, 646,
	-2, 1783, 1785, 2457, 2482, 1919, 1787, 1788, 1789, 1790,
	1791, 0, 1793, 1794, 1795, 1796, 1797, 1798, 0, 1800,
	0, 1805, 1806, 1807, 0, 2464, 2000, 2076, -2, 0,
	0, 2470, 2072, 0, 1886, 1823, -2, -2, 2099, 2078,
	1598, 1599, 1600, 1601, 1602, -2, -2, 2500, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 0,
	2445, 2465, 2466, 2471, 2473, 2467, 2454, 1848, 2178, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1625, 1634, -2, -2, -2, -2, -2, -2,
	-2, 2458, 2459, 2476, 2479, 2485, 2490, 2491, 2463, 2472,
	2499, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509,
	2510, 2511, 2512, 2513, 2514, 2515, 2516, 1626, -2, -2,
	-2, -2, 1382, 2339, 1385, 1071, 1383, 1367, 1369, 0,
	1371, 0, 0, 0, 1376, 1402, 1400, 0, 1451, 1380,
	1381, 1469, 1469, 1493, 0, 1474, 0, 1493, 1394, 1519,
	0, 1480, 2360, 1824, 1825, 0, 2082, 2077, -2, -2,
	2497, 0, 0, 0, 0, 0, 0, 0, 549, 0,
	555, 557, 0, 0, 0, 571, 1404, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 369, 370, 371, 2465,
	0, 0, 0, 376, 0, 378, 379, 380, 381, 382,
	383, 384, 181, 2465, 459, 484, 0, 181, 2465, 462,
	181, 2465, 465, 0, 468, 1175, 181, 2465, 471, 2051,
	181, 2465, 474, 476, 2059, 181, 2465, 480, 2027, 481,
	2465, 483, 277, 275, 276, 2095, 2096, 2103, 2104, 2105,
	2106, 2498, 2500, 1227, 1228, 1229, 1230, 0, 1257, 1176,
	593, 594, 0, 618, 0, 622, 2453, -2, 0, 2379,
	-2, 626, 1261, 1265, 1266, 1267, 1268, 1269, 0, 0,
	0, 0, 1274, 0, 0, 632, 0, 0, 619, 620,
	638, 641, 0, 733, 734, 735, 736, 737, 67, 0,
	2465, 1519, 69, 0, 2045, 2107, 2108, 2109, 2110, 2111,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537,
	2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547,
	2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557,
	2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567,
	2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577,
	2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587,
	2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597,
	72, 0, 2465, 76, 0, 2465, 0, -2, 86, 0,
	94, 0, 2048, 103, 0, 2465, 0, 2020, -2, 0,
	192, 0, 933, 2061, -2, 2465, 1119, 0, 0, 0,
	0, 896, 2017, 2022, 897, 2041, 898, 0, 304, 305,
	306, 307, 308, 0, 309, 2465, 311, 312, 0, 314,
	315, 2465, 317, 318, 0, 320, 0, 230, 231, 2465,
	339, 340, 0, 342, 343, 0, 345, 0, 0, 0,
	349, -2, 365, 0, 362, 352, 353, 355, 356, 357,
	358, 359, 0, 406, 404, 2056, 0, 926, 2465, 0,
	930, -2, 2062, 0, 0, 1156, -2, 2465, 1116, 0,
	1162, 1158, 0, -2, 0, 1392, 2465, 1278, 960, 961,
	962, 963, 1531, 425, 0, 1300, 0, 1302, 0, 1321,
	1525, 1469, 0, 0, 1530, 0, -2, 542, 2065, -2,
	494, 0, 495, 0, -2, 0, 289, 0, 0, 915,
	916, 917, 918, 919, 922, 923, 924, 925, 1506, 248,
	246, 0, 0, 1218, 1219, 1220, 1221, 1222, 1223, 1224,
	1225, 1226, 0, 0, 603, 0, 0, 739, 740, 0,
	0, 750, 751, 752, 0, 289, 2371, 2335, 2199, 759,
	0, 762, 765, -2, 0, 0, 0, 0, 769, 0,
	774, 775, 776, 0, 778, 780, 904, 782, 0, 0,
	784, 0, 788, 0, 791, 0, 793, 0, 795, -2,
	-2, -2, -2, 806, -2, 0, 809, 811, 0, 813,
	-2, 0, 822, 818, 819, 0, 0, 0, 0, 838,
	839, 0, 848, 0, 851, 852, 853, 0, 855, 856,
	0, 858, 859, 860, 861, 0, 863, 864, -2, -2,
	868, 870, 0, 877, 0, 881, 0, 885, 0, 0,
	746, 747, 181, 1523, 1240, -2, 1242, 0, -2, 0,
	584, 0, 587, 1424, 1350, 1347, 0, 1421, 1422, 1351,
	0, 0, 0, 1358, 0, 1397, 1398, 0, 0, 0,
	1337, 1338, 0, 0, 0, 0, 1925, 1926, 1927, 1928,
	1929, 1930, 1933, 1934, 1931, 1932, 1935, 1936, 0, 0,
	0, 0, 0, 1937, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1938, 1939, 1940, 0, 0,
	1942, 0, 1944, 0, 0, 0, 0, 0, 0, 1731,
	1733, 2008, 0, 0, 1941, 1671, 1672, 1673, 1674, 1675,
	1710, 1711, 0, 0, 1784, 2005, 2004, 1786, 0, 1956,
	0, 1799, -2, 0, 1920, 1951, 0, 0, 1808, 1809,
	1810, 0, 0, 1956, 0, 0, 1999, 1820, 1821, 1663,
	0, 0, 1888, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1612, 1611, 0, 1613, 0, 1614, 1615, 1622, 1635, 0,
	0, 0, 0, 1639, 0, 0, 0, 0, 0, 0,
	0, 1980, -2, 0, 0, 0, 0, 1627, 0, 1384,
	0, 0, 1455, 2009, 2013, 2014, 1455, 1455, 0, 0,
	1957, 1516, 1516, 0, 0, 1512, 1512, 1512, 1510, 1493,
	0, 1493, 1503, 0, 1493, 1493, 0, -2, 1474, 0,
	0, 1503, 0, 1487, 530, 532, 534, 536, 537, 538,
	540, 1520, 1521, 0, 0, 0, 0, 2083, 0, 0,
	0, 0, 0, 2068, 0, 0, 0, 0, 2421, 2370,
	560, 574, 1394, 0, 1959, 1546, 1550, 0, 1552, 1553,
	1554, 1555, 1556, 0, 0, 1547, -2, 1623, 1625, 1646,
	2100, 2101, 2102, 1606, 1607, 1608, 1609, 1610, 1618, 1605,
	1605, 1605, 1616, 1645, 1637, 1645, 1641, 1591, 1592, 1593,
	1628, 1629, 1630, 1631, 0, 2421, 2370, 566, 0, 0,
	1332, 196, 198, 199, 200, 366, 0, 373, 374, 375,
	0, 455, 0, 179, 180, 0, 181, 2465, 460, 0,
	463, 0, 181, 2465, 2015, 469, 0, 472, 0, 0,
	478, 0, 0, 0, 0, 181, 1334, 0, 0, 0,
	0, -2, 628, 633, 634, 0, 1263, 0, 1270, 655,
	656, 657, 1272, 1273, 0, 1275, 631, 658, 659, 660,
	661, 662, 663, 0, 2029, 2030, 2031, 2032, 2035, 2036,
	0, 0, 629, 648, 636, 0, 642, 104, 1213, 0,
	143, 0, 1213, 1213, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 128, 139, 116, 117,
	0, 0, 0, 0, 0, 77, 1093, 0, 1096, 0,
	0, 0, 0, 0, 0, 0, 1109, 0, 0, 0,
	0, 0, 0, 90, 127, 0, 0, 0, 122, 106,
	0, 0, 0, 129, 141, 0, 172, 174, 0, 0,
	0, 0, 0, 0, 191, 201, 0, 0, 0, 0,
	1117, 0, 1391, 0, 0, 2465, 0, 1506, 2244, -2,
	-2, 1506, 895, 0, 2083, 2025, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 344, 346, 347, 348, 0,
	1155, 0, 354, 396, 1042, 2465, 0, 0, 423, 418,
	0, 420, 0, 0, 1092, 2465, 1090, 2060, 0, 1114,
	0, 1071, 2465, 2058, 0, 0, 1163, 2092, 1172, 1176,
	1287, 0, 427, 0, 1303, 1305, 0, 0, 1526, 0,
	1528, 1469, 1394, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 252, 0, 1505, 0, 1506, 246,
	289, 289, 1506, 605, 1506, 607, 0, 0, 753, 754,
	0, 289, 289, 289, 760, 761, 763, 764, -2, -2,
	-2, 878, 766, 767, 845, 0, 0, 0, 844, 781,
	0, 889, 2356, 2370, 2421, 902, 845, 2166, 845, 2166,
	845, 2166, 792, 794, 797, 833, 841, 805, 810, 0,
	0, 815, 823, -2, 0, 825, 0, 827, 0, 829,
	845, 846, 849, 854, 857, 862, 0, 0, 0, 0,
	0, 0, 0, 0, 1110, 0, 1253, 1424, 1350, 586,
	1341, 1423, 1342, 1349, 1352, 0, 0, 1354, 0, 1356,
	0, 1419, 1420, 1427, 1428, 0, 1438, 1439, 1431, 0,
	-2, 0, 0, 1434, 1435, 1360, 0, 1377, 1378, 1379,
	1408, 1411, 1191, 0, 2598, 1667, 1541, 1668, 1669, 2044,
	0, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, -2, -2, -2, -2, -2, -2, -2, -2, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	-2, -2, -2, 1708, 1709, -2, 1943, 1945, 0, 2008,
	0, -2, 0, -2, -2, -2, -2, 1728, 0, 1730,
	1735, 1737, 1739, 0, 0, 0, 0, 2007, 1749, 1991,
	1992, 0, 0, 1922, 1923, 1924, 1734, 0, 1753, 2006,
	2003, 0, 0, 1955, 1407, 1812, 0, 0, 0, 0,
	1819, 1804, 1953, 0, 1952, 0, 0, 0, 1963, 0,
	1998, 1994, 0, 2042, 1662, 1649, 1650, 1651, 1652, 1653,
	1654, 1664, 0, 2039, 2069, 2075, 1896, 0, 0, 0,
	1849, 1850, 1851, 1852, 1853, 0, 1855, 1856, 0, 1858,
	1859, 0, 1861, 1862, 0, 1864, 1865, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1559, 0, 0, 0, 1563,
	0, 0, 0, 1567, 0, 0, 0, 1571, 0, 0,
	0, 1575, 0, 0, 0, 1579, 0, 0, 0, 1583,
	0, 0, 0, 1587, 0, 0, 0, 0, 0, 1868,
	0, 1966, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 1870, 0, 1872, 1957, 1977, 0, 0, 1754, 0,
	0, 0, 1920, 0, 1875, 1957, 1985, 0, 0, 0,
	0, 0, 1957, 0, 1990, 0, 1882, 0, 1884, 1386,
	0, 0, 1536, 0, 0, 0, 2012, 1536, 1536, 0,
	1450, 0, 0, 1513, 1514, 1515, 0, 0, 1516, 0,
	1507, 1511, 1508, 1509, 1503, 1466, 0, 0, 2046, 1503,
	1472, 1502, 0, 1071, 1492, 1503, 1503, 0, -2, 1476,
	1493, 0, 0, 531, 533, 535, 539, 541, 0, 0,
	1407, -2, 0, -2, 1070, 0, 0, 0, 0, 550,
	552, 0, 0, 475, 0, 0, 544, 0, 547, 0,
	1537, 1540, 0, 0, 1551, 1557, 1558, 0, -2, 0,
	0, 1647, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 485, 181, 457, 0, 181, 181, 466, 0, 0,
	181, 477, 181, 2028, 181, 278, 482, 1333, 212, 0,
	621, 0, 1262, 1271, 0, 652, 0, 654, 0, 2033,
	2037, 2034, 2038, 0, 643, 0, 0, 0, 0, 1212,
	0, 147, 2465, 0, 183, 0, 0, 1035, 2052, 0,
	1027, 0, 0, 2185, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
	118, 0, 0, 0, 0, 0, 0, 0, 0, 1094,
	1095, 1097, 1104, 1106, 0, 1100, 2040, 0, 0, 1101,
	0, 1103, 1105, 1107, 0, 0, 0, 0, 0, 0,
	0, 91, 92, 0, 0, 0, 0, 0, 1283, 0,
	0, 0, 115, 119, 0, 0, 0, 0, 2019, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1151, 1149, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1148, 0, 0, -2, 0, 0, 0, 0,
	222, 0, 280, 2018, 0, 920, 921, 310, 313, 316,
	319, 218, 0, 350, 0, 0, 966, 941, 0, 0,
	405, 289, 0, 0, 419, 2092, 928, 1088, 1091, 0,
	1071, 2465, 1128, 0, 0, 0, 0, 0, 0, 1161,
	0, 2465, 2047, 2091, 2092, 1289, 1297, 0, 1536, 0,
	1319, 1306, 0, 0, 0, 1319, 1323, 1324, 1326, 1327,
	0, 0, 1527, 1533, 493, 543, 1394, 1394, 289, 287,
	2303, 285, 282, 284, 0, 0, 0, 967, 969, 970,
	971, 972, 0, 2092, 1027, 2233, 2092, 0, 1309, 1311,
	0, 242, 0, 249, 247, 252, 0, 0, 417, 604,
	609, 748, 0, 289, 756, 757, 758, 799, 835, 843,
	768, 770, 771, 772, 0, 903, 899, 900, 901, 783,
	845, 786, 845, 789, 845, 808, 812, 817, 824, 0,
	0, 0, 837, 0, 0, 0, 0, 0, 0, 0,
	882, 883, 884, 887, 888, 1524, 1345, 1346, 1348, 0,
	1357, 0, 0, 1433, -2, -2, 1432, 1436, 1437, -2,
	-2, -2, -2, 1353, 0, 1362, 1359, 0, 1418, 1189,
	1190, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	1750, 0, -2, 1729, 1732, 1736, 1738, 1740, 0, 0,
	0, 0, 0, 0, 1946, 0, 1948, 1751, 2001, 2004,
	1918, 0, 0, 1406, 1407, 1407, 0, 1818, 0, 1954,
	0, 1961, 1962, 0, 1811, 0, 1995, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1822, 0, 0, 0,
	0, 1854, 1857, 1860, 1863, 0, 0, 0, 0, 1843,
	0, 0, 0, 1847, 1617, 1603, 0, 1645, 1643, 1644,
	1638, 1645, 1642, 1595, 0, 1560, 1561, 1562, 1564, 1565,
	1566, 1568, 1569, 1570, 1572, 1573, 1574, 1576, 1577, 1578,
	1580, 1581, 1582, 1584, 1585, 1586, 1588, 1589, 1590, 1594,
	0, 1867, 0, 1869, 1871, 0, 0, 1873, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 1758, 1759, 1874, 1983, 1984, 0, 0, 0,
	0, 0, 0, 1880, 0, 1989, 1881, 1883, 1394, 0,
	1387, 0, 1452, 1441, 1535, 0, 2010, 1506, 1454, 1456,
	2011, 2049, 1441, 1441, 0, 1958, 0, 0, 1497, 0,
	0, 0, 1499, 1470, 0, 0, 1464, 0, 1460, 1461,
	1462, 1463, 1471, 1071, 1501, 1473, 1477, 2069, 0, 1503,
	0, 1488, 0, 1490, 1522, 0, 1482, 1485, 0, 0,
	2084, 1536, 0, 321, 325, 326, 322, 323, 324, 559,
	0, 0, 0, 0, 1960, 0, 1542, 0, 1548, 0,
	0, 0, 0, 565, 0, 0, 0, 197, 1331, 372,
	456, 181, 461, 464, 2016, 181, 470, 473, 479, 208,
	0, 617, -2, 650, 651, 653, 0, 649, 144, 1213,
	0, 0, 1194, 1196, 0, 149, 2465, 158, 0, 1007,
	0, 2050, 0, 0, 0, 0, 0, 0, 1215, 0,
	0, 2465, 181, 2465, 181, 161, 163, 166, 0, 171,
	168, 169, 0, 0, 998, 105, 1213, 0, 108, 112,
	120, 0, 0, 0, 126, 0, 0, 0, 1198, 1204,
	0, 0, 1098, 1099, 1102, 1108, 78, 0, 0, 1202,
	1208, 87, 88, 89, 0, 1193, 1281, 0, 173, 110,
	114, 121, 0, 1210, 107, 0, 195, 0, 0, 0,
	187, 0, 188, 189, 202, 0, 181, 2465, 0, 931,
	932, 1150, 1112, 1113, 0, 1118, 0, 0, 0, 1506,
	214, 0, 1506, 222, 0, 2024, 0, 338, 0, 0,
	0, 0, 965, 1053, 0, 936, 0, 0, 0, 411,
	407, 0, 416, 422, 421, 927, 0, 0, 0, 0,
	-2, 0, 0, 1165, 1159, 1160, 0, 0, 0, 2465,
	1291, 1297, 0, 1296, 1392, 1407, 426, 1298, 1319, 0,
	0, 0, 1308, 1304, 1301, 1536, 0, 0, 0, 0,
	0, 1529, 1532, 496, 497, 264, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 976, 0, 2092, 2092, 0,
	2054, 0, 0, 0, 0, 250, 0, 253, 0, 0,
	0, 258, 259, 260, 261, 262, 243, 1506, 0, 606,
	0, 0, 755, 0, 785, 787, 790, 826, 828, 845,
	871, 872, 993, 0, 993, 0, 0, 1355, 0, 1430,
	1361, 1412, 1413, 0, 1191, 0, 1670, 1713, 0, 0,
	-2, 0, 0, 1717, 0, 0, 0, -2, 0, 0,
	0, 1947, 1949, 0, 2003, 1813, 0, 0, 0, 1817,
	1801, 1802, 0, 1921, 1964, 1993, 1997, 0, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 0, 2043, 2070, 2074, 1894,
	1895, 1899, 2057, 0, 0, 0, 1826, 0, 0, 0,
	0, 0, 0, 0, 0, 1636, 1640, 0, 0, 1965,
	1976, 1978, 1755, 1756, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, -2, -2, -2, 1773, 1774, 1775,
	-2, -2, -2, 0, 0, 0, 1979, 1981, 1982, 1986,
	1987, 0, 1877, 1878, 1879, 1988, 0, 1394, 1388, 1449,
	0, 1534, 1453, 0, 1449, 1449, 1401, 1495, 0, 0,
	1518, 0, 1467, 0, 1468, 0, 1500, 0, 1475, 1478,
	1479, 1489, 0, 1481, 0, 1484, 0, 1813, -2, 290,
	291, 293, 0, 296, 562, 563, 561, 545, 0, 0,
	1544, 0, 0, 1620, 1624, 1648, 568, 569, 567, 458,
	467, 210, 0, 1504, 0, 0, 0, 0, 182, 1005,
	1034, 0, 0, 0, 1026, 0, 0, 1040, 151, 0,
	0, 0, 159, 0, 0, 156, 0, 165, 170, 0,
	0, 0, 0, 0, 0, 123, 124, 125, 0, 130,
	0, 131, 0, 0, 0, 0, 0, 0, 1282, 0,
	0, 0, 184, 0, 0, 0, 1188, 0, 0, 204,
	0, 0, 0, 1153, 1154, 1199, 1205, 0, 0, 222,
	220, 0, 223, 0, 226, 227, 0, 222, 216, 0,
	0, 1071, 351, 939, 1041, 0, 1043, 0, 937, 0,
	0, 1042, 403, 0, 410, 0, 0, 1092, 0, 0,
	1115, 1126, 1071, 0, 1164, 1166, 1174, 0, 0, 0,
	1293, 1297, 0, 1286, 1287, 1426, 1299, 1317, -2, 0,
	0, 1407, 1325, 1322, 1328, 1329, 0, 286, 0, 281,
	283, 0, 267, 0, 0, 968, 973, 0, 0, 0,
	0, 0, 1310, 1312, 0, 0, 0, 0, 0, 0,
	252, 273, 0, 749, 773, 836, 873, 992, 0, 0,
	875, 0, 0, 1429, 1416, 1417, 1414, 1191, 1715, 1719,
	0, 0, 0, 1721, -2, 0, 1743, -2, -2, 1950,
	2002, 1792, 1407, 1814, 1816, 1803, 1996, 1665, 0, 1901,
	1898, 0, 1885, 0, 1838, 1839, 0, 0, 1842, 1844,
	1845, 1846, 1604, 1597, 1596, 1975, 0, 0, 0, 0,
	1876, 1389, 0, 1890, 0, 0, 1457, 1890, 1890, 1496,
	0, 1498, 1465, 1458, 0, 2070, 1491, 1483, 0, 0,
	294, 0, 1538, 1543, 0, 1549, 1619, 211, 145, 146,
	148, 0, 1006, 0, 1009, 0, 0, 0, 0, 1016,
	1027, 0, 0, 0, 0, 0, 1028, 0, 1057, 0,
	1179, 1186, 0, -2, 0, 0, 0, 153, 176, 0,
	0, 1214, 0, 0, 181, 181, 0, 0, 1195, 1197,
	0, 0, 0, 0, 133, 0, 0, 1200, 1206, 1203,
	1209, 0, 0, 0, 1211, 193, 194, 0, 181, 0,
	186, 181, 181, 1188, 0, 0, 0, 213, 0, 0,
	0, 0, 215, 279, 222, 0, 987, 0, 1053, 1045,
	1046, 1047, 0, 1052, 1054, 0, 0, 953, 938, 0,
	949, 0, 0, 966, 941, 0, 408, 929, 1089, 1123,
	1071, 0, 1157, 0, 0, 0, 0, 0, 0, 1295,
	1297, 0, 1288, 1289, 1319, 1425, 0, 0, 0, 1307,
	1426, 0, 288, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 254, 0, 255, 256, 257, 244,
	608, 610, 0, 0, 616, 991, 0, 0, 0, 0,
	1415, 1723, -2, -2, 1744, 0, 2071, 2073, 1407, 0,
	1887, 1409, 0, 0, -2, 0, 0, 0, 1390, 1373,
	0, 1448, 1440, 1442, 1444, 2359, 2162, 2464, 1374, 1375,
	1517, 0, 1486, 295, 0, 1545, 150, 0, 1010, 1011,
	2053, 1013, 0, 1015, 1017, 1018, 0, 1021, 2094, 0,
	1025, 0, 1036, 1058, 0, 1067, 0, 1181, 1191, 1185,
	0, 1183, 1069, 0, 152, 154, 175, 1188, 0, 155,
	164, 0, 0, 109, 0, 0, 2157, 136, 134, 132,
	1192, 111, 0, 195, 203, 1187, 190, 205, 181, 0,
	1201, 1207, 224, 0, 225, 228, 0, 0, 995, 0,
	940, 1044, 0, 1055, 1056, 943, 0, 942, 0, 0,
	0, 0, 0, 409, 412, 0, 415, 0, 0, 1167,
	0, 1173, 0, 0, 0, 1280, 0, 0, 1290, 1291,
	424, 1313, 0, 0, 1319, 1330, 266, 0, 0, 974,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 975,
	1069, 0, 0, 1033, 0, 271, 251, 0, 612, 0,
	614, 0, 874, 876, 0, 0, 1815, 1905, 0, 0,
	1840, 1841, -2, 0, 1781, 1889, 1891, 0, 0, 0,
	0, 0, 1459, 1539, 1008, 1012, 0, 0, 0, 1075,
	0, 0, 1029, 0, 1061, 1062, 987, 0, 1063, 1064,
	1065, 1180, 1418, 1186, 987, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 185, 206, 1188, 221, 238,
	0, 1124, 941, 994, 0, 0, 951, 0, 954, 0,
	950, 947, 948, 939, 0, 413, 414, 0, 1127, 0,
	1174, 0, 0, 1285, 1297, 1297, 1292, 1293, 1536, 1316,
	1320, 0, 0, 1067, 1069, 941, 0, 611, 0, 0,
	879, 880, 0, 0, 0, 0, 1900, 1410, 1782, 0,
	0, 1443, 1445, 1446, 1447, 0, 0, 1020, 1080, 0,
	0, 0, 1059, 1060, 995, 0, 1184, 1182, 1038, 0,
	1071, 157, 0, 1069, 0, 999, 0, 0, 1002, 0,
	0, 137, 2157, 135, 0, 181, 241, 0, 235, 233,
	234, 943, 0, 0, 1049, 1051, 0, 955, 987, 953,
	1125, 1069, 0, 1067, 0, 1276, 1284, 0, 0, 1295,
	0, 289, 289, 987, 1067, 1536, 0, 289, 613, 615,
	1897, 1917, 1906, -2, 2424, 2163, 0, 1917, 1917, 1892,
	1893, 0, 0, 1022, 1076, 1077, 0, 1072, 1073, 1074,
	2093, 1023, 1024, 1057, 0, 0, 1075, 177, 987, 996,
	0, 0, 997, 0, 0, 140, 0, 142, 207, 229,
	0, 0, 934, 0, 1048, 0, 0, 0, 0, 995,
	943, 1067, 0, 987, 0, 1279, 1294, 1280, 0, 268,
	269, 995, 987, 1032, 270, 1902, 0, 0, 1908, 1909,
	1910, 1911, 1912, 1903, 1904, 1014, 0, 1078, 0, 1079,
	0, 0, 0, 1536, 1066, 0, 1080, 162, 1000, 0,
	1003, 0, 138, 0, 236, 237, 0, 1050, 944, 0,
	946, 941, 952, 987, 0, 995, 0, 1285, 1314, 0,
	941, 995, 0, 1914, 1915, 0, 0, 0, 1081, 0,
	1084, 1085, 0, 1082, 1037, 0, 1057, 0, 0, 0,
	0, 945, 943, 995, 1069, 941, 1067, 1277, 0, 1536,
	941, 1913, 1916, 1907, 1019, 1083, 1086, 1087, 1068, 1039,
	0, 0, 239, 0, 990, 935, 941, 1067, 1536, 987,
	1536, 1030, 1536, 995, 0, 0, 986, 988, 989, 1536,
	987, 1170, 995, 1315, 1031, 1001, 0, 240, 1168, 995,
	941, 0, 941, 1536, 0, 1536, 1171, 995, 1169, 1004,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 557, 3, 563, 558, 3,
	568, 569, 561, 559, 573, 560, 570, 562, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 576, 3,
	549, 551, 550, 554, 572, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 566, 3, 567, 564, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 574, 556, 575, 552,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 553, 57892, 555, 57893, 565, 57894, 571,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1252
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1257
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1259
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1262
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1263
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1264
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1265
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1266
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1267
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1268
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1269
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1270
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1271
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1272
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1279
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1288
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1289
		{
			return helpWith(sqllex, "ALTER")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1292
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1293
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1294
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1295
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1296
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1297
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1298
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1299
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1300
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1356
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1382
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1395
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1412
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1416
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 78:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1420
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1444
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1448
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: tree.Name(sqlDollar[6].str)}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1454
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:    tree.Name(sqlDollar[3].str),
				Regions: sqlDollar[6].union.nameList(),
			}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1463
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:    tree.Name(sqlDollar[3].str),
				Regions: sqlDollar[6].union.nameList(),
			}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1472
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvive{
				Name:    tree.Name(sqlDollar[3].str),
				Survive: sqlDollar[4].union.survive(),
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1532
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1536
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1540
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1546
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1550
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1556
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1565
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1576
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1580
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1586
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1594
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1604
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1608
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1618
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1629
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1636
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1648
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1655
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1663
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1668
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1672
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1677
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1683
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1691
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1702
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 130:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1712
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 131:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1722
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 132:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1731
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1742
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 134:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1748
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1760
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1768
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1774
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1779
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1790
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1794
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1800
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1804
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1816
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1821
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1892
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1899
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1902
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1908
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 162:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1939
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1948
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1960
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1968
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: tree.Name(sqlDollar[3].str),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1975
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1976
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1980
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1984
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1998
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2002
		{
			sqlVAL.union.val = nil
		}
	case 177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2012
		{
			sqlVAL.union.val = nil
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2033
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 184:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2084
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2094
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2112
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2121
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2125
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2128
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2132
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2146
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2151
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2155
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2188
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2192
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2196
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2200
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 213:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2241
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2251
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2271
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2275
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2279
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2287
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2302
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2306
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2323
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2417
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = nil
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2430
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2434
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2444
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2452
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2460
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = nil
		}
	case 242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2505
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2514
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2523
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2532
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2540
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2550
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2565
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2576
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2585
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2589
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2601
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2619
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2656
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2665
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2671
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2676
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2681
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2686
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2691
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2695
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 273:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2711
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2714
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2718
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2722
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2730
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2740
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2744
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2750
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2754
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2762
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2768
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2772
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2778
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 288:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = nil
		}
	case 290:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2798
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2814
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2828
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2840
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2848
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2849
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2850
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2851
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2861
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2869
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2878
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2897
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2905
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2914
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2933
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2941
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2950
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2954
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2958
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2962
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2981
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2986
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2998
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3000
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3001
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3002
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3003
		{
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3004
		{
			return helpWith(sqllex, "CREATE")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3011
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3017
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3020
		{
			return unimplemented(sqllex, "create access method")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3021
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3022
		{
			return unimplemented(sqllex, "create cast")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3023
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3024
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3025
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3026
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3027
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3028
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3029
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3030
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3031
		{
			return unimplemented(sqllex, "create operator")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3032
		{
			return unimplemented(sqllex, "create publication")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3033
		{
			return unimplemented(sqllex, "create rule")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3034
		{
			return unimplemented(sqllex, "create server")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3035
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3036
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3037
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3038
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3041
		{
		}
	case 361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3042
		{
		}
	case 362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3045
		{
		}
	case 363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3046
		{
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3049
		{
		}
	case 365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3050
		{
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3053
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3054
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3055
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3056
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3057
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3058
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3059
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3060
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3061
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3062
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3063
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3064
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3065
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3066
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3067
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3068
		{
			return unimplemented(sqllex, "drop server")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3069
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3070
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3071
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3075
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3076
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3077
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3078
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3079
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3081
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3082
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3083
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3084
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3094
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3102
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3116
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3120
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3142
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3148
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3152
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3163
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3183
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3191
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3201
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3205
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3211
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3215
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3222
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3226
		{

			sqlVAL.union.val = nil
		}
	case 424:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3240
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3250
		{
			return helpWith(sqllex, "DELETE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3253
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3254
		{
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3265
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3266
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3267
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3268
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3269
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3278
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3279
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3280
		{
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3281
		{
			return helpWith(sqllex, "DROP")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3284
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3285
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3286
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3287
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3288
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3289
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3290
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3298
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3323
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3331
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3335
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3338
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3346
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3350
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3353
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3386
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3401
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3416
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3423
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3427
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3433
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3437
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.nameList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3454
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.nameList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3461
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3469
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3473
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3476
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3480
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3498
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3503
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3510
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3514
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3543
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3545
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3553
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3561
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3569
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3577
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3592
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3595
		{
			return helpWith(sqllex, "DELETE")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3597
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3598
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3599
		{
			return helpWith(sqllex, "INSERT")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3602
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3604
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3607
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3612
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3613
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3614
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3619
		{
			return helpWith(sqllex, "DELETE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3620
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3621
		{
			return helpWith(sqllex, "INSERT")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3627
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3628
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3632
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3636
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3654
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3662
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3666
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 548:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3687
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3695
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3699
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 553:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3703
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3713
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3725
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3728
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3750
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3754
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3758
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3762
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3766
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.nameList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3775
		{
			return helpWith(sqllex, "GRANT")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3797
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3801
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.nameList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3831
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3845
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3859
		{
			return helpWith(sqllex, "RESET")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3875
		{
			return helpWith(sqllex, "RESET")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3883
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3886
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3900
		{
			return helpWith(sqllex, "USE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3904
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3905
		{
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3906
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3907
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3911
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3912
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3913
		{
			return helpWith(sqllex, "USE")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3929
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3947
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3973
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3977
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3987
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3991
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4001
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4005
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4027
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4037
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4053
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 624:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4062
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4081
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4084
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4086
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4089
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4093
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4112
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4124
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4129
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4134
		{
			return unimplemented(sqllex, "set from current")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4135
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4148
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4155
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4176
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4197
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4201
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4207
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4215
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4229
		{
			sqlVAL.union.val = tree.Low
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = tree.Normal
		}
	case 657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = tree.High
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4265
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4279
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4280
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4281
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4282
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4283
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4284
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4285
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4286
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4288
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4289
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4290
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4291
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4292
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4293
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4294
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4295
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4297
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4298
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4299
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4300
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4301
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4302
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4303
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4304
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4305
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4306
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4307
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4308
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4309
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4310
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4312
		{
			return helpWith(sqllex, "SHOW")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4313
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4318
		{
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4319
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4322
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4326
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4331
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4336
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4341
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4346
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4357
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4358
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4369
		{
			sqlVAL.str = "client_encoding"
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.str = "timezone"
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4373
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4391
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4395
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4406
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4414
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4422
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4428
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4454
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4463
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4471
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4481
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4485
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4488
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4493
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4502
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4513
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4521
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4529
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4536
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4544
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4547
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4557
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4567
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4580
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4588
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4596
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4599
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4612
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4621
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4629
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4632
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4634
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4645
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4648
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4650
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4653
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4657
		{
			sqlVAL.union.val = true
		}
	case 801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = true
		}
	case 802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4661
		{
			sqlVAL.union.val = false
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4672
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4679
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4680
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4686
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4690
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4693
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4695
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4711
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4727
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4735
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4737
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4743
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4751
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4761
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4775
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4777
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4780
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4782
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4786
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4789
		{
			sqlVAL.union.val = true
		}
	case 831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = false
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4798
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4801
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4806
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4844
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4847
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4849
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4852
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4855
		{
			sqlVAL.union.val = true
		}
	case 845:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4856
		{
			sqlVAL.union.val = false
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4863
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4877
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4891
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4902
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4915
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4923
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4928
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4933
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4937
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4945
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4949
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4953
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4966
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4969
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4977
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4980
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4992
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5000
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5008
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5022
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5026
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5037
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5045
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5051
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5060
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5065
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5069
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5072
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5081
		{
			sqlVAL.union.val = &tree.ShowRegions{}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = &tree.ShowRegions{
				Database: tree.Name(sqlDollar[5].str),
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5093
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5100
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 890:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5105
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5225
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5229
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5233
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5276
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5285
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5293
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5302
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.nameList()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5317
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 904:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5334
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5335
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5336
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5346
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5347
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5348
		{
			return helpWith(sqllex, "RESUME")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5366
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5368
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5372
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5375
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5380
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5384
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5407
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5409
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5415
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: tree.Name(sqlDollar[3].str),
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      tree.Name(sqlDollar[6].str),
				IfNotExists: true,
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   tree.Name(sqlDollar[3].str),
				AuthRole: sqlDollar[5].str,
			}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      tree.Name(sqlDollar[6].str),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].str,
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5450
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: tree.Name(sqlDollar[3].str),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: tree.Name(sqlDollar[3].str),
				Cmd: &tree.AlterSchemaOwner{
					Owner: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5478
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5517
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[9].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[10].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[11].union.storageParams(),
				OnCommit:      sqlDollar[12].union.createTableOnCommitSetting(),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5532
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[12].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[13].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[14].union.storageParams(),
				OnCommit:      sqlDollar[15].union.createTableOnCommitSetting(),
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5550
		{

			sqlVAL.union.val = nil
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5556
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.str = ""
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5566
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = nil
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 943:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5581
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5589
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5593
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 951:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5619
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5633
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5648
		{
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5649
		{
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5650
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5669
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5677
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5689
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5693
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5699
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5705
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5722
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5733
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5734
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5736
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5739
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5740
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5746
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5762
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5767
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5772
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5778
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5785
		{
			sqlVAL.str = ""
		}
	case 995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5792
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 996:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5798
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5812
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5818
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5828
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5862
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5877
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5895
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5925
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5929
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5933
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5954
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5958
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5972
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5976
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5983
		{
			sqlVAL.union.val = true
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5987
		{
			sqlVAL.union.val = false
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5993
		{
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5994
		{
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5999
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6012
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6027
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6051
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[4].union.idxElems(),
					Storing:     sqlDollar[6].union.nameList(),
					Interleave:  sqlDollar[7].union.interleave(),
					PartitionBy: sqlDollar[8].union.partitionBy(),
					Predicate:   sqlDollar[10].union.expr(),
				},
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6094
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6105
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6116
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6122
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6132
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6147
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6171
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6197
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6207
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6212
		{
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6213
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6214
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6215
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6216
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6217
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6257
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6261
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6281
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6285
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6289
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6302
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6306
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6310
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6314
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6318
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6373
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6382
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6390
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6397
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6401
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6405
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6406
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6416
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6419
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6421
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6423
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6426
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6428
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6429
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6431
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6444
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6448
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6469
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6484
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = true
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6494
		{

			sqlVAL.union.val = true
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6499
		{
			sqlVAL.union.val = false
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6509
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6523
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6535
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6547
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6557
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6567
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6571
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6591
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6599
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6603
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6607
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6611
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6619
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6635
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6639
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6648
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = nil
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6672
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6677
		{
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6678
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6694
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6696
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6698
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6700
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6702
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6704
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6742
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6760
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6779
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6796
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6813
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6817
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = false
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6838
		{
			sqlVAL.union.val = true
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = false
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = true
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = false
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6871
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6877
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6883
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6891
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6916
		{
			sqlVAL.str = ""
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6919
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.str = ""
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6944
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6950
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6956
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6978
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7018
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7026
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7032
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7044
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7050
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7064
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7070
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7078
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7087
		{
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7088
		{
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7091
		{
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7092
		{
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7103
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7121
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7123
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7130
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7151
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7153
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7159
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7180
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7182
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7188
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7199
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7203
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7204
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7205
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7224
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7229
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7242
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7247
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7256
		{
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7257
		{
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7258
		{
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7268
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7275
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7278
		{
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7279
		{
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7307
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7320
		{
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7322
		{
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7326
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				Regions:         sqlDollar[10].union.nameList(),
				Survive:         sqlDollar[11].union.survive(),
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				Regions:         sqlDollar[13].union.nameList(),
				Survive:         sqlDollar[14].union.survive(),
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7411
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = tree.SurviveRegionFailure
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = tree.SurviveAvailabilityZoneFailure
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = tree.SurviveDefault
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = tree.SurviveDefault
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.str = ""
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.str = ""
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.str = ""
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.str = ""
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7486
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7499
		{
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7500
		{
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7522
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7529
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7547
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7551
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7560
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7571
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7609
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7636
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7640
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7678
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7681
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7684
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7690
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7710
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7714
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.strs(),
				NewRole:  sqlDollar[6].str,
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7731
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.strs(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7746
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7793
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7820
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7873
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7885
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7890
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7925
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7926
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7927
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7988
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7992
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8032
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8048
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8053
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8069
		{
			sqlVAL.union.val = true
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8073
		{
			sqlVAL.union.val = false
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8089
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8101
		{
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8102
		{
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = nil
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8115
		{
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8116
		{
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = true
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8124
		{
			sqlVAL.union.val = false
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = false
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8134
		{
			sqlVAL.union.val = true
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8140
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8145
		{
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8146
		{
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8149
		{
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8150
		{
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8174
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8191
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8212
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8217
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8229
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8246
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8279
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8334
		{
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8335
		{
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8338
		{
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8339
		{
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8373
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8374
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8375
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8405
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8407
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8422
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8444
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8449
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8454
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8465
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8477
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8492
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8496
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8535
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8545
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8580
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8591
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8621
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8654
		{
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8656
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = nil
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8661
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = true
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = false
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8711
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8729
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8755
		{
			sqlVAL.str = tree.AstFull
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.str = tree.AstRight
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8767
		{
			sqlVAL.str = tree.AstInner
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8773
		{
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8774
		{
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8795
		{
			sqlVAL.str = tree.AstHash
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.str = ""
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8830
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8836
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8841
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8859
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8865
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8871
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8881
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = true
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = false
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = true
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = false
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8930
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8943
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8951
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8952
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8970
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8972
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8980
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8993
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9000
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9009
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9049
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9061
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9062
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9066
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9067
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9068
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9069
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9070
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9071
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9072
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9074
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9075
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9076
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9077
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9078
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9079
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9080
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9082
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9083
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9084
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9086
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9087
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9088
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9090
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9091
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9092
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9094
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9095
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9096
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9099
		{
			sqlVAL.union.val = types.Geography
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9103
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9111
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9119
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9145
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9153
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = nil
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = types.Int2
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = types.Int
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = types.Float4
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = types.Float
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9196
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9204
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9212
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = types.Bool
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9226
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = types.Float
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9245
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9251
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9273
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = types.String
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = true
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = false
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = types.Date
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9322
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9330
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9344
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9353
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9361
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9378
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = true
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = false
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = false
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = types.Interval
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9402
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9429
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9468
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9486
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9501
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9507
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9517
		{
			sqlVAL.union.val = nil
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9531
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9591
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9628
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9632
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9672
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9764
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9843
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9857
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9909
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9931
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9943
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10125
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10130
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10156
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10165
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10180
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10191
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10199
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10203
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10210
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10221
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10222
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10230
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10234
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10237
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10246
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10312
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10437
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10442
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10451
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10460
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10469
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10478
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10483
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10485
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10488
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10493
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10498
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10507
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10508
		{
			return unimplemented(sqllex, "treat")
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10529
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10534
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10581
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10589
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.str = ""
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10664
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10670
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10683
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10711
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10723
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10751
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10756
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10780
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = tree.Any
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = tree.Some
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = tree.All
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10806
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = tree.Div
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10810
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10814
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = tree.LT
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = tree.GT
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10818
		{
			sqlVAL.union.val = tree.LE
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = tree.GE
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = tree.NE
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = tree.Like
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10827
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10860
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11082
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11092
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11098
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11141
		{
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11142
		{
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11156
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11214
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11222
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11295
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11311
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11320
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11331
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11340
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11348
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11360
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11463
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11470
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11474
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11478
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11540
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11553
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11560
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.str = ""
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11591
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11595
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
