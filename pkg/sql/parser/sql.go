// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}

//line sql-gen.y:929
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14590

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 41,
	-2, 1728,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 59,
	272, 452,
	-2, 0,
	-1, 71,
	8, 909,
	29, 909,
	621, 909,
	622, 909,
	-2, 0,
	-1, 72,
	8, 909,
	29, 909,
	621, 909,
	622, 909,
	-2, 0,
	-1, 79,
	254, 268,
	543, 268,
	-2, 0,
	-1, 93,
	242, 1461,
	256, 1461,
	272, 448,
	410, 448,
	422, 1208,
	463, 448,
	477, 1208,
	527, 1208,
	555, 448,
	582, 1208,
	-2, 0,
	-1, 99,
	137, 1728,
	249, 1728,
	566, 1728,
	567, 1728,
	-2, 0,
	-1, 117,
	156, 1699,
	176, 1699,
	189, 1699,
	252, 1699,
	285, 1699,
	359, 1699,
	370, 1699,
	561, 1699,
	-2, 1670,
	-1, 159,
	164, 1039,
	271, 1039,
	413, 1000,
	482, 1000,
	526, 1000,
	546, 1039,
	548, 1000,
	-2, 0,
	-1, 164,
	4, 1730,
	21, 1730,
	22, 1730,
	23, 1730,
	24, 1730,
	25, 1730,
	26, 1730,
	27, 1730,
	28, 1730,
	30, 1730,
	31, 1730,
	37, 1730,
	41, 1730,
	43, 1730,
	44, 1730,
	46, 1730,
	47, 1730,
	48, 1730,
	49, 1730,
	50, 1730,
	51, 1730,
	52, 1730,
	53, 1730,
	54, 1730,
	56, 1730,
	57, 1730,
	58, 1730,
	59, 1730,
	61, 1730,
	62, 1730,
	63, 1730,
	64, 1730,
	65, 1730,
	66, 1730,
	67, 1730,
	71, 1730,
	72, 1730,
	73, 1730,
	74, 1730,
	76, 1730,
	77, 1730,
	78, 1730,
	82, 1730,
	83, 1730,
	84, 1730,
	85, 1730,
	86, 1730,
	87, 1730,
	88, 1730,
	89, 1730,
	92, 1730,
	93, 1730,
	94, 1730,
	95, 1730,
	96, 1730,
	98, 1730,
	100, 1730,
	101, 1730,
	102, 1730,
	103, 1730,
	104, 1730,
	105, 1730,
	107, 1730,
	108, 1730,
	109, 1730,
	111, 1730,
	112, 1730,
	113, 1730,
	121, 1730,
	122, 1730,
	123, 1730,
	124, 1730,
	125, 1730,
	127, 1730,
	128, 1730,
	129, 1730,
	130, 1730,
	132, 1730,
	133, 1730,
	134, 1730,
	136, 1730,
	137, 1730,
	138, 1730,
	140, 1730,
	141, 1730,
	142, 1730,
	145, 1730,
	146, 1730,
	147, 1730,
	149, 1730,
	150, 1730,
	151, 1730,
	153, 1730,
	154, 1730,
	155, 1730,
	157, 1730,
	158, 1730,
	159, 1730,
	160, 1730,
	161, 1730,
	162, 1730,
	163, 1730,
	164, 1730,
	165, 1730,
	166, 1730,
	167, 1730,
	168, 1730,
	169, 1730,
	170, 1730,
	171, 1730,
	172, 1730,
	173, 1730,
	175, 1730,
	181, 1730,
	182, 1730,
	183, 1730,
	184, 1730,
	188, 1730,
	190, 1730,
	191, 1730,
	192, 1730,
	194, 1730,
	195, 1730,
	198, 1730,
	199, 1730,
	200, 1730,
	201, 1730,
	202, 1730,
	203, 1730,
	204, 1730,
	205, 1730,
	206, 1730,
	207, 1730,
	208, 1730,
	209, 1730,
	210, 1730,
	211, 1730,
	213, 1730,
	214, 1730,
	216, 1730,
	217, 1730,
	219, 1730,
	220, 1730,
	221, 1730,
	222, 1730,
	223, 1730,
	224, 1730,
	225, 1730,
	226, 1730,
	227, 1730,
	228, 1730,
	229, 1730,
	231, 1730,
	232, 1730,
	234, 1730,
	235, 1730,
	236, 1730,
	237, 1730,
	238, 1730,
	242, 1730,
	243, 1730,
	244, 1730,
	245, 1730,
	248, 1730,
	249, 1730,
	250, 1730,
	251, 1730,
	253, 1730,
	255, 1730,
	256, 1730,
	258, 1730,
	260, 1730,
	261, 1730,
	262, 1730,
	264, 1730,
	268, 1730,
	269, 1730,
	270, 1730,
	271, 1730,
	272, 1730,
	273, 1730,
	275, 1730,
	276, 1730,
	277, 1730,
	279, 1730,
	280, 1730,
	282, 1730,
	283, 1730,
	286, 1730,
	287, 1730,
	288, 1730,
	289, 1730,
	290, 1730,
	291, 1730,
	292, 1730,
	295, 1730,
	296, 1730,
	297, 1730,
	298, 1730,
	300, 1730,
	301, 1730,
	302, 1730,
	303, 1730,
	304, 1730,
	305, 1730,
	306, 1730,
	307, 1730,
	308, 1730,
	309, 1730,
	310, 1730,
	311, 1730,
	312, 1730,
	313, 1730,
	314, 1730,
	315, 1730,
	316, 1730,
	317, 1730,
	318, 1730,
	319, 1730,
	320, 1730,
	321, 1730,
	322, 1730,
	324, 1730,
	326, 1730,
	327, 1730,
	328, 1730,
	329, 1730,
	330, 1730,
	331, 1730,
	332, 1730,
	333, 1730,
	334, 1730,
	335, 1730,
	336, 1730,
	337, 1730,
	338, 1730,
	339, 1730,
	340, 1730,
	341, 1730,
	342, 1730,
	344, 1730,
	345, 1730,
	347, 1730,
	349, 1730,
	350, 1730,
	351, 1730,
	352, 1730,
	354, 1730,
	355, 1730,
	356, 1730,
	357, 1730,
	358, 1730,
	361, 1730,
	363, 1730,
	365, 1730,
	366, 1730,
	367, 1730,
	368, 1730,
	371, 1730,
	372, 1730,
	373, 1730,
	375, 1730,
	377, 1730,
	378, 1730,
	379, 1730,
	380, 1730,
	381, 1730,
	382, 1730,
	383, 1730,
	384, 1730,
	385, 1730,
	386, 1730,
	387, 1730,
	388, 1730,
	389, 1730,
	391, 1730,
	392, 1730,
	393, 1730,
	394, 1730,
	395, 1730,
	396, 1730,
	397, 1730,
	398, 1730,
	399, 1730,
	400, 1730,
	401, 1730,
	402, 1730,
	403, 1730,
	404, 1730,
	405, 1730,
	407, 1730,
	408, 1730,
	409, 1730,
	411, 1730,
	412, 1730,
	413, 1730,
	414, 1730,
	415, 1730,
	416, 1730,
	417, 1730,
	418, 1730,
	419, 1730,
	420, 1730,
	421, 1730,
	422, 1730,
	423, 1730,
	424, 1730,
	426, 1730,
	428, 1730,
	429, 1730,
	430, 1730,
	436, 1730,
	437, 1730,
	438, 1730,
	440, 1730,
	441, 1730,
	442, 1730,
	443, 1730,
	444, 1730,
	445, 1730,
	446, 1730,
	447, 1730,
	448, 1730,
	449, 1730,
	451, 1730,
	452, 1730,
	453, 1730,
	455, 1730,
	456, 1730,
	457, 1730,
	458, 1730,
	459, 1730,
	460, 1730,
	461, 1730,
	463, 1730,
	464, 1730,
	465, 1730,
	466, 1730,
	467, 1730,
	468, 1730,
	469, 1730,
	470, 1730,
	471, 1730,
	472, 1730,
	473, 1730,
	474, 1730,
	475, 1730,
	477, 1730,
	478, 1730,
	479, 1730,
	480, 1730,
	481, 1730,
	482, 1730,
	484, 1730,
	485, 1730,
	486, 1730,
	487, 1730,
	488, 1730,
	489, 1730,
	491, 1730,
	492, 1730,
	493, 1730,
	494, 1730,
	495, 1730,
	496, 1730,
	497, 1730,
	498, 1730,
	500, 1730,
	502, 1730,
	503, 1730,
	504, 1730,
	505, 1730,
	506, 1730,
	507, 1730,
	508, 1730,
	509, 1730,
	510, 1730,
	511, 1730,
	512, 1730,
	513, 1730,
	514, 1730,
	515, 1730,
	516, 1730,
	517, 1730,
	518, 1730,
	519, 1730,
	520, 1730,
	522, 1730,
	523, 1730,
	525, 1730,
	526, 1730,
	528, 1730,
	529, 1730,
	530, 1730,
	531, 1730,
	532, 1730,
	533, 1730,
	535, 1730,
	536, 1730,
	538, 1730,
	539, 1730,
	540, 1730,
	541, 1730,
	542, 1730,
	544, 1730,
	546, 1730,
	547, 1730,
	548, 1730,
	549, 1730,
	550, 1730,
	551, 1730,
	552, 1730,
	554, 1730,
	555, 1730,
	556, 1730,
	557, 1730,
	559, 1730,
	560, 1730,
	563, 1730,
	564, 1730,
	565, 1730,
	566, 1730,
	567, 1730,
	568, 1730,
	569, 1730,
	570, 1730,
	572, 1730,
	575, 1730,
	576, 1730,
	577, 1730,
	578, 1730,
	579, 1730,
	580, 1730,
	582, 1730,
	583, 1730,
	584, 1730,
	585, 1730,
	586, 1730,
	587, 1730,
	588, 1730,
	589, 1730,
	594, 1730,
	595, 1730,
	596, 1730,
	597, 1730,
	598, 1730,
	599, 1730,
	-2, 0,
	-1, 165,
	1, 1578,
	135, 1578,
	260, 1578,
	346, 1578,
	408, 1578,
	418, 1578,
	603, 1578,
	634, 1578,
	-2, 0,
	-1, 167,
	1, 1578,
	634, 1578,
	-2, 0,
	-1, 168,
	1, 1578,
	634, 1578,
	-2, 0,
	-1, 169,
	1, 1578,
	543, 1578,
	634, 1578,
	-2, 0,
	-1, 201,
	156, 1698,
	176, 1698,
	189, 1698,
	252, 1698,
	285, 1698,
	359, 1698,
	370, 1698,
	561, 1698,
	-2, 1673,
	-1, 252,
	4, 1737,
	5, 1737,
	6, 1737,
	7, 1737,
	8, 1737,
	9, 1737,
	10, 1737,
	21, 1737,
	22, 1737,
	23, 1737,
	24, 1737,
	25, 1737,
	26, 1737,
	27, 1737,
	28, 1737,
	30, 1737,
	31, 1737,
	37, 1737,
	38, 1737,
	41, 1737,
	43, 1737,
	44, 1737,
	45, 1737,
	46, 1737,
	47, 1737,
	48, 1737,
	49, 1737,
	50, 1737,
	51, 1737,
	52, 1737,
	53, 1737,
	54, 1737,
	56, 1737,
	57, 1737,
	58, 1737,
	59, 1737,
	61, 1737,
	62, 1737,
	63, 1737,
	64, 1737,
	65, 1737,
	66, 1737,
	67, 1737,
	68, 1737,
	69, 1737,
	70, 1737,
	71, 1737,
	72, 1737,
	73, 1737,
	74, 1737,
	76, 1737,
	77, 1737,
	78, 1737,
	80, 1737,
	82, 1737,
	83, 1737,
	84, 1737,
	85, 1737,
	86, 1737,
	87, 1737,
	88, 1737,
	89, 1737,
	92, 1737,
	93, 1737,
	94, 1737,
	95, 1737,
	96, 1737,
	98, 1737,
	100, 1737,
	101, 1737,
	102, 1737,
	103, 1737,
	104, 1737,
	105, 1737,
	107, 1737,
	108, 1737,
	109, 1737,
	110, 1737,
	111, 1737,
	112, 1737,
	113, 1737,
	114, 1737,
	115, 1737,
	116, 1737,
	117, 1737,
	118, 1737,
	119, 1737,
	120, 1737,
	121, 1737,
	122, 1737,
	123, 1737,
	124, 1737,
	125, 1737,
	126, 1737,
	127, 1737,
	128, 1737,
	129, 1737,
	130, 1737,
	131, 1737,
	132, 1737,
	133, 1737,
	134, 1737,
	136, 1737,
	137, 1737,
	138, 1737,
	140, 1737,
	141, 1737,
	142, 1737,
	145, 1737,
	146, 1737,
	147, 1737,
	149, 1737,
	150, 1737,
	151, 1737,
	153, 1737,
	154, 1737,
	155, 1737,
	157, 1737,
	158, 1737,
	159, 1737,
	160, 1737,
	161, 1737,
	162, 1737,
	163, 1737,
	164, 1737,
	165, 1737,
	166, 1737,
	167, 1737,
	168, 1737,
	169, 1737,
	170, 1737,
	171, 1737,
	172, 1737,
	173, 1737,
	174, 1737,
	175, 1737,
	181, 1737,
	182, 1737,
	183, 1737,
	184, 1737,
	188, 1737,
	190, 1737,
	191, 1737,
	192, 1737,
	194, 1737,
	195, 1737,
	197, 1737,
	198, 1737,
	199, 1737,
	200, 1737,
	201, 1737,
	202, 1737,
	203, 1737,
	204, 1737,
	205, 1737,
	206, 1737,
	207, 1737,
	208, 1737,
	209, 1737,
	210, 1737,
	211, 1737,
	213, 1737,
	214, 1737,
	216, 1737,
	217, 1737,
	219, 1737,
	220, 1737,
	221, 1737,
	222, 1737,
	223, 1737,
	224, 1737,
	225, 1737,
	226, 1737,
	227, 1737,
	228, 1737,
	229, 1737,
	230, 1737,
	231, 1737,
	232, 1737,
	234, 1737,
	235, 1737,
	236, 1737,
	237, 1737,
	238, 1737,
	242, 1737,
	243, 1737,
	244, 1737,
	245, 1737,
	247, 1737,
	248, 1737,
	249, 1737,
	250, 1737,
	251, 1737,
	253, 1737,
	255, 1737,
	256, 1737,
	257, 1737,
	258, 1737,
	259, 1737,
	260, 1737,
	261, 1737,
	262, 1737,
	263, 1737,
	264, 1737,
	268, 1737,
	269, 1737,
	270, 1737,
	271, 1737,
	272, 1737,
	273, 1737,
	275, 1737,
	276, 1737,
	277, 1737,
	279, 1737,
	280, 1737,
	281, 1737,
	282, 1737,
	283, 1737,
	284, 1737,
	286, 1737,
	287, 1737,
	288, 1737,
	289, 1737,
	290, 1737,
	291, 1737,
	292, 1737,
	293, 1737,
	294, 1737,
	295, 1737,
	296, 1737,
	297, 1737,
	298, 1737,
	300, 1737,
	301, 1737,
	302, 1737,
	303, 1737,
	304, 1737,
	305, 1737,
	306, 1737,
	307, 1737,
	308, 1737,
	309, 1737,
	310, 1737,
	311, 1737,
	312, 1737,
	313, 1737,
	314, 1737,
	315, 1737,
	316, 1737,
	317, 1737,
	318, 1737,
	319, 1737,
	320, 1737,
	321, 1737,
	322, 1737,
	324, 1737,
	325, 1737,
	326, 1737,
	327, 1737,
	328, 1737,
	329, 1737,
	330, 1737,
	331, 1737,
	332, 1737,
	333, 1737,
	334, 1737,
	335, 1737,
	336, 1737,
	337, 1737,
	338, 1737,
	339, 1737,
	340, 1737,
	341, 1737,
	342, 1737,
	343, 1737,
	344, 1737,
	345, 1737,
	346, 1737,
	347, 1737,
	348, 1737,
	349, 1737,
	350, 1737,
	351, 1737,
	352, 1737,
	353, 1737,
	354, 1737,
	355, 1737,
	356, 1737,
	357, 1737,
	358, 1737,
	361, 1737,
	363, 1737,
	366, 1737,
	367, 1737,
	368, 1737,
	371, 1737,
	372, 1737,
	373, 1737,
	374, 1737,
	375, 1737,
	376, 1737,
	377, 1737,
	378, 1737,
	379, 1737,
	380, 1737,
	381, 1737,
	382, 1737,
	383, 1737,
	384, 1737,
	385, 1737,
	386, 1737,
	387, 1737,
	388, 1737,
	389, 1737,
	391, 1737,
	392, 1737,
	393, 1737,
	394, 1737,
	395, 1737,
	396, 1737,
	397, 1737,
	398, 1737,
	399, 1737,
	400, 1737,
	401, 1737,
	402, 1737,
	403, 1737,
	404, 1737,
	405, 1737,
	407, 1737,
	408, 1737,
	409, 1737,
	411, 1737,
	412, 1737,
	413, 1737,
	414, 1737,
	415, 1737,
	416, 1737,
	417, 1737,
	418, 1737,
	419, 1737,
	420, 1737,
	421, 1737,
	422, 1737,
	423, 1737,
	424, 1737,
	426, 1737,
	428, 1737,
	429, 1737,
	430, 1737,
	436, 1737,
	437, 1737,
	438, 1737,
	440, 1737,
	441, 1737,
	442, 1737,
	443, 1737,
	444, 1737,
	445, 1737,
	446, 1737,
	447, 1737,
	448, 1737,
	449, 1737,
	451, 1737,
	452, 1737,
	453, 1737,
	454, 1737,
	455, 1737,
	456, 1737,
	457, 1737,
	458, 1737,
	459, 1737,
	460, 1737,
	461, 1737,
	463, 1737,
	464, 1737,
	465, 1737,
	466, 1737,
	467, 1737,
	468, 1737,
	469, 1737,
	470, 1737,
	471, 1737,
	472, 1737,
	473, 1737,
	474, 1737,
	475, 1737,
	477, 1737,
	478, 1737,
	479, 1737,
	480, 1737,
	481, 1737,
	482, 1737,
	483, 1737,
	484, 1737,
	485, 1737,
	486, 1737,
	487, 1737,
	488, 1737,
	489, 1737,
	490, 1737,
	491, 1737,
	492, 1737,
	493, 1737,
	494, 1737,
	495, 1737,
	496, 1737,
	497, 1737,
	498, 1737,
	500, 1737,
	502, 1737,
	503, 1737,
	504, 1737,
	505, 1737,
	506, 1737,
	507, 1737,
	508, 1737,
	509, 1737,
	510, 1737,
	511, 1737,
	512, 1737,
	513, 1737,
	514, 1737,
	515, 1737,
	516, 1737,
	517, 1737,
	518, 1737,
	519, 1737,
	520, 1737,
	522, 1737,
	523, 1737,
	524, 1737,
	525, 1737,
	526, 1737,
	528, 1737,
	529, 1737,
	530, 1737,
	531, 1737,
	532, 1737,
	533, 1737,
	535, 1737,
	536, 1737,
	538, 1737,
	539, 1737,
	540, 1737,
	541, 1737,
	542, 1737,
	544, 1737,
	546, 1737,
	547, 1737,
	548, 1737,
	549, 1737,
	550, 1737,
	551, 1737,
	552, 1737,
	553, 1737,
	554, 1737,
	555, 1737,
	556, 1737,
	557, 1737,
	559, 1737,
	560, 1737,
	562, 1737,
	563, 1737,
	564, 1737,
	565, 1737,
	566, 1737,
	567, 1737,
	568, 1737,
	569, 1737,
	570, 1737,
	571, 1737,
	572, 1737,
	575, 1737,
	576, 1737,
	577, 1737,
	578, 1737,
	579, 1737,
	580, 1737,
	582, 1737,
	583, 1737,
	584, 1737,
	585, 1737,
	586, 1737,
	587, 1737,
	588, 1737,
	589, 1737,
	594, 1737,
	595, 1737,
	596, 1737,
	597, 1737,
	598, 1737,
	599, 1737,
	600, 1737,
	614, 1737,
	621, 1737,
	622, 1737,
	623, 1737,
	631, 1737,
	635, 1737,
	-2, 0,
	-1, 797,
	4, 1459,
	21, 1459,
	22, 1459,
	23, 1459,
	24, 1459,
	25, 1459,
	26, 1459,
	27, 1459,
	28, 1459,
	30, 1459,
	31, 1459,
	37, 1459,
	41, 1459,
	43, 1459,
	44, 1459,
	46, 1459,
	47, 1459,
	48, 1459,
	49, 1459,
	50, 1459,
	51, 1459,
	52, 1459,
	53, 1459,
	54, 1459,
	56, 1459,
	57, 1459,
	58, 1459,
	59, 1459,
	61, 1459,
	62, 1459,
	63, 1459,
	64, 1459,
	65, 1459,
	66, 1459,
	67, 1459,
	71, 1459,
	72, 1459,
	73, 1459,
	74, 1459,
	76, 1459,
	77, 1459,
	78, 1459,
	82, 1459,
	83, 1459,
	84, 1459,
	85, 1459,
	86, 1459,
	87, 1459,
	88, 1459,
	89, 1459,
	92, 1459,
	93, 1459,
	94, 1459,
	95, 1459,
	96, 1459,
	98, 1459,
	100, 1459,
	101, 1459,
	102, 1459,
	103, 1459,
	104, 1459,
	105, 1459,
	107, 1459,
	108, 1459,
	109, 1459,
	111, 1459,
	112, 1459,
	113, 1459,
	121, 1459,
	122, 1459,
	123, 1459,
	124, 1459,
	125, 1459,
	127, 1459,
	128, 1459,
	129, 1459,
	130, 1459,
	132, 1459,
	133, 1459,
	134, 1459,
	136, 1459,
	137, 1459,
	138, 1459,
	140, 1459,
	141, 1459,
	142, 1459,
	145, 1459,
	146, 1459,
	147, 1459,
	149, 1459,
	150, 1459,
	151, 1459,
	153, 1459,
	154, 1459,
	155, 1459,
	157, 1459,
	158, 1459,
	159, 1459,
	160, 1459,
	161, 1459,
	162, 1459,
	163, 1459,
	164, 1459,
	165, 1459,
	166, 1459,
	167, 1459,
	168, 1459,
	169, 1459,
	170, 1459,
	171, 1459,
	172, 1459,
	173, 1459,
	175, 1459,
	181, 1459,
	182, 1459,
	183, 1459,
	184, 1459,
	188, 1459,
	190, 1459,
	191, 1459,
	192, 1459,
	194, 1459,
	195, 1459,
	198, 1459,
	199, 1459,
	200, 1459,
	201, 1459,
	202, 1459,
	203, 1459,
	204, 1459,
	205, 1459,
	206, 1459,
	207, 1459,
	208, 1459,
	209, 1459,
	210, 1459,
	211, 1459,
	213, 1459,
	214, 1459,
	216, 1459,
	217, 1459,
	219, 1459,
	220, 1459,
	221, 1459,
	222, 1459,
	223, 1459,
	224, 1459,
	225, 1459,
	226, 1459,
	227, 1459,
	228, 1459,
	229, 1459,
	231, 1459,
	232, 1459,
	234, 1459,
	235, 1459,
	236, 1459,
	237, 1459,
	238, 1459,
	242, 1459,
	243, 1459,
	244, 1459,
	245, 1459,
	248, 1459,
	249, 1459,
	250, 1459,
	251, 1459,
	253, 1459,
	255, 1459,
	256, 1459,
	258, 1459,
	260, 1459,
	261, 1459,
	262, 1459,
	264, 1459,
	268, 1459,
	269, 1459,
	270, 1459,
	271, 1459,
	272, 1459,
	273, 1459,
	275, 1459,
	276, 1459,
	277, 1459,
	279, 1459,
	280, 1459,
	282, 1459,
	283, 1459,
	286, 1459,
	287, 1459,
	288, 1459,
	289, 1459,
	290, 1459,
	291, 1459,
	292, 1459,
	295, 1459,
	296, 1459,
	297, 1459,
	298, 1459,
	300, 1459,
	301, 1459,
	302, 1459,
	303, 1459,
	304, 1459,
	305, 1459,
	306, 1459,
	307, 1459,
	308, 1459,
	309, 1459,
	310, 1459,
	311, 1459,
	312, 1459,
	313, 1459,
	314, 1459,
	315, 1459,
	316, 1459,
	317, 1459,
	318, 1459,
	319, 1459,
	320, 1459,
	321, 1459,
	322, 1459,
	324, 1459,
	326, 1459,
	327, 1459,
	328, 1459,
	329, 1459,
	330, 1459,
	331, 1459,
	332, 1459,
	333, 1459,
	334, 1459,
	335, 1459,
	336, 1459,
	337, 1459,
	338, 1459,
	339, 1459,
	340, 1459,
	341, 1459,
	342, 1459,
	344, 1459,
	345, 1459,
	347, 1459,
	349, 1459,
	350, 1459,
	351, 1459,
	352, 1459,
	354, 1459,
	355, 1459,
	356, 1459,
	357, 1459,
	358, 1459,
	361, 1459,
	363, 1459,
	366, 1459,
	367, 1459,
	368, 1459,
	371, 1459,
	372, 1459,
	373, 1459,
	375, 1459,
	377, 1459,
	378, 1459,
	379, 1459,
	380, 1459,
	381, 1459,
	382, 1459,
	383, 1459,
	384, 1459,
	385, 1459,
	386, 1459,
	387, 1459,
	388, 1459,
	389, 1459,
	391, 1459,
	392, 1459,
	393, 1459,
	394, 1459,
	395, 1459,
	396, 1459,
	397, 1459,
	398, 1459,
	399, 1459,
	400, 1459,
	401, 1459,
	402, 1459,
	403, 1459,
	404, 1459,
	405, 1459,
	407, 1459,
	408, 1459,
	409, 1459,
	411, 1459,
	412, 1459,
	413, 1459,
	414, 1459,
	415, 1459,
	416, 1459,
	417, 1459,
	418, 1459,
	419, 1459,
	420, 1459,
	421, 1459,
	422, 1459,
	423, 1459,
	424, 1459,
	426, 1459,
	428, 1459,
	429, 1459,
	430, 1459,
	436, 1459,
	437, 1459,
	438, 1459,
	440, 1459,
	441, 1459,
	442, 1459,
	443, 1459,
	444, 1459,
	445, 1459,
	446, 1459,
	447, 1459,
	448, 1459,
	449, 1459,
	451, 1459,
	452, 1459,
	453, 1459,
	455, 1459,
	456, 1459,
	457, 1459,
	458, 1459,
	459, 1459,
	460, 1459,
	461, 1459,
	463, 1459,
	464, 1459,
	465, 1459,
	466, 1459,
	467, 1459,
	468, 1459,
	469, 1459,
	470, 1459,
	471, 1459,
	472, 1459,
	473, 1459,
	474, 1459,
	475, 1459,
	477, 1459,
	478, 1459,
	479, 1459,
	480, 1459,
	481, 1459,
	482, 1459,
	484, 1459,
	485, 1459,
	486, 1459,
	487, 1459,
	488, 1459,
	489, 1459,
	491, 1459,
	492, 1459,
	493, 1459,
	494, 1459,
	495, 1459,
	496, 1459,
	497, 1459,
	498, 1459,
	500, 1459,
	502, 1459,
	503, 1459,
	504, 1459,
	505, 1459,
	506, 1459,
	507, 1459,
	508, 1459,
	509, 1459,
	510, 1459,
	511, 1459,
	512, 1459,
	513, 1459,
	514, 1459,
	515, 1459,
	516, 1459,
	517, 1459,
	518, 1459,
	519, 1459,
	520, 1459,
	522, 1459,
	523, 1459,
	525, 1459,
	526, 1459,
	528, 1459,
	529, 1459,
	530, 1459,
	531, 1459,
	532, 1459,
	533, 1459,
	535, 1459,
	536, 1459,
	538, 1459,
	539, 1459,
	540, 1459,
	541, 1459,
	542, 1459,
	544, 1459,
	546, 1459,
	547, 1459,
	548, 1459,
	549, 1459,
	550, 1459,
	551, 1459,
	552, 1459,
	554, 1459,
	555, 1459,
	556, 1459,
	557, 1459,
	559, 1459,
	560, 1459,
	563, 1459,
	564, 1459,
	565, 1459,
	566, 1459,
	567, 1459,
	568, 1459,
	569, 1459,
	570, 1459,
	572, 1459,
	575, 1459,
	576, 1459,
	577, 1459,
	578, 1459,
	579, 1459,
	580, 1459,
	582, 1459,
	583, 1459,
	584, 1459,
	585, 1459,
	586, 1459,
	587, 1459,
	588, 1459,
	589, 1459,
	594, 1459,
	595, 1459,
	596, 1459,
	597, 1459,
	598, 1459,
	599, 1459,
	-2, 0,
	-1, 816,
	196, 2533,
	543, 2533,
	613, 2533,
	633, 2533,
	-2, 0,
	-1, 817,
	196, 2519,
	543, 2519,
	613, 2519,
	633, 2519,
	-2, 0,
	-1, 819,
	196, 2800,
	543, 2800,
	613, 2800,
	633, 2800,
	-2, 0,
	-1, 822,
	196, 2649,
	543, 2649,
	613, 2649,
	633, 2649,
	-2, 0,
	-1, 823,
	196, 2844,
	543, 2844,
	613, 2844,
	633, 2844,
	-2, 0,
	-1, 831,
	196, 2677,
	543, 2677,
	613, 2677,
	633, 2677,
	-2, 775,
	-1, 847,
	8, 908,
	29, 908,
	621, 908,
	622, 908,
	-2, 913,
	-1, 851,
	1, 2587,
	634, 2587,
	-2, 913,
	-1, 852,
	1, 2637,
	634, 2637,
	-2, 913,
	-1, 855,
	1, 2682,
	634, 2682,
	-2, 906,
	-1, 856,
	1, 2738,
	634, 2738,
	-2, 907,
	-1, 857,
	1, 2592,
	634, 2592,
	-2, 910,
	-1, 858,
	1, 2506,
	634, 2506,
	-2, 911,
	-1, 893,
	633, 2465,
	636, 2465,
	-2, 1125,
	-1, 894,
	633, 2467,
	636, 2467,
	-2, 1126,
	-1, 895,
	633, 2466,
	636, 2466,
	-2, 1127,
	-1, 896,
	636, 2391,
	-2, 1128,
	-1, 921,
	189, 287,
	-2, 0,
	-1, 945,
	45, 2438,
	-2, 0,
	-1, 946,
	582, 1437,
	-2, 1209,
	-1, 962,
	4, 1871,
	21, 1871,
	22, 1871,
	23, 1871,
	24, 1871,
	25, 1871,
	26, 1871,
	27, 1871,
	28, 1871,
	30, 1871,
	31, 1871,
	37, 1871,
	41, 1871,
	43, 1871,
	44, 1871,
	46, 1871,
	47, 1871,
	48, 1871,
	49, 1871,
	50, 1871,
	51, 1871,
	52, 1871,
	53, 1871,
	54, 1871,
	56, 1871,
	57, 1871,
	58, 1871,
	59, 1871,
	61, 1871,
	62, 1871,
	63, 1871,
	64, 1871,
	65, 1871,
	66, 1871,
	67, 1871,
	71, 1871,
	72, 1871,
	73, 1871,
	74, 1871,
	76, 1871,
	77, 1871,
	78, 1871,
	82, 1871,
	83, 1871,
	84, 1871,
	85, 1871,
	86, 1871,
	87, 1871,
	88, 1871,
	89, 1871,
	92, 1871,
	93, 1871,
	94, 1871,
	95, 1871,
	96, 1871,
	98, 1871,
	100, 1871,
	101, 1871,
	102, 1871,
	103, 1871,
	104, 1871,
	105, 1871,
	107, 1871,
	108, 1871,
	109, 1871,
	111, 1871,
	112, 1871,
	113, 1871,
	121, 1871,
	122, 1871,
	123, 1871,
	124, 1871,
	125, 1871,
	127, 1871,
	128, 1871,
	129, 1871,
	130, 1871,
	132, 1871,
	133, 1871,
	134, 1871,
	136, 1871,
	137, 1871,
	138, 1871,
	140, 1871,
	141, 1871,
	142, 1871,
	145, 1871,
	146, 1871,
	147, 1871,
	149, 1871,
	150, 1871,
	151, 1871,
	153, 1871,
	154, 1871,
	155, 1871,
	157, 1871,
	158, 1871,
	159, 1871,
	160, 1871,
	161, 1871,
	162, 1871,
	163, 1871,
	164, 1871,
	165, 1871,
	166, 1871,
	167, 1871,
	168, 1871,
	169, 1871,
	170, 1871,
	171, 1871,
	172, 1871,
	173, 1871,
	175, 1871,
	181, 1871,
	182, 1871,
	183, 1871,
	184, 1871,
	188, 1871,
	190, 1871,
	191, 1871,
	192, 1871,
	194, 1871,
	195, 1871,
	198, 1871,
	199, 1871,
	200, 1871,
	201, 1871,
	202, 1871,
	203, 1871,
	204, 1871,
	205, 1871,
	206, 1871,
	207, 1871,
	208, 1871,
	209, 1871,
	210, 1871,
	211, 1871,
	213, 1871,
	214, 1871,
	216, 1871,
	217, 1871,
	219, 1871,
	220, 1871,
	221, 1871,
	222, 1871,
	223, 1871,
	224, 1871,
	225, 1871,
	226, 1871,
	227, 1871,
	228, 1871,
	229, 1871,
	231, 1871,
	232, 1871,
	234, 1871,
	235, 1871,
	236, 1871,
	237, 1871,
	238, 1871,
	242, 1871,
	243, 1871,
	244, 1871,
	245, 1871,
	248, 1871,
	249, 1871,
	250, 1871,
	251, 1871,
	253, 1871,
	255, 1871,
	256, 1871,
	258, 1871,
	260, 1871,
	261, 1871,
	262, 1871,
	264, 1871,
	268, 1871,
	269, 1871,
	270, 1871,
	271, 1871,
	272, 1871,
	273, 1871,
	275, 1871,
	276, 1871,
	277, 1871,
	279, 1871,
	280, 1871,
	282, 1871,
	283, 1871,
	286, 1871,
	287, 1871,
	288, 1871,
	289, 1871,
	290, 1871,
	291, 1871,
	292, 1871,
	295, 1871,
	296, 1871,
	297, 1871,
	298, 1871,
	300, 1871,
	301, 1871,
	302, 1871,
	303, 1871,
	304, 1871,
	305, 1871,
	306, 1871,
	307, 1871,
	308, 1871,
	309, 1871,
	310, 1871,
	311, 1871,
	312, 1871,
	313, 1871,
	314, 1871,
	315, 1871,
	316, 1871,
	317, 1871,
	318, 1871,
	319, 1871,
	320, 1871,
	321, 1871,
	322, 1871,
	324, 1871,
	326, 1871,
	327, 1871,
	328, 1871,
	329, 1871,
	330, 1871,
	331, 1871,
	332, 1871,
	333, 1871,
	334, 1871,
	335, 1871,
	336, 1871,
	337, 1871,
	338, 1871,
	339, 1871,
	340, 1871,
	341, 1871,
	342, 1871,
	344, 1871,
	345, 1871,
	347, 1871,
	349, 1871,
	350, 1871,
	351, 1871,
	352, 1871,
	354, 1871,
	355, 1871,
	356, 1871,
	357, 1871,
	358, 1871,
	361, 1871,
	363, 1871,
	366, 1871,
	367, 1871,
	368, 1871,
	371, 1871,
	372, 1871,
	373, 1871,
	375, 1871,
	377, 1871,
	378, 1871,
	379, 1871,
	380, 1871,
	381, 1871,
	382, 1871,
	383, 1871,
	384, 1871,
	385, 1871,
	386, 1871,
	387, 1871,
	388, 1871,
	389, 1871,
	391, 1871,
	392, 1871,
	393, 1871,
	394, 1871,
	395, 1871,
	396, 1871,
	397, 1871,
	398, 1871,
	399, 1871,
	400, 1871,
	401, 1871,
	402, 1871,
	403, 1871,
	404, 1871,
	405, 1871,
	407, 1871,
	408, 1871,
	409, 1871,
	411, 1871,
	412, 1871,
	413, 1871,
	414, 1871,
	415, 1871,
	416, 1871,
	417, 1871,
	418, 1871,
	419, 1871,
	420, 1871,
	421, 1871,
	422, 1871,
	423, 1871,
	424, 1871,
	426, 1871,
	428, 1871,
	429, 1871,
	430, 1871,
	436, 1871,
	437, 1871,
	438, 1871,
	440, 1871,
	441, 1871,
	442, 1871,
	443, 1871,
	444, 1871,
	445, 1871,
	446, 1871,
	447, 1871,
	448, 1871,
	449, 1871,
	451, 1871,
	452, 1871,
	453, 1871,
	455, 1871,
	456, 1871,
	457, 1871,
	458, 1871,
	459, 1871,
	460, 1871,
	461, 1871,
	463, 1871,
	464, 1871,
	465, 1871,
	466, 1871,
	467, 1871,
	468, 1871,
	469, 1871,
	470, 1871,
	471, 1871,
	472, 1871,
	473, 1871,
	474, 1871,
	475, 1871,
	477, 1871,
	478, 1871,
	479, 1871,
	480, 1871,
	481, 1871,
	482, 1871,
	484, 1871,
	485, 1871,
	486, 1871,
	487, 1871,
	488, 1871,
	489, 1871,
	491, 1871,
	492, 1871,
	493, 1871,
	494, 1871,
	495, 1871,
	496, 1871,
	497, 1871,
	498, 1871,
	500, 1871,
	502, 1871,
	503, 1871,
	504, 1871,
	505, 1871,
	506, 1871,
	507, 1871,
	508, 1871,
	509, 1871,
	510, 1871,
	511, 1871,
	512, 1871,
	513, 1871,
	514, 1871,
	515, 1871,
	516, 1871,
	517, 1871,
	518, 1871,
	519, 1871,
	520, 1871,
	522, 1871,
	523, 1871,
	525, 1871,
	526, 1871,
	528, 1871,
	529, 1871,
	530, 1871,
	531, 1871,
	532, 1871,
	533, 1871,
	535, 1871,
	536, 1871,
	538, 1871,
	539, 1871,
	540, 1871,
	541, 1871,
	542, 1871,
	544, 1871,
	546, 1871,
	547, 1871,
	548, 1871,
	549, 1871,
	550, 1871,
	551, 1871,
	552, 1871,
	554, 1871,
	555, 1871,
	556, 1871,
	557, 1871,
	559, 1871,
	560, 1871,
	563, 1871,
	564, 1871,
	565, 1871,
	566, 1871,
	567, 1871,
	568, 1871,
	569, 1871,
	570, 1871,
	572, 1871,
	575, 1871,
	576, 1871,
	577, 1871,
	578, 1871,
	579, 1871,
	580, 1871,
	582, 1871,
	583, 1871,
	584, 1871,
	585, 1871,
	586, 1871,
	587, 1871,
	588, 1871,
	589, 1871,
	594, 1871,
	595, 1871,
	596, 1871,
	597, 1871,
	598, 1871,
	599, 1871,
	-2, 0,
	-1, 972,
	272, 452,
	-2, 0,
	-1, 1051,
	413, 1001,
	482, 1001,
	526, 1001,
	548, 1001,
	-2, 0,
	-1, 1052,
	413, 1000,
	482, 1000,
	526, 1000,
	548, 1000,
	-2, 926,
	-1, 1056,
	1, 1053,
	630, 1053,
	632, 1053,
	634, 1053,
	-2, 0,
	-1, 1058,
	1, 975,
	630, 975,
	632, 975,
	634, 975,
	-2, 0,
	-1, 1059,
	1, 979,
	630, 979,
	632, 979,
	634, 979,
	-2, 0,
	-1, 1060,
	1, 1124,
	189, 1124,
	630, 1124,
	632, 1124,
	634, 1124,
	-2, 0,
	-1, 1068,
	1, 1006,
	630, 1006,
	632, 1006,
	634, 1006,
	-2, 0,
	-1, 1075,
	1, 1053,
	630, 1053,
	632, 1053,
	634, 1053,
	-2, 0,
	-1, 1076,
	1, 1055,
	630, 1055,
	632, 1055,
	634, 1055,
	-2, 0,
	-1, 1077,
	1, 1058,
	630, 1058,
	632, 1058,
	634, 1058,
	-2, 0,
	-1, 1085,
	1, 1088,
	630, 1088,
	632, 1088,
	634, 1088,
	-2, 0,
	-1, 1086,
	1, 1090,
	630, 1090,
	632, 1090,
	634, 1090,
	-2, 0,
	-1, 1091,
	1, 1118,
	630, 1118,
	632, 1118,
	634, 1118,
	-2, 0,
	-1, 1145,
	176, 1741,
	189, 1741,
	285, 1741,
	359, 1741,
	-2, 1677,
	-1, 1161,
	176, 1740,
	189, 1740,
	285, 1740,
	359, 1740,
	-2, 1674,
	-1, 1188,
	633, 2464,
	-2, 783,
	-1, 1217,
	5, 2456,
	631, 2454,
	-2, 2445,
	-1, 1225,
	5, 2477,
	631, 2474,
	-2, 2465,
	-1, 1226,
	5, 2478,
	631, 2475,
	-2, 2466,
	-1, 1234,
	633, 2462,
	-2, 2444,
	-1, 1235,
	631, 2932,
	-2, 2463,
	-1, 1258,
	631, 2931,
	-2, 2479,
	-1, 1259,
	5, 1946,
	-2, 2902,
	-1, 1260,
	5, 1947,
	-2, 2903,
	-1, 1261,
	5, 1948,
	-2, 2917,
	-1, 1262,
	5, 1949,
	-2, 2881,
	-1, 1263,
	5, 1950,
	-2, 2915,
	-1, 1264,
	5, 1958,
	-2, 2894,
	-1, 1265,
	5, 1945,
	-2, 2890,
	-1, 1266,
	5, 1945,
	-2, 2889,
	-1, 1267,
	5, 1945,
	-2, 2908,
	-1, 1268,
	5, 1956,
	-2, 2883,
	-1, 1269,
	5, 1961,
	-2, 2882,
	-1, 1270,
	5, 1963,
	-2, 2927,
	-1, 1273,
	5, 1985,
	-2, 2920,
	-1, 1274,
	5, 1977,
	-2, 2921,
	-1, 1275,
	5, 1985,
	-2, 2922,
	-1, 1276,
	5, 1981,
	-2, 2923,
	-1, 1277,
	5, 1931,
	-2, 2895,
	-1, 1278,
	5, 1932,
	-2, 2896,
	-1, 1279,
	5, 1933,
	-2, 2884,
	-1, 1307,
	5, 1968,
	-2, 2928,
	-1, 1308,
	5, 1969,
	-2, 2918,
	-1, 1309,
	5, 1970,
	583, 1970,
	-2, 2885,
	-1, 1310,
	5, 1971,
	583, 1971,
	-2, 2886,
	-1, 1348,
	631, 2474,
	-2, 2465,
	-1, 1349,
	631, 2475,
	-2, 2466,
	-1, 1447,
	196, 2844,
	543, 2844,
	613, 2844,
	633, 2844,
	-2, 0,
	-1, 1452,
	1, 759,
	634, 759,
	-2, 1586,
	-1, 1599,
	379, 2439,
	440, 2439,
	484, 2439,
	623, 2439,
	-2, 2429,
	-1, 1605,
	196, 147,
	279, 147,
	344, 147,
	589, 147,
	-2, 2840,
	-1, 1606,
	196, 148,
	279, 148,
	344, 148,
	589, 148,
	-2, 2578,
	-1, 1607,
	196, 149,
	279, 149,
	344, 149,
	589, 149,
	-2, 2761,
	-1, 1613,
	635, 2439,
	-2, 2441,
	-1, 1637,
	1, 1434,
	445, 1389,
	484, 1389,
	606, 1389,
	630, 1434,
	632, 1434,
	634, 1434,
	-2, 1726,
	-1, 1643,
	212, 1531,
	233, 1531,
	453, 1531,
	-2, 0,
	-1, 1692,
	422, 1208,
	582, 1208,
	-2, 447,
	-1, 1709,
	45, 2437,
	-2, 1171,
	-1, 1716,
	1, 1434,
	630, 1434,
	632, 1434,
	634, 1434,
	-2, 1726,
	-1, 1724,
	4, 1459,
	21, 1459,
	22, 1459,
	23, 1459,
	24, 1459,
	25, 1459,
	26, 1459,
	27, 1459,
	28, 1459,
	30, 1459,
	31, 1459,
	37, 1459,
	41, 1459,
	43, 1459,
	44, 1459,
	46, 1459,
	47, 1459,
	48, 1459,
	49, 1459,
	50, 1459,
	51, 1459,
	52, 1459,
	53, 1459,
	54, 1459,
	56, 1459,
	57, 1459,
	58, 1459,
	59, 1459,
	61, 1459,
	62, 1459,
	63, 1459,
	64, 1459,
	65, 1459,
	66, 1459,
	67, 1459,
	71, 1459,
	72, 1459,
	73, 1459,
	74, 1459,
	76, 1459,
	77, 1459,
	78, 1459,
	82, 1459,
	83, 1459,
	84, 1459,
	85, 1459,
	86, 1459,
	87, 1459,
	88, 1459,
	89, 1459,
	92, 1459,
	93, 1459,
	94, 1459,
	95, 1459,
	96, 1459,
	98, 1459,
	100, 1459,
	101, 1459,
	102, 1459,
	103, 1459,
	104, 1459,
	105, 1459,
	107, 1459,
	108, 1459,
	109, 1459,
	111, 1459,
	112, 1459,
	113, 1459,
	121, 1459,
	122, 1459,
	123, 1459,
	124, 1459,
	125, 1459,
	127, 1459,
	128, 1459,
	129, 1459,
	130, 1459,
	132, 1459,
	133, 1459,
	134, 1459,
	136, 1459,
	137, 1459,
	138, 1459,
	140, 1459,
	141, 1459,
	142, 1459,
	145, 1459,
	146, 1459,
	147, 1459,
	149, 1459,
	150, 1459,
	151, 1459,
	153, 1459,
	154, 1459,
	155, 1459,
	157, 1459,
	158, 1459,
	159, 1459,
	160, 1459,
	161, 1459,
	162, 1459,
	163, 1459,
	164, 1459,
	165, 1459,
	166, 1459,
	167, 1459,
	168, 1459,
	169, 1459,
	170, 1459,
	171, 1459,
	172, 1459,
	173, 1459,
	181, 1459,
	182, 1459,
	183, 1459,
	184, 1459,
	188, 1459,
	190, 1459,
	191, 1459,
	192, 1459,
	194, 1459,
	195, 1459,
	198, 1459,
	199, 1459,
	200, 1459,
	201, 1459,
	202, 1459,
	203, 1459,
	204, 1459,
	205, 1459,
	206, 1459,
	207, 1459,
	208, 1459,
	209, 1459,
	210, 1459,
	211, 1459,
	213, 1459,
	214, 1459,
	216, 1459,
	217, 1459,
	219, 1459,
	220, 1459,
	221, 1459,
	222, 1459,
	223, 1459,
	224, 1459,
	225, 1459,
	226, 1459,
	227, 1459,
	228, 1459,
	229, 1459,
	231, 1459,
	232, 1459,
	234, 1459,
	235, 1459,
	236, 1459,
	237, 1459,
	238, 1459,
	243, 1459,
	244, 1459,
	245, 1459,
	248, 1459,
	249, 1459,
	250, 1459,
	251, 1459,
	253, 1459,
	255, 1459,
	256, 1459,
	258, 1459,
	260, 1459,
	261, 1459,
	262, 1459,
	264, 1459,
	268, 1459,
	269, 1459,
	270, 1459,
	271, 1459,
	272, 1459,
	273, 1459,
	275, 1459,
	276, 1459,
	277, 1459,
	279, 1459,
	280, 1459,
	282, 1459,
	283, 1459,
	286, 1459,
	287, 1459,
	288, 1459,
	289, 1459,
	290, 1459,
	291, 1459,
	292, 1459,
	295, 1459,
	296, 1459,
	297, 1459,
	298, 1459,
	300, 1459,
	301, 1459,
	302, 1459,
	303, 1459,
	304, 1459,
	305, 1459,
	306, 1459,
	307, 1459,
	308, 1459,
	309, 1459,
	310, 1459,
	311, 1459,
	312, 1459,
	313, 1459,
	314, 1459,
	315, 1459,
	316, 1459,
	317, 1459,
	318, 1459,
	319, 1459,
	320, 1459,
	321, 1459,
	322, 1459,
	324, 1459,
	326, 1459,
	327, 1459,
	328, 1459,
	329, 1459,
	330, 1459,
	331, 1459,
	332, 1459,
	333, 1459,
	334, 1459,
	335, 1459,
	336, 1459,
	337, 1459,
	338, 1459,
	339, 1459,
	340, 1459,
	341, 1459,
	342, 1459,
	344, 1459,
	345, 1459,
	349, 1459,
	350, 1459,
	351, 1459,
	352, 1459,
	354, 1459,
	355, 1459,
	356, 1459,
	357, 1459,
	358, 1459,
	361, 1459,
	363, 1459,
	364, 1459,
	366, 1459,
	367, 1459,
	368, 1459,
	371, 1459,
	372, 1459,
	373, 1459,
	375, 1459,
	377, 1459,
	378, 1459,
	379, 1459,
	380, 1459,
	381, 1459,
	382, 1459,
	383, 1459,
	384, 1459,
	385, 1459,
	386, 1459,
	387, 1459,
	388, 1459,
	389, 1459,
	391, 1459,
	392, 1459,
	393, 1459,
	394, 1459,
	395, 1459,
	396, 1459,
	397, 1459,
	398, 1459,
	399, 1459,
	400, 1459,
	401, 1459,
	402, 1459,
	403, 1459,
	404, 1459,
	405, 1459,
	407, 1459,
	408, 1459,
	409, 1459,
	411, 1459,
	412, 1459,
	413, 1459,
	414, 1459,
	415, 1459,
	416, 1459,
	417, 1459,
	418, 1459,
	419, 1459,
	420, 1459,
	421, 1459,
	422, 1459,
	423, 1459,
	424, 1459,
	426, 1459,
	428, 1459,
	429, 1459,
	430, 1459,
	436, 1459,
	437, 1459,
	438, 1459,
	440, 1459,
	441, 1459,
	442, 1459,
	443, 1459,
	444, 1459,
	445, 1459,
	446, 1459,
	447, 1459,
	448, 1459,
	449, 1459,
	451, 1459,
	452, 1459,
	453, 1459,
	455, 1459,
	456, 1459,
	457, 1459,
	458, 1459,
	459, 1459,
	460, 1459,
	461, 1459,
	463, 1459,
	464, 1459,
	465, 1459,
	466, 1459,
	467, 1459,
	468, 1459,
	469, 1459,
	470, 1459,
	471, 1459,
	472, 1459,
	473, 1459,
	474, 1459,
	475, 1459,
	477, 1459,
	478, 1459,
	479, 1459,
	480, 1459,
	481, 1459,
	482, 1459,
	484, 1459,
	485, 1459,
	486, 1459,
	487, 1459,
	488, 1459,
	489, 1459,
	491, 1459,
	492, 1459,
	493, 1459,
	494, 1459,
	495, 1459,
	496, 1459,
	497, 1459,
	498, 1459,
	500, 1459,
	502, 1459,
	503, 1459,
	504, 1459,
	505, 1459,
	506, 1459,
	507, 1459,
	508, 1459,
	509, 1459,
	510, 1459,
	511, 1459,
	512, 1459,
	513, 1459,
	514, 1459,
	515, 1459,
	516, 1459,
	517, 1459,
	518, 1459,
	519, 1459,
	520, 1459,
	522, 1459,
	523, 1459,
	525, 1459,
	526, 1459,
	528, 1459,
	529, 1459,
	530, 1459,
	531, 1459,
	532, 1459,
	533, 1459,
	535, 1459,
	536, 1459,
	538, 1459,
	539, 1459,
	540, 1459,
	541, 1459,
	542, 1459,
	544, 1459,
	546, 1459,
	547, 1459,
	548, 1459,
	549, 1459,
	550, 1459,
	551, 1459,
	552, 1459,
	554, 1459,
	555, 1459,
	556, 1459,
	557, 1459,
	559, 1459,
	560, 1459,
	563, 1459,
	564, 1459,
	565, 1459,
	566, 1459,
	567, 1459,
	568, 1459,
	569, 1459,
	570, 1459,
	572, 1459,
	575, 1459,
	576, 1459,
	577, 1459,
	578, 1459,
	579, 1459,
	580, 1459,
	582, 1459,
	583, 1459,
	584, 1459,
	585, 1459,
	586, 1459,
	587, 1459,
	588, 1459,
	589, 1459,
	594, 1459,
	595, 1459,
	596, 1459,
	597, 1459,
	598, 1459,
	599, 1459,
	-2, 0,
	-1, 1747,
	1, 594,
	630, 594,
	632, 594,
	634, 594,
	-2, 1697,
	-1, 1750,
	4, 2926,
	11, 2926,
	12, 2926,
	14, 2926,
	15, 2926,
	16, 2926,
	17, 2926,
	18, 2926,
	19, 2926,
	21, 2926,
	22, 2926,
	23, 2926,
	24, 2926,
	25, 2926,
	26, 2926,
	27, 2926,
	28, 2926,
	30, 2926,
	31, 2926,
	34, 2926,
	35, 2926,
	37, 2926,
	39, 2926,
	41, 2926,
	43, 2926,
	44, 2926,
	46, 2926,
	47, 2926,
	48, 2926,
	49, 2926,
	50, 2926,
	51, 2926,
	52, 2926,
	53, 2926,
	54, 2926,
	56, 2926,
	57, 2926,
	58, 2926,
	59, 2926,
	61, 2926,
	62, 2926,
	63, 2926,
	64, 2926,
	65, 2926,
	66, 2926,
	67, 2926,
	70, 2926,
	71, 2926,
	72, 2926,
	73, 2926,
	74, 2926,
	76, 2926,
	77, 2926,
	78, 2926,
	79, 2926,
	82, 2926,
	83, 2926,
	84, 2926,
	85, 2926,
	86, 2926,
	87, 2926,
	88, 2926,
	89, 2926,
	90, 2926,
	92, 2926,
	93, 2926,
	94, 2926,
	95, 2926,
	96, 2926,
	98, 2926,
	99, 2926,
	100, 2926,
	101, 2926,
	102, 2926,
	103, 2926,
	104, 2926,
	105, 2926,
	107, 2926,
	108, 2926,
	109, 2926,
	110, 2926,
	111, 2926,
	112, 2926,
	113, 2926,
	121, 2926,
	122, 2926,
	123, 2926,
	124, 2926,
	125, 2926,
	127, 2926,
	128, 2926,
	129, 2926,
	130, 2926,
	132, 2926,
	133, 2926,
	134, 2926,
	136, 2926,
	137, 2926,
	138, 2926,
	140, 2926,
	141, 2926,
	142, 2926,
	145, 2926,
	146, 2926,
	147, 2926,
	149, 2926,
	150, 2926,
	151, 2926,
	153, 2926,
	154, 2926,
	155, 2926,
	157, 2926,
	158, 2926,
	159, 2926,
	160, 2926,
	161, 2926,
	162, 2926,
	163, 2926,
	164, 2926,
	165, 2926,
	166, 2926,
	167, 2926,
	168, 2926,
	169, 2926,
	170, 2926,
	171, 2926,
	172, 2926,
	173, 2926,
	177, 2926,
	178, 2926,
	179, 2926,
	180, 2926,
	181, 2926,
	182, 2926,
	183, 2926,
	184, 2926,
	187, 2926,
	188, 2926,
	190, 2926,
	191, 2926,
	192, 2926,
	194, 2926,
	195, 2926,
	197, 2926,
	198, 2926,
	199, 2926,
	200, 2926,
	201, 2926,
	202, 2926,
	203, 2926,
	204, 2926,
	205, 2926,
	206, 2926,
	207, 2926,
	208, 2926,
	209, 2926,
	210, 2926,
	211, 2926,
	213, 2926,
	214, 2926,
	216, 2926,
	217, 2926,
	219, 2926,
	220, 2926,
	221, 2926,
	222, 2926,
	223, 2926,
	224, 2926,
	225, 2926,
	226, 2926,
	227, 2926,
	228, 2926,
	229, 2926,
	230, 2926,
	231, 2926,
	232, 2926,
	233, 2926,
	234, 2926,
	235, 2926,
	236, 2926,
	237, 2926,
	238, 2926,
	240, 2926,
	241, 2926,
	243, 2926,
	244, 2926,
	245, 2926,
	247, 2926,
	248, 2926,
	249, 2926,
	250, 2926,
	251, 2926,
	253, 2926,
	255, 2926,
	256, 2926,
	257, 2926,
	258, 2926,
	259, 2926,
	260, 2926,
	261, 2926,
	262, 2926,
	263, 2926,
	264, 2926,
	266, 2926,
	267, 2926,
	268, 2926,
	269, 2926,
	270, 2926,
	271, 2926,
	272, 2926,
	273, 2926,
	275, 2926,
	276, 2926,
	277, 2926,
	279, 2926,
	280, 2926,
	281, 2926,
	282, 2926,
	283, 2926,
	284, 2926,
	286, 2926,
	287, 2926,
	288, 2926,
	289, 2926,
	290, 2926,
	291, 2926,
	292, 2926,
	295, 2926,
	296, 2926,
	297, 2926,
	298, 2926,
	299, 2926,
	300, 2926,
	301, 2926,
	302, 2926,
	303, 2926,
	304, 2926,
	305, 2926,
	306, 2926,
	307, 2926,
	308, 2926,
	309, 2926,
	310, 2926,
	311, 2926,
	312, 2926,
	313, 2926,
	314, 2926,
	315, 2926,
	316, 2926,
	317, 2926,
	318, 2926,
	319, 2926,
	320, 2926,
	321, 2926,
	322, 2926,
	324, 2926,
	325, 2926,
	326, 2926,
	327, 2926,
	328, 2926,
	329, 2926,
	330, 2926,
	331, 2926,
	332, 2926,
	333, 2926,
	334, 2926,
	335, 2926,
	336, 2926,
	337, 2926,
	338, 2926,
	339, 2926,
	340, 2926,
	341, 2926,
	342, 2926,
	344, 2926,
	345, 2926,
	348, 2926,
	349, 2926,
	350, 2926,
	351, 2926,
	352, 2926,
	354, 2926,
	355, 2926,
	356, 2926,
	357, 2926,
	358, 2926,
	361, 2926,
	363, 2926,
	366, 2926,
	367, 2926,
	368, 2926,
	369, 2926,
	371, 2926,
	372, 2926,
	373, 2926,
	375, 2926,
	377, 2926,
	378, 2926,
	379, 2926,
	380, 2926,
	381, 2926,
	382, 2926,
	383, 2926,
	384, 2926,
	385, 2926,
	386, 2926,
	387, 2926,
	388, 2926,
	389, 2926,
	391, 2926,
	392, 2926,
	393, 2926,
	394, 2926,
	395, 2926,
	396, 2926,
	397, 2926,
	398, 2926,
	399, 2926,
	400, 2926,
	401, 2926,
	402, 2926,
	403, 2926,
	404, 2926,
	405, 2926,
	407, 2926,
	408, 2926,
	409, 2926,
	411, 2926,
	412, 2926,
	413, 2926,
	414, 2926,
	415, 2926,
	416, 2926,
	417, 2926,
	418, 2926,
	419, 2926,
	420, 2926,
	421, 2926,
	422, 2926,
	423, 2926,
	424, 2926,
	426, 2926,
	428, 2926,
	429, 2926,
	430, 2926,
	436, 2926,
	437, 2926,
	438, 2926,
	439, 2926,
	440, 2926,
	441, 2926,
	442, 2926,
	443, 2926,
	444, 2926,
	445, 2926,
	446, 2926,
	447, 2926,
	448, 2926,
	449, 2926,
	451, 2926,
	452, 2926,
	453, 2926,
	454, 2926,
	455, 2926,
	456, 2926,
	457, 2926,
	458, 2926,
	459, 2926,
	460, 2926,
	461, 2926,
	462, 2926,
	463, 2926,
	464, 2926,
	465, 2926,
	466, 2926,
	467, 2926,
	468, 2926,
	469, 2926,
	470, 2926,
	471, 2926,
	472, 2926,
	473, 2926,
	474, 2926,
	475, 2926,
	477, 2926,
	478, 2926,
	479, 2926,
	480, 2926,
	481, 2926,
	482, 2926,
	484, 2926,
	485, 2926,
	486, 2926,
	487, 2926,
	488, 2926,
	489, 2926,
	490, 2926,
	491, 2926,
	492, 2926,
	493, 2926,
	494, 2926,
	495, 2926,
	496, 2926,
	497, 2926,
	498, 2926,
	500, 2926,
	502, 2926,
	503, 2926,
	504, 2926,
	505, 2926,
	506, 2926,
	507, 2926,
	508, 2926,
	509, 2926,
	510, 2926,
	511, 2926,
	512, 2926,
	513, 2926,
	514, 2926,
	515, 2926,
	516, 2926,
	517, 2926,
	518, 2926,
	519, 2926,
	520, 2926,
	522, 2926,
	523, 2926,
	524, 2926,
	525, 2926,
	526, 2926,
	528, 2926,
	529, 2926,
	530, 2926,
	531, 2926,
	532, 2926,
	533, 2926,
	535, 2926,
	536, 2926,
	538, 2926,
	539, 2926,
	540, 2926,
	541, 2926,
	542, 2926,
	544, 2926,
	546, 2926,
	547, 2926,
	548, 2926,
	549, 2926,
	550, 2926,
	551, 2926,
	552, 2926,
	554, 2926,
	555, 2926,
	556, 2926,
	557, 2926,
	559, 2926,
	560, 2926,
	563, 2926,
	564, 2926,
	565, 2926,
	566, 2926,
	567, 2926,
	568, 2926,
	569, 2926,
	570, 2926,
	572, 2926,
	575, 2926,
	576, 2926,
	577, 2926,
	578, 2926,
	579, 2926,
	580, 2926,
	582, 2926,
	583, 2926,
	584, 2926,
	585, 2926,
	586, 2926,
	587, 2926,
	588, 2926,
	589, 2926,
	594, 2926,
	595, 2926,
	596, 2926,
	597, 2926,
	598, 2926,
	599, 2926,
	600, 2926,
	602, 2926,
	611, 2926,
	612, 2926,
	613, 2926,
	614, 2926,
	615, 2926,
	616, 2926,
	618, 2926,
	619, 2926,
	620, 2926,
	621, 2926,
	622, 2926,
	623, 2926,
	624, 2926,
	625, 2926,
	626, 2926,
	629, 2926,
	632, 2926,
	633, 2926,
	635, 2926,
	636, 2926,
	-2, 0,
	-1, 1755,
	196, 2800,
	543, 2800,
	613, 2800,
	633, 2800,
	-2, 0,
	-1, 1809,
	413, 1001,
	482, 1001,
	526, 1001,
	548, 1001,
	-2, 0,
	-1, 1820,
	1, 1531,
	630, 1531,
	632, 1531,
	634, 1531,
	-2, 0,
	-1, 1837,
	1, 996,
	630, 996,
	632, 996,
	634, 996,
	-2, 0,
	-1, 1838,
	1, 1040,
	630, 1040,
	632, 1040,
	634, 1040,
	-2, 0,
	-1, 1839,
	1, 1048,
	630, 1048,
	632, 1048,
	634, 1048,
	-2, 0,
	-1, 1842,
	1, 1005,
	630, 1005,
	632, 1005,
	634, 1005,
	-2, 0,
	-1, 1844,
	1, 1011,
	630, 1011,
	632, 1011,
	634, 1011,
	-2, 0,
	-1, 1847,
	1, 1007,
	630, 1007,
	632, 1007,
	634, 1007,
	-2, 0,
	-1, 1852,
	1, 1021,
	630, 1021,
	632, 1021,
	634, 1021,
	-2, 0,
	-1, 1886,
	1, 2782,
	630, 2782,
	632, 2782,
	633, 2782,
	634, 2782,
	-2, 0,
	-1, 1890,
	1, 1099,
	630, 1099,
	632, 1099,
	634, 1099,
	-2, 0,
	-1, 1907,
	1, 1581,
	634, 1581,
	-2, 1586,
	-1, 1910,
	176, 1740,
	189, 1740,
	285, 1740,
	359, 1740,
	-2, 1678,
	-1, 2010,
	156, 1699,
	176, 1699,
	189, 1699,
	252, 1699,
	285, 1699,
	359, 1699,
	370, 1699,
	561, 1699,
	-2, 2150,
	-1, 2071,
	632, 2325,
	-2, 0,
	-1, 2107,
	156, 1699,
	176, 1699,
	189, 1699,
	252, 1699,
	285, 1699,
	359, 1699,
	370, 1699,
	561, 1699,
	-2, 1832,
	-1, 2147,
	543, 2797,
	633, 2797,
	636, 2797,
	-2, 0,
	-1, 2164,
	631, 1973,
	-2, 1961,
	-1, 2196,
	196, 2797,
	633, 2797,
	636, 2797,
	-2, 0,
	-1, 2239,
	1, 761,
	634, 761,
	-2, 1586,
	-1, 2414,
	233, 282,
	-2, 2473,
	-1, 2415,
	233, 283,
	-2, 338,
	-1, 2526,
	1, 998,
	630, 998,
	632, 998,
	634, 998,
	-2, 0,
	-1, 2527,
	1, 1042,
	630, 1042,
	632, 1042,
	634, 1042,
	-2, 0,
	-1, 2528,
	1, 1050,
	630, 1050,
	632, 1050,
	634, 1050,
	-2, 0,
	-1, 2529,
	1, 1101,
	630, 1101,
	632, 1101,
	634, 1101,
	-2, 0,
	-1, 2570,
	1, 1023,
	630, 1023,
	632, 1023,
	634, 1023,
	-2, 0,
	-1, 2592,
	1, 1084,
	630, 1084,
	632, 1084,
	634, 1084,
	-2, 0,
	-1, 2639,
	460, 1767,
	461, 1767,
	-2, 2006,
	-1, 2670,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2026,
	-1, 2671,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2027,
	-1, 2672,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2028,
	-1, 2673,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2029,
	-1, 2674,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2030,
	-1, 2675,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2031,
	-1, 2676,
	99, 0,
	266, 0,
	267, 0,
	615, 0,
	616, 0,
	-2, 2032,
	-1, 2677,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2033,
	-1, 2689,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2045,
	-1, 2690,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2046,
	-1, 2691,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2047,
	-1, 2695,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2054,
	-1, 2701,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2058,
	-1, 2703,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2066,
	-1, 2704,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2067,
	-1, 2705,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2068,
	-1, 2706,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2069,
	-1, 2880,
	5, 2477,
	196, 2336,
	631, 2474,
	-2, 2465,
	-1, 2881,
	196, 2337,
	-2, 2877,
	-1, 2882,
	196, 2338,
	-2, 2675,
	-1, 2883,
	196, 2339,
	-2, 2551,
	-1, 2884,
	196, 2340,
	-2, 2613,
	-1, 2885,
	196, 2341,
	-2, 2660,
	-1, 2886,
	196, 2342,
	-2, 2795,
	-1, 2887,
	196, 2343,
	-2, 2133,
	-1, 2959,
	1, 1833,
	2, 1833,
	110, 1833,
	156, 1833,
	176, 1833,
	189, 1833,
	197, 1833,
	215, 1833,
	218, 1833,
	247, 1833,
	252, 1833,
	263, 1833,
	281, 1833,
	285, 1833,
	325, 1833,
	359, 1833,
	364, 1833,
	370, 1833,
	450, 1833,
	454, 1833,
	561, 1833,
	573, 1833,
	591, 1833,
	592, 1833,
	593, 1833,
	603, 1833,
	630, 1833,
	632, 1833,
	634, 1833,
	636, 1833,
	-2, 1832,
	-1, 2972,
	631, 2446,
	-2, 2460,
	-1, 2974,
	1, 355,
	591, 355,
	-2, 1726,
	-1, 3004,
	631, 1972,
	-2, 1962,
	-1, 3219,
	1, 1434,
	445, 1389,
	484, 1389,
	606, 1389,
	630, 1434,
	632, 1434,
	634, 1434,
	-2, 1726,
	-1, 3400,
	365, 1770,
	-2, 2916,
	-1, 3401,
	365, 1771,
	-2, 2779,
	-1, 3405,
	460, 2402,
	461, 2402,
	-2, 2131,
	-1, 3406,
	460, 2406,
	461, 2406,
	-2, 2132,
	-1, 3407,
	460, 2403,
	461, 2403,
	-2, 2131,
	-1, 3408,
	460, 2407,
	461, 2407,
	-2, 2132,
	-1, 3421,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2056,
	-1, 3422,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2060,
	-1, 3428,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2062,
	-1, 3655,
	1, 756,
	630, 756,
	632, 756,
	634, 756,
	-2, 1586,
	-1, 3854,
	45, 2437,
	-2, 1172,
	-1, 3859,
	1, 1434,
	630, 1434,
	632, 1434,
	634, 1434,
	-2, 1726,
	-1, 3968,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2064,
	-1, 3975,
	257, 0,
	259, 0,
	348, 0,
	-2, 2083,
	-1, 4043,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2112,
	-1, 4044,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2113,
	-1, 4045,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2114,
	-1, 4049,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2118,
	-1, 4050,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2119,
	-1, 4051,
	14, 0,
	15, 0,
	16, 0,
	611, 0,
	612, 0,
	613, 0,
	-2, 2120,
	-1, 4099,
	631, 2447,
	-2, 2461,
	-1, 4316,
	633, 3033,
	-2, 1652,
	-1, 4375,
	257, 0,
	259, 0,
	348, 0,
	-2, 2084,
	-1, 4378,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2087,
	-1, 4379,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2089,
	-1, 4502,
	633, 2462,
	-2, 1469,
	-1, 4665,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2088,
	-1, 4666,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2090,
	-1, 4677,
	257, 0,
	-2, 2123,
	-1, 4871,
	257, 0,
	-2, 2124,
	-1, 5092,
	53, 0,
	230, 0,
	284, 0,
	490, 0,
	600, 0,
	614, 0,
	-2, 2880,
}

const sqlPrivate = 57344

const sqlLast = 147365

var sqlAct = [...]int{
	292, 5210, 5027, 5283, 1428, 3559, 4912, 5138, 3293, 3143,
	5154, 4920, 5026, 4738, 5091, 5078, 5104, 3173, 5224, 4983,
	3075, 3839, 3840, 5038, 4964, 5105, 5060, 5106, 5017, 4358,
	4116, 5041, 5163, 4817, 4498, 1425, 1484, 4840, 2299, 2411,
	4804, 3851, 1653, 4788, 4008, 5102, 1352, 4875, 4619, 4624,
	4613, 4580, 3263, 5090, 4553, 4743, 4686, 2649, 3681, 3960,
	4654, 1420, 4308, 3684, 3876, 1623, 4604, 4300, 4823, 2501,
	4949, 4499, 1171, 4606, 756, 4479, 2912, 4223, 3076, 3744,
	895, 3315, 1224, 1418, 2718, 3870, 3414, 4629, 2221, 2489,
	1919, 4273, 3824, 2208, 3158, 1162, 2462, 2151, 4254, 2657,
	2499, 4256, 2308, 828, 3813, 4682, 3687, 2113, 895, 3904,
	3282, 3906, 1503, 3828, 3671, 3251, 3277, 3669, 3806, 3829,
	3831, 2152, 3670, 1773, 3279, 3805, 2986, 4102, 3582, 3605,
	3310, 767, 4357, 2650, 3574, 970, 4, 3565, 1596, 2497,
	4414, 2082, 3542, 3294, 1771, 2398, 3563, 2400, 3226, 2336,
	2387, 5139, 974, 4069, 3174, 3708, 3541, 2952, 2320, 892,
	4876, 2796, 286, 2057, 3612, 285, 2018, 1341, 2731, 2654,
	3398, 1988, 1423, 116, 965, 3255, 2399, 1711, 2449, 2954,
	1228, 824, 1817, 3309, 3188, 890, 1332, 2385, 2358, 1170,
	191, 2365, 1411, 2377, 1221, 3264, 1467, 2287, 2219, 2291,
	1397, 1907, 2083, 2787, 1271, 1226, 2715, 2932, 1486, 2638,
	2621, 2987, 2951, 2619, 1748, 801, 3287, 2131, 896, 1714,
	897, 2380, 1625, 2448, 3100, 3101, 4984, 3061, 2909, 1454,
	3832, 743, 1045, 1335, 2790, 765, 2102, 2941, 2092, 1314,
	2798, 2922, 901, 1189, 2052, 904, 1482, 844, 2099, 3015,
	2876, 2002, 1920, 2768, 201, 1349, 202, 1921, 1408, 2842,
	2408, 2620, 1852, 820, 809, 2622, 1837, 991, 2475, 1739,
	901, 1746, 1647, 904, 120, 1604, 1331, 2643, 2389, 106,
	5155, 5211, 1479, 1202, 760, 46, 1337, 45, 1223, 191,
	43, 784, 34, 32, 885, 30, 1312, 946, 1066, 3451,
	1906, 1217, 1659, 3445, 757, 1926, 769, 5100, 4083, 947,
	4084, 2210, 5294, 3561, 4711, 2210, 2931, 837, 840, 4117,
	4708, 1463, 78, 2210, 2210, 1783, 1166, 2210, 1934, 1935,
	2210, 1967, 1968, 1969, 1978, 1979, 1980, 1344, 5286, 5274,
	79, 5273, 3786, 2931, 5243, 2931, 5241, 3886, 4742, 5184,
	4742, 1971, 1965, 2420, 2498, 5140, 1200, 84, 3885, 5141,
	1937, 5130, 2231, 5128, 5125, 2931, 4705, 2931, 5126, 5122,
	1984, 5088, 3640, 5123, 5087, 2420, 1652, 1167, 2420, 5086,
	1764, 1843, 5076, 3320, 5074, 5069, 4742, 1990, 4742, 4826,
	5064, 5063, 1329, 5036, 4742, 4742, 1936, 4742, 93, 5003,
	4996, 4450, 3637, 2995, 2931, 1934, 1935, 1956, 4995, 4988,
	4963, 4960, 2931, 2420, 2420, 4742, 1953, 3512, 3513, 4942,
	4873, 4854, 3622, 4570, 2995, 4334, 1315, 1315, 1166, 1965,
	4819, 4761, 1155, 3257, 4150, 2420, 4760, 1937, 4749, 972,
	2420, 4748, 2420, 4741, 2231, 4742, 1146, 4742, 1145, 4693,
	2490, 4667, 51, 2420, 115, 2995, 3017, 1463, 4640, 2228,
	99, 112, 3320, 4637, 1990, 4548, 4526, 3786, 4377, 2931,
	2931, 4324, 2995, 1936, 4318, 3899, 4270, 4181, 3899, 4149,
	4271, 4182, 4094, 4150, 4092, 4076, 4095, 3992, 4093, 2931,
	4073, 2420, 3460, 3256, 1959, 1960, 1961, 1962, 3461, 3988,
	3786, 3898, 1161, 2931, 1942, 3899, 3558, 3553, 2991, 3552,
	2931, 2931, 1661, 2931, 3503, 2228, 3501, 3493, 3504, 3491,
	3502, 3494, 3462, 2931, 100, 3319, 2931, 3304, 3303, 3320,
	3040, 2485, 2485, 2994, 2931, 2984, 99, 2995, 2976, 2931,
	1367, 2930, 2420, 1343, 1316, 2931, 2420, 1975, 2924, 2231,
	1985, 2231, 1375, 2231, 3413, 2484, 1347, 1964, 1966, 2485,
	1318, 2931, 1319, 5004, 2793, 4877, 4868, 1661, 1661, 4856,
	4826, 3320, 4073, 2923, 1981, 4617, 1982, 4570, 2228, 4527,
	4334, 1942, 4272, 1951, 1952, 3150, 2313, 3060, 2245, 2209,
	2225, 3256, 2931, 3518, 1368, 966, 252, 2419, 3168, 3051,
	2078, 1973, 1646, 4199, 3963, 3935, 2100, 2370, 3887, 1819,
	2968, 1345, 2967, 1673, 2966, 1219, 1957, 2965, 2964, 1320,
	1317, 3512, 3513, 78, 1154, 969, 968, 1660, 3888, 252,
	1153, 1652, 1152, 1368, 1964, 1966, 1151, 1150, 1149, 1148,
	1144, 79, 1143, 1142, 1141, 1140, 284, 254, 1139, 3369,
	3068, 1138, 1137, 3290, 1136, 1135, 1134, 1133, 84, 1132,
	1131, 2794, 1130, 1129, 1128, 1983, 1127, 1126, 2562, 1125,
	1107, 1043, 1787, 1042, 1041, 1040, 1667, 1039, 104, 1038,
	254, 1037, 1036, 1035, 1034, 1033, 1972, 1032, 1031, 1030,
	1029, 2211, 4432, 1957, 3450, 2211, 1028, 1987, 253, 93,
	3527, 1027, 1026, 2211, 2211, 3528, 1025, 2211, 1024, 1023,
	2211, 1022, 1021, 246, 1020, 1019, 1018, 1017, 1016, 1015,
	1014, 1013, 247, 1012, 1011, 1010, 1009, 1008, 1007, 996,
	995, 253, 994, 989, 3512, 3513, 988, 199, 107, 981,
	972, 111, 980, 2795, 979, 2792, 964, 2228, 963, 920,
	919, 203, 4389, 51, 2228, 115, 1963, 918, 2825, 917,
	2228, 99, 112, 1768, 908, 907, 906, 905, 252, 867,
	866, 835, 834, 833, 1987, 815, 973, 280, 279, 1958,
	278, 159, 277, 276, 203, 4126, 1987, 3885, 275, 274,
	273, 272, 271, 270, 269, 268, 267, 3518, 266, 252,
	265, 264, 1430, 1226, 263, 262, 261, 1976, 1436, 260,
	5115, 259, 1368, 4088, 1661, 3256, 258, 257, 256, 254,
	255, 3900, 3608, 4631, 3556, 100, 3473, 3456, 3447, 4187,
	1226, 1226, 1226, 3349, 3236, 3272, 2060, 1672, 2060, 4880,
	2999, 1989, 2228, 2059, 252, 2059, 164, 2973, 3512, 3513,
	254, 3530, 3531, 3532, 252, 252, 1958, 159, 2958, 2611,
	2272, 3068, 204, 2230, 2823, 2809, 2126, 2103, 3529, 3557,
	253, 1506, 2063, 2029, 2058, 1226, 3512, 3513, 2807, 2020,
	2231, 1226, 1628, 1226, 3027, 246, 1430, 1901, 1655, 4733,
	1637, 1475, 2209, 2228, 247, 254, 2225, 1933, 200, 2614,
	1666, 253, 1471, 1472, 1473, 254, 254, 1351, 5114, 3528,
	3518, 1226, 2797, 1226, 5111, 1226, 246, 1974, 1989, 5089,
	5073, 4968, 1628, 203, 1458, 247, 4865, 3527, 1948, 1949,
	1955, 1977, 1954, 1950, 4681, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 4638, 4616, 253, 4859, 1430, 4399,
	4456, 4412, 1716, 4398, 203, 1169, 253, 253, 4411, 4857,
	1614, 246, 4405, 4404, 1609, 4403, 4396, 4395, 1628, 1845,
	247, 246, 246, 1934, 1935, 1628, 4393, 4388, 4385, 104,
	247, 247, 4384, 4283, 1226, 2022, 1226, 4269, 2923, 3065,
	1987, 1628, 1368, 3512, 3513, 4130, 1402, 1405, 252, 203,
	1226, 4129, 1226, 4128, 1450, 1937, 4098, 1650, 4064, 203,
	203, 1415, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943,
	1944, 4063, 3528, 4062, 3518, 1452, 3522, 3514, 3515, 3516,
	3517, 3519, 3520, 1720, 1723, 2791, 3984, 3979, 199, 107,
	3066, 1936, 111, 4633, 3603, 3549, 3540, 3511, 2021, 254,
	2019, 1628, 3518, 3508, 3507, 3505, 1499, 1635, 1593, 1598,
	3500, 901, 3512, 3513, 904, 3499, 1601, 3498, 3008, 252,
	3535, 1226, 3529, 3495, 1226, 3492, 3472, 973, 3455, 3448,
	3446, 3305, 159, 1444, 2959, 2780, 1933, 252, 2027, 2020,
	2427, 2465, 2425, 1478, 3534, 1932, 1489, 1490, 3274, 1328,
	253, 252, 5289, 1987, 5232, 5231, 5153, 5151, 1353, 3512,
	3513, 4010, 3530, 3531, 3532, 246, 5028, 1649, 1709, 1648,
	254, 4284, 4947, 3629, 247, 4932, 1631, 4197, 4928, 4927,
	1481, 4926, 4373, 4906, 1491, 1492, 3528, 4905, 254, 4903,
	4879, 1167, 252, 1751, 1753, 1726, 252, 164, 4878, 1942,
	252, 4852, 254, 3289, 3554, 2721, 1788, 4838, 191, 191,
	4835, 4834, 4827, 204, 3528, 4815, 4814, 4757, 4728, 3518,
	4679, 253, 4662, 4661, 4600, 4596, 4593, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 3529, 246, 4571, 3527, 253,
	1749, 4431, 4410, 254, 4335, 247, 4185, 254, 4184, 200,
	3065, 254, 4165, 253, 246, 4164, 4162, 3065, 4079, 4067,
	1226, 3974, 1458, 247, 2007, 1458, 1226, 1987, 246, 3901,
	3895, 3862, 3766, 3719, 967, 1934, 1935, 247, 3523, 3521,
	3522, 3514, 3515, 3516, 3517, 3519, 3520, 252, 3518, 1742,
	3686, 1911, 203, 3631, 253, 1987, 3512, 3513, 253, 3530,
	3531, 3532, 253, 4284, 41, 3600, 203, 1937, 1861, 246,
	2727, 3477, 3476, 246, 3471, 3437, 3250, 246, 247, 4372,
	3093, 2066, 247, 2065, 2064, 2061, 247, 2053, 2051, 1793,
	3006, 3005, 252, 2970, 2963, 3518, 2929, 1763, 254, 2805,
	2006, 2125, 2081, 1936, 2075, 1905, 2074, 203, 2073, 3529,
	2072, 203, 2071, 1782, 2070, 203, 2069, 2068, 2067, 2048,
	4632, 2047, 2046, 3273, 2045, 2009, 2044, 2043, 2042, 2041,
	2040, 2039, 1226, 1226, 1226, 3527, 2038, 3529, 1226, 2037,
	2036, 2035, 2034, 254, 2033, 1349, 2022, 1349, 2008, 253,
	2005, 3523, 3521, 3522, 3514, 3515, 3516, 3517, 3519, 3520,
	3528, 1810, 1506, 2000, 246, 3534, 1443, 1372, 1363, 4882,
	4881, 4603, 2080, 247, 1226, 4452, 4381, 895, 1430, 1740,
	4125, 1846, 4091, 2169, 895, 4082, 1430, 2949, 1430, 3459,
	2961, 4706, 4454, 1167, 253, 3891, 1934, 1935, 2824, 1912,
	1745, 2997, 203, 4124, 2021, 3627, 2129, 3528, 2003, 246,
	2121, 1942, 1470, 2148, 2089, 1468, 3512, 3513, 247, 3144,
	4529, 2198, 5223, 2200, 1485, 1908, 4936, 1344, 1937, 1344,
	1485, 4929, 3518, 2137, 1916, 1146, 4828, 1145, 1915, 252,
	4636, 1987, 3722, 4574, 4573, 4572, 4528, 203, 1430, 2062,
	2142, 4434, 4342, 4341, 1226, 1910, 1419, 2136, 3524, 3525,
	3526, 3512, 3513, 4340, 1936, 3523, 3521, 3522, 3514, 3515,
	3516, 3517, 3519, 3520, 2086, 2087, 1485, 4339, 1226, 4338,
	1929, 1930, 1469, 2233, 2110, 3119, 1506, 1485, 1987, 4337,
	254, 4336, 4151, 4086, 3521, 3522, 3514, 3515, 3516, 3517,
	3519, 3520, 3534, 1315, 2822, 2808, 2215, 4085, 1483, 2217,
	4824, 3903, 2302, 2263, 3902, 2222, 3790, 3788, 2806, 2224,
	1167, 2054, 2055, 3529, 2227, 3787, 5107, 5180, 4732, 1599,
	2237, 5178, 1613, 1419, 2348, 1464, 2143, 1463, 191, 901,
	5103, 253, 904, 2192, 3528, 3961, 901, 2257, 2256, 904,
	2270, 1485, 2265, 2060, 4287, 2236, 246, 2130, 1458, 4860,
	2059, 2103, 2134, 2163, 1463, 247, 1903, 3756, 4214, 1463,
	3529, 4858, 2043, 3186, 2043, 1809, 3497, 3496, 3419, 3104,
	2108, 1466, 4180, 1123, 2111, 2251, 3842, 2166, 3841, 3688,
	4277, 2101, 2793, 4898, 203, 1940, 1941, 1943, 1944, 4145,
	4899, 4146, 2031, 2490, 1987, 4818, 1419, 1419, 5136, 4614,
	1862, 3316, 2213, 4899, 3814, 3516, 3517, 3519, 3520, 1818,
	2079, 4560, 2367, 1819, 2402, 1987, 4292, 4266, 3465, 3561,
	4220, 2105, 1124, 1343, 2120, 1343, 2119, 3518, 4211, 2118,
	4190, 2116, 2115, 3929, 2114, 2401, 1347, 3338, 1347, 3653,
	3336, 2583, 3334, 2495, 4012, 1628, 1628, 2518, 2433, 2239,
	1460, 4683, 2788, 2149, 1744, 4752, 1506, 4724, 4513, 2135,
	3004, 5112, 5127, 2076, 2260, 2056, 4510, 3822, 2459, 1719,
	1642, 1439, 3514, 3515, 3516, 3517, 3519, 3520, 1401, 2794,
	5124, 3165, 4541, 2466, 4539, 2347, 3881, 4156, 3162, 3160,
	1797, 1345, 3348, 1345, 4921, 4620, 5035, 3529, 2235, 3691,
	4175, 3286, 3228, 1776, 2344, 3102, 2352, 959, 3797, 3524,
	3525, 3526, 2362, 5182, 2028, 3146, 3523, 3521, 3522, 3514,
	3515, 3516, 3517, 3519, 3520, 2354, 5181, 2277, 1327, 2278,
	4755, 4751, 1745, 5113, 4730, 3955, 1465, 3657, 2592, 2285,
	2286, 2589, 2381, 4233, 2266, 3628, 4783, 4515, 1686, 2313,
	2258, 1694, 1470, 1628, 3041, 1628, 1121, 1628, 5285, 1859,
	4937, 2795, 3064, 2792, 2576, 2279, 2280, 1119, 2412, 2417,
	2357, 1117, 2283, 2284, 4776, 1628, 1628, 2307, 3062, 1103,
	2357, 1841, 1841, 4763, 3064, 1115, 2262, 4563, 4562, 1628,
	2357, 4231, 2319, 2574, 1860, 4230, 4222, 2590, 1461, 5215,
	3062, 1628, 3659, 1628, 1628, 1628, 1112, 2252, 1462, 901,
	4205, 4204, 904, 5160, 1644, 4232, 4202, 2404, 2405, 960,
	1987, 2311, 1469, 4201, 2261, 4189, 2591, 895, 2341, 2406,
	2355, 2629, 4148, 1470, 4147, 1938, 1939, 1940, 1941, 1943,
	1944, 3803, 3802, 1695, 3758, 2838, 3524, 3525, 3526, 1226,
	2527, 1838, 2455, 3523, 3521, 3522, 3514, 3515, 3516, 3517,
	3519, 3520, 2460, 3721, 2382, 1649, 1858, 1648, 3621, 3470,
	4793, 3469, 3468, 3467, 2472, 3423, 3184, 1795, 807, 2353,
	3183, 4509, 2340, 2337, 3167, 2361, 3156, 1226, 807, 3148,
	4753, 2517, 4725, 2627, 1840, 1840, 2077, 3138, 3137, 4511,
	3129, 3128, 3127, 1469, 3109, 3108, 2391, 3069, 2985, 2391,
	2522, 2390, 2493, 2394, 2390, 2702, 2528, 1839, 2439, 2418,
	2503, 2480, 1909, 1226, 2837, 1226, 1167, 2659, 1167, 1732,
	2797, 1731, 1226, 3688, 3283, 2169, 2169, 1506, 3754, 1226,
	1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 1749, 1226, 1749, 1226, 1226,
	1226, 1226, 2998, 2469, 2510, 2441, 2547, 2240, 2157, 901,
	2440, 2482, 904, 1463, 3930, 2402, 1744, 2490, 2613, 3123,
	2490, 1944, 2490, 2474, 1226, 1613, 2478, 2490, 1226, 1226,
	1742, 2631, 2477, 2509, 2477, 2356, 1226, 2618, 5216, 1444,
	1226, 3520, 1226, 1226, 2486, 2356, 2487, 1487, 1488, 1453,
	1506, 4530, 5161, 1487, 1488, 2356, 1226, 1226, 1226, 1226,
	4461, 2604, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	1730, 2628, 1729, 2791, 5218, 1613, 2655, 2656, 1435, 4660,
	2788, 3514, 3515, 3516, 3517, 3519, 3520, 1165, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 1226, 1226, 2526, 1226, 1487,
	1488, 2537, 1226, 3434, 2769, 2770, 755, 1811, 2313, 3106,
	1487, 1488, 2534, 2312, 1349, 864, 3012, 2989, 2769, 2785,
	2713, 1506, 4471, 1645, 2601, 2609, 1109, 1790, 3377, 3755,
	1349, 1690, 1387, 750, 3432, 2163, 2163, 2570, 806, 2514,
	1464, 1899, 2309, 4512, 1703, 2833, 1226, 1506, 806, 2626,
	4794, 2711, 2629, 2642, 3048, 2350, 962, 961, 2717, 2166,
	2166, 1857, 5181, 4792, 2879, 2879, 2893, 3132, 2769, 4790,
	2717, 2913, 2915, 1902, 2267, 2268, 5219, 2305, 2921, 2603,
	2311, 3130, 1464, 1164, 3136, 1872, 1658, 3323, 1665, 4470,
	1671, 2975, 2630, 2617, 2615, 2623, 1344, 2616, 2733, 1167,
	3164, 1146, 1708, 2646, 1146, 1146, 2647, 2648, 2784, 1167,
	2310, 1819, 1344, 1167, 2627, 2946, 3364, 3092, 2581, 4789,
	1819, 2383, 2971, 1878, 1807, 2395, 4507, 2988, 2568, 2725,
	2535, 3656, 3396, 862, 3163, 3411, 2723, 1442, 5247, 2531,
	2306, 3161, 3159, 5217, 4186, 4914, 3380, 1914, 4791, 1791,
	2392, 2938, 1430, 1430, 808, 2525, 3035, 3133, 3942, 1762,
	3091, 1767, 2479, 1715, 808, 1460, 3063, 2110, 1504, 3941,
	957, 3131, 956, 2729, 2371, 1781, 3011, 1786, 1315, 2378,
	3366, 1796, 3429, 2797, 1005, 4889, 3078, 5109, 3036, 2393,
	4494, 5221, 3014, 1506, 3998, 2782, 1876, 4172, 2121, 2707,
	4561, 1166, 2625, 1167, 4203, 2384, 2992, 1460, 3044, 4246,
	4200, 3033, 3662, 3430, 2835, 4133, 4120, 3435, 1713, 2836,
	2937, 1113, 2839, 2708, 2840, 2841, 4487, 3022, 2575, 3030,
	2709, 3046, 1113, 3026, 2714, 4001, 1113, 3738, 2919, 2888,
	3010, 2917, 2169, 1844, 2960, 2904, 2875, 3037, 2927, 2928,
	1114, 1465, 3038, 2939, 2943, 2944, 2945, 2573, 2950, 4494,
	191, 2956, 2957, 2108, 4659, 1458, 3730, 2062, 4159, 3047,
	4247, 1113, 2628, 3809, 4916, 3410, 3999, 3223, 2699, 2333,
	2458, 3801, 4488, 2321, 3752, 3166, 3126, 3379, 3107, 1854,
	3045, 1506, 3055, 1465, 3105, 4487, 2372, 2368, 3739, 4480,
	2424, 2423, 1343, 5193, 3081, 2610, 5227, 1628, 2325, 2600,
	3403, 3404, 5202, 1461, 4245, 1347, 3000, 4478, 1343, 4170,
	3376, 3032, 3007, 1462, 1430, 5201, 4482, 3731, 3219, 2983,
	5249, 1347, 3070, 3021, 5000, 5168, 3029, 3024, 3224, 3025,
	2334, 4505, 3737, 2054, 2055, 1226, 1226, 3177, 1226, 4363,
	2626, 4488, 2312, 3039, 2364, 1461, 2316, 4362, 3031, 4508,
	3878, 3067, 863, 3112, 2602, 1462, 2322, 3936, 3810, 3016,
	1345, 3729, 5110, 895, 3373, 1430, 3879, 2210, 3157, 3262,
	3142, 2363, 3222, 1692, 2332, 1157, 1345, 1095, 3807, 5080,
	3124, 5081, 1163, 4259, 3042, 4481, 751, 5012, 3111, 5220,
	2368, 4716, 3751, 4257, 2797, 2397, 1628, 3750, 1175, 3747,
	3254, 3096, 1159, 3431, 865, 2533, 2359, 2317, 861, 1628,
	3297, 1628, 2163, 3433, 3145, 3110, 4922, 1628, 3306, 3270,
	2710, 3378, 3054, 3311, 4944, 1689, 1386, 1715, 3125, 1628,
	2712, 3083, 3086, 3073, 3135, 2797, 2166, 3056, 3057, 2310,
	2588, 3058, 3059, 3675, 1873, 2697, 3178, 3769, 2700, 3314,
	1158, 2315, 3878, 1430, 3313, 1430, 2396, 3658, 1870, 3185,
	2157, 2157, 3231, 805, 3220, 3221, 3266, 3233, 1820, 2360,
	2326, 5108, 752, 3703, 4443, 997, 1643, 1226, 1370, 3134,
	4261, 4444, 3117, 3118, 3120, 3121, 3122, 4483, 3350, 3147,
	3351, 3140, 901, 2351, 4484, 904, 3154, 1096, 1463, 2696,
	4506, 5167, 998, 2117, 3794, 4489, 4590, 3080, 3326, 3327,
	3709, 3170, 4260, 3064, 1357, 3171, 3172, 3352, 2375, 3333,
	3335, 3337, 3260, 4998, 753, 901, 754, 3425, 904, 3084,
	1359, 2895, 3317, 3702, 3346, 3229, 2049, 2327, 2328, 2716,
	1463, 1110, 1792, 4442, 3625, 1226, 4915, 4486, 1649, 2349,
	3234, 1226, 1226, 3321, 3308, 3318, 4483, 1354, 2392, 5225,
	3328, 3324, 3329, 4484, 2323, 5146, 4490, 3711, 4999, 3301,
	3248, 3299, 4656, 2569, 4489, 5147, 1006, 2368, 4359, 2373,
	2292, 1871, 2292, 2303, 191, 2293, 4672, 2293, 2974, 5191,
	5046, 2724, 1874, 4542, 1999, 5245, 4259, 2393, 1806, 1808,
	3382, 774, 3384, 1360, 2942, 3292, 4257, 1226, 1226, 5250,
	3302, 1441, 2324, 1226, 2530, 2779, 4486, 1877, 1749, 3808,
	3475, 1913, 2091, 2374, 2955, 3343, 1226, 1226, 1166, 4014,
	2524, 1361, 1226, 1226, 5234, 4490, 3710, 3345, 1226, 2127,
	3281, 3354, 3300, 3356, 4602, 3358, 4171, 3360, 3361, 1101,
	1100, 4349, 3355, 4703, 3357, 4566, 3359, 4121, 2095, 982,
	1376, 4607, 3676, 3079, 3229, 1374, 4364, 3957, 3353, 3394,
	3370, 4965, 5052, 4982, 4837, 1358, 5226, 1923, 4565, 4564,
	4306, 4608, 3866, 1226, 1226, 1226, 987, 3141, 1825, 1226,
	3639, 2982, 1875, 4261, 4258, 3426, 2447, 1097, 2088, 1226,
	1373, 1419, 2294, 4485, 2294, 2698, 1366, 3385, 2098, 2095,
	3387, 3391, 742, 5228, 4784, 5166, 1226, 4655, 4282, 3402,
	2298, 4053, 2298, 1924, 2940, 4260, 2580, 4360, 2645, 2314,
	1923, 1184, 3458, 4408, 999, 1000, 2253, 4591, 3393, 2329,
	3392, 3613, 2096, 1918, 4750, 4495, 4496, 2211, 5255, 4700,
	1419, 4846, 3682, 2642, 3397, 2250, 3412, 4896, 4958, 2098,
	3453, 3454, 4307, 2273, 4226, 3457, 4206, 4157, 2091, 4155,
	3867, 3858, 4485, 3678, 3181, 2093, 3449, 3271, 4966, 2635,
	3265, 3252, 1419, 1419, 2473, 2467, 1922, 2461, 2453, 2432,
	2431, 3997, 4831, 2096, 4141, 1683, 1378, 3113, 814, 2295,
	2300, 2295, 2300, 4068, 5018, 1167, 3958, 3068, 1226, 1226,
	1226, 1226, 2933, 4950, 4495, 4496, 3424, 1226, 1226, 1226,
	4985, 2330, 1226, 4255, 2338, 2582, 2246, 4951, 1098, 2343,
	4309, 3249, 2248, 5145, 1226, 1349, 1506, 2094, 3085, 1922,
	1226, 4625, 1226, 3568, 3569, 1389, 4081, 2157, 1923, 2936,
	4810, 1349, 4808, 4727, 1156, 2095, 1099, 3694, 3573, 4365,
	1924, 4952, 3690, 4657, 2515, 3689, 3417, 3395, 3572, 1506,
	1848, 1847, 2507, 2496, 2429, 1842, 3576, 4115, 1095, 2249,
	2981, 1349, 2980, 2979, 1506, 2296, 2978, 2296, 1599, 2977,
	2935, 4265, 1738, 2313, 1736, 2934, 1430, 1004, 3551, 3257,
	3464, 1164, 2345, 1159, 1355, 2098, 2169, 4258, 4605, 1724,
	1506, 3593, 1102, 1924, 4909, 2097, 3570, 1344, 983, 984,
	1430, 2093, 2276, 1725, 4054, 2636, 1613, 4581, 1430, 4954,
	4278, 3620, 3641, 1344, 3715, 4055, 2290, 3089, 2303, 2096,
	2303, 1001, 1002, 2421, 4163, 2471, 2339, 4409, 3817, 4366,
	1226, 4739, 1999, 853, 4953, 3635, 2388, 1922, 5188, 4714,
	1356, 4712, 1226, 1344, 3227, 3580, 2097, 3926, 4152, 4722,
	5254, 3638, 4955, 2302, 3623, 3322, 3232, 3607, 3114, 3115,
	1430, 3602, 3230, 2094, 3677, 4967, 2169, 2500, 3578, 4812,
	854, 2401, 3666, 3667, 1800, 3713, 3770, 2288, 1096, 4830,
	2301, 4142, 2301, 1226, 4735, 4734, 5024, 4465, 4464, 2302,
	5032, 5015, 2563, 4415, 3692, 4070, 2804, 3696, 4910, 1430,
	4723, 4447, 3654, 3727, 4704, 3643, 3647, 3626, 3645, 3646,
	3599, 1895, 3611, 3649, 3660, 3650, 3562, 3651, 1430, 3714,
	1430, 2289, 3741, 3592, 3743, 3546, 3547, 3548, 3606, 5054,
	1826, 5192, 1458, 3615, 3616, 3617, 3618, 3577, 3693, 1226,
	1226, 3698, 4740, 2367, 3700, 3757, 4811, 1506, 3579, 1897,
	2367, 2596, 5190, 3591, 1894, 1892, 5129, 1866, 1430, 3594,
	3595, 4940, 3780, 4930, 4710, 3575, 2163, 1864, 4796, 3614,
	1836, 3772, 1613, 3774, 1834, 1430, 3778, 813, 3916, 3792,
	3784, 5025, 3679, 1419, 1832, 3724, 3597, 3685, 3598, 1830,
	2166, 3914, 2097, 4911, 4678, 1828, 3728, 4458, 3706, 4407,
	1822, 3907, 3748, 1343, 4264, 985, 986, 1628, 3543, 2275,
	3973, 2297, 3927, 2297, 3644, 3924, 1347, 3648, 4153, 1343,
	1430, 1628, 3759, 1628, 1737, 3636, 1735, 1506, 1816, 1003,
	1101, 1100, 1347, 3655, 895, 1628, 3632, 3633, 1613, 3634,
	1613, 3767, 3506, 3436, 2386, 1814, 2163, 3253, 1628, 1343,
	3663, 3785, 1734, 3155, 3149, 3811, 3103, 3742, 2335, 3009,
	1430, 3827, 1347, 2605, 3859, 2506, 2491, 4463, 2349, 2128,
	2166, 1345, 2124, 1898, 3674, 1775, 3544, 1349, 1097, 2572,
	3953, 3874, 3952, 3872, 3712, 2351, 2539, 1345, 3918, 3944,
	1918, 3720, 3368, 3367, 3331, 2624, 1853, 3771, 2542, 1628,
	3311, 3733, 2410, 3857, 2658, 3909, 2452, 2430, 2199, 3311,
	3736, 1628, 2197, 1628, 4447, 3726, 4956, 1345, 2032, 2346,
	3908, 3753, 4957, 1789, 2348, 1628, 1707, 1628, 1311, 1628,
	2803, 5101, 3762, 3850, 3740, 3847, 3768, 3259, 2598, 4543,
	4213, 4547, 4212, 1896, 3812, 2597, 3815, 3883, 1893, 1891,
	3865, 1865, 3781, 4525, 5014, 3799, 3734, 3789, 3135, 1344,
	3735, 1863, 3793, 2342, 1835, 4623, 4552, 1506, 1833, 4538,
	1506, 4476, 4475, 4305, 3779, 4296, 4229, 3917, 1831, 4208,
	1111, 4178, 4176, 1829, 4154, 3894, 3800, 3861, 3868, 1827,
	3856, 3791, 3843, 3922, 1821, 3284, 901, 2800, 2350, 904,
	3276, 3798, 3804, 3584, 1226, 3269, 3945, 3261, 2135, 1098,
	1226, 1226, 3931, 3111, 1226, 1226, 1226, 3245, 1226, 3819,
	3244, 3225, 1815, 3875, 3854, 3848, 3853, 1226, 2169, 3855,
	3028, 3023, 2428, 2426, 2403, 2369, 1226, 1099, 2331, 1813,
	2318, 1226, 2304, 3871, 2232, 2229, 1733, 1506, 3920, 2226,
	2223, 2218, 2216, 1167, 3925, 2212, 1226, 3923, 2203, 3951,
	5164, 3882, 4618, 3880, 1506, 3994, 2571, 3873, 3892, 3893,
	5159, 5085, 3889, 2538, 2169, 2169, 1226, 1226, 4607, 1226,
	1226, 1226, 3950, 191, 191, 2347, 2141, 3415, 1927, 2409,
	5182, 2254, 4908, 1102, 2972, 3388, 3386, 1226, 4608, 3218,
	1324, 1226, 3585, 2169, 2169, 1226, 1226, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 3976, 1226, 1325, 3938, 4026,
	3939, 4027, 3940, 5066, 1226, 1226, 2169, 3959, 3986, 3987,
	2608, 1226, 4976, 3915, 3910, 3911, 3912, 3913, 1116, 1118,
	1120, 4639, 1226, 4559, 3583, 3590, 2416, 4462, 3956, 3312,
	3948, 3661, 2271, 1349, 1349, 1343, 3782, 1226, 1688, 3954,
	4848, 2378, 3090, 1794, 3064, 1095, 4841, 3064, 1347, 2242,
	2243, 4317, 2313, 3919, 1889, 1890, 3416, 2529, 2606, 2566,
	3062, 1410, 3589, 3087, 2561, 2655, 4017, 2470, 1409, 1506,
	1159, 2157, 1928, 5065, 3981, 2536, 4100, 4516, 2163, 3983,
	4554, 3182, 1430, 1430, 1934, 1935, 1158, 4065, 3993, 1812,
	4000, 4002, 4003, 842, 2655, 4032, 4009, 1430, 1430, 4087,
	895, 1430, 2166, 1345, 1477, 2607, 3094, 4867, 5176, 4737,
	3052, 1326, 1480, 4016, 4416, 1344, 1344, 4118, 4119, 4024,
	1226, 4394, 3707, 4025, 2163, 2163, 4029, 4061, 1934, 1935,
	3095, 3116, 4131, 4132, 1613, 1613, 4138, 1931, 3237, 1437,
	3095, 3240, 4031, 3242, 4057, 1377, 5137, 1226, 2166, 2166,
	4066, 2157, 1936, 2163, 2163, 4225, 1410, 1410, 3783, 4058,
	1937, 3243, 281, 4072, 1633, 1096, 859, 4293, 2454, 1448,
	4077, 4078, 4004, 3586, 3587, 3588, 2241, 2166, 2166, 4224,
	1226, 1226, 4074, 4075, 845, 845, 2163, 3162, 3160, 3169,
	3288, 3153, 3099, 3288, 3151, 4023, 1936, 3097, 4139, 1869,
	5023, 5222, 4140, 5005, 191, 3152, 3098, 4975, 4969, 4907,
	2166, 739, 4832, 1613, 4803, 4089, 4715, 4303, 4295, 1226,
	1226, 4281, 4097, 4158, 3860, 3291, 2920, 1226, 2238, 2150,
	4736, 5056, 2292, 3139, 1641, 2458, 5057, 2293, 1640, 1634,
	1160, 3624, 2388, 5253, 3512, 3513, 1934, 1935, 1628, 1628,
	4177, 1628, 4179, 2282, 3050, 1628, 4191, 5195, 1628, 4134,
	2281, 3049, 901, 1430, 5056, 904, 909, 4243, 1799, 5057,
	4971, 4090, 3390, 1651, 1798, 1652, 3362, 1652, 4386, 2799,
	4123, 3371, 2834, 2282, 2281, 4195, 4196, 4198, 2169, 1868,
	4302, 4833, 1867, 916, 4777, 4556, 4551, 4215, 4550, 4445,
	4441, 4440, 4382, 4221, 4356, 4122, 4005, 3776, 3773, 3374,
	2026, 2025, 2612, 5238, 5203, 5071, 4227, 1101, 1100, 5009,
	5008, 1343, 1343, 4183, 5007, 4939, 4188, 4938, 4228, 4885,
	4883, 4251, 4127, 1628, 1347, 1347, 4806, 4767, 4707, 1226,
	4702, 4310, 4248, 4249, 4701, 4699, 4698, 1349, 1226, 4696,
	4319, 4274, 4290, 4598, 2294, 3111, 4578, 1628, 4514, 4453,
	4244, 4439, 1628, 1628, 1628, 1097, 3297, 4438, 4437, 4330,
	4323, 4268, 2298, 4325, 4237, 4174, 4166, 3864, 3863, 4267,
	3311, 4263, 3699, 1419, 3642, 1628, 3375, 1628, 3365, 1345,
	1345, 3342, 3341, 3340, 3339, 3275, 1506, 3247, 4311, 3246,
	3178, 4234, 4314, 3088, 3019, 4288, 3013, 3002, 3001, 3685,
	4241, 4276, 4253, 2990, 4289, 4262, 2728, 2599, 4299, 4252,
	2567, 2560, 4280, 2559, 1506, 2558, 2557, 1226, 1226, 1344,
	4313, 4331, 2556, 1226, 1226, 2169, 2468, 2442, 1226, 1226,
	2438, 1226, 2437, 2436, 2435, 2434, 1226, 4327, 2206, 1234,
	2205, 2295, 2300, 2204, 2202, 4294, 2140, 1226, 2139, 1888,
	1887, 1823, 4343, 1702, 1701, 4297, 1700, 4346, 2163, 1699,
	1698, 1697, 1696, 1226, 1691, 1687, 1685, 1684, 1618, 4242,
	4315, 4312, 4351, 4352, 4353, 1617, 1616, 1613, 1497, 4320,
	4329, 2012, 2166, 4321, 1496, 2017, 1098, 288, 288, 288,
	1495, 745, 746, 1494, 761, 745, 761, 772, 4345, 4367,
	812, 4328, 1493, 2157, 832, 1440, 1396, 4380, 4368, 839,
	839, 839, 839, 4344, 1099, 910, 911, 1395, 1394, 288,
	1393, 4347, 4376, 1392, 1349, 1391, 1390, 2296, 1388, 1383,
	1382, 1381, 1349, 1380, 4361, 1379, 1506, 1506, 1306, 1506,
	978, 971, 8, 2244, 1122, 1108, 1349, 288, 4913, 2157,
	2157, 4493, 4492, 4491, 2595, 98, 1693, 1628, 1628, 933,
	92, 2376, 4173, 1072, 5053, 4943, 1676, 941, 5034, 4291,
	1102, 3701, 4421, 3187, 2541, 1824, 4355, 1506, 2157, 2157,
	2303, 2543, 3601, 2962, 4997, 4390, 3474, 4874, 4671, 2802,
	2030, 3555, 94, 1210, 1256, 4589, 4588, 4477, 4160, 4448,
	4449, 3830, 1226, 4585, 4584, 2163, 1344, 2154, 2156, 1174,
	1509, 2157, 5079, 1349, 1344, 1349, 2255, 5244, 4466, 4467,
	1216, 4104, 4406, 2269, 2264, 1343, 3003, 2878, 1344, 2166,
	4424, 4426, 4451, 1233, 1230, 2158, 2160, 3664, 1347, 1232,
	1430, 1231, 2301, 2159, 4524, 4457, 2050, 4517, 4460, 4503,
	1506, 4429, 1430, 4413, 1229, 1430, 4533, 2153, 4504, 4536,
	4301, 4417, 4423, 4420, 3295, 4418, 4419, 913, 912, 4422,
	1226, 3890, 1743, 1506, 4469, 4430, 4105, 4520, 4521, 4433,
	1741, 3665, 1074, 4472, 2259, 2722, 745, 745, 3916, 2786,
	3463, 2023, 4518, 1345, 288, 1344, 1190, 1344, 1212, 2783,
	4555, 3914, 4557, 4106, 1371, 4103, 1201, 191, 3581, 3560,
	3877, 3907, 4459, 3606, 4114, 1628, 1628, 4096, 2634, 951,
	4112, 3509, 2789, 4468, 4474, 1362, 2901, 2894, 2890, 3652,
	4446, 3285, 1904, 4685, 2001, 914, 915, 3296, 4540, 1900,
	1474, 1194, 4582, 2720, 1430, 2014, 3441, 4519, 4609, 4534,
	2644, 3884, 3604, 3567, 2996, 4113, 1506, 5059, 4013, 3372,
	4109, 1628, 2446, 1323, 4579, 1322, 4558, 4549, 1369, 4626,
	1321, 5040, 5037, 2297, 2366, 4592, 3825, 3826, 2247, 3043,
	4500, 2732, 4500, 3844, 4576, 4110, 3596, 1628, 1628, 1628,
	1628, 1628, 1628, 1628, 4537, 1206, 4615, 4610, 3918, 1612,
	2587, 3609, 3716, 3717, 3946, 3718, 3566, 4279, 4569, 1704,
	1506, 4744, 1343, 1218, 1986, 3909, 3214, 4575, 3213, 4902,
	1343, 4568, 1226, 1226, 1226, 1347, 4627, 3630, 4567, 1459,
	3908, 1457, 1456, 1347, 1343, 1455, 4587, 5212, 3180, 4577,
	1506, 2379, 4583, 4612, 4594, 1226, 4169, 1347, 1226, 1226,
	4621, 4601, 4599, 4595, 4630, 4523, 3763, 3764, 1226, 3765,
	4168, 2169, 4167, 2639, 251, 4635, 1226, 1226, 4532, 1419,
	3409, 4535, 1925, 4628, 1917, 248, 4650, 250, 249, 3705,
	1345, 4101, 3610, 1506, 5135, 1628, 4193, 3917, 1345, 3816,
	25, 846, 847, 2157, 848, 4642, 4641, 3053, 1621, 2274,
	1476, 1343, 1345, 1343, 4144, 4663, 24, 23, 22, 1430,
	21, 4644, 121, 44, 1347, 4648, 1347, 20, 4107, 163,
	161, 138, 4658, 158, 157, 130, 4108, 156, 3905, 4668,
	155, 1506, 154, 153, 152, 4651, 160, 4652, 1678, 1226,
	151, 150, 145, 149, 4709, 148, 147, 146, 144, 142,
	143, 137, 1226, 2458, 141, 140, 139, 136, 4680, 135,
	134, 1226, 133, 132, 131, 129, 2169, 162, 128, 1345,
	127, 1345, 205, 4721, 4691, 4692, 1226, 126, 4674, 1226,
	4111, 125, 124, 4694, 123, 4695, 122, 825, 826, 63,
	4718, 1757, 4719, 62, 118, 1226, 119, 19, 1226, 42,
	14, 67, 68, 18, 13, 1506, 37, 1772, 4747, 2896,
	97, 110, 109, 1430, 108, 38, 105, 4786, 36, 17,
	16, 15, 103, 1628, 1628, 1628, 102, 101, 35, 33,
	4720, 11, 4770, 2302, 4771, 9, 39, 2112, 12, 5,
	2157, 2163, 4726, 196, 1349, 4717, 195, 198, 194, 197,
	96, 4766, 193, 3915, 3910, 3911, 3912, 3913, 192, 4795,
	95, 4758, 4759, 4782, 3609, 2166, 31, 1801, 4769, 4805,
	10, 3827, 188, 4821, 1506, 4822, 4286, 1628, 4813, 87,
	190, 4764, 4809, 189, 4768, 4842, 187, 4756, 186, 4816,
	185, 88, 85, 3919, 184, 91, 183, 4778, 86, 4780,
	90, 4781, 89, 29, 4779, 6, 66, 7, 4653, 4829,
	4787, 3928, 1226, 1226, 113, 114, 40, 83, 82, 81,
	4798, 80, 4797, 28, 4807, 4847, 1344, 65, 27, 1226,
	2169, 180, 4802, 229, 228, 227, 226, 225, 224, 223,
	222, 217, 4843, 4820, 4845, 221, 2163, 4800, 4801, 219,
	218, 220, 216, 4825, 242, 241, 1430, 240, 239, 1430,
	238, 1430, 1430, 232, 4844, 231, 237, 236, 4839, 235,
	2166, 4850, 234, 4849, 233, 230, 4630, 245, 4851, 1226,
	4853, 1226, 76, 1226, 4855, 4772, 215, 1364, 4863, 4864,
	214, 4884, 213, 1349, 4886, 211, 4887, 4888, 207, 4862,
	4897, 210, 212, 209, 3947, 208, 1226, 1504, 1349, 206,
	244, 4500, 243, 77, 4895, 178, 179, 4866, 75, 177,
	176, 1385, 175, 174, 173, 172, 171, 4872, 74, 4785,
	182, 181, 1419, 288, 26, 288, 288, 2, 1414, 288,
	1424, 1, 4925, 0, 4890, 4894, 0, 4893, 0, 0,
	0, 1438, 0, 0, 0, 0, 0, 0, 0, 832,
	0, 4924, 832, 0, 4917, 1349, 1349, 0, 0, 0,
	0, 2726, 0, 0, 0, 1344, 4946, 0, 0, 1226,
	0, 4918, 0, 4948, 3990, 839, 1349, 2012, 0, 1349,
	1344, 0, 0, 1628, 0, 0, 0, 0, 0, 4961,
	4962, 4006, 2458, 1628, 0, 4933, 0, 0, 0, 288,
	2163, 288, 288, 1414, 0, 288, 288, 4935, 1226, 1226,
	4979, 4941, 0, 4981, 1424, 0, 4934, 0, 1226, 1419,
	0, 0, 1343, 4959, 2166, 0, 0, 0, 288, 0,
	1654, 4970, 1633, 0, 4973, 1347, 0, 1344, 1344, 1633,
	4972, 4993, 4978, 4994, 0, 0, 1674, 4987, 4986, 0,
	4500, 0, 4989, 1681, 4990, 5010, 0, 4992, 1344, 0,
	0, 1344, 4991, 4825, 0, 4500, 5002, 0, 0, 1226,
	1226, 0, 1706, 1226, 5006, 1424, 0, 1628, 1430, 288,
	288, 1430, 1414, 5031, 5001, 0, 0, 0, 0, 0,
	1345, 5011, 5013, 0, 0, 0, 5039, 5042, 5021, 5022,
	0, 0, 0, 832, 0, 288, 288, 0, 5061, 0,
	0, 5058, 5062, 5050, 0, 5030, 5051, 1769, 5029, 0,
	0, 0, 4500, 4500, 5055, 0, 4099, 0, 1777, 0,
	5048, 0, 0, 978, 5084, 5082, 0, 0, 0, 1226,
	1226, 1226, 5044, 4500, 0, 5043, 4500, 0, 0, 5047,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5067, 0, 0, 0, 0, 0, 2157, 0, 5072, 5075,
	0, 1343, 0, 0, 0, 0, 1226, 5083, 0, 0,
	5116, 0, 0, 0, 1347, 0, 1343, 0, 5121, 0,
	5099, 0, 5098, 5096, 5097, 0, 0, 0, 0, 1347,
	5049, 0, 0, 0, 0, 0, 0, 0, 0, 5142,
	2302, 5117, 0, 0, 288, 5143, 0, 5144, 5118, 0,
	5119, 5132, 0, 5152, 0, 0, 5150, 0, 0, 5156,
	0, 0, 0, 1226, 0, 0, 5134, 0, 288, 1345,
	0, 1430, 5149, 1343, 1343, 0, 4805, 5165, 5148, 0,
	0, 0, 0, 0, 1345, 4298, 1347, 1347, 0, 5157,
	0, 5158, 5183, 3399, 1343, 5175, 0, 1343, 0, 5171,
	5172, 2157, 5179, 5177, 0, 0, 5173, 1347, 0, 0,
	1347, 0, 5131, 5174, 5186, 5133, 0, 5187, 5185, 0,
	5199, 0, 1349, 5039, 1349, 5198, 5042, 5206, 5189, 0,
	0, 0, 5061, 5196, 0, 5208, 0, 5200, 5197, 0,
	5204, 1345, 1345, 0, 5205, 0, 5162, 5194, 5214, 0,
	0, 0, 4348, 0, 0, 0, 5207, 0, 5209, 0,
	0, 0, 1345, 1430, 0, 1345, 0, 0, 0, 5213,
	0, 5229, 5230, 0, 2896, 2896, 5237, 0, 0, 0,
	0, 0, 5236, 0, 0, 0, 0, 0, 0, 5240,
	0, 5235, 0, 1226, 1226, 0, 5248, 0, 5233, 5239,
	5246, 5242, 1226, 1226, 1344, 0, 1344, 5251, 3297, 0,
	0, 5262, 0, 0, 5256, 0, 0, 5264, 5267, 0,
	5268, 0, 5260, 5266, 5272, 5269, 5271, 5270, 0, 5263,
	0, 0, 0, 5265, 0, 0, 0, 0, 3297, 5276,
	1430, 5277, 5281, 5278, 5280, 0, 5284, 5282, 0, 5275,
	0, 5279, 0, 3512, 3513, 0, 3530, 3531, 3532, 0,
	1226, 5287, 0, 0, 5291, 2157, 5293, 5284, 5295, 0,
	0, 0, 5288, 745, 0, 0, 3978, 1613, 5257, 5258,
	5290, 0, 0, 0, 0, 0, 0, 0, 0, 4500,
	0, 4500, 0, 2488, 288, 0, 288, 5259, 0, 0,
	288, 0, 0, 1934, 1935, 0, 0, 3438, 3439, 0,
	0, 2502, 2504, 1654, 1414, 2132, 288, 0, 288, 2138,
	0, 0, 0, 0, 0, 2508, 288, 1965, 761, 0,
	0, 0, 3527, 288, 0, 1937, 5292, 2516, 0, 2519,
	2520, 2521, 0, 1934, 1935, 0, 0, 0, 0, 2207,
	0, 0, 0, 0, 0, 0, 2896, 2896, 2896, 2896,
	0, 288, 1990, 0, 0, 0, 0, 1965, 288, 0,
	0, 1936, 0, 0, 0, 1937, 0, 0, 0, 0,
	0, 0, 1956, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	1419, 832, 1990, 0, 0, 0, 0, 0, 0, 0,
	1343, 1936, 1343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1956, 1347, 0, 1347, 1633, 0, 0, 3518,
	0, 1953, 0, 0, 0, 0, 4428, 0, 0, 839,
	0, 839, 0, 4545, 0, 0, 0, 4371, 0, 0,
	0, 839, 839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	1960, 1961, 1962, 0, 4455, 0, 0, 0, 1345, 1942,
	1345, 0, 0, 0, 0, 0, 0, 3972, 0, 3536,
	3537, 3538, 3539, 0, 0, 0, 0, 0, 0, 3534,
	0, 0, 0, 0, 0, 0, 4597, 1633, 1633, 1959,
	1960, 1961, 1962, 0, 0, 0, 0, 0, 0, 1942,
	4611, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1964, 1966, 0, 0, 0, 0, 0, 0,
	0, 3528, 0, 4634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1951, 1952,
	0, 0, 0, 0, 0, 0, 3205, 0, 0, 0,
	0, 0, 1964, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1957, 0, 0, 0, 0, 0, 0, 1951, 1952,
	3195, 3193, 288, 0, 0, 0, 288, 3197, 3199, 3189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 0, 0, 0,
	0, 1957, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 288, 0, 0,
	0, 0, 1987, 288, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 4713, 1633,
	1633, 1633, 1633, 0, 0, 288, 0, 288, 0, 0,
	0, 745, 0, 288, 3529, 0, 0, 1504, 0, 0,
	0, 0, 1987, 0, 0, 832, 0, 0, 0, 978,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1963, 0, 0, 0, 0, 0, 4669, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 1414, 288, 0, 1958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 832, 0, 0, 0,
	0, 1963, 0, 288, 0, 0, 0, 0, 0, 0,
	4669, 2540, 0, 0, 0, 0, 288, 288, 0, 288,
	0, 288, 0, 288, 1958, 288, 3191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3207, 0, 0,
	290, 0, 0, 0, 0, 0, 1989, 0, 0, 0,
	2577, 0, 0, 2578, 0, 2579, 0, 0, 2658, 0,
	0, 3206, 3196, 3194, 3198, 3200, 3190, 3192, 3208, 3210,
	288, 288, 288, 288, 0, 0, 0, 0, 0, 3202,
	3204, 3212, 0, 3524, 3525, 3526, 1989, 0, 0, 0,
	3523, 3521, 3522, 3514, 3515, 3516, 3517, 3519, 3520, 812,
	0, 0, 0, 832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2896, 2896, 3216, 0, 0, 0, 3512,
	3513, 0, 3530, 3531, 3532, 0, 0, 0, 0, 0,
	0, 0, 2658, 0, 0, 0, 0, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0,
	0, 3512, 3513, 3179, 3530, 3531, 3532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3977, 0, 0, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0,
	0, 0, 0, 0, 0, 0, 2734, 0, 3527, 0,
	0, 0, 0, 2896, 2896, 2896, 2896, 2896, 2896, 2896,
	2896, 2896, 2896, 2896, 2896, 2896, 2896, 2896, 2896, 2896,
	2896, 2896, 2896, 0, 2896, 0, 0, 0, 0, 4931,
	3527, 0, 0, 0, 3209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1188, 3969, 3970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4945, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 0, 3325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 3332, 0, 4977, 0, 0,
	0, 0, 745, 0, 0, 3518, 0, 0, 0, 288,
	0, 745, 0, 0, 0, 3217, 0, 0, 0, 0,
	0, 0, 0, 288, 3201, 3203, 3211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3518, 0, 0,
	0, 0, 0, 0, 288, 1424, 4033, 4034, 4035, 4036,
	4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 4045, 4046,
	4047, 4048, 4049, 4050, 4051, 4052, 0, 4056, 0, 0,
	0, 0, 0, 0, 0, 3534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 1424, 0, 0, 761, 0, 761,
	0, 0, 0, 3018, 0, 0, 0, 3534, 0, 288,
	0, 0, 288, 0, 0, 0, 288, 3528, 288, 0,
	0, 0, 0, 1414, 0, 288, 288, 0, 1424, 1424,
	3034, 0, 0, 0, 5068, 288, 0, 0, 0, 0,
	5070, 2744, 2745, 2746, 2763, 2764, 2765, 0, 0, 3528,
	0, 0, 0, 0, 0, 0, 1633, 1633, 0, 0,
	78, 0, 2766, 0, 0, 0, 0, 0, 0, 1934,
	1935, 0, 0, 0, 0, 0, 0, 0, 79, 839,
	839, 0, 0, 839, 839, 0, 0, 0, 0, 0,
	0, 0, 3077, 1965, 0, 84, 0, 1990, 1987, 0,
	0, 1937, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2756, 288, 0,
	0, 0, 0, 0, 0, 0, 2752, 0, 1990, 0,
	1987, 288, 0, 0, 0, 0, 93, 1936, 0, 0,
	0, 0, 832, 0, 0, 0, 1633, 1633, 1633, 1633,
	1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633,
	1633, 1633, 1633, 1633, 1633, 1633, 0, 1633, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 972, 1181, 0,
	3529, 288, 288, 3175, 1654, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 99, 112,
	0, 0, 0, 0, 2757, 2758, 2759, 2760, 0, 0,
	0, 0, 3529, 0, 2751, 0, 0, 0, 0, 288,
	3235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1942, 0, 1654, 0, 0,
	288, 0, 288, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 100, 0, 0, 0, 0, 0, 0, 3280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3077,
	0, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	3175, 978, 3077, 2761, 2762, 0, 0, 0, 1964, 1966,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2754, 0, 0, 3524,
	3525, 3526, 0, 288, 1414, 288, 3523, 3521, 3522, 3514,
	3515, 3516, 3517, 3519, 3520, 1424, 288, 0, 0, 1414,
	0, 1414, 0, 1414, 0, 0, 0, 1957, 0, 0,
	0, 3524, 3525, 3526, 0, 0, 0, 0, 3523, 3521,
	3522, 3514, 3515, 3516, 3517, 3519, 3520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 78, 2993, 48, 47, 0,
	288, 288, 288, 288, 1414, 0, 0, 1414, 0, 288,
	0, 0, 0, 79, 288, 0, 104, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 69, 0, 0, 0, 288, 0, 0, 50, 0,
	167, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	0, 93, 0, 0, 0, 199, 107, 0, 0, 111,
	1188, 1188, 1188, 0, 0, 0, 0, 0, 0, 2755,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 70,
	0, 0, 0, 0, 0, 0, 252, 53, 0, 0,
	0, 0, 59, 0, 973, 0, 0, 168, 0, 159,
	1958, 1590, 0, 0, 0, 51, 0, 115, 0, 0,
	0, 1934, 1935, 99, 112, 0, 0, 0, 0, 0,
	0, 71, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 1965, 0, 254, 0, 0,
	0, 0, 0, 1937, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 54, 0, 1654,
	0, 0, 1989, 0, 164, 0, 0, 0, 0, 0,
	1990, 0, 0, 3795, 0, 0, 0, 100, 0, 1936,
	204, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3820, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 3849, 0, 200, 0, 2741, 2742,
	2743, 2767, 2753, 2747, 0, 2749, 2750, 2748, 2735, 2736,
	2737, 2738, 2739, 2740, 0, 0, 0, 0, 78, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 72, 0, 79, 1945, 1946, 1938,
	1939, 1940, 1941, 1943, 1944, 3897, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 3921, 1339, 0,
	0, 0, 0, 0, 0, 0, 2896, 1942, 0, 0,
	0, 3932, 0, 3933, 0, 3934, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 93, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 745, 283, 283, 741, 0,
	745, 104, 0, 745, 0, 0, 745, 745, 0, 0,
	1964, 1966, 745, 0, 0, 0, 0, 0, 0, 55,
	288, 0, 0, 0, 0, 972, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 58, 2896, 51, 0,
	115, 61, 0, 0, 0, 0, 99, 112, 0, 0,
	0, 73, 0, 0, 0, 0, 0, 0, 0, 60,
	199, 107, 0, 0, 111, 0, 0, 0, 56, 1957,
	0, 0, 169, 288, 0, 0, 0, 288, 288, 0,
	57, 0, 0, 0, 0, 0, 0, 0, 0, 4677,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 64,
	0, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	100, 3077, 3077, 288, 0, 3672, 2132, 0, 0, 0,
	166, 0, 3077, 0, 2138, 0, 0, 0, 0, 0,
	0, 0, 0, 3077, 2138, 0, 3077, 2138, 0, 0,
	2138, 0, 254, 3672, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 288, 288, 2132, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	4729, 0, 0, 0, 0, 0, 2132, 0, 288, 0,
	3746, 0, 3746, 0, 0, 204, 0, 0, 1414, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	3077, 0, 3077, 0, 3777, 3077, 2132, 247, 0, 3077,
	0, 200, 0, 0, 0, 0, 0, 2896, 0, 0,
	0, 0, 1958, 2132, 0, 0, 832, 0, 0, 78,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 3,
	0, 0, 1590, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 104, 0, 3512, 3513, 1414, 3530,
	3531, 3532, 0, 0, 84, 288, 0, 0, 0, 2896,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1633,
	0, 0, 0, 288, 1989, 3821, 0, 0, 0, 3823,
	3077, 0, 0, 288, 2896, 0, 288, 0, 0, 3852,
	0, 1424, 0, 0, 0, 93, 0, 0, 0, 0,
	0, 0, 0, 199, 107, 0, 288, 111, 0, 0,
	0, 3280, 0, 0, 1414, 0, 288, 0, 0, 3077,
	0, 745, 0, 0, 0, 3527, 0, 0, 3077, 0,
	0, 0, 0, 0, 252, 0, 972, 0, 0, 0,
	4871, 0, 973, 0, 0, 0, 0, 159, 1188, 51,
	1633, 115, 0, 0, 0, 0, 1590, 99, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 3937,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 4901, 0, 4235, 4236, 0, 0, 0, 3943,
	0, 4238, 0, 1654, 4239, 0, 0, 1414, 288, 0,
	288, 0, 164, 0, 0, 0, 1414, 4923, 0, 0,
	0, 100, 3518, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 1934, 1935,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 1965, 0, 200, 0, 0, 0, 0, 0,
	1937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 1754,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 0, 0, 4326, 1965, 4011, 1936, 0, 2502, 4332,
	4333, 0, 1937, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 1984, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 3528, 0, 1590, 0, 0, 1990,
	1633, 0, 0, 0, 0, 0, 0, 0, 1936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 104, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 288, 1959, 1960, 1961, 1962, 0, 0,
	0, 0, 0, 0, 1942, 1987, 0, 1633, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 745, 745, 0,
	0, 0, 0, 0, 199, 107, 0, 0, 111, 0,
	0, 0, 0, 0, 0, 0, 1959, 1960, 1961, 1962,
	0, 0, 0, 0, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 0, 1964, 1966, 288,
	0, 0, 0, 973, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1951, 1952, 0, 0, 3529, 0, 1975,
	0, 0, 1985, 0, 0, 0, 0, 0, 0, 1964,
	1966, 0, 0, 4435, 4436, 0, 254, 0, 0, 0,
	0, 0, 1400, 0, 1400, 1400, 1957, 0, 0, 0,
	0, 0, 0, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 0,
	0, 832, 0, 1973, 0, 0, 0, 0, 0, 204,
	0, 0, 0, 0, 0, 0, 0, 253, 1957, 0,
	0, 0, 0, 0, 0, 0, 0, 4207, 0, 0,
	4209, 4210, 246, 0, 0, 0, 0, 3746, 0, 0,
	0, 247, 0, 0, 0, 200, 0, 0, 1501, 0,
	0, 0, 288, 0, 1611, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 3175, 1590, 0, 0,
	1752, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2132, 0, 288, 0, 0, 0, 761, 761, 1424,
	0, 0, 1970, 0, 0, 0, 3524, 3525, 3526, 1987,
	0, 0, 288, 3523, 3521, 3522, 3514, 3515, 3516, 3517,
	3519, 3520, 0, 288, 3280, 0, 1963, 3280, 2138, 0,
	0, 2502, 0, 288, 0, 0, 0, 0, 0, 0,
	3852, 0, 0, 0, 0, 0, 288, 0, 0, 1958,
	0, 288, 0, 0, 0, 0, 288, 0, 0, 0,
	78, 0, 0, 0, 1758, 1759, 0, 0, 1963, 0,
	1590, 0, 0, 0, 0, 3077, 288, 0, 79, 0,
	0, 0, 0, 0, 0, 3175, 0, 0, 978, 3077,
	0, 1958, 0, 0, 0, 84, 0, 0, 0, 0,
	0, 1934, 1935, 4643, 0, 4645, 4646, 4647, 0, 4649,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 1976,
	288, 0, 0, 0, 0, 1965, 0, 0, 0, 0,
	0, 0, 0, 1937, 0, 0, 93, 0, 0, 0,
	0, 1590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 0, 1590, 0, 1936,
	0, 0, 1970, 1879, 0, 0, 0, 972, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 99, 112,
	4391, 4697, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 1974,
	0, 1970, 0, 0, 0, 0, 0, 1970, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 0, 100, 288, 0, 0, 0, 0, 0, 1654,
	0, 288, 0, 0, 0, 0, 0, 1942, 0, 0,
	0, 0, 1934, 1935, 0, 288, 0, 0, 1978, 1979,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1965, 0, 0, 0,
	1424, 0, 0, 1590, 1937, 0, 0, 0, 0, 0,
	0, 0, 0, 1424, 1984, 288, 1424, 0, 0, 1970,
	1964, 1966, 0, 0, 1970, 0, 0, 3077, 3077, 4799,
	3672, 1990, 0, 3746, 3077, 0, 0, 0, 1970, 0,
	1936, 0, 4502, 1970, 4502, 1654, 0, 0, 0, 0,
	0, 1956, 0, 0, 0, 0, 3077, 0, 2138, 0,
	1953, 0, 3672, 0, 1654, 1654, 288, 2132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1957,
	2132, 0, 288, 2132, 0, 288, 0, 0, 3746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1590, 0, 0, 0, 0, 104, 0, 1970, 3077,
	0, 3077, 288, 0, 1970, 0, 0, 0, 0, 2122,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2133, 0, 1611, 1959, 1960,
	1961, 1962, 0, 0, 0, 0, 0, 0, 1942, 0,
	0, 3077, 3077, 0, 0, 0, 0, 3280, 3280, 0,
	1987, 0, 0, 0, 3672, 199, 107, 0, 0, 111,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	1400, 0, 0, 0, 0, 0, 288, 1611, 0, 0,
	0, 1975, 0, 0, 1985, 0, 252, 0, 0, 0,
	0, 1964, 1966, 0, 973, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1958, 0, 0, 1973, 0, 254, 0, 0,
	1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 0, 0,
	1957, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 0, 0, 0, 164, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 0, 2502,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 200, 0, 0, 2900,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 1970, 0, 0, 0, 0, 0, 1970,
	0, 203, 0, 0, 0, 3077, 2138, 0, 2138, 0,
	0, 3852, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4745, 0, 4745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1963, 1938, 1939, 1940, 1941, 1943, 1944, 832, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3746, 1654,
	0, 1654, 1414, 1958, 0, 2090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2132, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 1976, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3852, 0, 0, 4502, 0, 0, 1654, 0, 0, 0,
	3077, 0, 2444, 0, 0, 1989, 2451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2464, 0,
	4836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1654, 0, 2476, 0, 2476, 0, 0, 0,
	0, 0, 2483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1974, 0, 4011, 0, 0, 0, 0, 2451, 0,
	0, 2512, 0, 0, 0, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0,
	0, 0, 2532, 0, 3746, 4892, 0, 0, 0, 0,
	0, 0, 3852, 0, 0, 0, 2548, 0, 2550, 0,
	2552, 0, 2554, 0, 2555, 0, 0, 0, 0, 0,
	0, 0, 4502, 0, 0, 0, 0, 0, 0, 0,
	1173, 0, 0, 0, 0, 0, 0, 4502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1590, 0, 0, 2584,
	2585, 2586, 0, 288, 0, 0, 0, 0, 1934, 1935,
	0, 0, 0, 0, 0, 0, 761, 2871, 2872, 2873,
	2874, 2867, 2868, 2869, 2870, 0, 0, 0, 0, 1590,
	0, 0, 1965, 0, 4502, 4502, 0, 0, 0, 0,
	1937, 0, 0, 0, 1590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4502, 0, 288, 4502, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 2138, 0,
	1590, 0, 0, 0, 0, 0, 1936, 0, 1654, 0,
	1654, 0, 0, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2847, 2848, 2849, 2850, 0, 0, 0, 0, 1424,
	1188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1188, 5019, 0, 2859, 2860, 2861, 2862, 2855,
	2856, 2857, 2858, 2863, 2864, 2865, 2866, 0, 0, 4745,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 0, 0, 0, 3077, 0, 0,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 0, 0, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 2843, 2844,
	2845, 2846, 2851, 2852, 2853, 2854, 0, 0, 0, 0,
	0, 0, 0, 0, 4011, 0, 0, 1590, 0, 0,
	0, 0, 1970, 0, 0, 0, 1970, 1964, 1966, 0,
	0, 0, 2969, 0, 0, 0, 0, 0, 1654, 0,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
	1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
	1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
	1970, 1970, 1970, 1970, 1970, 0, 1957, 0, 0, 0,
	1970, 0, 1970, 1970, 1970, 1970, 0, 1590, 0, 0,
	0, 0, 0, 0, 2900, 2900, 0, 0, 0, 0,
	0, 3852, 0, 0, 0, 0, 0, 0, 3020, 1970,
	0, 1400, 0, 0, 0, 1400, 0, 1400, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2464, 0, 0, 0, 0, 0,
	0, 3077, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4502, 0, 4502, 0, 0, 1654, 1987, 0, 0,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 0, 0, 1970, 0, 0, 1970, 0, 0, 1970,
	0, 0, 879, 0, 0, 1970, 1970, 1970, 1970, 1970,
	1970, 1970, 0, 0, 0, 0, 1963, 3077, 0, 0,
	0, 0, 881, 0, 0, 0, 0, 1590, 0, 0,
	1590, 0, 0, 0, 3175, 0, 0, 0, 0, 1958,
	0, 0, 0, 0, 0, 880, 0, 3077, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3175, 0, 0, 0, 0, 0, 0, 1611, 0,
	0, 1970, 0, 0, 3533, 0, 2900, 2900, 2900, 2900,
	2451, 2451, 1970, 0, 1970, 0, 0, 0, 0, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 873, 0,
	0, 1989, 0, 0, 0, 889, 0, 1590, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 878,
	0, 0, 0, 0, 1590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1433, 3258,
	0, 0, 0, 0, 0, 0, 0, 0, 2464, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 877, 0, 0, 1173, 1173, 1173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 807,
	0, 0, 0, 0, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3330, 0, 0, 875, 0, 0, 0,
	1603, 0, 0, 0, 0, 0, 1619, 0, 0, 0,
	0, 0, 3344, 0, 3347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1656, 0, 1662, 1590,
	1668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 888, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3381,
	1611, 3383, 1611, 0, 0, 0, 0, 0, 3389, 0,
	0, 0, 0, 0, 0, 0, 0, 1934, 1935, 0,
	1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 0, 1760,
	0, 1765, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 1965, 0, 0, 1400, 1779, 0, 1784, 0, 1937,
	0, 0, 3418, 0, 0, 0, 0, 870, 0, 1984,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 0, 1936, 0, 0, 0, 0,
	874, 0, 0, 0, 0, 0, 1956, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 1970, 1970, 1855,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 884, 0, 0, 0, 0,
	0, 872, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 1960, 1961, 1962, 0, 0, 0,
	0, 0, 0, 1942, 0, 0, 0, 0, 0, 0,
	0, 869, 0, 0, 0, 0, 0, 882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
	876, 0, 0, 0, 0, 0, 1975, 0, 0, 1985,
	0, 0, 1970, 0, 0, 808, 1964, 1966, 0, 0,
	0, 0, 0, 0, 0, 2011, 871, 0, 0, 0,
	0, 2024, 1222, 1981, 0, 1982, 0, 0, 0, 0,
	0, 0, 1951, 1952, 0, 0, 0, 0, 0, 0,
	0, 886, 887, 0, 883, 0, 1590, 0, 0, 0,
	1973, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 1970, 0, 2900, 2900, 1957, 0, 1970, 0, 0,
	287, 287, 287, 0, 1590, 0, 0, 3533, 3533, 0,
	0, 1970, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 902, 0, 0, 1970, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2084, 2084, 2084,
	902, 0, 0, 0, 0, 1972, 0, 0, 0, 0,
	0, 3619, 0, 0, 0, 0, 1987, 0, 0, 0,
	0, 0, 0, 2900, 2900, 2900, 2900, 2900, 2900, 2900,
	2900, 2900, 2900, 2900, 2900, 2900, 2900, 2900, 2900, 2900,
	2900, 2900, 2900, 0, 2900, 3533, 3533, 3533, 3533, 0,
	0, 0, 1400, 0, 1934, 1935, 1611, 1611, 0, 0,
	0, 0, 0, 0, 0, 0, 1590, 1590, 0, 1590,
	0, 0, 0, 0, 0, 1963, 0, 0, 1965, 0,
	1970, 0, 0, 0, 0, 0, 1937, 0, 0, 0,
	0, 0, 3668, 0, 0, 0, 0, 0, 1958, 0,
	0, 0, 0, 0, 0, 0, 0, 1590, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 0, 0, 0,
	0, 0, 1936, 0, 0, 0, 1976, 0, 1211, 117,
	0, 0, 1188, 1956, 3723, 3725, 0, 0, 2464, 1258,
	0, 0, 1953, 1173, 0, 0, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1989, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1590, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3967, 0,
	0, 0, 0, 1590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 0, 0, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 0, 117, 0,
	1942, 0, 0, 0, 0, 0, 1974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1948, 1949, 1955,
	1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940,
	1941, 1943, 1944, 0, 0, 0, 0, 0, 3487, 1970,
	1970, 0, 3488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3845, 1964, 1966, 2451, 1590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1951,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1168, 0, 0, 0, 0, 0, 0, 0,
	1590, 0, 1957, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1590, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3949, 0, 1611,
	0, 0, 0, 1590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 1970, 0, 0, 1970, 3533, 3533,
	1970, 0, 1963, 0, 1970, 0, 0, 0, 0, 0,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 1958, 0, 0, 0, 1188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2564, 0, 0, 1970, 1970, 1970,
	1970, 1970, 0, 0, 0, 1590, 0, 1970, 0, 1970,
	0, 0, 3533, 3533, 3533, 3533, 3533, 3533, 3533, 3533,
	3533, 3533, 3533, 3533, 3533, 3533, 3533, 3533, 3533, 3533,
	3533, 3533, 2593, 0, 0, 3533, 0, 1989, 1970, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 2633, 0,
	2637, 0, 0, 0, 1590, 0, 0, 2651, 0, 0,
	0, 0, 0, 0, 2660, 2661, 2662, 2663, 2664, 2665,
	2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675,
	2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695,
	0, 2701, 1970, 2703, 2704, 2705, 2706, 0, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 2730,
	0, 0, 0, 0, 0, 0, 287, 0, 287, 287,
	0, 2011, 287, 0, 0, 2781, 0, 0, 0, 0,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2811, 2814, 2817, 2820, 0, 0, 2826, 2827, 2828,
	2829, 2830, 2831, 2832, 0, 1970, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2892, 0, 2903, 2905, 2910,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 287, 287, 0, 0, 287, 287,
	0, 0, 0, 0, 0, 0, 0, 1934, 1935, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1965, 0, 0, 0, 0, 0, 0, 0, 1937,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 2464, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 287, 287, 0, 1936, 0, 0, 0, 0,
	0, 2464, 0, 0, 0, 0, 1956, 0, 0, 0,
	0, 0, 4275, 0, 0, 1953, 0, 0, 287, 287,
	0, 0, 4285, 0, 0, 0, 0, 0, 1970, 1970,
	0, 0, 0, 1970, 1970, 0, 0, 1970, 1970, 0,
	2464, 0, 1970, 0, 0, 4304, 1970, 0, 0, 0,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	1188, 0, 0, 0, 0, 0, 2900, 0, 0, 0,
	0, 3966, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 1960, 1961, 1962, 0, 0, 0,
	0, 0, 0, 1942, 0, 0, 0, 0, 0, 4350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2900, 0, 0,
	0, 287, 0, 0, 0, 0, 1964, 1966, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1951, 1952, 0, 0, 0, 0, 0, 0,
	117, 0, 117, 0, 117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 0,
	0, 1350, 0, 0, 0, 1957, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1168, 117, 117, 0,
	3238, 3239, 0, 3241, 0, 0, 0, 1350, 0, 0,
	0, 0, 0, 117, 1350, 117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	1350, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 1970, 1970, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 1970, 3533, 2900, 0, 0,
	1350, 0, 0, 1970, 0, 0, 1970, 117, 0, 0,
	0, 0, 0, 0, 0, 1963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2106, 1958, 1346,
	0, 2464, 0, 287, 0, 0, 0, 0, 3533, 2900,
	0, 0, 3363, 0, 0, 0, 0, 0, 0, 287,
	2106, 287, 0, 0, 0, 1970, 0, 0, 0, 902,
	0, 0, 0, 1970, 2900, 0, 902, 0, 0, 0,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 1970, 0, 0, 0, 0, 0,
	1989, 0, 0, 0, 287, 0, 0, 0, 0, 1147,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1991, 1992, 0, 0,
	2004, 0, 0, 0, 0, 2464, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4622, 0, 0, 2010, 0,
	0, 0, 2016, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3421, 3422, 0, 0, 0, 0, 3428, 0,
	3533, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940,
	1941, 1943, 1944, 0, 0, 0, 0, 3442, 3443, 0,
	0, 0, 0, 2781, 0, 0, 0, 0, 0, 1970,
	3533, 0, 0, 1970, 0, 0, 0, 0, 0, 1934,
	1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0,
	0, 0, 3533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 1965, 0, 0, 0, 0, 3452, 0,
	0, 1937, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 2104, 3466, 2107, 0, 117, 0, 0,
	0, 0, 0, 0, 1350, 0, 1350, 0, 1990, 0,
	0, 3478, 0, 1970, 0, 0, 0, 1936, 0, 0,
	0, 1350, 0, 0, 0, 0, 0, 0, 1956, 0,
	0, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 2170, 0, 0, 0, 0, 0, 0, 4731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 902,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2910, 2910, 2910, 1959, 1960, 1961, 1962, 0,
	0, 0, 2464, 0, 0, 1942, 287, 0, 0, 2084,
	287, 0, 0, 0, 1970, 0, 287, 3571, 0, 0,
	0, 0, 287, 0, 0, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 1970,
	287, 0, 0, 0, 0, 0, 287, 0, 1975, 0,
	0, 1985, 0, 0, 0, 0, 0, 0, 1964, 1966,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 1982, 0, 0,
	0, 0, 0, 0, 1951, 1952, 0, 0, 0, 0,
	0, 0, 287, 0, 0, 287, 0, 0, 4861, 1611,
	0, 0, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 1957, 0, 0,
	0, 0, 0, 0, 0, 1173, 0, 0, 0, 902,
	287, 0, 287, 0, 287, 0, 287, 1173, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 1970, 0, 0, 0, 0, 0, 0, 3704, 0,
	0, 0, 0, 287, 287, 287, 287, 1972, 0, 0,
	0, 0, 0, 0, 1350, 1350, 0, 0, 1987, 0,
	0, 0, 0, 0, 0, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3760, 3761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4980, 0, 0, 0,
	1958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1168, 0, 1168, 0, 0, 0, 0, 0, 0,
	0, 0, 1350, 0, 1350, 0, 1350, 0, 1976, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1350, 0,
	0, 0, 1989, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 1350, 1350, 1350, 0, 0, 0, 0, 0,
	0, 5033, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 1974, 0,
	0, 5077, 0, 0, 0, 0, 287, 0, 0, 1948,
	1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938,
	1939, 1940, 1941, 1943, 1944, 0, 0, 287, 0, 0,
	2777, 0, 0, 0, 2778, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1147, 0, 0, 1147, 1147,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2170, 2170, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 2651,
	0, 0, 0, 0, 0, 3964, 3965, 0, 0, 3968,
	0, 0, 287, 3971, 0, 287, 0, 0, 0, 287,
	0, 287, 3975, 0, 2719, 0, 0, 0, 287, 287,
	0, 3982, 0, 0, 0, 0, 3571, 0, 287, 0,
	0, 0, 0, 0, 1168, 0, 0, 0, 0, 0,
	0, 3995, 0, 0, 2010, 0, 0, 0, 2010, 0,
	0, 0, 0, 0, 0, 1934, 1935, 0, 0, 0,
	0, 4018, 4019, 0, 4020, 4021, 4022, 0, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1965,
	0, 0, 4028, 0, 0, 0, 4030, 1937, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 0, 1990, 0, 0, 0, 0, 4059,
	4060, 0, 1333, 1936, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 1350, 1956, 0, 0, 4071, 2107, 0,
	1350, 0, 0, 1953, 0, 0, 0, 0, 0, 1350,
	0, 0, 4080, 0, 0, 0, 0, 0, 0, 0,
	0, 792, 287, 0, 0, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 287, 287, 0, 0, 0, 117,
	0, 0, 775, 0, 0, 0, 0, 776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3427,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 902, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 1960, 1961, 1962, 0, 0, 0, 777, 0,
	0, 1942, 0, 0, 0, 4143, 0, 0, 0, 778,
	0, 0, 0, 287, 0, 902, 0, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 779, 4161, 1934, 1935, 0, 1967, 1968, 1969, 1978,
	1979, 1980, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 798, 1964, 1966, 1971, 1965, 0, 0,
	0, 0, 0, 0, 0, 1937, 4192, 0, 0, 0,
	0, 0, 0, 0, 780, 1984, 0, 287, 0, 0,
	1951, 1952, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 287, 0, 287, 781,
	0, 1936, 0, 0, 4216, 4217, 0, 0, 0, 287,
	0, 0, 1956, 1957, 0, 0, 0, 0, 0, 0,
	0, 1953, 782, 894, 0, 0, 0, 783, 0, 0,
	0, 2170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 807, 0, 0, 0, 0, 0,
	0, 894, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 287, 287, 287, 0, 0, 0,
	0, 797, 287, 0, 0, 0, 0, 287, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1987, 0, 1350, 0, 0, 1959,
	1960, 1961, 1962, 0, 0, 0, 0, 0, 287, 1942,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 117, 0, 2084, 117, 0, 117, 0, 0,
	794, 0, 0, 4322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1975, 1963, 0, 1985, 0, 0, 0, 0,
	0, 0, 1964, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 1958, 117, 0, 1981,
	0, 1982, 0, 117, 0, 0, 0, 0, 1951, 1952,
	0, 0, 0, 0, 0, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1973, 804, 1350, 785,
	1350, 0, 4369, 4370, 0, 0, 1350, 0, 4374, 4375,
	0, 1957, 0, 4378, 4379, 0, 0, 0, 1350, 0,
	0, 4383, 0, 0, 0, 0, 0, 0, 1989, 805,
	0, 786, 4387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4392, 0,
	117, 0, 0, 1934, 1935, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 806, 0, 0, 1965, 0, 0,
	0, 1972, 787, 0, 0, 1937, 0, 802, 803, 0,
	800, 0, 1987, 0, 0, 0, 795, 0, 0, 788,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 0, 0, 1954,
	1950, 1936, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943,
	1944, 0, 1956, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 789, 0, 796, 0, 0, 0,
	0, 1963, 0, 0, 0, 790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	791, 0, 0, 0, 1958, 799, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1173, 0, 2719,
	808, 0, 0, 1346, 0, 0, 0, 3420, 0, 0,
	0, 793, 1976, 0, 0, 0, 0, 0, 0, 0,
	2010, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	1960, 1961, 1962, 2106, 0, 0, 0, 0, 0, 1942,
	0, 0, 0, 0, 0, 287, 1989, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	287, 287, 1964, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1951, 1952,
	0, 0, 1974, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0,
	0, 1957, 0, 0, 0, 0, 0, 0, 4397, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 287,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 2106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 792, 0, 4664, 4665, 4666,
	0, 0, 0, 1333, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 1350, 1350, 775, 0, 0, 1333,
	2651, 776, 0, 4675, 4676, 0, 0, 0, 0, 0,
	1350, 0, 289, 289, 289, 0, 0, 0, 0, 0,
	0, 4684, 4687, 0, 0, 0, 0, 0, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 777, 1350, 289, 0, 0, 0, 287, 0,
	0, 1963, 0, 778, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2170, 902, 0, 0, 1350,
	0, 0, 289, 0, 1958, 779, 287, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 798, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 4746, 0, 1346,
	0, 0, 0, 0, 0, 0, 4754, 0, 780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4762, 0, 0, 1173, 0, 1989, 0, 0, 0,
	0, 0, 0, 781, 0, 2170, 0, 0, 0, 0,
	4773, 0, 0, 4775, 0, 0, 117, 117, 0, 117,
	0, 0, 0, 0, 0, 0, 782, 0, 0, 0,
	0, 783, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 0, 0, 807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 287, 0, 0, 0, 0, 0, 0,
	117, 117, 0, 117, 0, 797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 1350, 1954, 1950, 0,
	1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 794, 0, 0, 0, 1629, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 1629, 0, 0, 0, 0, 0,
	1350, 0, 1350, 0, 0, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 0, 0,
	0, 0, 0, 0, 4900, 0, 0, 0, 4904, 0,
	0, 0, 0, 0, 0, 1333, 0, 0, 1168, 0,
	0, 0, 0, 785, 1629, 0, 1350, 0, 0, 0,
	0, 0, 117, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1350, 0,
	0, 0, 0, 805, 0, 786, 0, 0, 0, 0,
	1350, 0, 1350, 0, 0, 1346, 1346, 0, 0, 0,
	0, 0, 0, 0, 1350, 0, 1350, 0, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 806, 0,
	0, 0, 0, 0, 4974, 0, 787, 0, 0, 0,
	0, 802, 803, 0, 800, 0, 1350, 0, 0, 1350,
	795, 0, 0, 788, 0, 0, 0, 0, 0, 0,
	0, 0, 902, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2651, 0, 0, 0, 0, 0,
	0, 0, 0, 4687, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 789, 0,
	796, 0, 0, 0, 0, 0, 0, 2170, 0, 790,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 791, 0, 1350, 0, 0, 799,
	0, 0, 0, 0, 0, 1173, 0, 0, 0, 0,
	0, 0, 0, 1350, 808, 0, 0, 0, 0, 0,
	0, 0, 0, 2170, 2170, 793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2170, 2170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 5095, 5095, 5095, 0, 0, 0,
	0, 0, 0, 117, 0, 2170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 1333, 1333, 0, 0, 0, 0, 0, 0, 0,
	0, 5120, 1350, 1350, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	894, 0, 0, 0, 0, 922, 0, 894, 1350, 287,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 924, 0, 5095, 0,
	0, 925, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 926, 0, 943, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 289, 0,
	289, 289, 0, 0, 289, 0, 0, 0, 0, 0,
	927, 0, 0, 0, 0, 928, 0, 0, 0, 1507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 952, 0, 0,
	0, 0, 0, 0, 929, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5095, 5252,
	0, 0, 0, 0, 289, 1510, 289, 289, 0, 0,
	289, 289, 0, 923, 0, 0, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 1350, 0,
	1350, 0, 0, 289, 1350, 0, 930, 1350, 0, 0,
	0, 931, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 954, 0, 0, 1510, 0, 807, 0,
	0, 0, 0, 0, 0, 0, 1346, 2170, 0, 0,
	0, 0, 0, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 289, 0, 0, 2106, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 0, 0, 0, 0, 0, 0, 1510,
	289, 289, 1350, 0, 0, 1333, 1227, 0, 1629, 1629,
	0, 0, 0, 0, 0, 1510, 1350, 0, 287, 1507,
	0, 0, 0, 0, 953, 0, 1350, 0, 0, 0,
	0, 1350, 1350, 1350, 948, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2106, 117, 2106, 0, 0,
	0, 0, 0, 0, 1350, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 1350, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 1510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 287, 0,
	0, 0, 0, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 932, 0, 2170, 0, 0, 0, 0, 289,
	0, 0, 0, 934, 0, 287, 1629, 0, 1629, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 0, 0, 0, 0, 1629, 1629,
	0, 0, 0, 0, 0, 935, 0, 0, 0, 0,
	0, 0, 1629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 0, 1629, 1629, 1629, 0,
	0, 0, 0, 0, 0, 0, 944, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 117, 0, 806, 287,
	894, 0, 1333, 0, 0, 0, 0, 0, 0, 0,
	1333, 921, 0, 1350, 945, 0, 0, 0, 0, 0,
	0, 1350, 0, 936, 0, 1350, 1350, 0, 1350, 0,
	0, 0, 0, 0, 0, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 1350, 0, 0,
	942, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 937, 0,
	0, 0, 938, 957, 0, 956, 0, 0, 0, 939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 940, 0, 0, 0, 0, 949,
	0, 0, 1350, 0, 1350, 958, 0, 955, 0, 0,
	1507, 0, 0, 0, 808, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 1510, 0, 0, 0,
	0, 289, 289, 289, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 1507, 1350, 1350, 0, 0, 289, 0,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 289, 0, 1350, 0, 117, 0, 0,
	1350, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 0, 1350, 1350, 1350, 1350,
	1350, 1350, 1350, 0, 0, 0, 2106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1350,
	1507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2170, 0, 287, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1350, 0, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 0, 0,
	2106, 0, 0, 0, 0, 2170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 289, 0, 1510,
	1510, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 0, 0, 0, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2106, 2106, 0,
	0, 0, 1350, 1350, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2106, 0,
	287, 2106, 0, 1350, 0, 0, 0, 0, 289, 0,
	0, 0, 289, 0, 1507, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	1629, 0, 0, 1350, 0, 2719, 1350, 0, 0, 0,
	289, 0, 289, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 1510,
	0, 1510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	1510, 0, 0, 0, 0, 287, 0, 0, 0, 2170,
	0, 0, 0, 1510, 289, 0, 894, 289, 0, 0,
	0, 0, 0, 0, 0, 1510, 0, 1510, 1510, 1510,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1629,
	0, 289, 289, 0, 289, 0, 289, 0, 289, 0,
	289, 0, 1629, 0, 1629, 287, 0, 0, 0, 0,
	1629, 0, 1350, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 1629, 0, 0, 0, 0, 1350, 1630, 0,
	0, 0, 0, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 289, 289, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 1350, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 0, 0, 0, 1350, 0, 0, 1350, 0,
	0, 0, 1350, 0, 1630, 0, 0, 0, 0, 0,
	0, 1630, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2106, 0, 2106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1510, 0, 0, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 0, 1971, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1984, 0, 289, 0,
	0, 1510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 0, 0, 289,
	0, 0, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 0, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 289, 0, 0,
	0, 289, 0, 289, 0, 0, 0, 0, 0, 0,
	289, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 0, 0, 0,
	1942, 1350, 0, 1350, 0, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 1975, 0, 0, 1985, 0, 0, 289,
	0, 0, 0, 1964, 1966, 0, 0, 1507, 0, 0,
	0, 0, 0, 289, 0, 0, 0, 0, 0, 0,
	1981, 0, 1982, 0, 0, 0, 289, 0, 1508, 1951,
	1952, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 0, 289, 1510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 289, 0, 0,
	0, 1510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 289, 0, 289, 0, 0,
	0, 0, 1508, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 1510, 0, 1510, 0, 0, 0, 0,
	0, 1510, 1963, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 1510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 0, 0, 289, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 0, 0, 1976, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 0, 1629, 0, 0, 0,
	1507, 0, 0, 0, 0, 0, 0, 894, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 1629, 0, 0, 0, 289, 289, 289, 289, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 1629, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 1629, 0, 1629, 0, 0, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 1629, 0,
	1629, 0, 1629, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	0, 1630, 0, 1630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 1630,
	1630, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 0, 0, 1934, 1935, 0, 1967, 1968,
	1969, 1978, 1979, 1980, 0, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 1965,
	0, 0, 0, 0, 0, 0, 0, 1937, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 0,
	0, 0, 0, 1936, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1956, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1508, 0, 0, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 0, 0, 0, 0, 0, 0,
	0, 1959, 1960, 1961, 1962, 0, 0, 0, 1510, 0,
	0, 1942, 0, 894, 0, 0, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 1975, 0, 0, 1985, 289, 0,
	0, 0, 289, 289, 1964, 1966, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1981, 0, 1982, 0, 0, 0, 0, 0, 0,
	1951, 1952, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1973, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 0, 1957, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 289, 0, 1508, 289, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 1629, 289, 1629, 0, 0, 0, 1629, 0,
	0, 1629, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 0, 1972, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1629, 0, 0, 0,
	0, 1510, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 1963, 0, 1510, 0, 1510, 0, 0,
	1629, 1510, 0, 0, 0, 1629, 1629, 1629, 289, 1510,
	0, 0, 0, 0, 0, 0, 1958, 0, 289, 1508,
	0, 289, 1510, 0, 0, 0, 0, 0, 1629, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 289, 0, 0, 1976, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 0, 1510, 0, 0, 0, 0, 1989, 0,
	0, 0, 0, 0, 0, 1510, 0, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	0, 1510, 0, 1510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 0, 0, 0, 0, 0,
	0, 1510, 0, 289, 1510, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 1974, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954,
	1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943,
	1944, 0, 289, 0, 0, 0, 5020, 0, 0, 1507,
	1507, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 1630, 0, 0, 0, 0, 0, 1510, 0,
	0, 0, 0, 0, 0, 1630, 0, 1630, 0, 0,
	0, 0, 0, 1630, 0, 1934, 1935, 0, 1967, 1968,
	1969, 1978, 1979, 1980, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 1965,
	0, 0, 0, 0, 0, 0, 0, 1937, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1984, 0, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 0,
	0, 0, 0, 1936, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 0, 1956, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1629, 1629,
	0, 0, 0, 1510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 1629, 0, 0, 0, 0, 0,
	0, 1959, 1960, 1961, 1962, 0, 0, 0, 0, 0,
	0, 1942, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 1629, 1629, 1629, 1629, 1629, 1629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1975, 0, 0, 1985, 0, 0,
	0, 0, 0, 0, 1964, 1966, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 1981, 0, 1982, 0, 0, 0, 0, 0, 0,
	1951, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1973, 0,
	0, 0, 0, 0, 0, 0, 1507, 289, 1629, 0,
	0, 0, 0, 1957, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 1510, 0, 1510, 0, 0, 0, 1510,
	0, 0, 1510, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 0, 0, 289, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 1972, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 1987, 0, 289, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 0,
	0, 1510, 0, 0, 0, 0, 1510, 1510, 1510, 0,
	0, 0, 1508, 0, 0, 0, 1629, 1629, 1629, 0,
	0, 0, 0, 1963, 0, 0, 0, 0, 0, 1510,
	0, 1510, 0, 0, 0, 289, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 1508, 1958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 0, 1507, 1510, 0,
	1629, 0, 0, 0, 1976, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1934,
	1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 1989, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 1965, 0, 0, 0, 0, 0, 0,
	0, 1937, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 0, 0, 0, 0, 1936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1956, 0,
	0, 0, 0, 0, 1974, 0, 0, 1953, 0, 0,
	1510, 1510, 0, 1510, 0, 1948, 1949, 1955, 1977, 1954,
	1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943,
	1944, 1510, 1510, 0, 0, 0, 0, 0, 0, 0,
	3490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 1508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 1960, 1961, 1962, 0,
	0, 0, 0, 0, 0, 1942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1629, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 1629, 0, 0, 0,
	0, 0, 0, 1630, 1510, 0, 0, 289, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 1630, 1975, 1630,
	0, 1985, 0, 1508, 0, 0, 0, 1510, 1964, 1966,
	0, 1630, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 0, 0, 0, 1630, 1981, 0, 1982, 0, 0,
	0, 0, 0, 0, 1951, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	1510, 0, 1973, 0, 0, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 0, 0, 0, 1957, 0, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 1630, 0, 1630,
	1510, 289, 0, 0, 0, 1510, 0, 0, 0, 0,
	0, 1630, 0, 1630, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1983, 0, 0, 0,
	0, 1510, 1510, 1510, 1510, 1510, 1510, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	0, 0, 0, 1508, 1510, 0, 1508, 0, 1987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 1510,
	0, 0, 0, 1508, 0, 0, 0, 0, 0, 0,
	1958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1976, 0,
	0, 0, 0, 0, 0, 1510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 1510, 1510,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 1948,
	1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938,
	1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3489, 0, 0, 0, 1510, 0,
	0, 1510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 1965, 0, 1630, 1630, 0, 1630, 0, 0,
	1937, 1630, 0, 0, 1630, 0, 0, 0, 289, 0,
	1984, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 0, 0, 0, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 1630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 0, 0, 0, 1630, 1630,
	1630, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 1630, 1959, 1960, 1961, 1962, 0, 0,
	0, 0, 1508, 0, 1942, 0, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 0, 0, 0, 1981, 0, 1982, 0, 0, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1957, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1934, 1935, 0,
	1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 0, 0,
	0, 0, 1508, 1508, 0, 1508, 0, 0, 0, 0,
	1971, 1965, 0, 0, 0, 1983, 0, 0, 0, 1937,
	0, 0, 0, 1630, 1630, 0, 0, 0, 0, 1984,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 1508, 0, 0, 1990, 1987, 0, 0,
	0, 0, 0, 0, 0, 1936, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1958,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 1960, 1961, 1962, 1976, 0, 0,
	0, 0, 0, 1942, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1975, 0, 0, 1985,
	0, 0, 0, 0, 0, 0, 1964, 1966, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 1981, 0, 1982, 0, 0, 0, 0,
	0, 0, 1951, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1630, 1630, 1630, 1630, 1630, 1630, 1630,
	1973, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 0, 0, 0, 0, 1957, 1508, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3486, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 0, 0, 0, 1508,
	0, 1630, 0, 0, 0, 0, 1987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1958, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1976, 0, 0, 0,
	0, 1508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	1630, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	1989, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 0, 1630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1948, 1949, 1955,
	1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940,
	1941, 1943, 1944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1505, 1630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 1511, 305, 306, 1512, 1513, 1514, 0,
	1515, 687, 1516, 1517, 1518, 307, 1519, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 1520, 692, 319, 320, 321, 322,
	323, 324, 1521, 1522, 0, 325, 693, 694, 695, 1523,
	326, 327, 696, 1524, 1591, 1525, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 1526, 337, 338, 339, 336,
	340, 1527, 341, 1630, 342, 343, 344, 345, 346, 347,
	1528, 348, 349, 350, 1290, 351, 352, 353, 1529, 1530,
	1532, 1531, 1533, 1534, 1535, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 1536, 364, 360, 362, 1537,
	365, 363, 366, 1538, 367, 368, 369, 1539, 1540, 370,
	371, 372, 1541, 373, 374, 375, 1542, 376, 377, 378,
	1543, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 1544, 294,
	1545, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 1546, 397, 398, 399, 1547, 400, 401,
	1548, 1291, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 1549, 414, 705, 1550,
	706, 415, 1551, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 1293, 423, 424, 1552, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	1553, 1292, 512, 433, 710, 711, 1554, 712, 1555, 434,
	435, 1294, 713, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 1556, 446,
	448, 447, 1557, 449, 714, 1297, 450, 451, 1298, 1558,
	452, 453, 454, 455, 456, 457, 460, 1559, 1560, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1561, 296, 1301, 506, 507, 508, 509, 1562, 715, 510,
	716, 513, 514, 1563, 0, 515, 0, 516, 1564, 1565,
	518, 519, 520, 1566, 1567, 521, 522, 717, 1302, 523,
	1303, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 1568, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	1569, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 1570,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 1571, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	1572, 605, 606, 604, 607, 608, 609, 1573, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 1574, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 1575, 640, 641, 0, 636,
	627, 1576, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 1577, 650, 728, 729, 730, 731, 1578, 660, 1579,
	651, 652, 653, 654, 732, 655, 733, 1580, 656, 657,
	658, 659, 0, 661, 662, 1581, 1582, 663, 664, 666,
	668, 669, 665, 667, 670, 1583, 671, 1584, 0, 672,
	673, 674, 734, 735, 736, 1585, 676, 675, 677, 678,
	679, 737, 680, 681, 1586, 1587, 1588, 1589, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 0, 2947, 0, 0, 0, 0, 0, 0,
	0, 2948, 297, 298, 300, 299, 301, 302, 303, 304,
	1511, 305, 306, 1512, 1513, 1514, 0, 1515, 687, 1516,
	1517, 1518, 307, 1519, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 1520, 692, 319, 320, 321, 322, 323, 324, 1521,
	1522, 0, 325, 693, 694, 695, 1523, 326, 327, 696,
	1524, 1591, 1525, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 1526, 337, 338, 339, 336, 340, 1527, 341,
	0, 342, 343, 344, 345, 346, 347, 1528, 348, 349,
	350, 1290, 351, 352, 353, 1529, 1530, 1532, 1531, 1533,
	1534, 1535, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 1536, 364, 360, 362, 1537, 365, 363, 366,
	1538, 367, 368, 369, 1539, 1540, 370, 371, 372, 1541,
	373, 374, 375, 1542, 376, 377, 378, 1543, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 1544, 294, 1545, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	1546, 397, 398, 399, 1547, 400, 401, 1548, 1291, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 1549, 414, 705, 1550, 706, 415, 1551,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 1293, 423, 424, 1552, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 1553, 1292, 512,
	433, 710, 711, 1554, 712, 1555, 434, 435, 1294, 713,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 1556, 446, 448, 447, 1557,
	449, 714, 1297, 450, 451, 1298, 1558, 452, 453, 454,
	455, 456, 457, 460, 1559, 1560, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 1561, 296, 1301,
	506, 507, 508, 509, 1562, 715, 510, 716, 513, 514,
	1563, 0, 515, 0, 516, 1564, 1565, 518, 519, 520,
	1566, 1567, 521, 522, 717, 1302, 523, 1303, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 1568, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 1569, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 1570, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 1571, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 1572, 605, 606,
	604, 607, 608, 609, 1573, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 1574, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 1575, 640, 641, 0, 636, 627, 1576, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 1577, 650,
	728, 729, 730, 731, 1578, 660, 1579, 651, 652, 653,
	654, 732, 655, 733, 1580, 656, 657, 658, 659, 0,
	661, 662, 1581, 1582, 663, 664, 666, 668, 669, 665,
	667, 670, 1583, 671, 1584, 0, 672, 673, 674, 734,
	735, 736, 1585, 676, 675, 677, 678, 679, 737, 680,
	681, 1586, 1587, 1588, 1589, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 0, 0, 0, 3989, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3991, 297, 298, 300,
	299, 301, 302, 303, 304, 1511, 305, 306, 1512, 1513,
	1514, 0, 1515, 687, 1516, 1517, 1518, 307, 1519, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 1520, 692, 319, 320,
	321, 322, 323, 324, 1521, 1522, 0, 325, 693, 694,
	695, 1523, 326, 327, 696, 1524, 1591, 1525, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 1526, 337, 338,
	339, 336, 340, 1527, 341, 0, 342, 343, 344, 345,
	346, 347, 1528, 348, 349, 350, 1290, 351, 352, 353,
	1529, 1530, 1532, 1531, 1533, 1534, 1535, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 1536, 364, 360,
	362, 1537, 365, 363, 366, 1538, 367, 368, 369, 1539,
	1540, 370, 371, 372, 1541, 373, 374, 375, 1542, 376,
	377, 378, 1543, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	1544, 294, 1545, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 1546, 397, 398, 399, 1547,
	400, 401, 1548, 1291, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 1549, 414,
	705, 1550, 706, 415, 1551, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 1293, 423, 424, 1552,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 1553, 1292, 512, 433, 710, 711, 1554, 712,
	1555, 434, 435, 1294, 713, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	1556, 446, 448, 447, 1557, 449, 714, 1297, 450, 451,
	1298, 1558, 452, 453, 454, 455, 456, 457, 460, 1559,
	1560, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1561, 296, 1301, 506, 507, 508, 509, 1562,
	715, 510, 716, 513, 514, 1563, 0, 515, 0, 516,
	1564, 1565, 518, 519, 520, 1566, 1567, 521, 522, 717,
	1302, 523, 1303, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 1568, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 1569, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 1570, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 1571, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 1572, 605, 606, 604, 607, 608, 609, 1573,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 1574, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 1575, 640, 641,
	0, 636, 627, 1576, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 1577, 650, 728, 729, 730, 731, 1578,
	660, 1579, 651, 652, 653, 654, 732, 655, 733, 1580,
	656, 657, 658, 659, 0, 661, 662, 1581, 1582, 663,
	664, 666, 668, 669, 665, 667, 670, 1583, 671, 1584,
	0, 672, 673, 674, 734, 735, 736, 1585, 676, 675,
	677, 678, 679, 737, 680, 681, 1586, 1587, 1588, 1589,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4427, 297, 298, 300, 299,
	301, 302, 303, 304, 1511, 305, 306, 1512, 1513, 1514,
	0, 1515, 687, 1516, 1517, 1518, 307, 1519, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 1520, 692, 319, 320, 321,
	322, 323, 324, 1521, 1522, 0, 325, 693, 694, 695,
	1523, 326, 327, 696, 1524, 1591, 1525, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 1526, 337, 338, 339,
	336, 340, 1527, 341, 0, 342, 343, 344, 345, 346,
	347, 1528, 348, 349, 350, 1290, 351, 352, 353, 1529,
	1530, 1532, 1531, 1533, 1534, 1535, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 1536, 364, 360, 362,
	1537, 365, 363, 366, 1538, 367, 368, 369, 1539, 1540,
	370, 371, 372, 1541, 373, 374, 375, 1542, 376, 377,
	378, 1543, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 1544,
	294, 1545, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 1546, 397, 398, 399, 1547, 400,
	401, 1548, 1291, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 1549, 414, 705,
	1550, 706, 415, 1551, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 1293, 423, 424, 1552, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 1553, 1292, 512, 433, 710, 711, 1554, 712, 1555,
	434, 435, 1294, 713, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 1556,
	446, 448, 447, 1557, 449, 714, 1297, 450, 451, 1298,
	1558, 452, 453, 454, 455, 456, 457, 460, 1559, 1560,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 1561, 296, 1301, 506, 507, 508, 509, 1562, 715,
	510, 716, 513, 514, 1563, 0, 515, 0, 516, 1564,
	1565, 518, 519, 520, 1566, 1567, 521, 522, 717, 1302,
	523, 1303, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 1568, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 1569, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	1570, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 1571, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 1572, 605, 606, 604, 607, 608, 609, 1573, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 1574, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 1575, 640, 641, 0,
	636, 627, 1576, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 1577, 650, 728, 729, 730, 731, 1578, 660,
	1579, 651, 652, 653, 654, 732, 655, 733, 1580, 656,
	657, 658, 659, 0, 661, 662, 1581, 1582, 663, 664,
	666, 668, 669, 665, 667, 670, 1583, 671, 1584, 0,
	672, 673, 674, 734, 735, 736, 1585, 676, 675, 677,
	678, 679, 737, 680, 681, 1586, 1587, 1588, 1589, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4425, 297, 298, 300, 299, 301,
	302, 303, 304, 1511, 305, 306, 1512, 1513, 1514, 0,
	1515, 687, 1516, 1517, 1518, 307, 1519, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 1520, 692, 319, 320, 321, 322,
	323, 324, 1521, 1522, 0, 325, 693, 694, 695, 1523,
	326, 327, 696, 1524, 1591, 1525, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 1526, 337, 338, 339, 336,
	340, 1527, 341, 0, 342, 343, 344, 345, 346, 347,
	1528, 348, 349, 350, 1290, 351, 352, 353, 1529, 1530,
	1532, 1531, 1533, 1534, 1535, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 1536, 364, 360, 362, 1537,
	365, 363, 366, 1538, 367, 368, 369, 1539, 1540, 370,
	371, 372, 1541, 373, 374, 375, 1542, 376, 377, 378,
	1543, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 1544, 294,
	1545, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 1546, 397, 398, 399, 1547, 400, 401,
	1548, 1291, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 1549, 414, 705, 1550,
	706, 415, 1551, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 1293, 423, 424, 1552, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	1553, 1292, 512, 433, 710, 711, 1554, 712, 1555, 434,
	435, 1294, 713, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 1556, 446,
	448, 447, 1557, 449, 714, 1297, 450, 451, 1298, 1558,
	452, 453, 454, 455, 456, 457, 460, 1559, 1560, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1561, 296, 1301, 506, 507, 508, 509, 1562, 715, 510,
	716, 513, 514, 1563, 0, 515, 0, 516, 1564, 1565,
	518, 519, 520, 1566, 1567, 521, 522, 717, 1302, 523,
	1303, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 1568, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	1569, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 1570,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 1571, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	1572, 605, 606, 604, 607, 608, 609, 1573, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 1574, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 1575, 640, 641, 0, 636,
	627, 1576, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 1577, 650, 728, 729, 730, 731, 1578, 660, 1579,
	651, 652, 653, 654, 732, 655, 733, 1580, 656, 657,
	658, 659, 0, 661, 662, 1581, 1582, 663, 664, 666,
	668, 669, 665, 667, 670, 1583, 671, 1584, 0, 672,
	673, 674, 734, 735, 736, 1585, 676, 675, 677, 678,
	679, 737, 680, 681, 1586, 1587, 1588, 1589, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4670, 297, 298,
	300, 299, 301, 302, 303, 304, 1511, 305, 306, 1512,
	1513, 1514, 0, 1515, 687, 1516, 1517, 1518, 307, 1519,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 1520, 692, 319,
	320, 321, 322, 323, 324, 1521, 1522, 0, 325, 693,
	694, 695, 1523, 326, 327, 696, 1524, 1591, 1525, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 1526, 337,
	338, 339, 336, 340, 1527, 341, 0, 342, 343, 344,
	345, 346, 347, 1528, 348, 349, 350, 1290, 351, 352,
	353, 1529, 1530, 1532, 1531, 1533, 1534, 1535, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 1536, 364,
	360, 362, 1537, 365, 363, 366, 1538, 367, 368, 369,
	1539, 1540, 370, 371, 372, 1541, 373, 374, 375, 1542,
	376, 377, 378, 1543, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 1544, 294, 1545, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 1546, 397, 398, 399,
	1547, 400, 401, 1548, 1291, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 1549,
	414, 705, 1550, 706, 415, 1551, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 1293, 423, 424,
	1552, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 1553, 1292, 512, 433, 710, 711, 1554,
	712, 1555, 434, 435, 1294, 713, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 1556, 446, 448, 447, 1557, 449, 714, 1297, 450,
	451, 1298, 1558, 452, 453, 454, 455, 456, 457, 460,
	1559, 1560, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 1561, 296, 1301, 506, 507, 508, 509,
	1562, 715, 510, 716, 513, 514, 1563, 0, 515, 0,
	516, 1564, 1565, 518, 519, 520, 1566, 1567, 521, 522,
	717, 1302, 523, 1303, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 1568, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 1569, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 1570, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 1571, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 1572, 605, 606, 604, 607, 608, 609,
	1573, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 1574, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 1575, 640,
	641, 0, 636, 627, 1576, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 1577, 650, 728, 729, 730, 731,
	1578, 660, 1579, 651, 652, 653, 654, 732, 655, 733,
	1580, 656, 657, 658, 659, 0, 661, 662, 1581, 1582,
	663, 664, 666, 668, 669, 665, 667, 670, 1583, 671,
	1584, 0, 672, 673, 674, 734, 735, 736, 1585, 676,
	675, 677, 678, 679, 737, 680, 681, 1586, 1587, 1588,
	1589, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 1505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4531, 297, 298, 300, 299, 301, 302, 303, 304, 1511,
	305, 306, 1512, 1513, 1514, 0, 1515, 687, 1516, 1517,
	1518, 307, 1519, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	1520, 692, 319, 320, 321, 322, 323, 324, 1521, 1522,
	0, 325, 693, 694, 695, 1523, 326, 327, 696, 1524,
	1591, 1525, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 1526, 337, 338, 339, 336, 340, 1527, 341, 0,
	342, 343, 344, 345, 346, 347, 1528, 348, 349, 350,
	1290, 351, 352, 353, 1529, 1530, 1532, 1531, 1533, 1534,
	1535, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 1536, 364, 360, 362, 1537, 365, 363, 366, 1538,
	367, 368, 369, 1539, 1540, 370, 371, 372, 1541, 373,
	374, 375, 1542, 376, 377, 378, 1543, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 1544, 294, 1545, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 1546,
	397, 398, 399, 1547, 400, 401, 1548, 1291, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 1549, 414, 705, 1550, 706, 415, 1551, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	1293, 423, 424, 1552, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 1553, 1292, 512, 433,
	710, 711, 1554, 712, 1555, 434, 435, 1294, 713, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 1556, 446, 448, 447, 1557, 449,
	714, 1297, 450, 451, 1298, 1558, 452, 453, 454, 455,
	456, 457, 460, 1559, 1560, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1561, 296, 1301, 506,
	507, 508, 509, 1562, 715, 510, 716, 513, 514, 1563,
	0, 515, 0, 516, 1564, 1565, 518, 519, 520, 1566,
	1567, 521, 522, 717, 1302, 523, 1303, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	1568, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 1569, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 1570, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	1571, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 1572, 605, 606, 604,
	607, 608, 609, 1573, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 1574, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 1575, 640, 641, 0, 636, 627, 1576, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 1577, 650, 728,
	729, 730, 731, 1578, 660, 1579, 651, 652, 653, 654,
	732, 655, 733, 1580, 656, 657, 658, 659, 0, 661,
	662, 1581, 1582, 663, 664, 666, 668, 669, 665, 667,
	670, 1583, 671, 1584, 0, 672, 673, 674, 734, 735,
	736, 1585, 676, 675, 677, 678, 679, 737, 680, 681,
	1586, 1587, 1588, 1589, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 1505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4354, 297, 298, 300, 299, 301, 302,
	303, 304, 1511, 305, 306, 1512, 1513, 1514, 0, 1515,
	687, 1516, 1517, 1518, 307, 1519, 308, 309, 1289, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 1520, 692, 319, 320, 321, 322, 323,
	324, 1521, 1522, 0, 325, 693, 694, 695, 1523, 326,
	327, 696, 1524, 1591, 1525, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 1526, 337, 338, 339, 336, 340,
	1527, 341, 0, 342, 343, 344, 345, 346, 347, 1528,
	348, 349, 350, 1290, 351, 352, 353, 1529, 1530, 1532,
	1531, 1533, 1534, 1535, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 1536, 364, 360, 362, 1537, 365,
	363, 366, 1538, 367, 368, 369, 1539, 1540, 370, 371,
	372, 1541, 373, 374, 375, 1542, 376, 377, 378, 1543,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 1544, 294, 1545,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 1546, 397, 398, 399, 1547, 400, 401, 1548,
	1291, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 1549, 414, 705, 1550, 706,
	415, 1551, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 1293, 423, 424, 1552, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 1553,
	1292, 512, 433, 710, 711, 1554, 712, 1555, 434, 435,
	1294, 713, 1295, 436, 437, 438, 1296, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 1556, 446, 448,
	447, 1557, 449, 714, 1297, 450, 451, 1298, 1558, 452,
	453, 454, 455, 456, 457, 460, 1559, 1560, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1299, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1300, 504, 492, 1561,
	296, 1301, 506, 507, 508, 509, 1562, 715, 510, 716,
	513, 514, 1563, 0, 515, 0, 516, 1564, 1565, 518,
	519, 520, 1566, 1567, 521, 522, 717, 1302, 523, 1303,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 1568, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 1569,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 1570, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 1571, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 1572,
	605, 606, 604, 607, 608, 609, 1573, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 1574, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 1575, 640, 641, 0, 636, 627,
	1576, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	1577, 650, 728, 729, 730, 731, 1578, 660, 1579, 651,
	652, 653, 654, 732, 655, 733, 1580, 656, 657, 658,
	659, 0, 661, 662, 1581, 1582, 663, 664, 666, 668,
	669, 665, 667, 670, 1583, 671, 1584, 0, 672, 673,
	674, 734, 735, 736, 1585, 676, 675, 677, 678, 679,
	737, 680, 681, 1586, 1587, 1588, 1589, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	1505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4007, 297, 298, 300,
	299, 301, 302, 303, 304, 1511, 305, 306, 1512, 1513,
	1514, 0, 1515, 687, 1516, 1517, 1518, 307, 1519, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 1520, 692, 319, 320,
	321, 322, 323, 324, 1521, 1522, 0, 325, 693, 694,
	695, 1523, 326, 327, 696, 1524, 1591, 1525, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 1526, 337, 338,
	339, 336, 340, 1527, 341, 0, 342, 343, 344, 345,
	346, 347, 1528, 348, 349, 350, 1290, 351, 352, 353,
	1529, 1530, 1532, 1531, 1533, 1534, 1535, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 1536, 364, 360,
	362, 1537, 365, 363, 366, 1538, 367, 368, 369, 1539,
	1540, 370, 371, 372, 1541, 373, 374, 375, 1542, 376,
	377, 378, 1543, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	1544, 294, 1545, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 1546, 397, 398, 399, 1547,
	400, 401, 1548, 1291, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 1549, 414,
	705, 1550, 706, 415, 1551, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 1293, 423, 424, 1552,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 1553, 1292, 512, 433, 710, 711, 1554, 712,
	1555, 434, 435, 1294, 713, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	1556, 446, 448, 447, 1557, 449, 714, 1297, 450, 451,
	1298, 1558, 452, 453, 454, 455, 456, 457, 460, 1559,
	1560, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1561, 296, 1301, 506, 507, 508, 509, 1562,
	715, 510, 716, 513, 514, 1563, 0, 515, 0, 516,
	1564, 1565, 518, 519, 520, 1566, 1567, 521, 522, 717,
	1302, 523, 1303, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 1568, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 1569, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 1570, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 1571, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 1572, 605, 606, 604, 607, 608, 609, 1573,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 1574, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 1575, 640, 641,
	0, 636, 627, 1576, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 1577, 650, 728, 729, 730, 731, 1578,
	660, 1579, 651, 652, 653, 654, 732, 655, 733, 1580,
	656, 657, 658, 659, 0, 661, 662, 1581, 1582, 663,
	664, 666, 668, 669, 665, 667, 670, 1583, 671, 1584,
	0, 672, 673, 674, 734, 735, 736, 1585, 676, 675,
	677, 678, 679, 737, 680, 681, 1586, 1587, 1588, 1589,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3818,
	297, 298, 300, 299, 301, 302, 303, 304, 1511, 305,
	306, 1512, 1513, 1514, 0, 1515, 687, 1516, 1517, 1518,
	307, 1519, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 1520,
	692, 319, 320, 321, 322, 323, 324, 1521, 1522, 0,
	325, 693, 694, 695, 1523, 326, 327, 696, 1524, 1591,
	1525, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	1526, 337, 338, 339, 336, 340, 1527, 341, 0, 342,
	343, 344, 345, 346, 347, 1528, 348, 349, 350, 1290,
	351, 352, 353, 1529, 1530, 1532, 1531, 1533, 1534, 1535,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	1536, 364, 360, 362, 1537, 365, 363, 366, 1538, 367,
	368, 369, 1539, 1540, 370, 371, 372, 1541, 373, 374,
	375, 1542, 376, 377, 378, 1543, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 1544, 294, 1545, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 1546, 397,
	398, 399, 1547, 400, 401, 1548, 1291, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 1549, 414, 705, 1550, 706, 415, 1551, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 1293,
	423, 424, 1552, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 1553, 1292, 512, 433, 710,
	711, 1554, 712, 1555, 434, 435, 1294, 713, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 1556, 446, 448, 447, 1557, 449, 714,
	1297, 450, 451, 1298, 1558, 452, 453, 454, 455, 456,
	457, 460, 1559, 1560, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 1561, 296, 1301, 506, 507,
	508, 509, 1562, 715, 510, 716, 513, 514, 1563, 0,
	515, 0, 516, 1564, 1565, 518, 519, 520, 1566, 1567,
	521, 522, 717, 1302, 523, 1303, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 1568,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 1569, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 1570, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 1571,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 1572, 605, 606, 604, 607,
	608, 609, 1573, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	1574, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	1575, 640, 641, 0, 636, 627, 1576, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 1577, 650, 728, 729,
	730, 731, 1578, 660, 1579, 651, 652, 653, 654, 732,
	655, 733, 1580, 656, 657, 658, 659, 0, 661, 662,
	1581, 1582, 663, 664, 666, 668, 669, 665, 667, 670,
	1583, 671, 1584, 0, 672, 673, 674, 734, 735, 736,
	1585, 676, 675, 677, 678, 679, 737, 680, 681, 1586,
	1587, 1588, 1589, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 1505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2801, 297, 298, 300, 299, 301, 302, 303,
	304, 1511, 305, 306, 1512, 1513, 1514, 0, 1515, 687,
	1516, 1517, 1518, 307, 1519, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 1520, 692, 319, 320, 321, 322, 323, 324,
	1521, 1522, 0, 325, 693, 694, 695, 1523, 326, 327,
	696, 1524, 1591, 1525, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 1526, 337, 338, 339, 336, 340, 1527,
	341, 0, 342, 343, 344, 345, 346, 347, 1528, 348,
	349, 350, 1290, 351, 352, 353, 1529, 1530, 1532, 1531,
	1533, 1534, 1535, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 1536, 364, 360, 362, 1537, 365, 363,
	366, 1538, 367, 368, 369, 1539, 1540, 370, 371, 372,
	1541, 373, 374, 375, 1542, 376, 377, 378, 1543, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 1544, 294, 1545, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 1546, 397, 398, 399, 1547, 400, 401, 1548, 1291,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 1549, 414, 705, 1550, 706, 415,
	1551, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 1293, 423, 424, 1552, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 1553, 1292,
	512, 433, 710, 711, 1554, 712, 1555, 434, 435, 1294,
	713, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 1556, 446, 448, 447,
	1557, 449, 714, 1297, 450, 451, 1298, 1558, 452, 453,
	454, 455, 456, 457, 460, 1559, 1560, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 1561, 296,
	1301, 506, 507, 508, 509, 1562, 715, 510, 716, 513,
	514, 1563, 0, 515, 0, 516, 1564, 1565, 518, 519,
	520, 1566, 1567, 521, 522, 717, 1302, 523, 1303, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 1568, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 1569, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 1570, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 1571, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 1572, 605,
	606, 604, 607, 608, 609, 1573, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 1574, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 1575, 640, 641, 0, 636, 627, 1576,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 1577,
	650, 728, 729, 730, 731, 1578, 660, 1579, 651, 652,
	653, 654, 732, 655, 733, 1580, 656, 657, 658, 659,
	0, 661, 662, 1581, 1582, 663, 664, 666, 668, 669,
	665, 667, 670, 1583, 671, 1584, 0, 672, 673, 674,
	734, 735, 736, 1585, 676, 675, 677, 678, 679, 737,
	680, 681, 1586, 1587, 1588, 1589, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 1502, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2422, 297, 298, 300, 299,
	301, 302, 303, 304, 1511, 305, 306, 1512, 1513, 1514,
	0, 1515, 687, 1516, 1517, 1518, 307, 1519, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 1520, 692, 319, 320, 321,
	322, 323, 324, 1521, 1522, 0, 325, 693, 694, 695,
	1523, 326, 327, 696, 1524, 1591, 1525, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 1526, 337, 338, 339,
	336, 340, 1527, 341, 0, 342, 343, 344, 345, 346,
	347, 1528, 348, 349, 350, 1290, 351, 352, 353, 1529,
	1530, 1532, 1531, 1533, 1534, 1535, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 1536, 364, 360, 362,
	1537, 365, 363, 366, 1538, 367, 368, 369, 1539, 1540,
	370, 371, 372, 1541, 373, 374, 375, 1542, 376, 377,
	378, 1543, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 1544,
	294, 1545, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 1546, 397, 398, 399, 1547, 400,
	401, 1548, 1291, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 1549, 414, 705,
	1550, 706, 415, 1551, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 1293, 423, 424, 1552, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 1553, 1292, 512, 433, 710, 711, 1554, 712, 1555,
	434, 435, 1294, 713, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 1556,
	446, 448, 447, 1557, 449, 714, 1297, 450, 451, 1298,
	1558, 452, 453, 454, 455, 456, 457, 460, 1559, 1560,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 1561, 296, 1301, 506, 507, 508, 509, 1562, 715,
	510, 716, 513, 514, 1563, 0, 515, 0, 516, 1564,
	1565, 518, 519, 520, 1566, 1567, 521, 522, 717, 1302,
	523, 1303, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 1568, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 1569, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	1570, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 1571, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 1572, 605, 606, 604, 607, 608, 609, 1573, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 1574, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 1575, 640, 641, 0,
	636, 627, 1576, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 1577, 650, 728, 729, 730, 731, 1578, 660,
	1579, 651, 652, 653, 654, 732, 655, 733, 1580, 656,
	657, 658, 659, 0, 661, 662, 1581, 1582, 663, 664,
	666, 668, 669, 665, 667, 670, 1583, 671, 1584, 0,
	672, 673, 674, 734, 735, 736, 1585, 676, 675, 677,
	678, 679, 737, 680, 681, 1586, 1587, 1588, 1589, 682,
	683, 738, 684, 685, 686, 1505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	1511, 305, 306, 1512, 1513, 1514, 0, 1515, 687, 1516,
	1517, 1518, 307, 1519, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 1520, 692, 319, 320, 321, 322, 323, 324, 1521,
	1522, 0, 325, 693, 694, 695, 1523, 326, 327, 696,
	1524, 1591, 1525, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 1526, 337, 338, 339, 336, 340, 1527, 341,
	0, 342, 343, 344, 345, 346, 347, 1528, 348, 349,
	350, 1290, 351, 352, 353, 1529, 1530, 1532, 1531, 1533,
	1534, 1535, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 1536, 364, 360, 362, 1537, 365, 363, 366,
	1538, 367, 368, 369, 1539, 1540, 370, 371, 372, 1541,
	373, 374, 375, 1542, 376, 377, 378, 1543, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 1544, 294, 1545, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	1546, 397, 398, 399, 1547, 400, 401, 1548, 1291, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 1549, 414, 705, 1550, 706, 415, 1551,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 1293, 423, 424, 1552, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 1553, 1292, 512,
	433, 710, 711, 1554, 712, 1555, 434, 435, 1294, 713,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 1556, 446, 448, 447, 1557,
	449, 714, 1297, 450, 451, 1298, 1558, 452, 453, 454,
	455, 456, 457, 460, 1559, 1560, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 1561, 296, 1301,
	506, 507, 508, 509, 1562, 715, 510, 716, 513, 514,
	1563, 0, 515, 0, 516, 1564, 1565, 518, 519, 520,
	1566, 1567, 521, 522, 717, 1302, 523, 1303, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 1568, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 1569, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 1570, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 1571, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 1572, 605, 606,
	604, 607, 608, 609, 1573, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 1574, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 1575, 640, 641, 0, 636, 627, 1576, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 1577, 650,
	728, 729, 730, 731, 1578, 660, 1579, 651, 652, 653,
	654, 732, 655, 733, 1580, 656, 657, 658, 659, 0,
	661, 662, 1581, 1582, 663, 664, 666, 668, 669, 665,
	667, 670, 1583, 671, 1584, 0, 672, 673, 674, 734,
	735, 736, 1585, 676, 675, 677, 678, 679, 737, 680,
	681, 1586, 1587, 1588, 1589, 682, 683, 738, 684, 685,
	686, 2776, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 2773, 305,
	306, 0, 0, 0, 0, 0, 1249, 1213, 0, 0,
	307, 0, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 1262, 0, 317, 1269, 318, 1268, 0,
	1279, 319, 320, 321, 322, 323, 324, 1215, 1248, 1180,
	325, 1309, 1310, 695, 0, 326, 327, 1255, 0, 1236,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1290,
	351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244,
	354, 355, 356, 357, 358, 1272, 359, 361, 1266, 1265,
	1185, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 2774, 0, 370, 1257, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1191, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1280, 1281, 392, 1204, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1264, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1291, 402, 403, 404,
	1277, 1278, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1287, 0, 1214, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1250, 1251, 1254, 511, 1293,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1292, 512, 433, 1259,
	1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1288,
	1297, 450, 451, 1298, 0, 452, 453, 454, 455, 456,
	457, 460, 1243, 1242, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 1182, 296, 1301, 506, 507,
	508, 509, 1205, 1253, 510, 1267, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1302, 523, 1303, 1282, 524, 525, 1192,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1283, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1263, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 1193,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1246, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 1261, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1308, 630, 631, 632, 633, 1284, 637, 638, 639,
	0, 640, 641, 1179, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1273, 1274,
	1275, 1276, 0, 660, 0, 651, 652, 653, 654, 1285,
	655, 1286, 1203, 656, 657, 658, 659, 0, 661, 662,
	0, 1186, 663, 664, 666, 668, 669, 665, 667, 670,
	1247, 671, 0, 0, 672, 673, 674, 734, 1270, 1307,
	2772, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1178, 0, 0, 0, 0, 0, 0,
	1176, 1177, 2775, 0, 0, 0, 0, 0, 0, 0,
	1209, 2771, 0, 1169, 1207, 1225, 1197, 1198, 1199, 1195,
	1196, 1208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 1249, 1213,
	0, 0, 307, 0, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 1262, 0, 317, 1269, 318,
	1268, 0, 1279, 319, 320, 321, 322, 323, 324, 1215,
	1248, 1180, 325, 1309, 1310, 695, 0, 326, 327, 1255,
	0, 1236, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241,
	1240, 1244, 354, 355, 356, 357, 358, 1272, 359, 361,
	1266, 1265, 1185, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1257, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1191, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1280, 1281, 392, 1204, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1264, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1291, 402,
	403, 404, 1277, 1278, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1287, 0, 1214, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1250, 1251, 1254,
	511, 1293, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1292, 512,
	433, 1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1288, 1297, 450, 451, 1298, 0, 452, 453, 454,
	455, 456, 457, 460, 1243, 1242, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 1182, 296, 1301,
	506, 507, 508, 509, 1205, 1253, 510, 1267, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1302, 523, 1303, 1282, 524,
	525, 1192, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1283, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1263, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 1193, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 252, 605, 606,
	604, 607, 608, 609, 1246, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 1261,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1308, 630, 631, 632, 633, 1284, 637,
	638, 639, 0, 640, 641, 1179, 636, 627, 254, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1273, 1274, 1275, 1276, 0, 660, 0, 651, 652, 653,
	654, 1285, 655, 1286, 1203, 656, 657, 658, 659, 0,
	661, 662, 0, 1186, 663, 664, 666, 668, 669, 665,
	667, 670, 1247, 671, 0, 0, 672, 673, 674, 1750,
	1270, 1307, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 246, 682, 683, 738, 684, 685,
	686, 1183, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1178, 0, 0, 0, 0,
	0, 0, 1176, 1177, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 2015, 2013, 0, 0, 1207, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 1249, 1213, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 1262, 0, 317, 1269, 318, 1268,
	0, 1279, 319, 320, 321, 322, 323, 324, 1215, 1248,
	1180, 325, 1309, 1310, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 1272, 359, 361, 1266,
	1265, 1185, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1257, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1191,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 1204, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1264, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 1277, 1278, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 1214, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1182, 296, 1301, 506,
	507, 508, 509, 1205, 1253, 510, 1267, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	1192, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1263,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 252, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 254, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 1750, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 246, 682, 683, 738, 684, 685, 686,
	1183, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 1225, 1197, 1198, 1199, 1195, 1196, 1208,
	0, 2015, 3440, 0, 0, 1207, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 1249, 1213, 0, 0,
	307, 0, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 1262, 0, 317, 1269, 318, 1268, 0,
	1279, 319, 320, 321, 322, 323, 324, 1215, 1248, 1180,
	325, 1309, 1310, 695, 0, 326, 327, 1255, 0, 1236,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1290,
	351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244,
	354, 355, 356, 357, 358, 1272, 359, 361, 1266, 1265,
	1185, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1257, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1191, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1280, 1281, 392, 1204, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1264, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1291, 402, 403, 404,
	1277, 1278, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1287, 0, 1214, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1250, 1251, 1254, 511, 1293,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1292, 512, 433, 1259,
	1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1288,
	1297, 450, 451, 1298, 0, 452, 453, 454, 455, 456,
	457, 460, 1243, 1242, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 1182, 296, 1301, 506, 507,
	508, 509, 1205, 1253, 510, 1267, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1302, 523, 1303, 1282, 524, 525, 1192,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1283, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1263, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 1193,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 252, 605, 606, 604, 607,
	608, 609, 1246, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 1261, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1308, 630, 631, 632, 633, 1284, 637, 638, 639,
	0, 640, 641, 1179, 636, 627, 254, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1273, 1274,
	1275, 1276, 0, 660, 0, 651, 652, 653, 654, 1285,
	655, 1286, 1203, 656, 657, 658, 659, 0, 661, 662,
	0, 1186, 663, 664, 666, 668, 669, 665, 667, 670,
	1247, 671, 0, 0, 672, 673, 674, 1750, 1270, 1307,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 246, 682, 683, 738, 684, 685, 686, 1183,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1178, 0, 0, 0, 0, 0, 0,
	1176, 1177, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	2015, 2013, 0, 0, 1207, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 1249, 1213, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 1262, 0, 317, 1269, 318, 1268, 2906, 1279,
	319, 320, 321, 322, 323, 324, 1215, 1248, 1180, 325,
	1309, 1310, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 1272, 359, 361, 1266, 1265, 1185,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1257, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1191, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 1204, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1264, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 2911, 1291, 402, 403, 404, 1277,
	1278, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 1214, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 1259, 1260,
	0, 1220, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 2907, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1182, 296, 1301, 506, 507, 508,
	509, 1205, 1253, 510, 1267, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 1192, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1263, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 2908, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 2821, 0, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 297, 298, 300, 299, 301, 302, 303, 304, 1209,
	305, 306, 0, 1207, 0, 0, 0, 1249, 1213, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 1262, 0, 317, 1269, 318, 1268,
	0, 1279, 319, 320, 321, 322, 323, 324, 1215, 1248,
	1180, 325, 1309, 1310, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 1272, 359, 361, 1266,
	1265, 1185, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1257, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1191,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 1204, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1264, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 1277, 1278, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 1214, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1182, 296, 1301, 506,
	507, 508, 509, 1205, 1253, 510, 1267, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	1192, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1263,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 0, 0, 0, 0, 0, 0, 0,
	0, 1209, 2819, 0, 2818, 1207, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 1249,
	1213, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 1262, 0, 317, 1269,
	318, 1268, 0, 1279, 319, 320, 321, 322, 323, 324,
	1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 1272, 359,
	361, 1266, 1265, 1185, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1257, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1191, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1280, 1281, 392, 1204, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1264, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 1277, 1278, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 1214, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1292,
	512, 433, 1259, 1260, 0, 1220, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 1182, 296,
	1301, 506, 507, 508, 509, 1205, 1253, 510, 1267, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 1192, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1263, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 0, 0, 0, 0, 0,
	0, 0, 0, 1209, 2816, 0, 2815, 1207, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 1249, 1213, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 1262, 0,
	317, 1269, 318, 1268, 0, 1279, 319, 320, 321, 322,
	323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	1272, 359, 361, 1266, 1265, 1185, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1257, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1191, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1280, 1281, 392, 1204, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1264, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 1277, 1278, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	1214, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1250, 1251, 1254, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1292, 512, 433, 1259, 1260, 0, 1220, 0, 434,
	435, 1294, 1252, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1182, 296, 1301, 506, 507, 508, 509, 1205, 1253, 510,
	1267, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 1192, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1263, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 0, 0, 0,
	0, 0, 0, 0, 0, 1209, 2813, 0, 2812, 1207,
	1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 1249, 1213, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	1262, 0, 317, 1269, 318, 1268, 0, 1279, 319, 320,
	321, 322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 1272, 359, 361, 1266, 1265, 1185, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1257, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1191, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	1204, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1264, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 1277, 1278, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 1214, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1250, 1251, 1254, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 1259, 1260, 0, 1220,
	0, 434, 435, 1294, 1252, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1288, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1182, 296, 1301, 506, 507, 508, 509, 1205,
	1253, 510, 1267, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 1192, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1263, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 0,
	0, 0, 0, 0, 0, 0, 0, 1209, 2810, 0,
	1851, 1207, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 1249, 1213, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 1262, 0, 317, 1269, 318, 1268, 0, 1279,
	319, 320, 321, 322, 323, 324, 1215, 1248, 1180, 325,
	1309, 1310, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 1272, 359, 361, 1266, 1265, 1185,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1257, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1191, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 1204, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1264, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 1277,
	1278, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 1214, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 1259, 1260,
	0, 1220, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1182, 296, 1301, 506, 507, 508,
	509, 1205, 1253, 510, 1267, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 1192, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1263, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 1850, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 1172, 0, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 297, 298, 300, 299, 301, 302, 303, 304, 1209,
	305, 306, 0, 1207, 0, 0, 0, 1249, 1213, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 1262, 0, 317, 1269, 318, 1268,
	0, 1279, 319, 320, 321, 322, 323, 324, 1215, 1248,
	1180, 325, 1309, 1310, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 1272, 359, 361, 1266,
	1265, 1185, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1257, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1191,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 1204, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1264, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 1277, 1278, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 1214, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1182, 296, 1301, 506,
	507, 508, 509, 1205, 1253, 510, 1267, 513, 514, 0,
	0, 515, 0, 516, 1187, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	1192, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1263,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 0, 0, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 297, 298, 300, 299, 301, 302, 303,
	304, 1209, 305, 306, 0, 1207, 0, 0, 0, 1249,
	1213, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 1262, 0, 317, 1269,
	318, 1268, 0, 1279, 319, 320, 321, 322, 323, 324,
	1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 5045, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 1272, 359,
	361, 1266, 1265, 1185, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1257, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1191, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1280, 1281, 392, 1204, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1264, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 1277, 1278, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 1214, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1292,
	512, 433, 1259, 1260, 0, 1220, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 1182, 296,
	1301, 506, 507, 508, 509, 1205, 1253, 510, 1267, 513,
	514, 0, 0, 515, 0, 516, 1187, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 1192, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1263, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1183, 0, 0, 0, 0, 0, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 297, 298, 300, 299, 301,
	302, 303, 304, 1209, 305, 306, 0, 1207, 0, 0,
	0, 1249, 1213, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 1262, 0,
	317, 1269, 318, 1268, 0, 1279, 319, 320, 321, 322,
	323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	1272, 359, 361, 1266, 1265, 1185, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1257, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1191, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1280, 1281, 392, 1204, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1264, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 1277, 1278, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	1214, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1250, 1251, 1254, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 2653, 430, 431, 432,
	0, 1292, 512, 433, 1259, 1260, 0, 1220, 0, 434,
	435, 1294, 1252, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1182, 296, 1301, 506, 507, 508, 509, 1205, 1253, 510,
	1267, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 1192, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	2652, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1263, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1183, 0, 0, 0, 0, 0,
	1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 297, 298, 300,
	299, 301, 302, 303, 304, 1209, 305, 306, 0, 1207,
	0, 0, 0, 1249, 1213, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	1262, 0, 317, 1269, 318, 1268, 0, 1279, 319, 320,
	321, 322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	4765, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 1272, 359, 361, 1266, 1265, 1185, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1257, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1191, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	1204, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1264, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 1277, 1278, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 1214, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1250, 1251, 1254, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 1259, 1260, 0, 1220,
	0, 434, 435, 1294, 1252, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1288, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1182, 296, 1301, 506, 507, 508, 509, 1205,
	1253, 510, 1267, 513, 514, 0, 0, 515, 0, 516,
	1187, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 1192, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1263, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1183, 0, 0, 0,
	0, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 297,
	298, 300, 299, 301, 302, 303, 304, 1209, 305, 306,
	0, 1207, 0, 0, 0, 1249, 1213, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 1262, 0, 317, 1269, 318, 1268, 0, 1279,
	319, 320, 321, 322, 323, 324, 1215, 1248, 1180, 325,
	1309, 1310, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 1272, 359, 361, 1266, 1265, 1185,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1257, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1191, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 1204, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1264, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 1277,
	1278, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 1214, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 1259, 1260,
	0, 1220, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1182, 296, 1301, 506, 507, 508,
	509, 1205, 1253, 510, 1267, 513, 514, 0, 0, 515,
	0, 516, 1187, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 1192, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1263, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 0, 0, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 297, 298, 300, 299, 301, 302, 303, 304, 1209,
	305, 306, 0, 1207, 0, 0, 0, 1249, 1213, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 1262, 0, 317, 1269, 318, 1268,
	0, 1279, 319, 320, 321, 322, 323, 324, 1215, 1248,
	1180, 325, 1309, 1310, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 1272, 359, 361, 1266,
	1265, 1185, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1257, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1191,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 1204, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1264, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 1277, 1278, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 1214, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1182, 4316, 1301, 506,
	507, 508, 509, 1205, 1253, 510, 1267, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	1192, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1263,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 2085, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 1209, 0, 0, 0, 1207, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 1249, 1213, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 1262, 0, 317, 1269, 318, 1268,
	0, 1279, 319, 320, 321, 322, 323, 324, 1215, 1248,
	1180, 325, 1309, 1310, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 1272, 359, 361, 1266,
	1265, 1185, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1257, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1191,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 1204, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1264, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 1277, 1278, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 1214, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1182, 296, 1301, 506,
	507, 508, 509, 1205, 1253, 510, 1267, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	1192, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1263,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 3985, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 0, 0, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 297, 298, 300, 299, 301, 302, 303,
	304, 1209, 305, 306, 0, 1207, 0, 0, 0, 1249,
	1213, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 1262, 0, 317, 1269,
	318, 1268, 0, 1279, 319, 320, 321, 322, 323, 324,
	1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 1272, 359,
	361, 1266, 1265, 1185, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1257, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1191, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1280, 1281, 392, 1204, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1264, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 1277, 1278, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 1214, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1292,
	512, 433, 1259, 1260, 0, 1220, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 1182, 296,
	1301, 506, 507, 508, 509, 1205, 1253, 510, 1267, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 1192, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1263, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 2085, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 1209, 0, 0, 0, 1207, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 1249,
	1213, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 1262, 0, 317, 1269,
	318, 1268, 0, 1279, 319, 320, 321, 322, 323, 324,
	1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 1272, 359,
	361, 1266, 1265, 1185, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1257, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1191, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1280, 1281, 392, 1204, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1264, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 2911, 1291,
	402, 403, 404, 1277, 1278, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 1214, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1292,
	512, 433, 1259, 1260, 0, 1220, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 1182, 296,
	1301, 506, 507, 508, 509, 1205, 1253, 510, 1267, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 1192, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1263, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1183, 0, 0, 0, 0, 0, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 297, 298, 300, 299, 301,
	302, 303, 304, 1209, 305, 306, 0, 1207, 0, 0,
	0, 1249, 1213, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 1262, 0,
	317, 1269, 318, 1268, 0, 1279, 319, 320, 321, 322,
	323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	1272, 359, 361, 1266, 1265, 1185, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1257, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1191, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1280, 1281, 392, 1204, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1264, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 1277, 1278, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	1214, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1250, 1251, 1254, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1292, 512, 433, 1259, 1260, 0, 1220, 0, 434,
	435, 1294, 1252, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1182, 296, 1301, 506, 507, 508, 509, 1205, 1253, 510,
	1267, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 1192, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1263, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 0, 0, 0,
	0, 0, 0, 0, 0, 1209, 2013, 0, 2916, 1207,
	1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 1249, 1213, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	1262, 0, 317, 1269, 318, 1268, 0, 1279, 319, 320,
	321, 322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 1272, 359, 361, 1266, 1265, 1185, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1257, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1191, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	1204, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1264, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 1277, 1278, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 1214, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1250, 1251, 1254, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 1259, 1260, 0, 1220,
	0, 434, 435, 1294, 1252, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1288, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1182, 296, 1301, 506, 507, 508, 509, 1205,
	1253, 510, 1267, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 1192, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1263, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1183, 0, 0, 0,
	2914, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 297,
	298, 300, 299, 301, 302, 303, 304, 1209, 305, 306,
	0, 1207, 0, 0, 0, 1249, 1213, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 1262, 0, 317, 1269, 318, 1268, 0, 1279,
	319, 320, 321, 322, 323, 324, 1215, 1248, 1180, 325,
	1309, 1310, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 1272, 359, 361, 1266, 1265, 1185,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1257, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1191, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 1204, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1264, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 1277,
	1278, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 1214, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 1259, 1260,
	0, 1220, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1182, 296, 1301, 506, 507, 508,
	509, 1205, 1253, 510, 1267, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 1192, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1263, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 2902, 0, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 297, 298, 300, 299, 301, 302, 303, 304, 1209,
	305, 306, 0, 1207, 0, 0, 0, 1249, 1213, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 1262, 0, 317, 1269, 318, 1268,
	0, 1279, 319, 320, 321, 322, 323, 324, 1215, 1248,
	1180, 325, 1309, 1310, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 1272, 359, 361, 1266,
	1265, 1185, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1257, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1191,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 1204, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1264, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 1277, 1278, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 1214, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1182, 296, 1301, 506,
	507, 508, 509, 1205, 1253, 510, 1267, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	1192, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1263,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 2891, 0, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 297, 298, 300, 299, 301, 302, 303,
	304, 1209, 305, 306, 0, 1207, 0, 0, 0, 1249,
	1213, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 1262, 0, 317, 1269,
	318, 1268, 0, 1279, 319, 320, 321, 322, 323, 324,
	1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 1272, 359,
	361, 1266, 1265, 1185, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1257, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1191, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1280, 1281, 392, 1204, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1264, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 1277, 1278, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 1214, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1292,
	512, 433, 1259, 1260, 0, 1220, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 1182, 296,
	1301, 506, 507, 508, 509, 1205, 1253, 510, 1267, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 1192, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1263, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1183, 0, 0, 0, 2889, 0, 2880, 2887,
	1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 297, 298, 300, 299, 301,
	302, 303, 304, 1209, 305, 306, 0, 1207, 0, 0,
	0, 1249, 1213, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 1262, 0,
	317, 1269, 318, 1268, 0, 1279, 319, 320, 321, 322,
	323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	1272, 2883, 361, 1266, 1265, 1185, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1257, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1191, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1280, 1281, 392, 1204, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1264, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 1277, 1278, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	1214, 415, 0, 416, 417, 418, 419, 420, 2884, 422,
	1250, 1251, 1254, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1292, 512, 433, 1259, 1260, 0, 1220, 0, 434,
	435, 1294, 1252, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	2885, 470, 2882, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1182, 296, 1301, 506, 507, 508, 509, 1205, 1253, 510,
	1267, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 1192, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1263, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 2886,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 2881, 686, 1183, 0, 0, 0, 2877, 0,
	2880, 2887, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 297, 298, 300,
	299, 301, 302, 303, 304, 1209, 305, 306, 0, 1207,
	0, 0, 0, 1249, 1213, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	1262, 0, 317, 1269, 318, 1268, 0, 1279, 319, 320,
	321, 322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 1272, 2883, 361, 1266, 1265, 1185, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1257, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1191, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	1204, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1264, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 1277, 1278, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 1214, 415, 0, 416, 417, 418, 419, 420,
	2884, 422, 1250, 1251, 1254, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 1259, 1260, 0, 1220,
	0, 434, 435, 1294, 1252, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1288, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 2885, 470, 2882, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1182, 296, 1301, 506, 507, 508, 509, 1205,
	1253, 510, 1267, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 1192, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1263, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 2886, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 2881, 686, 1183, 0, 0, 0,
	0, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 297,
	298, 300, 299, 301, 302, 303, 304, 1209, 305, 306,
	0, 1207, 0, 0, 0, 1249, 1213, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 1262, 0, 317, 1269, 318, 1268, 0, 1279,
	319, 320, 321, 322, 323, 324, 1215, 1248, 1180, 325,
	1309, 1310, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 1272, 359, 361, 1266, 1265, 1185,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1257, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1191, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 1204, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1264, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 1277,
	1278, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 1214, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 1259, 1260,
	0, 1220, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1182, 296, 1301, 506, 507, 508,
	509, 1205, 1253, 510, 1267, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 1192, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1263, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 0, 0, 0, 0, 0, 0, 2021, 0, 1209,
	0, 0, 0, 1207, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 2632,
	305, 306, 0, 0, 0, 0, 0, 1249, 1213, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 1262, 0, 317, 1269, 318, 1268,
	0, 1279, 319, 320, 321, 322, 323, 324, 1215, 1248,
	1180, 325, 1309, 1310, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 1272, 359, 361, 1266,
	1265, 1185, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1257, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1191,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 1204, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1264, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 1277, 1278, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 1214, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1182, 296, 1301, 506,
	507, 508, 509, 1205, 1253, 510, 1267, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	1192, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1263,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 2594, 0, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 297, 298, 300, 299, 301, 302, 303,
	304, 1209, 305, 306, 0, 1207, 0, 0, 0, 1249,
	1213, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 1262, 0, 317, 1269,
	318, 1268, 0, 1279, 319, 320, 321, 322, 323, 324,
	1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 1272, 359,
	361, 1266, 1265, 1185, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1257, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1191, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1280, 1281, 392, 1204, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1264, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 1277, 1278, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 1214, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1292,
	512, 433, 1259, 1260, 0, 1220, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 1182, 296,
	1301, 506, 507, 508, 509, 1205, 1253, 510, 1267, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 1192, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1263, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1183, 0, 0, 0, 2565, 0, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 297, 298, 300, 299, 301,
	302, 303, 304, 1209, 305, 306, 0, 1207, 0, 0,
	0, 1249, 1213, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 1262, 0,
	317, 1269, 318, 1268, 0, 1279, 319, 320, 321, 322,
	323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	1272, 359, 361, 1266, 1265, 1185, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1257, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1191, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1280, 1281, 392, 1204, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1264, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 1277, 1278, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	1214, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1250, 1251, 1254, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1292, 512, 433, 1259, 1260, 0, 1220, 0, 434,
	435, 1294, 1252, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1182, 296, 1301, 506, 507, 508, 509, 1205, 1253, 510,
	1267, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 1192, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1263, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1183, 0, 0, 0, 1856, 0,
	1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 297, 298, 300,
	299, 301, 302, 303, 304, 1209, 305, 306, 0, 1207,
	0, 0, 0, 1249, 1213, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	1262, 0, 317, 1269, 318, 1268, 0, 1279, 319, 320,
	321, 322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 1272, 359, 361, 1266, 1265, 1185, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1257, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1191, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	1204, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1264, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 1277, 1278, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 1214, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1250, 1251, 1254, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 1259, 1260, 0, 1220,
	0, 434, 435, 1294, 1252, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1288, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1182, 296, 1301, 506, 507, 508, 509, 1205,
	1253, 510, 1267, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 1192, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1263, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1183, 0, 0, 0,
	1785, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 297,
	298, 300, 299, 301, 302, 303, 304, 1209, 305, 306,
	0, 1207, 0, 0, 0, 1249, 1213, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 1262, 0, 317, 1269, 318, 1268, 0, 1279,
	319, 320, 321, 322, 323, 324, 1215, 1248, 1180, 325,
	1309, 1310, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 1272, 359, 361, 1266, 1265, 1185,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1257, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1191, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 1204, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1264, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 1277,
	1278, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 1214, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 1259, 1260,
	0, 1220, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1182, 296, 1301, 506, 507, 508,
	509, 1205, 1253, 510, 1267, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 1192, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1263, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 1780, 0, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 297, 298, 300, 299, 301, 302, 303, 304, 1209,
	305, 306, 0, 1207, 0, 0, 0, 1249, 1213, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 1262, 0, 317, 1269, 318, 1268,
	0, 1279, 319, 320, 321, 322, 323, 324, 1215, 1248,
	1180, 325, 1309, 1310, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 1272, 359, 361, 1266,
	1265, 1185, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1257, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1191,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 1204, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1264, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 1277, 1278, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 1214, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1182, 296, 1301, 506,
	507, 508, 509, 1205, 1253, 510, 1267, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	1192, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1263,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 1766, 0, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 297, 298, 300, 299, 301, 302, 303,
	304, 1209, 305, 306, 0, 1207, 0, 0, 0, 1249,
	1213, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 1262, 0, 317, 1269,
	318, 1268, 0, 1279, 319, 320, 321, 322, 323, 324,
	1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 1272, 359,
	361, 1266, 1265, 1185, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1257, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1191, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1280, 1281, 392, 1204, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1264, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 1277, 1278, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 1214, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1292,
	512, 433, 1259, 1260, 0, 1220, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 1182, 296,
	1301, 506, 507, 508, 509, 1205, 1253, 510, 1267, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 1192, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1263, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1183, 0, 0, 0, 1761, 0, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 297, 298, 300, 299, 301,
	302, 303, 304, 1209, 305, 306, 0, 1207, 0, 0,
	0, 1249, 1213, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 1262, 0,
	317, 1269, 318, 1268, 0, 1279, 319, 320, 321, 322,
	323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	1272, 359, 361, 1266, 1265, 1185, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1257, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1191, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1280, 1281, 392, 1204, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1264, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 1277, 1278, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	1214, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1250, 1251, 1254, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1292, 512, 433, 1259, 1260, 0, 1220, 0, 434,
	435, 1294, 1252, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1182, 296, 1301, 506, 507, 508, 509, 1205, 1253, 510,
	1267, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 1192, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1263, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1183, 0, 0, 0, 1670, 0,
	1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 297, 298, 300,
	299, 301, 302, 303, 304, 1209, 305, 306, 0, 1207,
	0, 0, 0, 1249, 1213, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	1262, 0, 317, 1269, 318, 1268, 0, 1279, 319, 320,
	321, 322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 1272, 359, 361, 1266, 1265, 1185, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1257, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1191, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	1204, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1264, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 1277, 1278, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 1214, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1669, 1251, 1254, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 1259, 1260, 0, 1220,
	0, 434, 435, 1294, 1252, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1288, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1182, 296, 1301, 506, 507, 508, 509, 1205,
	1253, 510, 1267, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 1192, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1263, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1183, 0, 0, 0,
	1664, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 297,
	298, 300, 299, 301, 302, 303, 304, 1209, 305, 306,
	0, 1207, 0, 0, 0, 1249, 1213, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 1262, 0, 317, 1269, 318, 1268, 0, 1279,
	319, 320, 321, 322, 323, 324, 1215, 1248, 1180, 325,
	1309, 1310, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 1272, 359, 361, 1266, 1265, 1185,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1257, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1191, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 1204, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1264, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 1277,
	1278, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 1214, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1663, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 1259, 1260,
	0, 1220, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1182, 296, 1301, 506, 507, 508,
	509, 1205, 1253, 510, 1267, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 1192, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1263, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 1657, 0, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 297, 298, 300, 299, 301, 302, 303, 304, 1209,
	305, 306, 0, 1207, 0, 0, 0, 1249, 1213, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 1262, 0, 317, 1269, 318, 1268,
	0, 1279, 319, 320, 321, 322, 323, 324, 1215, 1248,
	1180, 325, 1309, 1310, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 1272, 359, 361, 1266,
	1265, 1185, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1257, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1191,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 1204, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1264, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 1277, 1278, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 1214, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1182, 296, 1301, 506,
	507, 508, 509, 1205, 1253, 510, 1267, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	1192, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1263,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 1620, 0, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 297, 298, 300, 299, 301, 302, 303,
	304, 1209, 305, 306, 0, 1207, 0, 0, 0, 1249,
	1213, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 1262, 0, 317, 1269,
	318, 1268, 0, 1279, 319, 320, 321, 322, 323, 324,
	1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 1272, 359,
	361, 1266, 1265, 1185, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1257, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1191, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1280, 1281, 392, 1204, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1264, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 1277, 1278, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 1214, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1292,
	512, 433, 1259, 1260, 0, 1220, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 1182, 296,
	1301, 506, 507, 508, 509, 1205, 1253, 510, 1267, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 1192, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1263, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1183, 0, 0, 0, 1602, 0, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 297, 298, 300, 299, 301,
	302, 303, 304, 1209, 305, 306, 0, 1207, 0, 0,
	0, 1249, 1213, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 1262, 0,
	317, 1269, 318, 1268, 0, 1279, 319, 320, 321, 322,
	323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	1272, 359, 361, 1266, 1265, 1185, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1257, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1191, 381, 382, 383, 385, 387, 384,
	1606, 388, 389, 390, 391, 1280, 1281, 392, 1204, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1264, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 1277, 1278, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	1214, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1250, 1251, 1254, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1292, 512, 433, 1259, 1260, 0, 1220, 0, 434,
	435, 1294, 1252, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1182, 296, 1301, 506, 507, 508, 509, 1205, 1253, 510,
	1267, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 1192, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1263, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 1607, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 1605,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1183, 0, 0, 0, 1434, 0,
	1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 297, 298, 300,
	299, 301, 302, 303, 304, 1209, 305, 306, 0, 1207,
	0, 0, 0, 1249, 1213, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	1262, 0, 317, 1269, 318, 1268, 0, 1279, 319, 320,
	321, 322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 1272, 359, 361, 1266, 1265, 1185, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1257, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1191, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	1204, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1264, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 1277, 1278, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 1214, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1250, 1251, 1254, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 1259, 1260, 0, 1220,
	0, 434, 435, 1294, 1252, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1288, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1182, 296, 1301, 506, 507, 508, 509, 1205,
	1253, 510, 1267, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 1192, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1263, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1183, 0, 0, 0,
	0, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 297,
	298, 300, 299, 301, 302, 303, 304, 1209, 305, 306,
	0, 1207, 0, 0, 0, 1249, 1213, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 1262, 0, 317, 1269, 318, 1268, 0, 1279,
	319, 320, 321, 322, 323, 324, 1215, 1248, 1180, 325,
	1309, 1310, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 1272, 359, 361, 1266, 1265, 1185,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1257, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1191, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 1204, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1264, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 1277,
	1278, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 1214, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 1259, 1260,
	0, 1220, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1182, 296, 1301, 506, 507, 508,
	509, 1205, 1253, 510, 1267, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 1192, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1263, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 0, 0, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 297, 298, 300, 299, 301, 302, 303, 304, 1209,
	305, 306, 0, 1207, 0, 0, 0, 1249, 1213, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 1262, 0, 317, 1269, 318, 1268,
	0, 1279, 319, 320, 321, 322, 323, 324, 1215, 1248,
	1180, 325, 1309, 1310, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 5094, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 1272, 359, 361, 1266,
	1265, 1185, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1257, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1191,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 1204, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1264, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 1277, 1278, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 1214, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1182, 296, 1301, 506,
	507, 508, 509, 1205, 1253, 510, 1267, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	1192, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1263,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 5093,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 0, 0, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 297, 298, 300, 299, 301, 302, 303,
	304, 1209, 305, 306, 0, 1207, 0, 0, 0, 1249,
	1213, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 5092, 1262, 0, 317, 1269,
	318, 1268, 0, 1279, 319, 320, 321, 322, 323, 324,
	1215, 1248, 1180, 325, 1309, 1310, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 5094, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 1272, 359,
	361, 1266, 1265, 1185, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1257, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1191, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1280, 1281, 392, 1204, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1264, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 1277, 1278, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 1214, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1292,
	512, 433, 1259, 1260, 0, 1220, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 1182, 296,
	1301, 506, 507, 508, 509, 1205, 1253, 510, 1267, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 1192, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1263, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 5093, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1183, 0, 0, 0, 0, 0, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 297, 298, 300, 299, 301,
	302, 303, 304, 1209, 305, 306, 0, 1207, 0, 0,
	0, 1249, 1213, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 1262, 0,
	317, 1269, 318, 1268, 0, 1279, 319, 320, 321, 322,
	323, 324, 1215, 1248, 1180, 325, 1309, 1310, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 4689, 353, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	1272, 359, 361, 1266, 1265, 1185, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1257, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1191, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1280, 1281, 392, 1204, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1264, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 1277, 1278, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	4690, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1250, 1251, 1254, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1292, 512, 433, 1259, 1260, 0, 1220, 0, 434,
	435, 1294, 1252, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	1182, 296, 1301, 506, 507, 508, 509, 1205, 1253, 510,
	1267, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 1192, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1263, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 4688, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1183, 0, 0, 0, 0, 0,
	1225, 1197, 1198, 1199, 3407, 3408, 1208, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 297, 298, 300,
	299, 301, 302, 303, 304, 1209, 305, 306, 0, 1207,
	0, 0, 0, 1249, 1213, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	1262, 0, 317, 1269, 318, 1268, 0, 1279, 319, 320,
	321, 322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 1272, 359, 361, 1266, 1265, 1185, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1257, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1191, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	1204, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1264, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 1277, 1278, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 1214, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1250, 1251, 1254, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 1259, 1260, 0, 1220,
	0, 434, 435, 1294, 1252, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1288, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1182, 296, 1301, 506, 507, 508, 509, 1205,
	1253, 510, 1267, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 1192, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1263, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1183, 0, 0, 0,
	0, 0, 1225, 1197, 1198, 1199, 3405, 3406, 1208, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 297,
	298, 300, 299, 301, 302, 303, 304, 1209, 305, 306,
	0, 1207, 0, 0, 0, 1249, 1213, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 1262, 0, 317, 1269, 318, 1268, 0, 1279,
	319, 320, 321, 322, 323, 324, 1215, 1248, 1180, 325,
	1309, 1310, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 1272, 359, 361, 1266, 1265, 1185,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1257, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1191, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 1204, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1264, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 1277,
	1278, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 1214, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 1259, 1260,
	0, 1220, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 1182, 296, 1301, 506, 507, 508,
	509, 1205, 1253, 510, 1267, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 1192, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1263, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 0, 0, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 297, 298, 300, 299, 301, 302, 303, 304, 1209,
	305, 306, 0, 1207, 0, 0, 0, 1249, 1213, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 1262, 0, 317, 1269, 318, 1268,
	0, 1279, 319, 320, 321, 322, 323, 324, 1215, 1248,
	1180, 325, 1309, 1310, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 1272, 359, 361, 1266,
	1265, 1185, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1257, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1191,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 1204, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1264, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 1277, 1278, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 1214, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	1259, 1260, 0, 1220, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 1182, 296, 1301, 506,
	507, 508, 509, 1205, 1253, 510, 1267, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	1192, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1263,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 0, 0, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 1178, 0, 0, 0, 0, 0,
	0, 2640, 2641, 297, 298, 300, 299, 301, 302, 303,
	304, 1209, 305, 306, 0, 1207, 0, 0, 0, 1249,
	1213, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 1262, 0, 317, 1269,
	318, 1268, 0, 1279, 319, 320, 321, 322, 323, 324,
	1215, 1248, 0, 325, 1309, 1310, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 1272, 359,
	361, 1266, 1265, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1257, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1191, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1280, 1281, 392, 1204, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1264, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 1277, 1278, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 1214, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1292,
	512, 433, 1259, 1260, 0, 1220, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 0, 296,
	1301, 506, 507, 508, 509, 1205, 1253, 510, 1267, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 1192, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1263, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 2899, 0, 0, 0,
	0, 0, 0, 2897, 2898, 297, 298, 300, 299, 301,
	302, 303, 304, 1209, 305, 306, 0, 1207, 0, 0,
	0, 1249, 1213, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 1262, 0,
	317, 1269, 318, 1268, 0, 1279, 319, 320, 321, 322,
	323, 324, 1215, 1248, 0, 325, 1309, 1310, 695, 0,
	326, 327, 1255, 0, 1236, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 354, 355, 356, 357, 358,
	1272, 359, 361, 1266, 1265, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1257, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1191, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1280, 1281, 392, 1204, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1264, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 1277, 1278, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1287, 0,
	1214, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1250, 1251, 1254, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1292, 512, 433, 1259, 1260, 0, 1220, 0, 434,
	435, 1294, 1252, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1288, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 1243, 1242, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	0, 296, 1301, 506, 507, 508, 509, 1205, 1253, 510,
	1267, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 1282, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 1283, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1263, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 3400, 3401, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 2267, 2268, 297, 298, 300,
	299, 301, 302, 303, 304, 1209, 305, 306, 0, 1207,
	0, 0, 0, 1249, 1213, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 0,
	1262, 0, 317, 1269, 318, 1268, 0, 1279, 319, 320,
	321, 322, 323, 324, 1215, 1248, 1180, 325, 1309, 1310,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 5094,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 1272, 359, 361, 1266, 1265, 1185, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1257, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1191, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	1204, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1264, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 1277, 1278, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 1214, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1250, 1251, 1254, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 1259, 1260, 0, 1220,
	0, 434, 435, 0, 1252, 0, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1288, 1297, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 1182, 296, 0, 506, 507, 508, 509, 1205,
	1253, 510, 1267, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 1192, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1263, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 5093, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	2918, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	0, 0, 0, 0, 0, 0, 0, 1176, 1177, 297,
	298, 300, 299, 301, 302, 303, 304, 1209, 305, 306,
	0, 1207, 0, 0, 0, 1249, 1213, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 1262, 0, 317, 1269, 318, 1268, 0, 1279,
	319, 320, 321, 322, 323, 324, 0, 1248, 0, 325,
	1309, 1310, 695, 0, 326, 327, 1255, 0, 1236, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354,
	355, 356, 357, 358, 1272, 359, 361, 1266, 1265, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1257, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1280,
	1281, 392, 1204, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1264, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 1277,
	1278, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1287, 0, 1214, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1250, 1251, 1254, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1292, 512, 433, 1259, 1260,
	0, 1220, 0, 434, 435, 1294, 1252, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1288, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 1243, 1242, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 0, 296, 1301, 506, 507, 508,
	509, 1205, 1253, 510, 1267, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 1282, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 1283,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1263, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 1632,
	0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 1209,
	0, 0, 0, 1207, 1249, 1213, 0, 0, 307, 0,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 1262, 0, 317, 1269, 318, 1268, 0, 1279, 319,
	320, 321, 322, 323, 324, 0, 1248, 0, 325, 1309,
	1310, 695, 0, 326, 327, 1255, 0, 1236, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1290, 351, 352,
	353, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355,
	356, 357, 358, 1272, 359, 361, 1266, 1265, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1257, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1280, 1281,
	392, 1204, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1264, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1291, 402, 403, 404, 1277, 1278,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1287, 0, 1214, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1250, 1251, 1254, 511, 1293, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1292, 512, 433, 1259, 1260, 0,
	1220, 0, 434, 435, 1294, 1252, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1288, 1297, 450,
	451, 1298, 0, 452, 453, 454, 455, 456, 457, 460,
	1243, 1242, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 0, 296, 1301, 506, 507, 508, 509,
	1205, 1253, 510, 1267, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1302, 523, 1303, 1282, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 1283, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1263, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 1193, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1246, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 1261, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1308,
	630, 631, 632, 633, 1284, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1273, 1274, 1275, 1276,
	0, 660, 0, 651, 652, 653, 654, 1285, 655, 1286,
	1203, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 1247, 671,
	0, 0, 672, 673, 674, 734, 1270, 1307, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 1169, 0,
	1348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 1209, 0,
	0, 0, 1207, 1249, 0, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 1248, 0, 325, 693, 694,
	695, 0, 326, 327, 1255, 0, 1236, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1280, 1281, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1287, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1250, 1251, 1254, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1292, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 1294, 1252, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	1334, 446, 448, 447, 0, 449, 1288, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 1243,
	1242, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 0, 296, 1301, 506, 507, 508, 509, 0,
	1253, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 1340, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 1282, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 1283, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 724, 1342, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 252, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 254, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 1750, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 246,
	682, 683, 738, 684, 685, 686, 1348, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 1338, 0, 2109, 0, 1249,
	0, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 1248, 0, 325, 693, 694, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1280, 1281, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1292,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 1334, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 0, 296,
	1301, 506, 507, 508, 509, 0, 1253, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 1340, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 724, 1342, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 252, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 254,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	1750, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 246, 682, 683, 738, 684,
	685, 686, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3564, 0, 1348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1338, 0, 2109, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	1249, 0, 0, 0, 307, 0, 308, 309, 1289, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 1248, 0, 325, 693, 694, 695, 0, 326,
	327, 1255, 0, 1236, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1290, 351, 352, 353, 1239, 1237, 1238,
	1245, 1241, 1240, 1244, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1280, 1281, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1291, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1287, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1250,
	1251, 1254, 511, 1293, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1292, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	1294, 1252, 1295, 436, 437, 438, 1296, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 1334, 446, 448,
	447, 0, 449, 1288, 1297, 450, 451, 1298, 0, 452,
	453, 454, 455, 456, 457, 460, 1243, 1242, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1299, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1300, 504, 492, 0,
	296, 1301, 506, 507, 508, 509, 0, 1253, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 1340, 518,
	519, 520, 0, 0, 521, 522, 717, 1302, 523, 1303,
	1282, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 1283, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 724, 1342, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1246, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	1284, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 1285, 655, 1286, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 1247, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 1330, 0, 1348, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 1249,
	0, 0, 1338, 307, 1336, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 1248, 0, 325, 693, 694, 695, 0, 326, 327,
	1255, 0, 1236, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1280, 1281, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1287, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1250, 1251,
	1254, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1292,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 1294,
	1252, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 1334, 446, 448, 447,
	0, 449, 1288, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 1243, 1242, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 0, 296,
	1301, 506, 507, 508, 509, 0, 1253, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 1340, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 1282,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 1283, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 724, 1342, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 1348, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 1249, 0,
	0, 1338, 307, 1336, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	1248, 0, 325, 693, 694, 695, 0, 326, 327, 1255,
	0, 1236, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241,
	1240, 1244, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1280, 1281, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1291, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1287, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1250, 1251, 1254,
	511, 1293, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1292, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 1294, 1252,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 1334, 446, 448, 447, 0,
	449, 1288, 1297, 450, 451, 1298, 0, 452, 453, 454,
	455, 456, 457, 460, 1243, 1242, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 0, 296, 1301,
	506, 507, 508, 509, 0, 1253, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 1340, 518, 519, 520,
	0, 0, 521, 522, 717, 1302, 523, 1303, 1282, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 1283, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 724, 1342, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1246, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 1284, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 1285, 655, 1286, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 1247, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 1348, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 1249, 0, 0,
	1338, 307, 1336, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 1248,
	0, 325, 693, 694, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 0, 296, 1301, 506,
	507, 508, 509, 0, 1253, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 1348, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 1249, 0, 0, 0,
	307, 4501, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 1248, 0,
	325, 693, 694, 695, 0, 326, 327, 1255, 0, 1236,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1290,
	351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240, 1244,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1280, 1281, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1291, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1287, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1250, 1251, 1254, 511, 1293,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1292, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 1294, 1252, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1288,
	1297, 450, 451, 1298, 0, 452, 453, 454, 455, 456,
	457, 460, 1243, 1242, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 0, 296, 1301, 506, 507,
	508, 509, 0, 1253, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1302, 523, 1303, 1282, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	1283, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 724,
	1342, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1246, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 1284, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 1285,
	655, 1286, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	1247, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 291,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 2744,
	2745, 2746, 2763, 2764, 2765, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	2766, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	2005, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 1990, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 2756, 0, 337, 338, 339,
	336, 340, 0, 341, 2752, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 2757, 2758, 2759, 2760, 393, 394, 395, 702,
	0, 0, 2751, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 2761, 2762, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 2754, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 2755, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 1989,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 1169, 0, 1627, 2741, 2742, 2743, 2767,
	2753, 2747, 0, 2749, 2750, 2748, 2735, 2736, 2737, 2738,
	2739, 2740, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 1591, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1290, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1291, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 1293, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 1292, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 1294, 713,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 1297, 450, 451, 1298, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 0, 0, 1301,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1302, 523, 1303, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 252, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 254, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 1750,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 246, 682, 683, 738, 684, 685,
	686, 0, 1747, 247, 1627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 203, 0, 0, 0, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	1591, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 1292, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 1294, 713, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 0, 0, 1301, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 252, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 254, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 1750, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 246, 682, 683, 738, 684, 685, 686,
	1627, 1626, 247, 0, 0, 0, 1624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 203, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 1289, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 1591, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1290, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1291, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 1293, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 1292, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 1294, 713, 1295, 436, 437, 438, 1296,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 1297, 450, 451,
	1298, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1299, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1300,
	504, 492, 0, 0, 1301, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	1302, 523, 1303, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1627, 1626, 0, 0,
	0, 0, 1624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 1774, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 1289, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 1591, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1290, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1291,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 1293, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 1292,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 1294,
	713, 1295, 436, 437, 438, 1296, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 1297, 450, 451, 1298, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1299, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1300, 504, 492, 0, 0,
	1301, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 1302, 523, 1303, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1627, 1626, 0, 0, 0, 0, 1624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 3896, 0, 687, 0, 0, 0, 307,
	0, 308, 309, 1289, 310, 311, 312, 313, 314, 315,
	316, 688, 689, 0, 317, 690, 318, 691, 0, 692,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	693, 694, 695, 0, 326, 327, 696, 0, 1591, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1290, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 697, 698, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 699, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 700,
	701, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 702, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1291, 402, 403, 404, 703,
	704, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 705, 0, 706, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 707, 708, 709, 511, 1293, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 1292, 512, 433, 710, 711,
	0, 712, 0, 434, 435, 1294, 713, 1295, 436, 437,
	438, 1296, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 714, 1297,
	450, 451, 1298, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1299, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1300, 504, 492, 0, 0, 1301, 506, 507, 508,
	509, 0, 715, 510, 716, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 717, 1302, 523, 1303, 718, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 719, 537, 538, 539, 720, 540, 541, 542, 721,
	543, 722, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 723, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 2505, 568, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1627, 2414,
	0, 0, 0, 0, 2415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 1774,
	0, 687, 0, 0, 0, 307, 0, 308, 309, 1289,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 1591, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1290, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1291, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 1293, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 1292, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 1294, 713, 1295, 436, 437, 438, 1296, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 2413,
	448, 447, 0, 449, 714, 1297, 450, 451, 1298, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1299,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1300, 504, 492,
	0, 0, 1301, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 1302, 523,
	1303, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1627, 1626, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 1774, 0, 687, 0, 0,
	0, 307, 0, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	1591, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 1292, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 1294, 713, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 0, 0, 1301, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 1169, 0, 291, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 1756, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 252, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 254, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 1750, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 291,
	0, 0, 246, 682, 683, 738, 684, 685, 686, 0,
	0, 247, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	203, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 291, 3176, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 2123, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 291, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 5261, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 291, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 307, 3846, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 688, 689, 0,
	317, 690, 318, 691, 0, 692, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 693, 694, 695, 0,
	326, 327, 696, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 697, 698, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 699, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 700, 701, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 702, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 703, 704, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 705, 0,
	706, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	707, 708, 709, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 710, 711, 0, 712, 0, 434,
	435, 0, 713, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 714, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 715, 510,
	716, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 717, 0, 523,
	0, 718, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 719, 537, 538,
	539, 720, 540, 541, 542, 721, 543, 722, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 723, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 291, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 1744, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 1348, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 1249, 0, 0,
	0, 307, 3298, 308, 309, 1289, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 1248,
	0, 325, 693, 694, 695, 0, 326, 327, 1255, 0,
	1236, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1290, 351, 352, 353, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 354, 355, 356, 357, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1280, 1281, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1291, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1287, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1250, 1251, 1254, 511,
	1293, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1292, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 1294, 1252, 1295,
	436, 437, 438, 1296, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1288, 1297, 450, 451, 1298, 0, 452, 453, 454, 455,
	456, 457, 460, 1243, 1242, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1299, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1300, 504, 492, 0, 296, 1301, 506,
	507, 508, 509, 0, 1253, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 1302, 523, 1303, 1282, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 1283, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	291, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 291, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 307, 0, 308, 309, 4010, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 993, 0, 893, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 2492, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 900, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 990, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 992, 0, 636, 627, 898, 642,
	643, 644, 645, 646, 899, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 2168, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 903, 0, 0, 0, 307, 0,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	0, 2174, 0, 317, 2164, 318, 2180, 0, 2187, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 2190,
	2191, 0, 0, 326, 327, 0, 0, 1591, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1290, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 1272, 359, 361, 2178, 2177, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1257, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 0, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 0, 0,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 2176, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1291, 402, 403, 404, 2185, 2186,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 0, 0, 0, 511, 1293, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 1292, 512, 433, 2171, 2172, 0,
	2167, 0, 434, 435, 1294, 0, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 0, 1297, 450,
	451, 1298, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 0, 0, 1301, 506, 507, 508, 509,
	0, 0, 510, 2179, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	0, 1302, 523, 1303, 0, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	2161, 537, 538, 539, 2162, 540, 541, 542, 0, 543,
	0, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 2175, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 0, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 2173, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 2189,
	630, 631, 632, 633, 0, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 2181, 2182, 2183, 2184,
	0, 660, 0, 651, 652, 653, 654, 0, 655, 0,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 0, 2165, 2188, 0, 676,
	675, 677, 678, 679, 0, 680, 681, 0, 0, 0,
	0, 682, 683, 0, 684, 685, 686, 893, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 4137, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 2155, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 900, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 4136, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	898, 642, 643, 644, 645, 646, 899, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 4135,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 893, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 2195,
	305, 306, 0, 0, 0, 0, 903, 687, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 688, 689, 0, 317, 690, 318, 691,
	0, 692, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 693, 694, 695, 0, 326, 327, 696, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 900, 358, 0, 359, 361, 697,
	698, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 699,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 700, 701, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 702, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 703, 704, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 705, 0, 706, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 707, 708, 709, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	710, 711, 0, 712, 0, 434, 435, 0, 713, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	714, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 715, 510, 716, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 717, 0, 523, 0, 718, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 719, 537, 538, 539, 720, 540, 541,
	542, 721, 543, 722, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 723,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 2194, 600, 601, 602, 603, 0, 2196, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 898, 642, 643,
	644, 645, 646, 899, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 2193, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 893, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 2146, 305, 306, 0,
	0, 0, 0, 903, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 900, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 2145, 600,
	601, 602, 603, 0, 2147, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 898, 642, 643, 644, 645, 646,
	899, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 2144, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 891, 0, 893,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	903, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 900,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 898, 642, 643, 644, 645, 646, 899, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 893, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 903, 687,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 688, 689, 0, 317, 690,
	318, 691, 0, 692, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 693, 694, 695, 0, 326, 327,
	696, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 900, 358, 0, 359,
	361, 697, 698, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 699, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 700, 701, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 702, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 703, 704, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 705, 0, 706, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 707, 708,
	709, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 710, 711, 0, 712, 0, 434, 435, 0,
	713, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 714, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 715, 510, 716, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 717, 0, 523, 0, 718,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 719, 537, 538, 539, 720,
	540, 541, 542, 721, 543, 722, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 723, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 898,
	642, 643, 644, 645, 646, 899, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 893, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 903, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 900, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 2544, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	2545, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 898, 642, 643, 644,
	645, 646, 899, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 2546, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	291, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 903, 687, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 688,
	689, 0, 317, 690, 318, 691, 0, 692, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 693, 694,
	695, 0, 326, 327, 696, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 697, 698, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 699, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 700, 701, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	702, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 703, 704, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	705, 0, 706, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 707, 708, 709, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 710, 711, 0, 712,
	0, 434, 435, 0, 713, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 714, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	715, 510, 716, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 717,
	0, 523, 0, 718, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 719,
	537, 538, 539, 720, 540, 541, 542, 721, 543, 722,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 723, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 1627, 1626, 0, 0, 0, 0, 1624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 903,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 1591,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1290,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1291, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 1293,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 1292, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 1294, 713, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	1297, 450, 451, 1298, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 0, 0, 1301, 506, 507,
	508, 509, 4240, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1302, 523, 1303, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1627,
	1626, 0, 0, 0, 0, 1624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 1591, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1290, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1291, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 1293, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 1292, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 1294, 713, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 1297, 450, 451, 1298,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 0, 0, 1301, 506, 507, 508, 509, 3796, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1302,
	523, 1303, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1805, 0, 1627, 1626, 0,
	0, 0, 0, 1624, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 1289, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 1591, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1290, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 1804, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1291, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 1293, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	1292, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	1294, 713, 1295, 436, 437, 438, 1296, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 1297, 450, 451, 1298, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1299, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1300, 504, 492, 0,
	0, 1301, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 1302, 523, 1303,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	1803, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 1802, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1677, 0, 1627, 1626, 0, 0, 0,
	0, 1624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 1591, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1290, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1291, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1679, 708, 709,
	511, 1293, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 1292, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 1294, 713,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 1297, 450, 451, 1298, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 0, 0, 1301,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1302, 523, 1303, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1622, 0, 1627, 1626, 0, 0, 0, 0, 1624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 1289, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 1591,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1290,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1291, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 1293,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 1292, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 1294, 713, 1295, 436,
	437, 438, 1296, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	1297, 450, 451, 1298, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1299, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1300, 504, 492, 0, 0, 1301, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 1302, 523, 1303, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1627,
	1626, 0, 0, 0, 0, 1624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	1289, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 1591, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1290, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1291, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 1293, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 1292, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 1294, 713, 1295, 436, 437, 438, 1296, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 1297, 450, 451, 1298,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1299, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1300, 504,
	492, 0, 0, 1301, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 1302,
	523, 1303, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 1627, 1626, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 1289, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 1591, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1290, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1291, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 1293, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 1292, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 1294, 713,
	1295, 436, 437, 438, 1296, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 1297, 450, 451, 1298, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1299, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1300, 504, 492, 0, 0, 1301,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 1302, 523, 1303, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 1627, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 1289, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 1591, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1290, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1291, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 1293, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 1292, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 1294, 713, 1295, 436, 437, 438,
	1296, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 1297, 450,
	451, 1298, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1299, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1300, 504, 492, 0, 0, 1301, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 1302, 523, 1303, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 3078, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	3838, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	3082, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 3837, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 3081, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 3834, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 3836,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 3833, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 3080,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 3835, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 291, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 3078, 326, 327, 696, 0, 0,
	3072, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 3074, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 3082, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 3081, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 3071, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 3080, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 3079, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 1885,
	0, 291, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 1884, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 1883, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 1886, 591, 592, 599, 600,
	601, 602, 603, 0, 1882, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 1880, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 1881,
	675, 677, 678, 679, 737, 680, 681, 1595, 0, 291,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1597, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	1340, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 1592, 0, 291, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1594,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 1340, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 1498, 0, 291, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1500, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 1340, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 771, 0, 291, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 770, 303, 304, 759, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 762, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 768, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 764, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 758,
	0, 291, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 759, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 762, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 763,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 764, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 759, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 762,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 763, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 764,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 291, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 759, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 762, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 4250, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 764, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 291,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 2450, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 291, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 1340, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 291, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	3732, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 3268, 0, 291,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 3267, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 2513, 0, 291, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 2457, 0, 291, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 2456, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 2443, 0, 291, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 2445, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 291,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 2407, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	1340, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 1722, 0, 291, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1721,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 1615, 0, 291, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 1608, 0, 291, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1610, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 1417,
	0, 291, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1416, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 1407, 0, 291,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1406, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 1404, 0, 291, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1403,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 1399, 0, 291, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1398, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 740, 0, 291, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 282,
	0, 291, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 291, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 762, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 763, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 764, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 291,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 2553,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 291, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 2551, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 291, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 2549, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 2463,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 291, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 2220, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 291,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 2214, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 977, 0, 291, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 976, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	975, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 860, 0, 291, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 849, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 858, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 851, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 857, 401, 853, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 854, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 852, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	855, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 856, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 850, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 843, 0, 291, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 849, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 858,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 851, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 857, 401, 853, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 854, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 852, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 855, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 856, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 850, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 291,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	3837, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 4586, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 1445, 0, 291, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 1448, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 1446, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 831, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 830, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 829, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 1449, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 827, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 1445, 0, 291, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 1448, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 1446, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 831, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 830, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 829, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 1449, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	827, 729, 730, 731, 0, 660, 0, 651, 1447, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 838, 0, 291, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 836, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 749,
	0, 291, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 748, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 747, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 3176, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 291, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 4891, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 291,
	3673, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 291, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 4473, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 291, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 4194, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 2953, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 291, 3176, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 3307, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 291,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 2351, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	830, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 829, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 827, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 291, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	2523, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 2511, 0, 291, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 1778,
	0, 291, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 1770, 0, 291,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 821, 0, 291, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	817, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 822, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 831, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 830, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 829, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 1755, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 827, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 1728, 0, 291, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1727, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 1712, 0, 291, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1710, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 1705,
	0, 291, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 1682, 0, 291,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1680, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 1675, 0, 291, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 1636, 0, 291, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 1600, 0, 291, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 1451,
	0, 291, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 830, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 829, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 827, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 1422, 0, 291,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1421, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 1413, 0, 291, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1412,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 291, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 1365, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 841,
	0, 291, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 821, 0, 291,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 817, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 816, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 822, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 831,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	830, 583, 584, 585, 586, 818, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 829, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 819, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 827, 729, 730, 731, 0, 660,
	0, 651, 823, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 810, 0, 291, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 811, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 773, 0, 291, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 707, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 766, 0, 291, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 744,
	0, 291, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 291, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 3869, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 291,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	830, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 829, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 827, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 291, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 3775, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 291, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 3749, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 3745,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 291, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 3697, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 291,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 3695, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 291, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 3683, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 291, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 3680, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 3278,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 291, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 688, 689, 0, 317, 690, 318, 691, 0,
	692, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 693, 694, 695, 0, 326, 327, 696, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 697, 698,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 699, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	700, 701, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 702, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	703, 704, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 705, 0, 706, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 707, 708, 709, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 710,
	711, 0, 712, 0, 434, 435, 0, 713, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 714,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 715, 510, 716, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 717, 0, 523, 0, 718, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 719, 537, 538, 539, 720, 540, 541, 542,
	721, 543, 722, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 723, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 811, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 291,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 687, 0, 2481, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 688, 689,
	0, 317, 690, 318, 691, 0, 692, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 693, 694, 695,
	0, 326, 327, 696, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 697, 698, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 699, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 700, 701, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 702,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 703, 704, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 705,
	0, 706, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 707, 708, 709, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 710, 711, 0, 712, 0,
	434, 435, 0, 713, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 714, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 715,
	510, 716, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 717, 0,
	523, 0, 718, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 719, 537,
	538, 539, 720, 540, 541, 542, 721, 543, 722, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 723, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 0,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 291, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 688, 689, 0, 317, 690, 318,
	691, 0, 692, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 693, 694, 695, 0, 326, 327, 696,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	697, 698, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	699, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 700, 701, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 702, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 703, 704, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 705, 0, 706, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1384, 708, 709,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 710, 711, 0, 712, 0, 434, 435, 0, 713,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 714, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 715, 510, 716, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 717, 0, 523, 0, 718, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 719, 537, 538, 539, 720, 540,
	541, 542, 721, 543, 722, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	723, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 291, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	688, 689, 0, 317, 690, 318, 691, 0, 692, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 693,
	694, 695, 0, 326, 327, 696, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 697, 698, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 699, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 700, 701,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 702, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 703, 704,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 705, 0, 706, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 707, 708, 709, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 710, 711, 0,
	712, 0, 434, 435, 0, 713, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 714, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 715, 510, 716, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	717, 0, 523, 0, 718, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	719, 537, 538, 539, 720, 540, 541, 542, 721, 543,
	722, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 723, 557, 558, 1313,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 291, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 688, 689, 0, 317,
	690, 318, 691, 0, 692, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 693, 694, 695, 0, 326,
	327, 696, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 697, 698, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 699, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 700, 701, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 702, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 703, 704, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 705, 0, 706,
	0, 0, 416, 417, 418, 419, 420, 421, 422, 707,
	708, 709, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 710, 711, 0, 712, 0, 434, 435,
	0, 713, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 714, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 715, 510, 716,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 717, 0, 523, 0,
	718, 524, 525, 517, 526, 527, 0, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 719, 537, 538, 539,
	720, 540, 541, 542, 721, 543, 722, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 0,
	555, 556, 723, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 0, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 1718, 0, 1429, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 0, 317, 0, 318,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 0, 0, 0, 0, 326, 327, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 1431, 354, 355, 356, 357, 358, 0, 359, 361,
	0, 0, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	0, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 0, 0, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 0, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 0, 0, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1717, 0, 0,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 0, 0, 0, 0, 0, 434, 435, 0, 0,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 0, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 0, 510, 0, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 0, 0, 523, 0, 0, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 0, 537, 538, 539, 0, 540,
	541, 542, 0, 543, 0, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	0, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 0, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1432, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 0,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 0, 630, 631, 632, 633, 0, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	0, 0, 0, 0, 0, 660, 0, 651, 652, 653,
	654, 0, 655, 0, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 0,
	0, 0, 0, 676, 675, 677, 678, 679, 0, 680,
	681, 1639, 0, 1429, 0, 682, 683, 0, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 0, 317, 0, 318, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 0, 0, 0, 0, 326, 327, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 1431,
	354, 355, 356, 357, 358, 0, 359, 361, 0, 0,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 0, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	0, 0, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 0, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1638, 0, 0, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 0,
	0, 0, 0, 0, 434, 435, 0, 0, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 0,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 0, 510, 0, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 0, 0, 523, 0, 0, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	0, 543, 0, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 0, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 0,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1432, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 0, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 0, 630, 631, 632, 633, 0, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 0, 0,
	0, 0, 0, 660, 0, 651, 652, 653, 654, 0,
	655, 0, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 0, 0, 0,
	0, 676, 675, 677, 678, 679, 0, 680, 681, 1427,
	0, 1429, 0, 682, 683, 0, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 0, 317, 0, 318, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 0,
	0, 0, 0, 326, 327, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 1431, 354, 355,
	356, 357, 358, 0, 359, 361, 0, 0, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 0, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 0, 0,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 0, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1426, 0, 0, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 0, 0, 0,
	0, 0, 434, 435, 0, 0, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 0, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 0, 510, 0, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	0, 0, 523, 0, 0, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 0, 543,
	0, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 0, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 0, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1432, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 0, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 0,
	630, 631, 632, 633, 0, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 0, 0, 0, 0,
	0, 660, 0, 651, 652, 653, 654, 0, 655, 0,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 0, 0, 0, 0, 676,
	675, 677, 678, 679, 0, 680, 681, 2234, 0, 1429,
	0, 682, 683, 0, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	0, 317, 0, 318, 0, 0, 0, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 0, 0, 0,
	0, 326, 327, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 1431, 354, 355, 356, 357,
	358, 0, 359, 361, 0, 0, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 0, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 0, 0, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 0,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 0, 0, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 0, 0, 0, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 0, 0, 0, 0, 0,
	434, 435, 0, 0, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 0, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 0,
	510, 0, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 0, 0,
	523, 0, 0, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 0, 537,
	538, 539, 0, 540, 541, 542, 0, 543, 0, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 0, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 0, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1432, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 0, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 0, 630, 631,
	632, 633, 0, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 0, 0, 0, 0, 0, 660,
	0, 651, 652, 653, 654, 0, 655, 0, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 0, 0, 0, 0, 676, 675, 677,
	678, 679, 0, 680, 681, 2201, 0, 1429, 0, 682,
	683, 0, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 0, 317,
	0, 318, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 0, 0, 0, 0, 326,
	327, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 1431, 354, 355, 356, 357, 358, 0,
	359, 361, 0, 0, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 0, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 0, 0, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 0, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 0, 0, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 0,
	0, 0, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 0, 0, 0, 0, 0, 434, 435,
	0, 0, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 0, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 0, 510, 0,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 0, 0, 523, 0,
	0, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 0, 537, 538, 539,
	0, 540, 541, 542, 0, 543, 0, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 0, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 0, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1432, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 0, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 0, 630, 631, 632, 633,
	0, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 0, 0, 0, 0, 0, 660, 0, 651,
	652, 653, 654, 0, 655, 0, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 0, 0, 0, 0, 676, 675, 677, 678, 679,
	1429, 680, 681, 0, 0, 0, 0, 682, 683, 0,
	684, 685, 686, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 0, 317, 0, 318, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 0, 0,
	0, 0, 326, 327, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 1431, 354, 355, 356,
	357, 358, 0, 359, 361, 0, 0, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 0, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 0, 0, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	0, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 0, 0, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 0, 0, 0, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 0, 0, 0, 0,
	0, 434, 435, 0, 0, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 0, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	0, 510, 0, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 0,
	0, 523, 0, 0, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 0, 543, 0,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 0, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 0, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1432,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 0, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 0, 630,
	631, 632, 633, 0, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 0, 0, 0, 0, 0,
	660, 0, 651, 652, 653, 654, 0, 655, 0, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 0, 0, 0, 0, 676, 675,
	677, 678, 679, 0, 680, 681, 0, 0, 0, 0,
	682, 683, 0, 684, 685, 686, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	1965, 0, 0, 0, 0, 0, 1934, 1935, 1937, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 0, 0, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	1965, 0, 0, 0, 0, 1990, 0, 0, 1937, 0,
	0, 0, 0, 0, 1936, 0, 0, 0, 1984, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 1953, 1990, 0, 0, 0, 0,
	0, 0, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 0, 0, 0,
	0, 0, 1942, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 0, 0, 0,
	0, 0, 1942, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1975, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 1964, 1966, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1981, 0, 1982, 1975, 0, 0, 1985, 0,
	0, 1951, 1952, 0, 0, 1964, 1966, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 1981, 0, 1982, 0, 0, 0, 0, 0,
	0, 1951, 1952, 0, 1957, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1957, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 1987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1963, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	0, 0, 0, 0, 1963, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1976, 0, 1958, 0, 1971,
	1965, 0, 0, 0, 0, 0, 0, 0, 1937, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1984, 0,
	0, 0, 0, 0, 0, 1976, 0, 0, 0, 1989,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 0,
	0, 0, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 1989,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 1974, 0, 0, 0, 0,
	0, 3484, 1959, 1960, 1961, 1962, 1948, 1949, 1955, 1977,
	1954, 1950, 1942, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 1975, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 1964, 1966, 1971, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 0,
	0, 0, 1981, 0, 1982, 0, 1984, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 0, 0, 1973,
	0, 0, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 1957, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 0, 0, 0,
	1942, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979,
	1980, 0, 0, 1975, 1963, 0, 1985, 0, 0, 0,
	0, 0, 0, 1964, 1966, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 1958, 0, 0,
	1981, 0, 1982, 0, 1984, 0, 0, 0, 0, 1951,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 1976, 0, 1973, 0, 0,
	1936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 1957, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 1989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 1959, 1960,
	1961, 1962, 0, 0, 0, 1974, 0, 0, 1942, 0,
	0, 0, 0, 0, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 5016, 0, 0,
	1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0,
	0, 1975, 1963, 0, 1985, 0, 0, 0, 0, 0,
	0, 1964, 1966, 1971, 1965, 0, 0, 0, 0, 0,
	0, 0, 1937, 0, 0, 1958, 0, 0, 1981, 0,
	1982, 0, 1984, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 1976, 0, 1973, 0, 0, 1936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	1957, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 1959, 1960, 1961, 1962,
	0, 0, 0, 1974, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 4919, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 1975,
	1963, 0, 1985, 0, 0, 0, 0, 0, 0, 1964,
	1966, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 0, 0, 1958, 0, 0, 1981, 0, 1982, 0,
	1984, 0, 0, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 1976, 0, 1973, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 1957, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 1974, 0, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0,
	0, 0, 0, 4870, 0, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 0, 1975, 1963, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 1971,
	1965, 0, 0, 0, 0, 0, 0, 0, 1937, 0,
	0, 1958, 0, 0, 1981, 0, 1982, 0, 1984, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 1976,
	0, 1973, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 1957, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 0, 0, 1974,
	0, 0, 1942, 0, 0, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 4869, 0, 0, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 1975, 1963, 0, 1985, 0,
	0, 0, 0, 0, 0, 1964, 1966, 1971, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 1958,
	0, 0, 1981, 0, 1982, 0, 1984, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 1976, 0, 1973,
	0, 0, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 1957, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 1974, 0, 0,
	1942, 0, 0, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 4673,
	0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979,
	1980, 0, 0, 1975, 1963, 0, 1985, 0, 0, 0,
	0, 0, 0, 1964, 1966, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 1958, 0, 0,
	1981, 0, 1982, 0, 1984, 0, 0, 0, 0, 1951,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 1976, 0, 1973, 0, 0,
	1936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 1957, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 1989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 1959, 1960,
	1961, 1962, 0, 0, 0, 1974, 0, 0, 1942, 0,
	0, 0, 0, 0, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 4497, 0, 0,
	1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0,
	0, 1975, 1963, 0, 1985, 0, 0, 0, 0, 0,
	0, 1964, 1966, 1971, 1965, 0, 0, 0, 0, 0,
	0, 0, 1937, 0, 0, 1958, 0, 0, 1981, 0,
	1982, 0, 1984, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 1976, 0, 1973, 0, 0, 1936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	1957, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 1959, 1960, 1961, 1962,
	0, 0, 0, 1974, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 4402, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 1975,
	1963, 0, 1985, 0, 0, 0, 0, 0, 0, 1964,
	1966, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 0, 0, 1958, 0, 0, 1981, 0, 1982, 0,
	1984, 0, 0, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 1976, 0, 1973, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 1957, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 1974, 0, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0,
	0, 0, 0, 4401, 0, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 0, 1975, 1963, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 1971,
	1965, 0, 0, 0, 0, 0, 0, 0, 1937, 0,
	0, 1958, 0, 0, 1981, 0, 1982, 0, 1984, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 1976,
	0, 1973, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 1957, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 0, 0, 1974,
	0, 0, 1942, 0, 0, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 4400, 0, 0, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 1975, 1963, 0, 1985, 0,
	0, 0, 0, 0, 0, 1964, 1966, 1971, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 1958,
	0, 0, 1981, 0, 1982, 0, 1984, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 1976, 0, 1973,
	0, 0, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 1957, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 1974, 0, 0,
	1942, 0, 0, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 4015,
	0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979,
	1980, 0, 0, 1975, 1963, 0, 1985, 0, 0, 0,
	0, 0, 0, 1964, 1966, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 1958, 0, 0,
	1981, 0, 1982, 0, 1984, 0, 0, 0, 0, 1951,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 1976, 0, 1973, 0, 0,
	1936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 1957, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 1989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 1959, 1960,
	1961, 1962, 0, 0, 0, 1974, 0, 0, 1942, 0,
	0, 0, 0, 0, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 3482, 0, 0,
	1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0,
	0, 1975, 1963, 0, 1985, 0, 0, 0, 0, 0,
	0, 1964, 1966, 1971, 1965, 0, 0, 0, 0, 0,
	0, 0, 1937, 0, 0, 1958, 0, 0, 1981, 0,
	1982, 0, 1984, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 1976, 0, 1973, 0, 0, 1936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	1957, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 1959, 1960, 1961, 1962,
	0, 0, 0, 1974, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 3481, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 1975,
	1963, 0, 1985, 0, 0, 0, 0, 0, 0, 1964,
	1966, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 0, 0, 1958, 0, 0, 1981, 0, 1982, 0,
	1984, 0, 0, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 1976, 0, 1973, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 1957, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 1974, 0, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0,
	0, 0, 0, 3480, 0, 0, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 1975, 1963, 0,
	1985, 0, 2381, 0, 0, 0, 0, 1964, 1966, 0,
	0, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 1958, 0, 0, 1981, 0, 1982, 0, 0, 0,
	1984, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 1976,
	0, 1973, 0, 0, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1957, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 2382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 1974,
	0, 0, 0, 0, 1942, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 3479, 0, 0, 0, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 1963, 1975, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 1971,
	1965, 0, 0, 0, 0, 0, 0, 0, 1937, 1958,
	0, 0, 0, 0, 1981, 0, 1982, 0, 1984, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 1976, 0, 0,
	0, 1973, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 1957, 0, 0, 2313,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 2311, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 1974, 0, 0,
	0, 0, 1942, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 3444, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1975, 1963, 0, 1985, 0,
	0, 0, 0, 0, 0, 1964, 1966, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1958,
	0, 0, 1981, 0, 1982, 0, 0, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 2383, 0, 0, 0, 0, 0, 1976, 0, 1973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 1935, 1957, 1967, 1968, 1969, 1978, 1979,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1984, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 2384, 0, 0, 0, 0,
	1936, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 1956, 0, 0, 0, 1987, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2312, 1963, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 1959, 1960,
	1961, 1962, 0, 0, 0, 0, 0, 0, 1942, 5170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1976, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0,
	0, 1975, 0, 0, 1985, 0, 0, 0, 0, 1989,
	0, 1964, 1966, 1971, 1965, 0, 0, 0, 0, 0,
	2310, 0, 1937, 0, 0, 0, 0, 0, 1981, 0,
	1982, 0, 1984, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 0, 0, 1973, 0, 0, 1936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	1957, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 1974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 1959, 1960, 1961, 1962,
	0, 0, 0, 0, 0, 0, 1942, 0, 3544, 0,
	0, 0, 0, 5169, 0, 3543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 1975,
	1963, 0, 1985, 0, 0, 0, 0, 0, 0, 1964,
	1966, 1971, 1965, 0, 0, 0, 0, 3415, 0, 0,
	1937, 0, 0, 1958, 0, 0, 1981, 0, 1982, 0,
	1984, 0, 0, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 1976, 0, 1973, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 1957, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3416, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 1974, 0, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 2926,
	0, 0, 0, 0, 0, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 0, 1975, 1963, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 1971,
	1965, 0, 0, 0, 2925, 0, 0, 0, 1937, 0,
	0, 1958, 0, 0, 1981, 0, 1982, 0, 1984, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 1976,
	0, 1973, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 1957, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 0, 0, 1974,
	0, 0, 1942, 0, 0, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 0, 0, 0, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 1975, 1963, 0, 1985, 0,
	0, 0, 0, 0, 0, 1964, 1966, 1971, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 1958,
	0, 0, 1981, 0, 1982, 0, 1984, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 1976, 0, 1973,
	0, 0, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 1957, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 1974, 0, 0,
	1942, 0, 4774, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979,
	1980, 0, 0, 1975, 1963, 0, 1985, 0, 0, 0,
	0, 0, 0, 1964, 1966, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 1958, 0, 0,
	1981, 0, 1982, 0, 1984, 0, 0, 0, 0, 1951,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 1976, 0, 1973, 0, 0,
	1936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 1957, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 1989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 1959, 1960,
	1961, 1962, 0, 0, 0, 1974, 0, 0, 1942, 0,
	0, 0, 0, 0, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0,
	0, 1975, 1963, 0, 1985, 0, 0, 0, 0, 0,
	0, 1964, 1966, 1971, 1965, 0, 0, 0, 0, 0,
	0, 0, 1937, 0, 0, 1958, 0, 0, 1981, 0,
	1982, 0, 1984, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 1976, 0, 1973, 0, 0, 1936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	1957, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 1166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 1959, 1960, 1961, 1962,
	0, 0, 0, 1974, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 0, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0, 1975,
	1963, 0, 1985, 0, 0, 0, 0, 0, 0, 1964,
	1966, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 0, 0, 1958, 0, 0, 1981, 0, 1982, 0,
	1984, 0, 0, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 1976, 0, 1973, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 1957, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 0,
	0, 1974, 0, 0, 1942, 0, 0, 0, 0, 0,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 0, 1975, 1963, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 1971,
	1965, 0, 0, 0, 0, 0, 0, 0, 1937, 0,
	0, 1958, 0, 0, 1981, 0, 1982, 0, 1984, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 1976,
	0, 1973, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 1957, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 0, 0, 1974,
	0, 0, 1942, 0, 4218, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 0, 0, 0, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 1975, 1963, 0, 1985, 0,
	0, 0, 0, 0, 0, 1964, 1966, 1971, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 1958,
	0, 0, 1981, 0, 1982, 0, 1984, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 1976, 0, 1973,
	0, 0, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 1957, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 1974, 0, 0,
	1942, 0, 0, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 1963, 0, 1985, 0, 0, 0,
	0, 0, 0, 1964, 1966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	1981, 0, 1982, 0, 0, 0, 0, 0, 0, 1951,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1976, 0, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 1935, 1957, 1967, 1968, 1969, 1978, 1979, 1980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1989,
	0, 0, 0, 1971, 1965, 0, 0, 0, 0, 0,
	0, 0, 1937, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1984, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 0, 0, 0, 0, 0, 1936, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 1956,
	0, 0, 0, 1987, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 1974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 1959, 1960, 1961, 1962,
	0, 0, 0, 0, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 0, 3550, 0, 0, 0, 0,
	0, 0, 0, 1976, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 1975,
	0, 0, 1985, 0, 0, 0, 0, 1989, 0, 1964,
	1966, 0, 0, 1971, 1965, 0, 0, 0, 3545, 0,
	3996, 0, 1937, 0, 0, 0, 1981, 0, 1982, 0,
	0, 0, 1984, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 1973, 0, 0, 0, 0, 1936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1957, 1956,
	0, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 1959, 1960, 1961, 1962,
	0, 0, 0, 0, 0, 0, 1942, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1934, 1935,
	0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 1963, 1975,
	0, 0, 1985, 0, 0, 0, 0, 0, 0, 1964,
	1966, 1971, 1965, 0, 0, 0, 0, 0, 0, 0,
	1937, 1958, 0, 0, 0, 0, 1981, 0, 1982, 0,
	1984, 0, 0, 0, 0, 1951, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 1976,
	0, 0, 0, 1973, 0, 0, 1936, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 1957, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 1959, 1960, 1961, 1962, 0, 1974,
	0, 0, 0, 0, 1942, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1934, 1935, 0, 1967,
	1968, 1969, 1978, 1979, 1980, 0, 0, 1975, 1963, 0,
	1985, 0, 0, 0, 0, 0, 0, 1964, 1966, 1971,
	1965, 0, 0, 0, 3483, 0, 0, 0, 1937, 0,
	0, 1958, 0, 0, 1981, 0, 1982, 0, 1984, 0,
	0, 0, 0, 1951, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 1976,
	0, 1973, 0, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 1957, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 1959, 1960, 1961, 1962, 0, 3510, 0, 1974,
	0, 0, 1942, 0, 0, 0, 0, 0, 0, 0,
	1948, 1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946,
	1938, 1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0,
	0, 0, 0, 0, 1934, 1935, 0, 1967, 1968, 1969,
	1978, 1979, 1980, 0, 0, 1975, 1963, 0, 1985, 0,
	0, 0, 0, 0, 0, 1964, 1966, 1971, 1965, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 1958,
	0, 0, 1981, 0, 1982, 0, 1984, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 1976, 0, 1973,
	0, 0, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1956, 1957, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	1959, 1960, 1961, 1962, 0, 0, 0, 1974, 0, 0,
	1942, 0, 0, 0, 0, 0, 0, 0, 1948, 1949,
	1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938, 1939,
	1940, 1941, 1943, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979,
	1980, 0, 0, 1975, 1963, 0, 1985, 0, 0, 0,
	0, 0, 0, 1964, 1966, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 1958, 0, 0,
	1981, 0, 1982, 0, 1984, 0, 0, 0, 0, 1951,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 1976, 0, 1973, 0, 0,
	1936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1956, 1957, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 1989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 1959, 1960,
	1961, 1962, 0, 0, 0, 1974, 0, 0, 1942, 0,
	0, 0, 0, 0, 0, 0, 1948, 1949, 1955, 1977,
	1954, 1950, 0, 1947, 1945, 1946, 1938, 1939, 1940, 1941,
	1943, 1944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1934, 1935, 0, 1967, 1968, 1969, 1978, 1979,
	1980, 1975, 1963, 0, 1985, 0, 0, 0, 0, 0,
	0, 1964, 1966, 0, 0, 1971, 1965, 0, 0, 0,
	0, 0, 0, 0, 1937, 1958, 0, 0, 1981, 0,
	1982, 0, 0, 0, 1984, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 1976, 0, 1973, 0, 0, 0, 0,
	1936, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1957, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 1989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 2494, 0, 1959, 1960,
	1961, 1962, 0, 1974, 0, 0, 0, 0, 1942, 0,
	0, 0, 0, 0, 1948, 1949, 1955, 1977, 1954, 1950,
	0, 1947, 1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1934,
	1935, 0, 1967, 1968, 1969, 1978, 1979, 1980, 0, 0,
	1963, 1975, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 1964, 1966, 1965, 0, 0, 0, 0, 0, 0,
	0, 1937, 0, 1958, 0, 0, 0, 0, 1981, 0,
	1982, 1984, 0, 0, 0, 0, 0, 1951, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 1976, 0, 0, 0, 1973, 0, 1936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1956, 0,
	1957, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 1959, 1960, 1961, 1962, 0,
	0, 1974, 0, 0, 0, 1942, 0, 0, 0, 0,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1975, 0,
	1963, 1985, 0, 0, 0, 0, 0, 0, 1964, 1966,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1958, 0, 1981, 0, 1982, 0, 0,
	0, 0, 0, 0, 1951, 1952, 0, 1044, 0, 1095,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1976, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1052, 0, 0, 1957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1067, 0, 1050, 1049, 1989, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1069, 0, 0, 0,
	0, 0, 1051, 0, 0, 0, 1983, 1054, 0, 0,
	0, 0, 1106, 0, 1079, 0, 0, 0, 0, 0,
	0, 0, 1064, 1065, 0, 0, 0, 0, 0, 0,
	0, 1084, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1096,
	1056, 1974, 0, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 1948, 1949, 1955, 1977, 1954, 1950, 0, 1947,
	1945, 1946, 1938, 1939, 1940, 1941, 1943, 1944, 0, 1058,
	0, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 0, 0, 0, 0, 0, 0, 1963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1958, 0, 1094, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1060, 0,
	0, 0, 0, 0, 0, 0, 0, 1048, 1976, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1061, 1062, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 1070, 1068, 0, 0,
	0, 0, 0, 0, 1063, 0, 0, 0, 1080, 0,
	0, 1101, 1100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1103, 1092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1097,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1948,
	1949, 1955, 1977, 1954, 1950, 0, 1947, 1945, 1946, 1938,
	1939, 1940, 1941, 1943, 1944, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1055,
	0, 0, 1105, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1053, 0, 0, 0,
	0, 1088, 1089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1091, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1098, 1086, 0, 0, 0, 0, 0, 0, 0, 1104,
	1081, 0, 0, 1073, 1071, 0, 0, 1076, 0, 0,
	0, 0, 0, 1077, 0, 0, 1046, 0, 1099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1047, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1090, 0, 1078, 0, 0,
	0, 0, 0, 1075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1102, 0, 0, 0, 0, 0,
	0, 0, 1082, 0, 1083, 0, 0, 0, 0, 0,
	0, 0, 1059, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1085, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1087,
}

var sqlPact = [...]int{
	6555, -1000, -1000, -1000, -1000, 186, -1000, -1000, 184, 183,
	182, 177, 175, 172, 171, 170, 167, 166, 164, -1000,
	-1000, 162, 161, 160, 159, -1000, -1000, 158, -1000, -1000,
	157, -1000, 156, 155, 154, -1000, -1000, 149, -1000, 148,
	-1000, -1000, -1000, -1000, 146, 144, 143, 98307, 97719, 98893,
	2438, 125317, 107697, 2084, 87147, 124729, 86559, 124141, 2313, 12119,
	123553, 2886, 141, -1000, 122965, 139, 138, 137, -1000, 107109,
	122377, 104759, 104171, 1971, -1000, 136, 135, -1000, 9164, 75925,
	133, 132, 131, 130, 3804, 125, -1000, 123, 116, -1000,
	-1000, 115, -1000, 13603, 1570, -1000, 114, 112, -1000, 593,
	103583, 110, 108, 105, 2747, 102, 99, 72981, 98, 96,
	95, 2563, 2985, -1000, -1000, 2193, -1000, -1000, 94, 93,
	92, 91, 90, 89, 87, 86, 85, 84, 83, 82,
	81, -1000, 80, 78, 77, 75, 74, -1000, 72, 68,
	67, -1000, 62, -1000, 56, 55, 54, 53, 51, 50,
	49, 48, 47, 45, 43, 41, 40, 39, 37, 146765,
	-1000, -1000, 36, -1000, 2104, 1804, 1783, 1769, 1765, 1754,
	1026, 35, 33, 32, 30, 29, 28, 26, 25, 23,
	22, 21, 20, 18, 17, 14, 11, 10, 9, 8,
	6, 153, 5, 4, 3, 2, -2, -4, -10, 2463,
	3751, -1000, 1911, 953, 32800, 3149, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 134107, 125903, -14, -74,
	-15, -1000, 3508, 1097, 60572, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 274, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 477, 2523, 727, -1000, -1000, -1000, 121789, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2432, -3, -1000, 2159,
	-1000, -1000, -1000, -1000, -1000, 726, -1000, 2426, 2388, 356,
	2383, -1000, -1000, -1000, 3622, 2581, 4083, 4081, 4079, 4078,
	4077, 133521, 1989, 4076, 2663, 4074, 4073, 4071, 4068, 4066,
	4065, 4054, -1000, 97131, 1096, 96543, 95955, 3606, 121203, 95367,
	120615, 136457, 50956, 806, 3616, -1000, -1000, -1000, -1000, -1000,
	-1000, 125903, -1000, 1089, -1000, -1000, 4053, 2215, 725, 106521,
	-1000, -1000, 120027, 2027, -1000, -1000, -1000, 972, 1209, 35208,
	35208, 35208, 258, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3588, -1000, -1000, -1000, -1000, 125903, 2847, 2847, 1469, 1458,
	1458, 2847, 2847, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4050, 4041, 4038, 4032, 4026, -1000, -1000, -1000, 85971,
	25385, 85383, 84795, 119439, 50354, 94779, 94191, 4024, 4023, 4016,
	49752, 80679, 58177, 3750, 118851, 135869, 3749, 3745, 1088, 2157,
	1560, -1000, -1000, -1000, -1000, -1000, -1000, -34, 77686, 3809,
	125903, -1000, 255, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	49150, 625, 48548, 674, 47946, 611, 118263, -1000, -1000, -1000,
	-1000, 80081, -1000, 117675, 2580, 4015, 4014, 1197, 4013, 3476,
	1988, 4012, 2021, 1288, 4010, 4009, 4008, 4007, 4004, 4002,
	4001, 1597, 117087, 3147, 1672, 116499, 1821, 135281, 1087, 93603,
	98893, 2757, 115911, 1520, 1399, -1000, -1000, -1000, -1000, 3260,
	2982, 2980, 1367, -1000, -1000, -1000, -1000, 64130, 7149, 6818,
	-1000, -1000, 12903, 115323, 67110, 98893, 98893, -1000, -1000, -1000,
	-1000, -1000, -1000, 47344, 378, 46742, 761, 114735, -1000, -1000,
	64726, 3089, 1131, -1000, -1000, -1000, -1000, -1000, 114147, 46140,
	323, 45538, 670, 125903, -1000, 3144, 2105, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3581, 1688, 3806, 2851,
	79483, 2202, 1488, 3552, 3253, 3236, 1607, 2149, 3208, 3999,
	2776, 3203, 3197, 3192, 3182, 3178, 1369, 2703, 379, 2699,
	32198, 3117, 1900, 44936, 1595, 1598, 3175, 3165, 3827, 3696,
	2134, 2163, 2274, 2201, 84207, 3998, 3997, 3502, 3163, 3162,
	2910, 3157, -1000, 3087, 1594, 254, -1000, -1000, -1000, -1000,
	-1000, -1000, 1554, -1000, -1000, -1000, -1000, -1000, 89491, -1000,
	-1000, 1390, -1000, -1000, 1390, -1000, -1000, -1000, -1000, -1000,
	1379, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1911, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2964, -1000, 2225, -1000,
	-1000, -1000, 2644, 3469, 3469, 3469, 3614, 463, 454, -1000,
	153, -1000, -1000, 146081, -1000, -1000, 51558, 51558, 51558, 51558,
	51558, 51558, 51558, 51558, 2308, -1000, 722, -1000, -1000, 769,
	-1000, 709, 659, 583, -1000, -1000, -1000, -1000, -1000, -1000,
	707, -1000, -1000, -1000, -1000, -1000, -1000, 3807, -1000, 28449,
	-1000, -1000, -1000, 419, 705, 51558, -1000, -1000, 3846, 3845,
	1083, -1000, 240, 998, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3139, 703, 701, -1000,
	700, 699, 698, 695, 690, -1000, 689, -1000, 688, 687,
	686, 685, 683, 681, 680, 678, -1000, 2223, -1000, -1000,
	-1000, -1000, -1000, -1000, 647, 646, 646, 646, -1000, 1082,
	-1000, -1000, -1000, 243, 644, 241, 643, 642, 640, -1000,
	677, 676, 675, 673, 671, 669, 667, 665, 663, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1080, -1000, -1000, -1000,
	-1000, 1363, -36, 125903, -1000, 477, -36, -1000, -1000, 661,
	-1000, 37032, 37032, 37032, -1000, -1000, 2424, 51558, -1000, 2748,
	-1000, -29, -29, 949, 62339, -1000, 59372, 949, 368, 777,
	68285, -1000, 3086, -1000, -1000, 660, 233, -1000, -1000, -1000,
	-1000, 25981, 3083, 125903, 125903, 125903, 98893, 98893, 98893, 125903,
	3996, 3994, 3354, 51558, -1000, -1000, 75337, 138216, 99479, -1000,
	-1000, 3730, 73567, 74750, 3133, 138216, 3129, 137633, 3992, -1000,
	-1000, -1000, -1000, -1000, 3309, 3991, 3988, 3986, -1000, 125903,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 256, 3306, -1000,
	-1000, 102995, 256, 3303, -1000, 256, 3302, -1000, 102409, -1000,
	-1000, 2390, 3301, -1000, -1000, 260, 3300, -1000, -1000, -1000,
	257, 3296, -1000, -1000, 230, -83, 3295, -1000, -1000, -1000,
	-1000, -1000, -1000, 146081, -1000, -1000, -1000, 137045, -1000, 3510,
	-1000, 125903, -1000, 51558, -1000, -1000, 3729, 1985, 3585, 3664,
	-1000, -1000, -48, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2633, 2624, 1210, 2469, -1000, 3366, 1533, 35208, 3459, -1000,
	-1000, -1000, -1000, -1000, 227, 25981, 2971, -1000, -1000, 125903,
	-1000, 125903, 2847, 2847, -1000, -1000, -1000, 3816, 3815, 2847,
	2847, 125903, 125903, -1000, -1000, -1000, -1000, -1000, -1000, 2647,
	3293, 1655, -1000, 2462, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2057, 3291, -1000, 2324, 3289, 1980, -1000,
	-1000, 2889, -1000, 142595, 1446, -1000, -1000, -1000, -1000, 1994,
	3286, -28, -1000, -1000, 2229, -1000, -1000, -1000, -1000, 142387,
	-1000, 3021, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1785, -1000, -1000, 2203, 2106, -1000, 1402, 3285, -1000,
	2848, 2848, 93015, 3310, 66514, 64726, 77686, -39, -1000, -1000,
	-1000, -1000, -1000, -90, -1000, 24782, 146081, -1000, -1000, -1000,
	-1000, 1912, 146081, 933, -1000, -1000, 3284, -1000, 146081, 931,
	-1000, -1000, 3283, -1000, 2702, -1000, 3128, -1000, -1000, 2534,
	2533, 1055, -1000, 3983, -1000, -1000, 3982, -1000, 3981, 3980,
	3978, -1000, 1720, 2143, 3975, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 92429, 2422, -1000, -1000, 88905, 3127, -1000,
	2532, 3663, -1000, 91841, 1086, -1000, 1021, 2531, -1000, 101823,
	1052, 2529, -1000, 3974, 3605, 2793, 1021, 2528, -1000, -1000,
	-1000, -1000, -1000, 1025, -1000, 70044, -1000, 70044, -1000, 1758,
	-1000, 132935, -29, 98893, 3807, -1000, -77, -1000, -1000, -1000,
	1097, -1000, 63531, -1000, 63531, 105933, 81275, 1000, 3080, 72392,
	145873, -1000, 1050, -1000, -1000, 146081, -1000, -1000, -1000, 2701,
	-1000, -282, 2844, -1000, 81275, 65918, 3079, 2700, -1000, 146081,
	-1000, -1000, -1000, -1000, 146081, -1000, -1000, -1000, 81275, 88905,
	-1000, 113559, 91253, -1000, -1000, 1592, 2690, -1000, -1000, -1000,
	81275, 1414, 81275, 81275, 81275, -1000, 112971, -1000, -1000, 2233,
	1368, 3504, 2217, 98893, -1000, 1968, -1000, -1000, -1000, 3532,
	3294, 125903, -1000, -1000, 3119, -1000, 77099, 101237, -1000, 100651,
	-1000, 100065, -1000, 98893, -1000, 98893, -1000, 3970, 3964, 3963,
	-1000, -1000, 3961, -1000, 3959, 3516, -1000, 666, 44334, 146081,
	3511, -1000, 3958, 2160, 3117, 146081, -1000, 3287, 1791, 1762,
	125903, -1000, -1000, 125903, -1000, 125903, -1000, -1000, -1000, 2457,
	1691, -1000, -1000, 2632, -1000, -1000, -1000, 1048, -1000, -1000,
	98893, 98893, 98893, 98893, 1269, -1000, 43732, -1000, -1000, 3159,
	3955, 1862, -1000, 1917, -1000, 3077, 3521, -1000, 1578, 1919,
	226, 3848, -1000, -1000, 263, -1000, -1000, -48, -1000, 132349,
	-1000, 2644, -1000, 125903, -1000, 2591, 3111, 3116, 1864, 2454,
	2762, -1000, 43130, 2686, 55170, 2461, 153, -1000, -1000, 153,
	153, 34004, -1000, -1000, 73567, 73567, 25981, 1388, 51558, 51558,
	51558, 51558, 51558, 51558, 51558, 51558, 51558, 51558, 51558, 51558,
	51558, 51558, 51558, 51558, 51558, 51558, 51558, 51558, 51558, 51558,
	51558, 51558, 51558, 51558, 51558, 51558, 51558, 51558, 51558, 51558,
	51558, 51558, 51558, 51558, 2305, 51558, 1372, 51558, 51558, 51558,
	51558, 1957, -1000, -1000, 2108, 524, 2180, 659, -1000, -1000,
	-1000, 3775, 3775, 3775, 1214, 1214, 1214, 146498, 146498, 629,
	3954, 769, -1000, 51558, -1000, 120, 62925, 51558, 26579, -1000,
	454, 11268, 2666, -1000, 453, 27211, -1000, -1000, -1000, 28449,
	583, 42498, 51558, 1062, 146081, -1000, -1000, 1455, 3811, 24179,
	3158, 2891, 658, 876, 863, 31566, 30934, 30302, 29670, 862,
	756, 51558, 51558, 51558, 51558, 51558, 51558, 51558, 51558, -1000,
	-1000, 3814, -1000, 3811, -1000, -1000, -1000, -1000, 3811, 1385,
	1306, 3811, -1000, 3811, 3811, 8585, 8585, 41896, 41294, 40692,
	55772, 40090, 51558, 29068, 39488, 38886, -1000, 57578, 125903, -36,
	3727, 51558, 352, -1000, 143505, -1000, 352, 352, 655, -91,
	146081, 2683, 2683, 61161, 2551, 2320, 2320, 2320, -1000, 949,
	18714, 949, 111213, 2343, 949, 949, 225, 265, 452, 58776,
	2748, 111213, 750, 653, -16, -17, -20, -1000, -1000, -22,
	-24, -1000, -1000, 98893, 652, 26579, 25981, 214, 2169, -94,
	2722, 2719, -1000, 2716, 2715, -1000, 2713, 2417, -1000, -1000,
	-1000, 1948, -97, 1365, 98893, 125903, 1569, 3951, -85, -1000,
	6220, -99, -1000, 1353, 207, 3811, -1000, -1000, -1000, -1000,
	-1000, 3946, 3945, -1000, 1077, 650, 649, 437, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 647, 646, 646, 646,
	-1000, 243, 644, 241, 643, 642, 640, -1000, -1000, -1000,
	-1000, -1000, 3073, 98893, 125903, 1568, 3944, 87733, -83, 99479,
	-87, -1000, -1000, 125903, -1000, -1000, -1000, 3942, -1000, 98893,
	-1000, -1000, 98893, 256, 3282, -1000, 98893, -1000, 98893, 248,
	3281, -1000, -1000, 125903, -1000, 98893, 98893, -1000, 125903, 125903,
	125903, 138216, 138216, 244, -1000, 98893, 859, -102, 1207, -48,
	-1000, -1000, -1000, -1000, 1390, -1000, 1870, -1000, -1000, -1000,
	-1000, -1000, -1000, 1611, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1083, -1000, -1000, -1000, -1000, 3792, 3785, -37,
	-1000, -1000, 25981, -1000, 2042, -1000, -1000, -1000, -1000, 125903,
	125903, -1000, -1000, 125903, 125903, -1000, -1000, -49, 1703, 569,
	1364, -1000, 83619, 2522, 3506, 3941, 2783, 3485, 1756, -1000,
	1690, 639, -1000, 3617, 89491, 3694, 3703, 1426, -1000, 3070,
	-1000, -1000, -1000, 970, 1847, 1897, 1362, 1361, 89491, 2324,
	-1000, 73567, -1000, 2765, 3608, 1458, 1412, 1458, 1458, 1406,
	-1000, 89491, 1895, 1359, 1358, 1357, -1000, -1000, 1733, 1719,
	-1000, -1000, 112385, 1646, -1000, 1355, 1354, 3744, 2964, 2329,
	796, 2076, -1000, 1436, 1346, 3068, -1000, -1000, -51, 3691,
	3702, 1426, -1000, 3067, 1343, -1000, -1000, -1000, 3607, 98893,
	25981, 1645, 1644, 1637, 1894, 1341, -38, -1000, 3685, 1717,
	-1000, 88905, 88905, 108283, 125903, 3757, 81275, -1000, 2536, -1000,
	-1000, -1000, 3549, 3544, -1000, -1000, 1337, 1333, -1000, 1079,
	5530, 3385, -1000, 138216, 1079, 1079, 1978, 3272, 2821, 1673,
	-1000, 2839, 924, 2833, -1000, -1000, -1000, 924, -39, 77686,
	125903, 201, -1000, 120, 51558, 51558, 120, 51558, 120, -1000,
	3653, 3271, 3268, 3937, -1000, -1000, -1000, -1000, -1000, 3935,
	2095, 2649, -1000, -1000, 635, 2525, 3061, 125903, 179, -1000,
	98893, 3172, 76512, 3258, 138216, 2324, 2524, -1000, -1000, 90665,
	-1000, 3256, 477, 2521, -1000, 682, 3933, 3251, -1000, 131763,
	-1000, 3510, 1403, 3246, 1128, 522, 3726, -1000, 522, 70631,
	-1000, 125903, -1000, -29, 292, 82447, -104, -105, 449, -1000,
	111799, 125903, 125903, 3446, 2124, 2119, -1000, 1008, 64726, -1000,
	64726, -107, -1000, -282, 2832, 1657, 64726, -1000, 1000, -143,
	924, -1000, 924, -1000, 98893, 3115, -1000, -1000, 81275, 1409,
	1407, 1404, -1000, -1000, -1000, -1000, 3932, 3931, 3930, 3929,
	-1000, -1000, 1020, 98893, 125903, 98893, -1000, -1000, 1663, -1000,
	200, -1000, 138216, -1000, 138216, 125903, 98893, -1000, 1020, 125903,
	1020, 125903, 1020, 125903, 1020, 1020, -1000, -1000, -1000, -1000,
	-1000, 120, -1000, -1000, 146081, -1000, 51558, -1000, -1000, 1689,
	3926, 1779, -1000, 3114, -1000, 3113, -1000, 16, -1000, -1000,
	3813, 2004, -1000, 3844, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3924, 146081, -1000, 1984, -1000, -1000, -1000, -1000,
	98893, 98893, 98893, 98893, 125903, 3382, -1000, 125903, 3380, 98893,
	-1000, 3808, -1000, -1000, 89491, -1000, 2591, 3111, -1000, -1000,
	-1000, -1000, -1000, -1000, 1563, 2394, -1000, 2689, -1000, 1724,
	-1000, -1000, -1000, 146081, 56374, -1000, -1000, 146081, 1930, -1000,
	54568, 53966, -1000, -1000, 1863, 98893, 2739, -1000, 2739, -82,
	-1000, 143297, 2688, 98893, -1000, -1000, -1000, -1000, -1000, 969,
	962, 962, 1375, 1375, 1375, 1375, 3657, 6710, 7890, 6248,
	8071, 8071, 8767, 8767, 8767, 8767, 8767, 8071, 394, 1214,
	1214, 394, 394, 394, 394, 394, 1214, 1214, 1214, 8071,
	8071, 8071, 1214, 146498, 146291, 12542, 51558, 51558, 1332, 2096,
	524, 12004, 51558, 7387, 7387, 7387, 7387, -1000, 1940, -1000,
	-1000, -1000, -1000, 3057, 634, 55772, 55772, -1000, -1000, -1000,
	-1000, 27830, 51558, -1000, -1000, -1000, -1000, 38254, -1000, -1000,
	142177, -336, 448, -1000, 195, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 447, -75,
	58, -1000, 51558, 51558, 51558, 446, -1000, 194, 51558, 125903,
	-1000, 138835, 749, -138, -1000, -110, 1470, -1000, 51558, -1000,
	-1000, 1330, -1000, 1329, 1328, 1326, -1000, 633, 444, -1000,
	193, -1000, 2335, 631, 630, 51558, -1000, -1000, -1000, -1000,
	-1000, 141969, -1000, -1000, 141761, -1000, -1000, 141553, -1000, -1000,
	141345, -1000, -1000, -1000, -1000, -1000, 145665, 138805, 17936, 17627,
	9496, 16878, 16374, -113, 443, -115, 441, 968, 967, 435,
	433, 428, -116, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -118, 423, -1000, 3056, -75,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 422, -1000,
	421, -1000, 145457, -75, 415, 837, -1000, 55772, 55772, 55772,
	55772, 414, -1000, 143089, -1000, 145249, 37652, 37652, 37652, 413,
	145039, 51558, -75, -123, -1000, -125, -1000, -1000, -1000, -1000,
	523, -126, 1028, 37032, 59983, 25981, -1000, 1028, 1028, 51558,
	-1000, 51558, 2695, -1000, -1000, -1000, -1000, 2685, 2602, 2683,
	61161, -1000, -1000, -1000, -1000, 111213, -1000, 3807, 3373, -1000,
	111213, -1000, -1000, 125903, 477, -1000, 111213, 111213, 25981, 949,
	-1000, 949, 111213, 623, -1000, -1000, -1000, -1000, -1000, 412,
	71220, 58, 189, 25981, 1021, -1000, -1000, 2826, 2826, 2826,
	2826, 2826, 98893, -1000, -1000, 138216, 1325, -46, -121, 2831,
	-1000, 3755, -1000, 2243, -1000, 73567, -1000, 766, 1115, 25981,
	-1000, -1000, -1000, 612, -1000, 3811, 3811, -1000, 3811, 138216,
	3039, 206, 2828, -1000, 2416, -42, 176, 138216, 3922, -1000,
	-1000, 256, -1000, 98893, 256, 256, -1000, 98893, 98893, 2390,
	-1000, 260, -1000, 257, -1000, -1000, -83, -1000, 1046, 35208,
	-1000, 1390, -1000, -1000, 1651, -1000, 2129, -1000, 1263, -1000,
	-1000, 35208, -1000, 3450, -1000, 1822, -1000, -1000, -1000, -1000,
	3747, 125903, 125903, 98893, -1000, 109455, 125903, -1000, 2323, 138216,
	-1000, 2517, 131177, 2496, 130591, 73567, -1000, -1000, 609, 984,
	2687, 2684, 1126, 125903, 125903, 2679, 130005, 129419, -1000, 3920,
	125903, 2205, 51558, 109455, 3599, 2310, 2645, 120, 120, -1000,
	120, -1000, -1000, 592, 1290, 98893, 98893, 125903, 138216, 98893,
	1967, -1000, -1000, -1000, -1000, -1000, 90077, -1000, -1000, 1458,
	-1000, -1000, -1000, 1458, 2324, 1938, 125903, 138216, 98893, 138216,
	128833, 2061, 128247, 2059, -1000, -1000, 2054, 1893, 125903, -1000,
	-1000, -1000, -1000, 1510, -1000, 796, 1301, 3036, 51558, 51558,
	2284, 120, 120, -1000, 120, 591, 25981, 2097, -1000, 3081,
	125903, 3843, 127661, 3842, 125903, 125903, 125903, 138216, 3551, 125903,
	-1000, -143, -45, -136, -1000, 902, 894, -90, -1000, 3757,
	-1000, 893, 2215, 125903, 138216, -1000, 127075, 5530, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2209, 78885, 1139, 125903, 1402,
	-1000, -1000, 1890, 1299, 1298, 89491, 2256, 1882, 1992, 138216,
	64726, 1011, 64726, 2801, -1000, -1000, 23576, -1000, 146081, 146081,
	-1000, 146081, -1000, 76512, 81275, 125903, -1000, -1000, 1085, 125903,
	83033, 983, 3243, 69457, -90, 1000, 88905, 81275, 3168, 125903,
	2735, 125903, -1000, -1000, 2324, 3241, 477, 2515, -1000, 138216,
	3725, 3238, 590, 3916, 3915, -1000, 98893, 2408, 2514, -1000,
	-1000, 126489, 3304, 796, 125903, 1028, 61161, 2092, -1000, 67699,
	1108, 125903, 1990, 151, -1000, -1000, -1000, -5, 125903, -1000,
	762, -1000, -1000, 292, 292, 1000, -136, 589, 65322, -131,
	-1000, 188, 588, 891, 888, -1000, 4110, -1000, -282, -1000,
	81275, 1008, 64726, 3029, -282, 2824, 3026, -1000, -1000, 1040,
	-1000, 1467, 1000, -1000, 81275, -1000, 81275, -1000, 81275, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -30, 1991, 125903,
	-83, -83, -58, -46, -1000, 1020, -1000, 1020, -1000, 1020,
	-1000, -1000, -1000, 146081, -1000, -1000, -1000, 1768, 1757, 125903,
	-1000, 3110, -1000, 125903, -1000, -1000, 25981, 125903, 98893, 25981,
	98893, 3103, 3101, -1000, -1000, -1000, 125903, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1169, -1000, 1930, 2392, -1000,
	583, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2601, -1000, -47, 34004, 934, -1000, -1000, 98893, -31, 51558,
	51558, 10626, 9903, 51558, 55772, 55772, -1000, 51558, 5362, -1000,
	-1000, -1000, -1000, -1000, 3024, 580, 51558, 73567, 5940, 5272,
	-1000, 405, 14963, 394, -1000, 51558, -1000, 6217, -1000, 404,
	36430, -1000, 143921, -44, -133, -1000, 19331, -75, -145, -1000,
	-1000, 765, -1000, 3323, -1000, 51558, 144753, 2573, 2050, 2009,
	1788, 3811, 3841, 22973, -1000, 71806, 1053, 2349, 141137, -1000,
	-1000, -1000, -1000, 73567, 73567, 51558, 51558, -1000, 51558, 51558,
	51558, -1000, -1000, -1000, 3811, 948, -1000, -1000, -1000, 948,
	-1000, -1000, 1458, -1000, 1458, -1000, 51558, -1000, -1000, 3022,
	51558, -1000, 73567, 73567, 55772, 55772, 55772, 55772, 55772, 55772,
	55772, 55772, 55772, 55772, 55772, 55772, 55772, 55772, 55772, 55772,
	55772, 55772, 55772, 55772, 2668, 55772, 3773, 3773, 3773, 1440,
	-1000, 3097, 3022, 51558, 51558, 73567, 391, 389, 376, -1000,
	51558, -75, -1000, -1000, 7830, 578, -1000, 2592, -1000, 2890,
	-1000, 51558, -1000, -146, -1000, 2748, -1000, -1000, 2890, 2890,
	-147, 146081, 61161, 61161, -1000, 577, 51558, 2673, -1000, -1000,
	745, -328, -1000, 884, -1000, -1000, -1000, -1000, -1000, -1000,
	870, -1000, 477, -1000, -1000, -1000, 180, 111213, 111213, 742,
	-1000, -148, -1000, -1000, -150, -1000, 3723, 374, 25981, -1000,
	1028, 4115, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2710,
	-274, 138216, 138216, 1825, 2380, 3840, -1000, 3812, 764, 740,
	152, 3811, 371, 369, 363, -83, 138216, 138216, 1824, 74163,
	138216, -1000, -1000, -1000, 256, -1000, -1000, -1000, 248, -1000,
	-1000, -1000, -1000, 2761, -1000, -48, -1000, -1000, -1000, 51558,
	-1000, 996, -1000, -1000, 3503, 576, 1291, 1289, -1000, -153,
	-1000, 869, -1000, -1000, -1000, -1000, 2995, -1000, 3235, -1000,
	2513, -1000, 1112, 2511, 2191, -1000, 51558, 575, 2792, 574,
	571, 3914, 2252, 3913, 1127, 3233, 2390, 3232, 2390, -1000,
	-1000, -1000, 975, -1000, 146081, -155, -1000, 2310, -1000, 567,
	565, -1000, -49, 1681, 358, 1282, 1037, -1000, -1000, 51558,
	51558, 110627, -1000, 492, 3498, -32, -1000, -1000, -1000, 1819,
	1280, 1273, -1000, -1000, -1000, -1000, 2324, 1813, 1268, 1267,
	-1000, -1000, -1000, -1000, -1000, 2510, -1000, 125903, -1000, 3230,
	125903, 125903, 1035, -1000, 3179, 3177, 959, 125903, 51558, 51558,
	144545, 144337, -1000, 1027, -1000, -1000, 51558, -1000, -51, 1253,
	3668, 2508, 98893, -1000, 2390, 3227, 1252, -1000, 1248, -1000,
	-1000, -1000, 3684, 3683, 1259, -1000, 108283, 81275, 81275, 3757,
	64726, -1000, -1000, -1000, 81275, -1000, -1000, 78289, -1000, -1000,
	1079, 125903, 138216, 98893, 1910, -1000, -1000, 87733, 88319, 125903,
	2821, -83, 924, -1000, 2545, 924, 1011, 3018, -1000, 2727,
	-1000, 1024, 98893, 3909, 355, -156, -54, 73567, -1000, -1000,
	-1000, -1000, 2496, 98893, 125903, 1338, 2778, 125903, 125903, 3722,
	-1000, 2447, 622, 98893, 951, -1000, 3807, -1000, -1000, -1000,
	125903, -1000, -1000, 1023, -1000, 3662, 98893, 3719, 3226, 1021,
	120, 98893, 3825, -1000, -1000, 3718, 98893, 3224, 2406, 2506,
	2643, 796, 81861, 1021, 2348, -64, -1000, 1990, 35810, 3496,
	-158, -1000, -1000, -1000, 1028, 70631, 61161, 51558, 3908, -161,
	-1000, -1000, -1000, -1000, -1000, 108283, 81275, 1000, 125903, 125903,
	3907, 81275, 81275, 81275, -56, 563, -1000, 868, 866, 856,
	-1000, -1000, -1000, -1000, -1000, -1000, 854, 840, 830, 829,
	1008, -1000, -1000, -282, 64726, 1008, 64726, 120, -1000, 2373,
	98893, -1000, 1000, 1000, 1000, 22370, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1020, 3839, -90, -1000, -1000, -1000, 2285,
	2460, 2285, 1977, 1969, -1000, -1000, 2391, -1000, -1000, -1000,
	-1000, 2766, 3457, 25981, 3613, 7387, 51558, 51558, 5322, 1235,
	1098, 7387, 51558, 51558, 73567, 7429, -164, 51558, 51558, -1000,
	51558, 736, 146081, -1000, 3837, 51558, 350, 346, -1000, -1000,
	-1000, 3810, -1000, -1000, -1000, 146081, 51558, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 345, -1000, 119, -1000, -1000, -1000,
	134693, -1000, 51558, 344, 3598, -1000, 335, 334, 12212, 317,
	140929, 140721, 140513, 333, -1000, -1000, 331, 330, 146081, 3097,
	146081, -1000, -1000, 982, 982, 1395, 1395, 1395, 1395, 3773,
	406, 1051, 865, 610, 610, 610, 723, 1440, 1440, 610,
	610, 610, 1440, 3013, 2680, 561, 5908, -1000, -1000, 146081,
	146081, 326, -1000, -1000, -1000, -75, 319, 7830, -1000, 2885,
	3591, 146081, -1000, 61161, 2885, 2885, -1000, -1000, 2602, 125903,
	146081, 61161, -1000, 3373, -1000, 20555, 19946, -1000, 25981, -1000,
	-1000, -1000, -1000, 3807, -1000, 71220, -1000, 560, -1000, 59,
	-1000, 4115, -1000, 828, -1000, -1000, 81275, 81275, 3906, 3905,
	3899, 3836, 3835, 2218, 3834, 2826, -1000, 2899, -274, -192,
	125903, -1000, -1000, 735, 3897, 753, 25981, 318, -1000, -1000,
	-1000, -83, -83, 125903, 3011, 98893, 125903, 1512, -83, -1000,
	-1000, -1000, 3444, 146081, 3088, 2875, 2874, 125903, 125903, -1000,
	109455, 35208, 1642, 110041, 125903, 3223, -1000, 3222, -1000, 1126,
	2300, 140305, 61750, -1000, 61750, 125903, -1000, -1000, -1000, -1000,
	2075, 1535, 3896, 1191, -1000, 3535, 125903, -1000, 125903, -1000,
	-1000, -1000, 109455, -1000, 125903, 125903, 98893, 125903, -1000, 138216,
	3196, -166, 146081, -57, -1000, 823, -1000, 1408, -1000, 21767,
	125903, 138216, 98893, 125903, 138216, 98893, 3220, 1106, 125903, -1000,
	1104, 2302, -1000, -1000, 3176, -1000, 146081, 144129, 120, 51558,
	3184, -167, 25981, -1000, 3833, 3831, 3217, 3541, -1000, 125903,
	3830, 125903, 98893, 3440, -1000, -1000, -1000, 1018, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1809, 1245, 1244, 2405, 2404,
	2378, -58, 2256, 1011, -59, 556, -1000, 822, -1000, -1000,
	821, 820, 1011, -1000, 81275, 64726, 3894, 477, -1000, 2773,
	-1000, 105345, 83033, 2421, -1000, -1000, 545, 125903, 125903, 544,
	-1000, 120, -1000, 3891, 109455, 543, -1000, 2366, -1000, 731,
	-1000, -1000, 2630, 138216, 2324, 120, 98893, -1000, 1006, 477,
	313, -61, -1000, 3319, 1122, 25981, 98893, 3216, 2655, 796,
	81861, -1000, 1403, 2762, -1000, -63, -1000, 679, 120, 2348,
	-1000, -64, 146081, -1000, 817, -169, 312, -1000, 3438, -1000,
	-1000, -174, -1000, -1000, 3060, 3060, 81275, 64726, 81275, 81275,
	81275, 64726, 81275, -1000, 1008, 924, -1000, -282, -1000, 2565,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 25981,
	1817, -1000, 542, 541, -1000, -1000, -1000, -1000, 3457, 7387,
	7387, 51558, 51558, 51558, 7387, 7429, -181, -1000, 7387, 7387,
	-75, -1000, -1000, 143921, -1000, -1000, -1000, 146081, -1000, 21164,
	2293, -1000, 140097, -1000, 34004, -1000, -1000, 51558, 51558, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 55772, 3008, 539,
	73567, -1000, -1000, 302, 1059, 51558, 53364, 2748, 1059, 1059,
	-1000, -183, -1000, -1000, -1000, 3807, -1000, 3807, 59, -1000,
	-1000, 3887, 25981, -1000, 81275, -1000, -1000, -1000, -1000, -1000,
	-1000, 3884, 3883, 2486, 3882, 3878, -1000, 2376, -1000, -1000,
	3112, -177, 752, -1000, 3876, -1000, -1000, 124, 138216, 2978,
	118, 2818, -1000, 120, -1000, -1000, -1000, -1000, -1000, -1000,
	2816, 3717, -1000, 2053, -1000, 125903, 125903, -1000, 125903, -1000,
	25981, 125903, 2884, 1304, -1000, 984, 2675, 537, 55772, 1168,
	98893, 887, 2870, 2869, -1000, 3739, 3586, 2906, -189, -1000,
	125903, 51558, 125903, -191, -194, 2481, -1000, -1000, 1165, 1302,
	51558, 1164, -1000, -1000, -1000, 73567, 536, 2390, 2390, -1000,
	-196, -201, -1000, -1000, -1000, 51558, 1240, 125903, 34606, -1000,
	3875, 3498, -1000, -1000, -1000, -1000, -1000, -1000, 125903, 125903,
	-1000, 125903, 125903, -1000, 51558, -1000, 143713, 51558, 1231, -1000,
	-1000, -1000, 3829, 2390, 25981, 2390, -1000, 2390, 3541, 1190,
	2441, 125903, 138216, 98893, 1671, 1671, 2989, -1000, -1000, -1000,
	2332, 2332, 81275, 64726, 64726, -1000, -65, 1011, -1000, 3715,
	2290, 3874, -1000, -1000, -1000, -1000, 2674, -1000, -1000, -1000,
	125903, 2672, 2921, 61750, 535, 534, 125903, 1002, -1000, -202,
	83033, 983, 956, -1000, -66, 531, -1000, 813, -1000, -1000,
	-1000, -1000, 477, -1000, 2759, 3713, -1000, 3826, 530, 529,
	125903, 2400, 526, 25981, 3490, 796, 81861, -1000, 3304, 1990,
	-1000, 2494, 125903, 3483, -1000, 2762, 524, -1000, 1000, 520,
	1000, -1000, -211, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1008, -67, -1000, 930, 918, -1000, -1000, 98893,
	98893, 51558, 51558, -1000, 7387, 7387, 7387, -1000, 294, -1000,
	-1000, 2348, 3584, -1000, -70, 139889, 139681, 7195, 55772, 73567,
	-212, -1000, -1000, 125903, 146081, -71, -1000, 146081, 517, 509,
	354, -1000, -1000, -1000, 730, 729, -1000, -1000, -1000, -1000,
	3868, -1000, -1000, -1000, -1000, 138216, 3867, -1000, 138216, -83,
	138216, 138216, 1794, -1000, 108869, 125903, -1000, -1000, 2191, 2231,
	-1000, -1000, 125903, 2501, -1000, -1000, -1000, 1010, 51558, 5908,
	55772, 508, 51558, -1000, 506, 502, 3710, 3371, -1000, 2758,
	2972, 2120, 61750, -1000, 3457, -1000, 139473, -1000, 1121, 2081,
	-1000, -1000, -1000, -1000, 146081, 55772, 3541, 61750, -1000, -1000,
	500, 498, 146081, 497, 808, 2977, -1000, -1000, -1000, -1000,
	-90, -90, -1000, 146081, 120, 146081, 494, 3668, -1000, -1000,
	-1000, -1000, 2390, 98893, 803, -1000, -1000, -1000, 1217, -1000,
	-1000, -1000, -1000, 3865, 3863, 2975, 87733, -1000, -213, -1000,
	-1000, -1000, 2091, 120, 983, -1000, -1000, 2421, 491, -1000,
	997, 2819, 2819, -221, 61750, 61750, -222, 2397, 2745, -1000,
	289, 3709, 956, -1000, 3801, -1000, 3367, 3367, 51558, 3708,
	3429, -1000, 120, -1000, 3825, 61750, -1000, 98893, 61750, 2399,
	2177, 2625, 81861, -1000, 2643, -1000, -1000, -223, 125903, 1990,
	-1000, -1000, 81275, -1000, -1000, -1000, 2565, -1000, 125903, -1000,
	125903, -1000, -1000, -224, -232, -1000, 2197, 51558, 34004, -1000,
	-1000, 7195, -233, -1000, -73, -1000, 3704, 53364, 3862, 3858,
	3857, -1000, -1000, -1000, -274, -1000, -83, -83, -83, 125903,
	-1000, 2049, -1000, 2496, -1000, -1000, 3205, -1000, 2882, 490,
	139265, 5908, 2594, 125903, 15684, 2324, 2324, -1000, 3701, 2960,
	-1000, -1000, 2284, 485, -1000, -1000, -1000, -1000, 934, 125903,
	997, 2881, 98893, 5908, 1123, -239, 2285, 2285, 51558, 33402,
	2299, -1000, 51558, -1000, -1000, 3541, 64726, 138216, -1000, -1000,
	138216, 2398, -1000, 2942, 3799, -1000, 2397, 125903, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1121, -241, -242, -1000, -1000, 3528, -1000, 3420, 2773, 120,
	-1000, -1000, -1000, -247, 146081, 120, 3853, 1006, 288, -248,
	1122, -250, 98893, 2041, -1000, 796, -1000, 2655, 1028, 3337,
	-1000, -253, -1000, -258, -261, -1000, -1000, 287, 52762, 52762,
	52762, -75, -82, -1000, 125903, 480, -1000, -1000, -1000, -1000,
	-1000, 111, -1000, -1000, 3166, 928, -1000, 907, 2070, 282,
	1146, 276, 178, -1000, -1000, -1000, 2906, -1000, 125903, -1000,
	-1000, -1000, 928, 477, -1000, 51558, 1121, -263, -1000, 1102,
	-268, -1000, 1084, -269, -1000, 2970, -1000, -271, 2390, -1000,
	-274, 244, 1671, 1005, 3638, -1000, -1000, -1000, 2605, -277,
	-1000, -1000, 2120, 1121, 2284, 2518, -1000, 2290, 1002, -1000,
	-1000, -1000, -1000, -1000, 1121, 476, 2120, 475, 1616, 796,
	-1000, -1000, 1458, 3490, 3336, 1466, 1000, -1000, -1000, -1000,
	3313, -1000, 56976, 2403, 1955, 142881, 3313, 3313, -1000, -1000,
	138216, 125903, 997, 3590, -1000, 912, 908, 1576, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1028, -283, -1000, 2594,
	146081, 997, -1000, 2285, 2815, -1000, 2285, 2966, -1000, 2298,
	-1000, -1000, -1000, -1000, 2945, -1000, 1915, 3766, -1000, -1000,
	997, 125903, 2284, 2120, 997, 1944, 1931, 3852, 983, 2397,
	2120, 61750, 2284, 61750, 2250, -1000, 125903, -1000, 2177, 1452,
	-1000, 1739, -1000, -1000, 1941, 3707, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -83, -1000, -1000, 799, -1000, 3363, -1000,
	1160, 2319, 2319, -1000, -1000, 907, -1000, -1000, 474, -1000,
	473, -1000, 138216, 2356, -1000, -1000, -1000, -1000, 997, 2284,
	1028, -1000, 3851, -1000, 2397, -1000, 2284, -286, 997, -288,
	2306, -1000, -1000, -90, 2041, -1000, 1734, 70631, 1950, -1000,
	-1000, 2327, 52160, 51558, -1000, 3759, -1000, -1000, 2707, -1000,
	2906, 51558, 51558, 244, 68871, 1028, 997, -1000, -1000, 2605,
	997, 1121, 1028, 2120, -1000, 796, 1616, 70631, -278, -1000,
	-1000, -1000, 146081, -1000, -1000, -1000, -1000, -291, -293, -1000,
	-136, 108283, -1000, 1028, -1000, 1028, 2120, -1000, 2284, 138216,
	2250, -278, -1000, 2284, 1215, -294, -1000, -1000, 2284, 997,
	-1000, -1000, -1000, -1000, -1000, 471, -1000, 997, 1028, 51558,
	1028, -1000, -320, -1000, 2284, -1000,
}

var sqlPgo = [...]int{
	0, 4791, 4787, 4784, 4781, 4780, 4778, 4776, 4775, 4774,
	4773, 4772, 4770, 4769, 4768, 149, 4766, 4765, 4763, 4762,
	4760, 4759, 4755, 4753, 4752, 4751, 4748, 4745, 4742, 4740,
	4736, 4732, 4727, 4725, 4724, 4722, 4719, 4717, 4716, 4715,
	4713, 4710, 4708, 4707, 4705, 4704, 4702, 4701, 4700, 4699,
	4695, 4691, 4690, 4689, 4688, 4687, 4686, 4685, 4684, 4683,
	4681, 4678, 4677, 4673, 4671, 4669, 4668, 4667, 4666, 4665,
	4664, 4661, 4658, 60, 4657, 4656, 4655, 4653, 4652, 4650,
	4648, 4646, 4645, 4644, 4642, 4641, 4640, 4638, 4636, 4633,
	4630, 4629, 4626, 4625, 68, 4622, 295, 4620, 4616, 4610,
	4608, 4602, 4600, 4599, 4598, 4597, 4596, 4593, 4589, 293,
	4588, 135, 174, 4587, 4586, 4091, 4585, 4581, 292, 4579,
	4578, 4577, 4576, 4572, 302, 4571, 4570, 4569, 4568, 4566,
	279, 4565, 4564, 4562, 4561, 4560, 4556, 123, 144, 4554,
	4553, 1254, 4552, 4551, 4550, 4549, 4547, 4546, 4544, 274,
	278, 4543, 4539, 4538, 263, 181, 4537, 290, 4536, 4534,
	4532, 4531, 4527, 4522, 4520, 4518, 4517, 4515, 4514, 4513,
	4512, 4510, 4509, 4507, 4506, 4505, 4504, 4501, 4500, 4499,
	4498, 4497, 4496, 4495, 4493, 4492, 4491, 4490, 4486, 4484,
	4483, 4482, 4480, 4477, 4475, 4474, 4473, 4471, 4470, 4469,
	266, 232, 164, 4467, 4463, 287, 285, 4462, 4460, 4458,
	4457, 4456, 3633, 4454, 4450, 4449, 4447, 4444, 4442, 4441,
	4440, 4439, 154, 17, 89, 4436, 4434, 104, 101, 98,
	81, 111, 109, 4432, 127, 4431, 152, 114, 4429, 122,
	117, 21, 22, 173, 256, 9988, 254, 4428, 4427, 4425,
	265, 210, 4424, 257, 4422, 4420, 4414, 4412, 4410, 4396,
	86, 59, 221, 4391, 4388, 150, 187, 199, 197, 191,
	188, 93, 58, 110, 85, 62, 49, 15, 79, 226,
	19, 1, 281, 4387, 280, 10, 151, 7, 37, 4385,
	4382, 4381, 4379, 3989, 124, 4369, 284, 264, 184, 4368,
	4366, 4364, 356, 4363, 4361, 54, 247, 192, 94, 116,
	20, 130, 4359, 160, 176, 41, 4357, 179, 63, 4356,
	4354, 112, 99, 9752, 6888, 4350, 4349, 138, 83, 96,
	646, 165, 162, 211, 217, 172, 177, 61, 220, 218,
	194, 301, 4345, 268, 4333, 3702, 88, 198, 171, 6368,
	4331, 4329, 4328, 92, 4327, 115, 4326, 4325, 70, 24,
	3, 2, 155, 40, 38, 12, 4324, 29, 132, 51,
	23, 4322, 31, 4321, 4320, 4318, 4315, 50, 4313, 46,
	183, 4312, 4309, 299, 4308, 95, 57, 34, 4307, 42,
	249, 4304, 241, 146, 4302, 4301, 272, 200, 4300, 76,
	253, 4296, 4295, 4293, 4291, 4290, 4289, 141, 8, 143,
	4287, 4284, 153, 4283, 56, 261, 213, 4282, 64, 4281,
	4279, 195, 52, 158, 305, 182, 237, 134, 238, 207,
	250, 4278, 4277, 4276, 228, 4275, 4272, 234, 161, 4271,
	4269, 258, 298, 106, 48, 90, 252, 87, 209, 170,
	4268, 216, 4267, 4260, 300, 201, 229, 45, 11, 6,
	119, 113, 4259, 5, 251, 168, 248, 128, 4258, 8535,
	2621, 2488, 243, 4256, 156, 142, 84, 140, 166, 283,
	97, 4254, 4249, 2821, 4248, 4246, 4241, 4240, 203, 4239,
	4235, 4234, 157, 212, 236, 4232, 133, 71, 55, 26,
	137, 276, 286, 129, 233, 186, 269, 4230, 4222, 4221,
	202, 4214, 100, 139, 175, 214, 271, 67, 4210, 121,
	4207, 169, 615, 77, 163, 4204, 244, 4196, 4193, 4191,
	4189, 4186, 4185, 4184, 204, 259, 4183, 4177, 4176, 36,
	208, 4174, 277, 240, 246, 107, 72, 4173, 103, 1377,
	4170, 180, 222, 65, 4, 4167, 35, 4166, 3566, 69,
	4162, 0, 13876, 9999, 12894, 12233, 4160, 5840, 4159, 4158,
	4157, 230, 78, 4154, 4153, 4151, 120, 4148, 91, 4147,
	4146, 75, 4145, 28, 16, 18, 27, 25, 288, 82,
	4144, 4143, 167, 147, 189, 4142, 296, 239, 4141, 4140,
	4139, 4138, 105, 4137, 47, 4136, 44, 4135, 4134, 53,
	14, 32, 4133, 4132, 159, 4131, 126, 223, 178, 4125,
	185, 4124, 74, 145, 4123, 4121, 4119, 73, 66, 275,
	224, 225, 102, 4118, 297, 4117, 215, 4116, 4115, 39,
	4114, 4113, 262, 125, 118, 30, 260, 148, 43, 196,
	227, 4112, 4111, 193, 4110, 4109, 4106, 291, 4105, 3652,
	282, 4104, 33, 4103, 4102, 4101, 13, 4098, 4095, 219,
	3390, 4094, 4093, 9, 4088, 206,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 13, 13, 9, 9, 9, 9,
	10, 10, 10, 10, 10, 57, 57, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 40, 42, 41, 35, 35, 36, 36, 37, 38,
	38, 43, 45, 44, 12, 12, 12, 8, 8, 8,
	8, 8, 8, 8, 8, 21, 21, 46, 46, 22,
	22, 48, 48, 23, 23, 49, 49, 629, 629, 629,
	630, 630, 631, 631, 631, 26, 51, 19, 20, 20,
	20, 20, 632, 632, 632, 632, 39, 27, 52, 32,
	32, 32, 32, 32, 225, 225, 225, 225, 25, 25,
	47, 47, 268, 268, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 625, 625, 270, 270, 269, 257,
	257, 258, 258, 259, 259, 633, 633, 271, 271, 271,
	272, 272, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 523, 523, 523, 554, 554, 554, 554, 556,
	556, 652, 652, 653, 653, 653, 653, 653, 140, 140,
	420, 420, 420, 61, 61, 61, 61, 61, 620, 620,
	227, 227, 227, 229, 229, 228, 228, 228, 228, 228,
	85, 85, 639, 639, 638, 637, 637, 637, 640, 640,
	640, 226, 226, 226, 136, 136, 136, 136, 136, 136,
	136, 136, 137, 137, 138, 138, 230, 230, 230, 232,
	232, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 236, 18, 18, 18, 119, 119,
	119, 119, 119, 119, 119, 114, 114, 558, 558, 559,
	559, 221, 221, 222, 222, 222, 222, 223, 223, 224,
	224, 224, 76, 76, 233, 233, 235, 235, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 64, 64, 64, 64, 64, 65, 65, 65, 65,
	65, 65, 66, 66, 66, 66, 66, 66, 67, 67,
	74, 74, 74, 74, 74, 74, 74, 74, 202, 202,
	77, 77, 77, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 77, 82, 82, 82, 82, 82, 654, 654,
	654, 654, 654, 654, 654, 654, 654, 654, 654, 654,
	654, 654, 654, 654, 654, 654, 654, 655, 655, 656,
	656, 657, 657, 658, 658, 658, 658, 658, 658, 658,
	658, 658, 658, 658, 658, 658, 658, 658, 658, 658,
	658, 658, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 91,
	91, 381, 381, 344, 344, 92, 92, 92, 93, 93,
	94, 94, 78, 78, 617, 617, 618, 618, 618, 618,
	514, 514, 79, 626, 626, 626, 628, 628, 627, 627,
	96, 96, 419, 419, 97, 97, 97, 97, 97, 97,
	98, 98, 98, 98, 98, 98, 98, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 106, 106, 106, 106, 106, 107, 107, 107, 104,
	104, 104, 101, 101, 101, 100, 100, 100, 105, 105,
	105, 616, 333, 333, 103, 103, 103, 102, 102, 102,
	397, 397, 108, 108, 108, 108, 345, 109, 109, 109,
	109, 109, 109, 109, 109, 112, 112, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	516, 516, 4, 4, 263, 263, 262, 262, 262, 262,
	5, 5, 5, 266, 266, 265, 264, 110, 110, 110,
	481, 481, 115, 115, 115, 435, 435, 116, 116, 116,
	116, 116, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 622, 622, 390, 390, 296, 296, 296,
	296, 128, 128, 128, 128, 129, 129, 129, 129, 130,
	130, 207, 207, 146, 146, 146, 146, 145, 145, 145,
	145, 145, 145, 145, 145, 68, 68, 68, 69, 69,
	70, 70, 71, 71, 72, 72, 73, 73, 73, 73,
	73, 149, 149, 31, 31, 31, 31, 150, 150, 649,
	649, 152, 148, 148, 148, 148, 148, 147, 147, 151,
	151, 151, 151, 153, 155, 155, 155, 155, 155, 154,
	154, 154, 154, 154, 156, 156, 548, 548, 405, 405,
	546, 546, 568, 568, 547, 547, 351, 351, 351, 351,
	351, 352, 352, 352, 557, 557, 557, 557, 557, 557,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 208, 208, 208, 209,
	209, 214, 214, 215, 215, 215, 216, 216, 216, 213,
	213, 213, 210, 210, 211, 211, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 219, 219, 217, 217,
	218, 218, 660, 660, 659, 659, 220, 220, 220, 220,
	220, 183, 183, 183, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 406, 406, 186, 186, 186,
	170, 170, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 163, 163, 163, 163, 163, 163, 163, 163,
	164, 164, 164, 159, 159, 172, 172, 172, 172, 172,
	165, 165, 166, 166, 166, 167, 167, 167, 167, 194,
	194, 169, 169, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 160, 160, 160, 160, 174, 174, 174, 174,
	442, 442, 442, 200, 200, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 197, 197, 197, 197, 197, 197, 641, 641, 642,
	642, 642, 190, 190, 190, 190, 190, 190, 495, 495,
	184, 184, 184, 184, 189, 189, 189, 189, 192, 192,
	192, 192, 425, 425, 181, 181, 181, 182, 182, 182,
	187, 187, 199, 188, 382, 382, 185, 185, 191, 191,
	191, 191, 193, 193, 193, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 162, 162, 162, 162, 195, 195,
	180, 180, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 661, 661, 176, 176, 176, 175, 175,
	175, 175, 178, 178, 179, 179, 179, 179, 179, 179,
	177, 168, 198, 619, 619, 614, 614, 614, 614, 614,
	614, 614, 614, 614, 615, 615, 615, 615, 621, 621,
	120, 120, 120, 120, 120, 120, 120, 131, 131, 131,
	131, 131, 131, 131, 134, 134, 121, 121, 121, 121,
	121, 121, 121, 124, 124, 122, 122, 122, 122, 123,
	123, 86, 86, 86, 86, 86, 17, 17, 17, 87,
	87, 287, 287, 241, 241, 241, 369, 369, 242, 242,
	359, 359, 359, 359, 237, 237, 238, 238, 239, 240,
	240, 88, 88, 662, 662, 662, 634, 634, 634, 635,
	635, 635, 635, 635, 635, 353, 353, 354, 354, 461,
	461, 461, 461, 461, 357, 357, 357, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 367, 368, 368, 360,
	360, 366, 365, 365, 364, 364, 363, 363, 361, 362,
	362, 362, 371, 371, 370, 373, 373, 372, 460, 577,
	577, 579, 579, 579, 579, 579, 579, 579, 581, 581,
	581, 581, 581, 581, 581, 581, 581, 581, 581, 581,
	581, 581, 581, 581, 581, 443, 443, 663, 663, 664,
	665, 575, 575, 575, 576, 571, 571, 572, 572, 572,
	572, 572, 355, 355, 356, 356, 356, 356, 573, 574,
	388, 388, 499, 578, 578, 580, 580, 582, 666, 666,
	666, 666, 666, 666, 667, 667, 667, 459, 459, 458,
	458, 457, 457, 379, 379, 583, 583, 583, 583, 584,
	584, 584, 584, 584, 587, 586, 585, 585, 585, 585,
	585, 90, 90, 90, 422, 422, 421, 421, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 204, 204, 299, 299, 299, 84, 84,
	84, 14, 14, 14, 14, 14, 14, 14, 314, 314,
	15, 15, 15, 636, 636, 636, 89, 89, 89, 89,
	89, 89, 377, 377, 377, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 624, 624, 623, 623, 300, 300, 669, 669, 95,
	95, 95, 95, 95, 95, 95, 95, 517, 517, 518,
	518, 83, 83, 83, 83, 83, 444, 444, 441, 441,
	440, 440, 387, 387, 497, 497, 497, 498, 304, 304,
	305, 305, 260, 260, 260, 34, 33, 24, 24, 28,
	28, 29, 29, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 30, 30, 54, 54, 54, 54, 55, 55,
	55, 55, 58, 58, 59, 59, 53, 53, 53, 53,
	56, 56, 50, 50, 60, 60, 60, 60, 60, 643,
	645, 645, 644, 644, 648, 648, 648, 648, 648, 648,
	646, 646, 647, 647, 650, 650, 651, 651, 127, 127,
	132, 132, 132, 132, 132, 133, 133, 133, 133, 135,
	135, 135, 135, 144, 144, 203, 203, 203, 203, 203,
	203, 203, 62, 62, 62, 62, 75, 75, 75, 75,
	142, 671, 671, 671, 143, 143, 143, 670, 670, 297,
	297, 454, 454, 455, 455, 672, 672, 456, 456, 456,
	456, 456, 290, 289, 291, 291, 292, 292, 81, 81,
	81, 280, 280, 279, 281, 281, 282, 282, 277, 277,
	560, 560, 284, 284, 284, 285, 285, 273, 273, 274,
	274, 275, 275, 276, 276, 288, 288, 555, 555, 673,
	673, 118, 118, 118, 206, 206, 343, 343, 343, 451,
	451, 451, 380, 380, 311, 311, 453, 453, 453, 453,
	453, 418, 418, 418, 205, 205, 395, 395, 408, 408,
	409, 409, 511, 511, 410, 125, 125, 126, 126, 141,
	141, 245, 245, 243, 243, 243, 243, 243, 243, 243,
	243, 250, 250, 251, 251, 252, 252, 253, 254, 254,
	254, 254, 398, 398, 255, 255, 255, 244, 244, 244,
	246, 246, 246, 246, 246, 246, 246, 249, 249, 249,
	249, 256, 256, 256, 248, 248, 594, 594, 594, 596,
	596, 598, 598, 597, 597, 593, 593, 595, 595, 668,
	668, 424, 424, 424, 376, 378, 374, 374, 375, 375,
	385, 385, 383, 384, 384, 386, 386, 496, 496, 496,
	261, 261, 261, 415, 415, 415, 415, 416, 416, 447,
	447, 445, 445, 445, 445, 446, 446, 448, 448, 448,
	449, 449, 450, 450, 412, 412, 413, 413, 414, 414,
	414, 414, 477, 477, 247, 247, 247, 392, 392, 392,
	393, 393, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 468, 468, 466, 466, 466, 466, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 501, 502,
	502, 394, 394, 503, 452, 452, 612, 612, 612, 613,
	613, 494, 494, 504, 504, 504, 504, 504, 504, 492,
	492, 493, 493, 512, 513, 513, 428, 428, 428, 428,
	426, 426, 429, 429, 429, 429, 429, 427, 427, 505,
	505, 505, 505, 417, 417, 506, 506, 506, 506, 507,
	508, 508, 509, 509, 462, 463, 463, 519, 519, 519,
	519, 521, 391, 391, 391, 391, 391, 570, 569, 569,
	520, 520, 520, 520, 520, 520, 520, 520, 520, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 536, 536, 536, 536, 536, 536, 536, 522, 522,
	522, 522, 522, 526, 526, 526, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 527, 527, 532,
	532, 533, 533, 533, 528, 529, 534, 534, 534, 534,
	674, 674, 538, 538, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 524, 524, 524, 531, 531, 531, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 436, 436, 438, 438, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 471, 471, 471,
	471, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 588, 588, 588, 588,
	588, 588, 588, 588, 473, 473, 591, 591, 592, 592,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 599, 599, 600, 600, 602, 602, 603, 603, 604,
	605, 605, 605, 606, 607, 607, 601, 601, 608, 608,
	608, 608, 609, 609, 610, 610, 610, 610, 610, 611,
	611, 611, 611, 611, 483, 483, 484, 484, 490, 490,
	490, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 350, 350, 349, 301,
	301, 301, 301, 301, 301, 403, 403, 401, 401, 401,
	404, 404, 402, 402, 400, 400, 399, 399, 480, 480,
	478, 478, 482, 482, 430, 430, 537, 537, 537, 537,
	537, 537, 537, 537, 431, 431, 431, 439, 432, 432,
	433, 433, 433, 433, 433, 474, 475, 434, 434, 434,
	476, 476, 485, 489, 489, 488, 487, 487, 486, 486,
	464, 464, 465, 465, 411, 411, 675, 675, 407, 407,
	510, 510, 510, 510, 347, 347, 396, 396, 346, 346,
	338, 338, 339, 339, 339, 339, 389, 389, 491, 491,
	539, 539, 540, 540, 541, 541, 542, 542, 543, 544,
	545, 479, 479, 322, 321, 308, 309, 320, 319, 318,
	307, 310, 315, 316, 317, 312, 313, 329, 328, 327,
	278, 283, 334, 335, 335, 337, 337, 336, 336, 324,
	325, 326, 515, 306, 340, 340, 341, 341, 341, 342,
	342, 342, 342, 302, 302, 303, 303, 330, 330, 331,
	332, 332, 323, 323, 323, 293, 293, 293, 294, 294,
	295, 295, 553, 553, 550, 550, 550, 551, 551, 551,
	552, 552, 552, 552, 549, 549, 549, 549, 549, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 562, 562, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 564, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 567, 567,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 0, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 4, 6, 9, 6, 8, 4, 4,
	5, 9, 7, 9, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 1,
	1, 1, 1, 0, 1, 6, 6, 4, 8, 7,
	10, 9, 4, 4, 4, 3, 4, 4, 4, 7,
	7, 9, 8, 9, 5, 3, 5, 7, 4, 12,
	4, 12, 1, 3, 5, 5, 2, 5, 3, 6,
	4, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 8, 4, 2, 3, 10, 3, 6, 4, 3,
	1, 3, 4, 4, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 7, 9,
	8, 2, 1, 3, 1, 3, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 3, 3, 3, 6, 4,
	9, 7, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 2, 2, 2, 2, 3, 3, 4,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 4, 3,
	6, 6, 6, 6, 6, 8, 4, 4, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 6, 3, 8, 5, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 3, 2, 1, 4, 3,
	2, 0, 7, 2, 5, 0, 1, 3, 3, 1,
	9, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 1, 1, 3, 4, 6, 3, 3, 5, 3,
	1, 3, 2, 2, 2, 2, 1, 2, 2, 5,
	3, 3, 6, 6, 3, 1, 1, 1, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 3, 4, 3, 1, 2, 3, 2, 2, 2,
	4, 6, 3, 1, 2, 2, 7, 5, 7, 2,
	3, 0, 3, 5, 2, 3, 0, 2, 3, 2,
	3, 2, 7, 4, 7, 8, 8, 9, 11, 5,
	2, 6, 9, 4, 7, 7, 10, 7, 10, 10,
	13, 5, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 4, 4, 3, 4, 1, 1, 1,
	1, 5, 3, 3, 2, 2, 6, 3, 3, 3,
	3, 4, 4, 3, 1, 3, 3, 2, 2, 1,
	3, 3, 3, 1, 2, 1, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 2, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 2, 1, 2, 2, 2, 9,
	2, 1, 0, 1, 1, 0, 1, 2, 0, 2,
	2, 0, 2, 2, 2, 2, 1, 2, 3, 3,
	4, 4, 4, 4, 3, 3, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 3, 3, 3, 3,
	3, 2, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 3, 5, 7, 3,
	3, 3, 4, 4, 6, 5, 7, 5, 7, 5,
	7, 3, 4, 4, 3, 4, 4, 3, 4, 4,
	1, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 4, 6, 4, 2, 6, 4, 3, 2,
	3, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 5, 3, 5, 3, 3, 4, 4, 5,
	0, 1, 1, 1, 1, 3, 2, 3, 4, 3,
	4, 3, 5, 3, 4, 4, 3, 4, 5, 3,
	4, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 3, 5, 4, 6, 4, 6, 4, 1, 0,
	3, 4, 4, 5, 7, 5, 3, 3, 3, 4,
	4, 5, 2, 0, 4, 2, 3, 4, 2, 3,
	3, 3, 7, 5, 2, 0, 3, 3, 4, 3,
	3, 3, 5, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 3, 4, 5, 4, 4, 2, 3,
	2, 3, 6, 6, 7, 9, 7, 9, 4, 3,
	4, 4, 5, 1, 1, 10, 10, 3, 5, 5,
	5, 3, 5, 6, 4, 4, 5, 5, 2, 3,
	2, 5, 4, 2, 0, 1, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 2, 1, 2, 0,
	1, 2, 1, 2, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 7, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	3, 3, 6, 5, 8, 3, 6, 6, 3, 12,
	15, 1, 0, 1, 2, 3, 0, 2, 0, 4,
	0, 4, 5, 4, 1, 1, 1, 3, 3, 1,
	3, 10, 13, 0, 2, 3, 1, 1, 0, 1,
	2, 2, 2, 2, 1, 1, 0, 1, 3, 1,
	1, 1, 2, 3, 3, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 0, 1,
	0, 1, 1, 0, 1, 4, 1, 0, 3, 7,
	7, 1, 1, 3, 7, 1, 3, 11, 3, 2,
	0, 3, 1, 2, 2, 3, 2, 6, 2, 1,
	2, 2, 3, 6, 4, 2, 3, 5, 5, 5,
	2, 5, 5, 2, 2, 2, 0, 1, 1, 3,
	4, 10, 11, 9, 5, 3, 1, 5, 9, 7,
	11, 3, 3, 0, 2, 4, 3, 3, 1, 6,
	1, 3, 1, 2, 0, 1, 2, 3, 0, 1,
	3, 3, 2, 2, 1, 1, 1, 4, 0, 3,
	0, 4, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 3, 2, 2, 4, 7,
	3, 4, 6, 5, 7, 5, 5, 3, 3, 0,
	2, 2, 2, 1, 1, 1, 8, 10, 11, 8,
	11, 5, 4, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 3, 0, 1, 8,
	11, 3, 6, 6, 5, 3, 4, 1, 0, 1,
	3, 16, 19, 15, 18, 4, 2, 0, 1, 0,
	1, 0, 1, 3, 2, 4, 2, 3, 1, 0,
	2, 0, 1, 1, 0, 9, 6, 6, 8, 6,
	8, 5, 7, 2, 6, 7, 4, 4, 5, 2,
	4, 6, 6, 8, 6, 7, 8, 9, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 6, 8, 8, 4, 7,
	3, 0, 7, 10, 1, 1, 1, 1, 2, 2,
	3, 0, 3, 0, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 14, 16,
	3, 1, 0, 4, 1, 0, 2, 2, 3, 0,
	1, 1, 4, 4, 5, 1, 0, 3, 0, 3,
	0, 3, 0, 3, 0, 4, 0, 3, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 7,
	10, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 6, 4, 5, 4, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	1, 0, 3, 3, 5, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 3, 1, 3,
	3, 3, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 0, 3, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 1, 0, 4, 2, 1,
	2, 2, 4, 1, 3, 1, 2, 3, 2, 4,
	1, 0, 1, 0, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 3, 5,
	1, 2, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 6, 6, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	3, 3, 2, 2, 3, 5, 4, 6, 3, 5,
	4, 6, 4, 6, 5, 7, 3, 3, 3, 3,
	3, 4, 3, 2, 4, 2, 3, 3, 4, 3,
	4, 3, 4, 5, 6, 6, 7, 6, 7, 6,
	7, 3, 4, 4, 1, 3, 1, 3, 3, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 5, 6, 6, 7, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 2, 1, 5, 5, 6, 3, 1,
	1, 1, 2, 2, 2, 4, 3, 5, 6, 8,
	6, 5, 4, 3, 2, 2, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4,
	4, 3, 6, 5, 5, 5, 4, 4, 3, 4,
	3, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 3, 3,
	3, 0, 1, 4, 2, 2, 2, 2, 2, 3,
	2, 2, 3, 0, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 1,
	1, 1, 2, 1, 2, 2, 3, 1, 2, 3,
	2, 3, 2, 3, 1, 0, 1, 3, 1, 3,
	3, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 2, 3, 0,
	3, 3, 2, 2, 1, 2, 2, 3, 2, 1,
	1, 1, 5, 1, 2, 4, 2, 0, 1, 0,
	3, 5, 1, 0, 1, 2, 1, 0, 1, 3,
	3, 2, 1, 1, 1, 3, 1, 3, 3, 1,
	1, 1, 1, 5, 3, 1, 1, 3, 1, 1,
	1, 1, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 634, -111, -108, -76, -74, -115, -116,
	-97, -117, -110, -139, -144, -125, -126, -127, -140, -146,
	-203, -208, -209, -210, -211, -220, -3, -61, -63, -77,
	-96, -98, -109, -119, -118, -120, -128, -136, -131, -114,
	-68, -141, -145, -157, -204, -205, -206, 33, 32, 104,
	83, 160, 133, 142, 212, 404, 453, 465, 421, 147,
	444, 426, -151, -152, 484, -62, -75, -143, -142, 76,
	134, 176, 309, 436, -6, -14, -31, -18, 30, 48,
	-64, -65, -66, -67, 65, -84, -80, -91, -85, -78,
	-79, -82, -654, 106, -595, -99, -102, -135, -658, 168,
	232, -121, -122, -123, 386, -129, -130, 446, -132, -133,
	-134, 449, 169, -70, -69, 162, -243, -245, -148, -147,
	-149, -207, -158, -159, -160, -161, -162, -164, -165, -167,
	-194, -168, -169, -170, -171, -172, -173, -177, -197, -174,
	-175, -176, -179, -178, -180, -185, -181, -182, -183, -184,
	-186, -187, -189, -190, -191, -192, -193, -195, -196, 489,
	-188, -198, -166, -199, 554, 52, 505, 85, 152, 457,
	21, -7, -8, -9, -10, -11, -12, -13, -17, -16,
	-60, -4, -5, -81, -83, -86, -87, -88, -95, -89,
	-90, -594, -100, -101, -104, -106, -107, -103, -105, 445,
	606, -246, -244, 631, 570, -163, -21, -26, -22, -23,
	-25, -27, -24, -28, -29, -30, -46, -51, -48, -49,
	-47, -50, -52, -53, -54, -55, -56, -57, -58, -59,
	-33, -39, -40, -34, -35, -36, -37, -38, -41, -42,
	-43, -44, -45, -19, -20, -32, 593, 602, -249, -247,
	-248, -256, 476, 578, 527, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, -345, 2, -324, -330, -331, -332, -323, -293, -564,
	-567, 4, -561, -565, 175, 242, 347, 21, 22, 24,
	23, 25, 26, 27, 28, 30, 31, 41, 43, 44,
	46, 47, 48, 49, 50, 51, 52, 56, 58, 62,
	63, 64, 65, 66, 67, 71, 76, 77, 82, 83,
	84, 85, 86, 87, 88, 89, 95, 92, 93, 94,
	96, 98, 100, 101, 102, 103, 104, 105, 107, 108,
	109, 111, 112, 113, 121, 122, 123, 124, 125, 127,
	133, 128, 134, 137, 132, 136, 138, 140, 141, 142,
	145, 146, 147, 149, 150, 151, 153, 154, 155, 157,
	158, 160, 161, 162, 165, 163, 166, 164, 167, 168,
	169, 170, 173, 181, 182, 183, 188, 190, 191, 192,
	194, 195, 198, 199, 200, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 213, 217, 219, 220, 221, 222,
	223, 224, 225, 231, 232, 234, 235, 236, 237, 238,
	243, 244, 245, 249, 255, 256, 260, 261, 262, 264,
	268, 269, 270, 271, 272, 273, 275, 277, 276, 279,
	282, 283, 286, 287, 288, 289, 290, 291, 295, 296,
	292, 297, 298, 300, 301, 304, 302, 305, 306, 303,
	307, 310, 311, 312, 313, 314, 315, 316, 317, 318,
	319, 320, 321, 308, 309, 324, 322, 326, 327, 328,
	329, 330, 345, 340, 341, 342, 334, 335, 331, 336,
	332, 333, 337, 338, 344, 339, 349, 350, 351, 352,
	355, 229, 248, 357, 358, 361, 363, 380, 366, 367,
	368, 371, 372, 375, 378, 379, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 391, 392, 394, 395, 396,
	398, 399, 400, 402, 404, 405, 407, 408, 409, 411,
	412, 413, 414, 415, 416, 417, 418, 420, 421, 423,
	422, 424, 426, 428, 429, 430, 436, 437, 444, 438,
	440, 441, 442, 443, 445, 446, 447, 448, 449, 451,
	452, 453, 455, 456, 457, 458, 459, 461, 463, 464,
	468, 469, 470, 486, 487, 508, 465, 466, 467, 471,
	472, 473, 474, 475, 479, 477, 478, 480, 481, 482,
	484, 485, 488, 489, 491, 492, 493, 494, 495, 496,
	497, 500, 502, 503, 504, 505, 506, 526, 507, 509,
	513, 514, 515, 516, 510, 511, 525, 518, 519, 520,
	522, 523, 528, 529, 530, 531, 532, 533, 535, 536,
	538, 546, 547, 548, 549, 551, 554, 555, 556, 557,
	544, 559, 560, 563, 564, 568, 565, 569, 566, 567,
	570, 572, 575, 576, 577, 583, 582, 584, 585, 586,
	588, 589, 594, 595, 597, 598, 599, 37, 53, 54,
	57, 59, 61, 72, 73, 74, 78, 129, 130, 159,
	171, 172, 184, 201, 202, 214, 216, 226, 227, 228,
	250, 251, 253, 258, 280, 354, 356, 373, 377, 393,
	397, 401, 403, 419, 460, 498, 512, 517, 539, 540,
	541, 542, 550, 552, 578, 579, 580, 587, 596, -345,
	2, -324, 364, -317, 2, -293, -293, 404, 29, 2,
	29, 392, 478, 530, 532, 2, -622, -390, 2, 29,
	-296, -293, 106, 212, 476, -317, 2, -622, 212, -390,
	26, 2, -293, 2, 378, 23, 28, 69, 80, 102,
	145, 170, 193, 198, -657, 380, 412, 463, 480, 525,
	536, 551, 2, 582, 301, 477, 527, 242, 124, 556,
	471, -636, 468, 469, 378, 410, 455, 215, 571, -297,
	2, 465, -293, 301, 2, 634, 98, 77, 460, 481,
	-154, 2, 291, 547, -155, -156, -153, 539, -548, 471,
	455, 324, -293, 634, 634, 634, 29, -306, 2, -293,
	-306, 2, -212, 2, -306, -659, -219, -218, -217, 22,
	437, 183, 273, 196, 233, 329, 407, 194, 50, -212,
	2, 527, 242, 471, 124, 523, 634, 634, 2, 527,
	383, 582, 477, 124, 416, 242, 556, 198, 145, 28,
	71, 48, 533, 610, 471, -636, 607, 608, 301, 131,
	-620, 2, -614, 4, -565, -561, -339, -338, 527, 533,
	124, -332, -323, 623, -331, 634, 634, 634, 634, 2,
	261, 262, 414, 413, 481, 482, 29, 634, 634, 634,
	634, 468, 2, 170, 23, 28, 69, 97, 102, 131,
	193, 198, 369, -655, 380, 412, 480, 525, 529, 536,
	551, -635, 507, 71, 443, 471, -634, -636, 301, 556,
	145, -440, 124, 291, 210, 564, 532, 530, 562, 137,
	249, 567, 566, 634, 634, -112, 2, 631, 33, 32,
	-111, -115, 147, 484, -236, 527, 254, 2, -293, 634,
	634, 634, 2, 261, 262, 468, 469, 29, 634, 634,
	196, -614, 523, 2, 634, 634, 634, 2, 29, 261,
	262, 468, 469, 254, 2, 71, 473, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 2, -201, 481, 507, 222, 49,
	48, 77, 29, 411, 82, 384, 125, 131, 154, 557,
	213, 242, 243, 269, 97, 98, -442, 46, 262, 71,
	261, 469, -641, 468, -495, 528, 472, 478, 522, 89,
	273, 465, 547, 549, 106, 572, 456, 599, 416, 417,
	520, 430, 292, 163, 197, 4, 124, 324, 455, 483,
	277, 276, 539, 291, 464, 387, 87, 634, -668, 2,
	527, -670, 2, 547, 547, 2, -670, 2, -670, 2,
	-670, 2, -671, 547, 596, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 634, 634, 634, 634,
	634, 634, 634, 634, 634, -244, -246, -245, 634, 634,
	634, 634, 634, 634, 634, -201, 481, 2, 77, 29,
	29, -383, -385, 561, 252, 156, 370, -243, -245, 2,
	-594, -546, 2, -469, -568, -471, 621, 622, 614, 524,
	70, -349, 346, 600, -483, 131, 562, 364, -567, -472,
	-485, 159, 380, 460, -404, 8, 9, 5, 6, 7,
	-302, -473, -479, 553, 174, 353, -342, 635, 10, 631,
	-591, -245, -484, 38, 216, 68, -550, -341, -303, -522,
	253, -340, -323, -588, -589, 4, -561, -562, -551, -525,
	-533, -529, -530, -536, -293, -564, 80, 115, 116, 114,
	119, 118, 294, 293, 120, 117, 483, 571, 69, 37,
	226, 227, 258, 354, 228, 78, -590, 146, -563, 250,
	251, 498, 54, 419, 184, 130, 129, 356, 59, 57,
	579, -534, 126, 539, 540, 541, 542, 201, 202, 61,
	171, 172, 377, 401, 517, 550, 552, 214, 280, 45,
	110, 197, 247, 230, 257, 259, 263, 281, 284, 325,
	343, 348, 374, 376, 454, 490, -674, 580, 512, 72,
	73, 189, -596, 422, -597, -317, -596, 634, 634, 636,
	634, -374, -376, -378, 2, 29, 143, 631, 2, -500,
	2, -501, -505, -245, 274, -504, 631, -502, 629, -324,
	365, -592, 461, -588, -589, -302, -323, -341, 4, -561,
	-563, 633, -379, 631, 124, 471, 527, 81, 242, 97,
	170, 198, -435, 631, -293, 29, 364, 543, 636, -375,
	409, -481, 631, 364, 367, 196, 367, 63, 305, 2,
	2, 2, 2, 2, 226, -293, 527, 123, 2, 272,
	2, 2, 2, 2, 2, 2, 2, -397, 226, 2,
	-324, 582, -397, 226, 2, -397, 226, 2, -441, 2,
	91, -307, 226, 2, -293, -333, 226, 2, -328, -330,
	-337, 226, 2, -335, -293, -556, 226, 2, -554, 4,
	-561, 120, 483, -469, 2, -141, 2, 63, -293, 582,
	2, 486, 2, 631, -154, 2, 74, 547, 45, 481,
	-155, 2, -455, 2, -456, -289, -290, -291, -512, -292,
	260, 408, 418, 603, 135, 346, 599, -649, 196, 613,
	543, -546, -546, -546, -405, 633, -214, 56, -306, -660,
	-659, -660, -544, 29, -539, 8, -540, 621, 622, -544,
	-544, -660, -660, 2, 2, 2, 2, 2, 2, -505,
	226, -324, 2, -321, -549, 4, -561, -565, -562, -566,
	-564, 29, 32, 33, 34, 36, 38, 39, 40, 42,
	60, 68, 69, 75, 79, 81, 91, 97, 106, 114,
	115, 117, 116, 118, 119, 120, 131, 135, 139, 143,
	144, 148, 152, 156, 174, 176, 189, 193, 196, 212,
	215, 218, 233, 246, 252, 254, 274, 278, 285, 293,
	294, 346, 353, 359, 364, 365, 369, 370, 390, 406,
	425, 450, 476, 483, 501, 521, 527, 537, 543, 545,
	553, 561, 562, 571, 573, 581, 590, 591, 592, 593,
	-567, 80, 2, -505, 226, 2, -327, 226, -505, -330,
	2, -307, 2, -469, -629, 535, 166, 438, 2, -346,
	226, -324, -326, -330, -328, 2, 2, 2, 2, -469,
	2, -558, 2, -553, 10, -552, 5, 4, -561, -565,
	-562, -472, 2, -483, 29, -335, 2, -554, 226, 2,
	29, 29, 582, 409, 254, 543, 636, -396, -338, -339,
	-545, 4, 8, -389, -293, 633, -469, 2, -141, -124,
	2, 189, -469, 226, 2, -141, 226, 2, -469, 226,
	2, -141, 226, 2, -293, 2, -637, 2, -558, 226,
	226, -293, 2, 305, 2, 2, 551, 2, 102, 527,
	123, 2, 442, -656, 463, 555, 2, 2, 2, 2,
	2, 2, 2, 527, -312, 2, -293, 189, 510, -335,
	226, -336, 2, 477, -669, 422, -554, 226, 2, 582,
	-328, 226, 2, -328, 242, 256, -307, 226, 2, 532,
	530, 532, 530, 196, 2, 254, 2, 254, 2, -506,
	2, -507, -501, -508, 629, 365, -516, 2, -515, -552,
	578, -112, 631, -112, 631, 481, 631, -558, -324, -324,
	-469, 2, -141, -124, 2, -469, 2, -141, 2, -293,
	2, -138, -558, -137, 631, 196, 572, -293, 2, -469,
	2, -141, -124, 2, -469, 2, -141, 2, -236, 189,
	2, 124, 527, -201, 2, 189, 573, 2, 8, 2,
	233, -558, 472, 417, 181, 2, 486, 2, 487, 77,
	-442, 599, 77, 196, 2, 196, 2, -425, 2, 593,
	409, 196, 2, 2, -619, 2, 364, 196, 2, 196,
	2, 196, 2, 196, 2, 196, 2, -200, 482, 548,
	526, 413, 262, 2, -141, 590, -124, 262, 261, -469,
	590, 2, -642, 189, 469, -469, 2, 546, 271, 164,
	196, -425, 2, 196, 2, 196, 2, 5, 2, 43,
	414, 508, 2, 260, 408, 508, 2, 506, 2, -324,
	527, 582, 477, 124, 29, 2, 468, 2, 2, 92,
	93, 196, 2, 196, 2, 211, 196, 2, 196, 527,
	-406, 633, 599, 2, -417, -505, -454, -455, -454, 543,
	-383, -385, -201, 486, 2, -250, -415, -252, 189, -445,
	-446, -253, 285, 176, 359, -254, -424, 29, 143, -424,
	-424, 63, 632, 632, 11, 12, 79, 43, 621, 622,
	623, 624, 187, 625, 626, 619, 620, 618, 611, 612,
	616, 266, 267, 99, 615, 613, 90, 299, 462, 177,
	178, 179, 180, 439, 240, 35, 241, 14, 15, 16,
	-349, 34, 369, 284, 600, 230, 490, 614, 17, 18,
	19, 257, 259, 348, 53, 233, -301, 380, -348, 524,
	70, -469, -469, -469, -469, -469, -469, -469, -469, 376,
	631, -411, -464, 629, -245, 631, 631, 631, 631, -545,
	-245, -469, -483, 632, -402, 631, -245, -483, -478, 631,
	460, 629, 631, -486, -469, 5, 5, 5, 631, 633,
	-599, 594, 189, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 403,
	-527, 631, -526, 631, -526, -526, 583, -524, 631, 602,
	595, 631, -524, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 583, 533, 636, -596,
	-379, 631, -407, -510, -469, 623, -407, -407, 364, -399,
	-469, 110, -428, 263, 325, 197, 281, 454, 247, -466,
	635, -466, -494, 602, -245, -502, -323, -245, -504, 631,
	-500, -494, -113, -545, -96, -109, -118, -141, -157, -205,
	-206, 623, -324, 631, 196, 631, 633, -549, 196, -389,
	-307, -334, -293, -324, -340, -341, -346, -318, -293, 2,
	2, 142, -399, -614, 556, 471, 29, 477, -556, -296,
	39, -480, -519, -520, -570, 635, -569, -522, -532, -528,
	-531, 393, 397, -551, 57, 579, -534, 253, 4, -561,
	-563, 250, 251, 498, 54, 419, 184, 130, 129, 356,
	59, 539, 540, 541, 542, 201, 202, 61, 580, 512,
	72, 73, -614, 556, 471, 29, 477, 189, -556, 189,
	-556, 2, 2, 159, 2, 2, 2, -293, -271, 636,
	67, 447, 159, -397, 226, -271, 159, -271, 159, -347,
	226, -346, -271, 159, -271, 636, 159, -271, 636, 159,
	633, 636, 159, -556, 2, -441, -548, -399, 39, -455,
	2, 131, 4, 5, -672, 636, 283, -352, 298, 345,
	221, 365, 597, 357, 135, -557, 5, 4, -479, -491,
	131, 291, 253, -539, -541, 9, -542, 621, 622, -547,
	-546, 113, 633, -549, -215, 248, 41, -306, -306, -660,
	-660, 8, 8, -660, -660, -306, -306, -268, 440, 484,
	379, -267, 25, 30, 147, 244, 330, 576, 165, -364,
	245, 445, -361, 383, 159, 502, 565, -629, -632, 467,
	535, 166, 438, 94, 357, 484, 379, 440, 159, -421,
	-423, 39, 122, 330, 378, 64, 236, 303, 304, 505,
	587, 159, 484, 379, 440, 379, -15, -282, 25, 147,
	-284, -279, 484, 30, -632, 103, 440, 606, 445, 389,
	519, 406, -632, -629, 279, -631, 589, 344, -270, 502,
	565, -629, -632, 467, 440, -269, -366, -361, 383, 159,
	635, 25, 147, 440, 484, 379, -652, -653, 30, -263,
	-262, 25, 147, 484, 568, -266, 233, -265, 25, -150,
	-130, -149, 445, 484, -150, 2, 440, 379, -623, -314,
	-593, 233, 593, 159, -314, -314, -505, 226, -646, 189,
	2, -639, -137, 275, 5, 10, -558, -137, -396, 636,
	636, -549, 623, 469, 468, 159, 159, 159, 159, 262,
	189, 346, 346, 593, 2, 2, 2, 2, 2, 198,
	-634, -657, 2, 2, -324, 226, -381, 364, -617, -618,
	527, -324, 189, 346, 45, -327, 226, 2, -330, 582,
	-623, 346, -329, 226, -324, 39, 631, 346, 2, -441,
	2, 242, -593, 346, -506, -343, -324, -501, -343, 484,
	-317, 39, -466, -324, 632, 636, -516, -516, -558, -224,
	593, 196, 631, -236, 593, 593, 262, -513, 636, -512,
	233, -559, -558, -138, -558, 443, 196, 262, -558, -617,
	-307, 2, -324, 2, 527, 264, -558, -224, 233, -558,
	-558, -558, -548, 29, 487, 2, -200, 482, 548, 93,
	487, 2, -324, 527, 124, 242, 83, -646, 189, 2,
	-293, -621, 189, -615, 455, 471, 556, -614, -324, 124,
	-324, 124, -324, 124, -324, -324, 2, 2, 2, 2,
	2, 88, 2, -141, -469, 2, 88, 2, 48, 503,
	-642, 189, 2, 546, 2, 546, 2, -293, -293, -293,
	359, 507, 283, 593, -324, -324, -324, -325, -330, 472,
	528, 557, 469, -469, 2, -661, 2, 196, 189, 2,
	527, 242, 527, 242, 124, 196, 77, 124, 29, 527,
	466, 633, 4, -271, 636, -297, -250, -415, -548, -416,
	-415, -251, -250, -253, 189, 418, 566, 330, 488, 268,
	-446, -445, 29, -469, -450, 183, 329, -469, -448, -471,
	621, 622, -540, -542, -398, 357, -244, -244, -244, -386,
	-496, -469, 406, 242, -521, -519, -519, -322, -549, 539,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, 284, 230, 490, 53,
	233, -469, 543, -469, -469, -469, -469, 322, 346, 353,
	553, 174, 563, 143, 357, -675, 521, 42, -476, -245,
	-403, 631, -490, 36, 501, 29, -483, 631, 2, -464,
	-469, -465, -350, -348, -293, 621, 622, 623, 624, 625,
	626, 611, 612, 613, 14, 15, 16, 616, 620, 618,
	619, 187, 99, 615, 299, 462, 90, 177, 178, 179,
	180, 266, 267, 17, 18, 19, 35, 614, -400, -399,
	-399, 632, 581, 29, 143, 623, 2, 632, 636, 39,
	632, -469, -400, -482, -478, -399, -489, -488, 590, -436,
	-437, 598, 308, 127, 224, 306, -438, 475, -543, 8,
	-549, 623, -600, 182, 215, 631, 632, 2, 632, 2,
	632, -469, 2, 632, -469, 2, 632, -469, 2, 632,
	-469, 2, 632, 2, 632, 2, -469, -469, -469, -469,
	-469, -469, -469, -399, 8, -543, -543, 539, 539, -543,
	-543, -543, -535, 393, 394, 395, 396, 286, 287, 288,
	289, 397, 398, 399, 400, 314, 315, 316, 317, 310,
	311, 312, 313, 318, 319, 320, 321, 206, 207, 208,
	209, 202, 203, 204, 205, -535, -430, 2, -537, -399,
	4, 598, 308, 127, 224, 306, 475, 5, -430, 2,
	-431, 2, -469, -399, -432, -470, -471, 621, 622, 614,
	-349, -433, 2, -469, -400, -469, 60, 278, 545, -434,
	-469, 196, -399, -399, 2, -399, 2, -472, 2, -597,
	39, -399, -392, 636, 196, 39, 4, -392, -392, 631,
	632, 636, -429, 219, 302, 297, 256, -429, -500, -428,
	263, -426, 374, -426, -426, -494, -308, 629, 637, -549,
	-494, -493, -492, 39, -317, 371, -494, -494, 633, 632,
	-493, 630, -612, 631, 634, 634, 634, 634, 634, -324,
	631, -399, -549, 633, 509, 2, 632, 257, 257, 257,
	257, 257, 364, 461, 632, 543, -616, -333, -337, 528,
	2, 593, -111, 366, 632, 636, -391, 38, 629, 633,
	-543, 2, 2, -538, 583, 631, 631, -437, 631, 196,
	-616, -337, 528, 2, -622, -390, -390, 543, -293, 2,
	-324, -397, -271, 159, -397, -397, -271, 636, 159, -307,
	-328, -333, -335, -337, -293, -554, -556, -271, -329, -649,
	632, 547, -456, -351, 418, 500, 441, 479, 523, 9,
	9, 636, -549, -216, 470, 330, -306, -306, -306, -306,
	636, -650, 97, 543, 81, 631, 471, -286, 292, 543,
	-460, 226, 81, -571, 97, -310, -572, -293, 75, 562,
	406, 193, 157, -650, 97, 406, -650, 97, 2, 244,
	97, 484, 507, 631, 29, 63, -505, 43, 43, 29,
	-630, -631, 279, 196, 599, 527, 242, 471, 543, 543,
	-505, -423, -519, 122, 303, 304, 63, -544, -544, 63,
	-544, -544, -544, 593, -327, -505, 471, 543, 543, 543,
	428, 518, 428, 518, -279, -155, 518, 543, 543, 29,
	-201, 448, 131, -673, 613, 428, 279, -631, 543, 196,
	636, 43, 43, 29, -630, 196, 543, -346, -308, 577,
	44, 577, 44, 577, 543, 44, 471, 543, 636, 44,
	-262, -617, -617, -223, -222, -293, 5, -389, -265, -558,
	-264, 328, 77, 543, 543, -15, 484, -624, -298, 109,
	336, 296, 337, 101, 333, 100, 332, 107, 334, 108,
	335, 584, 349, 585, 350, 66, 331, 307, 338, 504,
	339, 586, 351, -299, -300, 150, 385, 575, 124, -554,
	-15, -15, 484, 379, 440, 159, -647, 233, 29, -636,
	233, -513, 233, -513, -338, -293, 633, -141, -469, -469,
	-141, -469, -141, 48, 159, 159, 2, 2, -669, 272,
	631, -355, 346, 196, -389, -514, 636, 254, -324, 175,
	-614, 159, -554, -422, -421, 346, -329, 226, 2, 159,
	-379, 346, 153, 631, 416, 2, 159, -309, 226, -294,
	-293, -441, -273, 531, 159, -419, 573, -451, -141, 631,
	131, 39, -451, -408, -409, -511, -410, -310, 631, -317,
	-466, -112, -515, 632, 632, 632, -223, 368, -236, -380,
	-311, -310, 123, 420, 420, -230, 593, -137, -138, 632,
	636, -513, 233, 510, -138, -558, -224, -224, -513, -513,
	-324, 189, -558, -224, 233, -224, 233, -224, 233, 2,
	2, 2, 2, -425, -324, -307, -346, -324, 29, 633,
	-556, -556, -337, -333, -425, -307, -425, -307, -425, -307,
	-425, -425, -141, -469, 507, 2, 481, 189, 189, 633,
	-425, 8, -382, 450, 5, 2, 416, 124, 527, 383,
	242, -324, -346, -324, -346, -307, 124, -307, 125, -324,
	4, -505, -416, -251, 365, 268, 488, -448, -449, -471,
	460, 461, -449, 460, 461, 8, 9, 8, 9, -255,
	492, 352, -397, 636, -260, 40, 139, 268, -324, 599,
	155, -469, -469, 543, -675, 521, -476, 155, -469, 322,
	353, 553, 174, 563, 143, 357, 196, 631, -470, -470,
	632, -401, -469, -469, 630, 639, 632, 633, 632, -385,
	636, -383, -469, -399, -399, 632, 633, -399, -389, 630,
	630, 636, 632, -487, -488, 148, -469, 543, 543, 543,
	543, 631, 632, 633, -605, 375, 631, 631, -469, 632,
	632, 632, 632, 39, 636, 636, 636, 632, 636, 636,
	636, 632, 632, 632, 636, 632, 599, 599, 632, 632,
	632, 632, 636, 632, 636, 632, 196, 632, 632, -439,
	390, 632, 11, 12, 621, 622, 623, 624, 187, 625,
	626, 619, 620, 618, 611, 612, 613, 90, 299, 462,
	14, 15, 16, -349, 257, 233, -470, -470, -470, -470,
	632, -474, -475, 196, 189, 39, -434, -434, -434, 632,
	196, -399, 632, 632, 631, -598, 301, 346, 632, -463,
	-462, 591, -510, -393, 2, -500, -319, -549, -463, -463,
	-399, -469, 263, 263, -427, 573, 364, -429, -500, -493,
	-545, -468, -467, 191, 40, 139, 340, 341, 342, 229,
	192, -493, -317, -379, -493, -493, -549, -494, -494, -492,
	632, -613, -545, 632, -394, -503, -592, -385, 633, -549,
	-233, -593, -202, 5, 353, -202, -202, -202, -202, -324,
	-556, 543, 543, 233, 26, 391, -519, 629, 630, 8,
	-549, 631, -543, -543, -543, -556, 196, 196, 233, 364,
	196, -554, 2, -271, -397, -271, -271, -346, -347, -271,
	-271, -271, -420, 593, -546, -455, 560, 86, 418, 539,
	-546, 121, 470, -267, 440, 484, -310, -310, -324, -240,
	-239, -237, -293, 5, -334, 210, 429, -554, 346, -460,
	226, -272, 346, 226, -318, -519, 631, -443, 595, 268,
	268, 573, -310, -318, 268, 226, -310, 226, -318, 2,
	-318, -625, 418, 358, -469, -238, -237, 63, -362, 290,
	416, 347, -268, 440, 484, 379, -141, -141, -141, 631,
	-649, 573, 142, -324, -346, -324, -334, -554, -329, 484,
	379, 440, 343, -340, -544, -544, -421, 484, 379, 440,
	-334, -554, -327, -554, -278, 226, -293, 428, -278, 226,
	428, 428, 471, -307, 428, 599, 47, -673, 543, 196,
	-469, -469, -269, -141, -141, -141, 631, -308, -270, 440,
	5, 226, -310, 5, -310, 226, 5, -293, -310, -334,
	-554, -653, 25, 147, -310, -224, 636, 613, 613, -266,
	613, -334, -554, -298, 385, -558, 353, 569, -307, -623,
	-314, 471, 543, 543, -505, -643, -644, 212, 453, 471,
	456, -556, -137, -227, 593, -137, -221, 237, 623, -620,
	-558, -293, 582, -293, -353, -356, -354, -310, -461, -460,
	-575, -576, -571, 284, 242, 562, 256, 175, 97, -241,
	-242, 595, 593, 159, -344, -324, 629, -224, -618, -558,
	175, -315, -293, -514, -335, -336, 159, -379, 346, -554,
	39, 159, 631, 2, 2, -328, 364, 346, -309, 226,
	-274, 149, -673, -307, -463, -393, -418, -453, 450, 364,
	-380, 578, -317, -418, -395, 636, 196, 613, 633, -380,
	-509, 623, -112, -112, -224, 631, 631, -558, 632, 636,
	633, 631, 613, 613, -232, 368, -231, 151, 270, 255,
	494, 495, 496, 497, 141, 493, 128, 327, 238, 533,
	-513, -558, -230, -138, 196, -513, 233, 196, -71, 593,
	527, -224, -558, -558, -558, 635, 456, -293, -425, -425,
	-425, 481, 481, -293, 189, -389, -320, -549, -307, -324,
	-321, -346, 189, 189, -307, 566, -449, 365, 295, -496,
	-261, 601, -324, 635, -469, -469, 155, 155, -469, -470,
	-470, -469, 155, 196, 631, -469, -480, 34, 34, 632,
	636, -465, -469, -348, 632, 581, -385, -385, 632, 623,
	-549, 635, 632, -478, 152, -469, 537, 308, 224, 306,
	-438, 306, -438, -438, -543, 5, -549, 623, -606, -313,
	631, -293, 591, -384, 370, 632, -521, -519, -469, -469,
	-469, -469, -469, -543, -524, -524, -539, -539, -469, -474,
	-469, -521, -519, -470, -470, -470, -470, -470, -470, -470,
	-470, -470, -470, -470, -470, -470, -470, -470, -470, -470,
	-470, -470, -470, 143, 346, 357, -470, -475, -474, -469,
	-469, -519, 632, 632, 632, -399, -111, 631, 301, -412,
	215, -469, -513, 636, -412, -412, 632, -500, -500, 631,
	-469, 263, 630, 636, 638, 613, 613, -379, 633, -492,
	-493, 630, 632, 636, 632, 636, -452, 39, 632, -549,
	-463, -235, -234, 140, 56, 111, 138, 353, 361, 195,
	220, 415, 155, 190, 149, 257, -645, 593, -556, -556,
	471, 367, 5, 8, 629, 630, 633, -543, 632, 632,
	632, -556, -556, 471, -614, 556, 471, 29, -556, -271,
	-271, 123, 330, -469, -213, 593, 595, 543, 543, 632,
	636, 613, 63, 233, 159, 346, 575, 346, -572, 157,
	-577, -469, 631, 242, 631, 631, 2, -257, -258, -259,
	147, 484, 25, -651, 2, 573, 159, -271, 159, -271,
	597, 632, 636, -362, 631, 631, 543, 471, -286, 543,
	593, -399, -469, -225, 131, -548, -632, 635, -632, 635,
	471, 543, 543, 471, 543, 543, 346, -293, 159, -293,
	-293, 593, 173, 173, 599, -278, -469, -469, 189, 543,
	593, -399, 543, -523, 51, 27, 346, -328, -271, 159,
	543, 543, 556, 484, -222, -558, -558, -137, -558, -558,
	353, -15, -334, -554, -329, 484, 379, 440, -622, -622,
	212, -337, -647, -513, -229, 368, -228, 151, 452, 141,
	270, 238, -513, -227, 196, 254, 593, -329, 2, 632,
	632, 636, 636, -578, -272, -324, -309, 242, 242, -316,
	-294, 39, 361, 361, 631, -324, -92, 593, -512, -545,
	-315, -626, 593, 45, -327, 39, 159, -623, -141, -329,
	-517, -518, 5, 39, -324, 159, 364, 346, -275, 277,
	-673, -553, -593, -385, -418, -407, 347, 95, 632, -463,
	-409, -393, -469, 2, 632, -223, -558, -224, -236, -311,
	2, -559, -558, -558, 636, 631, 613, 613, 613, 613,
	613, 613, 613, -230, -513, -137, -230, -138, -141, 368,
	-324, -224, -224, -224, 623, -425, 5, -368, -367, 383,
	357, -368, 460, 460, 365, 183, 273, -260, -308, -469,
	-469, 155, 34, 34, -469, -469, -480, 632, -469, -469,
	-399, 630, 5, -469, 632, 632, 8, -469, 632, 633,
	-607, -293, -469, 632, 63, 632, 632, 636, 636, 632,
	632, 632, 632, 632, 632, 632, -475, 196, 143, 357,
	631, 632, 632, -111, -477, 218, 63, -500, -477, -477,
	-427, -389, -500, -467, -308, 629, -308, 629, -549, -545,
	-503, 631, 633, -234, 613, -558, -558, 2, 2, 2,
	5, 5, 415, 346, 353, 5, -202, 212, -645, -645,
	593, -337, 630, 2, 629, -549, 632, -337, 196, -616,
	-337, 528, 123, 189, 223, 223, -310, -310, -239, -546,
	527, 460, -278, 406, -460, 159, 159, -579, 97, -581,
	79, 175, 106, 346, 353, 562, 406, 75, 131, 364,
	425, -663, -664, -665, 39, 604, 605, 632, -387, -497,
	-592, 631, -293, -387, -389, 346, 515, 131, 364, 346,
	131, 364, 588, 123, 2, 556, 82, -310, -318, -237,
	-389, -389, -324, -334, -554, 167, 632, 636, 613, 2,
	623, 623, -334, -554, -329, -334, -554, -327, 159, 578,
	-278, 578, 381, 173, 543, -141, -469, 167, 632, -308,
	5, 5, 159, -305, 79, -310, 5, -310, -328, 123,
	593, 471, 543, 543, 364, 364, 367, -643, -644, -227,
	636, 631, 613, 613, 613, -227, -559, -137, 2, -379,
	-369, 244, -310, -576, -573, -574, 406, -461, -580, -582,
	175, 406, -357, 631, -309, -294, 631, -141, 2, -240,
	631, -355, 368, 630, -628, 368, -627, 121, 141, -554,
	-422, -141, -329, -377, 593, -379, 632, 636, 153, -444,
	573, -308, -324, 159, -276, 276, -673, -553, -273, -447,
	-445, 144, 631, 364, -141, -385, 613, 632, 632, 123,
	632, -231, -232, -558, -137, -558, -558, -558, -137, -558,
	-230, -513, -513, -72, -73, 242, 97, 388, -321, 527,
	242, 631, 631, -260, -469, -469, -469, 632, -385, -549,
	623, -601, 383, 632, -496, -469, -469, -470, 196, 631,
	-480, 632, -602, 592, -469, -413, -414, -469, 458, 112,
	216, -602, -602, 632, -545, -545, 2, -558, 2, 2,
	353, 2, 2, 367, 2, 543, 629, 2, 196, -556,
	196, 196, 233, -141, 233, 39, 428, -460, -318, -318,
	-322, -315, 175, 226, 353, 588, -443, 268, 631, -470,
	566, -324, 631, 2, 225, 225, 31, 63, -666, 135,
	246, 632, 636, -498, -304, -293, -469, -498, 632, 632,
	353, 566, 353, 588, -469, 566, -519, 631, -271, -271,
	632, 632, -469, 543, -548, 104, -546, 2, -632, -278,
	-389, -389, -307, -469, 189, -469, 543, 5, -271, -322,
	-271, -271, -305, 556, 363, -334, -554, -329, -648, 528,
	478, 557, 472, 199, 459, -648, 189, -228, -229, -558,
	-137, -137, -227, 39, -363, -364, 2, -578, 268, -315,
	268, 235, 158, -387, 631, 631, -389, -662, 593, 632,
	-353, -241, -93, -94, 544, -512, 636, 631, 613, -379,
	330, 123, 39, 5, 631, 631, -293, 364, 631, -308,
	-288, 96, -673, -553, -274, -418, 347, -389, 97, -447,
	-476, -224, 631, -224, 632, -230, 636, 29, 631, 29,
	631, -324, -346, -399, -399, 632, -385, 63, 636, 632,
	632, -470, -480, 632, -603, -604, -313, 636, 631, 631,
	485, 630, 630, 2, -556, 2, -556, -556, -556, 471,
	-278, 406, -293, -572, -581, -315, 346, -242, 573, 593,
	-469, -470, -295, 631, -469, 631, 631, 39, 131, 246,
	136, 231, -459, -667, 105, 516, 234, -497, -260, 632,
	-458, 573, 425, -470, -305, -387, 631, 631, 631, 613,
	196, -141, 631, -523, -271, -328, 613, 543, 2, 2,
	196, -622, 632, -638, 423, -141, -241, 631, -242, -358,
	84, 98, 132, 225, 200, 243, 507, 513, 29, -358,
	632, -387, -387, 632, -359, 364, 123, 330, 632, 39,
	-94, 9, -627, -628, -469, 39, 123, -141, -517, -387,
	-324, -387, 364, -280, -279, 285, -553, -275, 632, -318,
	-418, -559, -73, -389, -389, 632, 632, -608, 416, 461,
	217, -399, -386, 632, 636, 39, -414, 2, 2, 2,
	-645, -337, 428, -272, 159, 219, 632, -583, 300, -293,
	632, -422, -422, 39, 136, 231, -365, -361, 631, -261,
	-498, -242, 219, -324, -633, 573, 632, -371, -370, -367,
	-373, -372, -367, -399, -546, 104, 381, -399, -305, -137,
	-556, -556, 364, -640, 197, -639, 5, 10, -359, -388,
	-499, -310, -458, 632, 632, 85, 123, -369, -141, 632,
	-141, 2, -377, 632, 632, -444, 632, -324, -277, -560,
	428, 430, -673, -276, -463, 144, 632, 632, 632, 632,
	-609, -610, 53, 559, 113, -469, -609, -609, -604, -606,
	196, 175, -457, 602, -584, -587, -586, 609, 491, 197,
	382, 632, 515, 587, 632, 632, -666, -389, -457, -379,
	-469, -458, 632, 636, 578, 632, 636, 578, 632, 196,
	632, -271, -645, -271, -648, -226, 593, 48, -287, -286,
	632, 636, -459, -458, -365, 405, 137, 147, -363, -662,
	-458, 631, -459, 631, -285, -284, -673, -539, -288, 144,
	347, 566, -224, -611, 157, -610, 402, 188, 460, 402,
	188, -611, -611, -556, -315, -242, 58, -586, 609, -587,
	609, 566, 137, -463, 632, -583, -242, -370, 233, -372,
	196, 381, 196, 468, -639, 31, -242, -499, -365, -459,
	-242, 461, 461, 2, -241, -359, -459, -387, -365, -387,
	-281, -282, -283, -389, -280, 347, 566, 484, 113, 215,
	538, 330, 34, 613, -585, 330, 447, 67, 484, -585,
	-584, 631, 631, -556, 368, -242, -365, -463, 2, -359,
	-365, 632, -242, 632, -555, 379, -277, 484, -408, 460,
	372, -610, -469, 24, 353, 131, -666, -399, -399, -271,
	-223, 631, -463, -242, -287, -242, -458, -463, -459, -673,
	-285, -408, -463, 632, 632, -223, -463, -463, -459, -365,
	-554, -281, -463, -360, -361, 543, 632, -365, -242, 631,
	-242, -463, -399, -463, 632, -360,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 40, 597, 598, 600, 601,
	602, 604, 605, 607, 609, 611, 612, 613, 615, 616,
	618, 619, 620, 621, 622, 624, 626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 713, 715, 0, 1555, 1557, 1559, 1561, 0,
	0, -2, -2, 0, 42, 43, 45, 47, 0, -2,
	372, 374, 376, 378, 0, 410, 412, 413, 415, 417,
	418, 419, 421, -2, 0, 530, 531, 533, 535, -2,
	0, 1140, 1142, 1144, 0, 701, 703, 0, 1147, 1149,
	1151, 0, 0, 725, 726, 0, 1669, -2, 717, 719,
	721, 723, 800, 802, 804, 806, 808, 810, 812, 814,
	816, 818, 819, 821, 823, 825, 827, 829, 830, 832,
	834, 836, 837, 839, 840, 842, 844, 846, 848, 850,
	852, 854, 856, 858, 860, 862, 864, 866, 868, -2,
	871, 872, 873, 875, -2, -2, 0, -2, -2, -2,
	1573, 49, 51, 53, 55, 57, 59, 61, 63, 65,
	67, 69, 71, 472, 474, 476, 478, 480, 483, 485,
	487, 1727, 537, 539, 541, 543, 545, 547, 549, 0,
	0, -2, 1741, 0, 0, 960, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 82, 127, 128, 129, 130,
	131, 132, 133, 86, 87, 88, 90, 91, 92, 93,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 124, 125, 84, 0, 0, 1700, 1702,
	1704, 1706, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 25, 27, 29, 33, 35, 37,
	39, 599, 603, 606, 608, 610, 614, 617, 623, 625,
	627, 582, 583, 586, 2439, 2457, 2458, 2459, 2462, 2463,
	2464, 2465, 2466, 2467, 2951, 3032, 3033, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561,
	2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571,
	2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581,
	2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591,
	2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601,
	2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611,
	2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621,
	2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631,
	2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641,
	2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651,
	2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661,
	2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
	2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681,
	2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691,
	2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701,
	2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711,
	2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721,
	2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731,
	2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741,
	2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751,
	2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761,
	2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771,
	2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781,
	2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791,
	2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801,
	2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811,
	2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821,
	2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831,
	2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841,
	2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851,
	2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861,
	2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871,
	2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881,
	2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891,
	2892, 2893, 2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901,
	2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911,
	2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921,
	2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929, 2930, 584,
	585, 1334, 0, 666, 664, 2424, 667, 2736, 669, 671,
	524, 525, 526, 527, 528, 529, 0, 694, 680, 1739,
	695, 697, 698, 699, 700, 661, 659, 0, 699, 694,
	2494, 692, 1553, 1554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 536, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 451, 1393, 1394, 1395, 1538,
	1539, 2788, 1580, 0, 259, 714, -2, -2, 2916, -2,
	754, 755, -2, -2, 769, 773, 764, 2920, 0, 2791,
	2774, -2, 776, 1556, 1558, 1560, 876, 877, 878, 2443,
	882, 880, 892, 893, 896, 0, 913, -2, 0, 2490,
	2759, -2, -2, 914, 915, -2, -2, -2, -2, 894,
	895, 0, 0, 0, 0, 0, 44, 46, 48, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 269, -2, -2, -2, -2, 0, 0, 2839,
	2549, 2392, 2459, 2395, 2390, 373, 375, 377, 379, 380,
	0, 0, 0, 0, 0, 0, 0, 411, 414, 416,
	420, -2, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 1214, 1206, 1207, 1460, 0,
	0, 0, -2, 532, 534, 587, 588, 0, 1728, 1728,
	595, 596, -2, 0, 0, 0, 0, 334, 324, 1141,
	1143, 1145, 1146, 0, 0, 0, 0, 0, 702, 704,
	0, 0, 2833, 301, 1148, 1150, 1152, 1153, 0, 0,
	0, 0, 0, 0, 336, 0, 0, 718, 720, 722,
	724, 801, 803, 805, 807, 809, 811, 813, 815, 817,
	820, 822, 824, 826, 828, 831, 833, 835, 838, 841,
	843, 845, 847, 849, 851, 853, 855, 857, 859, 861,
	863, 865, 867, 869, 870, 921, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, -2, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 1029, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, -2, 1120, 0, 0, 924, 927, 928, 929, 930,
	931, 932, 0, 1002, 1027, 1028, 1038, 874, 0, 1374,
	1729, 1582, 1563, 1577, 1582, 1565, 1566, 1567, 1568, 1569,
	1574, 1576, 1570, 1571, 1572, 50, 52, 54, 56, 58,
	60, 62, 64, 66, 68, 70, 72, 473, 475, 477,
	479, 481, 484, 486, 488, -2, 1698, 1699, 538, 540,
	542, 544, 546, 548, 550, 705, 0, 708, 0, 926,
	707, -2, 0, 1733, 1733, 1733, 0, 0, 1699, 1697,
	0, 711, 712, 780, 781, 2006, 0, 0, 0, 0,
	0, 0, 0, 0, 2266, 2094, 0, 782, -2, 2127,
	2129, 2891, 2709, 2916, 2265, 2131, 2132, 2133, 2134, 2135,
	0, 2137, 2138, 2139, 2140, 2141, 2142, 0, 2144, 0,
	2149, 2150, 2151, 0, 2898, 2369, 2453, -2, 0, 0,
	2904, 2449, 0, 2232, 2167, -2, -2, 2476, 2455, 1938,
	1939, 1940, 1941, 1942, -2, -2, 2934, 2171, 2172, 2173,
	2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 0, 2879,
	2899, 2900, 2905, 2907, 2901, 2888, 2192, 2563, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1965, 1974, -2, -2, -2, -2, -2, -2, -2,
	2892, 2893, 2910, 2913, 2919, 2924, 2925, 2897, 2906, 2933,
	2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944,
	2945, 2946, 2947, 2948, 2949, 2950, 1966, -2, -2, -2,
	-2, 0, 1716, 2752, 1719, 1334, 1717, 1701, 1703, 0,
	1705, 0, 0, 0, 1710, 1736, 1734, 0, 1785, 1714,
	1715, 1808, 1808, 1832, 0, 1813, 0, 1832, 1728, 1859,
	0, 1819, 2779, 2168, 2169, 0, 2459, 2454, -2, -2,
	2931, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 662, 0, 668, 670, 0, 0, 0, 693,
	1738, 0, 0, 0, 0, 0, 0, 0, 0, 454,
	455, 456, 457, 458, 2899, 0, 0, 0, 463, 0,
	465, 466, 467, 468, 469, 470, 471, 229, 2899, 555,
	580, 0, 229, 2899, 558, 229, 2899, 561, 0, 564,
	1458, 229, 2899, 567, 2420, 229, 2899, 570, 572, 2428,
	229, 2899, 576, 2435, 2433, 577, 0, 579, 249, 245,
	246, 247, 248, 1549, 1550, 1551, 1552, 0, 1579, 1459,
	716, 0, 742, 0, 752, 753, 2887, -2, 0, 2800,
	757, 758, -2, 760, 1583, 1587, 1588, 1589, 1590, 1591,
	0, 0, 0, 0, 1596, 0, 0, 0, 0, 749,
	750, 767, 768, 774, 777, 0, 885, 881, 897, 0,
	912, 0, 913, 913, 2409, 2400, 2401, 0, 0, 913,
	913, 0, 0, 916, 917, 918, 919, 920, 83, 0,
	2899, 1859, 85, 0, 2414, 2484, 2485, 2486, 2487, 2488,
	2932, 2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959, 2960,
	2961, 2962, 2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970,
	2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 2980,
	2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990,
	2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999, 3000,
	3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010,
	3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020,
	3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030,
	3031, 2934, 89, 0, 2899, 94, 0, 2899, 0, -2,
	110, 0, 126, 0, 153, -2, -2, -2, 134, 0,
	2899, 0, 2389, -2, 0, 241, 325, 326, 327, 0,
	643, 0, 652, 337, 338, 2472, 2473, 2480, 2481, 2482,
	2483, 0, 745, 2266, 0, 0, 1178, -2, 0, 1387,
	1389, 1389, 0, -2, 0, 0, 0, 1130, 2386, 2391,
	1131, 1132, 2410, 1133, 2396, 0, 381, 382, 383, 384,
	385, 0, 386, 2899, 388, 389, 0, 391, 392, 2899,
	394, 395, 0, 397, 0, 399, 0, 281, 285, 2899,
	2899, 424, 427, 0, 429, 430, 0, 432, 0, 0,
	0, 436, -2, 452, 0, 449, 439, 440, 442, 443,
	444, 445, 446, 0, 492, 490, 2425, 0, 0, -2,
	2899, 0, 1175, 0, 0, 1438, -2, 0, 1380, 0,
	1445, 2899, 1441, 0, -2, 0, 1726, 2899, 1600, 1210,
	1211, 1212, 1213, 1871, 521, 0, 1633, 0, 1635, 0,
	1655, 1865, 1808, 0, 0, 1870, 0, -2, 640, 2442,
	-2, 590, 0, 591, 0, -2, 0, 351, 0, 0,
	1156, 1158, 1159, 1161, 1162, 1165, 1166, 1167, 1168, 0,
	1170, 1845, 302, 304, 0, 0, 0, 0, 1155, 1540,
	1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 0, 0,
	727, 0, 0, 922, 923, 0, 0, 939, 940, 941,
	0, 351, 2792, 2747, 2585, 951, 0, 954, 957, -2,
	0, 0, 0, 0, 964, 0, 969, 970, 971, 0,
	-2, 0, 978, 980, 1139, 982, 0, 0, 984, 0,
	988, 0, 991, 0, 993, 0, 995, -2, -2, -2,
	1003, 1004, -2, 1009, -2, 0, 1013, -2, 0, 1016,
	0, 1019, -2, 0, 1029, 1025, 1026, 0, 0, 0,
	0, 1046, 1047, 0, 1056, 0, 1059, 1060, 1061, 0,
	0, 1066, 1067, 0, 1069, 1070, 1071, 1073, 1074, 1075,
	0, 2868, 2797, 2549, 0, 1083, -2, 1089, 1091, 0,
	-2, 0, 1107, 0, 1111, 0, 0, 1119, 0, 0,
	925, 0, 933, 934, 229, 1863, 1562, -2, 1564, 0,
	-2, 0, 706, 0, 710, 1758, 1684, 1681, 0, 1755,
	1756, 1685, 0, 0, 0, 1692, 0, 1731, 1732, 0,
	0, 0, 1671, 1672, 0, 0, 0, 0, 2271, 2272,
	2273, 2274, 2287, 2275, 2276, 2286, 2284, 2285, 2277, 2278,
	2283, 2297, 2298, 2288, 2289, 2279, 2292, 2290, 2291, 2293,
	2294, 2295, 2296, 0, 0, 2302, 0, 2280, 2281, 2282,
	2310, 0, 0, 2311, 0, 2313, 0, 2303, 2299, 2300,
	2301, 0, 2073, 2075, 2377, 0, 0, 0, 2309, 2304,
	2305, 2011, 2012, 2013, 2014, 2015, 2048, 2052, 2053, 0,
	0, 2128, 2374, 2373, 2130, 0, 0, 2325, 0, 2143,
	-2, 0, 2266, 2320, 0, 0, 2152, 2153, 2154, 0,
	0, 2325, 0, 0, 2368, 2164, 2165, 2003, 0, 0,
	2234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1952,
	1951, 0, 1953, 0, 1954, 1955, 1962, 1975, 0, 0,
	0, 0, 1979, 0, 0, 0, 0, 0, 0, 0,
	2349, -2, 0, 0, 0, 0, 1967, 0, 0, 1718,
	0, 0, 1789, 2378, 2382, 2383, 1789, 1789, 0, 0,
	2326, 1856, 1856, 0, 0, 1851, 1851, 1851, 1849, 1832,
	0, 1832, 1842, 0, 1832, 1832, 0, -2, 1813, 0,
	0, 1842, 0, 1826, 628, 630, 632, 634, 635, 636,
	638, 1860, 1861, 0, 0, 0, 0, 2460, 0, 0,
	0, 0, 2432, 0, 0, 2445, 0, 0, 2419, 406,
	407, 0, 0, 0, 2850, 2791, 0, -2, 673, 696,
	1728, 0, 2328, 1886, 1890, 0, 1892, 1893, 1894, 1895,
	1896, 0, 0, 1887, -2, 1963, 1965, 1986, 2477, 2478,
	2479, 1946, 1947, 1948, 1949, 1950, 1958, 1945, 1945, 1945,
	1956, 1985, 1977, 1985, 1981, 1931, 1932, 1933, 1968, 1969,
	1970, 1971, 0, 2850, 2791, 0, -2, 0, 683, 0,
	0, 1666, 453, 0, 460, 461, 462, 0, 551, 0,
	227, 228, 0, 229, 2899, 556, 0, 559, 0, 229,
	2899, 2384, 565, 0, 568, 0, 0, 574, 0, 0,
	0, 0, 0, 229, 1668, 0, 0, 0, 0, -2,
	762, 770, 771, 772, 0, 1585, 0, 1592, 791, 792,
	793, 1594, 1595, 0, 1597, 765, 794, 795, 796, 797,
	798, 799, 0, 2398, 2399, 2404, 2405, 0, 0, 763,
	784, 766, 0, 778, 888, 883, 884, 898, 899, 0,
	0, 2402, 2403, 0, 0, 904, 905, 135, 1535, 0,
	0, 182, 0, 1535, 1535, 0, 0, 0, 0, 210,
	0, 0, 1244, 0, 0, 0, 0, 153, 167, 178,
	147, 148, 149, 0, 0, 0, 0, 0, 0, 95,
	1356, 0, 1359, 0, 0, 0, 0, 0, 0, 0,
	1372, 0, 0, 0, 0, 0, 112, 113, 0, 0,
	118, 119, 0, 0, 166, 0, 0, 0, 0, 0,
	1630, 0, 157, 153, 0, 0, 152, 154, 137, 0,
	0, 153, 168, 180, 0, 216, 218, 1241, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 251, 0, 642,
	644, 0, 0, 0, 0, 650, 0, 653, 0, 743,
	747, 748, 0, 0, 744, 746, 0, 0, 1381, 0,
	0, 0, 1725, 0, 0, 0, 0, 2899, 1533, 0,
	1518, 0, 1845, 2638, -2, -2, 302, 1845, 1129, 0,
	0, 2460, 2394, 0, 0, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 428, 431, 433, 434, 435, 0,
	1437, 0, 441, 482, 1303, 2899, 0, 0, 511, 504,
	0, 507, 0, 0, 0, 1355, 2899, 1353, 2429, 0,
	1378, 0, 1334, 2899, 2427, 0, 0, 0, 1446, 2469,
	1455, 1459, 1618, 0, 523, 0, 1636, 1638, 0, 0,
	1866, 0, 1868, 1808, 1728, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 1169, 308, 0, 1844,
	0, 0, 339, 1845, 302, 2765, 0, 1154, 351, 351,
	1845, 729, 1845, 731, 0, 0, 942, 943, 0, 351,
	351, 351, 952, 953, 955, 956, -2, -2, -2, -2,
	958, 959, 1053, 0, 0, 0, 1052, 972, 0, 974,
	977, 981, 0, 1123, 2774, 2791, 2850, 1137, 1053, 2549,
	1053, 2549, 1053, 2549, 1053, 1053, 997, 1041, 1049, 1008,
	1015, 0, 1010, 1014, 1017, 1020, 0, 1022, 1030, 0,
	-2, 0, 1033, 0, 1035, 0, 1037, 1053, 1054, 1057,
	0, 1065, 1068, 0, 1076, 1077, 1078, 1079, 2440, 1080,
	1081, 1082, -2, 1086, 1087, 0, 1098, 1103, 1104, 1100,
	0, 0, 0, 0, 0, 0, 1114, 1115, 0, 0,
	1122, 0, 935, 1373, 0, 1575, 1758, 1684, 709, 1675,
	1757, 1676, 1683, 1686, 0, 0, 1688, 0, 1690, 0,
	1753, 1754, 1761, 1762, 0, 1772, 1773, 1765, 0, -2,
	0, 0, 1768, 1769, 1694, 0, 1711, 1712, 1713, 1742,
	1745, 1474, 0, 3032, 2007, 1881, 2008, 2009, 2413, 0,
	2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025,
	-2, -2, -2, -2, -2, -2, -2, -2, 2034, 2035,
	2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, -2,
	-2, -2, 2049, 2050, 2051, -2, 2312, 2314, 0, 2377,
	0, -2, 0, -2, -2, -2, -2, 2070, 0, 2072,
	2077, 2079, 2081, 0, 0, 0, 0, 2376, 2091, 2360,
	2361, 0, 0, 2268, 2269, 2270, 2076, 0, 2095, 2375,
	2372, 0, 0, 2306, 0, 2271, 2272, 2273, 2274, 2275,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 0, 2324,
	1741, 2156, 0, 0, 0, 0, 2163, 2148, 2322, 0,
	2321, 0, 0, 0, 2332, 0, 2367, 2363, 0, 2411,
	2002, 1989, 1990, 1991, 1992, 1993, 1994, 2004, 0, 2408,
	2446, 2452, 2242, 0, 0, 0, 2193, 2194, 2195, 2196,
	2197, 0, 2199, 2200, 0, 2202, 2203, 0, 2205, 2206,
	0, 2208, 2209, 2210, 2211, 2212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1899, 1900, 1901, 1902, 1903, 1904, 1905,
	1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915,
	1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925,
	1926, 1927, 1928, 1929, 1930, 0, 0, 2214, 0, 2335,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 2216,
	0, 2218, 2326, 2346, 0, 0, 2096, 0, 0, 0,
	0, 0, 2221, 2326, 2354, 0, 0, 0, 0, 0,
	2326, 0, 2359, 0, 2228, 0, 2230, 961, 962, 1720,
	0, 0, 1876, 0, 0, 0, 2381, 1876, 1876, 0,
	1784, 0, 0, 1852, 1853, 1854, 1855, 0, 0, 1856,
	0, 1846, 1850, 1847, 1848, 1842, 1805, 0, 0, 2415,
	1842, 1811, 1841, 0, 1334, 1831, 1842, 1842, 0, -2,
	1815, 1832, 0, 0, 629, 631, 633, 637, 639, 0,
	0, 1741, -2, 0, -2, 353, 1333, 0, 0, 0,
	0, 0, 0, 663, 665, 0, 0, 571, 0, 0,
	679, 0, 657, 0, 660, 0, 1877, 1880, 0, 0,
	1891, 1897, 1898, 0, -2, 0, 0, 1987, 0, 0,
	0, 0, 0, 691, 0, 694, 0, 0, 0, 464,
	581, 229, 553, 0, 229, 229, 562, 0, 0, 229,
	573, 229, 2436, 229, 2434, 250, 578, 1667, 262, 0,
	751, 0, 1584, 1593, 0, 788, 0, 790, 0, 2406,
	2407, 0, 779, 0, 886, 0, 900, 901, 902, 903,
	0, 0, 0, 0, 1534, 0, 0, 1481, 0, 0,
	186, 2899, 0, 231, 0, 0, 1296, 2421, 0, 1286,
	0, 0, 2571, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 150, 151, 0, 0, 0, 0, 0, 0, 0,
	0, 1357, 1358, 1360, 1367, 1369, 0, 1363, 1364, 0,
	1366, 1368, 1370, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 120, 1390, 0, 0, 0, 1391,
	1392, 1606, 1607, 0, 1629, 1630, 0, 0, 0, 0,
	0, 0, 0, 146, 0, 0, 0, 0, 2388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	645, 351, 647, 648, 347, 344, 346, 649, 654, 0,
	655, 0, 0, 0, 0, 1383, 0, 1433, 1431, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 0, 0, 0, 0, -2,
	1385, 1386, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 342, 2387, 2397, 0, 1163, 1164, 387,
	390, 393, 396, 268, 0, 0, 426, 437, 0, 0,
	1216, 1188, 0, 0, 491, 351, 0, 0, 506, 0,
	511, 2438, 1173, 1351, 1354, 0, 1334, 2899, 1401, 0,
	0, 0, 0, 0, 0, 1444, 0, 0, 2899, 2416,
	2468, 2469, 1620, 1630, 0, 1876, 0, 1653, 1639, 0,
	0, 0, 1653, 1657, 1658, 1660, 1661, 0, 0, 1867,
	1873, 589, 641, 1728, 1728, 351, 349, 2712, 0, 0,
	1642, 1644, 0, 0, 0, 294, 0, 305, 1845, 303,
	0, 308, 0, 0, 1845, 302, 0, 503, 728, 733,
	937, 0, 351, 945, 0, 947, 0, 949, 0, 999,
	1043, 1051, 1102, 963, 965, 966, 967, 0, 0, 0,
	1138, 1134, 1135, 1136, 983, 1053, 986, 1053, 989, 1053,
	992, 994, 1012, 1018, 1031, 1024, 1032, 0, 0, 0,
	1045, 0, 1063, 0, 1072, 1085, 0, 0, 0, 0,
	0, 0, 0, 1108, 1109, 1110, 1112, 1117, 1116, 1121,
	936, 1864, 1679, 1680, 1682, 0, 1691, 0, 0, 1767,
	-2, -2, 1766, 1770, 1771, -2, -2, -2, -2, 1687,
	0, 1696, 1693, 0, 1752, 1472, 1473, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 2092, 0, -2, 2071,
	2074, 2078, 2080, 2082, 0, 0, 0, 0, 0, 0,
	2315, 0, 2317, 2093, 2370, 2373, 2308, 0, 2264, 0,
	0, 1740, 1741, 1741, 0, 2162, 0, 2323, 0, 2330,
	2331, 0, 2155, 0, 2364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2166, 0, 0, 0, 0, 2198,
	2201, 2204, 2207, 0, 0, 0, 0, 2187, 0, 0,
	0, 2191, 1957, 1943, 0, 1985, 1983, 1984, 1978, 1985,
	1982, 1935, 0, 1934, 0, 2213, 0, 2215, 2217, 0,
	0, 2219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2099, 2100, 2101, 2121,
	2220, 2352, 2353, 0, 0, 0, 0, 0, 0, 2226,
	0, 2358, 2227, 2229, 1728, 0, 1721, 0, 1786, 1775,
	1875, 0, 2379, 1845, 1788, 1790, 2380, 2418, 1775, 1775,
	0, 2327, 0, 0, 1836, 0, 0, 0, 1838, 1809,
	0, 0, 1803, 0, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1810, 1334, 1840, 1812, 1816, 2446, 0, 1842, 0,
	1827, 0, 1829, 1862, 0, 1821, 1824, 0, 0, 2461,
	1876, 0, 400, 408, 409, 401, 402, 403, 404, 0,
	1521, 0, 0, 0, 0, 0, 2329, 0, 1882, 0,
	1888, 0, 0, 0, 0, 681, 0, 0, 0, 0,
	0, 1665, 459, 552, 229, 557, 560, 2385, 229, 566,
	569, 575, 258, 0, 741, -2, 786, 787, 789, 0,
	785, 891, 887, 183, 1535, 0, 0, 0, 1477, 0,
	1199, 0, 1194, 1195, 1479, 1483, 1489, 1492, 0, 188,
	2899, 200, 0, 2899, 0, 1260, 0, 0, 0, 0,
	0, 0, 1537, 0, 0, 2899, 229, 2899, 229, 204,
	206, 209, 0, 215, 211, 0, 1196, 0, 1248, 0,
	0, 1251, 136, 1535, 0, 0, 139, 143, 155, 0,
	0, 0, 165, 0, 0, 0, 1494, 1498, 1506, 0,
	0, 0, 1361, 1362, 1365, 1371, 96, 0, 0, 0,
	1502, 1504, 1510, 111, 114, 2899, 2430, 0, 116, 2899,
	0, 0, 0, 1476, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 141, 145, 156, 0, 1512, 138, 0,
	244, 0, 0, 234, 229, 2899, 0, 236, 0, 237,
	238, 252, 0, 0, 0, 646, 0, 0, 0, 651,
	0, 1176, 1177, 1432, 0, 1376, 1377, 0, 1388, 1382,
	0, 0, 0, 0, 0, 1514, 1515, 0, 0, 0,
	1533, 1530, 1845, 264, 0, 1845, 272, 0, 2393, 0,
	286, 423, 0, 0, 0, 0, 1215, 1314, 1217, 1219,
	1220, 1221, 231, 0, 2469, 1286, 2627, 2469, 0, 0,
	1183, 0, 0, 0, 497, 493, 0, 502, 505, 510,
	0, 509, 2422, 515, -2, 0, 0, 0, 0, -2,
	0, 0, 1448, 1442, 1443, 0, 0, 0, 0, 2899,
	1622, 1630, 0, 1726, 1741, 522, 1631, 1653, 0, 0,
	0, 1641, 1637, 1634, 1876, 0, 0, 0, 0, 0,
	1869, 1872, 592, 593, 328, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 306, 0, 309, 0, 0, 0,
	314, 315, 316, 317, 318, 319, 0, 0, 0, 0,
	308, 340, 296, 1845, 0, 308, 0, 0, 730, 0,
	0, 944, 351, 351, 351, 0, 973, 976, 985, 987,
	990, 1034, 1036, 1053, 0, 1064, 1092, 2417, 1093, 1238,
	0, 1238, 0, 0, 1113, 1689, 0, 1764, 1695, 1746,
	1747, 0, 1474, 0, 2010, 2055, 0, 0, -2, 0,
	0, 2059, 0, 0, 0, -2, 0, 0, 0, 2316,
	2318, 0, 2372, 2307, 2157, 0, 0, 0, 2161, 2145,
	2146, 0, 2267, 2333, 2362, 2366, 0, 1995, 1996, 1997,
	1998, 1999, 2000, 2001, 0, 2412, 2447, 2451, 2240, 2241,
	2245, 2426, 0, 0, 0, 2170, 0, 0, 0, 0,
	0, 0, 0, 0, 1976, 1980, 0, 0, 2334, 2345,
	2347, 2097, 2098, 2102, 2103, 2104, 2105, 2106, 2107, 2108,
	2109, 2110, 2111, -2, -2, -2, 2115, 2116, 2117, -2,
	-2, -2, 2122, 0, 0, 0, 2348, 2350, 2351, 2355,
	2356, 0, 2223, 2224, 2225, 2357, 0, 1728, 1722, 1783,
	0, 1874, 1787, 0, 1783, 1783, 1735, 1834, 0, 0,
	1858, 0, 1806, 0, 1807, 0, 0, 1839, 0, 1814,
	1817, 1818, 1828, 0, 1820, 0, 1823, 0, 2157, -2,
	352, 354, 356, 0, 359, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 672, 0, 1521, 1521,
	0, 674, 658, 0, 0, 1884, 0, 0, 1960, 1964,
	1988, 685, 687, 0, 0, 2850, 2791, 0, 684, 554,
	563, 260, 0, 1843, 0, 0, 0, 0, 0, 212,
	0, 0, 0, 0, 0, 0, 230, 0, 1295, 0,
	1258, 0, 0, 1285, 0, 0, 1301, 190, 191, 192,
	0, 0, 0, 0, 202, 0, 0, 198, 0, 208,
	214, 213, 0, 1245, 0, 0, 0, 0, 1482, 0,
	0, 0, 162, 163, 164, 0, 169, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 122,
	0, 0, 1612, 1613, 0, 1603, 159, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 1471, 254, 0,
	0, 0, 0, 0, 348, 343, 345, 0, 1375, 1435,
	1436, 1384, 1495, 1499, 1507, 0, 0, 0, 0, 0,
	699, 1532, 0, 272, 270, 0, 273, 0, 276, 277,
	0, 0, 272, 266, 0, 0, 0, 1334, 438, 1186,
	1302, 0, 0, 1304, 1222, 1226, 0, 2469, 2469, 0,
	2423, 0, 1184, 0, 0, 1303, 489, 0, 496, 0,
	508, 512, 0, 0, 1355, 0, 0, 1379, 1404, 1334,
	0, 1447, 1449, 0, 1457, 0, 0, 0, 1624, 1630,
	0, 1617, 1618, 1760, 1632, 1651, -2, 0, 0, 1741,
	1659, 1656, 1662, 1663, 0, 0, 0, 331, 0, 1643,
	1645, 0, 1157, 1160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 308, 1845, 298, 1845, 335, 0,
	938, 946, 948, 950, 968, 1044, 1062, 1094, 1237, 0,
	0, 1096, 0, 0, 1763, 1750, 1751, 1748, 1474, 2057,
	2061, 0, 0, 0, 2063, -2, 0, 2085, -2, -2,
	2319, 2371, 2136, 1741, 2158, 2160, 2147, 2365, 2005, 0,
	2247, 2244, 0, 2231, 0, 2182, 2183, 0, 0, 2186,
	2188, 2189, 2190, 1944, 1937, 1936, 2344, 0, 0, 0,
	0, 2222, 1723, 0, 2236, 0, 0, 1791, 2236, 2236,
	1835, 0, 1837, 1804, 1792, 0, 1801, 0, 2447, 1830,
	1822, 0, 0, 357, 0, 361, 362, 363, 364, 365,
	366, 0, 0, 0, 0, 0, 405, 0, 675, 676,
	0, 0, 1878, 1883, 0, 1889, 1959, 0, 0, 0,
	0, 0, 261, 0, 889, 890, 184, 185, 1200, 1198,
	1486, 1490, 1487, 0, 187, 0, 0, 1259, 0, 1262,
	0, 0, 0, 0, 1269, 1286, 0, 0, 0, 0,
	0, 0, 1288, 0, 1287, 0, 0, 1318, 0, 1462,
	1469, 0, -2, 0, 0, 0, 194, 220, 0, 0,
	0, 0, 223, 1536, 196, 0, 0, 229, 229, 1197,
	0, 0, 1478, 1480, 1493, 0, 0, 0, 0, 172,
	0, 0, 1496, 1500, 1508, 1503, 1505, 1511, 0, 0,
	117, 0, 0, 1614, 0, 158, 0, 0, 0, 1513,
	242, 243, 0, 229, 0, 229, 235, 229, 1471, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 1517, 263,
	0, 0, 0, 0, 0, 265, 341, 272, 425, 0,
	1247, 0, 1314, 1306, 1307, 1308, 0, 1218, 1313, 1315,
	0, 0, 1223, 0, 0, 0, 0, 1203, 1185, 0,
	1216, 1188, 0, 494, 513, 0, 516, 0, 519, 1174,
	1352, 1396, 1334, 1399, 0, 0, 1439, 0, 0, 0,
	0, 0, 0, 0, 1626, 1630, 0, 1619, 1620, 1653,
	1759, 0, 0, 0, 1640, 1760, 0, 350, 351, 0,
	351, 310, 0, 311, 312, 313, 320, 321, 322, 323,
	297, 300, 308, 732, 734, 0, 0, 740, 1236, 0,
	0, 0, 0, 1749, 2065, -2, -2, 2086, 0, 2448,
	2450, 1741, 0, 2233, 1743, 0, 0, -2, 0, 0,
	0, 1724, 1707, 0, 1782, 1774, 1776, 1778, 2777, 2544,
	2898, 1708, 1709, 1857, 0, 0, 1825, 358, 367, 368,
	0, 370, 371, 1520, 677, 0, 0, 1885, 0, 682,
	0, 0, 0, 879, 0, 0, 1488, 189, 0, 0,
	1263, 1264, 1266, 0, 1268, 1270, 1271, 1188, 0, 1275,
	0, 2471, 0, 1280, 1283, 1284, 0, 0, 1297, 1319,
	0, 1328, 0, 1464, 1474, 1468, 0, 1466, 1330, 0,
	193, 222, 195, 224, 219, 0, 1471, 0, 197, 207,
	0, 0, 140, 0, 0, 2538, 175, 173, 171, 115,
	121, 123, 1475, 161, 0, 142, 0, 244, 253, 1470,
	255, 239, 229, 0, 0, 1497, 1501, 1509, 0, 1524,
	1525, 1526, 1527, 0, 0, 0, 0, 274, 0, 275,
	278, 279, 0, 0, 1188, 1246, 1187, 1305, 0, 1316,
	1188, 0, 0, 0, 0, 0, 0, 1190, 0, 1189,
	0, 0, 495, 498, 0, 501, 0, 0, 0, 0,
	0, 1403, 0, 1450, 1448, 0, 1456, 0, 0, 0,
	1602, 0, 0, 1621, 1622, 520, 1646, 0, 0, 1653,
	1664, 330, 0, 333, 307, 299, 0, 736, 0, 738,
	0, 1095, 1097, 0, 0, 2159, 2251, 0, 0, 2184,
	2185, -2, 0, 2125, 2235, 2237, 0, 0, 0, 0,
	0, 1793, 1802, 369, 1521, 1879, 689, 686, 688, 0,
	1484, 0, 1491, 231, 1261, 1265, 0, 1272, 0, 0,
	0, 1276, 1338, 0, 0, 1355, 1355, 1289, 0, 0,
	1322, 1323, 1243, 0, 1324, 1325, 1326, 1463, 1752, 1469,
	1188, 0, 0, 221, 226, 0, 0, 0, 0, 0,
	0, 160, 0, 233, 256, 1471, 0, 0, 1528, 1529,
	0, 0, 271, 290, 0, 1397, 1190, 0, 1317, 1224,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1225,
	1330, 0, 0, 1294, 1201, 0, 1204, 0, 1186, 0,
	499, 500, 517, 0, 518, 0, 0, 1404, 0, 0,
	1457, 0, 0, 1609, 1601, 1630, 1623, 1624, 1876, 0,
	1654, 0, 735, 0, 0, 1105, 1106, 0, 0, 0,
	0, 2246, 1744, 2126, 0, 0, 1777, 1779, 1780, 1781,
	678, 0, 1485, 201, 0, 1332, 1274, 1343, 0, 0,
	0, 0, 0, 1290, 1320, 1321, 1318, 1242, 0, 1467,
	1465, 1299, 1332, 1334, 199, 0, 1330, 0, 1252, 0,
	0, 1255, 0, 0, 176, 2538, 174, 0, 229, 656,
	1521, 229, 0, 293, 0, 284, 282, 283, 1182, 0,
	1310, 1312, 1328, 1330, 1243, 0, 1205, 1247, 1203, 514,
	1398, 1402, 1400, 1440, 1330, 0, 1328, 0, 1616, 1630,
	1610, 1611, 0, 1626, 0, 0, 351, 737, 739, 2243,
	2263, 2252, -2, 2853, 2545, 0, 2263, 2263, 2238, 2239,
	0, 0, 1188, 0, 1277, 1339, 1340, 0, 1335, 1336,
	1337, 2470, 1278, 1279, 1281, 1282, 1876, 0, 1329, 1338,
	225, 1188, 1249, 0, 0, 1250, 0, 0, 179, 0,
	181, 257, 1519, 1522, 0, 280, 0, 0, 1179, 1181,
	1188, 0, 1243, 1328, 1188, 0, 0, 0, 1188, 1190,
	1328, 0, 1243, 0, 1605, 1615, 0, 1625, 1602, 0,
	1649, 0, 332, 2248, 0, 0, 2254, 2255, 2256, 2257,
	2258, 2249, 2250, 690, 1267, 1273, 0, 1341, 0, 1342,
	0, 0, 0, 1298, 1327, 1343, 205, 1253, 0, 1256,
	0, 177, 0, 0, 288, 289, 1309, 1311, 1188, 1243,
	1876, 1191, 0, 1193, 1190, 1202, 1243, 0, 1188, 0,
	1628, 1604, 1608, 2431, 1609, 1647, 0, 0, 0, 2260,
	2261, 0, 0, 0, 1344, 0, 1347, 1348, 0, 1345,
	1318, 0, 0, 229, 0, 1876, 1188, 1293, 1192, 1182,
	1188, 1330, 1876, 1328, 1598, 1630, 1616, 0, 1876, 2259,
	2262, 2253, 1331, 1346, 1349, 1350, 1300, 0, 0, 1523,
	291, 0, 1291, 1876, 1180, 1876, 1328, 1453, 1243, 0,
	1605, 1876, 1650, 1240, 0, 0, 1292, 1451, 1243, 1188,
	1627, 1599, 1648, 1254, 1239, 0, 292, 1188, 1876, 0,
	1876, 1454, 0, 1452, 1240, 1257,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 619, 3, 625, 620, 3,
	631, 632, 623, 621, 636, 622, 633, 624, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 639, 3,
	611, 613, 612, 616, 635, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 629, 3, 630, 626, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 637, 618, 638, 614,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 615, 57954, 617,
	57955, 627, 57956, 628, 57957, 634, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1562
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1567
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1569
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1572
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1573
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1574
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1575
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1576
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1578
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1579
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1580
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1581
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1582
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1588
		{
			return helpWith(sqllex, "MOVE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1591
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1600
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1601
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1606
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1607
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1608
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1609
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1610
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1611
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1612
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1614
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1615
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1616
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1617
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1678
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1704
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1737
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1745
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1780
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1784
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1791
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1803
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1813
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1820
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1847
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1863
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1872
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1921
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1953
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1957
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1961
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1971
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1977
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1986
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1997
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2007
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2015
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2029
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2041
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2051
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2056
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2062
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2074
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2095
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2157
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2162
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2166
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2177
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2185
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2196
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2206
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2216
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2225
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2236
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2242
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2268
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2273
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2288
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2320
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2330
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2364
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2408
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2418
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2421
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2427
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2479
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2486
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2492
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2500
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2514
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = true
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = false
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = nil
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2571
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2581
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2674
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2678
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2681
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2699
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2733
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2765
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2862
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2866
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2870
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2878
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2886
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2893
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2897
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2922
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3004
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3015
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3024
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3040
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = nil
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3117
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3164
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3181
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3214
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3221
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3225
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3238
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3242
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3294
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3298
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3302
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3329
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3338
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3344
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3349
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3354
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3358
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3386
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3432
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3436
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3450
		{
			sqlVAL.union.val = nil
		}
	case 352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3462
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3476
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3482
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3486
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3516
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3532
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "header")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3540
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3544
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3548
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3552
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3556
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3564
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3565
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3566
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3567
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3568
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3592
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3595
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3628
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3631
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3641
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3658
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3667
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3678
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3686
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3690
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3694
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3712
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3715
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3716
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3720
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3725
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3737
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3739
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3740
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3744
		{
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3745
		{
			return helpWith(sqllex, "CREATE")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3759
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3762
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3765
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3768
		{
			return unimplemented(sqllex, "create access method")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3770
		{
			return unimplemented(sqllex, "create cast")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3771
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3772
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3773
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3774
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3775
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3776
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3777
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3778
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3779
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3780
		{
			return unimplemented(sqllex, "create publication")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3781
		{
			return unimplemented(sqllex, "create rule")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3782
		{
			return unimplemented(sqllex, "create server")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3783
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3784
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3785
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3786
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3789
		{
		}
	case 448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3790
		{
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3793
		{
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3794
		{
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3797
		{
		}
	case 452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3798
		{
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3801
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3802
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3803
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3804
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3805
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3806
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3807
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3808
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3809
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3810
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3811
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3812
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3813
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3814
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3815
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3816
		{
			return unimplemented(sqllex, "drop server")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3817
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3818
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3819
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3824
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3826
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3828
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3829
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3830
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3831
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3849
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3863
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3867
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3876
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3883
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3889
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3910
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3945
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3971
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3978
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[4].str),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3986
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4001
		{

			sqlVAL.union.val = nil
		}
	case 512:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4018
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4037
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4044
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4048
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4061
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4084
		{
			return helpWith(sqllex, "DELETE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4087
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4088
		{
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4096
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4099
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4100
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4101
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4102
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4103
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4112
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4113
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4114
		{
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4115
		{
			return helpWith(sqllex, "DROP")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4120
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4121
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4123
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4149
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4157
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4172
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4184
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4187
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4195
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4204
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4235
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4242
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4250
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4257
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4280
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4295
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4303
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4310
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4314
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4319
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4332
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4337
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4339
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4344
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4380
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4388
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4396
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4404
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4412
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4431
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4434
		{
			return helpWith(sqllex, "DELETE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4436
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4437
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "INSERT")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4441
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4443
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4451
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4452
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4453
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4458
		{
			return helpWith(sqllex, "DELETE")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4459
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4460
		{
			return helpWith(sqllex, "INSERT")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4462
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4466
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4467
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4485
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4491
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4559
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4581
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4602
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4610
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 661:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4628
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4635
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4643
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4647
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4661
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4676
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4726
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4730
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4742
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4745
		{
			return helpWith(sqllex, "GRANT")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4768
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4788
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4826
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4838
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4851
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			return helpWith(sqllex, "RESET")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "RESET")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4907
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "USE")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4928
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4929
		{
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4930
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4934
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4935
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4936
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4937
		{
			return helpWith(sqllex, "USE")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4953
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4971
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4989
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4997
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5011
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5021
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5025
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5029
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5033
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5037
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5051
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5061
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5069
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5076
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5077
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5091
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5110
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5115
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5132
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5137
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5154
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5157
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5162
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5166
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5185
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5189
		{
			return unimplemented(sqllex, "set from current")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5193
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5198
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5207
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5212
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5216
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5228
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5233
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5292
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5296
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5308
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = tree.Low
		}
	case 792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5318
		{
			sqlVAL.union.val = tree.Normal
		}
	case 793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = tree.High
		}
	case 794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5333
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5337
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5346
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5350
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5365
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5366
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5367
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5368
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5369
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5370
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5371
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5372
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5373
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5375
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5376
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5377
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5378
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5379
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5381
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5382
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5383
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5385
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5387
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5388
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5389
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5390
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5391
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5392
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5393
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5394
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5395
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5396
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5397
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5398
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5399
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5400
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5401
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5402
		{
			return helpWith(sqllex, "SHOW")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5405
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5414
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5420
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5425
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5445
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = true
		}
	case 882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = false
		}
	case 883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5463
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5467
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5477
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = true
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = false
		}
	case 891:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = false
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5510
		{
			return helpWith(sqllex, "FETCH")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5518
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5523
		{
			return helpWith(sqllex, "MOVE")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5527
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5534
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5555
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5562
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5582
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = int64(1)
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = int64(-1)
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = int64(1)
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = int64(1)
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = int64(-1)
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5617
		{
		}
	case 913:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5618
		{
		}
	case 914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5621
		{
		}
	case 915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5622
		{
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5626
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5631
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5636
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5641
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5646
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5658
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.str = "client_encoding"
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.str = "timezone"
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5680
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5708
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5712
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5723
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5731
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5745
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5762
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5771
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				InCollection:         sqlDollar[6].union.expr(),
				Options:              sqlDollar[7].union.kvOptions(),
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5781
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5790
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupRangeDetails,
				Path:         sqlDollar[4].union.expr(),
				InCollection: sqlDollar[6].union.expr(),
				Options:      sqlDollar[7].union.kvOptions(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5800
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5809
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupFileDetails,
				Path:         sqlDollar[4].union.expr(),
				InCollection: sqlDollar[6].union.expr(),
				Options:      sqlDollar[7].union.kvOptions(),
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5818
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5828
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5835
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5840
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5849
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5855
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5869
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5877
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5880
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5888
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5892
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5896
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5903
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5911
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5914
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5925
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5930
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5937
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5941
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5951
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5960
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5967
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5970
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5983
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5991
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5999
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6002
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6008
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6012
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6015
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6021
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6024
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6032
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6035
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6040
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6051
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6056
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = true
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = true
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = false
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6081
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6089
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6092
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6093
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6094
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6100
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6111
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6129
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6137
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6138
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6148
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6154
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6156
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6162
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6170
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6174
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6203
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6206
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6211
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6213
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6217
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = true
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = false
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6229
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6232
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6237
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6265
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6268
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6278
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6280
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6283
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6286
		{
			sqlVAL.union.val = true
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = false
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6294
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6298
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6301
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6315
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6322
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6326
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6330
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6340
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6351
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6365
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6373
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6378
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6383
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6387
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6401
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6417
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6422
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6427
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6432
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6448
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6461
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6466
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6477
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6485
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6488
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6502
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6506
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6514
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6535
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6540
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6545
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6549
		{
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6558
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6572
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6581
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6586
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6593
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6640
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6652
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6662
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6669
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6675
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6804
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6808
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6847
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6851
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6862
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true, TenantID: roachpb.MakeTenantID(tenID)}}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6870
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6888
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6896
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6920
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6921
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6922
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6923
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6933
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6934
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6935
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6936
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6944
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6947
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6966
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6975
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6988
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7020
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7028
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7039
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7054
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7061
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7075
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7095
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7103
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7139
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7154
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7171
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7175
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7182
		{

			sqlVAL.union.val = nil
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7188
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.str = ""
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7198
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = nil
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7208
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7213
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7217
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7221
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7225
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7235
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7255
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7261
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7274
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7288
		{
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7289
		{
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7290
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7314
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7316
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7345
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7371
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7382
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7385
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7388
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7389
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.str = ""
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7409
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7477
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7507
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7527
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7542
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7630
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7634
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7644
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7648
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7669
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7679
		{

			sqlVAL.union.val = true
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7684
		{
			sqlVAL.union.val = false
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7689
		{
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7693
		{
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7696
		{
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7700
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7739
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7762
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7769
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7793
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7804
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7821
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7831
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7846
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7853
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7881
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7891
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7914
		{
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7915
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7916
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7917
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7918
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7919
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7937
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7963
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7997
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8001
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8014
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8018
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8086
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8095
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8103
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8114
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8127
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8137
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8139
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8141
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8143
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8146
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8149
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8151
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8164
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8168
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8174
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8178
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8195
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8218
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8229
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.str = ""
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8243
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8251
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = true
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8263
		{

			sqlVAL.union.val = true
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = false
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8278
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8292
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8304
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8316
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8326
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8336
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8340
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = true
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = true
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = nil
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8483
		{
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8484
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8501
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8509
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8511
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8513
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8515
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8517
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8519
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8554
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8571
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8589
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8605
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8621
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8625
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = false
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = true
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = false
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = true
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = false
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8679
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8685
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8691
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8699
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8724
		{
			sqlVAL.str = ""
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.str = ""
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8732
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8758
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8764
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8804
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8817
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8842
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8848
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8989
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8995
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9007
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9013
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9027
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9033
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9041
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9045
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9092
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = true
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = false
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9117
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = tree.Types
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9152
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9156
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9180
		{
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9181
		{
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9184
		{
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9185
		{
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9196
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9214
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9223
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9244
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9252
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9273
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9281
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9292
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9296
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9297
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9298
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9317
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9322
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9335
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9340
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9344
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9349
		{
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9350
		{
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9351
		{
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9368
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9371
		{
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9372
		{
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9400
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9413
		{
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9415
		{
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9419
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9448
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9464
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9468
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9509
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.str = ""
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9519
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9532
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9537
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9554
		{

		}
	case 1612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9569
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.str = ""
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.str = ""
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.str = ""
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.str = ""
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9624
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9632
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9649
		{
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9650
		{
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9672
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9679
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9697
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9701
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9710
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9759
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9804
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9842
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9874
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9895
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9910
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9957
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10054
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10089
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10090
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10091
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10152
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10165
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10196
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10212
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = true
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = false
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10265
		{
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10266
		{
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = nil
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10279
		{
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10280
		{
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = true
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = false
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = false
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = true
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10309
		{
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10310
		{
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10313
		{
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10314
		{
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10355
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10367
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10372
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10392
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10398
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10431
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10486
		{
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10487
		{
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10490
		{
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10491
		{
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10525
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10526
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10527
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10557
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10559
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10574
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10596
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10601
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10606
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10627
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10643
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10655
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10674
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10716
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10726
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10757
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10761
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10772
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10802
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10835
		{
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10837
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10840
		{
			sqlVAL.union.val = nil
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = true
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10860
		{
			sqlVAL.union.val = false
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.str = tree.AstFull
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.str = tree.AstRight
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10948
		{
			sqlVAL.str = tree.AstInner
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10954
		{
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10955
		{
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.str = tree.AstHash
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.str = ""
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11017
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11024
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11029
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11047
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11053
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11059
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11069
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = true
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = false
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = true
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = false
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11106
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11118
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11131
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11139
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11140
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11150
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11158
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11160
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11168
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11181
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11188
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11197
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11237
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11249
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11250
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11271
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11275
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11279
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11283
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11287
		{
			sqlVAL.union.val = types.Geography
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11299
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11307
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11333
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11341
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = nil
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = types.Int2
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = types.Int
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = types.Float4
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11376
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = types.Float
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11384
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11392
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11400
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.union.val = types.Bool
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11414
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11427
		{
			sqlVAL.union.val = types.Float
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11433
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11439
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11447
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11451
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11455
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11461
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11473
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11483
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11487
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11491
		{
			sqlVAL.union.val = types.String
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = true
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11501
		{
			sqlVAL.union.val = false
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.union.val = types.Date
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11510
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11518
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11530
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11532
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11541
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11549
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11566
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11576
		{
			sqlVAL.union.val = true
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = false
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = false
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11582
		{
			sqlVAL.union.val = types.Interval
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11586
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11590
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11601
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11609
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11625
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11656
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11665
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11674
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11680
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11689
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11695
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = nil
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11719
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11779
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11800
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11828
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11852
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11860
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11892
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11896
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11916
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11920
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11924
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11928
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11936
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11962
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11966
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11970
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11974
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11978
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11982
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11994
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12006
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12010
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12014
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12018
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12026
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12046
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12057
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12079
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12115
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12119
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12123
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12140
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12145
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12181
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12197
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12237
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12241
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12249
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12253
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12261
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12271
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12275
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12279
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12297
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12305
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12357
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12362
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12364
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12372
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12376
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12388
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12397
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12404
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12408
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12412
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12422
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12427
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12431
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12435
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12443
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12446
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12457
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12458
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12473
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12482
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12535
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12548
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12560
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12569
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12570
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12583
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12589
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12593
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12597
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12601
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12605
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12609
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12615
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12619
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12627
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12631
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12635
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12639
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12643
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12647
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12651
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12655
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12659
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12663
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12670
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12673
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12675
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12678
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12680
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12684
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12687
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12693
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12696
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12698
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12702
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12705
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12707
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12711
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12714
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12719
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12721
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12724
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12726
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12729
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12731
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12734
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12736
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12739
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12741
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12745
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12748
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12749
		{
			return unimplemented(sqllex, "treat")
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12751
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12755
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12759
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12763
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12767
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12770
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12772
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12775
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12781
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12785
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12791
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12795
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12802
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12806
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12812
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12816
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12822
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12830
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12834
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12838
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12845
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12865
		{
			sqlVAL.str = ""
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12871
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12875
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12881
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12889
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12897
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12905
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12911
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12924
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12952
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12956
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12960
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12964
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12971
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12980
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12984
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12988
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12992
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12997
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13010
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13014
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13021
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13033
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13037
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13041
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13057
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13058
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13059
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13060
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13061
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13062
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13063
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13064
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13065
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13066
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13067
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13068
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13070
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13071
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13072
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13073
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13074
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13075
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13076
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13077
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13078
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13079
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13080
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13081
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13082
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13083
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13084
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13085
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13086
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13087
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13088
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13089
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13090
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13091
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13092
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13097
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13113
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13120
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13121
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13122
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13123
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13146
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13150
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13156
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13160
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13164
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13175
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13179
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13185
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13189
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13196
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13202
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13206
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13212
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13216
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13222
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13226
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13232
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13236
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13242
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13246
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13269
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13273
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13277
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13283
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13290
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13294
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13311
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13315
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13319
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13323
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13327
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13333
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13339
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13345
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13349
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13353
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13359
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13371
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13378
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13382
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13388
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13394
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13398
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13405
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13411
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13415
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13422
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13428
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13432
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13437
		{
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13438
		{
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13442
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13446
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13452
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13461
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13465
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13469
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13477
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13481
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13487
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13491
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13510
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13518
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13541
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13550
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13554
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13558
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13562
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13568
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13572
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13587
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13591
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13603
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13607
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13616
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13627
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13636
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13644
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13661
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13746
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13754
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13758
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13764
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13768
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13776
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13803
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13810
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13814
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13818
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13832
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13836
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13840
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13853
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13862
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13880
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13893
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13900
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13925
		{
			sqlVAL.str = ""
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13931
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13935
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
