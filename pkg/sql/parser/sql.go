// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:72

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}

//line sql-gen.y:658
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:10775

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 29,
	-2, 1181,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 67,
	419, 183,
	-2, 0,
	-1, 76,
	200, 1005,
	212, 1005,
	227, 284,
	321, 284,
	330, 803,
	359, 284,
	368, 803,
	405, 803,
	429, 284,
	454, 803,
	-2, 0,
	-1, 81,
	227, 288,
	-2, 0,
	-1, 82,
	118, 1181,
	206, 1181,
	439, 1181,
	440, 1181,
	-2, 0,
	-1, 94,
	132, 1152,
	149, 1152,
	162, 1152,
	209, 1152,
	239, 1152,
	281, 1152,
	291, 1152,
	434, 1152,
	-2, 1123,
	-1, 126,
	139, 712,
	226, 712,
	324, 692,
	373, 692,
	422, 712,
	-2, 0,
	-1, 127,
	4, 1183,
	21, 1183,
	22, 1183,
	23, 1183,
	24, 1183,
	25, 1183,
	26, 1183,
	28, 1183,
	29, 1183,
	35, 1183,
	40, 1183,
	41, 1183,
	42, 1183,
	43, 1183,
	44, 1183,
	45, 1183,
	46, 1183,
	47, 1183,
	48, 1183,
	50, 1183,
	51, 1183,
	52, 1183,
	54, 1183,
	55, 1183,
	56, 1183,
	57, 1183,
	58, 1183,
	62, 1183,
	63, 1183,
	64, 1183,
	65, 1183,
	67, 1183,
	68, 1183,
	69, 1183,
	73, 1183,
	74, 1183,
	75, 1183,
	76, 1183,
	77, 1183,
	78, 1183,
	79, 1183,
	82, 1183,
	83, 1183,
	84, 1183,
	85, 1183,
	87, 1183,
	89, 1183,
	90, 1183,
	91, 1183,
	93, 1183,
	95, 1183,
	96, 1183,
	104, 1183,
	105, 1183,
	106, 1183,
	107, 1183,
	109, 1183,
	110, 1183,
	111, 1183,
	113, 1183,
	114, 1183,
	115, 1183,
	117, 1183,
	118, 1183,
	120, 1183,
	123, 1183,
	124, 1183,
	125, 1183,
	127, 1183,
	128, 1183,
	130, 1183,
	131, 1183,
	133, 1183,
	134, 1183,
	135, 1183,
	136, 1183,
	137, 1183,
	138, 1183,
	139, 1183,
	140, 1183,
	141, 1183,
	142, 1183,
	143, 1183,
	144, 1183,
	145, 1183,
	146, 1183,
	148, 1183,
	154, 1183,
	155, 1183,
	156, 1183,
	157, 1183,
	161, 1183,
	163, 1183,
	167, 1183,
	168, 1183,
	169, 1183,
	170, 1183,
	171, 1183,
	172, 1183,
	174, 1183,
	175, 1183,
	177, 1183,
	178, 1183,
	180, 1183,
	181, 1183,
	182, 1183,
	183, 1183,
	184, 1183,
	185, 1183,
	186, 1183,
	187, 1183,
	188, 1183,
	190, 1183,
	191, 1183,
	193, 1183,
	194, 1183,
	195, 1183,
	196, 1183,
	200, 1183,
	201, 1183,
	202, 1183,
	203, 1183,
	206, 1183,
	207, 1183,
	208, 1183,
	210, 1183,
	212, 1183,
	214, 1183,
	216, 1183,
	217, 1183,
	218, 1183,
	220, 1183,
	224, 1183,
	225, 1183,
	226, 1183,
	227, 1183,
	228, 1183,
	230, 1183,
	231, 1183,
	233, 1183,
	234, 1183,
	236, 1183,
	237, 1183,
	240, 1183,
	241, 1183,
	242, 1183,
	245, 1183,
	246, 1183,
	247, 1183,
	248, 1183,
	250, 1183,
	251, 1183,
	252, 1183,
	253, 1183,
	254, 1183,
	255, 1183,
	256, 1183,
	257, 1183,
	258, 1183,
	259, 1183,
	260, 1183,
	262, 1183,
	264, 1183,
	265, 1183,
	266, 1183,
	267, 1183,
	268, 1183,
	270, 1183,
	272, 1183,
	274, 1183,
	276, 1183,
	277, 1183,
	278, 1183,
	279, 1183,
	280, 1183,
	283, 1183,
	286, 1183,
	287, 1183,
	288, 1183,
	289, 1183,
	292, 1183,
	293, 1183,
	294, 1183,
	296, 1183,
	298, 1183,
	299, 1183,
	300, 1183,
	301, 1183,
	302, 1183,
	303, 1183,
	304, 1183,
	305, 1183,
	306, 1183,
	307, 1183,
	308, 1183,
	310, 1183,
	311, 1183,
	312, 1183,
	313, 1183,
	314, 1183,
	315, 1183,
	316, 1183,
	317, 1183,
	318, 1183,
	320, 1183,
	322, 1183,
	323, 1183,
	324, 1183,
	325, 1183,
	326, 1183,
	327, 1183,
	328, 1183,
	329, 1183,
	330, 1183,
	331, 1183,
	338, 1183,
	340, 1183,
	341, 1183,
	342, 1183,
	343, 1183,
	344, 1183,
	345, 1183,
	346, 1183,
	347, 1183,
	349, 1183,
	350, 1183,
	352, 1183,
	353, 1183,
	354, 1183,
	355, 1183,
	356, 1183,
	357, 1183,
	359, 1183,
	360, 1183,
	361, 1183,
	362, 1183,
	363, 1183,
	364, 1183,
	365, 1183,
	366, 1183,
	368, 1183,
	369, 1183,
	370, 1183,
	371, 1183,
	372, 1183,
	373, 1183,
	375, 1183,
	376, 1183,
	377, 1183,
	378, 1183,
	379, 1183,
	381, 1183,
	382, 1183,
	383, 1183,
	385, 1183,
	387, 1183,
	388, 1183,
	389, 1183,
	390, 1183,
	391, 1183,
	392, 1183,
	393, 1183,
	394, 1183,
	395, 1183,
	396, 1183,
	397, 1183,
	398, 1183,
	399, 1183,
	401, 1183,
	402, 1183,
	404, 1183,
	406, 1183,
	407, 1183,
	408, 1183,
	409, 1183,
	410, 1183,
	411, 1183,
	412, 1183,
	414, 1183,
	415, 1183,
	416, 1183,
	417, 1183,
	418, 1183,
	420, 1183,
	422, 1183,
	423, 1183,
	424, 1183,
	425, 1183,
	426, 1183,
	428, 1183,
	429, 1183,
	430, 1183,
	432, 1183,
	433, 1183,
	436, 1183,
	437, 1183,
	438, 1183,
	439, 1183,
	440, 1183,
	441, 1183,
	442, 1183,
	444, 1183,
	447, 1183,
	448, 1183,
	449, 1183,
	450, 1183,
	451, 1183,
	452, 1183,
	454, 1183,
	455, 1183,
	456, 1183,
	461, 1183,
	462, 1183,
	463, 1183,
	464, 1183,
	465, 1183,
	466, 1183,
	-2, 0,
	-1, 128,
	1, 1057,
	216, 1057,
	320, 1057,
	328, 1057,
	469, 1057,
	493, 1057,
	-2, 0,
	-1, 130,
	1, 1057,
	493, 1057,
	-2, 0,
	-1, 131,
	1, 1057,
	493, 1057,
	-2, 0,
	-1, 132,
	1, 1057,
	419, 1057,
	493, 1057,
	-2, 0,
	-1, 159,
	132, 1151,
	149, 1151,
	162, 1151,
	209, 1151,
	239, 1151,
	281, 1151,
	291, 1151,
	434, 1151,
	-2, 1126,
	-1, 192,
	4, 1190,
	5, 1190,
	6, 1190,
	7, 1190,
	8, 1190,
	9, 1190,
	10, 1190,
	21, 1190,
	22, 1190,
	23, 1190,
	24, 1190,
	25, 1190,
	26, 1190,
	28, 1190,
	29, 1190,
	35, 1190,
	36, 1190,
	40, 1190,
	41, 1190,
	42, 1190,
	43, 1190,
	44, 1190,
	45, 1190,
	46, 1190,
	47, 1190,
	48, 1190,
	50, 1190,
	51, 1190,
	52, 1190,
	54, 1190,
	55, 1190,
	56, 1190,
	57, 1190,
	58, 1190,
	59, 1190,
	60, 1190,
	61, 1190,
	62, 1190,
	63, 1190,
	64, 1190,
	65, 1190,
	67, 1190,
	68, 1190,
	69, 1190,
	71, 1190,
	73, 1190,
	74, 1190,
	75, 1190,
	76, 1190,
	77, 1190,
	78, 1190,
	79, 1190,
	82, 1190,
	83, 1190,
	84, 1190,
	85, 1190,
	87, 1190,
	89, 1190,
	90, 1190,
	91, 1190,
	93, 1190,
	94, 1190,
	95, 1190,
	96, 1190,
	97, 1190,
	98, 1190,
	99, 1190,
	100, 1190,
	101, 1190,
	102, 1190,
	103, 1190,
	104, 1190,
	105, 1190,
	106, 1190,
	107, 1190,
	108, 1190,
	109, 1190,
	110, 1190,
	111, 1190,
	112, 1190,
	113, 1190,
	114, 1190,
	115, 1190,
	117, 1190,
	118, 1190,
	120, 1190,
	123, 1190,
	124, 1190,
	125, 1190,
	127, 1190,
	128, 1190,
	130, 1190,
	131, 1190,
	133, 1190,
	134, 1190,
	135, 1190,
	136, 1190,
	137, 1190,
	138, 1190,
	139, 1190,
	140, 1190,
	141, 1190,
	142, 1190,
	143, 1190,
	144, 1190,
	145, 1190,
	146, 1190,
	147, 1190,
	148, 1190,
	154, 1190,
	155, 1190,
	156, 1190,
	157, 1190,
	161, 1190,
	163, 1190,
	166, 1190,
	167, 1190,
	168, 1190,
	169, 1190,
	170, 1190,
	171, 1190,
	172, 1190,
	174, 1190,
	175, 1190,
	177, 1190,
	178, 1190,
	180, 1190,
	181, 1190,
	182, 1190,
	183, 1190,
	184, 1190,
	185, 1190,
	186, 1190,
	187, 1190,
	188, 1190,
	189, 1190,
	190, 1190,
	191, 1190,
	193, 1190,
	194, 1190,
	195, 1190,
	196, 1190,
	200, 1190,
	201, 1190,
	202, 1190,
	203, 1190,
	205, 1190,
	206, 1190,
	207, 1190,
	208, 1190,
	210, 1190,
	212, 1190,
	213, 1190,
	214, 1190,
	215, 1190,
	216, 1190,
	217, 1190,
	218, 1190,
	219, 1190,
	220, 1190,
	224, 1190,
	225, 1190,
	226, 1190,
	227, 1190,
	228, 1190,
	230, 1190,
	231, 1190,
	233, 1190,
	234, 1190,
	235, 1190,
	236, 1190,
	237, 1190,
	238, 1190,
	240, 1190,
	241, 1190,
	242, 1190,
	243, 1190,
	244, 1190,
	245, 1190,
	246, 1190,
	247, 1190,
	248, 1190,
	250, 1190,
	251, 1190,
	252, 1190,
	253, 1190,
	254, 1190,
	255, 1190,
	256, 1190,
	257, 1190,
	258, 1190,
	259, 1190,
	260, 1190,
	262, 1190,
	263, 1190,
	264, 1190,
	265, 1190,
	266, 1190,
	267, 1190,
	268, 1190,
	269, 1190,
	270, 1190,
	271, 1190,
	272, 1190,
	273, 1190,
	274, 1190,
	275, 1190,
	276, 1190,
	277, 1190,
	278, 1190,
	279, 1190,
	280, 1190,
	283, 1190,
	287, 1190,
	288, 1190,
	289, 1190,
	292, 1190,
	293, 1190,
	294, 1190,
	295, 1190,
	296, 1190,
	297, 1190,
	298, 1190,
	299, 1190,
	300, 1190,
	301, 1190,
	302, 1190,
	303, 1190,
	304, 1190,
	305, 1190,
	306, 1190,
	307, 1190,
	308, 1190,
	310, 1190,
	311, 1190,
	312, 1190,
	313, 1190,
	314, 1190,
	315, 1190,
	316, 1190,
	317, 1190,
	318, 1190,
	320, 1190,
	322, 1190,
	323, 1190,
	324, 1190,
	325, 1190,
	326, 1190,
	327, 1190,
	328, 1190,
	329, 1190,
	330, 1190,
	331, 1190,
	338, 1190,
	340, 1190,
	341, 1190,
	342, 1190,
	343, 1190,
	344, 1190,
	345, 1190,
	346, 1190,
	347, 1190,
	349, 1190,
	350, 1190,
	351, 1190,
	352, 1190,
	353, 1190,
	354, 1190,
	355, 1190,
	356, 1190,
	357, 1190,
	359, 1190,
	360, 1190,
	361, 1190,
	362, 1190,
	363, 1190,
	364, 1190,
	365, 1190,
	366, 1190,
	368, 1190,
	369, 1190,
	370, 1190,
	371, 1190,
	372, 1190,
	373, 1190,
	374, 1190,
	375, 1190,
	376, 1190,
	377, 1190,
	378, 1190,
	379, 1190,
	380, 1190,
	381, 1190,
	382, 1190,
	383, 1190,
	385, 1190,
	387, 1190,
	388, 1190,
	389, 1190,
	390, 1190,
	391, 1190,
	392, 1190,
	393, 1190,
	394, 1190,
	395, 1190,
	396, 1190,
	397, 1190,
	398, 1190,
	399, 1190,
	401, 1190,
	402, 1190,
	403, 1190,
	404, 1190,
	406, 1190,
	407, 1190,
	408, 1190,
	409, 1190,
	410, 1190,
	411, 1190,
	412, 1190,
	414, 1190,
	415, 1190,
	416, 1190,
	417, 1190,
	418, 1190,
	420, 1190,
	422, 1190,
	423, 1190,
	424, 1190,
	425, 1190,
	426, 1190,
	427, 1190,
	428, 1190,
	429, 1190,
	430, 1190,
	432, 1190,
	433, 1190,
	435, 1190,
	436, 1190,
	437, 1190,
	438, 1190,
	439, 1190,
	440, 1190,
	441, 1190,
	442, 1190,
	443, 1190,
	444, 1190,
	447, 1190,
	448, 1190,
	449, 1190,
	450, 1190,
	451, 1190,
	452, 1190,
	454, 1190,
	455, 1190,
	456, 1190,
	461, 1190,
	462, 1190,
	463, 1190,
	464, 1190,
	465, 1190,
	466, 1190,
	467, 1190,
	474, 1190,
	481, 1190,
	482, 1190,
	483, 1190,
	490, 1190,
	494, 1190,
	-2, 0,
	-1, 583,
	165, 1896,
	419, 1896,
	473, 1896,
	492, 1896,
	-2, 0,
	-1, 584,
	165, 1976,
	419, 1976,
	473, 1976,
	492, 1976,
	-2, 0,
	-1, 585,
	165, 1884,
	419, 1884,
	473, 1884,
	492, 1884,
	-2, 0,
	-1, 587,
	165, 2067,
	419, 2067,
	473, 2067,
	492, 2067,
	-2, 0,
	-1, 589,
	165, 2096,
	419, 2096,
	473, 2096,
	492, 2096,
	-2, 0,
	-1, 596,
	165, 1991,
	419, 1991,
	473, 1991,
	492, 1991,
	-2, 550,
	-1, 625,
	492, 1837,
	495, 1837,
	-2, 765,
	-1, 626,
	492, 1839,
	495, 1839,
	-2, 766,
	-1, 627,
	492, 1838,
	495, 1838,
	-2, 767,
	-1, 628,
	495, 1772,
	-2, 768,
	-1, 670,
	454, 982,
	-2, 804,
	-1, 708,
	4, 1003,
	21, 1003,
	22, 1003,
	23, 1003,
	24, 1003,
	25, 1003,
	26, 1003,
	28, 1003,
	29, 1003,
	35, 1003,
	40, 1003,
	41, 1003,
	42, 1003,
	43, 1003,
	44, 1003,
	45, 1003,
	46, 1003,
	47, 1003,
	48, 1003,
	50, 1003,
	51, 1003,
	52, 1003,
	54, 1003,
	55, 1003,
	56, 1003,
	57, 1003,
	58, 1003,
	62, 1003,
	63, 1003,
	64, 1003,
	65, 1003,
	67, 1003,
	68, 1003,
	69, 1003,
	73, 1003,
	74, 1003,
	75, 1003,
	76, 1003,
	77, 1003,
	78, 1003,
	79, 1003,
	82, 1003,
	83, 1003,
	84, 1003,
	85, 1003,
	87, 1003,
	89, 1003,
	90, 1003,
	91, 1003,
	93, 1003,
	95, 1003,
	96, 1003,
	104, 1003,
	105, 1003,
	106, 1003,
	107, 1003,
	109, 1003,
	110, 1003,
	111, 1003,
	113, 1003,
	114, 1003,
	115, 1003,
	117, 1003,
	118, 1003,
	120, 1003,
	123, 1003,
	124, 1003,
	125, 1003,
	127, 1003,
	128, 1003,
	130, 1003,
	131, 1003,
	133, 1003,
	134, 1003,
	135, 1003,
	136, 1003,
	137, 1003,
	138, 1003,
	139, 1003,
	140, 1003,
	141, 1003,
	142, 1003,
	143, 1003,
	144, 1003,
	145, 1003,
	146, 1003,
	148, 1003,
	154, 1003,
	155, 1003,
	156, 1003,
	157, 1003,
	161, 1003,
	163, 1003,
	167, 1003,
	168, 1003,
	169, 1003,
	170, 1003,
	171, 1003,
	172, 1003,
	174, 1003,
	175, 1003,
	177, 1003,
	178, 1003,
	180, 1003,
	181, 1003,
	182, 1003,
	183, 1003,
	184, 1003,
	185, 1003,
	186, 1003,
	187, 1003,
	188, 1003,
	190, 1003,
	191, 1003,
	193, 1003,
	194, 1003,
	195, 1003,
	196, 1003,
	200, 1003,
	201, 1003,
	202, 1003,
	203, 1003,
	206, 1003,
	207, 1003,
	208, 1003,
	210, 1003,
	212, 1003,
	214, 1003,
	216, 1003,
	217, 1003,
	218, 1003,
	220, 1003,
	224, 1003,
	225, 1003,
	226, 1003,
	227, 1003,
	228, 1003,
	230, 1003,
	231, 1003,
	233, 1003,
	234, 1003,
	236, 1003,
	237, 1003,
	240, 1003,
	241, 1003,
	242, 1003,
	245, 1003,
	246, 1003,
	247, 1003,
	248, 1003,
	250, 1003,
	251, 1003,
	252, 1003,
	253, 1003,
	254, 1003,
	255, 1003,
	256, 1003,
	257, 1003,
	258, 1003,
	259, 1003,
	260, 1003,
	262, 1003,
	264, 1003,
	265, 1003,
	266, 1003,
	267, 1003,
	268, 1003,
	270, 1003,
	272, 1003,
	274, 1003,
	276, 1003,
	277, 1003,
	278, 1003,
	279, 1003,
	280, 1003,
	283, 1003,
	287, 1003,
	288, 1003,
	289, 1003,
	292, 1003,
	293, 1003,
	294, 1003,
	296, 1003,
	298, 1003,
	299, 1003,
	300, 1003,
	301, 1003,
	302, 1003,
	303, 1003,
	304, 1003,
	305, 1003,
	306, 1003,
	307, 1003,
	308, 1003,
	310, 1003,
	311, 1003,
	312, 1003,
	313, 1003,
	314, 1003,
	315, 1003,
	316, 1003,
	317, 1003,
	318, 1003,
	320, 1003,
	322, 1003,
	323, 1003,
	324, 1003,
	325, 1003,
	326, 1003,
	327, 1003,
	328, 1003,
	329, 1003,
	330, 1003,
	331, 1003,
	338, 1003,
	340, 1003,
	341, 1003,
	342, 1003,
	343, 1003,
	344, 1003,
	345, 1003,
	346, 1003,
	347, 1003,
	349, 1003,
	350, 1003,
	352, 1003,
	353, 1003,
	354, 1003,
	355, 1003,
	356, 1003,
	357, 1003,
	359, 1003,
	360, 1003,
	361, 1003,
	362, 1003,
	363, 1003,
	364, 1003,
	365, 1003,
	366, 1003,
	368, 1003,
	369, 1003,
	370, 1003,
	371, 1003,
	372, 1003,
	373, 1003,
	375, 1003,
	376, 1003,
	377, 1003,
	378, 1003,
	379, 1003,
	381, 1003,
	382, 1003,
	383, 1003,
	385, 1003,
	387, 1003,
	388, 1003,
	389, 1003,
	390, 1003,
	391, 1003,
	392, 1003,
	393, 1003,
	394, 1003,
	395, 1003,
	396, 1003,
	397, 1003,
	398, 1003,
	399, 1003,
	401, 1003,
	402, 1003,
	404, 1003,
	406, 1003,
	407, 1003,
	408, 1003,
	409, 1003,
	410, 1003,
	411, 1003,
	412, 1003,
	414, 1003,
	415, 1003,
	416, 1003,
	417, 1003,
	418, 1003,
	420, 1003,
	422, 1003,
	423, 1003,
	424, 1003,
	425, 1003,
	426, 1003,
	428, 1003,
	429, 1003,
	430, 1003,
	432, 1003,
	433, 1003,
	436, 1003,
	437, 1003,
	438, 1003,
	439, 1003,
	440, 1003,
	441, 1003,
	442, 1003,
	444, 1003,
	447, 1003,
	448, 1003,
	449, 1003,
	450, 1003,
	451, 1003,
	452, 1003,
	454, 1003,
	455, 1003,
	456, 1003,
	461, 1003,
	462, 1003,
	463, 1003,
	464, 1003,
	465, 1003,
	466, 1003,
	-2, 0,
	-1, 773,
	324, 693,
	373, 693,
	-2, 0,
	-1, 774,
	324, 692,
	373, 692,
	-2, 640,
	-1, 778,
	1, 722,
	489, 722,
	491, 722,
	493, 722,
	-2, 0,
	-1, 779,
	1, 764,
	162, 764,
	489, 764,
	491, 764,
	493, 764,
	-2, 0,
	-1, 787,
	1, 696,
	489, 696,
	491, 696,
	493, 696,
	-2, 0,
	-1, 790,
	1, 722,
	489, 722,
	491, 722,
	493, 722,
	-2, 0,
	-1, 791,
	1, 724,
	489, 724,
	491, 724,
	493, 724,
	-2, 0,
	-1, 792,
	1, 727,
	489, 727,
	491, 727,
	493, 727,
	-2, 0,
	-1, 797,
	1, 743,
	489, 743,
	491, 743,
	493, 743,
	-2, 0,
	-1, 798,
	1, 745,
	489, 745,
	491, 745,
	493, 745,
	-2, 0,
	-1, 843,
	149, 1192,
	162, 1192,
	239, 1192,
	281, 1192,
	-2, 1130,
	-1, 857,
	149, 1191,
	162, 1191,
	239, 1191,
	281, 1191,
	-2, 1127,
	-1, 883,
	492, 1836,
	-2, 558,
	-1, 911,
	5, 1828,
	490, 1826,
	-2, 1817,
	-1, 919,
	5, 1849,
	490, 1846,
	-2, 1837,
	-1, 920,
	5, 1850,
	490, 1847,
	-2, 1838,
	-1, 928,
	492, 1834,
	-2, 1816,
	-1, 929,
	490, 2174,
	-2, 1835,
	-1, 952,
	490, 2173,
	-2, 1851,
	-1, 953,
	5, 1356,
	-2, 2144,
	-1, 954,
	5, 1357,
	-2, 2145,
	-1, 955,
	5, 1358,
	-2, 2159,
	-1, 956,
	5, 1359,
	-2, 2124,
	-1, 957,
	5, 1360,
	-2, 2157,
	-1, 958,
	5, 1368,
	-2, 2136,
	-1, 959,
	5, 1355,
	-2, 2132,
	-1, 960,
	5, 1355,
	-2, 2131,
	-1, 961,
	5, 1355,
	-2, 2150,
	-1, 962,
	5, 1366,
	-2, 2126,
	-1, 963,
	5, 1371,
	-2, 2125,
	-1, 964,
	5, 1373,
	-2, 2169,
	-1, 967,
	5, 1395,
	-2, 2162,
	-1, 968,
	5, 1387,
	-2, 2163,
	-1, 969,
	5, 1395,
	-2, 2164,
	-1, 970,
	5, 1391,
	-2, 2165,
	-1, 971,
	5, 1342,
	-2, 2137,
	-1, 972,
	5, 1343,
	-2, 2138,
	-1, 999,
	5, 1378,
	-2, 2170,
	-1, 1000,
	5, 1379,
	-2, 2160,
	-1, 1001,
	5, 1380,
	455, 1380,
	-2, 2127,
	-1, 1002,
	5, 1381,
	455, 1381,
	-2, 2128,
	-1, 1039,
	490, 1846,
	-2, 1837,
	-1, 1040,
	490, 1847,
	-2, 1838,
	-1, 1069,
	165, 2096,
	419, 2096,
	473, 2096,
	492, 2096,
	-2, 0,
	-1, 1072,
	1, 536,
	493, 536,
	-2, 1065,
	-1, 1197,
	340, 1812,
	483, 1812,
	-2, 1810,
	-1, 1209,
	494, 1812,
	-2, 1813,
	-1, 1213,
	1, 979,
	489, 979,
	491, 979,
	493, 979,
	-2, 1179,
	-1, 1258,
	330, 803,
	454, 803,
	-2, 283,
	-1, 1281,
	1, 979,
	489, 979,
	491, 979,
	493, 979,
	-2, 1179,
	-1, 1287,
	4, 1003,
	21, 1003,
	22, 1003,
	23, 1003,
	24, 1003,
	25, 1003,
	26, 1003,
	28, 1003,
	29, 1003,
	35, 1003,
	40, 1003,
	41, 1003,
	42, 1003,
	43, 1003,
	44, 1003,
	45, 1003,
	46, 1003,
	47, 1003,
	48, 1003,
	50, 1003,
	51, 1003,
	52, 1003,
	54, 1003,
	55, 1003,
	56, 1003,
	57, 1003,
	58, 1003,
	62, 1003,
	63, 1003,
	64, 1003,
	65, 1003,
	67, 1003,
	68, 1003,
	69, 1003,
	73, 1003,
	74, 1003,
	75, 1003,
	76, 1003,
	77, 1003,
	78, 1003,
	79, 1003,
	82, 1003,
	83, 1003,
	84, 1003,
	85, 1003,
	87, 1003,
	89, 1003,
	90, 1003,
	91, 1003,
	93, 1003,
	95, 1003,
	96, 1003,
	104, 1003,
	105, 1003,
	106, 1003,
	107, 1003,
	109, 1003,
	110, 1003,
	111, 1003,
	113, 1003,
	114, 1003,
	115, 1003,
	117, 1003,
	118, 1003,
	120, 1003,
	123, 1003,
	124, 1003,
	125, 1003,
	127, 1003,
	128, 1003,
	130, 1003,
	131, 1003,
	133, 1003,
	134, 1003,
	135, 1003,
	136, 1003,
	137, 1003,
	138, 1003,
	139, 1003,
	140, 1003,
	141, 1003,
	142, 1003,
	143, 1003,
	144, 1003,
	145, 1003,
	146, 1003,
	154, 1003,
	155, 1003,
	156, 1003,
	157, 1003,
	161, 1003,
	163, 1003,
	167, 1003,
	168, 1003,
	169, 1003,
	170, 1003,
	171, 1003,
	172, 1003,
	174, 1003,
	175, 1003,
	177, 1003,
	178, 1003,
	180, 1003,
	181, 1003,
	182, 1003,
	183, 1003,
	184, 1003,
	185, 1003,
	186, 1003,
	187, 1003,
	188, 1003,
	190, 1003,
	191, 1003,
	193, 1003,
	194, 1003,
	195, 1003,
	196, 1003,
	201, 1003,
	202, 1003,
	203, 1003,
	206, 1003,
	207, 1003,
	208, 1003,
	210, 1003,
	212, 1003,
	214, 1003,
	216, 1003,
	217, 1003,
	218, 1003,
	220, 1003,
	224, 1003,
	225, 1003,
	226, 1003,
	227, 1003,
	228, 1003,
	230, 1003,
	231, 1003,
	233, 1003,
	234, 1003,
	236, 1003,
	237, 1003,
	240, 1003,
	241, 1003,
	242, 1003,
	245, 1003,
	246, 1003,
	247, 1003,
	248, 1003,
	250, 1003,
	251, 1003,
	252, 1003,
	253, 1003,
	254, 1003,
	255, 1003,
	256, 1003,
	257, 1003,
	258, 1003,
	259, 1003,
	260, 1003,
	262, 1003,
	264, 1003,
	265, 1003,
	266, 1003,
	267, 1003,
	268, 1003,
	270, 1003,
	274, 1003,
	276, 1003,
	277, 1003,
	278, 1003,
	279, 1003,
	280, 1003,
	283, 1003,
	285, 1003,
	287, 1003,
	288, 1003,
	289, 1003,
	292, 1003,
	293, 1003,
	294, 1003,
	296, 1003,
	298, 1003,
	299, 1003,
	300, 1003,
	301, 1003,
	302, 1003,
	303, 1003,
	304, 1003,
	305, 1003,
	306, 1003,
	307, 1003,
	308, 1003,
	310, 1003,
	311, 1003,
	312, 1003,
	313, 1003,
	314, 1003,
	315, 1003,
	316, 1003,
	317, 1003,
	318, 1003,
	320, 1003,
	322, 1003,
	323, 1003,
	324, 1003,
	325, 1003,
	326, 1003,
	327, 1003,
	328, 1003,
	329, 1003,
	330, 1003,
	331, 1003,
	338, 1003,
	340, 1003,
	341, 1003,
	342, 1003,
	343, 1003,
	344, 1003,
	345, 1003,
	346, 1003,
	347, 1003,
	349, 1003,
	350, 1003,
	352, 1003,
	353, 1003,
	354, 1003,
	355, 1003,
	356, 1003,
	357, 1003,
	359, 1003,
	360, 1003,
	361, 1003,
	362, 1003,
	363, 1003,
	364, 1003,
	365, 1003,
	366, 1003,
	368, 1003,
	369, 1003,
	370, 1003,
	371, 1003,
	372, 1003,
	373, 1003,
	375, 1003,
	376, 1003,
	377, 1003,
	378, 1003,
	379, 1003,
	381, 1003,
	382, 1003,
	383, 1003,
	385, 1003,
	387, 1003,
	388, 1003,
	389, 1003,
	390, 1003,
	391, 1003,
	392, 1003,
	393, 1003,
	394, 1003,
	395, 1003,
	396, 1003,
	397, 1003,
	398, 1003,
	399, 1003,
	401, 1003,
	402, 1003,
	404, 1003,
	406, 1003,
	407, 1003,
	408, 1003,
	409, 1003,
	410, 1003,
	411, 1003,
	412, 1003,
	414, 1003,
	415, 1003,
	416, 1003,
	417, 1003,
	418, 1003,
	420, 1003,
	422, 1003,
	423, 1003,
	424, 1003,
	425, 1003,
	426, 1003,
	428, 1003,
	429, 1003,
	430, 1003,
	432, 1003,
	433, 1003,
	436, 1003,
	437, 1003,
	438, 1003,
	439, 1003,
	440, 1003,
	441, 1003,
	442, 1003,
	444, 1003,
	447, 1003,
	448, 1003,
	449, 1003,
	450, 1003,
	451, 1003,
	452, 1003,
	454, 1003,
	455, 1003,
	456, 1003,
	461, 1003,
	462, 1003,
	463, 1003,
	464, 1003,
	465, 1003,
	466, 1003,
	-2, 0,
	-1, 1352,
	1, 411,
	489, 411,
	491, 411,
	493, 411,
	-2, 1150,
	-1, 1355,
	4, 2168,
	11, 2168,
	12, 2168,
	14, 2168,
	15, 2168,
	16, 2168,
	17, 2168,
	18, 2168,
	19, 2168,
	21, 2168,
	22, 2168,
	23, 2168,
	24, 2168,
	25, 2168,
	26, 2168,
	28, 2168,
	29, 2168,
	32, 2168,
	33, 2168,
	35, 2168,
	37, 2168,
	40, 2168,
	41, 2168,
	42, 2168,
	43, 2168,
	44, 2168,
	45, 2168,
	46, 2168,
	47, 2168,
	48, 2168,
	50, 2168,
	51, 2168,
	52, 2168,
	54, 2168,
	55, 2168,
	56, 2168,
	57, 2168,
	58, 2168,
	62, 2168,
	63, 2168,
	64, 2168,
	65, 2168,
	67, 2168,
	68, 2168,
	69, 2168,
	70, 2168,
	73, 2168,
	74, 2168,
	75, 2168,
	76, 2168,
	77, 2168,
	78, 2168,
	79, 2168,
	80, 2168,
	82, 2168,
	83, 2168,
	84, 2168,
	85, 2168,
	87, 2168,
	88, 2168,
	89, 2168,
	90, 2168,
	91, 2168,
	93, 2168,
	94, 2168,
	95, 2168,
	96, 2168,
	104, 2168,
	105, 2168,
	106, 2168,
	107, 2168,
	109, 2168,
	110, 2168,
	111, 2168,
	113, 2168,
	114, 2168,
	115, 2168,
	117, 2168,
	118, 2168,
	120, 2168,
	123, 2168,
	124, 2168,
	125, 2168,
	127, 2168,
	128, 2168,
	130, 2168,
	131, 2168,
	133, 2168,
	134, 2168,
	135, 2168,
	136, 2168,
	137, 2168,
	138, 2168,
	139, 2168,
	140, 2168,
	141, 2168,
	142, 2168,
	143, 2168,
	144, 2168,
	145, 2168,
	146, 2168,
	150, 2168,
	151, 2168,
	152, 2168,
	153, 2168,
	154, 2168,
	155, 2168,
	156, 2168,
	157, 2168,
	160, 2168,
	161, 2168,
	163, 2168,
	166, 2168,
	167, 2168,
	168, 2168,
	169, 2168,
	170, 2168,
	171, 2168,
	172, 2168,
	174, 2168,
	175, 2168,
	177, 2168,
	178, 2168,
	180, 2168,
	181, 2168,
	182, 2168,
	183, 2168,
	184, 2168,
	185, 2168,
	186, 2168,
	187, 2168,
	188, 2168,
	189, 2168,
	190, 2168,
	191, 2168,
	192, 2168,
	193, 2168,
	194, 2168,
	195, 2168,
	196, 2168,
	198, 2168,
	199, 2168,
	201, 2168,
	202, 2168,
	203, 2168,
	205, 2168,
	206, 2168,
	207, 2168,
	208, 2168,
	210, 2168,
	212, 2168,
	213, 2168,
	214, 2168,
	215, 2168,
	216, 2168,
	217, 2168,
	218, 2168,
	219, 2168,
	220, 2168,
	222, 2168,
	223, 2168,
	224, 2168,
	225, 2168,
	226, 2168,
	227, 2168,
	228, 2168,
	230, 2168,
	231, 2168,
	233, 2168,
	234, 2168,
	235, 2168,
	236, 2168,
	237, 2168,
	238, 2168,
	240, 2168,
	241, 2168,
	242, 2168,
	245, 2168,
	246, 2168,
	247, 2168,
	248, 2168,
	249, 2168,
	250, 2168,
	251, 2168,
	252, 2168,
	253, 2168,
	254, 2168,
	255, 2168,
	256, 2168,
	257, 2168,
	258, 2168,
	259, 2168,
	260, 2168,
	262, 2168,
	263, 2168,
	264, 2168,
	265, 2168,
	266, 2168,
	267, 2168,
	268, 2168,
	270, 2168,
	273, 2168,
	274, 2168,
	276, 2168,
	277, 2168,
	278, 2168,
	279, 2168,
	280, 2168,
	283, 2168,
	287, 2168,
	288, 2168,
	289, 2168,
	290, 2168,
	292, 2168,
	293, 2168,
	294, 2168,
	296, 2168,
	298, 2168,
	299, 2168,
	300, 2168,
	301, 2168,
	302, 2168,
	303, 2168,
	304, 2168,
	305, 2168,
	306, 2168,
	307, 2168,
	308, 2168,
	310, 2168,
	311, 2168,
	312, 2168,
	313, 2168,
	314, 2168,
	315, 2168,
	316, 2168,
	317, 2168,
	318, 2168,
	320, 2168,
	322, 2168,
	323, 2168,
	324, 2168,
	325, 2168,
	326, 2168,
	327, 2168,
	328, 2168,
	329, 2168,
	330, 2168,
	331, 2168,
	338, 2168,
	339, 2168,
	340, 2168,
	341, 2168,
	342, 2168,
	343, 2168,
	344, 2168,
	345, 2168,
	346, 2168,
	347, 2168,
	349, 2168,
	350, 2168,
	351, 2168,
	352, 2168,
	353, 2168,
	354, 2168,
	355, 2168,
	356, 2168,
	357, 2168,
	358, 2168,
	359, 2168,
	360, 2168,
	361, 2168,
	362, 2168,
	363, 2168,
	364, 2168,
	365, 2168,
	366, 2168,
	368, 2168,
	369, 2168,
	370, 2168,
	371, 2168,
	372, 2168,
	373, 2168,
	375, 2168,
	376, 2168,
	377, 2168,
	378, 2168,
	379, 2168,
	380, 2168,
	381, 2168,
	382, 2168,
	383, 2168,
	385, 2168,
	387, 2168,
	388, 2168,
	389, 2168,
	390, 2168,
	391, 2168,
	392, 2168,
	393, 2168,
	394, 2168,
	395, 2168,
	396, 2168,
	397, 2168,
	398, 2168,
	399, 2168,
	401, 2168,
	402, 2168,
	404, 2168,
	406, 2168,
	407, 2168,
	408, 2168,
	409, 2168,
	410, 2168,
	411, 2168,
	412, 2168,
	414, 2168,
	415, 2168,
	416, 2168,
	417, 2168,
	418, 2168,
	420, 2168,
	422, 2168,
	423, 2168,
	424, 2168,
	425, 2168,
	426, 2168,
	428, 2168,
	429, 2168,
	430, 2168,
	432, 2168,
	433, 2168,
	436, 2168,
	437, 2168,
	438, 2168,
	439, 2168,
	440, 2168,
	441, 2168,
	442, 2168,
	444, 2168,
	447, 2168,
	448, 2168,
	449, 2168,
	450, 2168,
	451, 2168,
	452, 2168,
	454, 2168,
	455, 2168,
	456, 2168,
	461, 2168,
	462, 2168,
	463, 2168,
	464, 2168,
	465, 2168,
	466, 2168,
	467, 2168,
	468, 2168,
	471, 2168,
	472, 2168,
	473, 2168,
	474, 2168,
	475, 2168,
	476, 2168,
	478, 2168,
	479, 2168,
	480, 2168,
	481, 2168,
	482, 2168,
	483, 2168,
	484, 2168,
	485, 2168,
	486, 2168,
	488, 2168,
	491, 2168,
	492, 2168,
	494, 2168,
	495, 2168,
	-2, 0,
	-1, 1360,
	165, 2067,
	419, 2067,
	473, 2067,
	492, 2067,
	-2, 0,
	-1, 1394,
	324, 693,
	373, 693,
	-2, 0,
	-1, 1418,
	1, 688,
	489, 688,
	491, 688,
	493, 688,
	-2, 0,
	-1, 1419,
	1, 713,
	489, 713,
	491, 713,
	493, 713,
	-2, 0,
	-1, 1420,
	1, 695,
	489, 695,
	491, 695,
	493, 695,
	-2, 0,
	-1, 1422,
	1, 699,
	489, 699,
	491, 699,
	493, 699,
	-2, 0,
	-1, 1449,
	1, 2116,
	489, 2116,
	491, 2116,
	492, 2116,
	493, 2116,
	-2, 741,
	-1, 1450,
	1, 2064,
	489, 2064,
	491, 2064,
	492, 2064,
	493, 2064,
	-2, 742,
	-1, 1465,
	1, 1060,
	493, 1060,
	-2, 1065,
	-1, 1468,
	149, 1191,
	162, 1191,
	239, 1191,
	281, 1191,
	-2, 1131,
	-1, 1563,
	132, 1152,
	149, 1152,
	162, 1152,
	209, 1152,
	239, 1152,
	281, 1152,
	291, 1152,
	434, 1152,
	-2, 1556,
	-1, 1623,
	491, 1706,
	-2, 0,
	-1, 1658,
	132, 1152,
	149, 1152,
	162, 1152,
	209, 1152,
	239, 1152,
	281, 1152,
	291, 1152,
	434, 1152,
	-2, 1272,
	-1, 1705,
	490, 1383,
	-2, 1371,
	-1, 1738,
	1, 538,
	493, 538,
	-2, 1065,
	-1, 1950,
	1, 690,
	489, 690,
	491, 690,
	493, 690,
	-2, 0,
	-1, 1951,
	1, 715,
	489, 715,
	491, 715,
	493, 715,
	-2, 0,
	-1, 2023,
	356, 1218,
	357, 1218,
	-2, 1416,
	-1, 2054,
	14, 0,
	15, 0,
	16, 0,
	471, 0,
	472, 0,
	473, 0,
	-2, 1436,
	-1, 2055,
	14, 0,
	15, 0,
	16, 0,
	471, 0,
	472, 0,
	473, 0,
	-2, 1437,
	-1, 2056,
	88, 0,
	222, 0,
	223, 0,
	475, 0,
	476, 0,
	-2, 1438,
	-1, 2057,
	88, 0,
	222, 0,
	223, 0,
	475, 0,
	476, 0,
	-2, 1439,
	-1, 2058,
	88, 0,
	222, 0,
	223, 0,
	475, 0,
	476, 0,
	-2, 1440,
	-1, 2059,
	88, 0,
	222, 0,
	223, 0,
	475, 0,
	476, 0,
	-2, 1441,
	-1, 2060,
	88, 0,
	222, 0,
	223, 0,
	475, 0,
	476, 0,
	-2, 1442,
	-1, 2061,
	14, 0,
	15, 0,
	16, 0,
	471, 0,
	472, 0,
	473, 0,
	-2, 1443,
	-1, 2073,
	14, 0,
	15, 0,
	16, 0,
	471, 0,
	472, 0,
	473, 0,
	-2, 1455,
	-1, 2074,
	14, 0,
	15, 0,
	16, 0,
	471, 0,
	472, 0,
	473, 0,
	-2, 1456,
	-1, 2075,
	14, 0,
	15, 0,
	16, 0,
	471, 0,
	472, 0,
	473, 0,
	-2, 1457,
	-1, 2078,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	189, 0,
	192, 0,
	238, 0,
	380, 0,
	467, 0,
	474, 0,
	-2, 1462,
	-1, 2084,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	189, 0,
	192, 0,
	238, 0,
	380, 0,
	467, 0,
	474, 0,
	-2, 1466,
	-1, 2086,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	189, 0,
	192, 0,
	238, 0,
	380, 0,
	467, 0,
	474, 0,
	-2, 1474,
	-1, 2087,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	189, 0,
	192, 0,
	238, 0,
	380, 0,
	467, 0,
	474, 0,
	-2, 1475,
	-1, 2088,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	189, 0,
	192, 0,
	238, 0,
	380, 0,
	467, 0,
	474, 0,
	-2, 1476,
	-1, 2089,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	189, 0,
	192, 0,
	238, 0,
	380, 0,
	467, 0,
	474, 0,
	-2, 1477,
	-1, 2201,
	5, 1849,
	165, 1717,
	490, 1846,
	-2, 1837,
	-1, 2202,
	165, 1718,
	-2, 2120,
	-1, 2203,
	165, 1719,
	-2, 1990,
	-1, 2204,
	165, 1720,
	-2, 1907,
	-1, 2205,
	165, 1721,
	-2, 1947,
	-1, 2206,
	165, 1722,
	-2, 1985,
	-1, 2207,
	165, 1723,
	-2, 2062,
	-1, 2208,
	165, 1724,
	-2, 1539,
	-1, 2277,
	1, 1273,
	2, 1273,
	94, 1273,
	132, 1273,
	149, 1273,
	162, 1273,
	166, 1273,
	176, 1273,
	179, 1273,
	205, 1273,
	209, 1273,
	219, 1273,
	235, 1273,
	239, 1273,
	263, 1273,
	281, 1273,
	285, 1273,
	291, 1273,
	348, 1273,
	351, 1273,
	434, 1273,
	445, 1273,
	458, 1273,
	459, 1273,
	460, 1273,
	469, 1273,
	489, 1273,
	491, 1273,
	493, 1273,
	495, 1273,
	-2, 1272,
	-1, 2290,
	490, 1818,
	-2, 1832,
	-1, 2314,
	490, 1382,
	-2, 1372,
	-1, 2426,
	1, 979,
	489, 979,
	491, 979,
	493, 979,
	-2, 1179,
	-1, 2580,
	286, 1221,
	-2, 2158,
	-1, 2581,
	286, 1222,
	-2, 2051,
	-1, 2585,
	356, 1783,
	357, 1783,
	-2, 1537,
	-1, 2586,
	356, 1787,
	357, 1787,
	-2, 1538,
	-1, 2587,
	356, 1784,
	357, 1784,
	-2, 1537,
	-1, 2588,
	356, 1788,
	357, 1788,
	-2, 1538,
	-1, 2601,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	189, 0,
	192, 0,
	238, 0,
	380, 0,
	467, 0,
	474, 0,
	-2, 1464,
	-1, 2602,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	189, 0,
	192, 0,
	238, 0,
	380, 0,
	467, 0,
	474, 0,
	-2, 1468,
	-1, 2608,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	189, 0,
	192, 0,
	238, 0,
	380, 0,
	467, 0,
	474, 0,
	-2, 1470,
	-1, 2805,
	216, 1065,
	320, 1065,
	328, 1065,
	469, 1065,
	-2, 535,
	-1, 2919,
	1, 979,
	489, 979,
	491, 979,
	493, 979,
	-2, 1179,
	-1, 3010,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	189, 0,
	192, 0,
	238, 0,
	380, 0,
	467, 0,
	474, 0,
	-2, 1472,
	-1, 3017,
	213, 0,
	215, 0,
	273, 0,
	-2, 1491,
	-1, 3084,
	14, 0,
	15, 0,
	16, 0,
	471, 0,
	472, 0,
	473, 0,
	-2, 1520,
	-1, 3085,
	14, 0,
	15, 0,
	16, 0,
	471, 0,
	472, 0,
	473, 0,
	-2, 1521,
	-1, 3086,
	14, 0,
	15, 0,
	16, 0,
	471, 0,
	472, 0,
	473, 0,
	-2, 1522,
	-1, 3090,
	14, 0,
	15, 0,
	16, 0,
	471, 0,
	472, 0,
	473, 0,
	-2, 1526,
	-1, 3091,
	14, 0,
	15, 0,
	16, 0,
	471, 0,
	472, 0,
	473, 0,
	-2, 1527,
	-1, 3092,
	14, 0,
	15, 0,
	16, 0,
	471, 0,
	472, 0,
	473, 0,
	-2, 1528,
	-1, 3138,
	490, 1819,
	-2, 1833,
	-1, 3246,
	492, 2274,
	-2, 1109,
	-1, 3297,
	213, 0,
	215, 0,
	273, 0,
	-2, 1492,
	-1, 3300,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	189, 0,
	192, 0,
	238, 0,
	380, 0,
	467, 0,
	474, 0,
	-2, 1495,
	-1, 3301,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	189, 0,
	192, 0,
	238, 0,
	380, 0,
	467, 0,
	474, 0,
	-2, 1497,
	-1, 3494,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	189, 0,
	192, 0,
	238, 0,
	380, 0,
	467, 0,
	474, 0,
	-2, 1496,
	-1, 3495,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	189, 0,
	192, 0,
	238, 0,
	380, 0,
	467, 0,
	474, 0,
	-2, 1498,
	-1, 3506,
	213, 0,
	-2, 1529,
	-1, 3648,
	213, 0,
	-2, 1530,
	-1, 3792,
	47, 0,
	189, 0,
	238, 0,
	380, 0,
	467, 0,
	474, 0,
	-2, 2123,
}

const sqlPrivate = 57344

const sqlLast = 92725

var sqlAct = [...]int{

	227, 3578, 3540, 3670, 3537, 3802, 3791, 3893, 2905, 3280,
	3691, 3160, 3755, 3767, 3737, 2735, 3426, 3752, 1229, 3803,
	3525, 2346, 3804, 2477, 1922, 3846, 1043, 3790, 3049, 3585,
	3652, 2736, 3457, 3412, 3452, 867, 2033, 3483, 2822, 2934,
	3238, 1350, 36, 1216, 3594, 884, 3419, 1078, 3439, 1346,
	3421, 3195, 3364, 3616, 3462, 858, 1909, 1347, 2101, 1692,
	2927, 2405, 1789, 2041, 1477, 3217, 871, 2929, 627, 2901,
	594, 2233, 3002, 2512, 3161, 1101, 2034, 2594, 2440, 3511,
	2466, 2449, 1664, 2452, 1032, 1194, 2514, 2750, 627, 2778,
	2758, 2718, 3336, 3279, 2522, 2511, 2741, 1402, 2503, 719,
	2505, 2461, 2739, 2463, 2478, 1633, 1798, 1834, 911, 1833,
	2348, 2717, 2383, 1202, 2269, 1571, 3109, 1907, 2114, 2270,
	2272, 866, 151, 219, 2038, 2417, 3653, 1609, 2521, 4,
	1814, 1274, 1830, 1821, 2578, 2450, 2143, 1929, 915, 1776,
	3579, 1085, 1774, 2251, 1465, 1693, 1653, 2134, 1634, 2098,
	2022, 1327, 1764, 2005, 1353, 2003, 1199, 2784, 2230, 1368,
	2903, 1337, 1343, 920, 2471, 1864, 1279, 548, 628, 221,
	2515, 570, 2338, 562, 629, 2137, 1074, 1026, 1604, 2259,
	1643, 2241, 1005, 2197, 2382, 2115, 2187, 1555, 1478, 1479,
	1023, 578, 93, 1218, 220, 1040, 624, 2004, 159, 1367,
	695, 2006, 1863, 588, 151, 918, 670, 1351, 1226, 2027,
	896, 1788, 713, 565, 41, 40, 38, 160, 1484, 29,
	768, 27, 25, 1464, 1003, 573, 2629, 785, 1028, 2690,
	2691, 1884, 3123, 1650, 3124, 2737, 2625, 632, 3945, 1900,
	2944, 862, 2250, 1900, 1302, 1900, 3932, 1022, 3931, 3909,
	2250, 3907, 2250, 3380, 1900, 3380, 3903, 632, 2145, 3829,
	1840, 3826, 635, 3830, 3824, 2250, 3821, 3818, 2250, 3813,
	3822, 3819, 2943, 1840, 3788, 3787, 3786, 2803, 1840, 1840,
	1915, 917, 635, 3782, 730, 3781, 3776, 1915, 3774, 1915,
	3380, 1020, 3380, 1562, 2301, 3763, 3750, 3731, 2705, 3574,
	3380, 2305, 3724, 1038, 862, 3723, 2250, 1006, 1006, 2250,
	66, 1492, 1493, 3718, 3717, 3711, 3650, 3380, 3380, 1840,
	2305, 3630, 2593, 3627, 3587, 1840, 67, 3380, 3588, 1840,
	3557, 3556, 3548, 1523, 1840, 1840, 1840, 3547, 3517, 71,
	1495, 3380, 1840, 3496, 1898, 2243, 2401, 2305, 2690, 2691,
	844, 3481, 3470, 3407, 863, 1915, 2959, 2250, 3398, 3379,
	3299, 3254, 2250, 3380, 2305, 2975, 1082, 3248, 3215, 843,
	1494, 2975, 3216, 3133, 76, 1059, 2250, 3134, 2696, 852,
	1514, 3131, 3116, 3732, 3033, 3132, 2250, 857, 1840, 3029,
	2974, 2966, 3113, 2250, 2975, 2967, 1082, 2734, 2729, 2728,
	1035, 2250, 2250, 2250, 2681, 2679, 2671, 81, 2682, 2680,
	2672, 2669, 1007, 2640, 2638, 2250, 1054, 2250, 192, 92,
	2639, 1009, 1930, 1010, 82, 89, 2527, 82, 2501, 2500,
	1915, 2322, 1918, 1918, 2304, 2250, 2299, 1421, 2305, 3645,
	2250, 3633, 2293, 2690, 2691, 2250, 1840, 1915, 3574, 3113,
	1517, 1518, 1519, 1520, 2249, 1917, 194, 2242, 2250, 1918,
	1500, 3451, 3399, 1840, 2967, 2396, 2337, 2706, 1744, 1899,
	1793, 2140, 2959, 83, 2446, 1839, 1034, 2413, 2335, 1629,
	192, 1492, 1493, 1225, 1525, 1526, 1527, 1535, 1536, 1537,
	3189, 2286, 1055, 3005, 2983, 1651, 1824, 2696, 1522, 1524,
	1404, 193, 1528, 1523, 2945, 2285, 2690, 2691, 2628, 2284,
	1495, 186, 2283, 2282, 1011, 192, 1008, 1541, 194, 187,
	851, 850, 849, 2946, 3352, 2690, 2691, 1901, 2708, 2709,
	2710, 1901, 2558, 1901, 848, 847, 846, 842, 841, 840,
	1494, 161, 1901, 839, 3311, 2141, 3295, 838, 837, 1515,
	1514, 836, 835, 194, 834, 833, 832, 831, 1511, 830,
	829, 828, 827, 193, 1247, 766, 765, 764, 3144, 2303,
	2943, 763, 762, 186, 761, 760, 2707, 759, 758, 757,
	756, 187, 755, 754, 753, 752, 2706, 751, 750, 84,
	749, 748, 2696, 920, 2705, 747, 746, 920, 193, 745,
	744, 743, 742, 161, 741, 1562, 3127, 1055, 740, 739,
	728, 727, 1104, 686, 647, 646, 1104, 2142, 2139, 1221,
	1517, 1518, 1519, 1520, 638, 637, 158, 87, 1084, 88,
	1500, 636, 1089, 608, 600, 599, 598, 582, 161, 1521,
	215, 920, 214, 920, 213, 920, 212, 211, 210, 192,
	209, 208, 192, 207, 206, 2696, 205, 718, 1516, 1532,
	1213, 126, 1542, 204, 126, 203, 202, 1210, 1522, 1524,
	201, 200, 1221, 1205, 2696, 2242, 2491, 199, 2976, 2474,
	1913, 2706, 1899, 1538, 1234, 1539, 1239, 194, 1245, 2781,
	194, 1998, 1509, 1510, 198, 2707, 2701, 2699, 2700, 2692,
	2693, 2694, 2695, 2697, 2698, 1055, 197, 196, 1530, 195,
	127, 2651, 1221, 1281, 2634, 2430, 1221, 2309, 2732, 1515,
	1221, 2291, 1284, 1286, 162, 920, 2276, 2711, 2144, 1235,
	1221, 1654, 193, 920, 1072, 193, 1772, 1197, 2733, 1925,
	1209, 1212, 186, 1540, 2706, 186, 865, 1246, 2170, 1612,
	187, 2156, 1677, 187, 1491, 1611, 1582, 1231, 2154, 1612,
	1529, 1362, 1573, 2706, 1091, 1611, 2457, 1042, 1366, 3809,
	3789, 1369, 161, 1221, 3698, 161, 1373, 1615, 1505, 1503,
	1504, 1496, 1497, 1498, 1499, 1501, 1502, 1610, 3535, 920,
	2707, 1067, 3642, 3636, 3510, 3634, 1212, 1212, 3471, 1228,
	632, 1097, 192, 1191, 1196, 1227, 3450, 3357, 3334, 1521,
	3333, 3466, 1924, 3327, 1386, 2701, 2699, 2700, 2692, 2693,
	2694, 2695, 2697, 2698, 3326, 635, 3325, 2138, 1516, 3318,
	1422, 3317, 1289, 3315, 1212, 1374, 3310, 3307, 151, 151,
	194, 3306, 3214, 3148, 3147, 3146, 1356, 1358, 3221, 3137,
	1533, 3104, 2318, 2707, 3103, 3102, 1241, 3025, 1331, 1334,
	3021, 2776, 1492, 1493, 2725, 2970, 1340, 2716, 2689, 2686,
	2685, 2683, 2707, 920, 920, 920, 920, 920, 920, 920,
	3187, 2678, 2690, 2691, 1523, 193, 2677, 2676, 1431, 2673,
	2670, 1495, 1423, 2650, 1574, 186, 1572, 1580, 2633, 1469,
	2626, 2502, 2277, 187, 920, 2127, 1491, 1573, 863, 1354,
	920, 2699, 2700, 2692, 2693, 2694, 2695, 2697, 2698, 1019,
	1875, 1494, 1845, 1843, 1490, 161, 3940, 2369, 3902, 192,
	3901, 3839, 3837, 1305, 192, 3828, 1044, 1531, 3051, 3690,
	3680, 1506, 1507, 1513, 1534, 1512, 1508, 3677, 1505, 1503,
	1504, 1496, 1497, 1498, 1499, 1501, 1502, 2730, 3676, 3675,
	3654, 3321, 2459, 3669, 3662, 3320, 3631, 194, 2690, 2691,
	3615, 3614, 194, 2104, 3602, 2700, 2692, 2693, 2694, 2695,
	2697, 2698, 2690, 2691, 1561, 2702, 2703, 2704, 3599, 3575,
	1379, 3553, 2701, 2699, 2700, 2692, 2693, 2694, 2695, 2697,
	2698, 1463, 1395, 1492, 1493, 3531, 3508, 3491, 3490, 3478,
	3477, 1500, 193, 920, 920, 920, 3465, 193, 3443, 920,
	3351, 3332, 186, 3269, 3266, 1523, 1040, 186, 1040, 3178,
	187, 2696, 1495, 1631, 3177, 187, 3164, 3163, 3119, 1240,
	1466, 2110, 3107, 1104, 3016, 1559, 2977, 2960, 2920, 1522,
	1524, 920, 161, 2870, 627, 3220, 1474, 2473, 1710, 627,
	1473, 192, 1494, 1680, 2849, 844, 2825, 920, 2824, 2798,
	1468, 1221, 1668, 1689, 1470, 2796, 2655, 2654, 1733, 1487,
	1488, 2649, 2617, 2439, 843, 1618, 920, 3446, 2773, 1617,
	1640, 1616, 1104, 1613, 192, 1605, 863, 1614, 1603, 194,
	1515, 2316, 2315, 2288, 2281, 1685, 2248, 2152, 1676, 1632,
	1627, 192, 1626, 1625, 1741, 1624, 1623, 2696, 1622, 1637,
	1638, 1770, 1687, 1621, 1661, 1006, 2458, 1620, 1619, 1600,
	1599, 2696, 194, 1598, 1038, 1735, 1038, 1926, 1736, 1606,
	1607, 1492, 1493, 1597, 193, 1596, 1595, 1594, 1593, 194,
	1592, 151, 1500, 1591, 186, 2825, 1684, 1590, 1589, 1588,
	1587, 1586, 187, 1523, 1575, 1560, 1558, 1553, 1492, 1493,
	1495, 1066, 1209, 1057, 1050, 1662, 3353, 193, 3303, 3143,
	3130, 3122, 894, 3520, 161, 2637, 1683, 186, 2279, 3355,
	1522, 1524, 2307, 3142, 193, 187, 1761, 1495, 2690, 2691,
	1494, 1574, 1681, 2794, 186, 1659, 2706, 1556, 1763, 1516,
	1514, 1672, 187, 3401, 1738, 3899, 1088, 161, 1511, 1082,
	863, 192, 1654, 632, 3892, 1221, 3678, 1494, 632, 1630,
	2930, 1035, 1104, 1035, 161, 3590, 1763, 2169, 1782, 1079,
	2155, 1515, 1492, 1493, 1671, 1670, 1669, 2153, 635, 1667,
	1688, 1666, 1665, 635, 1656, 1732, 3637, 1652, 3635, 194,
	1461, 3293, 1811, 1763, 3589, 1813, 1369, 3576, 1818, 1690,
	1087, 1495, 3469, 3400, 3125, 2962, 3534, 1595, 1595, 2961,
	1517, 1518, 1519, 1520, 2675, 1612, 3224, 2674, 2599, 3595,
	1500, 1611, 3176, 1766, 1756, 1082, 922, 2371, 1083, 1584,
	825, 1494, 1750, 2907, 193, 2906, 1403, 1034, 1923, 1034,
	2387, 2737, 3586, 1394, 186, 2707, 3814, 1500, 3801, 1492,
	1493, 1432, 187, 1404, 1835, 3209, 1086, 3192, 1522, 1524,
	1797, 1504, 1496, 1497, 1498, 1499, 1501, 1502, 1082, 2216,
	826, 3180, 2981, 1080, 161, 3512, 1822, 3053, 1495, 2643,
	1516, 1081, 1509, 1510, 2694, 2695, 2697, 2698, 1221, 3810,
	1221, 2135, 1221, 2314, 1868, 1628, 1608, 2899, 1872, 1262,
	3823, 1221, 1221, 1876, 2410, 1221, 2852, 1036, 1494, 1515,
	3820, 1793, 1581, 2939, 1837, 3155, 3671, 2407, 1221, 1221,
	1221, 1873, 3453, 3749, 1228, 632, 3659, 1881, 1383, 2828,
	1227, 3171, 1871, 1921, 2509, 2470, 2893, 1018, 627, 3862,
	1250, 1942, 3863, 1369, 3710, 1931, 1934, 1817, 3811, 2997,
	635, 3573, 2807, 3390, 3205, 1889, 823, 821, 1932, 1943,
	1944, 1945, 2323, 3937, 1838, 819, 1739, 817, 2692, 2693,
	2694, 2695, 2697, 2698, 1793, 1984, 814, 3566, 1073, 1878,
	1982, 3559, 2692, 2693, 2694, 2695, 2697, 2698, 3201, 3200,
	1855, 1209, 1946, 3194, 1928, 1854, 3191, 3190, 1500, 1521,
	1505, 1503, 1504, 1496, 1497, 1498, 1499, 1501, 1502, 3204,
	1751, 920, 3152, 920, 1430, 1260, 965, 808, 1516, 3151,
	920, 2648, 1082, 1710, 1710, 1104, 682, 920, 920, 920,
	920, 920, 920, 920, 920, 920, 920, 920, 920, 920,
	920, 920, 920, 920, 920, 920, 920, 920, 920, 920,
	920, 920, 920, 920, 920, 920, 920, 920, 920, 920,
	920, 920, 1887, 920, 1936, 920, 920, 920, 920, 1891,
	1892, 1883, 2002, 2015, 1305, 2467, 1886, 2647, 1886, 2023,
	863, 1354, 863, 1354, 2341, 1261, 2795, 920, 1381, 861,
	920, 920, 1429, 2646, 1067, 1919, 2013, 1920, 2339, 920,
	2350, 1933, 2645, 920, 2341, 920, 920, 632, 1935, 2603,
	1088, 3709, 2412, 1104, 683, 2403, 2395, 2394, 2339, 920,
	920, 920, 920, 2374, 920, 920, 920, 920, 920, 920,
	920, 920, 635, 2300, 1964, 1512, 1508, 2011, 1505, 1503,
	1504, 1496, 1497, 1498, 1499, 1501, 1502, 913, 2085, 2809,
	920, 920, 920, 920, 920, 920, 920, 920, 920, 2140,
	2183, 2116, 2117, 920, 1087, 2026, 860, 3158, 2039, 2040,
	1498, 1499, 1501, 1502, 2308, 1040, 2116, 2132, 1467, 1428,
	1079, 1224, 1104, 2182, 2043, 1295, 1316, 1294, 1790, 1999,
	2391, 1040, 1079, 2330, 1784, 2007, 2014, 2001, 2353, 2418,
	2009, 2000, 2178, 2698, 1995, 1088, 1903, 920, 1104, 1905,
	2135, 2384, 2385, 844, 1786, 1910, 844, 844, 1912, 2217,
	2131, 2200, 2200, 2214, 3402, 2116, 1799, 3489, 2234, 2236,
	1820, 2851, 2030, 2141, 2240, 2031, 2032, 1791, 1792, 2384,
	2385, 1396, 1293, 2264, 1292, 1803, 1256, 1502, 862, 2982,
	2012, 1819, 1996, 2373, 1460, 1853, 1755, 1754, 1376, 1087,
	1763, 1765, 811, 3862, 1940, 1787, 2384, 2385, 1642, 1992,
	1269, 2256, 2112, 1221, 2292, 606, 2100, 1815, 2289, 2100,
	1006, 863, 2409, 1038, 1080, 3542, 2362, 1661, 2576, 1440,
	2129, 863, 1081, 1800, 1404, 863, 1080, 1472, 1994, 1038,
	1791, 1792, 1065, 1104, 1081, 2142, 2139, 2278, 2806, 1404,
	1672, 2010, 2408, 2013, 3386, 1444, 1741, 2255, 803, 1496,
	1497, 1498, 1499, 1501, 1502, 2406, 3896, 2263, 1816, 2268,
	1710, 2591, 2274, 2275, 2209, 2196, 3779, 1997, 560, 2225,
	1646, 856, 2238, 151, 3887, 1954, 2361, 685, 684, 2246,
	2247, 2302, 2420, 2352, 2011, 1104, 2257, 2261, 2262, 1957,
	1949, 2368, 1377, 555, 1758, 879, 1888, 1221, 1659, 605,
	3807, 1382, 2419, 2421, 920, 1427, 920, 815, 815, 1649,
	1035, 2342, 1614, 863, 1804, 2988, 815, 3544, 816, 3167,
	2400, 859, 1392, 1644, 2180, 1983, 1035, 815, 2561, 2181,
	1981, 2987, 2184, 1950, 2185, 2186, 2108, 2321, 2426, 1647,
	2404, 2443, 2424, 2106, 2317, 1931, 2144, 2432, 2555, 2434,
	804, 3042, 2144, 2326, 3888, 2392, 3376, 1418, 1606, 1607,
	737, 3179, 3488, 1082, 2376, 2411, 2328, 1645, 2320, 2590,
	2481, 3876, 1805, 1806, 3875, 1082, 1221, 1221, 2298, 1221,
	2324, 2340, 1951, 1958, 1801, 3372, 1034, 2472, 2372, 2752,
	2472, 1221, 1760, 1197, 3912, 2329, 1380, 2012, 803, 2351,
	2614, 3851, 1034, 3384, 1991, 2377, 1419, 1209, 2345, 2523,
	2327, 2355, 2358, 3285, 2525, 2310, 1315, 2496, 1802, 2529,
	2530, 856, 2564, 2494, 1759, 680, 2612, 679, 2535, 2536,
	2537, 3373, 1369, 1993, 2497, 2427, 2364, 3808, 3284, 920,
	2545, 1931, 2546, 3890, 1931, 2138, 1931, 2375, 2936, 2386,
	2388, 2389, 2390, 2583, 2584, 1648, 3422, 2937, 2010, 1441,
	2393, 1047, 2144, 3894, 1258, 1280, 2863, 3924, 1228, 632,
	2096, 2483, 1793, 1900, 2428, 2543, 1255, 2857, 1810, 920,
	2553, 2437, 1777, 2425, 2508, 920, 920, 1778, 1795, 3039,
	3672, 2447, 3728, 3422, 635, 1045, 2094, 1212, 1212, 151,
	804, 607, 2465, 1278, 604, 1777, 805, 2498, 1807, 2566,
	1778, 2568, 2476, 2540, 2487, 3806, 2488, 1784, 2489, 1777,
	2936, 1280, 3543, 2547, 1778, 2549, 2563, 2551, 2493, 3385,
	2808, 2528, 712, 2499, 2531, 1601, 2532, 2495, 2792, 2609,
	920, 920, 1209, 2559, 3895, 2579, 920, 2510, 2560, 2751,
	2526, 1784, 2839, 2873, 2610, 3281, 3435, 3501, 2615, 920,
	920, 3040, 3872, 1442, 3850, 920, 920, 2605, 2126, 3168,
	2099, 920, 1354, 3897, 2542, 1808, 1209, 556, 1209, 2341,
	920, 920, 920, 2548, 1779, 2550, 920, 2552, 1956, 1048,
	3368, 1378, 3889, 2356, 3369, 812, 920, 3832, 3760, 1781,
	2838, 1471, 2606, 3485, 3833, 2636, 1064, 1779, 1439, 2090,
	3689, 2653, 2569, 920, 1552, 2573, 2572, 2582, 806, 1642,
	2091, 1779, 1781, 3913, 2092, 2217, 2217, 2562, 2097, 2577,
	2260, 2026, 2273, 2627, 1443, 557, 1781, 862, 3371, 2082,
	3726, 2592, 3055, 3445, 3275, 3139, 1060, 1646, 3286, 2571,
	1953, 3374, 2631, 2632, 3420, 2999, 805, 2635, 2574, 807,
	1406, 1783, 738, 1767, 1768, 1948, 3692, 3805, 1036, 3861,
	1036, 3727, 2144, 558, 854, 559, 803, 3423, 3859, 920,
	920, 920, 2841, 3706, 1783, 3601, 1649, 3236, 920, 920,
	920, 1646, 2604, 920, 3219, 2107, 1391, 1393, 1783, 856,
	2258, 2923, 1862, 920, 1040, 1104, 2611, 1639, 1058, 920,
	1053, 920, 2490, 2843, 3423, 2613, 1647, 3484, 3849, 1040,
	547, 1481, 2744, 2745, 3093, 1482, 639, 3436, 1812, 3330,
	1649, 3282, 2029, 1794, 1476, 1752, 3918, 1104, 3003, 2785,
	855, 2642, 3550, 3549, 1644, 2217, 2217, 2217, 3529, 1040,
	3108, 1481, 1104, 3625, 3370, 3925, 3658, 863, 3237, 2766,
	1647, 1901, 3198, 1784, 2727, 3154, 1710, 2842, 806, 2924,
	1104, 2918, 2820, 2816, 2451, 2441, 2093, 2783, 804, 2790,
	2746, 2080, 920, 3389, 2083, 2095, 1784, 1882, 1645, 3377,
	3388, 1874, 1867, 1849, 1046, 3038, 920, 3831, 2802, 2845,
	1784, 3617, 3693, 2252, 2019, 2780, 3738, 1710, 2756, 807,
	3000, 1480, 1038, 3618, 1704, 2754, 1988, 2804, 1481, 1745,
	2813, 2814, 2812, 920, 2775, 3486, 2357, 1038, 1552, 3239,
	2079, 2810, 1648, 2779, 3458, 3584, 1775, 2829, 2755, 3619,
	2833, 1480, 2378, 2764, 2438, 1318, 2722, 2723, 2724, 2767,
	2768, 2738, 2765, 1482, 3582, 2830, 3530, 1038, 2835, 2836,
	2772, 2753, 2831, 3287, 1104, 2827, 1825, 2826, 2846, 2847,
	2254, 1832, 2848, 1221, 3094, 2253, 1648, 2597, 2817, 2575,
	1941, 3121, 3095, 1482, 2770, 1221, 2771, 3331, 1420, 2876,
	2854, 1104, 2879, 1749, 3621, 2749, 2887, 2889, 734, 3917,
	2867, 2868, 726, 2760, 2869, 2748, 1221, 1780, 1480, 1035,
	3620, 2793, 2020, 2787, 2788, 2789, 2882, 1221, 2856, 2878,
	860, 2904, 2297, 2296, 1035, 2871, 2891, 3622, 2805, 2912,
	1780, 1040, 2295, 2294, 805, 3288, 1287, 2811, 1782, 2917,
	2864, 640, 641, 1407, 1780, 2932, 2445, 2913, 1288, 3387,
	1684, 3665, 2821, 3538, 1035, 2523, 3427, 1209, 2919, 2971,
	1747, 1880, 3694, 2896, 2523, 1782, 1301, 2844, 1831, 1221,
	1221, 3869, 2081, 2850, 3580, 1299, 2941, 736, 1871, 3741,
	2859, 3527, 1748, 3475, 2761, 1034, 3666, 2958, 2862, 3746,
	2866, 2379, 2380, 1212, 2874, 2872, 2894, 1822, 3735, 3337,
	1034, 3110, 2890, 2880, 1707, 1822, 2885, 2151, 2952, 2786,
	2964, 2965, 2865, 2978, 1458, 3871, 1456, 2376, 3528, 3825,
	3679, 1104, 3507, 3329, 1104, 1436, 1434, 2925, 2759, 1417,
	1034, 1415, 2860, 2933, 2799, 2800, 2861, 2801, 1413, 1038,
	2915, 3539, 1411, 3474, 853, 1409, 806, 3210, 643, 642,
	2719, 1401, 3742, 2763, 920, 3015, 2940, 2979, 2684, 3667,
	920, 920, 2938, 2616, 920, 920, 920, 2442, 920, 2402,
	2953, 2947, 2370, 2319, 1679, 1209, 1209, 920, 1710, 2969,
	1675, 2994, 151, 151, 2973, 2931, 920, 807, 1399, 920,
	2956, 2957, 1459, 1297, 1371, 1104, 644, 645, 2720, 2993,
	2996, 2995, 1980, 1476, 920, 2557, 2984, 2556, 2985, 2534,
	2986, 2008, 1104, 732, 733, 1990, 3623, 724, 725, 1961,
	1734, 3624, 1710, 1710, 920, 920, 863, 920, 920, 920,
	3001, 2217, 2217, 2762, 2990, 1698, 1035, 3018, 1585, 1375,
	1273, 2150, 3800, 1828, 3406, 920, 3027, 3028, 1209, 920,
	225, 1710, 1710, 920, 920, 920, 920, 920, 920, 920,
	920, 920, 920, 920, 920, 920, 920, 920, 920, 920,
	920, 920, 2998, 920, 2875, 1300, 3397, 1457, 2991, 1455,
	920, 920, 1710, 1826, 1298, 3734, 735, 920, 1435, 1433,
	2195, 2191, 1416, 3456, 1414, 3411, 3361, 3235, 920, 1565,
	3229, 1412, 3203, 1570, 3023, 1410, 3174, 3172, 1408, 1040,
	1040, 3153, 1034, 920, 1400, 3034, 2916, 2908, 1827, 2217,
	2217, 2217, 2217, 2217, 2217, 2217, 2217, 2217, 2217, 2217,
	2217, 2217, 2217, 2217, 2217, 2217, 2217, 2217, 2492, 2217,
	3050, 2468, 1104, 3041, 3043, 3044, 3057, 1931, 2456, 1704,
	1704, 1398, 3126, 3067, 2448, 3068, 1296, 2435, 3105, 3070,
	2189, 3065, 1979, 1916, 1914, 3066, 1911, 2039, 3058, 3097,
	920, 1906, 1904, 1902, 1893, 3072, 1846, 2193, 2194, 2192,
	1844, 1836, 3149, 1823, 1809, 920, 920, 1036, 1796, 1785,
	3098, 928, 2949, 2950, 2951, 3847, 2039, 3073, 2954, 3035,
	2955, 2928, 2886, 1036, 3608, 3117, 3118, 1832, 2595, 1485,
	920, 920, 151, 883, 1686, 1015, 3863, 1038, 1038, 813,
	3106, 3114, 3115, 3770, 3480, 3473, 3472, 3101, 3418, 2524,
	1771, 920, 2188, 2190, 223, 223, 223, 3112, 550, 551,
	1016, 566, 550, 566, 576, 581, 3129, 1252, 597, 2341,
	3128, 3610, 2341, 603, 1221, 2360, 3247, 1793, 1952, 223,
	1453, 1454, 1339, 2339, 618, 1710, 2359, 609, 3045, 1978,
	1977, 3769, 1959, 3391, 3413, 723, 3186, 3188, 1397, 223,
	1879, 3181, 3185, 1492, 1493, 3644, 3199, 3338, 1338, 2596,
	1221, 3064, 3316, 3157, 2381, 3206, 2363, 920, 3376, 1492,
	1493, 1489, 3193, 1486, 1831, 1040, 920, 3865, 3857, 561,
	3197, 216, 1495, 1742, 1035, 1035, 2407, 3225, 3249, 2399,
	2415, 2414, 1221, 1221, 1221, 2481, 3733, 3372, 3702, 2376,
	3196, 3365, 2398, 3241, 1017, 3244, 2397, 2365, 1221, 1707,
	1707, 671, 1494, 3212, 1104, 3699, 711, 3363, 3243, 3261,
	818, 820, 822, 3367, 3226, 544, 3240, 2523, 1494, 1339,
	1212, 572, 3227, 3258, 3259, 3260, 1104, 1339, 3664, 920,
	920, 614, 2367, 3373, 3577, 920, 920, 1710, 550, 550,
	920, 920, 3274, 920, 3228, 2366, 223, 920, 3218, 3230,
	1034, 1034, 3136, 2475, 2239, 3273, 1737, 1691, 920, 3242,
	1871, 3891, 3245, 3536, 2791, 3916, 3701, 3251, 3250, 3366,
	2821, 2690, 2691, 1038, 920, 1492, 1493, 3145, 1385, 3257,
	3256, 2333, 2334, 3264, 1384, 3262, 3263, 3290, 2331, 2332,
	3271, 1562, 3267, 3308, 3270, 3268, 3298, 2146, 3141, 2333,
	2331, 620, 3289, 2179, 3598, 3567, 1438, 3278, 3283, 1437,
	3414, 3410, 3409, 3304, 3302, 3233, 1704, 3140, 3046, 2877,
	1579, 1578, 3904, 3877, 3655, 616, 3563, 3521, 3519, 3442,
	1698, 1698, 3354, 3272, 1040, 3253, 3213, 3211, 3170, 3165,
	2948, 2922, 1040, 2921, 2539, 2538, 1104, 2485, 1104, 2460,
	2436, 2312, 2311, 2111, 1976, 1040, 1975, 1974, 3343, 1973,
	1896, 1895, 1894, 1877, 1857, 1104, 1856, 1852, 1851, 1850,
	1035, 1848, 1847, 1452, 1451, 1326, 1325, 1324, 1323, 1322,
	1321, 1320, 3328, 1319, 920, 1317, 1312, 1311, 1310, 1309,
	1308, 1268, 3368, 3358, 3359, 3382, 3369, 1267, 3173, 1266,
	3175, 1265, 1264, 3383, 1263, 1257, 1251, 3346, 1249, 1248,
	1104, 1095, 1094, 1093, 3392, 1104, 3394, 3395, 1092, 1063,
	1062, 998, 1743, 824, 810, 3541, 3342, 3340, 3341, 611,
	3339, 1221, 3375, 3393, 3345, 3349, 1446, 80, 3344, 2779,
	3371, 1259, 1038, 3415, 3350, 3416, 1034, 3360, 658, 151,
	1038, 615, 3202, 3374, 75, 1829, 1104, 3335, 3428, 3425,
	3381, 1221, 2881, 1038, 3169, 666, 3748, 2837, 2416, 1960,
	622, 1405, 1962, 2774, 3417, 2280, 3408, 619, 3725, 3312,
	2652, 3437, 3651, 3500, 2149, 1583, 2731, 920, 3424, 77,
	904, 3448, 950, 613, 3404, 3434, 3433, 3405, 3476, 3362,
	3156, 2513, 1104, 883, 3460, 3431, 1707, 883, 3479, 3430,
	1695, 3467, 1697, 870, 920, 920, 920, 3454, 3255, 1107,
	1753, 3444, 1188, 3429, 910, 3468, 1188, 3459, 3463, 3447,
	610, 1769, 1104, 3449, 1762, 1871, 2313, 920, 2199, 1035,
	920, 920, 927, 3461, 924, 1699, 1701, 1035, 1212, 926,
	920, 925, 1700, 1710, 1602, 617, 3370, 923, 920, 920,
	1035, 1694, 3232, 3231, 2444, 2479, 1304, 789, 621, 1757,
	2105, 2133, 2641, 1104, 1576, 885, 906, 3487, 2130, 612,
	1056, 3497, 895, 2757, 2935, 3135, 1104, 3464, 3492, 2018,
	674, 3377, 2687, 2136, 920, 1049, 2222, 2215, 2211, 2469,
	1462, 920, 1554, 2480, 1051, 1090, 888, 2103, 2109, 920,
	1567, 1710, 3509, 3503, 2621, 1034, 2217, 2028, 920, 2942,
	2777, 920, 3523, 1034, 1565, 2306, 3766, 920, 3054, 1861,
	3514, 1014, 1061, 1013, 1104, 1012, 1034, 1698, 3754, 597,
	3515, 3516, 3751, 3265, 2902, 1746, 1036, 2325, 1544, 3524,
	3518, 2909, 900, 1208, 2742, 3522, 3562, 2972, 2618, 2619,
	2217, 1036, 223, 1270, 223, 223, 1200, 602, 223, 223,
	912, 3572, 1543, 3592, 3546, 3545, 3583, 1104, 2221, 2423,
	1221, 2422, 223, 1230, 3661, 2904, 3564, 1077, 1076, 1075,
	3560, 1036, 2819, 3923, 3166, 191, 3597, 3569, 920, 920,
	2589, 1483, 1475, 188, 3609, 190, 1254, 189, 3438, 3628,
	3629, 920, 920, 3596, 3581, 3208, 3613, 3183, 2895, 1272,
	20, 1277, 3607, 3605, 223, 223, 3632, 1200, 920, 1710,
	19, 18, 97, 3591, 39, 17, 125, 223, 3603, 124,
	123, 122, 3606, 3611, 1314, 121, 3604, 120, 3612, 3626,
	119, 114, 920, 3463, 118, 920, 3552, 223, 223, 223,
	117, 1200, 223, 116, 115, 113, 3639, 112, 3657, 111,
	597, 110, 223, 223, 920, 109, 3643, 3668, 2713, 2714,
	2715, 108, 3640, 3641, 107, 3674, 106, 723, 3649, 105,
	104, 103, 102, 101, 2217, 100, 3656, 1221, 99, 98,
	593, 2267, 590, 55, 54, 96, 3673, 3688, 95, 16,
	920, 920, 37, 14, 59, 60, 13, 32, 33, 86,
	920, 85, 1704, 920, 31, 1221, 15, 30, 28, 11,
	9, 3703, 8, 1209, 3705, 1221, 1221, 34, 3686, 3681,
	3687, 1663, 3685, 3683, 12, 3684, 5, 156, 223, 155,
	157, 3716, 1221, 154, 79, 3696, 3697, 3695, 3700, 153,
	152, 3596, 223, 1704, 78, 920, 920, 3708, 3707, 3712,
	26, 3713, 10, 1036, 3721, 148, 3722, 3593, 3223, 74,
	150, 149, 147, 146, 145, 72, 144, 143, 73, 142,
	3743, 3720, 3714, 3715, 24, 6, 58, 7, 920, 920,
	3482, 920, 3730, 2980, 90, 3753, 3756, 3745, 3744, 3719,
	91, 35, 70, 69, 68, 23, 57, 1212, 22, 3764,
	181, 180, 179, 178, 173, 172, 177, 175, 174, 176,
	171, 183, 3768, 182, 3758, 3771, 3729, 3762, 185, 3783,
	169, 3784, 165, 164, 168, 170, 167, 920, 920, 920,
	166, 163, 184, 1188, 3785, 141, 65, 3554, 3555, 3775,
	140, 3778, 3772, 3780, 139, 3773, 138, 137, 3812, 3757,
	920, 136, 3761, 135, 3817, 3796, 3797, 3568, 134, 64,
	3570, 3571, 3799, 3798, 21, 2, 1, 0, 0, 0,
	0, 0, 0, 3834, 3815, 0, 883, 0, 3836, 3838,
	0, 0, 1188, 0, 0, 0, 0, 3844, 0, 0,
	0, 0, 1707, 920, 0, 0, 0, 0, 0, 3848,
	3843, 2481, 3835, 3840, 0, 0, 3841, 3842, 0, 0,
	0, 3845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3856, 3854, 3855, 3860, 0, 3858, 0, 3864, 3753,
	3866, 0, 3756, 1707, 3867, 3870, 550, 3868, 920, 3880,
	920, 0, 0, 3878, 3874, 3885, 3879, 3873, 0, 3881,
	0, 3883, 3768, 0, 2221, 3882, 3884, 223, 0, 223,
	0, 3886, 0, 223, 0, 0, 0, 0, 0, 0,
	0, 3898, 3900, 0, 0, 0, 1230, 1200, 223, 0,
	223, 0, 0, 0, 3908, 223, 1230, 566, 3911, 3905,
	223, 1230, 920, 920, 0, 0, 597, 3906, 3914, 0,
	920, 3910, 920, 920, 0, 3920, 0, 0, 3926, 0,
	0, 3927, 3929, 0, 1704, 0, 0, 3682, 0, 0,
	0, 0, 1188, 1698, 3928, 0, 0, 3930, 0, 0,
	3934, 1036, 1036, 3936, 2221, 2221, 0, 3939, 0, 0,
	3941, 920, 3933, 0, 3011, 3012, 3935, 3946, 0, 0,
	0, 3938, 0, 0, 0, 3942, 0, 3944, 1704, 1704,
	0, 0, 0, 0, 1698, 0, 0, 0, 0, 0,
	0, 0, 0, 3921, 3922, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1704, 1704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3943, 0, 0, 0, 0, 0, 1704, 1641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3074, 3075, 3076, 3077, 3078, 3079, 3080, 3081,
	3082, 3083, 3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091,
	3092, 0, 3096, 0, 2221, 2221, 2221, 223, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 67, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 71, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 1707, 223, 0, 3827, 0, 0,
	223, 0, 0, 0, 0, 0, 0, 2690, 2691, 0,
	2708, 2709, 2710, 0, 0, 0, 0, 1036, 223, 76,
	223, 0, 223, 0, 0, 0, 550, 0, 3294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1707, 1707,
	1897, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 92, 0, 0, 1707, 1707, 82,
	89, 0, 869, 0, 0, 1188, 2705, 0, 0, 0,
	0, 0, 597, 1102, 0, 0, 723, 1203, 0, 0,
	0, 1704, 0, 0, 0, 0, 0, 223, 1707, 1200,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 597, 0, 0, 0, 0, 83, 0,
	223, 0, 0, 0, 0, 1698, 0, 0, 0, 223,
	223, 0, 223, 0, 223, 0, 223, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1985, 0, 0, 1986, 2696, 1987, 0, 0,
	0, 0, 0, 1188, 0, 0, 0, 0, 223, 1698,
	1698, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1036, 0, 0, 581,
	0, 0, 0, 597, 1036, 0, 0, 0, 1698, 1698,
	0, 0, 0, 1704, 0, 0, 0, 1036, 0, 2711,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1698,
	0, 0, 1188, 0, 84, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2706, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1188, 0,
	1492, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 87, 0, 88, 0, 0, 0, 0, 0,
	0, 1707, 1523, 0, 0, 0, 0, 0, 0, 1495,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 718, 0, 1492, 1493, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1494,
	0, 0, 0, 0, 0, 0, 1523, 0, 0, 1514,
	2221, 2221, 194, 1495, 0, 2690, 2691, 1511, 2708, 2709,
	2710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 550, 0, 1188, 2707, 127, 3020, 0, 0, 0,
	0, 0, 0, 1494, 0, 0, 223, 0, 0, 162,
	0, 0, 0, 1514, 0, 550, 0, 193, 0, 0,
	3014, 1511, 223, 0, 550, 0, 0, 186, 0, 0,
	0, 0, 0, 1707, 0, 187, 223, 0, 0, 1517,
	1518, 1519, 1520, 0, 2705, 1188, 0, 0, 0, 1500,
	0, 0, 1698, 0, 0, 0, 0, 161, 2221, 2221,
	2221, 2221, 2221, 2221, 2221, 2221, 2221, 2221, 2221, 2221,
	2221, 2221, 2221, 2221, 2221, 2221, 2221, 0, 2221, 0,
	0, 0, 0, 1517, 1518, 1519, 1520, 1522, 1524, 0,
	0, 0, 0, 1500, 0, 0, 566, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2702, 2703, 2704,
	0, 1509, 1510, 0, 2701, 2699, 2700, 2692, 2693, 2694,
	2695, 2697, 2698, 0, 2696, 0, 0, 0, 0, 0,
	0, 1522, 1524, 0, 0, 0, 0, 0, 1515, 2349,
	0, 0, 869, 0, 0, 0, 869, 223, 0, 0,
	0, 0, 0, 0, 1678, 1509, 1510, 0, 223, 1704,
	0, 0, 0, 0, 1698, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 2711, 0, 0,
	0, 0, 1515, 0, 0, 223, 0, 0, 0, 0,
	1232, 0, 1236, 0, 1242, 0, 0, 0, 0, 3506,
	0, 223, 2429, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2706, 0, 0, 0, 1704, 0, 0,
	0, 0, 0, 0, 1230, 0, 0, 223, 1521, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	2464, 0, 0, 3532, 0, 0, 0, 1516, 0, 0,
	2349, 0, 550, 0, 0, 2484, 0, 0, 0, 0,
	0, 223, 0, 0, 223, 0, 223, 0, 223, 0,
	0, 0, 1521, 1200, 1365, 223, 223, 0, 0, 0,
	0, 0, 1372, 0, 0, 2506, 723, 0, 2349, 2349,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 1200,
	223, 0, 2707, 1230, 0, 1230, 0, 0, 1200, 0,
	1200, 0, 1200, 0, 0, 1704, 0, 0, 1424, 0,
	0, 0, 0, 1841, 0, 0, 0, 0, 0, 1707,
	0, 0, 0, 223, 223, 223, 223, 1200, 223, 0,
	223, 0, 0, 0, 1512, 1508, 0, 1505, 1503, 1504,
	1496, 1497, 1498, 1499, 1501, 1502, 0, 3648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 0, 0, 1707, 1512, 1508,
	0, 1505, 1503, 1504, 1496, 1497, 1498, 1499, 1501, 1502,
	0, 0, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 0,
	0, 0, 0, 0, 0, 2702, 2703, 2704, 0, 0,
	0, 0, 2701, 2699, 2700, 2692, 2693, 2694, 2695, 2697,
	2698, 0, 0, 1564, 0, 0, 0, 0, 0, 1577,
	0, 0, 0, 0, 0, 1188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 1492, 1493, 0,
	1698, 0, 0, 1535, 1536, 1537, 0, 0, 1230, 0,
	0, 67, 0, 0, 0, 0, 0, 1188, 0, 1523,
	0, 0, 0, 0, 71, 0, 1495, 0, 0, 0,
	0, 0, 1188, 1541, 2690, 2691, 0, 2708, 2709, 2710,
	0, 0, 0, 1492, 1493, 1707, 0, 0, 0, 0,
	1188, 0, 0, 0, 0, 3019, 1494, 0, 1698, 76,
	0, 0, 883, 0, 0, 1523, 1514, 0, 0, 0,
	0, 0, 1495, 0, 1511, 0, 883, 0, 0, 0,
	0, 0, 1635, 1635, 1635, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1494, 2705, 92, 0, 0, 0, 0, 82,
	89, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 2042, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1517, 1518, 1519, 1520,
	223, 0, 0, 0, 1188, 550, 1500, 0, 0, 0,
	550, 0, 0, 550, 0, 869, 550, 550, 83, 0,
	0, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	223, 1188, 0, 0, 0, 1532, 1698, 0, 1542, 0,
	0, 0, 1230, 2696, 1522, 1524, 0, 0, 0, 0,
	0, 0, 1500, 0, 0, 0, 0, 0, 0, 0,
	0, 1230, 0, 0, 0, 0, 0, 0, 1509, 1510,
	0, 0, 0, 0, 2147, 2221, 0, 0, 0, 0,
	2349, 2349, 223, 0, 1530, 0, 2349, 0, 0, 2823,
	1522, 1524, 0, 0, 0, 1515, 2711, 2349, 2823, 0,
	2349, 2823, 2823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 223, 223, 0, 0, 2221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2706, 0, 84, 0, 223, 1200, 0, 0,
	0, 1515, 2690, 2691, 0, 2708, 2709, 2710, 0, 2349,
	0, 223, 2349, 1277, 0, 0, 2349, 2349, 0, 0,
	0, 1188, 2690, 2691, 1188, 2708, 2709, 2710, 0, 2290,
	0, 158, 87, 0, 88, 0, 0, 2898, 0, 0,
	2900, 2349, 0, 0, 223, 1521, 0, 0, 223, 0,
	1277, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 718, 0, 1516, 0, 126, 2464, 0, 0,
	1200, 2705, 223, 0, 0, 2349, 0, 550, 0, 0,
	0, 0, 0, 0, 2349, 0, 1533, 0, 0, 0,
	0, 2705, 194, 223, 223, 1188, 0, 0, 0, 0,
	0, 2707, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 1188, 2221, 0, 127, 0, 0, 223, 2464,
	0, 0, 2464, 0, 2336, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 2696, 0, 0, 0, 187, 0, 0, 0, 0,
	2989, 0, 0, 1200, 223, 0, 223, 0, 0, 0,
	0, 2696, 0, 1531, 0, 0, 0, 1359, 0, 0,
	1534, 1512, 1508, 2712, 1505, 1503, 1504, 1496, 1497, 1498,
	1499, 1501, 1502, 0, 0, 2221, 2221, 0, 0, 223,
	0, 0, 0, 0, 2711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2702, 2703, 2704, 0, 0, 1492,
	1493, 2701, 2699, 2700, 2692, 2693, 2694, 2695, 2697, 2698,
	0, 1503, 1504, 1496, 1497, 1498, 1499, 1501, 1502, 0,
	2706, 1523, 1188, 0, 0, 0, 0, 0, 1495, 0,
	0, 0, 0, 0, 0, 3052, 0, 0, 0, 0,
	2706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2017, 0, 2021, 0, 0, 0, 0, 0, 1494, 2035,
	0, 0, 0, 0, 0, 0, 2044, 2045, 2046, 2047,
	2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057,
	2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067,
	2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077,
	2078, 0, 2084, 0, 2086, 2087, 2088, 2089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2113, 0, 0, 2707,
	223, 223, 0, 0, 0, 0, 0, 0, 1564, 0,
	0, 0, 2128, 0, 0, 0, 0, 0, 1500, 2707,
	0, 0, 550, 550, 0, 0, 0, 0, 2158, 2161,
	2164, 2167, 0, 2171, 2172, 2173, 2174, 2175, 2176, 2177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1230, 1522, 1524, 0, 0,
	0, 2213, 0, 2224, 2226, 2231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1188, 0, 0, 0, 0, 0,
	0, 0, 0, 597, 0, 0, 0, 1515, 0, 0,
	0, 0, 2702, 2703, 2704, 0, 1188, 0, 0, 2701,
	2699, 2700, 2692, 2693, 2694, 2695, 2697, 2698, 223, 0,
	0, 0, 2702, 2703, 2704, 0, 0, 0, 0, 2701,
	2699, 2700, 2692, 2693, 2694, 2695, 2697, 2698, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2690, 2691, 0,
	2708, 2709, 2710, 0, 0, 2349, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2506, 2506, 0, 0, 0, 1516, 723, 723, 2349,
	0, 0, 2464, 2464, 0, 0, 723, 2349, 0, 0,
	0, 0, 0, 0, 223, 0, 1188, 0, 1188, 0,
	0, 0, 0, 0, 0, 0, 2743, 0, 0, 0,
	0, 0, 0, 0, 0, 1188, 2705, 0, 1492, 1493,
	0, 1525, 1526, 1527, 1535, 1536, 1537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2769, 916,
	1523, 0, 0, 2431, 0, 2433, 0, 1495, 0, 0,
	0, 0, 0, 2782, 1541, 0, 0, 0, 0, 0,
	1188, 0, 0, 3313, 0, 1188, 0, 0, 0, 0,
	0, 2797, 0, 0, 0, 0, 0, 1494, 0, 0,
	0, 0, 222, 222, 222, 0, 0, 1514, 0, 0,
	0, 0, 0, 0, 0, 1511, 2696, 0, 0, 1496,
	1497, 1498, 1499, 1501, 1502, 0, 1188, 633, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 633, 0, 0,
	0, 1230, 0, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 2711,
	0, 0, 1188, 0, 0, 0, 0, 1517, 1518, 1519,
	1520, 0, 0, 2349, 2349, 2349, 0, 1500, 0, 0,
	0, 0, 0, 0, 0, 0, 1230, 0, 2554, 0,
	0, 0, 1188, 0, 2349, 2706, 2823, 0, 0, 1230,
	1230, 223, 2782, 66, 0, 0, 1532, 0, 0, 1542,
	0, 0, 223, 223, 0, 1522, 1524, 0, 0, 67,
	0, 0, 0, 2349, 0, 2349, 223, 0, 0, 0,
	0, 0, 71, 1188, 1545, 1546, 0, 0, 2349, 1509,
	1510, 0, 3440, 0, 1037, 0, 1188, 0, 0, 0,
	0, 223, 0, 929, 0, 1530, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 1515, 76, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 883, 0, 0, 0, 0, 0, 0, 0, 2601,
	2602, 1230, 0, 0, 1188, 2608, 224, 224, 224, 0,
	81, 0, 0, 0, 2707, 0, 0, 0, 0, 0,
	0, 0, 92, 0, 2622, 2623, 0, 82, 89, 0,
	2128, 224, 0, 0, 0, 0, 0, 0, 0, 2630,
	0, 0, 1203, 0, 0, 1102, 0, 1188, 0, 0,
	0, 224, 0, 0, 0, 2644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1521, 0, 0, 0,
	0, 0, 2656, 0, 0, 0, 83, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 2349, 0, 2823, 0, 0, 3526, 0,
	0, 0, 0, 0, 0, 0, 223, 1533, 0, 0,
	0, 0, 0, 0, 0, 0, 3031, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2702, 2703, 2704,
	0, 597, 0, 3047, 2701, 2699, 2700, 2692, 2693, 2694,
	2695, 2697, 2698, 0, 0, 0, 0, 2231, 2231, 2231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1635, 0, 0, 0, 0, 3526, 0, 0,
	2747, 0, 0, 0, 0, 2349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3600, 0, 0, 0, 0,
	0, 0, 84, 0, 1531, 0, 0, 1230, 1506, 1507,
	1513, 1534, 1512, 1508, 0, 1505, 1503, 1504, 1496, 1497,
	1498, 1499, 1501, 1502, 0, 0, 0, 0, 0, 0,
	223, 223, 0, 0, 0, 0, 0, 0, 0, 158,
	87, 0, 88, 0, 0, 0, 0, 0, 0, 0,
	0, 869, 0, 0, 3052, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 869, 0, 0, 0, 3526,
	718, 0, 0, 3138, 126, 0, 0, 0, 0, 883,
	0, 0, 0, 714, 0, 0, 0, 0, 0, 0,
	0, 0, 2840, 0, 0, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 66,
	0, 717, 716, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 67, 0, 0, 0, 0,
	3440, 0, 0, 0, 0, 0, 0, 162, 71, 0,
	0, 0, 0, 223, 0, 193, 0, 0, 0, 0,
	0, 0, 2823, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 76, 0, 0, 0, 1230, 0, 1230,
	222, 0, 222, 222, 0, 1357, 222, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	633, 0, 0, 0, 3739, 0, 81, 0, 0, 0,
	0, 1230, 0, 0, 223, 0, 0, 0, 92, 0,
	0, 0, 0, 82, 89, 0, 0, 0, 0, 0,
	0, 223, 2349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 222, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 83, 0, 3052, 222, 222, 222, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2349, 0, 2035, 0, 0, 0, 0, 0, 3006,
	3007, 0, 0, 3010, 0, 0, 0, 3013, 0, 0,
	0, 0, 3526, 0, 0, 0, 3017, 0, 0, 0,
	0, 0, 0, 0, 0, 3024, 0, 0, 2747, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	1230, 0, 2349, 3036, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 224, 1108, 224, 224, 84, 1108,
	224, 224, 1108, 3059, 3060, 0, 3061, 3062, 3063, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3069, 0, 0, 0, 3071, 3348,
	0, 0, 0, 0, 0, 158, 87, 0, 88, 0,
	0, 0, 0, 0, 0, 0, 3356, 0, 0, 0,
	0, 0, 0, 0, 0, 1108, 224, 224, 192, 3099,
	3100, 0, 0, 0, 0, 0, 718, 0, 0, 224,
	126, 0, 0, 0, 0, 0, 0, 3111, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	224, 224, 3120, 0, 224, 1108, 194, 0, 0, 1108,
	0, 0, 0, 1108, 224, 224, 0, 0, 0, 0,
	0, 0, 0, 1108, 0, 0, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 3150,
	0, 186, 0, 0, 0, 0, 1108, 0, 0, 187,
	0, 0, 0, 0, 3159, 3162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 715, 0, 1102, 0, 0, 0, 0, 0, 0,
	3182, 0, 0, 0, 224, 0, 0, 1030, 0, 0,
	0, 1492, 1493, 0, 0, 1657, 0, 1037, 0, 0,
	0, 222, 0, 3498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1523, 0, 0, 222, 1657, 222, 0,
	1495, 0, 0, 633, 0, 0, 0, 0, 633, 0,
	218, 218, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3498, 0, 0, 0, 0, 0,
	1494, 0, 0, 0, 0, 0, 0, 2042, 0, 0,
	1514, 0, 0, 0, 0, 0, 1635, 0, 1511, 0,
	0, 0, 0, 0, 0, 3252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2042, 0, 0, 0, 0,
	0, 3009, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1517, 1518, 1519, 1520, 0, 0, 0, 0, 3291, 3292,
	1500, 0, 0, 0, 3296, 3297, 0, 0, 0, 3300,
	3301, 0, 0, 0, 0, 0, 3305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 1524,
	0, 0, 0, 3314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 633, 0, 0, 0, 0,
	0, 0, 1509, 1510, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1108, 0, 0, 0,
	224, 224, 224, 0, 0, 0, 0, 224, 0, 1515,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 222, 1108, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1108, 222, 0, 222, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 633, 222, 0,
	222, 0, 222, 0, 222, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3162, 0, 1108, 224,
	0, 0, 0, 0, 0, 1108, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 3493, 3494, 3495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 2035, 224, 0, 3504,
	3505, 0, 224, 0, 0, 1512, 1508, 0, 1505, 1503,
	1504, 1496, 1497, 1498, 1499, 1501, 1502, 3513, 0, 0,
	224, 0, 224, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3162, 224, 0, 0, 0, 0, 0, 0, 3551, 0,
	0, 0, 0, 0, 0, 0, 0, 3558, 0, 0,
	869, 1108, 0, 1108, 0, 1108, 3565, 0, 0, 0,
	0, 0, 0, 0, 1108, 1108, 0, 0, 1108, 224,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 1108, 1108, 1108, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 224, 0, 224, 0, 224, 0, 224, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 1099, 0,
	0, 0, 0, 0, 1207, 0, 0, 3162, 3162, 0,
	0, 0, 0, 0, 1037, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1037, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3660, 0, 0, 3663, 0, 0, 0, 1108, 0,
	0, 0, 0, 1306, 0, 0, 0, 1492, 1493, 0,
	0, 0, 0, 3162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1330, 1330, 1330, 0, 0, 0, 1523,
	0, 0, 0, 0, 0, 0, 1495, 0, 1363, 1364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3162,
	0, 0, 3162, 0, 0, 0, 1494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1514, 0, 0, 0,
	0, 0, 0, 0, 1511, 222, 1108, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 2035, 0, 0, 0, 222,
	0, 0, 0, 0, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 3008, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 869, 633,
	0, 0, 0, 0, 0, 0, 1517, 1518, 1519, 1520,
	0, 0, 0, 0, 0, 1108, 1500, 0, 0, 228,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 224, 0,
	0, 1108, 0, 0, 0, 0, 3795, 3795, 3795, 0,
	0, 0, 0, 0, 1522, 1524, 0, 0, 0, 222,
	0, 0, 222, 0, 222, 0, 222, 0, 0, 3816,
	0, 0, 0, 222, 222, 0, 0, 0, 1509, 1510,
	0, 0, 0, 0, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 1515, 1108, 626, 0, 0,
	0, 0, 3795, 0, 0, 0, 222, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1108, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 222, 222, 222, 222, 0, 222, 3162, 222, 3162,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 1108, 222,
	0, 0, 0, 0, 0, 1521, 0, 222, 0, 0,
	1108, 0, 0, 224, 0, 0, 0, 0, 0, 1673,
	0, 3795, 3915, 0, 1516, 0, 0, 0, 0, 3919,
	905, 94, 0, 0, 1682, 0, 1207, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 704, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 224, 687, 224, 0,
	224, 0, 0, 0, 0, 0, 0, 224, 224, 1108,
	1108, 0, 1108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1108, 0, 0, 0, 0, 0,
	0, 688, 0, 94, 224, 0, 0, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	690, 1512, 1508, 0, 1505, 1503, 1504, 1496, 1497, 1498,
	1499, 1501, 1502, 0, 0, 0, 0, 709, 0, 0,
	0, 0, 0, 0, 0, 224, 224, 224, 224, 0,
	224, 0, 224, 0, 691, 0, 0, 0, 0, 0,
	0, 0, 845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 864, 0, 0, 692, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 1037, 0, 693, 0, 0, 694, 0,
	0, 0, 0, 0, 0, 1024, 0, 620, 1037, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 952, 0,
	0, 0, 1492, 1493, 0, 1525, 1526, 1527, 1535, 1536,
	1537, 708, 0, 0, 0, 0, 0, 1859, 1657, 0,
	0, 1866, 0, 1528, 1523, 0, 0, 0, 0, 0,
	0, 1495, 0, 0, 0, 0, 0, 0, 1541, 0,
	0, 0, 0, 0, 1306, 0, 1885, 0, 1885, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1494, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 1514, 0, 0, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 0, 0, 1207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 222, 222, 0, 0, 0, 0, 0,
	0, 1657, 696, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 222, 0, 1938, 0, 0, 0,
	0, 0, 712, 0, 697, 0, 0, 0, 0, 222,
	0, 1517, 1518, 1519, 1520, 0, 1955, 0, 0, 0,
	0, 1500, 0, 0, 0, 0, 1965, 0, 1967, 0,
	1969, 0, 1971, 619, 1972, 0, 0, 0, 0, 0,
	698, 0, 222, 699, 0, 0, 222, 0, 1108, 706,
	1532, 0, 700, 1542, 0, 0, 0, 0, 0, 1522,
	1524, 0, 0, 1041, 1989, 0, 0, 0, 0, 0,
	1037, 1105, 0, 0, 1538, 1105, 1539, 0, 1222, 0,
	1108, 0, 0, 1509, 1510, 701, 707, 0, 0, 0,
	0, 222, 222, 702, 0, 1108, 0, 0, 0, 1530,
	0, 0, 0, 0, 0, 0, 703, 0, 0, 0,
	1515, 710, 0, 1108, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 621, 0, 0, 0, 0, 0,
	0, 1222, 0, 0, 1540, 705, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 1529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 222, 0, 0, 0, 0, 0,
	0, 1222, 0, 0, 0, 1222, 224, 224, 224, 1222,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 1222,
	0, 0, 0, 0, 0, 0, 0, 222, 224, 0,
	1521, 0, 0, 0, 0, 0, 0, 1108, 0, 0,
	0, 0, 0, 224, 0, 0, 1108, 0, 0, 1516,
	0, 0, 0, 0, 0, 0, 0, 0, 1108, 0,
	0, 0, 1222, 0, 1108, 0, 0, 0, 0, 0,
	0, 1533, 0, 0, 0, 0, 224, 0, 0, 1108,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2287, 0, 0, 224, 224, 0, 0, 0,
	0, 0, 94, 0, 94, 0, 94, 0, 0, 0,
	0, 0, 1108, 1108, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 1531, 0,
	0, 0, 1506, 1507, 1513, 1534, 1512, 1508, 0, 1505,
	1503, 1504, 1496, 1497, 1498, 1499, 1501, 1502, 1037, 1037,
	0, 0, 2665, 0, 0, 0, 2666, 0, 0, 0,
	0, 0, 0, 0, 1108, 0, 224, 1108, 224, 0,
	0, 0, 0, 0, 0, 0, 864, 94, 94, 0,
	0, 0, 0, 0, 0, 0, 94, 0, 0, 0,
	0, 0, 0, 0, 94, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1108, 0,
	0, 1207, 0, 0, 0, 0, 0, 0, 94, 0,
	0, 921, 0, 0, 0, 1108, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	1041, 0, 0, 1866, 1041, 0, 0, 1041, 0, 0,
	2455, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 1105, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 626, 0, 0, 222, 2486, 626, 0,
	1330, 0, 1330, 222, 1330, 0, 0, 845, 0, 0,
	1222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1041, 0, 0, 0, 1037, 0, 0, 1557, 0, 0,
	0, 1105, 0, 0, 0, 0, 0, 0, 2533, 0,
	0, 0, 0, 0, 1563, 0, 0, 0, 1569, 0,
	0, 0, 0, 0, 2541, 0, 2544, 0, 0, 0,
	1041, 0, 222, 0, 1041, 1108, 0, 0, 1041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2565,
	1207, 2567, 1207, 0, 2570, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1041, 0, 0, 0, 0, 0, 1330, 0, 0,
	0, 0, 0, 0, 0, 2598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 1222, 0, 1655, 0, 1658, 0,
	94, 1105, 0, 0, 0, 0, 0, 1108, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 1037, 0, 0, 0, 0, 0, 0,
	224, 1037, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 1108, 1657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1108, 1108, 1108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 1108, 0, 0, 0, 0, 224, 1108, 0, 0,
	222, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 1108,
	0, 0, 0, 0, 0, 0, 0, 1222, 0, 1222,
	0, 1222, 0, 0, 0, 0, 0, 0, 0, 222,
	1222, 1222, 0, 0, 1222, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1222, 1222, 1222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1492, 1493, 0, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1523, 0, 0, 0, 0, 0, 0,
	1495, 0, 0, 0, 1041, 0, 1041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1041, 0, 0, 0, 0, 0, 0, 0, 0,
	1494, 0, 0, 0, 0, 0, 1711, 0, 0, 1108,
	1514, 1108, 0, 0, 0, 0, 0, 0, 1511, 1041,
	0, 0, 0, 0, 0, 0, 0, 0, 1108, 0,
	0, 0, 0, 0, 1105, 0, 0, 0, 2815, 0,
	1041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 2607, 0, 224, 0, 0, 0, 0, 0, 0,
	2853, 2855, 2455, 1108, 224, 224, 0, 0, 1108, 0,
	1517, 1518, 1519, 1520, 0, 0, 0, 0, 224, 0,
	1500, 0, 0, 0, 1108, 0, 0, 0, 864, 0,
	864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 1108,
	224, 0, 1105, 0, 1108, 0, 0, 0, 1522, 1524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2910, 0, 0, 1106, 2914, 0, 0, 1106, 0, 0,
	1223, 0, 1509, 1510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1108, 0, 0, 222, 222,
	0, 0, 0, 1041, 0, 0, 0, 0, 0, 1515,
	1041, 0, 0, 0, 0, 0, 0, 0, 0, 1207,
	1207, 1105, 0, 0, 0, 1108, 0, 0, 0, 0,
	0, 0, 0, 1223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2968, 0, 0, 1105, 0, 0,
	0, 0, 0, 0, 0, 845, 0, 0, 845, 845,
	0, 0, 0, 0, 0, 0, 1108, 0, 0, 0,
	0, 0, 0, 1223, 0, 0, 0, 1223, 0, 1108,
	0, 1223, 0, 222, 0, 0, 0, 0, 224, 0,
	2992, 1223, 1207, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 1222, 2102, 0, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 3004, 0, 1108, 0, 864,
	0, 0, 0, 0, 1223, 0, 1041, 0, 1041, 1563,
	1041, 0, 1105, 1563, 0, 0, 0, 0, 0, 1041,
	1041, 0, 0, 1041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1041, 1041, 1041, 0,
	1108, 0, 0, 1108, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1105, 0, 0, 0, 0, 222,
	0, 0, 224, 224, 0, 0, 1222, 0, 0, 0,
	0, 0, 0, 0, 0, 1024, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1658, 0, 0, 0, 1512, 1508, 0, 1505, 1503,
	1504, 1496, 1497, 1498, 1499, 1501, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 1711, 1711, 1041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1222, 1222, 224, 1222, 0,
	1108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 1108, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1108, 1108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1108, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 94,
	0, 1041, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 94, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 1106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 94, 0, 94, 0, 0,
	224, 0, 0, 1041, 0, 0, 0, 2455, 0, 0,
	1041, 0, 1223, 0, 0, 0, 3222, 0, 0, 1041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3234, 0, 1106, 0, 94, 1041, 0, 94, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3276, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	66, 1041, 43, 42, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 67, 0, 128, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 71,
	0, 1041, 0, 0, 0, 0, 0, 0, 0, 61,
	0, 0, 0, 0, 0, 0, 45, 0, 130, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1711, 0,
	0, 0, 44, 0, 76, 0, 1223, 0, 0, 0,
	0, 0, 0, 1106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1041, 0, 0, 47, 62, 0, 0,
	0, 0, 48, 0, 1105, 1041, 0, 81, 0, 0,
	0, 131, 0, 0, 0, 0, 0, 0, 46, 92,
	0, 0, 0, 0, 82, 89, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1105, 0, 0, 0,
	0, 0, 0, 0, 2102, 0, 0, 0, 0, 0,
	0, 1105, 0, 0, 0, 49, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1563, 0, 0, 0, 1105,
	0, 0, 0, 83, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1041, 1041, 0, 1041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3396, 0, 1041,
	0, 0, 0, 0, 0, 0, 0, 0, 2455, 1223,
	0, 1223, 0, 1223, 0, 0, 0, 0, 0, 0,
	0, 0, 1223, 1223, 0, 0, 1223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1223,
	1223, 1223, 0, 0, 0, 0, 0, 2455, 0, 0,
	0, 0, 0, 0, 3455, 0, 0, 0, 0, 0,
	0, 0, 0, 1105, 0, 0, 0, 0, 0, 0,
	0, 0, 1222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1222, 0, 0, 0, 0, 84,
	1105, 0, 0, 0, 0, 0, 0, 0, 0, 50,
	0, 0, 0, 0, 1024, 1222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1222, 0, 0, 1024,
	63, 0, 0, 0, 0, 53, 158, 87, 0, 88,
	0, 0, 51, 0, 0, 0, 132, 0, 0, 0,
	0, 0, 52, 0, 0, 0, 1106, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 56, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 1222, 1222,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 3533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1105, 0, 0, 1105, 162, 0, 94, 94, 0, 0,
	94, 0, 193, 0, 1106, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 94, 94,
	0, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 0, 3, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1105, 0, 0, 0, 0, 0,
	0, 0, 0, 1106, 0, 0, 3638, 1207, 0, 0,
	0, 1105, 1041, 1041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1041, 0, 1106,
	0, 1024, 0, 0, 864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1041, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1041, 0, 0,
	1041, 94, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1711, 0, 0, 0, 1041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1711, 0, 0, 0, 3704,
	0, 0, 0, 0, 1106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 0, 0,
	0, 1105, 0, 0, 0, 0, 1492, 1493, 0, 1525,
	1526, 1527, 1535, 1536, 1537, 0, 0, 0, 649, 0,
	0, 0, 0, 0, 0, 0, 0, 1528, 1523, 0,
	0, 0, 1041, 0, 0, 1495, 1106, 0, 0, 0,
	0, 1041, 1541, 0, 0, 0, 0, 0, 1223, 0,
	3747, 0, 650, 1041, 668, 0, 0, 0, 0, 1041,
	0, 0, 0, 0, 0, 1494, 0, 3765, 0, 0,
	0, 0, 0, 0, 1041, 1514, 0, 0, 651, 0,
	0, 652, 0, 1511, 3777, 1041, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 675, 1041,
	0, 0, 0, 0, 653, 0, 0, 0, 0, 0,
	0, 0, 0, 1222, 0, 673, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1223, 1223, 0,
	1223, 0, 0, 0, 0, 0, 654, 1041, 1041, 0,
	0, 0, 1223, 0, 0, 1517, 1518, 1519, 1520, 1222,
	0, 94, 0, 0, 0, 1500, 655, 0, 0, 656,
	0, 0, 0, 0, 677, 0, 0, 0, 620, 1024,
	1024, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1222, 1222, 1222, 1532, 0, 0, 1542, 0, 1041,
	0, 0, 1041, 1522, 1524, 0, 0, 1222, 0, 0,
	0, 0, 0, 1105, 0, 0, 0, 0, 1538, 0,
	1539, 0, 0, 0, 0, 0, 0, 1509, 1510, 0,
	1492, 1493, 0, 0, 0, 1105, 0, 0, 0, 0,
	0, 0, 0, 1530, 676, 0, 0, 0, 0, 0,
	0, 0, 1523, 659, 1515, 0, 1711, 0, 0, 1495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1041, 0, 0, 0, 0, 1540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1494,
	1041, 0, 657, 0, 0, 1529, 0, 0, 0, 1514,
	1711, 1711, 0, 660, 0, 0, 0, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 661, 0, 0, 0, 1711,
	1711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1521, 0, 0, 0, 0, 0,
	2600, 0, 0, 0, 619, 1105, 0, 1105, 0, 0,
	1711, 0, 0, 1516, 669, 0, 0, 0, 0, 1517,
	1518, 1519, 1520, 662, 1105, 1024, 0, 0, 0, 1500,
	0, 0, 0, 0, 0, 1533, 0, 1041, 1041, 0,
	0, 0, 667, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 663, 0, 0, 680,
	94, 679, 0, 0, 664, 0, 0, 1522, 1524, 1105,
	1041, 0, 0, 0, 1105, 0, 0, 665, 0, 0,
	0, 0, 672, 0, 0, 0, 0, 681, 0, 678,
	1222, 1509, 1510, 0, 0, 621, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1105, 1106, 0, 1515, 0,
	1222, 0, 1531, 0, 0, 0, 1506, 1507, 1513, 1534,
	1512, 1508, 0, 1505, 1503, 1504, 1496, 1497, 1498, 1499,
	1501, 1502, 0, 0, 0, 0, 2124, 0, 1106, 0,
	2125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1105, 0, 1106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1106, 1041, 0, 0, 0, 0, 0, 94, 0,
	0, 1105, 0, 1711, 1024, 0, 0, 0, 0, 0,
	0, 0, 1024, 0, 0, 0, 0, 0, 1521, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1041, 0,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 1105, 1041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1105, 0, 0, 0, 0,
	1041, 1041, 1041, 0, 0, 0, 767, 0, 803, 0,
	0, 0, 0, 0, 0, 0, 1041, 0, 0, 0,
	0, 0, 1041, 0, 0, 1106, 0, 0, 0, 0,
	0, 774, 0, 0, 1223, 0, 0, 0, 0, 0,
	0, 0, 0, 1105, 1041, 0, 1223, 786, 772, 94,
	0, 0, 1106, 0, 0, 1711, 0, 0, 0, 94,
	0, 0, 0, 0, 0, 0, 0, 1223, 0, 0,
	0, 0, 773, 0, 0, 0, 0, 776, 1223, 94,
	0, 0, 809, 0, 0, 0, 1105, 0, 0, 1222,
	783, 784, 0, 0, 1512, 1508, 796, 1505, 1503, 1504,
	1496, 1497, 1498, 1499, 1501, 1502, 0, 0, 0, 0,
	804, 778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1223, 1223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1041, 0, 0, 0, 0, 0, 0, 0,
	1041, 0, 0, 0, 1041, 0, 1041, 0, 0, 0,
	0, 0, 0, 1041, 0, 0, 0, 0, 779, 0,
	0, 0, 1106, 1041, 0, 1106, 771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 780, 781, 1222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 788, 787, 0, 0, 0, 0, 0, 1041, 782,
	0, 0, 0, 1041, 1222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1222, 1222, 808, 1492, 1493, 1041,
	1525, 1526, 1527, 1535, 1536, 1537, 1106, 0, 0, 0,
	0, 1222, 0, 0, 0, 0, 805, 0, 1528, 1523,
	0, 0, 0, 1106, 1041, 0, 1495, 0, 0, 1041,
	0, 0, 0, 1541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2102, 0, 0, 0, 0, 0, 1494, 0, 0, 777,
	0, 0, 0, 0, 0, 0, 1514, 0, 0, 0,
	1041, 0, 0, 0, 1511, 0, 775, 0, 0, 0,
	800, 801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1041, 0, 0, 0, 0, 0, 0, 798, 0, 0,
	0, 0, 0, 0, 794, 0, 0, 791, 0, 0,
	0, 1711, 0, 792, 0, 0, 769, 0, 806, 0,
	0, 0, 0, 0, 0, 0, 1517, 1518, 1519, 1520,
	0, 1041, 0, 0, 770, 0, 1500, 0, 0, 0,
	0, 0, 0, 1106, 1041, 793, 0, 0, 94, 0,
	790, 0, 0, 0, 0, 0, 0, 0, 0, 807,
	0, 0, 0, 0, 0, 1532, 0, 795, 1542, 1711,
	0, 0, 0, 0, 1522, 1524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 797, 1538,
	0, 1539, 1041, 0, 0, 0, 0, 0, 1509, 1510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	799, 0, 0, 0, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1041, 0, 0, 1041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1540,
	0, 0, 0, 0, 0, 1223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1529, 0, 0, 0,
	94, 0, 0, 94, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1711, 0, 0,
	0, 1223, 1492, 1493, 0, 1525, 1526, 1527, 1535, 1536,
	1537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1528, 1523, 1521, 0, 0, 0, 0,
	0, 1495, 0, 1223, 1223, 1223, 0, 0, 1541, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 1223,
	0, 0, 0, 0, 0, 1106, 0, 0, 0, 0,
	0, 1494, 0, 0, 0, 1041, 1533, 0, 0, 0,
	0, 1514, 0, 0, 0, 0, 0, 1106, 0, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1041, 1041, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1517, 1518, 1519, 1520, 0, 0, 0, 0, 0,
	0, 1500, 0, 1531, 0, 0, 0, 1506, 1507, 1513,
	1534, 1512, 1508, 0, 1505, 1503, 1504, 1496, 1497, 1498,
	1499, 1501, 1502, 0, 0, 0, 0, 0, 0, 0,
	1532, 3319, 0, 1542, 0, 0, 0, 0, 0, 1522,
	1524, 0, 0, 0, 0, 0, 0, 1106, 0, 1106,
	0, 0, 0, 0, 1538, 0, 1539, 0, 0, 0,
	0, 0, 0, 1509, 1510, 0, 1106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1106, 0, 0, 1540, 0, 1106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1529, 1223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1106, 0, 0,
	0, 0, 1223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1521, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1516,
	0, 0, 0, 1106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1531, 0,
	0, 0, 1506, 1507, 1513, 1534, 1512, 1508, 0, 1505,
	1503, 1504, 1496, 1497, 1498, 1499, 1501, 1502, 0, 0,
	0, 0, 0, 0, 0, 1106, 3022, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1106, 0,
	0, 1223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1103, 0, 1223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1223, 1223, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 1109, 238, 239,
	1110, 1111, 1112, 1223, 1113, 493, 1114, 1115, 1116, 1117,
	240, 241, 243, 242, 244, 245, 246, 494, 495, 0,
	496, 247, 497, 1118, 248, 249, 250, 251, 252, 1119,
	1120, 0, 253, 498, 499, 500, 1121, 254, 255, 501,
	1122, 1189, 1123, 256, 257, 258, 259, 260, 261, 262,
	0, 1124, 264, 265, 266, 263, 1125, 267, 0, 268,
	269, 270, 1126, 271, 982, 272, 273, 1127, 1128, 1130,
	1129, 1131, 1132, 1133, 274, 275, 276, 277, 0, 278,
	502, 503, 1134, 282, 279, 280, 1135, 283, 281, 1136,
	284, 1137, 1138, 285, 286, 287, 1139, 288, 289, 1140,
	290, 291, 1141, 292, 293, 504, 294, 295, 297, 299,
	296, 300, 301, 302, 303, 505, 506, 1142, 229, 1143,
	0, 0, 0, 0, 304, 305, 306, 507, 0, 0,
	0, 307, 1144, 308, 1145, 1146, 983, 309, 310, 508,
	509, 311, 312, 1147, 313, 510, 1148, 511, 314, 1149,
	315, 316, 317, 318, 319, 512, 513, 514, 372, 985,
	320, 321, 1150, 322, 323, 324, 325, 0, 0, 0,
	230, 326, 327, 329, 1151, 984, 328, 515, 516, 1152,
	517, 1153, 330, 986, 518, 987, 331, 332, 333, 988,
	334, 0, 0, 0, 335, 336, 337, 338, 339, 1154,
	341, 340, 1155, 342, 519, 989, 343, 344, 990, 1156,
	345, 346, 347, 1157, 1158, 348, 349, 350, 351, 0,
	352, 353, 355, 357, 354, 356, 361, 358, 359, 360,
	363, 0, 362, 991, 364, 365, 368, 369, 367, 992,
	366, 1159, 231, 993, 370, 1160, 520, 371, 521, 373,
	374, 1161, 0, 375, 0, 1162, 1163, 377, 378, 379,
	1164, 1165, 380, 381, 522, 994, 382, 995, 523, 383,
	384, 376, 385, 386, 387, 388, 389, 390, 391, 1166,
	392, 393, 524, 525, 526, 394, 527, 395, 396, 1167,
	397, 0, 398, 399, 400, 401, 402, 403, 404, 528,
	405, 406, 1168, 0, 0, 0, 0, 0, 407, 0,
	409, 410, 411, 408, 412, 413, 414, 415, 1169, 416,
	417, 996, 418, 419, 420, 421, 529, 422, 0, 423,
	427, 428, 429, 430, 431, 432, 433, 1170, 435, 436,
	434, 437, 438, 439, 1171, 440, 424, 425, 441, 442,
	997, 443, 444, 530, 0, 445, 1172, 446, 447, 448,
	449, 426, 450, 455, 531, 451, 452, 453, 454, 532,
	1173, 457, 458, 0, 456, 1174, 459, 460, 461, 462,
	463, 298, 464, 1175, 465, 533, 534, 535, 536, 1176,
	472, 1177, 466, 467, 537, 468, 538, 1178, 469, 470,
	471, 0, 473, 474, 1179, 1180, 475, 476, 477, 479,
	480, 478, 481, 1181, 482, 1182, 0, 483, 484, 485,
	539, 540, 541, 1183, 487, 486, 542, 1184, 1185, 1186,
	1187, 488, 489, 543, 490, 491, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1103, 0, 0, 0, 0, 0, 0, 0, 2265, 0,
	0, 0, 0, 0, 0, 0, 2266, 232, 233, 234,
	235, 236, 237, 1109, 238, 239, 1110, 1111, 1112, 0,
	1113, 493, 1114, 1115, 1116, 1117, 240, 241, 243, 242,
	244, 245, 246, 494, 495, 0, 496, 247, 497, 1118,
	248, 249, 250, 251, 252, 1119, 1120, 0, 253, 498,
	499, 500, 1121, 254, 255, 501, 1122, 1189, 1123, 256,
	257, 258, 259, 260, 261, 262, 0, 1124, 264, 265,
	266, 263, 1125, 267, 0, 268, 269, 270, 1126, 271,
	982, 272, 273, 1127, 1128, 1130, 1129, 1131, 1132, 1133,
	274, 275, 276, 277, 0, 278, 502, 503, 1134, 282,
	279, 280, 1135, 283, 281, 1136, 284, 1137, 1138, 285,
	286, 287, 1139, 288, 289, 1140, 290, 291, 1141, 292,
	293, 504, 294, 295, 297, 299, 296, 300, 301, 302,
	303, 505, 506, 1142, 229, 1143, 0, 0, 0, 0,
	304, 305, 306, 507, 0, 0, 0, 307, 1144, 308,
	1145, 1146, 983, 309, 310, 508, 509, 311, 312, 1147,
	313, 510, 1148, 511, 314, 1149, 315, 316, 317, 318,
	319, 512, 513, 514, 372, 985, 320, 321, 1150, 322,
	323, 324, 325, 0, 0, 0, 230, 326, 327, 329,
	1151, 984, 328, 515, 516, 1152, 517, 1153, 330, 986,
	518, 987, 331, 332, 333, 988, 334, 0, 0, 0,
	335, 336, 337, 338, 339, 1154, 341, 340, 1155, 342,
	519, 989, 343, 344, 990, 1156, 345, 346, 347, 1157,
	1158, 348, 349, 350, 351, 0, 352, 353, 355, 357,
	354, 356, 361, 358, 359, 360, 363, 0, 362, 991,
	364, 365, 368, 369, 367, 992, 366, 1159, 231, 993,
	370, 1160, 520, 371, 521, 373, 374, 1161, 0, 375,
	0, 1162, 1163, 377, 378, 379, 1164, 1165, 380, 381,
	522, 994, 382, 995, 523, 383, 384, 376, 385, 386,
	387, 388, 389, 390, 391, 1166, 392, 393, 524, 525,
	526, 394, 527, 395, 396, 1167, 397, 0, 398, 399,
	400, 401, 402, 403, 404, 528, 405, 406, 1168, 0,
	0, 0, 0, 0, 407, 0, 409, 410, 411, 408,
	412, 413, 414, 415, 1169, 416, 417, 996, 418, 419,
	420, 421, 529, 422, 0, 423, 427, 428, 429, 430,
	431, 432, 433, 1170, 435, 436, 434, 437, 438, 439,
	1171, 440, 424, 425, 441, 442, 997, 443, 444, 530,
	0, 445, 1172, 446, 447, 448, 449, 426, 450, 455,
	531, 451, 452, 453, 454, 532, 1173, 457, 458, 0,
	456, 1174, 459, 460, 461, 462, 463, 298, 464, 1175,
	465, 533, 534, 535, 536, 1176, 472, 1177, 466, 467,
	537, 468, 538, 1178, 469, 470, 471, 0, 473, 474,
	1179, 1180, 475, 476, 477, 479, 480, 478, 481, 1181,
	482, 1182, 0, 483, 484, 485, 539, 540, 541, 1183,
	487, 486, 542, 1184, 1185, 1186, 1187, 488, 489, 543,
	490, 491, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1103, 0, 0, 0, 0, 3030,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3032, 232, 233, 234, 235, 236, 237, 1109, 238, 239,
	1110, 1111, 1112, 0, 1113, 493, 1114, 1115, 1116, 1117,
	240, 241, 243, 242, 244, 245, 246, 494, 495, 0,
	496, 247, 497, 1118, 248, 249, 250, 251, 252, 1119,
	1120, 0, 253, 498, 499, 500, 1121, 254, 255, 501,
	1122, 1189, 1123, 256, 257, 258, 259, 260, 261, 262,
	0, 1124, 264, 265, 266, 263, 1125, 267, 0, 268,
	269, 270, 1126, 271, 982, 272, 273, 1127, 1128, 1130,
	1129, 1131, 1132, 1133, 274, 275, 276, 277, 0, 278,
	502, 503, 1134, 282, 279, 280, 1135, 283, 281, 1136,
	284, 1137, 1138, 285, 286, 287, 1139, 288, 289, 1140,
	290, 291, 1141, 292, 293, 504, 294, 295, 297, 299,
	296, 300, 301, 302, 303, 505, 506, 1142, 229, 1143,
	0, 0, 0, 0, 304, 305, 306, 507, 0, 0,
	0, 307, 1144, 308, 1145, 1146, 983, 309, 310, 508,
	509, 311, 312, 1147, 313, 510, 1148, 511, 314, 1149,
	315, 316, 317, 318, 319, 512, 513, 514, 372, 985,
	320, 321, 1150, 322, 323, 324, 325, 0, 0, 0,
	230, 326, 327, 329, 1151, 984, 328, 515, 516, 1152,
	517, 1153, 330, 986, 518, 987, 331, 332, 333, 988,
	334, 0, 0, 0, 335, 336, 337, 338, 339, 1154,
	341, 340, 1155, 342, 519, 989, 343, 344, 990, 1156,
	345, 346, 347, 1157, 1158, 348, 349, 350, 351, 0,
	352, 353, 355, 357, 354, 356, 361, 358, 359, 360,
	363, 0, 362, 991, 364, 365, 368, 369, 367, 992,
	366, 1159, 231, 993, 370, 1160, 520, 371, 521, 373,
	374, 1161, 0, 375, 0, 1162, 1163, 377, 378, 379,
	1164, 1165, 380, 381, 522, 994, 382, 995, 523, 383,
	384, 376, 385, 386, 387, 388, 389, 390, 391, 1166,
	392, 393, 524, 525, 526, 394, 527, 395, 396, 1167,
	397, 0, 398, 399, 400, 401, 402, 403, 404, 528,
	405, 406, 1168, 0, 0, 0, 0, 0, 407, 0,
	409, 410, 411, 408, 412, 413, 414, 415, 1169, 416,
	417, 996, 418, 419, 420, 421, 529, 422, 0, 423,
	427, 428, 429, 430, 431, 432, 433, 1170, 435, 436,
	434, 437, 438, 439, 1171, 440, 424, 425, 441, 442,
	997, 443, 444, 530, 0, 445, 1172, 446, 447, 448,
	449, 426, 450, 455, 531, 451, 452, 453, 454, 532,
	1173, 457, 458, 0, 456, 1174, 459, 460, 461, 462,
	463, 298, 464, 1175, 465, 533, 534, 535, 536, 1176,
	472, 1177, 466, 467, 537, 468, 538, 1178, 469, 470,
	471, 0, 473, 474, 1179, 1180, 475, 476, 477, 479,
	480, 478, 481, 1181, 482, 1182, 0, 483, 484, 485,
	539, 540, 541, 1183, 487, 486, 542, 1184, 1185, 1186,
	1187, 488, 489, 543, 490, 491, 492, 0, 0, 0,
	0, 0, 1103, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3347, 232,
	233, 234, 235, 236, 237, 1109, 238, 239, 1110, 1111,
	1112, 0, 1113, 493, 1114, 1115, 1116, 1117, 240, 241,
	243, 242, 244, 245, 246, 494, 495, 0, 496, 247,
	497, 1118, 248, 249, 250, 251, 252, 1119, 1120, 0,
	253, 498, 499, 500, 1121, 254, 255, 501, 1122, 1189,
	1123, 256, 257, 258, 259, 260, 261, 262, 0, 1124,
	264, 265, 266, 263, 1125, 267, 0, 268, 269, 270,
	1126, 271, 982, 272, 273, 1127, 1128, 1130, 1129, 1131,
	1132, 1133, 274, 275, 276, 277, 0, 278, 502, 503,
	1134, 282, 279, 280, 1135, 283, 281, 1136, 284, 1137,
	1138, 285, 286, 287, 1139, 288, 289, 1140, 290, 291,
	1141, 292, 293, 504, 294, 295, 297, 299, 296, 300,
	301, 302, 303, 505, 506, 1142, 229, 1143, 0, 0,
	0, 0, 304, 305, 306, 507, 0, 0, 0, 307,
	1144, 308, 1145, 1146, 983, 309, 310, 508, 509, 311,
	312, 1147, 313, 510, 1148, 511, 314, 1149, 315, 316,
	317, 318, 319, 512, 513, 514, 372, 985, 320, 321,
	1150, 322, 323, 324, 325, 0, 0, 0, 230, 326,
	327, 329, 1151, 984, 328, 515, 516, 1152, 517, 1153,
	330, 986, 518, 987, 331, 332, 333, 988, 334, 0,
	0, 0, 335, 336, 337, 338, 339, 1154, 341, 340,
	1155, 342, 519, 989, 343, 344, 990, 1156, 345, 346,
	347, 1157, 1158, 348, 349, 350, 351, 0, 352, 353,
	355, 357, 354, 356, 361, 358, 359, 360, 363, 0,
	362, 991, 364, 365, 368, 369, 367, 992, 366, 1159,
	231, 993, 370, 1160, 520, 371, 521, 373, 374, 1161,
	0, 375, 0, 1162, 1163, 377, 378, 379, 1164, 1165,
	380, 381, 522, 994, 382, 995, 523, 383, 384, 376,
	385, 386, 387, 388, 389, 390, 391, 1166, 392, 393,
	524, 525, 526, 394, 527, 395, 396, 1167, 397, 0,
	398, 399, 400, 401, 402, 403, 404, 528, 405, 406,
	1168, 0, 0, 0, 0, 0, 407, 0, 409, 410,
	411, 408, 412, 413, 414, 415, 1169, 416, 417, 996,
	418, 419, 420, 421, 529, 422, 0, 423, 427, 428,
	429, 430, 431, 432, 433, 1170, 435, 436, 434, 437,
	438, 439, 1171, 440, 424, 425, 441, 442, 997, 443,
	444, 530, 0, 445, 1172, 446, 447, 448, 449, 426,
	450, 455, 531, 451, 452, 453, 454, 532, 1173, 457,
	458, 0, 456, 1174, 459, 460, 461, 462, 463, 298,
	464, 1175, 465, 533, 534, 535, 536, 1176, 472, 1177,
	466, 467, 537, 468, 538, 1178, 469, 470, 471, 0,
	473, 474, 1179, 1180, 475, 476, 477, 479, 480, 478,
	481, 1181, 482, 1182, 0, 483, 484, 485, 539, 540,
	541, 1183, 487, 486, 542, 1184, 1185, 1186, 1187, 488,
	489, 543, 490, 491, 492, 1103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3499, 232, 233, 234, 235, 236, 237, 1109, 238,
	239, 1110, 1111, 1112, 0, 1113, 493, 1114, 1115, 1116,
	1117, 240, 241, 243, 242, 244, 245, 246, 494, 495,
	0, 496, 247, 497, 1118, 248, 249, 250, 251, 252,
	1119, 1120, 0, 253, 498, 499, 500, 1121, 254, 255,
	501, 1122, 1189, 1123, 256, 257, 258, 259, 260, 261,
	262, 0, 1124, 264, 265, 266, 263, 1125, 267, 0,
	268, 269, 270, 1126, 271, 982, 272, 273, 1127, 1128,
	1130, 1129, 1131, 1132, 1133, 274, 275, 276, 277, 0,
	278, 502, 503, 1134, 282, 279, 280, 1135, 283, 281,
	1136, 284, 1137, 1138, 285, 286, 287, 1139, 288, 289,
	1140, 290, 291, 1141, 292, 293, 504, 294, 295, 297,
	299, 296, 300, 301, 302, 303, 505, 506, 1142, 229,
	1143, 0, 0, 0, 0, 304, 305, 306, 507, 0,
	0, 0, 307, 1144, 308, 1145, 1146, 983, 309, 310,
	508, 509, 311, 312, 1147, 313, 510, 1148, 511, 314,
	1149, 315, 316, 317, 318, 319, 512, 513, 514, 372,
	985, 320, 321, 1150, 322, 323, 324, 325, 0, 0,
	0, 230, 326, 327, 329, 1151, 984, 328, 515, 516,
	1152, 517, 1153, 330, 986, 518, 987, 331, 332, 333,
	988, 334, 0, 0, 0, 335, 336, 337, 338, 339,
	1154, 341, 340, 1155, 342, 519, 989, 343, 344, 990,
	1156, 345, 346, 347, 1157, 1158, 348, 349, 350, 351,
	0, 352, 353, 355, 357, 354, 356, 361, 358, 359,
	360, 363, 0, 362, 991, 364, 365, 368, 369, 367,
	992, 366, 1159, 231, 993, 370, 1160, 520, 371, 521,
	373, 374, 1161, 0, 375, 0, 1162, 1163, 377, 378,
	379, 1164, 1165, 380, 381, 522, 994, 382, 995, 523,
	383, 384, 376, 385, 386, 387, 388, 389, 390, 391,
	1166, 392, 393, 524, 525, 526, 394, 527, 395, 396,
	1167, 397, 0, 398, 399, 400, 401, 402, 403, 404,
	528, 405, 406, 1168, 0, 0, 0, 0, 0, 407,
	0, 409, 410, 411, 408, 412, 413, 414, 415, 1169,
	416, 417, 996, 418, 419, 420, 421, 529, 422, 0,
	423, 427, 428, 429, 430, 431, 432, 433, 1170, 435,
	436, 434, 437, 438, 439, 1171, 440, 424, 425, 441,
	442, 997, 443, 444, 530, 0, 445, 1172, 446, 447,
	448, 449, 426, 450, 455, 531, 451, 452, 453, 454,
	532, 1173, 457, 458, 0, 456, 1174, 459, 460, 461,
	462, 463, 298, 464, 1175, 465, 533, 534, 535, 536,
	1176, 472, 1177, 466, 467, 537, 468, 538, 1178, 469,
	470, 471, 0, 473, 474, 1179, 1180, 475, 476, 477,
	479, 480, 478, 481, 1181, 482, 1182, 0, 483, 484,
	485, 539, 540, 541, 1183, 487, 486, 542, 1184, 1185,
	1186, 1187, 488, 489, 543, 490, 491, 492, 1103, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3403, 232, 233, 234, 235, 236,
	237, 1109, 238, 239, 1110, 1111, 1112, 0, 1113, 493,
	1114, 1115, 1116, 1117, 240, 241, 243, 242, 244, 245,
	246, 494, 495, 0, 496, 247, 497, 1118, 248, 249,
	250, 251, 252, 1119, 1120, 0, 253, 498, 499, 500,
	1121, 254, 255, 501, 1122, 1189, 1123, 256, 257, 258,
	259, 260, 261, 262, 0, 1124, 264, 265, 266, 263,
	1125, 267, 0, 268, 269, 270, 1126, 271, 982, 272,
	273, 1127, 1128, 1130, 1129, 1131, 1132, 1133, 274, 275,
	276, 277, 0, 278, 502, 503, 1134, 282, 279, 280,
	1135, 283, 281, 1136, 284, 1137, 1138, 285, 286, 287,
	1139, 288, 289, 1140, 290, 291, 1141, 292, 293, 504,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 505,
	506, 1142, 229, 1143, 0, 0, 0, 0, 304, 305,
	306, 507, 0, 0, 0, 307, 1144, 308, 1145, 1146,
	983, 309, 310, 508, 509, 311, 312, 1147, 313, 510,
	1148, 511, 314, 1149, 315, 316, 317, 318, 319, 512,
	513, 514, 372, 985, 320, 321, 1150, 322, 323, 324,
	325, 0, 0, 0, 230, 326, 327, 329, 1151, 984,
	328, 515, 516, 1152, 517, 1153, 330, 986, 518, 987,
	331, 332, 333, 988, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 1154, 341, 340, 1155, 342, 519, 989,
	343, 344, 990, 1156, 345, 346, 347, 1157, 1158, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 991, 364, 365,
	368, 369, 367, 992, 366, 1159, 231, 993, 370, 1160,
	520, 371, 521, 373, 374, 1161, 0, 375, 0, 1162,
	1163, 377, 378, 379, 1164, 1165, 380, 381, 522, 994,
	382, 995, 523, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 1166, 392, 393, 524, 525, 526, 394,
	527, 395, 396, 1167, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 528, 405, 406, 1168, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 1169, 416, 417, 996, 418, 419, 420, 421,
	529, 422, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 1170, 435, 436, 434, 437, 438, 439, 1171, 440,
	424, 425, 441, 442, 997, 443, 444, 530, 0, 445,
	1172, 446, 447, 448, 449, 426, 450, 455, 531, 451,
	452, 453, 454, 532, 1173, 457, 458, 0, 456, 1174,
	459, 460, 461, 462, 463, 298, 464, 1175, 465, 533,
	534, 535, 536, 1176, 472, 1177, 466, 467, 537, 468,
	538, 1178, 469, 470, 471, 0, 473, 474, 1179, 1180,
	475, 476, 477, 479, 480, 478, 481, 1181, 482, 1182,
	0, 483, 484, 485, 539, 540, 541, 1183, 487, 486,
	542, 1184, 1185, 1186, 1187, 488, 489, 543, 490, 491,
	492, 1103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3277, 232, 233,
	234, 235, 236, 237, 1109, 238, 239, 1110, 1111, 1112,
	0, 1113, 493, 1114, 1115, 1116, 1117, 240, 241, 243,
	242, 244, 245, 246, 494, 495, 0, 496, 247, 497,
	1118, 248, 249, 250, 251, 252, 1119, 1120, 0, 253,
	498, 499, 500, 1121, 254, 255, 501, 1122, 1189, 1123,
	256, 257, 258, 259, 260, 261, 262, 0, 1124, 264,
	265, 266, 263, 1125, 267, 0, 268, 269, 270, 1126,
	271, 982, 272, 273, 1127, 1128, 1130, 1129, 1131, 1132,
	1133, 274, 275, 276, 277, 0, 278, 502, 503, 1134,
	282, 279, 280, 1135, 283, 281, 1136, 284, 1137, 1138,
	285, 286, 287, 1139, 288, 289, 1140, 290, 291, 1141,
	292, 293, 504, 294, 295, 297, 299, 296, 300, 301,
	302, 303, 505, 506, 1142, 229, 1143, 0, 0, 0,
	0, 304, 305, 306, 507, 0, 0, 0, 307, 1144,
	308, 1145, 1146, 983, 309, 310, 508, 509, 311, 312,
	1147, 313, 510, 1148, 511, 314, 1149, 315, 316, 317,
	318, 319, 512, 513, 514, 372, 985, 320, 321, 1150,
	322, 323, 324, 325, 0, 0, 0, 230, 326, 327,
	329, 1151, 984, 328, 515, 516, 1152, 517, 1153, 330,
	986, 518, 987, 331, 332, 333, 988, 334, 0, 0,
	0, 335, 336, 337, 338, 339, 1154, 341, 340, 1155,
	342, 519, 989, 343, 344, 990, 1156, 345, 346, 347,
	1157, 1158, 348, 349, 350, 351, 0, 352, 353, 355,
	357, 354, 356, 361, 358, 359, 360, 363, 0, 362,
	991, 364, 365, 368, 369, 367, 992, 366, 1159, 231,
	993, 370, 1160, 520, 371, 521, 373, 374, 1161, 0,
	375, 0, 1162, 1163, 377, 378, 379, 1164, 1165, 380,
	381, 522, 994, 382, 995, 523, 383, 384, 376, 385,
	386, 387, 388, 389, 390, 391, 1166, 392, 393, 524,
	525, 526, 394, 527, 395, 396, 1167, 397, 0, 398,
	399, 400, 401, 402, 403, 404, 528, 405, 406, 1168,
	0, 0, 0, 0, 0, 407, 0, 409, 410, 411,
	408, 412, 413, 414, 415, 1169, 416, 417, 996, 418,
	419, 420, 421, 529, 422, 0, 423, 427, 428, 429,
	430, 431, 432, 433, 1170, 435, 436, 434, 437, 438,
	439, 1171, 440, 424, 425, 441, 442, 997, 443, 444,
	530, 0, 445, 1172, 446, 447, 448, 449, 426, 450,
	455, 531, 451, 452, 453, 454, 532, 1173, 457, 458,
	0, 456, 1174, 459, 460, 461, 462, 463, 298, 464,
	1175, 465, 533, 534, 535, 536, 1176, 472, 1177, 466,
	467, 537, 468, 538, 1178, 469, 470, 471, 0, 473,
	474, 1179, 1180, 475, 476, 477, 479, 480, 478, 481,
	1181, 482, 1182, 0, 483, 484, 485, 539, 540, 541,
	1183, 487, 486, 542, 1184, 1185, 1186, 1187, 488, 489,
	543, 490, 491, 492, 1103, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3048, 232, 233, 234, 235, 236, 237, 1109, 238, 239,
	1110, 1111, 1112, 0, 1113, 493, 1114, 1115, 1116, 1117,
	240, 241, 243, 242, 244, 245, 246, 494, 495, 0,
	496, 247, 497, 1118, 248, 249, 250, 251, 252, 1119,
	1120, 0, 253, 498, 499, 500, 1121, 254, 255, 501,
	1122, 1189, 1123, 256, 257, 258, 259, 260, 261, 262,
	0, 1124, 264, 265, 266, 263, 1125, 267, 0, 268,
	269, 270, 1126, 271, 982, 272, 273, 1127, 1128, 1130,
	1129, 1131, 1132, 1133, 274, 275, 276, 277, 0, 278,
	502, 503, 1134, 282, 279, 280, 1135, 283, 281, 1136,
	284, 1137, 1138, 285, 286, 287, 1139, 288, 289, 1140,
	290, 291, 1141, 292, 293, 504, 294, 295, 297, 299,
	296, 300, 301, 302, 303, 505, 506, 1142, 229, 1143,
	0, 0, 0, 0, 304, 305, 306, 507, 0, 0,
	0, 307, 1144, 308, 1145, 1146, 983, 309, 310, 508,
	509, 311, 312, 1147, 313, 510, 1148, 511, 314, 1149,
	315, 316, 317, 318, 319, 512, 513, 514, 372, 985,
	320, 321, 1150, 322, 323, 324, 325, 0, 0, 0,
	230, 326, 327, 329, 1151, 984, 328, 515, 516, 1152,
	517, 1153, 330, 986, 518, 987, 331, 332, 333, 988,
	334, 0, 0, 0, 335, 336, 337, 338, 339, 1154,
	341, 340, 1155, 342, 519, 989, 343, 344, 990, 1156,
	345, 346, 347, 1157, 1158, 348, 349, 350, 351, 0,
	352, 353, 355, 357, 354, 356, 361, 358, 359, 360,
	363, 0, 362, 991, 364, 365, 368, 369, 367, 992,
	366, 1159, 231, 993, 370, 1160, 520, 371, 521, 373,
	374, 1161, 0, 375, 0, 1162, 1163, 377, 378, 379,
	1164, 1165, 380, 381, 522, 994, 382, 995, 523, 383,
	384, 376, 385, 386, 387, 388, 389, 390, 391, 1166,
	392, 393, 524, 525, 526, 394, 527, 395, 396, 1167,
	397, 0, 398, 399, 400, 401, 402, 403, 404, 528,
	405, 406, 1168, 0, 0, 0, 0, 0, 407, 0,
	409, 410, 411, 408, 412, 413, 414, 415, 1169, 416,
	417, 996, 418, 419, 420, 421, 529, 422, 0, 423,
	427, 428, 429, 430, 431, 432, 433, 1170, 435, 436,
	434, 437, 438, 439, 1171, 440, 424, 425, 441, 442,
	997, 443, 444, 530, 0, 445, 1172, 446, 447, 448,
	449, 426, 450, 455, 531, 451, 452, 453, 454, 532,
	1173, 457, 458, 0, 456, 1174, 459, 460, 461, 462,
	463, 298, 464, 1175, 465, 533, 534, 535, 536, 1176,
	472, 1177, 466, 467, 537, 468, 538, 1178, 469, 470,
	471, 0, 473, 474, 1179, 1180, 475, 476, 477, 479,
	480, 478, 481, 1181, 482, 1182, 0, 483, 484, 485,
	539, 540, 541, 1183, 487, 486, 542, 1184, 1185, 1186,
	1187, 488, 489, 543, 490, 491, 492, 1103, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2897, 232, 233, 234, 235, 236, 237,
	1109, 238, 239, 1110, 1111, 1112, 0, 1113, 493, 1114,
	1115, 1116, 1117, 240, 241, 243, 242, 244, 245, 246,
	494, 495, 0, 496, 247, 497, 1118, 248, 249, 250,
	251, 252, 1119, 1120, 0, 253, 498, 499, 500, 1121,
	254, 255, 501, 1122, 1189, 1123, 256, 257, 258, 259,
	260, 261, 262, 0, 1124, 264, 265, 266, 263, 1125,
	267, 0, 268, 269, 270, 1126, 271, 982, 272, 273,
	1127, 1128, 1130, 1129, 1131, 1132, 1133, 274, 275, 276,
	277, 0, 278, 502, 503, 1134, 282, 279, 280, 1135,
	283, 281, 1136, 284, 1137, 1138, 285, 286, 287, 1139,
	288, 289, 1140, 290, 291, 1141, 292, 293, 504, 294,
	295, 297, 299, 296, 300, 301, 302, 303, 505, 506,
	1142, 229, 1143, 0, 0, 0, 0, 304, 305, 306,
	507, 0, 0, 0, 307, 1144, 308, 1145, 1146, 983,
	309, 310, 508, 509, 311, 312, 1147, 313, 510, 1148,
	511, 314, 1149, 315, 316, 317, 318, 319, 512, 513,
	514, 372, 985, 320, 321, 1150, 322, 323, 324, 325,
	0, 0, 0, 230, 326, 327, 329, 1151, 984, 328,
	515, 516, 1152, 517, 1153, 330, 986, 518, 987, 331,
	332, 333, 988, 334, 0, 0, 0, 335, 336, 337,
	338, 339, 1154, 341, 340, 1155, 342, 519, 989, 343,
	344, 990, 1156, 345, 346, 347, 1157, 1158, 348, 349,
	350, 351, 0, 352, 353, 355, 357, 354, 356, 361,
	358, 359, 360, 363, 0, 362, 991, 364, 365, 368,
	369, 367, 992, 366, 1159, 231, 993, 370, 1160, 520,
	371, 521, 373, 374, 1161, 0, 375, 0, 1162, 1163,
	377, 378, 379, 1164, 1165, 380, 381, 522, 994, 382,
	995, 523, 383, 384, 376, 385, 386, 387, 388, 389,
	390, 391, 1166, 392, 393, 524, 525, 526, 394, 527,
	395, 396, 1167, 397, 0, 398, 399, 400, 401, 402,
	403, 404, 528, 405, 406, 1168, 0, 0, 0, 0,
	0, 407, 0, 409, 410, 411, 408, 412, 413, 414,
	415, 1169, 416, 417, 996, 418, 419, 420, 421, 529,
	422, 0, 423, 427, 428, 429, 430, 431, 432, 433,
	1170, 435, 436, 434, 437, 438, 439, 1171, 440, 424,
	425, 441, 442, 997, 443, 444, 530, 0, 445, 1172,
	446, 447, 448, 449, 426, 450, 455, 531, 451, 452,
	453, 454, 532, 1173, 457, 458, 0, 456, 1174, 459,
	460, 461, 462, 463, 298, 464, 1175, 465, 533, 534,
	535, 536, 1176, 472, 1177, 466, 467, 537, 468, 538,
	1178, 469, 470, 471, 0, 473, 474, 1179, 1180, 475,
	476, 477, 479, 480, 478, 481, 1181, 482, 1182, 0,
	483, 484, 485, 539, 540, 541, 1183, 487, 486, 542,
	1184, 1185, 1186, 1187, 488, 489, 543, 490, 491, 492,
	1103, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2148, 232, 233, 234,
	235, 236, 237, 1109, 238, 239, 1110, 1111, 1112, 0,
	1113, 493, 1114, 1115, 1116, 1117, 240, 241, 243, 242,
	244, 245, 246, 494, 495, 0, 496, 247, 497, 1118,
	248, 249, 250, 251, 252, 1119, 1120, 0, 253, 498,
	499, 500, 1121, 254, 255, 501, 1122, 1189, 1123, 256,
	257, 258, 259, 260, 261, 262, 0, 1124, 264, 265,
	266, 263, 1125, 267, 0, 268, 269, 270, 1126, 271,
	982, 272, 273, 1127, 1128, 1130, 1129, 1131, 1132, 1133,
	274, 275, 276, 277, 0, 278, 502, 503, 1134, 282,
	279, 280, 1135, 283, 281, 1136, 284, 1137, 1138, 285,
	286, 287, 1139, 288, 289, 1140, 290, 291, 1141, 292,
	293, 504, 294, 295, 297, 299, 296, 300, 301, 302,
	303, 505, 506, 1142, 229, 1143, 0, 0, 0, 0,
	304, 305, 306, 507, 0, 0, 0, 307, 1144, 308,
	1145, 1146, 983, 309, 310, 508, 509, 311, 312, 1147,
	313, 510, 1148, 511, 314, 1149, 315, 316, 317, 318,
	319, 512, 513, 514, 372, 985, 320, 321, 1150, 322,
	323, 324, 325, 0, 0, 0, 230, 326, 327, 329,
	1151, 984, 328, 515, 516, 1152, 517, 1153, 330, 986,
	518, 987, 331, 332, 333, 988, 334, 0, 0, 0,
	335, 336, 337, 338, 339, 1154, 341, 340, 1155, 342,
	519, 989, 343, 344, 990, 1156, 345, 346, 347, 1157,
	1158, 348, 349, 350, 351, 0, 352, 353, 355, 357,
	354, 356, 361, 358, 359, 360, 363, 0, 362, 991,
	364, 365, 368, 369, 367, 992, 366, 1159, 231, 993,
	370, 1160, 520, 371, 521, 373, 374, 1161, 0, 375,
	0, 1162, 1163, 377, 378, 379, 1164, 1165, 380, 381,
	522, 994, 382, 995, 523, 383, 384, 376, 385, 386,
	387, 388, 389, 390, 391, 1166, 392, 393, 524, 525,
	526, 394, 527, 395, 396, 1167, 397, 0, 398, 399,
	400, 401, 402, 403, 404, 528, 405, 406, 1168, 0,
	0, 0, 0, 0, 407, 0, 409, 410, 411, 408,
	412, 413, 414, 415, 1169, 416, 417, 996, 418, 419,
	420, 421, 529, 422, 0, 423, 427, 428, 429, 430,
	431, 432, 433, 1170, 435, 436, 434, 437, 438, 439,
	1171, 440, 424, 425, 441, 442, 997, 443, 444, 530,
	0, 445, 1172, 446, 447, 448, 449, 426, 450, 455,
	531, 451, 452, 453, 454, 532, 1173, 457, 458, 0,
	456, 1174, 459, 460, 461, 462, 463, 298, 464, 1175,
	465, 533, 534, 535, 536, 1176, 472, 1177, 466, 467,
	537, 468, 538, 1178, 469, 470, 471, 0, 473, 474,
	1179, 1180, 475, 476, 477, 479, 480, 478, 481, 1181,
	482, 1182, 0, 483, 484, 485, 539, 540, 541, 1183,
	487, 486, 542, 1184, 1185, 1186, 1187, 488, 489, 543,
	490, 491, 492, 1201, 0, 1103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	0, 0, 232, 233, 234, 235, 236, 237, 1109, 238,
	239, 1110, 1111, 1112, 0, 1113, 493, 1114, 1115, 1116,
	1117, 240, 241, 243, 242, 244, 245, 246, 494, 495,
	0, 496, 247, 497, 1118, 248, 249, 250, 251, 252,
	1119, 1120, 0, 253, 498, 499, 500, 1121, 254, 255,
	501, 1122, 1189, 1123, 256, 257, 258, 259, 260, 261,
	262, 0, 1124, 264, 265, 266, 263, 1125, 267, 0,
	268, 269, 270, 1126, 271, 982, 272, 273, 1127, 1128,
	1130, 1129, 1131, 1132, 1133, 274, 275, 276, 277, 0,
	278, 502, 503, 1134, 282, 279, 280, 1135, 283, 281,
	1136, 284, 1137, 1138, 285, 286, 287, 1139, 288, 289,
	1140, 290, 291, 1141, 292, 293, 504, 294, 295, 297,
	299, 296, 300, 301, 302, 303, 505, 506, 1142, 229,
	1143, 0, 0, 0, 0, 304, 305, 306, 507, 0,
	0, 0, 307, 1144, 308, 1145, 1146, 983, 309, 310,
	508, 509, 311, 312, 1147, 313, 510, 1148, 511, 314,
	1149, 315, 316, 317, 318, 319, 512, 513, 514, 372,
	985, 320, 321, 1150, 322, 323, 324, 325, 0, 0,
	0, 230, 326, 327, 329, 1151, 984, 328, 515, 516,
	1152, 517, 1153, 330, 986, 518, 987, 331, 332, 333,
	988, 334, 0, 0, 0, 335, 336, 337, 338, 339,
	1154, 341, 340, 1155, 342, 519, 989, 343, 344, 990,
	1156, 345, 346, 347, 1157, 1158, 348, 349, 350, 351,
	0, 352, 353, 355, 357, 354, 356, 361, 358, 359,
	360, 363, 0, 362, 991, 364, 365, 368, 369, 367,
	992, 366, 1159, 231, 993, 370, 1160, 520, 371, 521,
	373, 374, 1161, 0, 375, 0, 1162, 1163, 377, 378,
	379, 1164, 1165, 380, 381, 522, 994, 382, 995, 523,
	383, 384, 376, 385, 386, 387, 388, 389, 390, 391,
	1166, 392, 393, 524, 525, 526, 394, 527, 395, 396,
	1167, 397, 0, 398, 399, 400, 401, 402, 403, 404,
	528, 405, 406, 1168, 0, 0, 0, 0, 0, 407,
	0, 409, 410, 411, 408, 412, 413, 414, 415, 1169,
	416, 417, 996, 418, 419, 420, 421, 529, 422, 0,
	423, 427, 428, 429, 430, 431, 432, 433, 1170, 435,
	436, 434, 437, 438, 439, 1171, 440, 424, 425, 441,
	442, 997, 443, 444, 530, 0, 445, 1172, 446, 447,
	448, 449, 426, 450, 455, 531, 451, 452, 453, 454,
	532, 1173, 457, 458, 0, 456, 1174, 459, 460, 461,
	462, 463, 298, 464, 1175, 465, 533, 534, 535, 536,
	1176, 472, 1177, 466, 467, 537, 468, 538, 1178, 469,
	470, 471, 0, 473, 474, 1179, 1180, 475, 476, 477,
	479, 480, 478, 481, 1181, 482, 1182, 0, 483, 484,
	485, 539, 540, 541, 1183, 487, 486, 542, 1184, 1185,
	1186, 1187, 488, 489, 543, 490, 491, 492, 1100, 0,
	1103, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 1109, 238, 239, 1110, 1111, 1112, 0,
	1113, 493, 1114, 1115, 1116, 1117, 240, 241, 243, 242,
	244, 245, 246, 494, 495, 0, 496, 247, 497, 1118,
	248, 249, 250, 251, 252, 1119, 1120, 0, 253, 498,
	499, 500, 1121, 254, 255, 501, 1122, 1189, 1123, 256,
	257, 258, 259, 260, 261, 262, 0, 1124, 264, 265,
	266, 263, 1125, 267, 0, 268, 269, 270, 1126, 271,
	982, 272, 273, 1127, 1128, 1130, 1129, 1131, 1132, 1133,
	274, 275, 276, 277, 0, 278, 502, 503, 1134, 282,
	279, 280, 1135, 283, 281, 1136, 284, 1137, 1138, 285,
	286, 287, 1139, 288, 289, 1140, 290, 291, 1141, 292,
	293, 504, 294, 295, 297, 299, 296, 300, 301, 302,
	303, 505, 506, 1142, 229, 1143, 0, 0, 0, 0,
	304, 305, 306, 507, 0, 0, 0, 307, 1144, 308,
	1145, 1146, 983, 309, 310, 508, 509, 311, 312, 1147,
	313, 510, 1148, 511, 314, 1149, 315, 316, 317, 318,
	319, 512, 513, 514, 372, 985, 320, 321, 1150, 322,
	323, 324, 325, 0, 0, 0, 230, 326, 327, 329,
	1151, 984, 328, 515, 516, 1152, 517, 1153, 330, 986,
	518, 987, 331, 332, 333, 988, 334, 0, 0, 0,
	335, 336, 337, 338, 339, 1154, 341, 340, 1155, 342,
	519, 989, 343, 344, 990, 1156, 345, 346, 347, 1157,
	1158, 348, 349, 350, 351, 0, 352, 353, 355, 357,
	354, 356, 361, 358, 359, 360, 363, 0, 362, 991,
	364, 365, 368, 369, 367, 992, 366, 1159, 231, 993,
	370, 1160, 520, 371, 521, 373, 374, 1161, 0, 375,
	0, 1162, 1163, 377, 378, 379, 1164, 1165, 380, 381,
	522, 994, 382, 995, 523, 383, 384, 376, 385, 386,
	387, 388, 389, 390, 391, 1166, 392, 393, 524, 525,
	526, 394, 527, 395, 396, 1167, 397, 0, 398, 399,
	400, 401, 402, 403, 404, 528, 405, 406, 1168, 0,
	0, 0, 0, 0, 407, 0, 409, 410, 411, 408,
	412, 413, 414, 415, 1169, 416, 417, 996, 418, 419,
	420, 421, 529, 422, 0, 423, 427, 428, 429, 430,
	431, 432, 433, 1170, 435, 436, 434, 437, 438, 439,
	1171, 440, 424, 425, 441, 442, 997, 443, 444, 530,
	0, 445, 1172, 446, 447, 448, 449, 426, 450, 455,
	531, 451, 452, 453, 454, 532, 1173, 457, 458, 0,
	456, 1174, 459, 460, 461, 462, 463, 298, 464, 1175,
	465, 533, 534, 535, 536, 1176, 472, 1177, 466, 467,
	537, 468, 538, 1178, 469, 470, 471, 0, 473, 474,
	1179, 1180, 475, 476, 477, 479, 480, 478, 481, 1181,
	482, 1182, 0, 483, 484, 485, 539, 540, 541, 1183,
	487, 486, 542, 1184, 1185, 1186, 1187, 488, 489, 543,
	490, 491, 492, 1103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 233, 234, 235, 236, 237, 1109, 238, 239, 1110,
	1111, 1112, 0, 1113, 493, 1114, 1115, 1116, 1117, 240,
	241, 243, 242, 244, 245, 246, 494, 495, 0, 496,
	247, 497, 1118, 248, 249, 250, 251, 252, 1119, 1120,
	0, 253, 498, 499, 500, 1121, 254, 255, 501, 1122,
	1189, 1123, 256, 257, 258, 259, 260, 261, 262, 0,
	1124, 264, 265, 266, 263, 1125, 267, 0, 268, 269,
	270, 1126, 271, 982, 272, 273, 1127, 1128, 1130, 1129,
	1131, 1132, 1133, 274, 275, 276, 277, 0, 278, 502,
	503, 1134, 282, 279, 280, 1135, 283, 281, 1136, 284,
	1137, 1138, 285, 286, 287, 1139, 288, 289, 1140, 290,
	291, 1141, 292, 293, 504, 294, 295, 297, 299, 296,
	300, 301, 302, 303, 505, 506, 1142, 229, 1143, 0,
	0, 0, 0, 304, 305, 306, 507, 0, 0, 0,
	307, 1144, 308, 1145, 1146, 983, 309, 310, 508, 509,
	311, 312, 1147, 313, 510, 1148, 511, 314, 1149, 315,
	316, 317, 318, 319, 512, 513, 514, 372, 985, 320,
	321, 1150, 322, 323, 324, 325, 0, 0, 0, 230,
	326, 327, 329, 1151, 984, 328, 515, 516, 1152, 517,
	1153, 330, 986, 518, 987, 331, 332, 333, 988, 334,
	0, 0, 0, 335, 336, 337, 338, 339, 1154, 341,
	340, 1155, 342, 519, 989, 343, 344, 990, 1156, 345,
	346, 347, 1157, 1158, 348, 349, 350, 351, 0, 352,
	353, 355, 357, 354, 356, 361, 358, 359, 360, 363,
	0, 362, 991, 364, 365, 368, 369, 367, 992, 366,
	1159, 231, 993, 370, 1160, 520, 371, 521, 373, 374,
	1161, 0, 375, 0, 1162, 1163, 377, 378, 379, 1164,
	1165, 380, 381, 522, 994, 382, 995, 523, 383, 384,
	376, 385, 386, 387, 388, 389, 390, 391, 1166, 392,
	393, 524, 525, 526, 394, 527, 395, 396, 1167, 397,
	0, 398, 399, 400, 401, 402, 403, 404, 528, 405,
	406, 1168, 0, 0, 0, 0, 0, 407, 0, 409,
	410, 411, 408, 412, 413, 414, 415, 1169, 416, 417,
	996, 418, 419, 420, 421, 529, 422, 0, 423, 427,
	428, 429, 430, 431, 432, 433, 1170, 435, 436, 434,
	437, 438, 439, 1171, 440, 424, 425, 441, 442, 997,
	443, 444, 530, 0, 445, 1172, 446, 447, 448, 449,
	426, 450, 455, 531, 451, 452, 453, 454, 532, 1173,
	457, 458, 0, 456, 1174, 459, 460, 461, 462, 463,
	298, 464, 1175, 465, 533, 534, 535, 536, 1176, 472,
	1177, 466, 467, 537, 468, 538, 1178, 469, 470, 471,
	0, 473, 474, 1179, 1180, 475, 476, 477, 479, 480,
	478, 481, 1181, 482, 1182, 0, 483, 484, 485, 539,
	540, 541, 1183, 487, 486, 542, 1184, 1185, 1186, 1187,
	488, 489, 543, 490, 491, 492, 2123, 0, 919, 891,
	892, 893, 889, 890, 902, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 2120, 238, 239, 0, 0, 0, 0, 0, 943,
	907, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 956, 0, 963, 247, 962, 0, 248, 249,
	250, 251, 252, 909, 942, 876, 253, 1001, 1002, 500,
	0, 254, 255, 949, 0, 930, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 982, 272,
	273, 933, 931, 932, 939, 935, 934, 938, 274, 275,
	276, 277, 966, 278, 960, 959, 880, 282, 279, 280,
	0, 283, 281, 0, 284, 2121, 0, 285, 951, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 886,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 973,
	974, 898, 229, 0, 0, 0, 0, 0, 304, 305,
	306, 958, 0, 0, 0, 307, 0, 308, 0, 0,
	983, 309, 310, 971, 972, 311, 312, 0, 313, 980,
	0, 908, 314, 0, 315, 316, 317, 318, 319, 944,
	945, 948, 372, 985, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 230, 326, 327, 329, 0, 984,
	328, 953, 954, 0, 914, 0, 330, 986, 946, 987,
	331, 332, 333, 988, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 981, 989,
	343, 344, 990, 0, 345, 346, 347, 937, 936, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 991, 364, 365,
	368, 369, 367, 992, 366, 877, 231, 993, 370, 899,
	947, 371, 961, 373, 374, 0, 0, 375, 0, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 994,
	382, 995, 975, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 976, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 957, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 996, 418, 419, 420, 421,
	887, 422, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 0, 435, 436, 434, 437, 438, 439, 940, 440,
	424, 425, 441, 442, 997, 443, 444, 955, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 1000, 451,
	452, 453, 454, 977, 0, 457, 458, 875, 456, 0,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 967,
	968, 969, 970, 0, 472, 0, 466, 467, 978, 468,
	979, 897, 469, 470, 471, 0, 473, 474, 0, 881,
	475, 476, 477, 479, 480, 478, 481, 941, 482, 0,
	0, 483, 484, 485, 539, 964, 999, 2119, 487, 486,
	542, 0, 0, 0, 0, 488, 489, 543, 490, 491,
	492, 878, 0, 0, 0, 0, 0, 0, 874, 0,
	0, 0, 0, 0, 0, 872, 873, 2122, 0, 0,
	0, 0, 0, 0, 903, 2118, 0, 865, 901, 919,
	891, 892, 893, 889, 890, 902, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 233, 234, 235,
	236, 237, 0, 238, 239, 0, 0, 0, 0, 0,
	943, 907, 0, 0, 0, 240, 241, 243, 242, 244,
	245, 246, 494, 956, 0, 963, 247, 962, 0, 248,
	249, 250, 251, 252, 909, 942, 876, 253, 1001, 1002,
	500, 0, 254, 255, 949, 0, 930, 0, 256, 257,
	258, 259, 260, 261, 262, 0, 0, 264, 265, 266,
	263, 0, 267, 0, 268, 269, 270, 0, 271, 982,
	272, 273, 933, 931, 932, 939, 935, 934, 938, 274,
	275, 276, 277, 966, 278, 960, 959, 880, 282, 279,
	280, 0, 283, 281, 0, 284, 0, 0, 285, 951,
	287, 0, 288, 289, 0, 290, 291, 0, 292, 293,
	886, 294, 295, 297, 299, 296, 300, 301, 302, 303,
	973, 974, 898, 229, 0, 0, 0, 0, 0, 304,
	305, 306, 958, 0, 0, 0, 307, 0, 308, 0,
	0, 983, 309, 310, 971, 972, 311, 312, 0, 313,
	980, 0, 908, 314, 0, 315, 316, 317, 318, 319,
	944, 945, 948, 372, 985, 320, 321, 0, 322, 323,
	324, 325, 0, 0, 0, 230, 326, 327, 329, 0,
	984, 328, 953, 954, 0, 914, 0, 330, 986, 946,
	987, 331, 332, 333, 988, 334, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 341, 340, 0, 342, 981,
	989, 343, 344, 990, 0, 345, 346, 347, 937, 936,
	348, 349, 350, 351, 0, 352, 353, 355, 357, 354,
	356, 361, 358, 359, 360, 363, 0, 362, 991, 364,
	365, 368, 369, 367, 992, 366, 877, 231, 993, 370,
	899, 947, 371, 961, 373, 374, 0, 0, 375, 0,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 522,
	994, 382, 995, 975, 383, 384, 376, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 393, 524, 525, 976,
	394, 527, 395, 396, 0, 397, 0, 398, 399, 400,
	401, 402, 403, 404, 957, 405, 406, 0, 0, 0,
	0, 0, 0, 407, 0, 409, 410, 411, 408, 412,
	413, 414, 415, 0, 416, 417, 996, 418, 419, 420,
	421, 887, 422, 0, 423, 427, 428, 429, 430, 431,
	432, 433, 192, 435, 436, 434, 437, 438, 439, 940,
	440, 424, 425, 441, 442, 997, 443, 444, 955, 0,
	445, 0, 446, 447, 448, 449, 426, 450, 455, 1000,
	451, 452, 453, 454, 977, 0, 457, 458, 875, 456,
	194, 459, 460, 461, 462, 463, 298, 464, 0, 465,
	967, 968, 969, 970, 0, 472, 0, 466, 467, 978,
	468, 979, 897, 469, 470, 471, 0, 473, 474, 0,
	881, 475, 476, 477, 479, 480, 478, 481, 941, 482,
	0, 0, 483, 484, 485, 1355, 964, 999, 0, 487,
	486, 542, 0, 0, 0, 186, 488, 489, 543, 490,
	491, 492, 878, 187, 0, 0, 0, 0, 0, 874,
	0, 0, 0, 0, 0, 0, 872, 873, 919, 891,
	892, 893, 889, 890, 902, 1568, 1566, 0, 0, 901,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 943,
	907, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 956, 0, 963, 247, 962, 0, 248, 249,
	250, 251, 252, 909, 942, 876, 253, 1001, 1002, 500,
	0, 254, 255, 949, 0, 930, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 982, 272,
	273, 933, 931, 932, 939, 935, 934, 938, 274, 275,
	276, 277, 966, 278, 960, 959, 880, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 951, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 886,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 973,
	974, 898, 229, 0, 0, 0, 0, 0, 304, 305,
	306, 958, 0, 0, 0, 307, 0, 308, 0, 0,
	983, 309, 310, 971, 972, 311, 312, 0, 313, 980,
	0, 908, 314, 0, 315, 316, 317, 318, 319, 944,
	945, 948, 372, 985, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 230, 326, 327, 329, 0, 984,
	328, 953, 954, 0, 914, 0, 330, 986, 946, 987,
	331, 332, 333, 988, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 981, 989,
	343, 344, 990, 0, 345, 346, 347, 937, 936, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 991, 364, 365,
	368, 369, 367, 992, 366, 877, 231, 993, 370, 899,
	947, 371, 961, 373, 374, 0, 0, 375, 0, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 994,
	382, 995, 975, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 976, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 957, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 996, 418, 419, 420, 421,
	887, 422, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 192, 435, 436, 434, 437, 438, 439, 940, 440,
	424, 425, 441, 442, 997, 443, 444, 955, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 1000, 451,
	452, 453, 454, 977, 0, 457, 458, 875, 456, 194,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 967,
	968, 969, 970, 0, 472, 0, 466, 467, 978, 468,
	979, 897, 469, 470, 471, 0, 473, 474, 0, 881,
	475, 476, 477, 479, 480, 478, 481, 941, 482, 0,
	0, 483, 484, 485, 1355, 964, 999, 0, 487, 486,
	542, 0, 0, 0, 186, 488, 489, 543, 490, 491,
	492, 878, 187, 0, 0, 0, 0, 0, 874, 0,
	0, 0, 0, 0, 0, 872, 873, 919, 891, 892,
	893, 889, 890, 902, 1568, 2620, 0, 0, 901, 0,
	0, 0, 0, 0, 232, 233, 234, 235, 236, 237,
	0, 238, 239, 0, 0, 0, 0, 0, 943, 907,
	0, 0, 0, 240, 241, 243, 242, 244, 245, 246,
	494, 956, 0, 963, 247, 962, 0, 248, 249, 250,
	251, 252, 909, 942, 876, 253, 1001, 1002, 500, 0,
	254, 255, 949, 0, 930, 0, 256, 257, 258, 259,
	260, 261, 262, 0, 0, 264, 265, 266, 263, 0,
	267, 0, 268, 269, 270, 0, 271, 982, 272, 273,
	933, 931, 932, 939, 935, 934, 938, 274, 275, 276,
	277, 966, 278, 960, 959, 880, 282, 279, 280, 0,
	283, 281, 0, 284, 0, 0, 285, 951, 287, 0,
	288, 289, 0, 290, 291, 0, 292, 293, 886, 294,
	295, 297, 299, 296, 300, 301, 302, 303, 973, 974,
	898, 229, 0, 0, 0, 0, 0, 304, 305, 306,
	958, 0, 0, 0, 307, 0, 308, 0, 0, 983,
	309, 310, 971, 972, 311, 312, 0, 313, 980, 0,
	908, 314, 0, 315, 316, 317, 318, 319, 944, 945,
	948, 372, 985, 320, 321, 0, 322, 323, 324, 325,
	0, 0, 0, 230, 326, 327, 329, 0, 984, 328,
	953, 954, 0, 914, 0, 330, 986, 946, 987, 331,
	332, 333, 988, 334, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 341, 340, 0, 342, 981, 989, 343,
	344, 990, 0, 345, 346, 347, 937, 936, 348, 349,
	350, 351, 0, 352, 353, 355, 357, 354, 356, 361,
	358, 359, 360, 363, 0, 362, 991, 364, 365, 368,
	369, 367, 992, 366, 877, 231, 993, 370, 899, 947,
	371, 961, 373, 374, 0, 0, 375, 0, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 522, 994, 382,
	995, 975, 383, 384, 376, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 393, 524, 525, 976, 394, 527,
	395, 396, 0, 397, 0, 398, 399, 400, 401, 402,
	403, 404, 957, 405, 406, 0, 0, 0, 0, 0,
	0, 407, 0, 409, 410, 411, 408, 412, 413, 414,
	415, 0, 416, 417, 996, 418, 419, 420, 421, 887,
	422, 0, 423, 427, 428, 429, 430, 431, 432, 433,
	192, 435, 436, 434, 437, 438, 439, 940, 440, 424,
	425, 441, 442, 997, 443, 444, 955, 0, 445, 0,
	446, 447, 448, 449, 426, 450, 455, 1000, 451, 452,
	453, 454, 977, 0, 457, 458, 875, 456, 194, 459,
	460, 461, 462, 463, 298, 464, 0, 465, 967, 968,
	969, 970, 0, 472, 0, 466, 467, 978, 468, 979,
	897, 469, 470, 471, 0, 473, 474, 0, 881, 475,
	476, 477, 479, 480, 478, 481, 941, 482, 0, 0,
	483, 484, 485, 1355, 964, 999, 0, 487, 486, 542,
	0, 0, 0, 186, 488, 489, 543, 490, 491, 492,
	878, 187, 0, 0, 0, 0, 0, 874, 0, 0,
	0, 0, 0, 0, 872, 873, 919, 891, 892, 893,
	889, 890, 902, 1568, 1566, 0, 0, 901, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 943, 907, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 494,
	956, 0, 963, 247, 962, 2227, 248, 249, 250, 251,
	252, 909, 942, 876, 253, 1001, 1002, 500, 0, 254,
	255, 949, 0, 930, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 982, 272, 273, 933,
	931, 932, 939, 935, 934, 938, 274, 275, 276, 277,
	966, 278, 960, 959, 880, 282, 279, 280, 0, 283,
	281, 0, 284, 0, 0, 285, 951, 287, 0, 288,
	289, 0, 290, 291, 0, 292, 293, 886, 294, 295,
	297, 299, 296, 300, 301, 302, 303, 973, 974, 898,
	229, 0, 0, 0, 0, 0, 304, 305, 306, 958,
	0, 0, 0, 307, 0, 308, 0, 2232, 983, 309,
	310, 971, 972, 311, 312, 0, 313, 980, 0, 908,
	314, 0, 315, 316, 317, 318, 319, 944, 945, 948,
	372, 985, 320, 321, 0, 322, 323, 324, 325, 0,
	0, 0, 230, 326, 327, 329, 0, 984, 328, 953,
	954, 0, 914, 0, 330, 986, 946, 987, 331, 332,
	333, 988, 334, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 341, 340, 2228, 342, 981, 989, 343, 344,
	990, 0, 345, 346, 347, 937, 936, 348, 349, 350,
	351, 0, 352, 353, 355, 357, 354, 356, 361, 358,
	359, 360, 363, 0, 362, 991, 364, 365, 368, 369,
	367, 992, 366, 877, 231, 993, 370, 899, 947, 371,
	961, 373, 374, 0, 0, 375, 0, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 522, 994, 382, 995,
	975, 383, 384, 376, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 393, 524, 525, 976, 394, 527, 395,
	396, 0, 397, 0, 398, 399, 400, 401, 402, 403,
	404, 957, 405, 406, 0, 0, 0, 0, 0, 0,
	407, 0, 409, 410, 411, 408, 412, 413, 414, 415,
	0, 416, 417, 996, 418, 419, 420, 421, 887, 422,
	0, 423, 427, 428, 429, 430, 431, 432, 433, 0,
	435, 436, 434, 437, 438, 439, 940, 440, 424, 425,
	441, 442, 997, 443, 444, 955, 0, 445, 0, 446,
	447, 448, 449, 426, 450, 455, 1000, 451, 452, 453,
	454, 977, 0, 457, 458, 875, 456, 0, 459, 460,
	461, 462, 463, 298, 464, 0, 465, 967, 968, 969,
	970, 0, 472, 2229, 466, 467, 978, 468, 979, 897,
	469, 470, 471, 0, 473, 474, 0, 881, 475, 476,
	477, 479, 480, 478, 481, 941, 482, 0, 0, 483,
	484, 485, 539, 964, 999, 0, 487, 486, 542, 0,
	0, 0, 0, 488, 489, 543, 490, 491, 492, 878,
	0, 0, 0, 0, 0, 0, 874, 0, 0, 0,
	0, 0, 0, 872, 873, 0, 0, 0, 0, 0,
	0, 0, 903, 0, 0, 2168, 901, 919, 891, 892,
	893, 889, 890, 902, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 233, 234, 235, 236, 237,
	0, 238, 239, 0, 0, 0, 0, 0, 943, 907,
	0, 0, 0, 240, 241, 243, 242, 244, 245, 246,
	494, 956, 0, 963, 247, 962, 0, 248, 249, 250,
	251, 252, 909, 942, 876, 253, 1001, 1002, 500, 0,
	254, 255, 949, 0, 930, 0, 256, 257, 258, 259,
	260, 261, 262, 0, 0, 264, 265, 266, 263, 0,
	267, 0, 268, 269, 270, 0, 271, 982, 272, 273,
	933, 931, 932, 939, 935, 934, 938, 274, 275, 276,
	277, 966, 278, 960, 959, 880, 282, 279, 280, 0,
	283, 281, 0, 284, 0, 0, 285, 951, 287, 0,
	288, 289, 0, 290, 291, 0, 292, 293, 886, 294,
	295, 297, 299, 296, 300, 301, 302, 303, 973, 974,
	898, 229, 0, 0, 0, 0, 0, 304, 305, 306,
	958, 0, 0, 0, 307, 0, 308, 0, 0, 983,
	309, 310, 971, 972, 311, 312, 0, 313, 980, 0,
	908, 314, 0, 315, 316, 317, 318, 319, 944, 945,
	948, 372, 985, 320, 321, 0, 322, 323, 324, 325,
	0, 0, 0, 230, 326, 327, 329, 0, 984, 328,
	953, 954, 0, 914, 0, 330, 986, 946, 987, 331,
	332, 333, 988, 334, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 341, 340, 0, 342, 981, 989, 343,
	344, 990, 0, 345, 346, 347, 937, 936, 348, 349,
	350, 351, 0, 352, 353, 355, 357, 354, 356, 361,
	358, 359, 360, 363, 0, 362, 991, 364, 365, 368,
	369, 367, 992, 366, 877, 231, 993, 370, 899, 947,
	371, 961, 373, 374, 0, 0, 375, 0, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 522, 994, 382,
	995, 975, 383, 384, 376, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 393, 524, 525, 976, 394, 527,
	395, 396, 0, 397, 0, 398, 399, 400, 401, 402,
	403, 404, 957, 405, 406, 0, 0, 0, 0, 0,
	0, 407, 0, 409, 410, 411, 408, 412, 413, 414,
	415, 0, 416, 417, 996, 418, 419, 420, 421, 887,
	422, 0, 423, 427, 428, 429, 430, 431, 432, 433,
	0, 435, 436, 434, 437, 438, 439, 940, 440, 424,
	425, 441, 442, 997, 443, 444, 955, 0, 445, 0,
	446, 447, 448, 449, 426, 450, 455, 1000, 451, 452,
	453, 454, 977, 0, 457, 458, 875, 456, 0, 459,
	460, 461, 462, 463, 298, 464, 0, 465, 967, 968,
	969, 970, 0, 472, 0, 466, 467, 978, 468, 979,
	897, 469, 470, 471, 0, 473, 474, 0, 881, 475,
	476, 477, 479, 480, 478, 481, 941, 482, 0, 0,
	483, 484, 485, 539, 964, 999, 0, 487, 486, 542,
	0, 0, 0, 0, 488, 489, 543, 490, 491, 492,
	878, 0, 0, 0, 0, 0, 0, 874, 0, 0,
	0, 0, 0, 0, 872, 873, 0, 0, 0, 0,
	0, 0, 0, 903, 2166, 0, 2165, 901, 919, 891,
	892, 893, 889, 890, 902, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 943,
	907, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 956, 0, 963, 247, 962, 0, 248, 249,
	250, 251, 252, 909, 942, 876, 253, 1001, 1002, 500,
	0, 254, 255, 949, 0, 930, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 982, 272,
	273, 933, 931, 932, 939, 935, 934, 938, 274, 275,
	276, 277, 966, 278, 960, 959, 880, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 951, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 886,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 973,
	974, 898, 229, 0, 0, 0, 0, 0, 304, 305,
	306, 958, 0, 0, 0, 307, 0, 308, 0, 0,
	983, 309, 310, 971, 972, 311, 312, 0, 313, 980,
	0, 908, 314, 0, 315, 316, 317, 318, 319, 944,
	945, 948, 372, 985, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 230, 326, 327, 329, 0, 984,
	328, 953, 954, 0, 914, 0, 330, 986, 946, 987,
	331, 332, 333, 988, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 981, 989,
	343, 344, 990, 0, 345, 346, 347, 937, 936, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 991, 364, 365,
	368, 369, 367, 992, 366, 877, 231, 993, 370, 899,
	947, 371, 961, 373, 374, 0, 0, 375, 0, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 994,
	382, 995, 975, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 976, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 957, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 996, 418, 419, 420, 421,
	887, 422, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 0, 435, 436, 434, 437, 438, 439, 940, 440,
	424, 425, 441, 442, 997, 443, 444, 955, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 1000, 451,
	452, 453, 454, 977, 0, 457, 458, 875, 456, 0,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 967,
	968, 969, 970, 0, 472, 0, 466, 467, 978, 468,
	979, 897, 469, 470, 471, 0, 473, 474, 0, 881,
	475, 476, 477, 479, 480, 478, 481, 941, 482, 0,
	0, 483, 484, 485, 539, 964, 999, 0, 487, 486,
	542, 0, 0, 0, 0, 488, 489, 543, 490, 491,
	492, 878, 0, 0, 0, 0, 0, 0, 874, 0,
	0, 0, 0, 0, 0, 872, 873, 0, 0, 0,
	0, 0, 0, 0, 903, 2163, 0, 2162, 901, 919,
	891, 892, 893, 889, 890, 902, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 233, 234, 235,
	236, 237, 0, 238, 239, 0, 0, 0, 0, 0,
	943, 907, 0, 0, 0, 240, 241, 243, 242, 244,
	245, 246, 494, 956, 0, 963, 247, 962, 0, 248,
	249, 250, 251, 252, 909, 942, 876, 253, 1001, 1002,
	500, 0, 254, 255, 949, 0, 930, 0, 256, 257,
	258, 259, 260, 261, 262, 0, 0, 264, 265, 266,
	263, 0, 267, 0, 268, 269, 270, 0, 271, 982,
	272, 273, 933, 931, 932, 939, 935, 934, 938, 274,
	275, 276, 277, 966, 278, 960, 959, 880, 282, 279,
	280, 0, 283, 281, 0, 284, 0, 0, 285, 951,
	287, 0, 288, 289, 0, 290, 291, 0, 292, 293,
	886, 294, 295, 297, 299, 296, 300, 301, 302, 303,
	973, 974, 898, 229, 0, 0, 0, 0, 0, 304,
	305, 306, 958, 0, 0, 0, 307, 0, 308, 0,
	0, 983, 309, 310, 971, 972, 311, 312, 0, 313,
	980, 0, 908, 314, 0, 315, 316, 317, 318, 319,
	944, 945, 948, 372, 985, 320, 321, 0, 322, 323,
	324, 325, 0, 0, 0, 230, 326, 327, 329, 0,
	984, 328, 953, 954, 0, 914, 0, 330, 986, 946,
	987, 331, 332, 333, 988, 334, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 341, 340, 0, 342, 981,
	989, 343, 344, 990, 0, 345, 346, 347, 937, 936,
	348, 349, 350, 351, 0, 352, 353, 355, 357, 354,
	356, 361, 358, 359, 360, 363, 0, 362, 991, 364,
	365, 368, 369, 367, 992, 366, 877, 231, 993, 370,
	899, 947, 371, 961, 373, 374, 0, 0, 375, 0,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 522,
	994, 382, 995, 975, 383, 384, 376, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 393, 524, 525, 976,
	394, 527, 395, 396, 0, 397, 0, 398, 399, 400,
	401, 402, 403, 404, 957, 405, 406, 0, 0, 0,
	0, 0, 0, 407, 0, 409, 410, 411, 408, 412,
	413, 414, 415, 0, 416, 417, 996, 418, 419, 420,
	421, 887, 422, 0, 423, 427, 428, 429, 430, 431,
	432, 433, 0, 435, 436, 434, 437, 438, 439, 940,
	440, 424, 425, 441, 442, 997, 443, 444, 955, 0,
	445, 0, 446, 447, 448, 449, 426, 450, 455, 1000,
	451, 452, 453, 454, 977, 0, 457, 458, 875, 456,
	0, 459, 460, 461, 462, 463, 298, 464, 0, 465,
	967, 968, 969, 970, 0, 472, 0, 466, 467, 978,
	468, 979, 897, 469, 470, 471, 0, 473, 474, 0,
	881, 475, 476, 477, 479, 480, 478, 481, 941, 482,
	0, 0, 483, 484, 485, 539, 964, 999, 0, 487,
	486, 542, 0, 0, 0, 0, 488, 489, 543, 490,
	491, 492, 878, 0, 0, 0, 0, 0, 0, 874,
	0, 0, 0, 0, 0, 0, 872, 873, 0, 0,
	0, 0, 0, 0, 0, 903, 2160, 0, 2159, 901,
	919, 891, 892, 893, 889, 890, 902, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 943, 907, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 494, 956, 0, 963, 247, 962, 0,
	248, 249, 250, 251, 252, 909, 942, 876, 253, 1001,
	1002, 500, 0, 254, 255, 949, 0, 930, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	982, 272, 273, 933, 931, 932, 939, 935, 934, 938,
	274, 275, 276, 277, 966, 278, 960, 959, 880, 282,
	279, 280, 0, 283, 281, 0, 284, 0, 0, 285,
	951, 287, 0, 288, 289, 0, 290, 291, 0, 292,
	293, 886, 294, 295, 297, 299, 296, 300, 301, 302,
	303, 973, 974, 898, 229, 0, 0, 0, 0, 0,
	304, 305, 306, 958, 0, 0, 0, 307, 0, 308,
	0, 0, 983, 309, 310, 971, 972, 311, 312, 0,
	313, 980, 0, 908, 314, 0, 315, 316, 317, 318,
	319, 944, 945, 948, 372, 985, 320, 321, 0, 322,
	323, 324, 325, 0, 0, 0, 230, 326, 327, 329,
	0, 984, 328, 953, 954, 0, 914, 0, 330, 986,
	946, 987, 331, 332, 333, 988, 334, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 341, 340, 0, 342,
	981, 989, 343, 344, 990, 0, 345, 346, 347, 937,
	936, 348, 349, 350, 351, 0, 352, 353, 355, 357,
	354, 356, 361, 358, 359, 360, 363, 0, 362, 991,
	364, 365, 368, 369, 367, 992, 366, 877, 231, 993,
	370, 899, 947, 371, 961, 373, 374, 0, 0, 375,
	0, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	522, 994, 382, 995, 975, 383, 384, 376, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 393, 524, 525,
	976, 394, 527, 395, 396, 0, 397, 0, 398, 399,
	400, 401, 402, 403, 404, 957, 405, 406, 0, 0,
	0, 0, 0, 0, 407, 0, 409, 410, 411, 408,
	412, 413, 414, 415, 0, 416, 417, 996, 418, 419,
	420, 421, 887, 422, 0, 423, 427, 428, 429, 430,
	431, 432, 433, 0, 435, 436, 434, 437, 438, 439,
	940, 440, 424, 425, 441, 442, 997, 443, 444, 955,
	0, 445, 0, 446, 447, 448, 449, 426, 450, 455,
	1000, 451, 452, 453, 454, 977, 0, 457, 458, 875,
	456, 0, 459, 460, 461, 462, 463, 298, 464, 0,
	465, 967, 968, 969, 970, 0, 472, 0, 466, 467,
	978, 468, 979, 897, 469, 470, 471, 0, 473, 474,
	0, 881, 475, 476, 477, 479, 480, 478, 481, 941,
	482, 0, 0, 483, 484, 485, 539, 964, 999, 0,
	487, 486, 542, 0, 0, 0, 0, 488, 489, 543,
	490, 491, 492, 878, 0, 0, 0, 0, 0, 0,
	874, 0, 0, 0, 0, 0, 0, 872, 873, 0,
	0, 0, 0, 0, 0, 0, 903, 2157, 0, 1426,
	901, 919, 891, 892, 893, 889, 890, 902, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 233,
	234, 235, 236, 237, 0, 238, 239, 0, 0, 0,
	0, 0, 943, 907, 0, 0, 0, 240, 241, 243,
	242, 244, 245, 246, 494, 956, 0, 963, 247, 962,
	0, 248, 249, 250, 251, 252, 909, 942, 876, 253,
	1001, 1002, 500, 0, 254, 255, 949, 0, 930, 0,
	256, 257, 258, 259, 260, 261, 262, 0, 0, 264,
	265, 266, 263, 0, 267, 0, 268, 269, 270, 0,
	271, 982, 272, 273, 933, 931, 932, 939, 935, 934,
	938, 274, 275, 276, 277, 966, 278, 960, 959, 880,
	282, 279, 280, 0, 283, 281, 0, 284, 0, 0,
	285, 951, 287, 0, 288, 289, 0, 290, 291, 0,
	292, 293, 886, 294, 295, 297, 299, 296, 300, 301,
	302, 303, 973, 974, 898, 229, 0, 0, 0, 0,
	0, 304, 305, 306, 958, 0, 0, 0, 307, 0,
	308, 0, 0, 983, 309, 310, 971, 972, 311, 312,
	0, 313, 980, 0, 908, 314, 0, 315, 316, 317,
	318, 319, 944, 945, 948, 372, 985, 320, 321, 0,
	322, 323, 324, 325, 0, 0, 0, 230, 326, 327,
	329, 0, 984, 328, 953, 954, 0, 914, 0, 330,
	986, 946, 987, 331, 332, 333, 988, 334, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 341, 340, 0,
	342, 981, 989, 343, 344, 990, 0, 345, 346, 347,
	937, 936, 348, 349, 350, 351, 0, 352, 353, 355,
	357, 354, 356, 361, 358, 359, 360, 363, 0, 362,
	991, 364, 365, 368, 369, 367, 992, 366, 877, 231,
	993, 370, 899, 947, 371, 961, 373, 374, 0, 0,
	375, 0, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 522, 994, 382, 995, 975, 383, 384, 376, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 393, 524,
	525, 976, 394, 527, 395, 396, 0, 397, 0, 398,
	399, 400, 401, 402, 403, 404, 957, 405, 406, 0,
	0, 0, 0, 0, 0, 407, 0, 409, 410, 411,
	408, 412, 413, 414, 415, 0, 416, 417, 996, 418,
	419, 420, 421, 887, 422, 0, 423, 427, 428, 429,
	430, 431, 432, 433, 0, 435, 436, 434, 437, 438,
	439, 940, 440, 424, 425, 441, 442, 997, 443, 444,
	955, 0, 445, 0, 446, 447, 448, 449, 426, 450,
	455, 1000, 451, 452, 453, 454, 977, 0, 457, 458,
	875, 456, 0, 459, 460, 461, 462, 463, 298, 464,
	0, 465, 967, 968, 969, 970, 0, 472, 0, 466,
	467, 978, 468, 979, 897, 469, 470, 471, 0, 473,
	474, 0, 881, 475, 476, 477, 479, 480, 478, 481,
	941, 482, 0, 0, 483, 484, 485, 539, 964, 999,
	0, 487, 486, 542, 1425, 0, 0, 0, 488, 489,
	543, 490, 491, 492, 878, 0, 0, 0, 0, 0,
	0, 874, 0, 0, 0, 0, 0, 0, 872, 873,
	0, 0, 0, 0, 0, 0, 0, 903, 0, 0,
	868, 901, 919, 891, 892, 893, 889, 890, 902, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 943, 907, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 494, 956, 0, 963, 247,
	962, 0, 248, 249, 250, 251, 252, 909, 942, 876,
	253, 1001, 1002, 500, 0, 254, 255, 949, 0, 930,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 982, 272, 273, 933, 931, 932, 939, 935,
	934, 938, 274, 275, 276, 277, 966, 278, 960, 959,
	880, 282, 279, 280, 0, 283, 281, 0, 284, 0,
	0, 285, 951, 287, 0, 288, 289, 0, 290, 291,
	0, 292, 293, 886, 294, 295, 297, 299, 296, 300,
	301, 302, 303, 973, 974, 898, 229, 0, 0, 0,
	0, 0, 304, 305, 306, 958, 0, 0, 0, 307,
	0, 308, 0, 0, 983, 309, 310, 971, 972, 311,
	312, 0, 313, 980, 0, 908, 314, 0, 315, 316,
	317, 318, 319, 944, 945, 948, 372, 985, 320, 321,
	0, 322, 323, 324, 325, 0, 0, 0, 230, 326,
	327, 329, 0, 984, 328, 953, 954, 0, 914, 0,
	330, 986, 946, 987, 331, 332, 333, 988, 334, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 341, 340,
	0, 342, 981, 989, 343, 344, 990, 0, 345, 346,
	347, 937, 936, 348, 349, 350, 351, 0, 352, 353,
	355, 357, 354, 356, 361, 358, 359, 360, 363, 0,
	362, 991, 364, 365, 368, 369, 367, 992, 366, 877,
	231, 993, 370, 899, 947, 371, 961, 373, 374, 0,
	0, 375, 0, 882, 0, 377, 378, 379, 0, 0,
	380, 381, 522, 994, 382, 995, 975, 383, 384, 376,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 393,
	524, 525, 976, 394, 527, 395, 396, 0, 397, 0,
	398, 399, 400, 401, 402, 403, 404, 957, 405, 406,
	0, 0, 0, 0, 0, 0, 407, 0, 409, 410,
	411, 408, 412, 413, 414, 415, 0, 416, 417, 996,
	418, 419, 420, 421, 887, 422, 0, 423, 427, 428,
	429, 430, 431, 432, 433, 0, 435, 436, 434, 437,
	438, 439, 940, 440, 424, 425, 441, 442, 997, 443,
	444, 955, 0, 445, 0, 446, 447, 448, 449, 426,
	450, 455, 1000, 451, 452, 453, 454, 977, 0, 457,
	458, 875, 456, 0, 459, 460, 461, 462, 463, 298,
	464, 0, 465, 967, 968, 969, 970, 0, 472, 0,
	466, 467, 978, 468, 979, 897, 469, 470, 471, 0,
	473, 474, 0, 881, 475, 476, 477, 479, 480, 478,
	481, 941, 482, 0, 0, 483, 484, 485, 539, 964,
	999, 0, 487, 486, 542, 0, 0, 0, 0, 488,
	489, 543, 490, 491, 492, 878, 0, 0, 0, 0,
	0, 0, 874, 0, 0, 0, 0, 0, 0, 872,
	873, 919, 891, 892, 893, 889, 890, 902, 903, 0,
	0, 0, 901, 0, 0, 0, 0, 0, 232, 233,
	234, 235, 236, 237, 0, 238, 239, 0, 0, 0,
	0, 0, 943, 907, 0, 0, 0, 240, 241, 243,
	242, 244, 245, 246, 494, 956, 0, 963, 247, 962,
	0, 248, 249, 250, 251, 252, 909, 942, 876, 253,
	1001, 1002, 500, 0, 254, 255, 949, 0, 930, 0,
	256, 257, 258, 259, 260, 261, 262, 0, 0, 264,
	265, 266, 263, 0, 267, 0, 268, 3759, 270, 0,
	271, 982, 272, 273, 933, 931, 932, 939, 935, 934,
	938, 274, 275, 276, 277, 966, 278, 960, 959, 880,
	282, 279, 280, 0, 283, 281, 0, 284, 0, 0,
	285, 951, 287, 0, 288, 289, 0, 290, 291, 0,
	292, 293, 886, 294, 295, 297, 299, 296, 300, 301,
	302, 303, 973, 974, 898, 229, 0, 0, 0, 0,
	0, 304, 305, 306, 958, 0, 0, 0, 307, 0,
	308, 0, 0, 983, 309, 310, 971, 972, 311, 312,
	0, 313, 980, 0, 908, 314, 0, 315, 316, 317,
	318, 319, 944, 945, 948, 372, 985, 320, 321, 0,
	322, 323, 324, 325, 0, 0, 0, 230, 326, 327,
	329, 0, 984, 328, 953, 954, 0, 914, 0, 330,
	986, 946, 987, 331, 332, 333, 988, 334, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 341, 340, 0,
	342, 981, 989, 343, 344, 990, 0, 345, 346, 347,
	937, 936, 348, 349, 350, 351, 0, 352, 353, 355,
	357, 354, 356, 361, 358, 359, 360, 363, 0, 362,
	991, 364, 365, 368, 369, 367, 992, 366, 877, 231,
	993, 370, 899, 947, 371, 961, 373, 374, 0, 0,
	375, 0, 882, 0, 377, 378, 379, 0, 0, 380,
	381, 522, 994, 382, 995, 975, 383, 384, 376, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 393, 524,
	525, 976, 394, 527, 395, 396, 0, 397, 0, 398,
	399, 400, 401, 402, 403, 404, 957, 405, 406, 0,
	0, 0, 0, 0, 0, 407, 0, 409, 410, 411,
	408, 412, 413, 414, 415, 0, 416, 417, 996, 418,
	419, 420, 421, 887, 422, 0, 423, 427, 428, 429,
	430, 431, 432, 433, 0, 435, 436, 434, 437, 438,
	439, 940, 440, 424, 425, 441, 442, 997, 443, 444,
	955, 0, 445, 0, 446, 447, 448, 449, 426, 450,
	455, 1000, 451, 452, 453, 454, 977, 0, 457, 458,
	875, 456, 0, 459, 460, 461, 462, 463, 298, 464,
	0, 465, 967, 968, 969, 970, 0, 472, 0, 466,
	467, 978, 468, 979, 897, 469, 470, 471, 0, 473,
	474, 0, 881, 475, 476, 477, 479, 480, 478, 481,
	941, 482, 0, 0, 483, 484, 485, 539, 964, 999,
	0, 487, 486, 542, 0, 0, 0, 0, 488, 489,
	543, 490, 491, 492, 878, 0, 0, 0, 0, 0,
	0, 874, 0, 0, 0, 0, 0, 0, 872, 873,
	919, 891, 892, 893, 889, 890, 902, 903, 0, 0,
	0, 901, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 943, 907, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 494, 956, 0, 963, 247, 962, 0,
	248, 249, 250, 251, 252, 909, 942, 876, 253, 1001,
	1002, 500, 0, 254, 255, 949, 0, 930, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	982, 272, 273, 933, 931, 932, 939, 935, 934, 938,
	274, 275, 276, 277, 966, 278, 960, 959, 880, 282,
	279, 280, 0, 283, 281, 0, 284, 0, 0, 285,
	951, 287, 0, 288, 289, 0, 290, 291, 0, 292,
	293, 886, 294, 295, 297, 299, 296, 300, 301, 302,
	303, 973, 974, 898, 229, 0, 0, 0, 0, 0,
	304, 305, 306, 958, 0, 0, 0, 307, 0, 308,
	0, 0, 983, 309, 310, 971, 972, 311, 312, 0,
	313, 980, 0, 908, 314, 0, 315, 316, 317, 318,
	319, 944, 945, 948, 372, 985, 320, 321, 0, 322,
	323, 324, 325, 0, 0, 0, 2037, 326, 327, 329,
	0, 984, 328, 953, 954, 0, 914, 0, 330, 986,
	946, 987, 331, 332, 333, 988, 334, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 341, 340, 0, 342,
	981, 989, 343, 344, 990, 0, 345, 346, 347, 937,
	936, 348, 349, 350, 351, 0, 352, 353, 355, 357,
	354, 356, 361, 358, 359, 360, 363, 0, 362, 991,
	364, 365, 368, 369, 367, 992, 366, 877, 231, 993,
	370, 899, 947, 371, 961, 373, 374, 0, 0, 375,
	0, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	522, 994, 382, 995, 975, 383, 384, 376, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 393, 524, 525,
	976, 394, 527, 395, 396, 2036, 397, 0, 398, 399,
	400, 401, 402, 403, 404, 957, 405, 406, 0, 0,
	0, 0, 0, 0, 407, 0, 409, 410, 411, 408,
	412, 413, 414, 415, 0, 416, 417, 996, 418, 419,
	420, 421, 887, 422, 0, 423, 427, 428, 429, 430,
	431, 432, 433, 0, 435, 436, 434, 437, 438, 439,
	940, 440, 424, 425, 441, 442, 997, 443, 444, 955,
	0, 445, 0, 446, 447, 448, 449, 426, 450, 455,
	1000, 451, 452, 453, 454, 977, 0, 457, 458, 875,
	456, 0, 459, 460, 461, 462, 463, 298, 464, 0,
	465, 967, 968, 969, 970, 0, 472, 0, 466, 467,
	978, 468, 979, 897, 469, 470, 471, 0, 473, 474,
	0, 881, 475, 476, 477, 479, 480, 478, 481, 941,
	482, 0, 0, 483, 484, 485, 539, 964, 999, 0,
	487, 486, 542, 0, 0, 0, 0, 488, 489, 543,
	490, 491, 492, 878, 0, 0, 0, 0, 0, 0,
	874, 0, 0, 0, 0, 0, 0, 872, 873, 919,
	891, 892, 893, 889, 890, 902, 903, 0, 0, 0,
	901, 0, 0, 0, 0, 0, 232, 233, 234, 235,
	236, 237, 0, 238, 239, 0, 0, 0, 0, 0,
	943, 907, 0, 0, 0, 240, 241, 243, 242, 244,
	245, 246, 494, 956, 0, 963, 247, 962, 0, 248,
	249, 250, 251, 252, 909, 942, 876, 253, 1001, 1002,
	500, 0, 254, 255, 949, 0, 930, 0, 256, 257,
	258, 259, 260, 261, 262, 0, 0, 264, 265, 266,
	263, 0, 267, 0, 268, 3561, 270, 0, 271, 982,
	272, 273, 933, 931, 932, 939, 935, 934, 938, 274,
	275, 276, 277, 966, 278, 960, 959, 880, 282, 279,
	280, 0, 283, 281, 0, 284, 0, 0, 285, 951,
	287, 0, 288, 289, 0, 290, 291, 0, 292, 293,
	886, 294, 295, 297, 299, 296, 300, 301, 302, 303,
	973, 974, 898, 229, 0, 0, 0, 0, 0, 304,
	305, 306, 958, 0, 0, 0, 307, 0, 308, 0,
	0, 983, 309, 310, 971, 972, 311, 312, 0, 313,
	980, 0, 908, 314, 0, 315, 316, 317, 318, 319,
	944, 945, 948, 372, 985, 320, 321, 0, 322, 323,
	324, 325, 0, 0, 0, 230, 326, 327, 329, 0,
	984, 328, 953, 954, 0, 914, 0, 330, 986, 946,
	987, 331, 332, 333, 988, 334, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 341, 340, 0, 342, 981,
	989, 343, 344, 990, 0, 345, 346, 347, 937, 936,
	348, 349, 350, 351, 0, 352, 353, 355, 357, 354,
	356, 361, 358, 359, 360, 363, 0, 362, 991, 364,
	365, 368, 369, 367, 992, 366, 877, 231, 993, 370,
	899, 947, 371, 961, 373, 374, 0, 0, 375, 0,
	882, 0, 377, 378, 379, 0, 0, 380, 381, 522,
	994, 382, 995, 975, 383, 384, 376, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 393, 524, 525, 976,
	394, 527, 395, 396, 0, 397, 0, 398, 399, 400,
	401, 402, 403, 404, 957, 405, 406, 0, 0, 0,
	0, 0, 0, 407, 0, 409, 410, 411, 408, 412,
	413, 414, 415, 0, 416, 417, 996, 418, 419, 420,
	421, 887, 422, 0, 423, 427, 428, 429, 430, 431,
	432, 433, 0, 435, 436, 434, 437, 438, 439, 940,
	440, 424, 425, 441, 442, 997, 443, 444, 955, 0,
	445, 0, 446, 447, 448, 449, 426, 450, 455, 1000,
	451, 452, 453, 454, 977, 0, 457, 458, 875, 456,
	0, 459, 460, 461, 462, 463, 298, 464, 0, 465,
	967, 968, 969, 970, 0, 472, 0, 466, 467, 978,
	468, 979, 897, 469, 470, 471, 0, 473, 474, 0,
	881, 475, 476, 477, 479, 480, 478, 481, 941, 482,
	0, 0, 483, 484, 485, 539, 964, 999, 0, 487,
	486, 542, 0, 0, 0, 0, 488, 489, 543, 490,
	491, 492, 878, 0, 0, 0, 0, 0, 0, 874,
	0, 0, 0, 0, 0, 0, 872, 873, 919, 891,
	892, 893, 889, 890, 902, 903, 0, 0, 0, 901,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 943,
	907, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 956, 0, 963, 247, 962, 0, 248, 249,
	250, 251, 252, 909, 942, 876, 253, 1001, 1002, 500,
	0, 254, 255, 949, 0, 930, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 982, 272,
	273, 933, 931, 932, 939, 935, 934, 938, 274, 275,
	276, 277, 966, 278, 960, 959, 880, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 951, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 886,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 973,
	974, 898, 229, 0, 0, 0, 0, 0, 304, 305,
	306, 958, 0, 0, 0, 307, 0, 308, 0, 0,
	983, 309, 310, 971, 972, 311, 312, 0, 313, 980,
	0, 908, 314, 0, 315, 316, 317, 318, 319, 944,
	945, 948, 372, 985, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 230, 326, 327, 329, 0, 984,
	328, 953, 954, 0, 914, 0, 330, 986, 946, 987,
	331, 332, 333, 988, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 981, 989,
	343, 344, 990, 0, 345, 346, 347, 937, 936, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 991, 364, 365,
	368, 369, 367, 992, 366, 877, 3246, 993, 370, 899,
	947, 371, 961, 373, 374, 0, 0, 375, 0, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 994,
	382, 995, 975, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 976, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 957, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 996, 418, 419, 420, 421,
	887, 422, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 0, 435, 436, 434, 437, 438, 439, 940, 440,
	424, 425, 441, 442, 997, 443, 444, 955, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 1000, 451,
	452, 453, 454, 977, 0, 457, 458, 875, 456, 0,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 967,
	968, 969, 970, 0, 472, 0, 466, 467, 978, 468,
	979, 897, 469, 470, 471, 0, 473, 474, 0, 881,
	475, 476, 477, 479, 480, 478, 481, 941, 482, 0,
	0, 483, 484, 485, 539, 964, 999, 0, 487, 486,
	542, 0, 0, 0, 0, 488, 489, 543, 490, 491,
	492, 878, 0, 0, 0, 0, 0, 0, 874, 0,
	0, 0, 0, 0, 0, 872, 873, 1636, 0, 0,
	0, 0, 0, 0, 903, 0, 0, 0, 901, 919,
	891, 892, 893, 889, 890, 902, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 233, 234, 235,
	236, 237, 0, 238, 239, 0, 0, 0, 0, 0,
	943, 907, 0, 0, 0, 240, 241, 243, 242, 244,
	245, 246, 494, 956, 0, 963, 247, 962, 0, 248,
	249, 250, 251, 252, 909, 942, 876, 253, 1001, 1002,
	500, 0, 254, 255, 949, 0, 930, 0, 256, 257,
	258, 259, 260, 261, 262, 0, 0, 264, 265, 266,
	263, 0, 267, 0, 268, 269, 270, 0, 271, 982,
	272, 273, 933, 931, 932, 939, 935, 934, 938, 274,
	275, 276, 277, 966, 278, 960, 959, 880, 282, 279,
	280, 0, 283, 281, 0, 284, 0, 0, 285, 951,
	287, 0, 288, 289, 0, 290, 291, 0, 292, 293,
	886, 294, 295, 297, 299, 296, 300, 301, 302, 303,
	973, 974, 898, 229, 0, 0, 0, 0, 0, 304,
	305, 306, 958, 0, 0, 0, 307, 0, 308, 0,
	0, 983, 309, 310, 971, 972, 311, 312, 0, 313,
	980, 0, 908, 314, 0, 315, 316, 317, 318, 319,
	944, 945, 948, 372, 985, 320, 321, 0, 322, 323,
	324, 325, 0, 0, 0, 230, 326, 327, 329, 0,
	984, 328, 953, 954, 0, 914, 0, 330, 986, 946,
	987, 331, 332, 333, 988, 334, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 341, 340, 0, 342, 981,
	989, 343, 344, 990, 0, 345, 346, 347, 937, 936,
	348, 349, 350, 351, 0, 352, 353, 355, 357, 354,
	356, 361, 358, 359, 360, 363, 0, 362, 991, 364,
	365, 368, 369, 367, 992, 366, 877, 231, 993, 370,
	899, 947, 371, 961, 373, 374, 0, 0, 375, 0,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 522,
	994, 382, 995, 975, 383, 384, 376, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 393, 524, 525, 976,
	394, 527, 395, 396, 0, 397, 0, 398, 399, 400,
	401, 402, 403, 404, 957, 405, 406, 0, 0, 0,
	0, 0, 0, 407, 0, 409, 410, 411, 408, 412,
	413, 414, 415, 0, 416, 417, 996, 418, 419, 420,
	421, 887, 422, 0, 423, 427, 428, 429, 430, 431,
	432, 433, 0, 435, 436, 434, 437, 438, 439, 940,
	440, 424, 425, 441, 442, 997, 443, 444, 955, 0,
	445, 0, 446, 447, 448, 449, 426, 450, 455, 1000,
	451, 452, 453, 454, 977, 0, 457, 458, 875, 456,
	0, 459, 460, 461, 462, 463, 298, 464, 0, 465,
	967, 968, 969, 970, 0, 472, 0, 466, 467, 978,
	468, 979, 897, 469, 470, 471, 0, 473, 474, 0,
	881, 475, 476, 477, 479, 480, 478, 481, 941, 482,
	0, 0, 483, 484, 485, 539, 964, 999, 3026, 487,
	486, 542, 0, 0, 0, 0, 488, 489, 543, 490,
	491, 492, 878, 0, 0, 0, 0, 0, 0, 874,
	0, 0, 0, 0, 0, 0, 872, 873, 919, 891,
	892, 893, 889, 890, 902, 903, 0, 0, 0, 901,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 943,
	907, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 956, 0, 963, 247, 962, 0, 248, 249,
	250, 251, 252, 909, 942, 876, 253, 1001, 1002, 500,
	0, 254, 255, 949, 0, 930, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 982, 272,
	273, 933, 931, 932, 939, 935, 934, 938, 274, 275,
	276, 277, 966, 278, 960, 959, 880, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 951, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 886,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 973,
	974, 898, 229, 0, 0, 0, 0, 0, 304, 305,
	306, 958, 0, 0, 0, 307, 0, 308, 0, 0,
	983, 309, 310, 971, 972, 311, 312, 0, 313, 980,
	0, 908, 314, 0, 315, 316, 317, 318, 319, 944,
	945, 948, 372, 985, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 230, 326, 327, 329, 0, 984,
	328, 953, 954, 0, 914, 0, 330, 986, 946, 987,
	331, 332, 333, 988, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 981, 989,
	343, 344, 990, 0, 345, 346, 347, 937, 936, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 991, 364, 365,
	368, 369, 367, 992, 366, 877, 231, 993, 370, 899,
	947, 371, 961, 373, 374, 0, 0, 375, 0, 882,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 994,
	382, 995, 975, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 976, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 957, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 996, 418, 419, 420, 421,
	887, 422, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 0, 435, 436, 434, 437, 438, 439, 940, 440,
	424, 425, 441, 442, 997, 443, 444, 955, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 1000, 451,
	452, 453, 454, 977, 0, 457, 458, 875, 456, 0,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 967,
	968, 969, 970, 0, 472, 0, 466, 467, 978, 468,
	979, 897, 469, 470, 471, 0, 473, 474, 0, 881,
	475, 476, 477, 479, 480, 478, 481, 941, 482, 0,
	0, 483, 484, 485, 539, 964, 999, 0, 487, 486,
	542, 0, 0, 0, 0, 488, 489, 543, 490, 491,
	492, 878, 0, 0, 0, 0, 0, 0, 874, 0,
	0, 0, 0, 0, 0, 872, 873, 919, 891, 892,
	893, 889, 890, 902, 903, 0, 0, 0, 901, 0,
	0, 0, 0, 0, 232, 233, 234, 235, 236, 237,
	0, 238, 239, 0, 0, 0, 0, 0, 943, 907,
	0, 0, 0, 240, 241, 243, 242, 244, 245, 246,
	494, 956, 0, 963, 247, 962, 0, 248, 249, 250,
	251, 252, 909, 942, 876, 253, 1001, 1002, 500, 0,
	254, 255, 949, 0, 930, 0, 256, 257, 258, 259,
	260, 261, 262, 0, 0, 264, 265, 266, 263, 0,
	267, 0, 268, 269, 270, 0, 271, 982, 272, 273,
	933, 931, 932, 939, 935, 934, 938, 274, 275, 276,
	277, 966, 278, 960, 959, 880, 282, 279, 280, 0,
	283, 281, 0, 284, 0, 0, 285, 951, 287, 0,
	288, 289, 0, 290, 291, 0, 292, 293, 886, 294,
	295, 297, 299, 296, 300, 301, 302, 303, 973, 974,
	898, 229, 0, 0, 0, 0, 0, 304, 305, 306,
	958, 0, 0, 0, 307, 0, 308, 0, 0, 983,
	309, 310, 971, 972, 311, 312, 0, 313, 980, 0,
	908, 314, 0, 315, 316, 317, 318, 319, 944, 945,
	948, 372, 985, 320, 321, 0, 322, 323, 324, 325,
	0, 0, 0, 230, 326, 327, 329, 0, 984, 328,
	953, 954, 0, 914, 0, 330, 986, 946, 987, 331,
	332, 333, 988, 334, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 341, 340, 0, 342, 981, 989, 343,
	344, 990, 0, 345, 346, 347, 937, 936, 348, 349,
	350, 351, 0, 352, 353, 355, 357, 354, 356, 361,
	358, 359, 360, 363, 0, 362, 991, 364, 365, 368,
	369, 367, 992, 366, 877, 231, 993, 370, 899, 947,
	371, 961, 373, 374, 0, 0, 375, 0, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 522, 994, 382,
	995, 975, 383, 384, 376, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 393, 524, 525, 976, 394, 527,
	395, 396, 0, 397, 0, 398, 399, 400, 401, 402,
	403, 404, 957, 405, 406, 0, 0, 0, 0, 0,
	0, 407, 0, 409, 410, 411, 408, 412, 413, 414,
	415, 0, 416, 417, 996, 418, 419, 420, 421, 887,
	422, 0, 423, 427, 428, 429, 430, 431, 432, 433,
	0, 435, 436, 434, 437, 438, 439, 940, 440, 424,
	425, 441, 442, 997, 443, 444, 955, 0, 445, 0,
	446, 447, 448, 449, 426, 450, 455, 1000, 451, 452,
	453, 454, 977, 0, 457, 458, 875, 456, 0, 459,
	460, 461, 462, 463, 298, 464, 0, 465, 967, 968,
	969, 970, 0, 472, 0, 466, 467, 978, 468, 979,
	897, 469, 470, 471, 0, 473, 474, 0, 881, 475,
	476, 477, 479, 480, 478, 481, 941, 482, 0, 0,
	483, 484, 485, 539, 964, 999, 0, 487, 486, 542,
	0, 0, 0, 0, 488, 489, 543, 490, 491, 492,
	878, 0, 0, 0, 0, 0, 0, 874, 0, 0,
	0, 0, 0, 0, 872, 873, 1636, 0, 0, 0,
	0, 0, 0, 903, 0, 0, 0, 901, 919, 891,
	892, 893, 889, 890, 902, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 943,
	907, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 956, 0, 963, 247, 962, 0, 248, 249,
	250, 251, 252, 909, 942, 876, 253, 1001, 1002, 500,
	0, 254, 255, 949, 0, 930, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 982, 272,
	273, 933, 931, 932, 939, 935, 934, 938, 274, 275,
	276, 277, 966, 278, 960, 959, 880, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 951, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 886,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 973,
	974, 898, 229, 0, 0, 0, 0, 0, 304, 305,
	306, 958, 0, 0, 0, 307, 0, 308, 0, 2232,
	983, 309, 310, 971, 972, 311, 312, 0, 313, 980,
	0, 908, 314, 0, 315, 316, 317, 318, 319, 944,
	945, 948, 372, 985, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 230, 326, 327, 329, 0, 984,
	328, 953, 954, 0, 914, 0, 330, 986, 946, 987,
	331, 332, 333, 988, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 981, 989,
	343, 344, 990, 0, 345, 346, 347, 937, 936, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 991, 364, 365,
	368, 369, 367, 992, 366, 877, 231, 993, 370, 899,
	947, 371, 961, 373, 374, 0, 0, 375, 0, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 994,
	382, 995, 975, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 976, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 957, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 996, 418, 419, 420, 421,
	887, 422, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 0, 435, 436, 434, 437, 438, 439, 940, 440,
	424, 425, 441, 442, 997, 443, 444, 955, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 1000, 451,
	452, 453, 454, 977, 0, 457, 458, 875, 456, 0,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 967,
	968, 969, 970, 0, 472, 0, 466, 467, 978, 468,
	979, 897, 469, 470, 471, 0, 473, 474, 0, 881,
	475, 476, 477, 479, 480, 478, 481, 941, 482, 0,
	0, 483, 484, 485, 539, 964, 999, 0, 487, 486,
	542, 0, 0, 0, 0, 488, 489, 543, 490, 491,
	492, 878, 0, 0, 0, 0, 0, 0, 874, 0,
	0, 0, 0, 0, 0, 872, 873, 919, 891, 892,
	893, 889, 890, 902, 903, 0, 0, 0, 901, 0,
	0, 0, 0, 0, 232, 233, 234, 235, 236, 237,
	0, 238, 239, 0, 0, 0, 0, 0, 943, 907,
	0, 0, 0, 240, 241, 243, 242, 244, 245, 246,
	494, 956, 0, 963, 247, 962, 0, 248, 249, 250,
	251, 252, 909, 942, 876, 253, 1001, 1002, 500, 0,
	254, 255, 949, 0, 930, 0, 256, 257, 258, 259,
	260, 261, 262, 0, 0, 264, 265, 266, 263, 0,
	267, 0, 268, 269, 270, 0, 271, 982, 272, 273,
	933, 931, 932, 939, 935, 934, 938, 274, 275, 276,
	277, 966, 278, 960, 959, 880, 282, 279, 280, 0,
	283, 281, 0, 284, 0, 0, 285, 951, 287, 0,
	288, 289, 0, 290, 291, 0, 292, 293, 886, 294,
	295, 297, 299, 296, 300, 301, 302, 303, 973, 974,
	898, 229, 0, 0, 0, 0, 0, 304, 305, 306,
	958, 0, 0, 0, 307, 0, 308, 0, 0, 983,
	309, 310, 971, 972, 311, 312, 0, 313, 980, 0,
	908, 314, 0, 315, 316, 317, 318, 319, 944, 945,
	948, 372, 985, 320, 321, 0, 322, 323, 324, 325,
	0, 0, 0, 230, 326, 327, 329, 0, 984, 328,
	953, 954, 0, 914, 0, 330, 986, 946, 987, 331,
	332, 333, 988, 334, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 341, 340, 0, 342, 981, 989, 343,
	344, 990, 0, 345, 346, 347, 937, 936, 348, 349,
	350, 351, 0, 352, 353, 355, 357, 354, 356, 361,
	358, 359, 360, 363, 0, 362, 991, 364, 365, 368,
	369, 367, 992, 366, 877, 231, 993, 370, 899, 947,
	371, 961, 373, 374, 0, 0, 375, 0, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 522, 994, 382,
	995, 975, 383, 384, 376, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 393, 524, 525, 976, 394, 527,
	395, 396, 0, 397, 0, 398, 399, 400, 401, 402,
	403, 404, 957, 405, 406, 0, 0, 0, 0, 0,
	0, 407, 0, 409, 410, 411, 408, 412, 413, 414,
	415, 0, 416, 417, 996, 418, 419, 420, 421, 887,
	422, 0, 423, 427, 428, 429, 430, 431, 432, 433,
	0, 435, 436, 434, 437, 438, 439, 940, 440, 424,
	425, 441, 442, 997, 443, 444, 955, 0, 445, 0,
	446, 447, 448, 449, 426, 450, 455, 1000, 451, 452,
	453, 454, 977, 0, 457, 458, 875, 456, 0, 459,
	460, 461, 462, 463, 298, 464, 0, 465, 967, 968,
	969, 970, 0, 472, 0, 466, 467, 978, 468, 979,
	897, 469, 470, 471, 0, 473, 474, 0, 881, 475,
	476, 477, 479, 480, 478, 481, 941, 482, 0, 0,
	483, 484, 485, 539, 964, 999, 0, 487, 486, 542,
	0, 0, 0, 0, 488, 489, 543, 490, 491, 492,
	878, 0, 0, 0, 0, 0, 0, 874, 0, 0,
	0, 0, 0, 0, 872, 873, 0, 0, 0, 0,
	0, 0, 0, 903, 1566, 0, 2237, 901, 919, 891,
	892, 893, 889, 890, 902, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 943,
	907, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 956, 0, 963, 247, 962, 0, 248, 249,
	250, 251, 252, 909, 942, 876, 253, 1001, 1002, 500,
	0, 254, 255, 949, 0, 930, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 982, 272,
	273, 933, 931, 932, 939, 935, 934, 938, 274, 275,
	276, 277, 966, 278, 960, 959, 880, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 951, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 886,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 973,
	974, 898, 229, 0, 0, 0, 0, 0, 304, 305,
	306, 958, 0, 0, 0, 307, 0, 308, 0, 0,
	983, 309, 310, 971, 972, 311, 312, 0, 313, 980,
	0, 908, 314, 0, 315, 316, 317, 318, 319, 944,
	945, 948, 372, 985, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 230, 326, 327, 329, 0, 984,
	328, 953, 954, 0, 914, 0, 330, 986, 946, 987,
	331, 332, 333, 988, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 981, 989,
	343, 344, 990, 0, 345, 346, 347, 937, 936, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 991, 364, 365,
	368, 369, 367, 992, 366, 877, 231, 993, 370, 899,
	947, 371, 961, 373, 374, 0, 0, 375, 0, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 994,
	382, 995, 975, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 976, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 957, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 996, 418, 419, 420, 421,
	887, 422, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 0, 435, 436, 434, 437, 438, 439, 940, 440,
	424, 425, 441, 442, 997, 443, 444, 955, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 1000, 451,
	452, 453, 454, 977, 0, 457, 458, 875, 456, 0,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 967,
	968, 969, 970, 0, 472, 0, 466, 467, 978, 468,
	979, 897, 469, 470, 471, 0, 473, 474, 0, 881,
	475, 476, 477, 479, 480, 478, 481, 941, 482, 0,
	0, 483, 484, 485, 539, 964, 999, 0, 487, 486,
	542, 0, 0, 0, 0, 488, 489, 543, 490, 491,
	492, 878, 0, 0, 0, 0, 0, 0, 874, 0,
	0, 0, 0, 0, 0, 872, 873, 0, 0, 0,
	0, 0, 0, 0, 903, 0, 0, 2235, 901, 919,
	891, 892, 893, 889, 890, 902, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 233, 234, 235,
	236, 237, 0, 238, 239, 0, 0, 0, 0, 0,
	943, 907, 0, 0, 0, 240, 241, 243, 242, 244,
	245, 246, 494, 956, 0, 963, 247, 962, 0, 248,
	249, 250, 251, 252, 909, 942, 876, 253, 1001, 1002,
	500, 0, 254, 255, 949, 0, 930, 0, 256, 257,
	258, 259, 260, 261, 262, 0, 0, 264, 265, 266,
	263, 0, 267, 0, 268, 269, 270, 0, 271, 982,
	272, 273, 933, 931, 932, 939, 935, 934, 938, 274,
	275, 276, 277, 966, 278, 960, 959, 880, 282, 279,
	280, 0, 283, 281, 0, 284, 0, 0, 285, 951,
	287, 0, 288, 289, 0, 290, 291, 0, 292, 293,
	886, 294, 295, 297, 299, 296, 300, 301, 302, 303,
	973, 974, 898, 229, 0, 0, 0, 0, 0, 304,
	305, 306, 958, 0, 0, 0, 307, 0, 308, 0,
	0, 983, 309, 310, 971, 972, 311, 312, 0, 313,
	980, 0, 908, 314, 0, 315, 316, 317, 318, 319,
	944, 945, 948, 372, 985, 320, 321, 0, 322, 323,
	324, 325, 0, 0, 0, 230, 326, 327, 329, 0,
	984, 328, 953, 954, 0, 914, 0, 330, 986, 946,
	987, 331, 332, 333, 988, 334, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 341, 340, 0, 342, 981,
	989, 343, 344, 990, 0, 345, 346, 347, 937, 936,
	348, 349, 350, 351, 0, 352, 353, 355, 357, 354,
	356, 361, 358, 359, 360, 363, 0, 362, 991, 364,
	365, 368, 369, 367, 992, 366, 877, 231, 993, 370,
	899, 947, 371, 961, 373, 374, 0, 0, 375, 0,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 522,
	994, 382, 995, 975, 383, 384, 376, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 393, 524, 525, 976,
	394, 527, 395, 396, 0, 397, 0, 398, 399, 400,
	401, 402, 403, 404, 957, 405, 406, 0, 0, 0,
	0, 0, 0, 407, 0, 409, 410, 411, 408, 412,
	413, 414, 415, 0, 416, 417, 996, 418, 419, 420,
	421, 887, 422, 0, 423, 427, 428, 429, 430, 431,
	432, 433, 0, 435, 436, 434, 437, 438, 439, 940,
	440, 424, 425, 441, 442, 997, 443, 444, 955, 0,
	445, 0, 446, 447, 448, 449, 426, 450, 455, 1000,
	451, 452, 453, 454, 977, 0, 457, 458, 875, 456,
	0, 459, 460, 461, 462, 463, 298, 464, 0, 465,
	967, 968, 969, 970, 0, 472, 0, 466, 467, 978,
	468, 979, 897, 469, 470, 471, 0, 473, 474, 0,
	881, 475, 476, 477, 479, 480, 478, 481, 941, 482,
	0, 0, 483, 484, 485, 539, 964, 999, 0, 487,
	486, 542, 0, 0, 0, 0, 488, 489, 543, 490,
	491, 492, 878, 0, 0, 0, 0, 0, 0, 874,
	0, 0, 0, 0, 0, 0, 872, 873, 0, 0,
	0, 0, 0, 0, 0, 903, 0, 0, 2223, 901,
	919, 891, 892, 893, 889, 890, 902, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 943, 907, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 494, 956, 0, 963, 247, 962, 0,
	248, 249, 250, 251, 252, 909, 942, 876, 253, 1001,
	1002, 500, 0, 254, 255, 949, 0, 930, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	982, 272, 273, 933, 931, 932, 939, 935, 934, 938,
	274, 275, 276, 277, 966, 278, 960, 959, 880, 282,
	279, 280, 0, 283, 281, 0, 284, 0, 0, 285,
	951, 287, 0, 288, 289, 0, 290, 291, 0, 292,
	293, 886, 294, 295, 297, 299, 296, 300, 301, 302,
	303, 973, 974, 898, 229, 0, 0, 0, 0, 0,
	304, 305, 306, 958, 0, 0, 0, 307, 0, 308,
	0, 0, 983, 309, 310, 971, 972, 311, 312, 0,
	313, 980, 0, 908, 314, 0, 315, 316, 317, 318,
	319, 944, 945, 948, 372, 985, 320, 321, 0, 322,
	323, 324, 325, 0, 0, 0, 230, 326, 327, 329,
	0, 984, 328, 953, 954, 0, 914, 0, 330, 986,
	946, 987, 331, 332, 333, 988, 334, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 341, 340, 0, 342,
	981, 989, 343, 344, 990, 0, 345, 346, 347, 937,
	936, 348, 349, 350, 351, 0, 352, 353, 355, 357,
	354, 356, 361, 358, 359, 360, 363, 0, 362, 991,
	364, 365, 368, 369, 367, 992, 366, 877, 231, 993,
	370, 899, 947, 371, 961, 373, 374, 0, 0, 375,
	0, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	522, 994, 382, 995, 975, 383, 384, 376, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 393, 524, 525,
	976, 394, 527, 395, 396, 0, 397, 0, 398, 399,
	400, 401, 402, 403, 404, 957, 405, 406, 0, 0,
	0, 0, 0, 0, 407, 0, 409, 410, 411, 408,
	412, 413, 414, 415, 0, 416, 417, 996, 418, 419,
	420, 421, 887, 422, 0, 423, 427, 428, 429, 430,
	431, 432, 433, 0, 435, 436, 434, 437, 438, 439,
	940, 440, 424, 425, 441, 442, 997, 443, 444, 955,
	0, 445, 0, 446, 447, 448, 449, 426, 450, 455,
	1000, 451, 452, 453, 454, 977, 0, 457, 458, 875,
	456, 0, 459, 460, 461, 462, 463, 298, 464, 0,
	465, 967, 968, 969, 970, 0, 472, 0, 466, 467,
	978, 468, 979, 897, 469, 470, 471, 0, 473, 474,
	0, 881, 475, 476, 477, 479, 480, 478, 481, 941,
	482, 0, 0, 483, 484, 485, 539, 964, 999, 0,
	487, 486, 542, 0, 0, 0, 0, 488, 489, 543,
	490, 491, 492, 878, 0, 0, 0, 0, 0, 0,
	874, 0, 0, 0, 0, 0, 0, 872, 873, 0,
	0, 0, 0, 0, 0, 0, 903, 0, 0, 2212,
	901, 919, 891, 892, 893, 889, 890, 902, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 233,
	234, 235, 236, 237, 0, 238, 239, 0, 0, 0,
	0, 0, 943, 907, 0, 0, 0, 240, 241, 243,
	242, 244, 245, 246, 494, 956, 0, 963, 247, 962,
	0, 248, 249, 250, 251, 252, 909, 942, 876, 253,
	1001, 1002, 500, 0, 254, 255, 949, 0, 930, 0,
	256, 257, 258, 259, 260, 261, 262, 0, 0, 264,
	265, 266, 263, 0, 267, 0, 268, 269, 270, 0,
	271, 982, 272, 273, 933, 931, 932, 939, 935, 934,
	938, 274, 275, 276, 277, 966, 278, 960, 959, 880,
	282, 279, 280, 0, 283, 281, 0, 284, 0, 0,
	285, 951, 287, 0, 288, 289, 0, 290, 291, 0,
	292, 293, 886, 294, 295, 297, 299, 296, 300, 301,
	302, 303, 973, 974, 898, 229, 0, 0, 0, 0,
	0, 304, 305, 306, 958, 0, 0, 0, 307, 0,
	308, 0, 0, 983, 309, 310, 971, 972, 311, 312,
	0, 313, 980, 0, 908, 314, 0, 315, 316, 317,
	318, 319, 944, 945, 948, 372, 985, 320, 321, 0,
	322, 323, 324, 325, 0, 0, 0, 230, 326, 327,
	329, 0, 984, 328, 953, 954, 0, 914, 0, 330,
	986, 946, 987, 331, 332, 333, 988, 334, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 341, 340, 0,
	342, 981, 989, 343, 344, 990, 0, 345, 346, 347,
	937, 936, 348, 349, 350, 351, 0, 352, 353, 355,
	357, 354, 356, 361, 358, 359, 360, 363, 0, 362,
	991, 364, 365, 368, 369, 367, 992, 366, 877, 231,
	993, 370, 899, 947, 371, 961, 373, 374, 0, 0,
	375, 0, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 522, 994, 382, 995, 975, 383, 384, 376, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 393, 524,
	525, 976, 394, 527, 395, 396, 0, 397, 0, 398,
	399, 400, 401, 402, 403, 404, 957, 405, 406, 0,
	0, 0, 0, 0, 0, 407, 0, 409, 410, 411,
	408, 412, 413, 414, 415, 0, 416, 417, 996, 418,
	419, 420, 421, 887, 422, 0, 423, 427, 428, 429,
	430, 431, 432, 433, 0, 435, 436, 434, 437, 438,
	439, 940, 440, 424, 425, 441, 442, 997, 443, 444,
	955, 0, 445, 0, 446, 447, 448, 449, 426, 450,
	455, 1000, 451, 452, 453, 454, 977, 0, 457, 458,
	875, 456, 0, 459, 460, 461, 462, 463, 298, 464,
	0, 465, 967, 968, 969, 970, 0, 472, 0, 466,
	467, 978, 468, 979, 897, 469, 470, 471, 0, 473,
	474, 0, 881, 475, 476, 477, 479, 480, 478, 481,
	941, 482, 0, 0, 483, 484, 485, 539, 964, 999,
	0, 487, 486, 542, 0, 0, 0, 0, 488, 489,
	543, 490, 491, 492, 878, 0, 0, 0, 0, 0,
	0, 874, 0, 0, 0, 0, 0, 0, 872, 873,
	0, 0, 0, 0, 0, 0, 0, 903, 0, 0,
	2210, 901, 2201, 2208, 892, 893, 889, 890, 902, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 943, 907, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 494, 956, 0, 963, 247,
	962, 0, 248, 249, 250, 251, 252, 909, 942, 876,
	253, 1001, 1002, 500, 0, 254, 255, 949, 0, 930,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 982, 272, 273, 933, 931, 932, 939, 935,
	934, 938, 274, 275, 276, 277, 966, 2204, 960, 959,
	880, 282, 279, 280, 0, 283, 281, 0, 284, 0,
	0, 285, 951, 287, 0, 288, 289, 0, 290, 291,
	0, 292, 293, 886, 294, 295, 297, 299, 296, 300,
	301, 302, 303, 973, 974, 898, 229, 0, 0, 0,
	0, 0, 304, 305, 306, 958, 0, 0, 0, 307,
	0, 308, 0, 0, 983, 309, 310, 971, 972, 311,
	312, 0, 313, 980, 0, 908, 314, 0, 315, 316,
	317, 2205, 319, 944, 945, 948, 372, 985, 320, 321,
	0, 322, 323, 324, 325, 0, 0, 0, 230, 326,
	327, 329, 0, 984, 328, 953, 954, 0, 914, 0,
	330, 986, 946, 987, 331, 332, 333, 988, 334, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 341, 340,
	0, 342, 981, 989, 343, 344, 990, 0, 345, 346,
	347, 937, 936, 348, 349, 350, 351, 0, 352, 353,
	355, 357, 354, 2206, 2203, 358, 359, 360, 363, 0,
	362, 991, 364, 365, 368, 369, 367, 992, 366, 877,
	231, 993, 370, 899, 947, 371, 961, 373, 374, 0,
	0, 375, 0, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 522, 994, 382, 995, 975, 383, 384, 376,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 393,
	524, 525, 976, 394, 527, 395, 396, 0, 397, 0,
	398, 399, 400, 401, 402, 403, 404, 957, 405, 406,
	0, 0, 0, 0, 0, 0, 407, 0, 409, 410,
	411, 408, 412, 413, 414, 415, 0, 416, 417, 996,
	418, 419, 420, 421, 887, 422, 0, 423, 427, 428,
	429, 430, 431, 432, 2207, 0, 435, 436, 434, 437,
	438, 439, 940, 440, 424, 425, 441, 442, 997, 443,
	444, 955, 0, 445, 0, 446, 447, 448, 449, 426,
	450, 455, 1000, 451, 452, 453, 454, 977, 0, 457,
	458, 875, 456, 0, 459, 460, 461, 462, 463, 298,
	464, 0, 465, 967, 968, 969, 970, 0, 472, 0,
	466, 467, 978, 468, 979, 897, 469, 470, 471, 0,
	473, 474, 0, 881, 475, 476, 477, 479, 480, 478,
	481, 941, 482, 0, 0, 483, 484, 485, 539, 964,
	999, 0, 487, 486, 542, 0, 0, 0, 0, 488,
	489, 543, 490, 2202, 492, 878, 0, 0, 0, 0,
	0, 0, 874, 0, 0, 0, 0, 0, 0, 872,
	873, 0, 0, 0, 0, 0, 0, 0, 903, 0,
	0, 2198, 901, 2201, 2208, 892, 893, 889, 890, 902,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 233, 234, 235, 236, 237, 0, 238, 239, 0,
	0, 0, 0, 0, 943, 907, 0, 0, 0, 240,
	241, 243, 242, 244, 245, 246, 494, 956, 0, 963,
	247, 962, 0, 248, 249, 250, 251, 252, 909, 942,
	876, 253, 1001, 1002, 500, 0, 254, 255, 949, 0,
	930, 0, 256, 257, 258, 259, 260, 261, 262, 0,
	0, 264, 265, 266, 263, 0, 267, 0, 268, 269,
	270, 0, 271, 982, 272, 273, 933, 931, 932, 939,
	935, 934, 938, 274, 275, 276, 277, 966, 2204, 960,
	959, 880, 282, 279, 280, 0, 283, 281, 0, 284,
	0, 0, 285, 951, 287, 0, 288, 289, 0, 290,
	291, 0, 292, 293, 886, 294, 295, 297, 299, 296,
	300, 301, 302, 303, 973, 974, 898, 229, 0, 0,
	0, 0, 0, 304, 305, 306, 958, 0, 0, 0,
	307, 0, 308, 0, 0, 983, 309, 310, 971, 972,
	311, 312, 0, 313, 980, 0, 908, 314, 0, 315,
	316, 317, 2205, 319, 944, 945, 948, 372, 985, 320,
	321, 0, 322, 323, 324, 325, 0, 0, 0, 230,
	326, 327, 329, 0, 984, 328, 953, 954, 0, 914,
	0, 330, 986, 946, 987, 331, 332, 333, 988, 334,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 341,
	340, 0, 342, 981, 989, 343, 344, 990, 0, 345,
	346, 347, 937, 936, 348, 349, 350, 351, 0, 352,
	353, 355, 357, 354, 2206, 2203, 358, 359, 360, 363,
	0, 362, 991, 364, 365, 368, 369, 367, 992, 366,
	877, 231, 993, 370, 899, 947, 371, 961, 373, 374,
	0, 0, 375, 0, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 522, 994, 382, 995, 975, 383, 384,
	376, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	393, 524, 525, 976, 394, 527, 395, 396, 0, 397,
	0, 398, 399, 400, 401, 402, 403, 404, 957, 405,
	406, 0, 0, 0, 0, 0, 0, 407, 0, 409,
	410, 411, 408, 412, 413, 414, 415, 0, 416, 417,
	996, 418, 419, 420, 421, 887, 422, 0, 423, 427,
	428, 429, 430, 431, 432, 2207, 0, 435, 436, 434,
	437, 438, 439, 940, 440, 424, 425, 441, 442, 997,
	443, 444, 955, 0, 445, 0, 446, 447, 448, 449,
	426, 450, 455, 1000, 451, 452, 453, 454, 977, 0,
	457, 458, 875, 456, 0, 459, 460, 461, 462, 463,
	298, 464, 0, 465, 967, 968, 969, 970, 0, 472,
	0, 466, 467, 978, 468, 979, 897, 469, 470, 471,
	0, 473, 474, 0, 881, 475, 476, 477, 479, 480,
	478, 481, 941, 482, 0, 0, 483, 484, 485, 539,
	964, 999, 0, 487, 486, 542, 0, 0, 0, 0,
	488, 489, 543, 490, 2202, 492, 878, 0, 0, 0,
	0, 0, 0, 874, 0, 0, 0, 0, 0, 0,
	872, 873, 919, 891, 892, 893, 889, 890, 902, 903,
	0, 0, 0, 901, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 943, 907, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 494, 956, 0, 963, 247,
	962, 0, 248, 249, 250, 251, 252, 909, 942, 876,
	253, 1001, 1002, 500, 0, 254, 255, 949, 0, 930,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 982, 272, 273, 933, 931, 932, 939, 935,
	934, 938, 274, 275, 276, 277, 966, 278, 960, 959,
	880, 282, 279, 280, 0, 283, 281, 0, 284, 0,
	0, 285, 951, 287, 0, 288, 289, 0, 290, 291,
	0, 292, 293, 886, 294, 295, 297, 299, 296, 300,
	301, 302, 303, 973, 974, 898, 229, 0, 0, 0,
	0, 0, 304, 305, 306, 958, 0, 0, 0, 307,
	0, 308, 0, 0, 983, 309, 310, 971, 972, 311,
	312, 0, 313, 980, 0, 908, 314, 0, 315, 316,
	317, 318, 319, 944, 945, 948, 372, 985, 320, 321,
	0, 322, 323, 324, 325, 0, 0, 0, 230, 326,
	327, 329, 0, 984, 328, 953, 954, 0, 914, 0,
	330, 986, 946, 987, 331, 332, 333, 988, 334, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 341, 340,
	0, 342, 981, 989, 343, 344, 990, 0, 345, 346,
	347, 937, 936, 348, 349, 350, 351, 0, 352, 353,
	355, 357, 354, 356, 361, 358, 359, 360, 363, 0,
	362, 991, 364, 365, 368, 369, 367, 992, 366, 877,
	231, 993, 370, 899, 947, 371, 961, 373, 374, 0,
	0, 375, 0, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 522, 994, 382, 995, 975, 383, 384, 376,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 393,
	524, 525, 976, 394, 527, 395, 396, 0, 397, 0,
	398, 399, 400, 401, 402, 403, 404, 957, 405, 406,
	0, 0, 0, 0, 0, 0, 407, 0, 409, 410,
	411, 408, 412, 413, 414, 415, 0, 416, 417, 996,
	418, 419, 420, 421, 887, 422, 0, 423, 427, 428,
	429, 430, 431, 432, 433, 0, 435, 436, 434, 437,
	438, 439, 940, 440, 424, 425, 441, 442, 997, 443,
	444, 955, 0, 445, 0, 446, 447, 448, 449, 426,
	450, 455, 1000, 451, 452, 453, 454, 977, 0, 457,
	458, 875, 456, 0, 459, 460, 461, 462, 463, 298,
	464, 0, 465, 967, 968, 969, 970, 0, 472, 0,
	466, 467, 978, 468, 979, 897, 469, 470, 471, 0,
	473, 474, 0, 881, 475, 476, 477, 479, 480, 478,
	481, 941, 482, 0, 0, 483, 484, 485, 539, 964,
	999, 0, 487, 486, 542, 0, 0, 0, 0, 488,
	489, 543, 490, 491, 492, 878, 0, 0, 0, 0,
	0, 0, 874, 0, 0, 0, 0, 0, 0, 872,
	873, 0, 0, 0, 0, 0, 1574, 0, 903, 0,
	0, 0, 901, 919, 891, 892, 893, 889, 890, 902,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 233, 234, 235, 236, 237, 2016, 238, 239, 0,
	0, 0, 0, 0, 943, 907, 0, 0, 0, 240,
	241, 243, 242, 244, 245, 246, 494, 956, 0, 963,
	247, 962, 0, 248, 249, 250, 251, 252, 909, 942,
	876, 253, 1001, 1002, 500, 0, 254, 255, 949, 0,
	930, 0, 256, 257, 258, 259, 260, 261, 262, 0,
	0, 264, 265, 266, 263, 0, 267, 0, 268, 269,
	270, 0, 271, 982, 272, 273, 933, 931, 932, 939,
	935, 934, 938, 274, 275, 276, 277, 966, 278, 960,
	959, 880, 282, 279, 280, 0, 283, 281, 0, 284,
	0, 0, 285, 951, 287, 0, 288, 289, 0, 290,
	291, 0, 292, 293, 886, 294, 295, 297, 299, 296,
	300, 301, 302, 303, 973, 974, 898, 229, 0, 0,
	0, 0, 0, 304, 305, 306, 958, 0, 0, 0,
	307, 0, 308, 0, 0, 983, 309, 310, 971, 972,
	311, 312, 0, 313, 980, 0, 908, 314, 0, 315,
	316, 317, 318, 319, 944, 945, 948, 372, 985, 320,
	321, 0, 322, 323, 324, 325, 0, 0, 0, 230,
	326, 327, 329, 0, 984, 328, 953, 954, 0, 914,
	0, 330, 986, 946, 987, 331, 332, 333, 988, 334,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 341,
	340, 0, 342, 981, 989, 343, 344, 990, 0, 345,
	346, 347, 937, 936, 348, 349, 350, 351, 0, 352,
	353, 355, 357, 354, 356, 361, 358, 359, 360, 363,
	0, 362, 991, 364, 365, 368, 369, 367, 992, 366,
	877, 231, 993, 370, 899, 947, 371, 961, 373, 374,
	0, 0, 375, 0, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 522, 994, 382, 995, 975, 383, 384,
	376, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	393, 524, 525, 976, 394, 527, 395, 396, 0, 397,
	0, 398, 399, 400, 401, 402, 403, 404, 957, 405,
	406, 0, 0, 0, 0, 0, 0, 407, 0, 409,
	410, 411, 408, 412, 413, 414, 415, 0, 416, 417,
	996, 418, 419, 420, 421, 887, 422, 0, 423, 427,
	428, 429, 430, 431, 432, 433, 0, 435, 436, 434,
	437, 438, 439, 940, 440, 424, 425, 441, 442, 997,
	443, 444, 955, 0, 445, 0, 446, 447, 448, 449,
	426, 450, 455, 1000, 451, 452, 453, 454, 977, 0,
	457, 458, 875, 456, 0, 459, 460, 461, 462, 463,
	298, 464, 0, 465, 967, 968, 969, 970, 0, 472,
	0, 466, 467, 978, 468, 979, 897, 469, 470, 471,
	0, 473, 474, 0, 881, 475, 476, 477, 479, 480,
	478, 481, 941, 482, 0, 0, 483, 484, 485, 539,
	964, 999, 0, 487, 486, 542, 0, 0, 0, 0,
	488, 489, 543, 490, 491, 492, 878, 0, 0, 0,
	0, 0, 0, 874, 0, 0, 0, 0, 0, 0,
	872, 873, 0, 0, 0, 0, 0, 0, 0, 903,
	0, 0, 1244, 901, 919, 891, 892, 893, 889, 890,
	902, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 943, 907, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 494, 956, 0,
	963, 247, 962, 0, 248, 249, 250, 251, 252, 909,
	942, 876, 253, 1001, 1002, 500, 0, 254, 255, 949,
	0, 930, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 982, 272, 273, 933, 931, 932,
	939, 935, 934, 938, 274, 275, 276, 277, 966, 278,
	960, 959, 880, 282, 279, 280, 0, 283, 281, 0,
	284, 0, 0, 285, 951, 287, 0, 288, 289, 0,
	290, 291, 0, 292, 293, 886, 294, 295, 297, 299,
	296, 300, 301, 302, 303, 973, 974, 898, 229, 0,
	0, 0, 0, 0, 304, 305, 306, 958, 0, 0,
	0, 307, 0, 308, 0, 0, 983, 309, 310, 971,
	972, 311, 312, 0, 313, 980, 0, 908, 314, 0,
	315, 316, 317, 318, 319, 1243, 945, 948, 372, 985,
	320, 321, 0, 322, 323, 324, 325, 0, 0, 0,
	230, 326, 327, 329, 0, 984, 328, 953, 954, 0,
	914, 0, 330, 986, 946, 987, 331, 332, 333, 988,
	334, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	341, 340, 0, 342, 981, 989, 343, 344, 990, 0,
	345, 346, 347, 937, 936, 348, 349, 350, 351, 0,
	352, 353, 355, 357, 354, 356, 361, 358, 359, 360,
	363, 0, 362, 991, 364, 365, 368, 369, 367, 992,
	366, 877, 231, 993, 370, 899, 947, 371, 961, 373,
	374, 0, 0, 375, 0, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 522, 994, 382, 995, 975, 383,
	384, 376, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 393, 524, 525, 976, 394, 527, 395, 396, 0,
	397, 0, 398, 399, 400, 401, 402, 403, 404, 957,
	405, 406, 0, 0, 0, 0, 0, 0, 407, 0,
	409, 410, 411, 408, 412, 413, 414, 415, 0, 416,
	417, 996, 418, 419, 420, 421, 887, 422, 0, 423,
	427, 428, 429, 430, 431, 432, 433, 0, 435, 436,
	434, 437, 438, 439, 940, 440, 424, 425, 441, 442,
	997, 443, 444, 955, 0, 445, 0, 446, 447, 448,
	449, 426, 450, 455, 1000, 451, 452, 453, 454, 977,
	0, 457, 458, 875, 456, 0, 459, 460, 461, 462,
	463, 298, 464, 0, 465, 967, 968, 969, 970, 0,
	472, 0, 466, 467, 978, 468, 979, 897, 469, 470,
	471, 0, 473, 474, 0, 881, 475, 476, 477, 479,
	480, 478, 481, 941, 482, 0, 0, 483, 484, 485,
	539, 964, 999, 0, 487, 486, 542, 0, 0, 0,
	0, 488, 489, 543, 490, 491, 492, 878, 0, 0,
	0, 0, 0, 0, 874, 0, 0, 0, 0, 0,
	0, 872, 873, 0, 0, 0, 0, 0, 0, 0,
	903, 0, 0, 1238, 901, 919, 891, 892, 893, 889,
	890, 902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 233, 234, 235, 236, 237, 0, 238,
	239, 0, 0, 0, 0, 0, 943, 907, 0, 0,
	0, 240, 241, 243, 242, 244, 245, 246, 494, 956,
	0, 963, 247, 962, 0, 248, 249, 250, 251, 252,
	909, 942, 876, 253, 1001, 1002, 500, 0, 254, 255,
	949, 0, 930, 0, 256, 257, 258, 259, 260, 261,
	262, 0, 0, 264, 265, 266, 263, 0, 267, 0,
	268, 269, 270, 0, 271, 982, 272, 273, 933, 931,
	932, 939, 935, 934, 938, 274, 275, 276, 277, 966,
	278, 960, 959, 880, 282, 279, 280, 0, 283, 281,
	0, 284, 0, 0, 285, 951, 287, 0, 288, 289,
	0, 290, 291, 0, 292, 293, 886, 294, 295, 297,
	299, 296, 300, 301, 302, 303, 973, 974, 898, 229,
	0, 0, 0, 0, 0, 304, 305, 306, 958, 0,
	0, 0, 307, 0, 308, 0, 0, 983, 309, 310,
	971, 972, 311, 312, 0, 313, 980, 0, 908, 314,
	0, 315, 316, 317, 318, 319, 1237, 945, 948, 372,
	985, 320, 321, 0, 322, 323, 324, 325, 0, 0,
	0, 230, 326, 327, 329, 0, 984, 328, 953, 954,
	0, 914, 0, 330, 986, 946, 987, 331, 332, 333,
	988, 334, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 341, 340, 0, 342, 981, 989, 343, 344, 990,
	0, 345, 346, 347, 937, 936, 348, 349, 350, 351,
	0, 352, 353, 355, 357, 354, 356, 361, 358, 359,
	360, 363, 0, 362, 991, 364, 365, 368, 369, 367,
	992, 366, 877, 231, 993, 370, 899, 947, 371, 961,
	373, 374, 0, 0, 375, 0, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 522, 994, 382, 995, 975,
	383, 384, 376, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 393, 524, 525, 976, 394, 527, 395, 396,
	0, 397, 0, 398, 399, 400, 401, 402, 403, 404,
	957, 405, 406, 0, 0, 0, 0, 0, 0, 407,
	0, 409, 410, 411, 408, 412, 413, 414, 415, 0,
	416, 417, 996, 418, 419, 420, 421, 887, 422, 0,
	423, 427, 428, 429, 430, 431, 432, 433, 0, 435,
	436, 434, 437, 438, 439, 940, 440, 424, 425, 441,
	442, 997, 443, 444, 955, 0, 445, 0, 446, 447,
	448, 449, 426, 450, 455, 1000, 451, 452, 453, 454,
	977, 0, 457, 458, 875, 456, 0, 459, 460, 461,
	462, 463, 298, 464, 0, 465, 967, 968, 969, 970,
	0, 472, 0, 466, 467, 978, 468, 979, 897, 469,
	470, 471, 0, 473, 474, 0, 881, 475, 476, 477,
	479, 480, 478, 481, 941, 482, 0, 0, 483, 484,
	485, 539, 964, 999, 0, 487, 486, 542, 0, 0,
	0, 0, 488, 489, 543, 490, 491, 492, 878, 0,
	0, 0, 0, 0, 0, 874, 0, 0, 0, 0,
	0, 0, 872, 873, 0, 0, 0, 0, 0, 0,
	0, 903, 0, 0, 1233, 901, 919, 891, 892, 893,
	889, 890, 902, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 943, 907, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 494,
	956, 0, 963, 247, 962, 0, 248, 249, 250, 251,
	252, 909, 942, 876, 253, 1001, 1002, 500, 0, 254,
	255, 949, 0, 930, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 982, 272, 273, 933,
	931, 932, 939, 935, 934, 938, 274, 275, 276, 277,
	966, 278, 960, 959, 880, 282, 279, 280, 0, 283,
	281, 0, 284, 0, 0, 285, 951, 287, 0, 288,
	289, 0, 290, 291, 0, 292, 293, 886, 294, 295,
	297, 299, 296, 300, 301, 302, 303, 973, 974, 898,
	229, 0, 0, 0, 0, 0, 304, 305, 306, 958,
	0, 0, 0, 307, 0, 308, 0, 0, 983, 309,
	310, 971, 972, 311, 312, 0, 313, 980, 0, 908,
	314, 0, 315, 316, 317, 318, 319, 944, 945, 948,
	372, 985, 320, 321, 0, 322, 323, 324, 325, 0,
	0, 0, 230, 326, 327, 329, 0, 984, 328, 953,
	954, 0, 914, 0, 330, 986, 946, 987, 331, 332,
	333, 988, 334, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 341, 340, 0, 342, 981, 989, 343, 344,
	990, 0, 345, 346, 347, 937, 936, 348, 349, 350,
	351, 0, 352, 353, 355, 357, 354, 356, 361, 358,
	359, 360, 363, 0, 362, 991, 364, 365, 368, 369,
	367, 992, 366, 877, 231, 993, 370, 899, 947, 371,
	961, 373, 374, 0, 0, 375, 0, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 522, 994, 382, 995,
	975, 383, 384, 376, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 393, 524, 525, 976, 394, 527, 395,
	396, 0, 397, 0, 398, 399, 400, 401, 402, 403,
	404, 957, 405, 406, 0, 0, 0, 0, 0, 0,
	407, 0, 409, 410, 411, 408, 412, 413, 414, 415,
	0, 416, 417, 996, 418, 419, 420, 421, 887, 422,
	0, 423, 427, 428, 429, 430, 431, 432, 433, 0,
	435, 436, 434, 437, 438, 439, 940, 440, 424, 425,
	441, 442, 997, 443, 444, 955, 0, 445, 0, 446,
	447, 448, 449, 426, 450, 455, 1000, 451, 452, 453,
	454, 977, 0, 457, 458, 875, 456, 0, 459, 460,
	461, 462, 463, 298, 464, 0, 465, 967, 968, 969,
	970, 0, 472, 0, 466, 467, 978, 468, 979, 897,
	469, 470, 471, 0, 473, 474, 0, 881, 475, 476,
	477, 479, 480, 478, 481, 941, 482, 0, 0, 483,
	484, 485, 539, 964, 999, 0, 487, 486, 542, 0,
	0, 0, 0, 488, 489, 543, 490, 491, 492, 878,
	0, 0, 0, 0, 0, 0, 874, 0, 0, 0,
	0, 0, 0, 872, 873, 919, 891, 892, 893, 889,
	890, 902, 903, 0, 0, 0, 901, 0, 0, 0,
	0, 0, 232, 233, 234, 235, 236, 237, 0, 238,
	239, 0, 0, 0, 0, 0, 943, 907, 0, 0,
	0, 240, 241, 243, 242, 244, 245, 246, 494, 956,
	0, 963, 247, 962, 0, 248, 249, 250, 251, 252,
	909, 942, 876, 253, 1001, 1002, 500, 0, 254, 255,
	949, 0, 930, 0, 256, 257, 258, 259, 260, 261,
	262, 0, 0, 264, 265, 266, 263, 0, 267, 0,
	268, 269, 270, 0, 271, 982, 272, 273, 933, 931,
	932, 939, 935, 934, 938, 274, 275, 276, 277, 966,
	278, 960, 959, 880, 282, 279, 280, 0, 283, 281,
	0, 284, 0, 0, 285, 951, 287, 0, 288, 289,
	0, 290, 291, 0, 292, 293, 886, 294, 295, 297,
	299, 296, 300, 301, 302, 303, 973, 974, 898, 229,
	0, 0, 0, 0, 0, 304, 305, 306, 958, 0,
	0, 0, 307, 0, 308, 0, 0, 983, 309, 310,
	971, 972, 311, 312, 0, 313, 980, 0, 908, 314,
	0, 315, 316, 317, 318, 319, 944, 945, 948, 372,
	985, 320, 321, 0, 322, 323, 324, 325, 0, 0,
	0, 230, 326, 327, 329, 0, 984, 328, 953, 954,
	0, 914, 0, 330, 986, 946, 987, 331, 332, 333,
	988, 334, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 341, 340, 0, 342, 981, 989, 343, 344, 990,
	0, 345, 346, 347, 937, 936, 348, 349, 350, 351,
	0, 352, 353, 355, 357, 354, 356, 361, 358, 359,
	360, 363, 0, 362, 991, 364, 365, 368, 369, 367,
	992, 366, 877, 231, 993, 370, 899, 947, 371, 961,
	373, 374, 0, 0, 375, 0, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 522, 994, 382, 995, 975,
	383, 384, 376, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 393, 524, 525, 976, 394, 527, 395, 396,
	0, 397, 0, 398, 399, 400, 401, 402, 403, 404,
	957, 405, 406, 0, 0, 0, 0, 0, 0, 407,
	0, 409, 410, 411, 408, 412, 413, 414, 415, 0,
	416, 417, 996, 418, 419, 420, 421, 887, 422, 0,
	423, 427, 428, 429, 430, 431, 432, 433, 0, 435,
	436, 434, 437, 438, 439, 940, 440, 424, 425, 441,
	442, 997, 443, 444, 955, 0, 445, 0, 446, 447,
	448, 449, 426, 450, 455, 1000, 451, 452, 453, 454,
	977, 0, 457, 458, 875, 456, 0, 459, 460, 461,
	462, 463, 298, 464, 0, 465, 967, 968, 969, 970,
	0, 472, 0, 466, 467, 978, 468, 979, 897, 469,
	470, 471, 0, 473, 474, 0, 881, 475, 476, 477,
	479, 480, 478, 481, 941, 482, 0, 0, 483, 484,
	485, 539, 964, 999, 0, 487, 486, 542, 0, 0,
	0, 0, 488, 489, 543, 490, 491, 492, 878, 0,
	0, 0, 0, 0, 0, 874, 0, 0, 0, 0,
	0, 0, 872, 873, 919, 891, 892, 893, 889, 890,
	902, 903, 0, 0, 0, 901, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 943, 907, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 494, 956, 0,
	963, 247, 962, 0, 248, 249, 250, 251, 252, 909,
	942, 876, 253, 1001, 1002, 500, 0, 254, 255, 949,
	0, 930, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 982, 272, 3794, 933, 931, 932,
	939, 935, 934, 938, 274, 275, 276, 277, 966, 278,
	960, 959, 880, 282, 279, 280, 0, 283, 281, 0,
	284, 0, 0, 285, 951, 287, 0, 288, 289, 0,
	290, 291, 0, 292, 293, 886, 294, 295, 297, 299,
	296, 300, 301, 302, 303, 973, 974, 898, 229, 0,
	0, 0, 0, 0, 304, 305, 306, 958, 0, 0,
	0, 307, 0, 308, 0, 0, 983, 309, 310, 971,
	972, 311, 312, 0, 313, 980, 0, 908, 314, 0,
	315, 316, 317, 318, 319, 944, 945, 948, 372, 985,
	320, 321, 0, 322, 323, 324, 325, 0, 0, 0,
	230, 326, 327, 329, 0, 984, 328, 953, 954, 0,
	914, 0, 330, 986, 946, 987, 331, 332, 333, 988,
	334, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	341, 340, 0, 342, 981, 989, 343, 344, 990, 0,
	345, 346, 347, 937, 936, 348, 349, 350, 351, 0,
	352, 353, 355, 357, 354, 356, 361, 358, 359, 360,
	363, 0, 362, 991, 364, 365, 368, 369, 367, 992,
	366, 877, 231, 993, 370, 899, 947, 371, 961, 373,
	374, 0, 0, 375, 0, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 522, 994, 382, 995, 975, 383,
	384, 376, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 393, 524, 525, 976, 394, 527, 395, 396, 0,
	397, 0, 398, 399, 400, 401, 402, 403, 404, 957,
	405, 406, 0, 0, 0, 0, 0, 0, 407, 0,
	409, 410, 411, 408, 412, 413, 414, 415, 0, 416,
	417, 996, 418, 419, 420, 421, 887, 422, 0, 423,
	427, 428, 429, 430, 431, 432, 433, 0, 435, 436,
	434, 437, 438, 439, 940, 440, 424, 425, 441, 442,
	997, 443, 444, 955, 0, 445, 0, 446, 447, 448,
	449, 426, 450, 455, 1000, 451, 452, 453, 454, 977,
	0, 457, 458, 875, 456, 0, 459, 460, 461, 462,
	463, 298, 464, 0, 465, 967, 968, 969, 970, 0,
	472, 0, 466, 467, 978, 468, 979, 897, 469, 470,
	471, 0, 3793, 474, 0, 881, 475, 476, 477, 479,
	480, 478, 481, 941, 482, 0, 0, 483, 484, 485,
	539, 964, 999, 0, 487, 486, 542, 0, 0, 0,
	0, 488, 489, 543, 490, 491, 492, 878, 0, 0,
	0, 0, 0, 0, 874, 0, 0, 0, 0, 0,
	0, 872, 873, 919, 891, 892, 893, 889, 890, 902,
	903, 0, 0, 0, 901, 0, 0, 0, 0, 0,
	232, 233, 234, 235, 236, 237, 0, 238, 239, 0,
	0, 0, 0, 0, 943, 907, 0, 0, 0, 240,
	241, 243, 242, 244, 245, 246, 3792, 956, 0, 963,
	247, 962, 0, 248, 249, 250, 251, 252, 909, 942,
	876, 253, 1001, 1002, 500, 0, 254, 255, 949, 0,
	930, 0, 256, 257, 258, 259, 260, 261, 262, 0,
	0, 264, 265, 266, 263, 0, 267, 0, 268, 269,
	270, 0, 271, 982, 272, 3794, 933, 931, 932, 939,
	935, 934, 938, 274, 275, 276, 277, 966, 278, 960,
	959, 880, 282, 279, 280, 0, 283, 281, 0, 284,
	0, 0, 285, 951, 287, 0, 288, 289, 0, 290,
	291, 0, 292, 293, 886, 294, 295, 297, 299, 296,
	300, 301, 302, 303, 973, 974, 898, 229, 0, 0,
	0, 0, 0, 304, 305, 306, 958, 0, 0, 0,
	307, 0, 308, 0, 0, 983, 309, 310, 971, 972,
	311, 312, 0, 313, 980, 0, 908, 314, 0, 315,
	316, 317, 318, 319, 944, 945, 948, 372, 985, 320,
	321, 0, 322, 323, 324, 325, 0, 0, 0, 230,
	326, 327, 329, 0, 984, 328, 953, 954, 0, 914,
	0, 330, 986, 946, 987, 331, 332, 333, 988, 334,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 341,
	340, 0, 342, 981, 989, 343, 344, 990, 0, 345,
	346, 347, 937, 936, 348, 349, 350, 351, 0, 352,
	353, 355, 357, 354, 356, 361, 358, 359, 360, 363,
	0, 362, 991, 364, 365, 368, 369, 367, 992, 366,
	877, 231, 993, 370, 899, 947, 371, 961, 373, 374,
	0, 0, 375, 0, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 522, 994, 382, 995, 975, 383, 384,
	376, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	393, 524, 525, 976, 394, 527, 395, 396, 0, 397,
	0, 398, 399, 400, 401, 402, 403, 404, 957, 405,
	406, 0, 0, 0, 0, 0, 0, 407, 0, 409,
	410, 411, 408, 412, 413, 414, 415, 0, 416, 417,
	996, 418, 419, 420, 421, 887, 422, 0, 423, 427,
	428, 429, 430, 431, 432, 433, 0, 435, 436, 434,
	437, 438, 439, 940, 440, 424, 425, 441, 442, 997,
	443, 444, 955, 0, 445, 0, 446, 447, 448, 449,
	426, 450, 455, 1000, 451, 452, 453, 454, 977, 0,
	457, 458, 875, 456, 0, 459, 460, 461, 462, 463,
	298, 464, 0, 465, 967, 968, 969, 970, 0, 472,
	0, 466, 467, 978, 468, 979, 897, 469, 470, 471,
	0, 3793, 474, 0, 881, 475, 476, 477, 479, 480,
	478, 481, 941, 482, 0, 0, 483, 484, 485, 539,
	964, 999, 0, 487, 486, 542, 0, 0, 0, 0,
	488, 489, 543, 490, 491, 492, 878, 0, 0, 0,
	0, 0, 0, 874, 0, 0, 0, 0, 0, 0,
	872, 873, 919, 891, 892, 893, 2587, 2588, 902, 903,
	0, 0, 0, 901, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 943, 907, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 494, 956, 0, 963, 247,
	962, 0, 248, 249, 250, 251, 252, 909, 942, 876,
	253, 1001, 1002, 500, 0, 254, 255, 949, 0, 930,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 982, 272, 273, 933, 931, 932, 939, 935,
	934, 938, 274, 275, 276, 277, 966, 278, 960, 959,
	880, 282, 279, 280, 0, 283, 281, 0, 284, 0,
	0, 285, 951, 287, 0, 288, 289, 0, 290, 291,
	0, 292, 293, 886, 294, 295, 297, 299, 296, 300,
	301, 302, 303, 973, 974, 898, 229, 0, 0, 0,
	0, 0, 304, 305, 306, 958, 0, 0, 0, 307,
	0, 308, 0, 0, 983, 309, 310, 971, 972, 311,
	312, 0, 313, 980, 0, 908, 314, 0, 315, 316,
	317, 318, 319, 944, 945, 948, 372, 985, 320, 321,
	0, 322, 323, 324, 325, 0, 0, 0, 230, 326,
	327, 329, 0, 984, 328, 953, 954, 0, 914, 0,
	330, 986, 946, 987, 331, 332, 333, 988, 334, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 341, 340,
	0, 342, 981, 989, 343, 344, 990, 0, 345, 346,
	347, 937, 936, 348, 349, 350, 351, 0, 352, 353,
	355, 357, 354, 356, 361, 358, 359, 360, 363, 0,
	362, 991, 364, 365, 368, 369, 367, 992, 366, 877,
	231, 993, 370, 899, 947, 371, 961, 373, 374, 0,
	0, 375, 0, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 522, 994, 382, 995, 975, 383, 384, 376,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 393,
	524, 525, 976, 394, 527, 395, 396, 0, 397, 0,
	398, 399, 400, 401, 402, 403, 404, 957, 405, 406,
	0, 0, 0, 0, 0, 0, 407, 0, 409, 410,
	411, 408, 412, 413, 414, 415, 0, 416, 417, 996,
	418, 419, 420, 421, 887, 422, 0, 423, 427, 428,
	429, 430, 431, 432, 433, 0, 435, 436, 434, 437,
	438, 439, 940, 440, 424, 425, 441, 442, 997, 443,
	444, 955, 0, 445, 0, 446, 447, 448, 449, 426,
	450, 455, 1000, 451, 452, 453, 454, 977, 0, 457,
	458, 875, 456, 0, 459, 460, 461, 462, 463, 298,
	464, 0, 465, 967, 968, 969, 970, 0, 472, 0,
	466, 467, 978, 468, 979, 897, 469, 470, 471, 0,
	473, 474, 0, 881, 475, 476, 477, 479, 480, 478,
	481, 941, 482, 0, 0, 483, 484, 485, 539, 964,
	999, 0, 487, 486, 542, 0, 0, 0, 0, 488,
	489, 543, 490, 491, 492, 878, 0, 0, 0, 0,
	0, 0, 874, 0, 0, 0, 0, 0, 0, 872,
	873, 919, 891, 892, 893, 2585, 2586, 902, 903, 0,
	0, 0, 901, 0, 0, 0, 0, 0, 232, 233,
	234, 235, 236, 237, 0, 238, 239, 0, 0, 0,
	0, 0, 943, 907, 0, 0, 0, 240, 241, 243,
	242, 244, 245, 246, 494, 956, 0, 963, 247, 962,
	0, 248, 249, 250, 251, 252, 909, 942, 876, 253,
	1001, 1002, 500, 0, 254, 255, 949, 0, 930, 0,
	256, 257, 258, 259, 260, 261, 262, 0, 0, 264,
	265, 266, 263, 0, 267, 0, 268, 269, 270, 0,
	271, 982, 272, 273, 933, 931, 932, 939, 935, 934,
	938, 274, 275, 276, 277, 966, 278, 960, 959, 880,
	282, 279, 280, 0, 283, 281, 0, 284, 0, 0,
	285, 951, 287, 0, 288, 289, 0, 290, 291, 0,
	292, 293, 886, 294, 295, 297, 299, 296, 300, 301,
	302, 303, 973, 974, 898, 229, 0, 0, 0, 0,
	0, 304, 305, 306, 958, 0, 0, 0, 307, 0,
	308, 0, 0, 983, 309, 310, 971, 972, 311, 312,
	0, 313, 980, 0, 908, 314, 0, 315, 316, 317,
	318, 319, 944, 945, 948, 372, 985, 320, 321, 0,
	322, 323, 324, 325, 0, 0, 0, 230, 326, 327,
	329, 0, 984, 328, 953, 954, 0, 914, 0, 330,
	986, 946, 987, 331, 332, 333, 988, 334, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 341, 340, 0,
	342, 981, 989, 343, 344, 990, 0, 345, 346, 347,
	937, 936, 348, 349, 350, 351, 0, 352, 353, 355,
	357, 354, 356, 361, 358, 359, 360, 363, 0, 362,
	991, 364, 365, 368, 369, 367, 992, 366, 877, 231,
	993, 370, 899, 947, 371, 961, 373, 374, 0, 0,
	375, 0, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 522, 994, 382, 995, 975, 383, 384, 376, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 393, 524,
	525, 976, 394, 527, 395, 396, 0, 397, 0, 398,
	399, 400, 401, 402, 403, 404, 957, 405, 406, 0,
	0, 0, 0, 0, 0, 407, 0, 409, 410, 411,
	408, 412, 413, 414, 415, 0, 416, 417, 996, 418,
	419, 420, 421, 887, 422, 0, 423, 427, 428, 429,
	430, 431, 432, 433, 0, 435, 436, 434, 437, 438,
	439, 940, 440, 424, 425, 441, 442, 997, 443, 444,
	955, 0, 445, 0, 446, 447, 448, 449, 426, 450,
	455, 1000, 451, 452, 453, 454, 977, 0, 457, 458,
	875, 456, 0, 459, 460, 461, 462, 463, 298, 464,
	0, 465, 967, 968, 969, 970, 0, 472, 0, 466,
	467, 978, 468, 979, 897, 469, 470, 471, 0, 473,
	474, 0, 881, 475, 476, 477, 479, 480, 478, 481,
	941, 482, 0, 0, 483, 484, 485, 539, 964, 999,
	0, 487, 486, 542, 0, 0, 0, 0, 488, 489,
	543, 490, 491, 492, 878, 0, 0, 0, 0, 0,
	0, 874, 0, 0, 0, 0, 0, 0, 872, 873,
	919, 891, 892, 893, 889, 890, 902, 903, 0, 0,
	0, 901, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 943, 907, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 494, 956, 0, 963, 247, 962, 0,
	248, 249, 250, 251, 252, 909, 942, 876, 253, 1001,
	1002, 500, 0, 254, 255, 949, 0, 930, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	982, 272, 273, 933, 931, 932, 939, 935, 934, 938,
	274, 275, 276, 277, 966, 278, 960, 959, 880, 282,
	279, 280, 0, 283, 281, 0, 284, 0, 0, 285,
	951, 287, 0, 288, 289, 0, 290, 291, 0, 292,
	293, 886, 294, 295, 297, 299, 296, 300, 301, 302,
	303, 973, 974, 898, 229, 0, 0, 0, 0, 0,
	304, 305, 306, 958, 0, 0, 0, 307, 0, 308,
	0, 0, 983, 309, 310, 971, 972, 311, 312, 0,
	313, 980, 0, 908, 314, 0, 315, 316, 317, 318,
	319, 944, 945, 948, 372, 985, 320, 321, 0, 322,
	323, 324, 325, 0, 0, 0, 230, 326, 327, 329,
	0, 984, 328, 953, 954, 0, 914, 0, 330, 986,
	946, 987, 331, 332, 333, 988, 334, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 341, 340, 0, 342,
	981, 989, 343, 344, 990, 0, 345, 346, 347, 937,
	936, 348, 349, 350, 351, 0, 352, 353, 355, 357,
	354, 356, 361, 358, 359, 360, 363, 0, 362, 991,
	364, 365, 368, 369, 367, 992, 366, 877, 231, 993,
	370, 899, 947, 371, 961, 373, 374, 0, 0, 375,
	0, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	522, 994, 382, 995, 975, 383, 384, 376, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 393, 524, 525,
	976, 394, 527, 395, 396, 0, 397, 0, 398, 399,
	400, 401, 402, 403, 404, 957, 405, 406, 0, 0,
	0, 0, 0, 0, 407, 0, 409, 410, 411, 408,
	412, 413, 414, 415, 0, 416, 417, 996, 418, 419,
	420, 421, 887, 422, 0, 423, 427, 428, 429, 430,
	431, 432, 433, 0, 435, 436, 434, 437, 438, 439,
	940, 440, 424, 425, 441, 442, 997, 443, 444, 955,
	0, 445, 0, 446, 447, 448, 449, 426, 450, 455,
	1000, 451, 452, 453, 454, 977, 0, 457, 458, 875,
	456, 0, 459, 460, 461, 462, 463, 298, 464, 0,
	465, 967, 968, 969, 970, 0, 472, 0, 466, 467,
	978, 468, 979, 897, 469, 470, 471, 0, 473, 474,
	0, 881, 475, 476, 477, 479, 480, 478, 481, 941,
	482, 0, 0, 483, 484, 485, 539, 964, 999, 0,
	487, 486, 542, 0, 0, 0, 0, 488, 489, 543,
	490, 491, 492, 878, 0, 0, 0, 0, 0, 0,
	874, 0, 0, 0, 0, 0, 0, 2024, 2025, 919,
	891, 892, 893, 889, 890, 902, 903, 0, 0, 0,
	901, 0, 0, 0, 0, 0, 232, 233, 234, 235,
	236, 237, 0, 238, 239, 0, 0, 0, 0, 0,
	943, 907, 0, 0, 0, 240, 241, 243, 242, 244,
	245, 246, 494, 956, 0, 963, 247, 962, 0, 248,
	249, 250, 251, 252, 909, 942, 0, 253, 1001, 1002,
	500, 0, 254, 255, 949, 0, 930, 0, 256, 257,
	258, 259, 260, 261, 262, 0, 0, 264, 265, 266,
	263, 0, 267, 0, 268, 269, 270, 0, 271, 982,
	272, 273, 933, 931, 932, 939, 935, 934, 938, 274,
	275, 276, 277, 966, 278, 960, 959, 0, 282, 279,
	280, 0, 283, 281, 0, 284, 0, 0, 285, 951,
	287, 0, 288, 289, 0, 290, 291, 0, 292, 293,
	886, 294, 295, 297, 299, 296, 300, 301, 302, 303,
	973, 974, 898, 229, 0, 0, 0, 0, 0, 304,
	305, 306, 958, 0, 0, 0, 307, 0, 308, 0,
	0, 983, 309, 310, 971, 972, 311, 312, 0, 313,
	980, 0, 908, 314, 0, 315, 316, 317, 318, 319,
	944, 945, 948, 372, 985, 320, 321, 0, 322, 323,
	324, 325, 0, 0, 0, 230, 326, 327, 329, 0,
	984, 328, 953, 954, 0, 914, 0, 330, 986, 946,
	987, 331, 332, 333, 988, 334, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 341, 340, 0, 342, 981,
	989, 343, 344, 990, 0, 345, 346, 347, 937, 936,
	348, 349, 350, 351, 0, 352, 353, 355, 357, 354,
	356, 361, 358, 359, 360, 363, 0, 362, 991, 364,
	365, 368, 369, 367, 992, 366, 0, 231, 993, 370,
	899, 947, 371, 961, 373, 374, 0, 0, 375, 0,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 522,
	994, 382, 995, 975, 383, 384, 376, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 393, 524, 525, 976,
	394, 527, 395, 396, 0, 397, 0, 398, 399, 400,
	401, 402, 403, 404, 957, 405, 406, 0, 0, 0,
	0, 0, 0, 407, 0, 409, 410, 411, 408, 412,
	413, 414, 415, 0, 416, 417, 996, 418, 419, 420,
	421, 887, 422, 0, 423, 427, 428, 429, 430, 431,
	432, 433, 0, 435, 436, 434, 437, 438, 439, 940,
	440, 424, 425, 441, 442, 997, 443, 444, 955, 0,
	445, 0, 446, 447, 448, 449, 426, 450, 455, 1000,
	451, 452, 453, 454, 977, 0, 457, 458, 0, 456,
	0, 459, 460, 461, 462, 463, 298, 464, 0, 465,
	967, 968, 969, 970, 0, 472, 0, 466, 467, 978,
	468, 979, 897, 469, 470, 471, 0, 473, 474, 0,
	0, 475, 476, 477, 479, 480, 478, 481, 941, 482,
	0, 0, 483, 484, 485, 539, 964, 999, 0, 487,
	486, 542, 0, 0, 0, 0, 488, 489, 543, 490,
	491, 492, 919, 891, 892, 893, 889, 890, 902, 2220,
	0, 0, 0, 0, 0, 0, 2218, 2219, 0, 232,
	233, 234, 235, 236, 237, 903, 238, 239, 0, 901,
	0, 0, 0, 943, 907, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 494, 956, 0, 963, 247,
	962, 0, 248, 249, 250, 251, 252, 909, 942, 0,
	253, 1001, 1002, 500, 0, 254, 255, 949, 0, 930,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 982, 272, 273, 933, 931, 932, 939, 935,
	934, 938, 274, 275, 276, 277, 966, 278, 960, 959,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 0,
	0, 285, 951, 287, 0, 288, 289, 0, 290, 291,
	0, 292, 293, 886, 294, 295, 297, 299, 296, 300,
	301, 302, 303, 973, 974, 898, 229, 0, 0, 0,
	0, 0, 304, 305, 306, 958, 0, 0, 0, 307,
	0, 308, 0, 0, 983, 309, 310, 971, 972, 311,
	312, 0, 313, 980, 0, 908, 314, 0, 315, 316,
	317, 318, 319, 944, 945, 948, 372, 985, 320, 321,
	0, 322, 323, 324, 325, 0, 0, 0, 230, 326,
	327, 329, 0, 984, 328, 953, 954, 0, 914, 0,
	330, 986, 946, 987, 331, 332, 333, 988, 334, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 341, 340,
	0, 342, 981, 989, 343, 344, 990, 0, 345, 346,
	347, 937, 936, 348, 349, 350, 351, 0, 352, 353,
	355, 357, 354, 356, 361, 358, 359, 360, 363, 0,
	362, 991, 364, 365, 368, 369, 367, 992, 366, 0,
	231, 993, 370, 899, 947, 371, 961, 373, 374, 0,
	0, 375, 0, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 522, 994, 382, 995, 975, 383, 384, 376,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 393,
	524, 525, 976, 394, 527, 395, 396, 0, 397, 0,
	398, 399, 400, 401, 402, 403, 404, 957, 405, 406,
	0, 0, 0, 0, 0, 0, 407, 0, 409, 410,
	411, 408, 412, 413, 414, 415, 0, 416, 417, 996,
	418, 419, 420, 421, 2580, 2581, 0, 423, 427, 428,
	429, 430, 431, 432, 433, 0, 435, 436, 434, 437,
	438, 439, 940, 440, 424, 425, 441, 442, 997, 443,
	444, 955, 0, 445, 0, 446, 447, 448, 449, 426,
	450, 455, 1000, 451, 452, 453, 454, 977, 0, 457,
	458, 0, 456, 0, 459, 460, 461, 462, 463, 298,
	464, 0, 465, 967, 968, 969, 970, 0, 472, 0,
	466, 467, 978, 468, 979, 897, 469, 470, 471, 0,
	473, 474, 0, 0, 475, 476, 477, 479, 480, 478,
	481, 941, 482, 0, 0, 483, 484, 485, 539, 964,
	999, 0, 487, 486, 542, 0, 0, 0, 0, 488,
	489, 543, 490, 491, 492, 919, 891, 892, 893, 889,
	890, 902, 0, 0, 0, 0, 0, 0, 0, 1767,
	1768, 0, 232, 233, 234, 235, 236, 237, 903, 238,
	239, 0, 901, 0, 0, 0, 943, 907, 0, 0,
	0, 240, 241, 243, 242, 244, 245, 246, 0, 956,
	0, 963, 247, 962, 0, 248, 249, 250, 251, 252,
	909, 942, 876, 253, 1001, 1002, 500, 0, 254, 255,
	949, 0, 930, 0, 256, 257, 258, 259, 260, 261,
	262, 0, 0, 264, 265, 266, 263, 0, 267, 0,
	268, 269, 270, 0, 271, 982, 272, 3794, 933, 931,
	932, 939, 935, 934, 938, 274, 275, 276, 277, 966,
	278, 960, 959, 880, 282, 279, 280, 0, 283, 281,
	0, 284, 0, 0, 285, 951, 287, 0, 288, 289,
	0, 290, 291, 0, 292, 293, 886, 294, 295, 297,
	299, 296, 300, 301, 302, 303, 973, 974, 898, 229,
	0, 0, 0, 0, 0, 304, 305, 306, 958, 0,
	0, 0, 307, 0, 308, 0, 0, 983, 309, 310,
	971, 972, 311, 312, 0, 313, 980, 0, 908, 314,
	0, 315, 316, 317, 318, 319, 944, 945, 948, 372,
	0, 320, 321, 0, 322, 323, 324, 325, 0, 0,
	0, 230, 326, 327, 329, 0, 984, 328, 953, 954,
	0, 914, 0, 330, 0, 946, 0, 331, 332, 333,
	988, 334, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 341, 340, 0, 342, 981, 989, 343, 344, 0,
	0, 345, 346, 347, 937, 936, 348, 349, 350, 351,
	0, 352, 353, 355, 357, 354, 356, 361, 358, 359,
	360, 363, 0, 362, 991, 364, 365, 368, 369, 367,
	992, 366, 877, 231, 0, 370, 899, 947, 371, 961,
	373, 374, 0, 0, 375, 0, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 522, 994, 382, 995, 975,
	383, 384, 376, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 393, 524, 525, 976, 394, 527, 395, 396,
	0, 397, 0, 398, 399, 400, 401, 402, 403, 404,
	957, 405, 406, 0, 0, 0, 0, 0, 0, 407,
	0, 409, 410, 411, 408, 412, 413, 414, 415, 0,
	416, 417, 996, 418, 419, 420, 421, 887, 422, 0,
	423, 427, 428, 429, 430, 431, 432, 433, 0, 435,
	436, 434, 437, 438, 439, 940, 440, 424, 425, 441,
	442, 0, 443, 444, 955, 0, 445, 0, 446, 447,
	448, 449, 426, 450, 455, 1000, 451, 452, 453, 454,
	977, 0, 457, 458, 875, 456, 0, 459, 460, 461,
	462, 463, 298, 464, 0, 465, 967, 968, 969, 970,
	0, 472, 0, 466, 467, 978, 468, 979, 897, 469,
	470, 471, 0, 3793, 474, 0, 881, 475, 476, 477,
	479, 480, 478, 481, 941, 482, 0, 0, 483, 484,
	485, 539, 964, 999, 0, 487, 486, 542, 0, 0,
	0, 0, 488, 489, 543, 490, 491, 492, 919, 891,
	892, 893, 889, 890, 902, 0, 0, 0, 0, 0,
	0, 0, 872, 873, 0, 232, 233, 234, 235, 236,
	237, 903, 238, 239, 0, 901, 0, 0, 0, 943,
	907, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 956, 0, 963, 247, 962, 0, 248, 249,
	250, 251, 252, 0, 942, 0, 253, 1001, 1002, 500,
	0, 254, 255, 949, 0, 930, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 982, 272,
	273, 933, 931, 932, 939, 935, 934, 938, 274, 275,
	276, 277, 966, 278, 960, 959, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 951, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 504,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 973,
	974, 898, 229, 0, 0, 0, 0, 0, 304, 305,
	306, 958, 0, 0, 0, 307, 0, 308, 0, 0,
	983, 309, 310, 971, 972, 311, 312, 0, 313, 980,
	0, 908, 314, 0, 315, 316, 317, 318, 319, 944,
	945, 948, 372, 985, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 230, 326, 327, 329, 0, 984,
	328, 953, 954, 0, 914, 0, 330, 986, 946, 987,
	331, 332, 333, 988, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 981, 989,
	343, 344, 990, 0, 345, 346, 347, 937, 936, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 991, 364, 365,
	368, 369, 367, 992, 366, 0, 231, 993, 370, 899,
	947, 371, 961, 373, 374, 0, 0, 375, 0, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 994,
	382, 995, 975, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 976, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 957, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 996, 418, 419, 420, 421,
	887, 422, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 0, 435, 436, 434, 437, 438, 439, 940, 440,
	424, 425, 441, 442, 997, 443, 444, 955, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 1000, 451,
	452, 453, 454, 977, 0, 457, 458, 0, 456, 0,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 967,
	968, 969, 970, 0, 472, 0, 466, 467, 978, 468,
	979, 897, 469, 470, 471, 0, 473, 474, 0, 0,
	475, 476, 477, 479, 480, 478, 481, 941, 482, 0,
	0, 483, 484, 485, 539, 964, 999, 0, 487, 486,
	542, 0, 865, 0, 1039, 488, 489, 543, 490, 491,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 903, 943, 0, 0, 901, 0,
	240, 241, 243, 242, 244, 245, 246, 494, 495, 0,
	496, 247, 497, 0, 248, 249, 250, 251, 252, 0,
	942, 0, 253, 498, 499, 500, 0, 254, 255, 949,
	0, 930, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 982, 272, 273, 933, 931, 932,
	939, 935, 934, 938, 274, 275, 276, 277, 0, 278,
	502, 503, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 0, 0, 285, 286, 287, 0, 288, 289, 0,
	290, 291, 0, 292, 293, 504, 294, 295, 297, 299,
	296, 300, 301, 302, 303, 973, 974, 0, 229, 0,
	0, 0, 0, 0, 304, 305, 306, 507, 0, 0,
	0, 307, 0, 308, 0, 0, 983, 309, 310, 508,
	509, 311, 312, 0, 313, 980, 0, 511, 314, 0,
	315, 316, 317, 318, 319, 944, 945, 948, 372, 985,
	320, 321, 0, 322, 323, 324, 325, 0, 0, 0,
	230, 326, 327, 329, 0, 984, 328, 515, 516, 0,
	517, 0, 330, 986, 946, 987, 331, 332, 333, 988,
	334, 0, 0, 0, 335, 336, 337, 338, 339, 1025,
	341, 340, 0, 342, 981, 989, 343, 344, 990, 0,
	345, 346, 347, 937, 936, 348, 349, 350, 351, 0,
	352, 353, 355, 357, 354, 356, 361, 358, 359, 360,
	363, 0, 362, 991, 364, 365, 368, 369, 367, 992,
	366, 0, 231, 993, 370, 0, 947, 371, 521, 373,
	374, 0, 0, 375, 0, 0, 1031, 377, 378, 379,
	0, 0, 380, 381, 522, 994, 382, 995, 975, 383,
	384, 376, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 393, 524, 525, 976, 394, 527, 395, 396, 0,
	397, 0, 398, 399, 400, 401, 402, 403, 404, 528,
	405, 406, 0, 0, 0, 0, 0, 0, 407, 0,
	409, 410, 411, 408, 412, 413, 414, 415, 0, 416,
	417, 996, 418, 419, 420, 421, 529, 1033, 0, 423,
	427, 428, 429, 430, 431, 432, 433, 192, 435, 436,
	434, 437, 438, 439, 940, 440, 424, 425, 441, 442,
	997, 443, 444, 530, 0, 445, 0, 446, 447, 448,
	449, 426, 450, 455, 531, 451, 452, 453, 454, 977,
	0, 457, 458, 0, 456, 194, 459, 460, 461, 462,
	463, 298, 464, 0, 465, 533, 534, 535, 536, 0,
	472, 0, 466, 467, 978, 468, 979, 0, 469, 470,
	471, 0, 473, 474, 0, 0, 475, 476, 477, 479,
	480, 478, 481, 941, 482, 0, 0, 483, 484, 485,
	1355, 540, 541, 0, 487, 486, 542, 0, 1039, 0,
	186, 488, 489, 543, 490, 491, 492, 0, 187, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 1029, 943,
	1660, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 495, 0, 496, 247, 497, 0, 248, 249,
	250, 251, 252, 0, 942, 0, 253, 498, 499, 500,
	0, 254, 255, 949, 0, 930, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 982, 272,
	273, 933, 931, 932, 939, 935, 934, 938, 274, 275,
	276, 277, 0, 278, 502, 503, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 286, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 504,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 973,
	974, 0, 229, 0, 0, 0, 0, 0, 304, 305,
	306, 507, 0, 0, 0, 307, 0, 308, 0, 0,
	983, 309, 310, 508, 509, 311, 312, 0, 313, 980,
	0, 511, 314, 0, 315, 316, 317, 318, 319, 944,
	945, 948, 372, 985, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 230, 326, 327, 329, 0, 984,
	328, 515, 516, 0, 517, 0, 330, 986, 946, 987,
	331, 332, 333, 988, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 1025, 341, 340, 0, 342, 981, 989,
	343, 344, 990, 0, 345, 346, 347, 937, 936, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 991, 364, 365,
	368, 369, 367, 992, 366, 0, 231, 993, 370, 0,
	947, 371, 521, 373, 374, 0, 0, 375, 0, 0,
	1031, 377, 378, 379, 0, 0, 380, 381, 522, 994,
	382, 995, 975, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 976, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 528, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 996, 418, 419, 420, 421,
	529, 1033, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 192, 435, 436, 434, 437, 438, 439, 940, 440,
	424, 425, 441, 442, 997, 443, 444, 530, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 531, 451,
	452, 453, 454, 977, 0, 457, 458, 0, 456, 194,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 533,
	534, 535, 536, 0, 472, 0, 466, 467, 978, 468,
	979, 0, 469, 470, 471, 0, 473, 474, 0, 0,
	475, 476, 477, 479, 480, 478, 481, 941, 482, 0,
	0, 483, 484, 485, 1355, 540, 541, 0, 487, 486,
	542, 0, 0, 0, 186, 488, 489, 543, 490, 491,
	492, 0, 187, 0, 0, 0, 2740, 0, 1039, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1029, 0, 1660, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 943,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 495, 0, 496, 247, 497, 0, 248, 249,
	250, 251, 252, 0, 942, 0, 253, 498, 499, 500,
	0, 254, 255, 949, 0, 930, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 982, 272,
	273, 933, 931, 932, 939, 935, 934, 938, 274, 275,
	276, 277, 0, 278, 502, 503, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 286, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 504,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 973,
	974, 0, 229, 0, 0, 0, 0, 0, 304, 305,
	306, 507, 0, 0, 0, 307, 0, 308, 0, 0,
	983, 309, 310, 508, 509, 311, 312, 0, 313, 980,
	0, 511, 314, 0, 315, 316, 317, 318, 319, 944,
	945, 948, 372, 985, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 230, 326, 327, 329, 0, 984,
	328, 515, 516, 0, 517, 0, 330, 986, 946, 987,
	331, 332, 333, 988, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 1025, 341, 340, 0, 342, 981, 989,
	343, 344, 990, 0, 345, 346, 347, 937, 936, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 991, 364, 365,
	368, 369, 367, 992, 366, 0, 231, 993, 370, 0,
	947, 371, 521, 373, 374, 0, 0, 375, 0, 0,
	1031, 377, 378, 379, 0, 0, 380, 381, 522, 994,
	382, 995, 975, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 976, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 528, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 996, 418, 419, 420, 421,
	529, 1033, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 0, 435, 436, 434, 437, 438, 439, 940, 440,
	424, 425, 441, 442, 997, 443, 444, 530, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 531, 451,
	452, 453, 454, 977, 0, 457, 458, 0, 456, 0,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 533,
	534, 535, 536, 0, 472, 0, 466, 467, 978, 468,
	979, 0, 469, 470, 471, 0, 473, 474, 0, 0,
	475, 476, 477, 479, 480, 478, 481, 941, 482, 0,
	0, 483, 484, 485, 539, 540, 541, 0, 487, 486,
	542, 0, 1021, 0, 1039, 488, 489, 543, 490, 491,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 1029, 0, 1027, 943, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 494, 495, 0,
	496, 247, 497, 0, 248, 249, 250, 251, 252, 0,
	942, 0, 253, 498, 499, 500, 0, 254, 255, 949,
	0, 930, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 982, 272, 273, 933, 931, 932,
	939, 935, 934, 938, 274, 275, 276, 277, 0, 278,
	502, 503, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 0, 0, 285, 286, 287, 0, 288, 289, 0,
	290, 291, 0, 292, 293, 504, 294, 295, 297, 299,
	296, 300, 301, 302, 303, 973, 974, 0, 229, 0,
	0, 0, 0, 0, 304, 305, 306, 507, 0, 0,
	0, 307, 0, 308, 0, 0, 983, 309, 310, 508,
	509, 311, 312, 0, 313, 980, 0, 511, 314, 0,
	315, 316, 317, 318, 319, 944, 945, 948, 372, 985,
	320, 321, 0, 322, 323, 324, 325, 0, 0, 0,
	230, 326, 327, 329, 0, 984, 328, 515, 516, 0,
	517, 0, 330, 986, 946, 987, 331, 332, 333, 988,
	334, 0, 0, 0, 335, 336, 337, 338, 339, 1025,
	341, 340, 0, 342, 981, 989, 343, 344, 990, 0,
	345, 346, 347, 937, 936, 348, 349, 350, 351, 0,
	352, 353, 355, 357, 354, 356, 361, 358, 359, 360,
	363, 0, 362, 991, 364, 365, 368, 369, 367, 992,
	366, 0, 231, 993, 370, 0, 947, 371, 521, 373,
	374, 0, 0, 375, 0, 0, 1031, 377, 378, 379,
	0, 0, 380, 381, 522, 994, 382, 995, 975, 383,
	384, 376, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 393, 524, 525, 976, 394, 527, 395, 396, 0,
	397, 0, 398, 399, 400, 401, 402, 403, 404, 528,
	405, 406, 0, 0, 0, 0, 0, 0, 407, 0,
	409, 410, 411, 408, 412, 413, 414, 415, 0, 416,
	417, 996, 418, 419, 420, 421, 529, 1033, 0, 423,
	427, 428, 429, 430, 431, 432, 433, 0, 435, 436,
	434, 437, 438, 439, 940, 440, 424, 425, 441, 442,
	997, 443, 444, 530, 0, 445, 0, 446, 447, 448,
	449, 426, 450, 455, 531, 451, 452, 453, 454, 977,
	0, 457, 458, 0, 456, 0, 459, 460, 461, 462,
	463, 298, 464, 0, 465, 533, 534, 535, 536, 0,
	472, 0, 466, 467, 978, 468, 979, 0, 469, 470,
	471, 0, 473, 474, 0, 0, 475, 476, 477, 479,
	480, 478, 481, 941, 482, 0, 0, 483, 484, 485,
	539, 540, 541, 0, 487, 486, 542, 0, 1039, 0,
	0, 488, 489, 543, 490, 491, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 1029, 943,
	1027, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 495, 0, 496, 247, 497, 0, 248, 249,
	250, 251, 252, 0, 942, 0, 253, 498, 499, 500,
	0, 254, 255, 949, 0, 930, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 982, 272,
	273, 933, 931, 932, 939, 935, 934, 938, 274, 275,
	276, 277, 0, 278, 502, 503, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 286, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 504,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 973,
	974, 0, 229, 0, 0, 0, 0, 0, 304, 305,
	306, 507, 0, 0, 0, 307, 0, 308, 0, 0,
	983, 309, 310, 508, 509, 311, 312, 0, 313, 980,
	0, 511, 314, 0, 315, 316, 317, 318, 319, 944,
	945, 948, 372, 985, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 230, 326, 327, 329, 0, 984,
	328, 515, 516, 0, 517, 0, 330, 986, 946, 987,
	331, 332, 333, 988, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 1025, 341, 340, 0, 342, 981, 989,
	343, 344, 990, 0, 345, 346, 347, 937, 936, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 991, 364, 365,
	368, 369, 367, 992, 366, 0, 231, 993, 370, 0,
	947, 371, 521, 373, 374, 0, 0, 375, 0, 0,
	1031, 377, 378, 379, 0, 0, 380, 381, 522, 994,
	382, 995, 975, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 976, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 528, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 996, 418, 419, 420, 421,
	529, 1033, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 0, 435, 436, 434, 437, 438, 439, 940, 440,
	424, 425, 441, 442, 997, 443, 444, 530, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 531, 451,
	452, 453, 454, 977, 0, 457, 458, 0, 456, 0,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 533,
	534, 535, 536, 0, 472, 0, 466, 467, 978, 468,
	979, 0, 469, 470, 471, 0, 473, 474, 0, 0,
	475, 476, 477, 479, 480, 478, 481, 941, 482, 0,
	0, 483, 484, 485, 539, 540, 541, 0, 487, 486,
	542, 0, 1039, 0, 0, 488, 489, 543, 490, 491,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 1029, 943, 1027, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 494, 495, 0, 496, 247,
	497, 0, 248, 249, 250, 251, 252, 0, 942, 0,
	253, 498, 499, 500, 0, 254, 255, 949, 0, 930,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 982, 272, 273, 933, 931, 932, 939, 935,
	934, 938, 274, 275, 276, 277, 0, 278, 502, 503,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 0,
	0, 285, 286, 287, 0, 288, 289, 0, 290, 291,
	0, 292, 293, 504, 294, 295, 297, 299, 296, 300,
	301, 302, 303, 973, 974, 0, 229, 0, 0, 0,
	0, 0, 304, 305, 306, 507, 0, 0, 0, 307,
	0, 308, 0, 0, 983, 309, 310, 508, 509, 311,
	312, 0, 313, 980, 0, 511, 314, 0, 315, 316,
	317, 318, 319, 944, 945, 948, 372, 985, 320, 321,
	0, 322, 323, 324, 325, 0, 0, 0, 230, 326,
	327, 329, 0, 984, 328, 515, 516, 0, 517, 0,
	330, 986, 946, 987, 331, 332, 333, 988, 334, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 341, 340,
	0, 342, 981, 989, 343, 344, 990, 0, 345, 346,
	347, 937, 936, 348, 349, 350, 351, 0, 352, 353,
	355, 357, 354, 356, 361, 358, 359, 360, 363, 0,
	362, 991, 364, 365, 368, 369, 367, 992, 366, 0,
	231, 993, 370, 0, 947, 371, 521, 373, 374, 0,
	0, 375, 0, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 522, 994, 382, 995, 975, 383, 384, 376,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 393,
	524, 525, 976, 394, 527, 395, 396, 0, 397, 0,
	398, 399, 400, 401, 402, 403, 404, 528, 405, 406,
	0, 0, 0, 0, 0, 0, 407, 0, 409, 410,
	411, 408, 412, 413, 414, 415, 0, 416, 417, 996,
	418, 419, 420, 421, 529, 1033, 0, 423, 427, 428,
	429, 430, 431, 432, 433, 0, 435, 436, 434, 437,
	438, 439, 940, 440, 424, 425, 441, 442, 997, 443,
	444, 530, 0, 445, 0, 446, 447, 448, 449, 426,
	450, 455, 531, 451, 452, 453, 454, 977, 0, 457,
	458, 0, 456, 0, 459, 460, 461, 462, 463, 298,
	464, 0, 465, 533, 534, 535, 536, 0, 472, 0,
	466, 467, 978, 468, 979, 0, 469, 470, 471, 0,
	473, 474, 0, 0, 475, 476, 477, 479, 480, 478,
	481, 941, 482, 0, 0, 483, 484, 485, 539, 540,
	541, 0, 487, 486, 542, 0, 865, 0, 1220, 488,
	489, 543, 490, 491, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 1558, 493,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 495, 0, 496, 247, 497, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 498, 499, 500,
	0, 254, 255, 501, 0, 1189, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 982, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 502, 503, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 286, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 504,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 505,
	506, 0, 229, 0, 0, 0, 0, 0, 304, 305,
	306, 507, 0, 0, 0, 307, 0, 308, 0, 0,
	983, 309, 310, 508, 509, 311, 312, 0, 313, 510,
	0, 511, 314, 0, 315, 316, 317, 318, 319, 512,
	513, 514, 372, 985, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 0, 326, 327, 329, 0, 984,
	328, 515, 516, 0, 517, 0, 330, 986, 518, 987,
	331, 332, 333, 988, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 519, 989,
	343, 344, 990, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 991, 364, 365,
	368, 369, 367, 992, 366, 0, 0, 993, 370, 0,
	520, 371, 521, 373, 374, 0, 0, 375, 0, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 994,
	382, 995, 523, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 526, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 528, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 996, 418, 419, 420, 421,
	529, 422, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 192, 435, 436, 434, 437, 438, 439, 0, 440,
	424, 425, 441, 442, 997, 443, 444, 530, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 531, 451,
	452, 453, 454, 532, 0, 457, 458, 0, 456, 194,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 533,
	534, 535, 536, 0, 472, 0, 466, 467, 537, 468,
	538, 0, 469, 470, 471, 0, 473, 474, 0, 0,
	475, 476, 477, 479, 480, 478, 481, 0, 482, 0,
	0, 483, 484, 485, 1355, 540, 541, 0, 487, 486,
	542, 0, 0, 0, 186, 488, 489, 543, 490, 491,
	492, 0, 187, 0, 0, 0, 1352, 0, 1220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 493,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 495, 0, 496, 247, 497, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 498, 499, 500,
	0, 254, 255, 501, 0, 1189, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 982, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 502, 503, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 286, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 504,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 505,
	506, 0, 229, 0, 0, 0, 0, 0, 304, 305,
	306, 507, 0, 0, 0, 307, 0, 308, 0, 0,
	983, 309, 310, 508, 509, 311, 312, 0, 313, 510,
	0, 511, 314, 0, 315, 316, 317, 318, 319, 512,
	513, 514, 372, 985, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 0, 326, 327, 329, 0, 984,
	328, 515, 516, 0, 517, 0, 330, 986, 518, 987,
	331, 332, 333, 988, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 519, 989,
	343, 344, 990, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 991, 364, 365,
	368, 369, 367, 992, 366, 0, 0, 993, 370, 0,
	520, 371, 521, 373, 374, 0, 0, 375, 0, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 994,
	382, 995, 523, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 526, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 528, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 996, 418, 419, 420, 421,
	529, 422, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 192, 435, 436, 434, 437, 438, 439, 0, 440,
	424, 425, 441, 442, 997, 443, 444, 530, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 531, 451,
	452, 453, 454, 532, 0, 457, 458, 0, 456, 194,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 533,
	534, 535, 536, 0, 472, 0, 466, 467, 537, 468,
	538, 0, 469, 470, 471, 0, 473, 474, 0, 0,
	475, 476, 477, 479, 480, 478, 481, 0, 482, 0,
	0, 483, 484, 485, 1355, 540, 541, 0, 487, 486,
	542, 0, 0, 0, 186, 488, 489, 543, 490, 491,
	492, 0, 187, 0, 0, 0, 0, 0, 1220, 1219,
	0, 0, 0, 0, 1217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 493,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 495, 0, 496, 247, 497, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 498, 499, 500,
	0, 254, 255, 501, 0, 1189, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 982, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 502, 503, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 286, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 504,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 505,
	506, 0, 229, 0, 0, 0, 0, 0, 304, 305,
	306, 507, 0, 0, 0, 307, 0, 308, 0, 0,
	983, 309, 310, 508, 509, 311, 312, 0, 313, 510,
	0, 511, 314, 0, 315, 316, 317, 318, 319, 512,
	513, 514, 372, 985, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 0, 326, 327, 329, 0, 984,
	328, 515, 516, 0, 517, 0, 330, 986, 518, 987,
	331, 332, 333, 988, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 519, 989,
	343, 344, 990, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 991, 364, 365,
	368, 369, 367, 992, 366, 0, 0, 993, 370, 0,
	520, 371, 521, 373, 374, 0, 0, 375, 0, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 994,
	382, 995, 523, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 526, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 528, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 996, 418, 419, 420, 421,
	529, 422, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 0, 435, 436, 434, 437, 438, 439, 0, 440,
	424, 425, 441, 442, 997, 443, 444, 530, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 531, 451,
	452, 453, 454, 532, 0, 457, 458, 0, 456, 0,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 533,
	534, 535, 536, 0, 472, 0, 466, 467, 537, 468,
	538, 0, 469, 470, 471, 0, 473, 474, 0, 0,
	475, 476, 477, 479, 480, 478, 481, 0, 482, 0,
	0, 483, 484, 485, 539, 540, 541, 0, 487, 486,
	542, 0, 0, 0, 0, 488, 489, 543, 490, 491,
	492, 1220, 1219, 0, 0, 0, 0, 1217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 233,
	234, 235, 236, 237, 2963, 238, 239, 0, 0, 0,
	0, 0, 493, 0, 0, 0, 0, 240, 241, 243,
	242, 244, 245, 246, 494, 495, 0, 496, 247, 497,
	0, 248, 249, 250, 251, 252, 0, 0, 0, 253,
	498, 499, 500, 0, 254, 255, 501, 0, 1189, 0,
	256, 257, 258, 259, 260, 261, 262, 0, 0, 264,
	265, 266, 263, 0, 267, 0, 268, 269, 270, 0,
	271, 982, 272, 273, 0, 0, 0, 0, 0, 0,
	0, 274, 275, 276, 277, 0, 278, 502, 503, 0,
	282, 279, 280, 0, 283, 281, 0, 284, 0, 0,
	285, 286, 287, 0, 288, 289, 0, 290, 291, 0,
	292, 293, 504, 294, 295, 297, 299, 296, 300, 301,
	302, 303, 505, 506, 0, 229, 0, 0, 0, 0,
	0, 304, 305, 306, 507, 0, 0, 0, 307, 0,
	308, 0, 0, 983, 309, 310, 508, 509, 311, 312,
	0, 313, 510, 0, 511, 314, 0, 315, 316, 317,
	318, 319, 512, 513, 514, 372, 985, 320, 321, 0,
	322, 323, 324, 325, 0, 0, 0, 0, 326, 327,
	329, 0, 984, 328, 515, 516, 0, 517, 0, 330,
	986, 518, 987, 331, 332, 333, 988, 334, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 341, 340, 0,
	342, 519, 989, 343, 344, 990, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 351, 0, 352, 353, 355,
	357, 354, 356, 361, 358, 359, 360, 363, 0, 362,
	991, 364, 365, 368, 369, 367, 992, 366, 0, 0,
	993, 370, 0, 520, 371, 521, 373, 374, 0, 0,
	375, 0, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 522, 994, 382, 995, 523, 383, 384, 376, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 393, 524,
	525, 526, 394, 527, 395, 396, 0, 397, 0, 398,
	399, 400, 401, 402, 403, 404, 528, 405, 406, 0,
	0, 0, 0, 0, 0, 407, 0, 409, 410, 411,
	408, 412, 413, 414, 415, 0, 416, 417, 996, 418,
	419, 420, 421, 529, 422, 0, 423, 427, 428, 429,
	430, 431, 432, 433, 0, 435, 436, 434, 437, 438,
	439, 0, 440, 424, 425, 441, 442, 997, 443, 444,
	530, 0, 445, 0, 446, 447, 448, 449, 426, 450,
	455, 531, 451, 452, 453, 454, 532, 0, 457, 458,
	0, 456, 0, 459, 460, 461, 462, 463, 298, 464,
	0, 465, 533, 534, 535, 536, 0, 472, 0, 466,
	467, 537, 468, 538, 0, 469, 470, 471, 0, 473,
	474, 0, 0, 475, 476, 477, 479, 480, 478, 481,
	0, 482, 0, 0, 483, 484, 485, 539, 540, 541,
	0, 487, 486, 542, 0, 0, 0, 0, 488, 489,
	543, 490, 491, 492, 1220, 1219, 0, 0, 0, 0,
	1217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 1370, 238, 239,
	0, 0, 0, 0, 0, 493, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 494, 495, 0,
	496, 247, 497, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 498, 499, 500, 0, 254, 255, 501,
	0, 1189, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 982, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	502, 503, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 0, 0, 285, 286, 287, 0, 288, 289, 0,
	290, 291, 0, 292, 293, 504, 294, 295, 297, 299,
	296, 300, 301, 302, 303, 505, 506, 0, 229, 0,
	0, 0, 0, 0, 304, 305, 306, 507, 0, 0,
	0, 307, 0, 308, 0, 0, 983, 309, 310, 508,
	509, 311, 312, 0, 313, 510, 0, 511, 314, 0,
	315, 316, 317, 318, 319, 512, 513, 514, 372, 985,
	320, 321, 0, 322, 323, 324, 325, 0, 0, 0,
	0, 326, 327, 329, 0, 984, 328, 515, 516, 0,
	517, 0, 330, 986, 518, 987, 331, 332, 333, 988,
	334, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	341, 340, 0, 342, 519, 989, 343, 344, 990, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 351, 0,
	352, 353, 355, 357, 354, 356, 361, 358, 359, 360,
	363, 0, 362, 991, 364, 365, 368, 369, 367, 992,
	366, 0, 0, 993, 370, 0, 520, 371, 521, 373,
	374, 0, 0, 375, 0, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 522, 994, 382, 995, 523, 383,
	384, 376, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 393, 524, 525, 526, 394, 527, 395, 396, 0,
	397, 0, 398, 399, 400, 401, 402, 403, 404, 528,
	405, 406, 0, 0, 0, 0, 0, 0, 407, 0,
	409, 410, 411, 408, 412, 413, 414, 415, 0, 416,
	417, 996, 418, 419, 420, 421, 529, 422, 0, 423,
	427, 428, 429, 430, 431, 432, 433, 0, 435, 436,
	434, 437, 438, 439, 0, 440, 424, 425, 441, 442,
	997, 443, 444, 530, 0, 445, 0, 446, 447, 448,
	449, 426, 450, 455, 531, 451, 452, 453, 454, 532,
	0, 457, 458, 0, 456, 0, 459, 460, 461, 462,
	463, 298, 464, 0, 465, 533, 534, 535, 536, 0,
	472, 0, 466, 467, 537, 468, 538, 0, 469, 470,
	471, 0, 473, 474, 0, 0, 475, 476, 477, 479,
	480, 478, 481, 0, 482, 0, 0, 483, 484, 485,
	539, 540, 541, 0, 487, 486, 542, 1039, 0, 0,
	0, 488, 489, 543, 490, 491, 492, 0, 0, 0,
	0, 0, 0, 0, 232, 233, 234, 235, 236, 237,
	0, 238, 239, 0, 0, 0, 0, 0, 943, 0,
	1361, 0, 0, 240, 241, 243, 242, 244, 245, 246,
	494, 495, 0, 496, 247, 497, 0, 248, 249, 250,
	251, 252, 0, 942, 0, 253, 498, 499, 500, 0,
	254, 255, 949, 0, 930, 0, 256, 257, 258, 259,
	260, 261, 262, 0, 0, 264, 265, 266, 263, 0,
	267, 0, 268, 269, 270, 0, 271, 982, 272, 273,
	933, 931, 932, 939, 935, 934, 938, 274, 275, 276,
	277, 0, 278, 502, 503, 0, 282, 279, 280, 0,
	283, 281, 0, 284, 0, 0, 285, 286, 287, 0,
	288, 289, 0, 290, 291, 0, 292, 293, 504, 294,
	295, 297, 299, 296, 300, 301, 302, 303, 973, 974,
	0, 229, 0, 0, 0, 0, 0, 304, 305, 306,
	507, 0, 0, 0, 307, 0, 308, 0, 0, 983,
	309, 310, 508, 509, 311, 312, 0, 313, 980, 0,
	511, 314, 0, 315, 316, 317, 318, 319, 944, 945,
	948, 372, 985, 320, 321, 0, 322, 323, 324, 325,
	0, 0, 0, 230, 326, 327, 329, 0, 984, 328,
	515, 516, 0, 517, 0, 330, 986, 946, 987, 331,
	332, 333, 988, 334, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 341, 340, 0, 342, 981, 989, 343,
	344, 990, 0, 345, 346, 347, 937, 936, 348, 349,
	350, 351, 0, 352, 353, 355, 357, 354, 356, 361,
	358, 359, 360, 363, 0, 362, 991, 364, 365, 368,
	369, 367, 992, 366, 0, 231, 993, 370, 0, 947,
	371, 521, 373, 374, 0, 0, 375, 0, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 522, 994, 382,
	995, 975, 383, 384, 376, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 393, 524, 525, 976, 394, 527,
	395, 396, 0, 397, 0, 398, 399, 400, 401, 402,
	403, 404, 528, 405, 406, 0, 0, 0, 0, 0,
	0, 407, 0, 409, 410, 411, 408, 412, 413, 414,
	415, 0, 416, 417, 996, 418, 419, 420, 421, 529,
	422, 0, 423, 427, 428, 429, 430, 431, 432, 433,
	0, 435, 436, 434, 437, 438, 439, 940, 440, 424,
	425, 441, 442, 997, 443, 444, 530, 0, 445, 0,
	446, 447, 448, 449, 426, 450, 455, 531, 451, 452,
	453, 454, 977, 0, 457, 458, 0, 456, 0, 459,
	460, 461, 462, 463, 298, 464, 0, 465, 533, 534,
	535, 536, 0, 472, 0, 466, 467, 978, 468, 979,
	0, 469, 470, 471, 0, 473, 474, 0, 0, 475,
	476, 477, 479, 480, 478, 481, 941, 482, 0, 0,
	483, 484, 485, 539, 540, 541, 0, 487, 486, 542,
	865, 0, 226, 0, 488, 489, 543, 490, 491, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 493, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 494, 495, 0, 496, 247,
	497, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 498, 499, 500, 0, 254, 255, 501, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 502, 503,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 0,
	0, 285, 286, 287, 0, 288, 289, 0, 290, 291,
	0, 292, 293, 504, 294, 295, 297, 299, 296, 300,
	301, 302, 303, 505, 506, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 306, 507, 0, 0, 0, 307,
	0, 308, 0, 0, 0, 309, 310, 508, 509, 311,
	312, 0, 313, 510, 0, 511, 314, 0, 315, 316,
	317, 318, 319, 512, 513, 514, 372, 0, 320, 321,
	0, 322, 323, 324, 325, 0, 0, 0, 0, 326,
	327, 329, 0, 0, 328, 515, 516, 0, 517, 0,
	330, 0, 518, 0, 331, 332, 333, 0, 334, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 341, 340,
	0, 342, 519, 0, 343, 344, 0, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 351, 0, 352, 353,
	355, 357, 354, 356, 361, 358, 359, 360, 363, 0,
	362, 0, 364, 365, 368, 369, 367, 0, 366, 0,
	0, 0, 370, 0, 520, 371, 521, 373, 374, 0,
	0, 375, 0, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 522, 0, 382, 0, 523, 383, 384, 376,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 393,
	524, 525, 526, 394, 527, 395, 396, 0, 397, 0,
	398, 399, 400, 401, 402, 403, 404, 528, 405, 406,
	0, 0, 0, 0, 0, 0, 407, 0, 409, 410,
	411, 408, 412, 413, 414, 415, 0, 416, 417, 0,
	418, 419, 420, 421, 529, 422, 0, 423, 427, 428,
	429, 430, 431, 432, 433, 192, 435, 436, 434, 437,
	438, 439, 0, 440, 424, 425, 441, 442, 0, 443,
	444, 530, 0, 445, 0, 446, 447, 448, 449, 426,
	450, 455, 531, 451, 452, 453, 454, 532, 0, 457,
	458, 0, 456, 194, 459, 460, 461, 462, 463, 298,
	464, 0, 465, 533, 534, 535, 536, 0, 472, 0,
	466, 467, 537, 468, 538, 0, 469, 470, 471, 0,
	473, 474, 0, 0, 475, 476, 477, 479, 480, 478,
	481, 0, 482, 0, 0, 483, 484, 485, 1355, 540,
	541, 0, 487, 486, 542, 226, 0, 0, 186, 488,
	489, 543, 490, 491, 492, 0, 187, 0, 0, 0,
	0, 0, 232, 233, 234, 235, 236, 237, 0, 238,
	239, 0, 0, 0, 0, 0, 493, 0, 161, 0,
	0, 240, 241, 243, 242, 244, 245, 246, 494, 495,
	0, 496, 247, 497, 0, 248, 249, 250, 251, 252,
	0, 0, 0, 253, 498, 499, 500, 0, 254, 255,
	501, 0, 0, 0, 256, 257, 258, 259, 260, 261,
	262, 0, 0, 264, 265, 266, 263, 0, 267, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 0, 0, 274, 275, 276, 277, 0,
	278, 502, 503, 0, 282, 279, 280, 0, 283, 281,
	0, 284, 0, 0, 285, 286, 287, 0, 288, 289,
	0, 290, 291, 0, 292, 293, 504, 294, 295, 297,
	299, 296, 300, 301, 302, 303, 505, 506, 0, 229,
	0, 0, 0, 0, 0, 304, 305, 306, 507, 0,
	0, 0, 307, 0, 308, 0, 0, 0, 309, 310,
	508, 509, 311, 312, 0, 313, 510, 0, 511, 314,
	0, 315, 316, 317, 318, 319, 512, 513, 514, 372,
	0, 320, 321, 0, 322, 323, 324, 325, 0, 0,
	0, 230, 326, 327, 329, 0, 0, 328, 515, 516,
	0, 517, 0, 330, 0, 518, 0, 331, 332, 333,
	0, 334, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 341, 340, 0, 342, 519, 0, 343, 344, 0,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 351,
	0, 352, 353, 355, 357, 354, 356, 361, 358, 359,
	360, 363, 0, 362, 0, 364, 365, 368, 369, 367,
	0, 366, 0, 231, 0, 370, 0, 520, 371, 521,
	373, 374, 0, 0, 375, 0, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 522, 0, 382, 0, 523,
	383, 384, 376, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 393, 524, 525, 526, 394, 527, 395, 396,
	0, 397, 0, 398, 399, 400, 401, 402, 403, 404,
	528, 405, 406, 0, 0, 0, 0, 0, 0, 407,
	0, 409, 410, 411, 408, 412, 413, 414, 415, 0,
	416, 417, 0, 418, 419, 420, 421, 529, 422, 0,
	423, 427, 428, 429, 430, 431, 432, 433, 0, 435,
	436, 434, 437, 438, 439, 0, 440, 424, 425, 441,
	442, 0, 443, 444, 530, 0, 445, 0, 446, 447,
	448, 449, 426, 450, 455, 531, 451, 452, 453, 454,
	532, 0, 457, 458, 0, 456, 0, 459, 460, 461,
	462, 463, 298, 464, 0, 465, 533, 534, 535, 536,
	0, 472, 0, 466, 467, 537, 468, 538, 0, 469,
	470, 471, 0, 473, 474, 0, 0, 475, 476, 477,
	479, 480, 478, 481, 0, 482, 0, 0, 483, 484,
	485, 539, 540, 541, 0, 487, 486, 542, 0, 1303,
	0, 226, 488, 489, 543, 490, 491, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 233,
	234, 235, 236, 237, 0, 238, 239, 0, 0, 0,
	0, 1674, 493, 0, 0, 0, 0, 240, 241, 243,
	242, 244, 245, 246, 494, 495, 0, 496, 247, 497,
	0, 248, 249, 250, 251, 252, 0, 0, 0, 253,
	498, 499, 500, 0, 254, 255, 501, 0, 0, 0,
	256, 257, 258, 259, 260, 261, 262, 0, 0, 264,
	265, 266, 263, 0, 267, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 0, 0, 0, 0, 0,
	0, 274, 275, 276, 277, 0, 278, 502, 503, 0,
	282, 279, 280, 0, 283, 281, 0, 284, 0, 0,
	285, 286, 287, 0, 288, 289, 0, 290, 291, 0,
	292, 293, 504, 294, 295, 297, 299, 296, 300, 301,
	302, 303, 505, 506, 0, 229, 0, 0, 0, 0,
	0, 304, 305, 306, 507, 0, 0, 0, 307, 0,
	308, 0, 0, 0, 309, 310, 508, 509, 311, 312,
	0, 313, 510, 0, 511, 314, 0, 315, 316, 317,
	318, 319, 512, 513, 514, 372, 0, 320, 321, 0,
	322, 323, 324, 325, 0, 0, 0, 230, 326, 327,
	329, 0, 0, 328, 515, 516, 0, 517, 0, 330,
	0, 518, 0, 331, 332, 333, 0, 334, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 341, 340, 0,
	342, 519, 0, 343, 344, 0, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 351, 0, 352, 353, 355,
	357, 354, 356, 361, 358, 359, 360, 363, 0, 362,
	0, 364, 365, 368, 369, 367, 0, 366, 0, 231,
	0, 370, 0, 520, 371, 521, 373, 374, 0, 0,
	375, 0, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 522, 0, 382, 0, 523, 383, 384, 376, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 393, 524,
	525, 526, 394, 527, 395, 396, 0, 397, 0, 398,
	399, 400, 401, 402, 403, 404, 528, 405, 406, 0,
	0, 0, 0, 0, 0, 407, 0, 409, 410, 411,
	408, 412, 413, 414, 415, 0, 416, 417, 0, 418,
	419, 420, 421, 529, 422, 0, 423, 427, 428, 429,
	430, 431, 432, 433, 0, 435, 436, 434, 437, 438,
	439, 0, 440, 424, 425, 441, 442, 0, 443, 444,
	530, 0, 445, 0, 446, 447, 448, 449, 426, 450,
	455, 531, 451, 452, 453, 454, 532, 0, 457, 458,
	0, 456, 0, 459, 460, 461, 462, 463, 298, 464,
	0, 465, 533, 534, 535, 536, 0, 472, 0, 466,
	467, 537, 468, 538, 0, 469, 470, 471, 0, 473,
	474, 0, 0, 475, 476, 477, 479, 480, 478, 481,
	0, 482, 0, 0, 483, 484, 485, 539, 540, 541,
	226, 487, 486, 542, 0, 0, 0, 0, 488, 489,
	543, 490, 491, 492, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 493, 0, 0, 0, 1307, 240, 241, 243, 242,
	244, 245, 246, 494, 495, 0, 496, 247, 497, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 498,
	499, 500, 0, 254, 255, 501, 0, 0, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 502, 503, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 0, 0, 285,
	286, 287, 0, 288, 289, 0, 290, 291, 0, 292,
	293, 504, 294, 295, 297, 299, 296, 300, 301, 302,
	303, 505, 506, 0, 229, 0, 0, 0, 0, 0,
	304, 305, 306, 507, 0, 0, 0, 307, 0, 308,
	0, 0, 0, 309, 310, 508, 509, 311, 312, 0,
	313, 510, 0, 511, 314, 0, 315, 316, 317, 318,
	319, 512, 513, 514, 372, 0, 320, 321, 0, 322,
	323, 324, 325, 0, 0, 0, 230, 326, 327, 329,
	0, 0, 328, 515, 516, 0, 517, 0, 330, 0,
	518, 0, 331, 332, 333, 0, 334, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 341, 340, 0, 342,
	519, 0, 343, 344, 0, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 351, 0, 352, 353, 355, 357,
	354, 356, 361, 358, 359, 360, 363, 0, 362, 0,
	364, 365, 368, 369, 367, 0, 366, 0, 231, 0,
	370, 0, 520, 371, 521, 373, 374, 0, 0, 375,
	0, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	522, 0, 382, 0, 523, 383, 384, 376, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 393, 524, 525,
	526, 394, 527, 395, 396, 0, 397, 0, 398, 399,
	400, 401, 402, 403, 404, 528, 405, 406, 0, 0,
	0, 0, 0, 0, 407, 0, 409, 410, 411, 408,
	412, 413, 414, 415, 0, 416, 417, 0, 418, 419,
	420, 421, 529, 422, 0, 423, 427, 428, 429, 430,
	431, 432, 433, 0, 435, 436, 434, 437, 438, 439,
	0, 440, 424, 425, 441, 442, 0, 443, 444, 530,
	0, 445, 0, 446, 447, 448, 449, 426, 450, 455,
	531, 451, 452, 453, 454, 532, 0, 457, 458, 0,
	456, 0, 459, 460, 461, 462, 463, 298, 464, 0,
	465, 533, 534, 535, 536, 0, 472, 0, 466, 467,
	537, 468, 538, 0, 469, 470, 471, 0, 473, 474,
	0, 0, 475, 476, 477, 479, 480, 478, 481, 0,
	482, 0, 0, 483, 484, 485, 539, 540, 541, 226,
	487, 486, 542, 0, 0, 0, 0, 488, 489, 543,
	490, 491, 492, 0, 0, 0, 232, 233, 234, 235,
	236, 237, 0, 238, 239, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 2911, 240, 241, 243, 242, 244,
	245, 246, 494, 495, 0, 496, 247, 497, 0, 248,
	249, 250, 251, 252, 0, 0, 0, 253, 498, 499,
	500, 0, 254, 255, 501, 0, 0, 0, 256, 257,
	258, 259, 260, 261, 262, 0, 0, 264, 265, 266,
	263, 0, 267, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 0, 0, 274,
	275, 276, 277, 0, 278, 502, 503, 0, 282, 279,
	280, 0, 283, 281, 0, 284, 0, 0, 285, 286,
	287, 0, 288, 289, 0, 290, 291, 0, 292, 293,
	504, 294, 295, 297, 299, 296, 300, 301, 302, 303,
	505, 506, 0, 229, 0, 0, 0, 0, 0, 304,
	305, 306, 507, 0, 0, 0, 307, 0, 308, 0,
	0, 0, 309, 310, 508, 509, 311, 312, 0, 313,
	510, 0, 511, 314, 0, 315, 316, 317, 318, 319,
	512, 513, 514, 372, 0, 320, 321, 0, 322, 323,
	324, 325, 0, 0, 0, 230, 326, 327, 329, 0,
	0, 328, 515, 516, 0, 517, 0, 330, 0, 518,
	0, 331, 332, 333, 0, 334, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 341, 340, 0, 342, 519,
	0, 343, 344, 0, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 351, 0, 352, 353, 355, 357, 354,
	356, 361, 358, 359, 360, 363, 0, 362, 0, 364,
	365, 368, 369, 367, 0, 366, 0, 231, 0, 370,
	0, 520, 371, 521, 373, 374, 0, 0, 375, 0,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 522,
	0, 382, 0, 523, 383, 384, 376, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 393, 524, 525, 526,
	394, 527, 395, 396, 0, 397, 0, 398, 399, 400,
	401, 402, 403, 404, 528, 405, 406, 0, 0, 0,
	0, 0, 0, 407, 0, 409, 410, 411, 408, 412,
	413, 414, 415, 0, 416, 417, 0, 418, 419, 420,
	421, 529, 422, 0, 423, 427, 428, 429, 430, 431,
	432, 433, 0, 435, 436, 434, 437, 438, 439, 0,
	440, 424, 425, 441, 442, 0, 443, 444, 530, 0,
	445, 0, 446, 447, 448, 449, 426, 450, 455, 531,
	451, 452, 453, 454, 532, 0, 457, 458, 0, 456,
	0, 459, 460, 461, 462, 463, 298, 464, 0, 465,
	533, 534, 535, 536, 0, 472, 0, 466, 467, 537,
	468, 538, 0, 469, 470, 471, 0, 473, 474, 0,
	0, 475, 476, 477, 479, 480, 478, 481, 0, 482,
	0, 0, 483, 484, 485, 539, 540, 541, 226, 487,
	486, 542, 0, 0, 0, 0, 488, 489, 543, 490,
	491, 492, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 493,
	0, 0, 0, 1307, 240, 241, 243, 242, 244, 245,
	246, 494, 495, 0, 496, 247, 497, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 498, 499, 500,
	0, 254, 255, 501, 0, 0, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 502, 503, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 286, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 504,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 505,
	506, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	306, 507, 0, 0, 0, 307, 0, 308, 0, 0,
	0, 309, 310, 508, 509, 311, 312, 0, 313, 510,
	0, 511, 314, 0, 315, 316, 317, 318, 319, 512,
	513, 514, 372, 0, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 0, 326, 327, 329, 0, 0,
	328, 515, 516, 0, 517, 0, 330, 0, 518, 0,
	331, 332, 333, 0, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 519, 0,
	343, 344, 0, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 0, 364, 365,
	368, 369, 367, 0, 366, 0, 0, 0, 370, 0,
	520, 371, 521, 373, 374, 0, 0, 375, 0, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 0,
	382, 0, 523, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 526, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 528, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 0, 418, 419, 420, 421,
	529, 422, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 0, 435, 436, 434, 437, 438, 439, 0, 440,
	424, 425, 441, 442, 0, 443, 444, 530, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 531, 451,
	452, 453, 454, 532, 0, 457, 458, 0, 456, 0,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 533,
	534, 535, 536, 0, 472, 0, 466, 467, 537, 468,
	538, 0, 469, 470, 471, 0, 473, 474, 0, 0,
	475, 476, 477, 479, 480, 478, 481, 0, 482, 0,
	0, 483, 484, 485, 539, 540, 541, 0, 487, 486,
	542, 226, 0, 0, 0, 488, 489, 543, 490, 491,
	492, 0, 0, 0, 0, 0, 0, 0, 232, 233,
	234, 235, 236, 237, 0, 238, 239, 0, 0, 0,
	0, 0, 493, 0, 2482, 0, 0, 240, 241, 243,
	242, 244, 245, 246, 494, 495, 0, 496, 247, 497,
	0, 248, 249, 250, 251, 252, 0, 0, 0, 253,
	498, 499, 500, 0, 254, 255, 501, 0, 0, 0,
	256, 257, 258, 259, 260, 261, 262, 0, 0, 264,
	265, 266, 263, 0, 267, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 0, 0, 0, 0, 0,
	0, 274, 275, 276, 277, 0, 278, 502, 503, 0,
	282, 279, 280, 0, 283, 281, 0, 284, 0, 0,
	285, 286, 287, 0, 288, 289, 0, 290, 291, 0,
	292, 293, 504, 294, 295, 297, 299, 296, 300, 301,
	302, 303, 505, 506, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 306, 507, 0, 0, 0, 307, 0,
	308, 0, 0, 0, 309, 310, 508, 509, 311, 312,
	0, 313, 510, 0, 511, 314, 0, 315, 316, 317,
	318, 319, 512, 513, 514, 372, 0, 320, 321, 0,
	322, 323, 324, 325, 0, 0, 0, 0, 326, 327,
	329, 0, 0, 328, 515, 516, 0, 517, 0, 330,
	0, 518, 0, 331, 332, 333, 0, 334, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 341, 340, 0,
	342, 519, 0, 343, 344, 0, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 351, 0, 352, 353, 355,
	357, 354, 356, 361, 358, 359, 360, 363, 0, 362,
	0, 364, 365, 368, 369, 367, 0, 366, 0, 0,
	0, 370, 0, 520, 371, 521, 373, 374, 0, 0,
	375, 0, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 522, 0, 382, 0, 523, 383, 384, 376, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 393, 524,
	525, 526, 394, 527, 395, 396, 0, 397, 0, 398,
	399, 400, 401, 402, 403, 404, 528, 405, 406, 0,
	0, 0, 0, 0, 0, 407, 0, 409, 410, 411,
	408, 412, 413, 414, 415, 0, 416, 417, 0, 418,
	419, 420, 421, 529, 422, 0, 423, 427, 428, 429,
	430, 431, 432, 433, 0, 435, 436, 434, 437, 438,
	439, 0, 440, 424, 425, 441, 442, 0, 443, 444,
	530, 0, 445, 0, 446, 447, 448, 449, 426, 450,
	455, 531, 451, 452, 453, 454, 532, 0, 457, 458,
	0, 456, 0, 459, 460, 461, 462, 463, 298, 464,
	0, 465, 533, 534, 535, 536, 0, 472, 0, 466,
	467, 537, 468, 538, 0, 469, 470, 471, 0, 473,
	474, 0, 0, 475, 476, 477, 479, 480, 478, 481,
	0, 482, 0, 0, 483, 484, 485, 539, 540, 541,
	0, 487, 486, 542, 226, 0, 0, 0, 488, 489,
	543, 490, 491, 492, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 493, 0, 3051, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 494, 495, 0,
	496, 247, 497, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 498, 499, 500, 0, 254, 255, 501,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	502, 503, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 0, 0, 285, 286, 287, 0, 288, 289, 0,
	290, 291, 0, 292, 293, 504, 294, 295, 297, 299,
	296, 300, 301, 302, 303, 505, 506, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 306, 507, 0, 0,
	0, 307, 0, 308, 0, 0, 0, 309, 310, 508,
	509, 311, 312, 0, 313, 510, 0, 511, 314, 0,
	315, 316, 317, 318, 319, 512, 513, 514, 372, 0,
	320, 321, 0, 322, 323, 324, 325, 0, 0, 0,
	0, 326, 327, 329, 0, 0, 328, 515, 516, 0,
	517, 0, 330, 0, 518, 0, 331, 332, 333, 0,
	334, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	341, 340, 0, 342, 519, 0, 343, 344, 0, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 351, 0,
	352, 353, 355, 357, 354, 356, 361, 358, 359, 360,
	363, 0, 362, 0, 364, 365, 368, 369, 367, 0,
	366, 0, 0, 0, 370, 0, 520, 371, 521, 373,
	374, 0, 0, 375, 0, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 522, 0, 382, 0, 523, 383,
	384, 376, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 393, 524, 525, 526, 394, 527, 395, 396, 0,
	397, 0, 398, 399, 400, 401, 402, 403, 404, 528,
	405, 406, 0, 0, 0, 0, 0, 0, 407, 0,
	409, 410, 411, 408, 412, 413, 414, 415, 0, 416,
	417, 0, 418, 419, 420, 421, 529, 422, 0, 423,
	427, 428, 429, 430, 431, 432, 433, 0, 435, 436,
	434, 437, 438, 439, 0, 440, 424, 425, 441, 442,
	0, 443, 444, 530, 0, 445, 0, 446, 447, 448,
	449, 426, 450, 455, 531, 451, 452, 453, 454, 532,
	0, 457, 458, 0, 456, 0, 459, 460, 461, 462,
	463, 298, 464, 0, 465, 533, 534, 535, 536, 0,
	472, 0, 466, 467, 537, 468, 538, 0, 469, 470,
	471, 0, 473, 474, 0, 0, 475, 476, 477, 479,
	480, 478, 481, 0, 482, 0, 0, 483, 484, 485,
	539, 540, 541, 0, 487, 486, 542, 0, 731, 0,
	625, 488, 489, 543, 490, 491, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	1927, 493, 0, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 494, 495, 0, 496, 247, 497, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 498,
	499, 500, 0, 254, 255, 501, 0, 0, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 631, 277, 0, 278, 502, 503, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 0, 0, 285,
	286, 287, 0, 288, 289, 0, 290, 291, 0, 292,
	293, 504, 294, 295, 297, 299, 296, 300, 301, 302,
	303, 505, 506, 0, 229, 0, 0, 0, 0, 0,
	304, 305, 306, 507, 0, 0, 0, 307, 0, 308,
	0, 729, 0, 309, 310, 508, 509, 311, 312, 0,
	313, 510, 0, 511, 314, 0, 315, 316, 317, 318,
	319, 512, 513, 514, 372, 0, 320, 321, 0, 322,
	323, 324, 325, 0, 0, 0, 230, 326, 327, 329,
	0, 0, 328, 515, 516, 0, 517, 0, 330, 0,
	518, 0, 331, 332, 333, 0, 334, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 341, 340, 0, 342,
	519, 0, 343, 344, 0, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 351, 0, 352, 353, 355, 357,
	354, 356, 361, 358, 359, 360, 363, 0, 362, 0,
	364, 365, 368, 369, 367, 0, 366, 0, 231, 0,
	370, 0, 520, 371, 521, 373, 374, 0, 0, 375,
	0, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	522, 0, 382, 0, 523, 383, 384, 376, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 393, 524, 525,
	526, 394, 527, 395, 396, 0, 397, 0, 398, 399,
	400, 401, 402, 403, 404, 528, 405, 406, 0, 0,
	0, 0, 0, 0, 407, 0, 409, 410, 411, 408,
	412, 413, 414, 415, 0, 416, 417, 0, 418, 419,
	420, 421, 529, 422, 0, 423, 427, 428, 429, 430,
	431, 432, 433, 0, 435, 436, 434, 437, 438, 439,
	0, 440, 424, 425, 441, 442, 0, 443, 444, 530,
	0, 445, 0, 446, 447, 448, 449, 426, 450, 455,
	531, 451, 452, 453, 454, 532, 0, 457, 458, 0,
	456, 630, 459, 460, 461, 462, 463, 298, 464, 0,
	465, 533, 534, 535, 536, 0, 472, 0, 466, 467,
	537, 468, 538, 0, 469, 470, 471, 0, 473, 474,
	0, 0, 475, 476, 477, 479, 480, 478, 481, 0,
	482, 0, 0, 483, 484, 485, 539, 540, 541, 0,
	487, 486, 542, 0, 623, 0, 625, 488, 489, 543,
	490, 491, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 634,
	238, 239, 0, 0, 0, 0, 0, 493, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 494,
	495, 0, 496, 247, 497, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 498, 499, 500, 0, 254,
	255, 501, 0, 0, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 631, 277,
	0, 278, 502, 503, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 0, 0, 285, 286, 287, 0, 288,
	289, 0, 290, 291, 0, 292, 293, 504, 294, 295,
	297, 299, 296, 300, 301, 302, 303, 505, 506, 0,
	229, 0, 0, 0, 0, 0, 304, 305, 306, 507,
	0, 0, 0, 307, 0, 308, 0, 0, 0, 309,
	310, 508, 509, 311, 312, 0, 313, 510, 0, 511,
	314, 0, 315, 316, 317, 318, 319, 512, 513, 514,
	372, 0, 320, 321, 0, 322, 323, 324, 325, 0,
	0, 0, 230, 326, 327, 329, 0, 0, 328, 515,
	516, 0, 517, 0, 330, 0, 518, 0, 331, 332,
	333, 0, 334, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 341, 340, 0, 342, 519, 0, 343, 344,
	0, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	351, 0, 352, 353, 355, 357, 354, 356, 361, 358,
	359, 360, 363, 0, 362, 0, 364, 365, 368, 369,
	367, 0, 366, 0, 231, 0, 370, 0, 520, 371,
	521, 373, 374, 0, 0, 375, 0, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 522, 0, 382, 0,
	523, 383, 384, 376, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 393, 524, 525, 526, 394, 527, 395,
	396, 0, 397, 0, 398, 399, 400, 401, 402, 403,
	404, 528, 405, 406, 0, 0, 0, 0, 0, 0,
	407, 0, 409, 410, 411, 408, 412, 413, 414, 415,
	0, 416, 417, 0, 418, 419, 420, 421, 529, 422,
	0, 423, 427, 428, 429, 430, 431, 432, 433, 0,
	435, 436, 434, 437, 438, 439, 0, 440, 424, 425,
	441, 442, 0, 443, 444, 530, 0, 445, 0, 446,
	447, 448, 449, 426, 450, 455, 531, 451, 452, 453,
	454, 532, 0, 457, 458, 0, 456, 630, 459, 460,
	461, 462, 463, 298, 464, 0, 465, 533, 534, 535,
	536, 0, 472, 0, 466, 467, 537, 468, 538, 0,
	469, 470, 471, 0, 473, 474, 0, 0, 475, 476,
	477, 479, 480, 478, 481, 0, 482, 0, 0, 483,
	484, 485, 539, 540, 541, 625, 487, 486, 542, 0,
	0, 0, 0, 488, 489, 543, 490, 491, 492, 0,
	0, 0, 232, 233, 234, 235, 236, 237, 0, 238,
	239, 0, 0, 0, 0, 634, 493, 0, 0, 0,
	0, 240, 241, 243, 242, 244, 245, 246, 494, 495,
	0, 496, 247, 497, 0, 248, 249, 250, 251, 252,
	0, 0, 0, 253, 498, 499, 500, 0, 254, 255,
	501, 0, 0, 0, 256, 257, 258, 259, 260, 261,
	262, 0, 0, 264, 265, 266, 263, 0, 267, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 0, 0, 274, 275, 631, 277, 0,
	278, 502, 503, 0, 282, 279, 280, 0, 283, 281,
	0, 284, 0, 0, 285, 286, 287, 0, 288, 289,
	0, 290, 291, 0, 292, 293, 504, 294, 295, 297,
	299, 296, 300, 301, 302, 303, 505, 506, 0, 229,
	0, 0, 0, 0, 0, 304, 305, 306, 507, 0,
	0, 0, 307, 0, 308, 0, 0, 0, 309, 310,
	508, 509, 311, 312, 0, 313, 510, 0, 511, 314,
	0, 315, 316, 317, 318, 319, 512, 513, 514, 372,
	0, 320, 321, 0, 322, 323, 324, 325, 0, 0,
	0, 230, 326, 327, 329, 0, 0, 328, 515, 516,
	0, 517, 0, 330, 0, 518, 0, 331, 332, 333,
	0, 334, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 341, 340, 0, 342, 519, 0, 343, 344, 0,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 351,
	0, 352, 353, 355, 357, 354, 356, 361, 358, 359,
	360, 363, 0, 362, 0, 364, 365, 368, 369, 367,
	0, 366, 0, 231, 0, 370, 0, 520, 371, 521,
	373, 374, 0, 0, 375, 0, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 522, 0, 382, 0, 523,
	383, 384, 376, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 393, 524, 525, 526, 394, 527, 395, 396,
	0, 397, 0, 398, 399, 400, 401, 402, 403, 404,
	528, 405, 406, 0, 0, 0, 0, 0, 0, 407,
	0, 409, 410, 411, 408, 412, 413, 414, 415, 0,
	416, 417, 0, 1963, 419, 420, 421, 529, 422, 0,
	423, 427, 428, 429, 430, 431, 432, 433, 0, 435,
	436, 434, 437, 438, 439, 0, 440, 424, 425, 441,
	442, 0, 443, 444, 530, 0, 445, 0, 446, 447,
	448, 449, 426, 450, 455, 531, 451, 452, 453, 454,
	532, 0, 457, 458, 0, 456, 630, 459, 460, 461,
	462, 463, 298, 464, 0, 465, 533, 534, 535, 536,
	0, 472, 0, 466, 467, 537, 468, 538, 0, 469,
	470, 471, 0, 473, 474, 0, 0, 475, 476, 477,
	479, 480, 478, 481, 0, 482, 0, 0, 483, 484,
	485, 539, 540, 541, 625, 487, 486, 542, 0, 0,
	0, 0, 488, 489, 543, 490, 491, 492, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 634, 493, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 494, 495, 0,
	496, 247, 497, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 498, 499, 500, 0, 254, 255, 501,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 631, 277, 0, 278,
	502, 503, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 0, 0, 285, 286, 287, 0, 288, 289, 0,
	290, 291, 0, 292, 293, 504, 294, 295, 297, 299,
	296, 300, 301, 302, 303, 505, 506, 0, 229, 0,
	0, 0, 0, 0, 304, 305, 306, 507, 0, 0,
	0, 307, 0, 308, 0, 0, 0, 309, 310, 508,
	509, 311, 312, 0, 313, 510, 0, 511, 314, 0,
	315, 316, 317, 318, 319, 512, 513, 514, 372, 0,
	320, 321, 0, 322, 323, 324, 325, 0, 0, 0,
	230, 326, 327, 329, 0, 0, 328, 515, 516, 0,
	517, 0, 330, 0, 518, 0, 331, 332, 333, 0,
	334, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	341, 340, 0, 342, 519, 0, 343, 344, 0, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 351, 0,
	352, 353, 355, 357, 354, 356, 361, 358, 359, 360,
	363, 0, 362, 0, 364, 365, 368, 369, 367, 0,
	366, 0, 231, 0, 370, 0, 520, 371, 521, 373,
	374, 0, 0, 375, 0, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 522, 0, 382, 0, 523, 383,
	384, 376, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 393, 524, 525, 526, 394, 527, 395, 396, 0,
	397, 0, 398, 399, 400, 401, 402, 403, 404, 528,
	405, 406, 0, 0, 0, 0, 0, 0, 407, 0,
	409, 410, 411, 408, 412, 413, 414, 415, 0, 416,
	417, 0, 418, 419, 420, 421, 529, 422, 0, 423,
	427, 428, 429, 430, 431, 432, 433, 0, 435, 436,
	434, 437, 438, 439, 0, 440, 424, 425, 441, 442,
	0, 443, 444, 530, 0, 445, 0, 446, 447, 448,
	449, 426, 450, 455, 531, 451, 452, 453, 454, 532,
	0, 457, 458, 0, 456, 630, 459, 460, 461, 462,
	463, 298, 464, 0, 465, 533, 534, 535, 536, 0,
	472, 0, 466, 467, 537, 468, 538, 0, 469, 470,
	471, 0, 473, 474, 0, 0, 475, 476, 477, 479,
	480, 478, 481, 0, 482, 0, 0, 483, 484, 485,
	539, 540, 541, 1709, 487, 486, 542, 0, 0, 0,
	0, 488, 489, 543, 490, 491, 492, 0, 0, 0,
	232, 233, 234, 235, 236, 237, 0, 238, 239, 0,
	0, 0, 0, 634, 0, 0, 0, 0, 0, 240,
	241, 243, 242, 244, 245, 246, 0, 1715, 0, 1705,
	247, 1721, 0, 248, 249, 250, 251, 252, 0, 0,
	0, 253, 1730, 1731, 0, 0, 254, 255, 0, 0,
	1189, 0, 256, 257, 258, 259, 260, 261, 262, 0,
	0, 264, 265, 266, 263, 0, 267, 0, 268, 269,
	270, 0, 271, 982, 272, 273, 0, 0, 0, 0,
	0, 0, 0, 274, 275, 276, 277, 966, 278, 1719,
	1718, 0, 282, 279, 280, 0, 283, 281, 0, 284,
	0, 0, 285, 951, 287, 0, 288, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 297, 299, 296,
	300, 301, 302, 303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 306, 1717, 0, 0, 0,
	307, 0, 308, 0, 0, 983, 309, 310, 1726, 1727,
	311, 312, 0, 313, 0, 0, 0, 314, 0, 315,
	316, 317, 318, 319, 0, 0, 0, 372, 985, 320,
	321, 0, 322, 323, 324, 325, 0, 0, 0, 0,
	326, 327, 329, 0, 984, 328, 1712, 1713, 0, 1708,
	0, 330, 986, 0, 987, 331, 332, 333, 988, 334,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 341,
	340, 0, 342, 0, 989, 343, 344, 990, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 351, 0, 352,
	353, 355, 357, 354, 356, 361, 358, 359, 360, 363,
	0, 362, 991, 364, 365, 368, 369, 367, 992, 366,
	0, 0, 993, 370, 0, 0, 371, 1720, 373, 374,
	0, 0, 375, 0, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 0, 994, 382, 995, 0, 383, 384,
	376, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	393, 1702, 1703, 0, 394, 0, 395, 396, 0, 397,
	0, 398, 399, 400, 401, 402, 403, 404, 1716, 405,
	406, 0, 0, 0, 0, 0, 0, 407, 0, 409,
	410, 411, 408, 412, 413, 414, 415, 0, 416, 417,
	996, 418, 419, 420, 421, 0, 422, 0, 423, 427,
	428, 429, 430, 431, 432, 433, 0, 435, 436, 434,
	437, 438, 439, 0, 440, 424, 425, 441, 442, 997,
	443, 444, 1714, 0, 445, 0, 446, 447, 448, 449,
	426, 450, 455, 1729, 451, 452, 453, 454, 0, 0,
	457, 458, 0, 456, 0, 459, 460, 461, 462, 463,
	298, 464, 0, 465, 1722, 1723, 1724, 1725, 0, 472,
	0, 466, 467, 0, 468, 0, 0, 469, 470, 471,
	0, 473, 474, 0, 0, 475, 476, 477, 479, 480,
	478, 481, 0, 482, 0, 0, 483, 484, 485, 0,
	1706, 1728, 0, 487, 486, 0, 0, 0, 0, 0,
	488, 489, 0, 490, 491, 492, 1220, 1219, 0, 0,
	0, 0, 1217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 1696, 0, 0, 0, 493, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 494,
	495, 0, 496, 247, 497, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 498, 499, 500, 0, 254,
	255, 501, 0, 1189, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 982, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 502, 503, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 0, 0, 285, 286, 287, 0, 288,
	289, 0, 290, 291, 0, 292, 293, 504, 294, 295,
	297, 299, 296, 300, 301, 302, 303, 505, 506, 0,
	229, 0, 0, 0, 0, 0, 304, 305, 306, 507,
	0, 0, 0, 307, 0, 308, 0, 0, 983, 309,
	310, 508, 509, 311, 312, 0, 313, 510, 0, 511,
	314, 0, 315, 316, 317, 318, 319, 512, 513, 514,
	372, 985, 320, 321, 0, 322, 323, 324, 325, 0,
	0, 0, 0, 326, 327, 329, 0, 984, 328, 515,
	516, 0, 517, 0, 330, 986, 518, 987, 331, 332,
	333, 988, 334, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 341, 340, 0, 342, 519, 989, 343, 344,
	990, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	351, 0, 352, 353, 355, 357, 354, 356, 361, 358,
	359, 360, 363, 0, 362, 991, 364, 365, 368, 369,
	367, 992, 366, 0, 0, 993, 370, 3207, 520, 371,
	521, 373, 374, 0, 0, 375, 0, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 522, 994, 382, 995,
	523, 383, 384, 376, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 393, 524, 525, 526, 394, 527, 395,
	396, 0, 397, 0, 398, 399, 400, 401, 402, 403,
	404, 528, 405, 406, 0, 0, 0, 0, 0, 0,
	407, 0, 409, 410, 411, 408, 412, 413, 414, 415,
	0, 416, 417, 996, 418, 419, 420, 421, 529, 422,
	0, 423, 427, 428, 429, 430, 431, 432, 433, 0,
	435, 436, 434, 437, 438, 439, 0, 440, 424, 425,
	441, 442, 997, 443, 444, 530, 0, 445, 0, 446,
	447, 448, 449, 426, 450, 455, 531, 451, 452, 453,
	454, 532, 0, 457, 458, 0, 456, 0, 459, 460,
	461, 462, 463, 298, 464, 0, 465, 533, 534, 535,
	536, 0, 472, 0, 466, 467, 537, 468, 538, 0,
	469, 470, 471, 0, 473, 474, 0, 0, 475, 476,
	477, 479, 480, 478, 481, 0, 482, 0, 0, 483,
	484, 485, 539, 540, 541, 0, 487, 486, 542, 0,
	0, 0, 0, 488, 489, 543, 490, 491, 492, 1220,
	1219, 0, 0, 0, 0, 1217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 233, 234, 235,
	236, 237, 0, 238, 239, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 240, 241, 243, 242, 244,
	245, 246, 494, 495, 0, 496, 247, 497, 0, 248,
	249, 250, 251, 252, 0, 0, 0, 253, 498, 499,
	500, 0, 254, 255, 501, 0, 1189, 0, 256, 257,
	258, 259, 260, 261, 262, 0, 0, 264, 265, 266,
	263, 0, 267, 0, 268, 269, 270, 0, 271, 982,
	272, 273, 0, 0, 0, 0, 0, 0, 0, 274,
	275, 276, 277, 0, 278, 502, 503, 0, 282, 279,
	280, 0, 283, 281, 0, 284, 0, 0, 285, 286,
	287, 0, 288, 289, 0, 290, 291, 0, 292, 293,
	504, 294, 295, 297, 299, 296, 300, 301, 302, 303,
	505, 506, 0, 229, 0, 0, 0, 0, 0, 304,
	305, 306, 507, 0, 0, 0, 307, 0, 308, 0,
	0, 983, 309, 310, 508, 509, 311, 312, 0, 313,
	510, 0, 511, 314, 0, 315, 316, 317, 318, 319,
	512, 513, 514, 372, 985, 320, 321, 0, 322, 323,
	324, 325, 0, 0, 0, 0, 326, 327, 329, 0,
	984, 328, 515, 516, 0, 517, 0, 330, 986, 518,
	987, 331, 332, 333, 988, 334, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 341, 340, 0, 342, 519,
	989, 343, 344, 990, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 351, 0, 352, 353, 355, 357, 354,
	356, 361, 358, 359, 360, 363, 0, 362, 991, 364,
	365, 368, 369, 367, 992, 366, 0, 0, 993, 370,
	2892, 520, 371, 521, 373, 374, 0, 0, 375, 0,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 522,
	994, 382, 995, 523, 383, 384, 376, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 393, 524, 525, 526,
	394, 527, 395, 396, 0, 397, 0, 398, 399, 400,
	401, 402, 403, 404, 528, 405, 406, 0, 0, 0,
	0, 0, 0, 407, 0, 409, 410, 411, 408, 412,
	413, 414, 415, 0, 416, 417, 996, 418, 419, 420,
	421, 529, 422, 0, 423, 427, 428, 429, 430, 431,
	432, 433, 0, 435, 436, 434, 437, 438, 439, 0,
	440, 424, 425, 441, 442, 997, 443, 444, 530, 0,
	445, 0, 446, 447, 448, 449, 426, 450, 455, 531,
	451, 452, 453, 454, 532, 0, 457, 458, 0, 456,
	0, 459, 460, 461, 462, 463, 298, 464, 0, 465,
	533, 534, 535, 536, 0, 472, 0, 466, 467, 537,
	468, 538, 0, 469, 470, 471, 0, 473, 474, 0,
	0, 475, 476, 477, 479, 480, 478, 481, 0, 482,
	0, 0, 483, 484, 485, 539, 540, 541, 0, 487,
	486, 542, 1220, 1219, 0, 0, 488, 489, 543, 490,
	491, 492, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 493, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 494, 495, 0, 496, 247,
	497, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 498, 499, 500, 0, 254, 255, 501, 0, 1189,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 982, 272, 273, 0, 0, 0, 0, 0,
	0, 2883, 274, 275, 276, 277, 0, 278, 502, 503,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 0,
	0, 285, 286, 287, 0, 288, 289, 0, 290, 291,
	0, 292, 293, 504, 294, 295, 297, 299, 296, 300,
	301, 302, 303, 505, 506, 0, 229, 0, 0, 0,
	0, 0, 304, 305, 306, 507, 0, 0, 0, 307,
	0, 308, 0, 0, 983, 309, 310, 508, 509, 311,
	312, 0, 313, 510, 0, 511, 314, 0, 315, 316,
	317, 318, 319, 512, 513, 514, 372, 985, 320, 321,
	0, 322, 323, 324, 325, 0, 0, 0, 0, 326,
	327, 329, 0, 984, 328, 515, 516, 0, 517, 0,
	330, 986, 518, 987, 331, 332, 333, 988, 334, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 341, 340,
	0, 342, 519, 989, 343, 344, 990, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 351, 0, 352, 353,
	355, 357, 354, 356, 361, 358, 359, 360, 363, 0,
	362, 991, 364, 365, 368, 369, 367, 992, 366, 0,
	0, 993, 370, 0, 520, 371, 521, 373, 374, 0,
	0, 375, 0, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 522, 994, 382, 995, 523, 383, 384, 376,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 393,
	524, 525, 526, 394, 527, 395, 396, 0, 397, 0,
	398, 399, 400, 401, 402, 403, 404, 528, 405, 406,
	0, 0, 0, 0, 0, 0, 407, 0, 409, 410,
	411, 408, 412, 413, 414, 415, 0, 416, 417, 996,
	418, 419, 420, 421, 529, 422, 0, 423, 427, 428,
	429, 430, 431, 432, 433, 0, 435, 436, 434, 437,
	438, 439, 2884, 440, 424, 425, 441, 442, 997, 443,
	444, 530, 0, 445, 0, 446, 447, 448, 449, 426,
	450, 455, 531, 451, 452, 453, 454, 532, 0, 457,
	458, 0, 456, 0, 459, 460, 461, 462, 463, 298,
	464, 0, 465, 533, 534, 535, 536, 0, 472, 0,
	466, 467, 537, 468, 538, 0, 469, 470, 471, 0,
	473, 474, 0, 0, 475, 476, 477, 479, 480, 478,
	481, 0, 482, 0, 0, 483, 484, 485, 539, 540,
	541, 226, 487, 486, 542, 0, 0, 0, 0, 488,
	489, 543, 490, 491, 492, 0, 0, 0, 232, 233,
	234, 235, 236, 237, 0, 238, 239, 0, 0, 0,
	0, 0, 493, 0, 0, 0, 0, 240, 241, 243,
	242, 244, 245, 246, 494, 495, 0, 496, 247, 497,
	0, 248, 249, 250, 251, 252, 0, 0, 0, 253,
	498, 499, 500, 0, 254, 255, 501, 0, 0, 0,
	256, 257, 258, 259, 260, 261, 262, 0, 0, 264,
	265, 266, 263, 0, 267, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 0, 0, 0, 0, 0,
	0, 274, 275, 276, 277, 0, 278, 502, 503, 0,
	282, 279, 280, 0, 283, 281, 0, 284, 0, 0,
	285, 286, 287, 0, 288, 289, 0, 290, 291, 0,
	292, 293, 504, 294, 295, 297, 299, 296, 300, 301,
	302, 303, 505, 506, 0, 229, 0, 0, 0, 0,
	0, 304, 305, 306, 507, 0, 0, 0, 307, 0,
	308, 0, 0, 0, 309, 310, 508, 509, 311, 312,
	0, 313, 510, 0, 511, 314, 0, 315, 316, 317,
	318, 319, 512, 513, 514, 372, 0, 320, 321, 0,
	322, 323, 324, 325, 0, 0, 0, 230, 326, 327,
	329, 0, 0, 328, 515, 516, 0, 517, 0, 330,
	0, 518, 0, 331, 332, 333, 0, 334, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 341, 340, 0,
	342, 519, 0, 343, 344, 0, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 351, 0, 352, 353, 355,
	357, 354, 356, 361, 358, 359, 360, 363, 0, 362,
	0, 364, 365, 368, 369, 367, 0, 366, 0, 231,
	0, 370, 0, 520, 371, 521, 373, 374, 0, 0,
	375, 0, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 522, 0, 382, 0, 523, 383, 384, 376, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 393, 524,
	525, 526, 394, 527, 395, 396, 0, 397, 0, 398,
	399, 400, 401, 402, 403, 404, 528, 405, 406, 0,
	0, 0, 0, 0, 0, 407, 0, 409, 410, 411,
	408, 412, 413, 414, 415, 0, 416, 417, 0, 418,
	419, 420, 421, 529, 422, 0, 423, 427, 428, 429,
	430, 431, 432, 433, 0, 435, 436, 434, 437, 438,
	439, 0, 440, 424, 425, 441, 442, 0, 443, 444,
	530, 0, 445, 0, 446, 447, 448, 449, 426, 450,
	455, 531, 451, 452, 453, 454, 532, 0, 457, 458,
	0, 456, 0, 459, 460, 461, 462, 463, 298, 464,
	0, 465, 533, 534, 535, 536, 0, 472, 0, 466,
	467, 537, 468, 538, 0, 469, 470, 471, 0, 473,
	474, 0, 0, 475, 476, 477, 479, 480, 478, 481,
	0, 482, 0, 0, 483, 484, 485, 539, 540, 541,
	0, 487, 486, 542, 0, 0, 0, 0, 488, 489,
	543, 490, 491, 492, 1390, 0, 1220, 1219, 0, 0,
	0, 0, 1217, 0, 0, 0, 0, 0, 0, 0,
	634, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 493, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 494,
	495, 0, 496, 247, 497, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 498, 499, 500, 0, 254,
	255, 501, 0, 1189, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 982, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 502, 503, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 0, 0, 285, 286, 287, 0, 288,
	289, 0, 290, 291, 0, 292, 293, 504, 294, 295,
	297, 299, 296, 300, 301, 302, 303, 505, 506, 0,
	229, 0, 0, 0, 0, 0, 1389, 305, 306, 507,
	0, 0, 0, 307, 0, 308, 0, 0, 983, 309,
	310, 508, 509, 311, 312, 0, 313, 510, 0, 511,
	314, 0, 315, 316, 317, 318, 319, 512, 513, 514,
	372, 985, 320, 321, 0, 322, 323, 324, 325, 0,
	0, 0, 0, 326, 327, 329, 0, 984, 328, 515,
	516, 0, 517, 0, 330, 986, 518, 987, 331, 332,
	333, 988, 334, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 341, 340, 0, 342, 519, 989, 343, 344,
	990, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	351, 0, 352, 353, 355, 357, 354, 356, 361, 358,
	359, 360, 363, 0, 362, 991, 364, 365, 368, 369,
	367, 992, 366, 0, 0, 993, 370, 0, 520, 371,
	521, 373, 374, 0, 0, 375, 0, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 522, 994, 382, 995,
	523, 383, 384, 376, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 393, 524, 525, 526, 394, 527, 395,
	396, 0, 397, 0, 398, 399, 400, 401, 402, 1388,
	404, 528, 405, 406, 0, 0, 0, 0, 0, 0,
	407, 0, 409, 410, 411, 408, 412, 413, 414, 415,
	0, 416, 417, 996, 418, 419, 420, 421, 529, 422,
	0, 423, 427, 428, 429, 1387, 431, 432, 433, 0,
	435, 436, 434, 437, 438, 439, 0, 440, 424, 425,
	441, 442, 997, 443, 444, 530, 0, 445, 0, 446,
	447, 448, 449, 426, 450, 455, 531, 451, 452, 453,
	454, 532, 0, 457, 458, 0, 456, 0, 459, 460,
	461, 462, 463, 298, 464, 0, 465, 533, 534, 535,
	536, 0, 472, 0, 466, 467, 537, 468, 538, 0,
	469, 470, 471, 0, 473, 474, 0, 0, 475, 476,
	477, 479, 480, 478, 481, 0, 482, 0, 0, 483,
	484, 485, 539, 540, 541, 0, 487, 486, 542, 0,
	0, 0, 0, 488, 489, 543, 490, 491, 492, 1349,
	0, 1220, 1219, 0, 0, 0, 0, 1217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 233,
	234, 235, 236, 237, 0, 238, 239, 0, 0, 0,
	0, 0, 493, 0, 0, 0, 0, 240, 241, 243,
	242, 244, 245, 246, 494, 495, 0, 496, 247, 497,
	0, 248, 249, 250, 251, 252, 0, 0, 0, 253,
	498, 499, 500, 0, 254, 255, 501, 0, 1189, 0,
	256, 257, 258, 259, 260, 261, 262, 0, 0, 264,
	265, 266, 263, 0, 267, 0, 268, 269, 270, 0,
	271, 982, 272, 273, 0, 0, 0, 0, 0, 0,
	0, 274, 275, 276, 277, 0, 278, 502, 503, 0,
	282, 279, 280, 0, 283, 281, 0, 284, 0, 0,
	285, 286, 287, 0, 288, 289, 0, 290, 291, 0,
	292, 293, 504, 294, 295, 297, 299, 296, 300, 301,
	302, 303, 505, 506, 0, 229, 0, 0, 0, 0,
	0, 304, 305, 306, 507, 0, 0, 0, 307, 0,
	308, 0, 0, 983, 309, 310, 508, 509, 311, 312,
	0, 313, 510, 0, 511, 314, 0, 315, 316, 317,
	318, 319, 1348, 513, 514, 372, 985, 320, 321, 0,
	322, 323, 324, 325, 0, 0, 0, 0, 326, 327,
	329, 0, 984, 328, 515, 516, 0, 517, 0, 330,
	986, 518, 987, 331, 332, 333, 988, 334, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 341, 340, 0,
	342, 519, 989, 343, 344, 990, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 351, 0, 352, 353, 355,
	357, 354, 356, 361, 358, 359, 360, 363, 0, 362,
	991, 364, 365, 368, 369, 367, 992, 366, 0, 0,
	993, 370, 0, 520, 371, 521, 373, 374, 0, 0,
	375, 0, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 522, 994, 382, 995, 523, 383, 384, 376, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 393, 524,
	525, 526, 394, 527, 395, 396, 0, 397, 0, 398,
	399, 400, 401, 402, 403, 404, 528, 405, 406, 0,
	0, 0, 0, 0, 0, 407, 0, 409, 410, 411,
	408, 412, 413, 414, 415, 0, 416, 417, 996, 418,
	419, 420, 421, 529, 422, 0, 423, 427, 428, 429,
	430, 431, 432, 433, 0, 435, 436, 434, 437, 438,
	439, 0, 440, 424, 425, 441, 442, 997, 443, 444,
	530, 0, 445, 0, 446, 447, 448, 449, 426, 450,
	455, 531, 451, 452, 453, 454, 532, 0, 457, 458,
	0, 456, 0, 459, 460, 461, 462, 463, 298, 464,
	0, 465, 533, 534, 535, 536, 0, 472, 0, 466,
	467, 537, 468, 538, 0, 469, 470, 471, 0, 473,
	474, 0, 0, 475, 476, 477, 479, 480, 478, 481,
	0, 482, 0, 0, 483, 484, 485, 539, 540, 541,
	0, 487, 486, 542, 0, 0, 0, 0, 488, 489,
	543, 490, 491, 492, 1283, 0, 1220, 1219, 0, 0,
	0, 0, 1217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 493, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 494,
	495, 0, 496, 247, 497, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 498, 499, 500, 0, 254,
	255, 501, 0, 1189, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 982, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 502, 503, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 0, 0, 285, 286, 287, 0, 288,
	289, 0, 290, 291, 0, 292, 293, 504, 294, 295,
	297, 299, 296, 300, 301, 302, 303, 505, 506, 0,
	229, 0, 0, 0, 0, 0, 304, 305, 306, 507,
	0, 0, 0, 307, 0, 308, 0, 0, 983, 309,
	310, 508, 509, 311, 312, 0, 313, 510, 0, 511,
	314, 0, 315, 316, 317, 318, 319, 1282, 513, 514,
	372, 985, 320, 321, 0, 322, 323, 324, 325, 0,
	0, 0, 0, 326, 327, 329, 0, 984, 328, 515,
	516, 0, 517, 0, 330, 986, 518, 987, 331, 332,
	333, 988, 334, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 341, 340, 0, 342, 519, 989, 343, 344,
	990, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	351, 0, 352, 353, 355, 357, 354, 356, 361, 358,
	359, 360, 363, 0, 362, 991, 364, 365, 368, 369,
	367, 992, 366, 0, 0, 993, 370, 0, 520, 371,
	521, 373, 374, 0, 0, 375, 0, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 522, 994, 382, 995,
	523, 383, 384, 376, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 393, 524, 525, 526, 394, 527, 395,
	396, 0, 397, 0, 398, 399, 400, 401, 402, 403,
	404, 528, 405, 406, 0, 0, 0, 0, 0, 0,
	407, 0, 409, 410, 411, 408, 412, 413, 414, 415,
	0, 416, 417, 996, 418, 419, 420, 421, 529, 422,
	0, 423, 427, 428, 429, 430, 431, 432, 433, 0,
	435, 436, 434, 437, 438, 439, 0, 440, 424, 425,
	441, 442, 997, 443, 444, 530, 0, 445, 0, 446,
	447, 448, 449, 426, 450, 455, 531, 451, 452, 453,
	454, 532, 0, 457, 458, 0, 456, 0, 459, 460,
	461, 462, 463, 298, 464, 0, 465, 533, 534, 535,
	536, 0, 472, 0, 466, 467, 537, 468, 538, 0,
	469, 470, 471, 0, 473, 474, 0, 0, 475, 476,
	477, 479, 480, 478, 481, 0, 482, 0, 0, 483,
	484, 485, 539, 540, 541, 0, 487, 486, 542, 0,
	0, 0, 0, 488, 489, 543, 490, 491, 492, 1215,
	0, 1220, 1219, 0, 0, 0, 0, 1217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 233,
	234, 235, 236, 237, 0, 238, 239, 0, 0, 0,
	0, 0, 493, 0, 0, 0, 0, 240, 241, 243,
	242, 244, 245, 246, 494, 495, 0, 496, 247, 497,
	0, 248, 249, 250, 251, 252, 0, 0, 0, 253,
	498, 499, 500, 0, 254, 255, 501, 0, 1189, 0,
	256, 257, 258, 259, 260, 261, 262, 0, 0, 264,
	265, 266, 263, 0, 267, 0, 268, 269, 270, 0,
	271, 982, 272, 273, 0, 0, 0, 0, 0, 0,
	0, 274, 275, 276, 277, 0, 278, 502, 503, 0,
	282, 279, 280, 0, 283, 281, 0, 284, 0, 0,
	285, 286, 287, 0, 288, 289, 0, 290, 291, 0,
	292, 293, 504, 294, 295, 297, 299, 296, 300, 301,
	302, 303, 505, 506, 0, 229, 0, 0, 0, 0,
	0, 304, 305, 306, 507, 0, 0, 0, 307, 0,
	308, 0, 0, 983, 309, 310, 508, 509, 311, 312,
	0, 313, 510, 0, 511, 314, 0, 315, 316, 317,
	318, 319, 1214, 513, 514, 372, 985, 320, 321, 0,
	322, 323, 324, 325, 0, 0, 0, 0, 326, 327,
	329, 0, 984, 328, 515, 516, 0, 517, 0, 330,
	986, 518, 987, 331, 332, 333, 988, 334, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 341, 340, 0,
	342, 519, 989, 343, 344, 990, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 351, 0, 352, 353, 355,
	357, 354, 356, 361, 358, 359, 360, 363, 0, 362,
	991, 364, 365, 368, 369, 367, 992, 366, 0, 0,
	993, 370, 0, 520, 371, 521, 373, 374, 0, 0,
	375, 0, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 522, 994, 382, 995, 523, 383, 384, 376, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 393, 524,
	525, 526, 394, 527, 395, 396, 0, 397, 0, 398,
	399, 400, 401, 402, 403, 404, 528, 405, 406, 0,
	0, 0, 0, 0, 0, 407, 0, 409, 410, 411,
	408, 412, 413, 414, 415, 0, 416, 417, 996, 418,
	419, 420, 421, 529, 422, 0, 423, 427, 428, 429,
	430, 431, 432, 433, 0, 435, 436, 434, 437, 438,
	439, 0, 440, 424, 425, 441, 442, 997, 443, 444,
	530, 0, 445, 0, 446, 447, 448, 449, 426, 450,
	455, 531, 451, 452, 453, 454, 532, 0, 457, 458,
	0, 456, 0, 459, 460, 461, 462, 463, 298, 464,
	0, 465, 533, 534, 535, 536, 0, 472, 0, 466,
	467, 537, 468, 538, 0, 469, 470, 471, 0, 473,
	474, 0, 0, 475, 476, 477, 479, 480, 478, 481,
	0, 482, 0, 0, 483, 484, 485, 539, 540, 541,
	0, 487, 486, 542, 0, 0, 0, 0, 488, 489,
	543, 490, 491, 492, 1220, 1219, 0, 0, 0, 0,
	1217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 493, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 494, 495, 0,
	496, 247, 497, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 498, 499, 500, 0, 254, 255, 501,
	0, 1189, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 982, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	502, 503, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 0, 0, 285, 286, 287, 0, 288, 289, 0,
	290, 291, 0, 292, 293, 504, 294, 295, 297, 299,
	296, 300, 301, 302, 303, 505, 506, 0, 229, 0,
	0, 0, 0, 0, 304, 305, 306, 507, 0, 0,
	0, 307, 0, 308, 0, 0, 983, 309, 310, 508,
	509, 311, 312, 0, 313, 510, 0, 511, 314, 0,
	315, 316, 317, 318, 319, 512, 513, 514, 372, 985,
	320, 321, 0, 322, 323, 324, 325, 0, 0, 0,
	0, 326, 327, 329, 0, 984, 328, 515, 516, 0,
	517, 0, 330, 986, 518, 987, 331, 332, 333, 988,
	334, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	341, 340, 0, 342, 519, 989, 343, 344, 990, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 351, 0,
	352, 353, 355, 357, 354, 356, 361, 358, 359, 360,
	363, 0, 362, 991, 364, 365, 368, 369, 367, 992,
	366, 0, 0, 993, 370, 0, 520, 371, 521, 373,
	374, 0, 0, 375, 0, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 522, 994, 382, 995, 523, 383,
	384, 376, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 393, 524, 525, 526, 394, 527, 395, 396, 0,
	397, 0, 398, 399, 400, 401, 402, 403, 404, 528,
	405, 406, 0, 0, 0, 0, 0, 0, 407, 0,
	409, 410, 411, 408, 412, 413, 414, 415, 0, 416,
	417, 996, 418, 419, 420, 421, 529, 422, 0, 423,
	427, 428, 429, 430, 431, 432, 433, 0, 435, 436,
	434, 437, 438, 439, 0, 440, 424, 425, 441, 442,
	997, 443, 444, 530, 0, 445, 0, 446, 447, 448,
	449, 426, 450, 455, 531, 451, 452, 453, 454, 532,
	0, 457, 458, 0, 456, 0, 459, 460, 461, 462,
	463, 298, 464, 0, 465, 533, 534, 535, 536, 0,
	472, 0, 466, 467, 537, 468, 538, 0, 469, 470,
	471, 0, 473, 474, 0, 0, 475, 476, 477, 479,
	480, 478, 481, 0, 482, 0, 0, 483, 484, 485,
	539, 540, 541, 0, 487, 486, 542, 1220, 1219, 0,
	0, 488, 489, 543, 490, 491, 492, 0, 0, 0,
	0, 0, 0, 0, 232, 233, 234, 235, 236, 237,
	0, 238, 239, 0, 0, 0, 0, 0, 493, 0,
	0, 0, 0, 240, 241, 243, 242, 244, 245, 246,
	494, 495, 0, 496, 247, 497, 0, 248, 249, 250,
	251, 252, 0, 0, 0, 253, 498, 499, 500, 0,
	254, 255, 501, 0, 1189, 0, 256, 257, 258, 259,
	260, 261, 262, 0, 0, 264, 265, 266, 263, 0,
	267, 0, 268, 269, 270, 0, 271, 982, 272, 273,
	0, 0, 0, 0, 0, 0, 0, 274, 275, 276,
	277, 0, 278, 502, 503, 1740, 282, 279, 280, 0,
	283, 281, 0, 284, 0, 0, 285, 286, 287, 0,
	288, 289, 0, 290, 291, 0, 292, 293, 504, 294,
	295, 297, 299, 296, 300, 301, 302, 303, 505, 506,
	0, 229, 0, 0, 0, 0, 0, 304, 305, 306,
	507, 0, 0, 0, 307, 0, 308, 0, 0, 983,
	309, 310, 508, 509, 311, 312, 0, 313, 510, 0,
	511, 314, 0, 315, 316, 317, 318, 319, 512, 513,
	514, 372, 985, 320, 321, 0, 322, 323, 324, 325,
	0, 0, 0, 0, 326, 327, 329, 0, 984, 328,
	515, 516, 0, 517, 0, 330, 986, 518, 987, 331,
	332, 333, 988, 334, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 341, 340, 0, 342, 519, 989, 343,
	344, 990, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 351, 0, 352, 353, 355, 357, 354, 356, 361,
	358, 359, 360, 363, 0, 362, 991, 364, 365, 368,
	369, 367, 992, 366, 0, 0, 993, 370, 0, 520,
	371, 521, 373, 374, 0, 0, 375, 0, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 522, 994, 382,
	995, 523, 383, 384, 376, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 393, 524, 525, 526, 394, 527,
	395, 396, 0, 397, 0, 398, 399, 400, 401, 402,
	403, 404, 528, 405, 406, 0, 0, 0, 0, 0,
	0, 407, 0, 409, 410, 411, 408, 412, 413, 414,
	415, 0, 416, 417, 996, 418, 419, 420, 421, 529,
	422, 0, 423, 427, 428, 429, 430, 431, 432, 433,
	0, 435, 436, 434, 437, 438, 439, 0, 440, 424,
	425, 441, 442, 997, 443, 444, 530, 0, 445, 0,
	446, 447, 448, 449, 426, 450, 455, 531, 451, 452,
	453, 454, 532, 0, 457, 458, 0, 456, 0, 459,
	460, 461, 462, 463, 298, 464, 0, 465, 533, 534,
	535, 536, 0, 472, 0, 466, 467, 537, 468, 538,
	0, 469, 470, 471, 0, 473, 474, 0, 0, 475,
	476, 477, 479, 480, 478, 481, 0, 482, 0, 0,
	483, 484, 485, 539, 540, 541, 0, 487, 486, 542,
	1220, 1219, 0, 0, 488, 489, 543, 490, 491, 492,
	0, 0, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 493, 0, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 494, 495, 0, 496, 247, 497, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 498,
	499, 500, 0, 254, 255, 501, 0, 1189, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	982, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 502, 503, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 0, 0, 285,
	286, 287, 0, 288, 289, 0, 290, 291, 0, 292,
	293, 504, 294, 295, 297, 299, 296, 300, 301, 302,
	303, 505, 506, 0, 229, 0, 0, 0, 0, 0,
	304, 305, 306, 507, 0, 0, 0, 307, 0, 308,
	0, 0, 983, 309, 310, 508, 509, 311, 312, 0,
	313, 510, 0, 511, 314, 0, 315, 316, 317, 318,
	319, 512, 513, 514, 372, 985, 320, 321, 0, 322,
	323, 324, 325, 0, 0, 0, 0, 326, 327, 329,
	0, 984, 328, 515, 516, 0, 517, 0, 330, 986,
	518, 987, 331, 332, 333, 988, 334, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 341, 340, 0, 342,
	519, 989, 343, 344, 990, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 351, 0, 352, 353, 355, 357,
	354, 356, 361, 358, 359, 360, 363, 0, 362, 991,
	364, 365, 368, 369, 367, 992, 366, 0, 0, 993,
	370, 0, 520, 371, 521, 373, 374, 0, 0, 375,
	0, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	522, 994, 382, 995, 523, 383, 384, 376, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 393, 524, 525,
	526, 394, 527, 395, 396, 0, 397, 0, 398, 399,
	400, 401, 402, 403, 404, 528, 405, 406, 0, 0,
	0, 0, 0, 0, 407, 0, 409, 410, 411, 408,
	412, 413, 414, 415, 0, 416, 417, 996, 418, 419,
	420, 421, 529, 422, 0, 423, 427, 428, 429, 430,
	431, 432, 433, 0, 435, 436, 434, 437, 438, 439,
	0, 440, 424, 425, 441, 442, 997, 443, 444, 530,
	0, 445, 0, 446, 447, 448, 449, 426, 450, 455,
	531, 451, 452, 453, 454, 532, 0, 457, 458, 0,
	456, 0, 459, 460, 461, 462, 463, 298, 464, 0,
	465, 533, 534, 535, 536, 0, 472, 0, 466, 467,
	537, 468, 538, 0, 469, 470, 471, 0, 473, 474,
	0, 0, 475, 476, 477, 479, 480, 478, 481, 0,
	482, 0, 0, 483, 484, 485, 539, 540, 541, 1220,
	487, 486, 542, 0, 0, 0, 0, 488, 489, 543,
	490, 491, 492, 0, 0, 0, 232, 233, 234, 235,
	236, 237, 0, 238, 239, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 240, 241, 243, 242, 244,
	245, 246, 494, 495, 0, 496, 247, 497, 0, 248,
	249, 250, 251, 252, 0, 0, 0, 253, 498, 499,
	500, 0, 254, 255, 501, 0, 1189, 0, 256, 257,
	258, 259, 260, 261, 262, 0, 0, 264, 265, 266,
	263, 0, 267, 0, 268, 269, 270, 0, 271, 982,
	272, 273, 0, 0, 0, 0, 0, 0, 0, 274,
	275, 276, 277, 0, 278, 502, 503, 0, 282, 279,
	280, 0, 283, 281, 0, 284, 0, 0, 285, 286,
	287, 0, 288, 289, 0, 290, 291, 0, 292, 293,
	504, 294, 295, 297, 299, 296, 300, 301, 302, 303,
	505, 506, 0, 229, 0, 0, 0, 0, 0, 304,
	305, 306, 507, 0, 0, 0, 307, 0, 308, 0,
	0, 983, 309, 310, 508, 509, 311, 312, 0, 313,
	510, 0, 511, 314, 0, 315, 316, 317, 318, 319,
	512, 513, 514, 372, 985, 320, 321, 0, 322, 323,
	324, 325, 0, 0, 0, 0, 326, 327, 329, 0,
	984, 328, 515, 516, 0, 517, 0, 330, 986, 518,
	987, 331, 332, 333, 988, 334, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 341, 340, 0, 342, 519,
	989, 343, 344, 990, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 351, 0, 352, 353, 355, 357, 354,
	356, 361, 358, 359, 360, 363, 0, 362, 991, 364,
	365, 368, 369, 367, 992, 366, 0, 0, 993, 370,
	0, 520, 371, 521, 373, 374, 0, 0, 375, 0,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 522,
	994, 382, 995, 523, 383, 384, 376, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 393, 524, 525, 526,
	394, 527, 395, 396, 0, 397, 0, 398, 399, 400,
	401, 402, 403, 404, 528, 405, 406, 0, 0, 0,
	0, 0, 0, 407, 0, 409, 410, 411, 408, 412,
	413, 414, 415, 0, 416, 417, 996, 418, 419, 420,
	421, 529, 422, 0, 423, 427, 428, 429, 430, 431,
	432, 433, 0, 435, 436, 434, 437, 438, 439, 0,
	440, 424, 425, 441, 442, 997, 443, 444, 530, 0,
	445, 0, 446, 447, 448, 449, 426, 450, 455, 531,
	451, 452, 453, 454, 532, 0, 457, 458, 0, 456,
	0, 459, 460, 461, 462, 463, 298, 464, 0, 465,
	533, 534, 535, 536, 0, 472, 0, 466, 467, 537,
	468, 538, 0, 469, 470, 471, 0, 473, 474, 0,
	0, 475, 476, 477, 479, 480, 478, 481, 0, 482,
	0, 0, 483, 484, 485, 539, 540, 541, 226, 487,
	486, 542, 0, 0, 0, 0, 488, 489, 543, 490,
	491, 492, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 493,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 495, 0, 496, 247, 497, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 498, 499, 500,
	2350, 254, 255, 501, 0, 0, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	2347, 267, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 502, 503, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 286, 287,
	0, 288, 289, 0, 290, 291, 0, 2354, 293, 504,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 505,
	506, 0, 2520, 0, 0, 0, 0, 0, 304, 305,
	306, 507, 0, 0, 0, 307, 0, 308, 2353, 0,
	0, 309, 310, 508, 509, 311, 312, 0, 313, 510,
	0, 511, 314, 0, 315, 316, 317, 318, 319, 512,
	513, 514, 372, 0, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 2517, 326, 327, 329, 0, 0,
	328, 515, 516, 0, 517, 0, 2519, 0, 518, 0,
	331, 332, 333, 0, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 519, 0,
	343, 344, 2516, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 0, 364, 365,
	368, 369, 367, 0, 366, 0, 0, 0, 370, 0,
	520, 371, 521, 373, 374, 0, 0, 375, 0, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 0,
	382, 0, 523, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 526, 394,
	527, 395, 396, 2352, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 528, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 0, 418, 419, 420, 421,
	529, 422, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 0, 435, 436, 434, 437, 438, 439, 0, 440,
	424, 425, 441, 442, 0, 443, 444, 530, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 531, 451,
	452, 453, 454, 532, 0, 457, 458, 0, 456, 0,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 533,
	534, 535, 536, 0, 472, 0, 466, 467, 537, 468,
	538, 0, 469, 470, 471, 0, 473, 474, 0, 2518,
	475, 476, 477, 479, 480, 478, 481, 0, 482, 0,
	0, 483, 484, 485, 539, 540, 541, 226, 487, 486,
	542, 0, 0, 0, 0, 488, 489, 543, 490, 491,
	492, 0, 0, 0, 232, 233, 234, 235, 236, 237,
	0, 238, 239, 0, 0, 0, 0, 0, 493, 0,
	0, 0, 0, 240, 241, 243, 242, 244, 245, 246,
	494, 495, 0, 496, 247, 497, 0, 248, 249, 250,
	251, 252, 0, 0, 0, 253, 498, 499, 500, 2350,
	254, 255, 501, 0, 0, 2344, 256, 257, 258, 259,
	260, 261, 262, 0, 0, 264, 265, 266, 263, 2347,
	267, 0, 268, 269, 270, 0, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 0, 0, 274, 275, 276,
	277, 0, 278, 502, 503, 0, 282, 279, 280, 0,
	283, 281, 0, 284, 0, 0, 285, 286, 287, 0,
	288, 289, 0, 290, 291, 0, 2354, 293, 504, 294,
	295, 297, 299, 296, 300, 301, 302, 303, 505, 506,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 306,
	507, 0, 0, 0, 307, 0, 308, 2353, 0, 0,
	309, 310, 508, 509, 311, 312, 0, 313, 510, 0,
	511, 314, 0, 315, 316, 317, 318, 319, 2343, 513,
	514, 372, 0, 320, 321, 0, 322, 323, 324, 325,
	0, 0, 0, 0, 326, 327, 329, 0, 0, 328,
	515, 516, 0, 517, 0, 330, 0, 518, 0, 331,
	332, 333, 0, 334, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 341, 340, 0, 342, 519, 0, 343,
	344, 0, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 351, 0, 352, 353, 355, 357, 354, 356, 361,
	358, 359, 360, 363, 0, 362, 0, 364, 365, 368,
	369, 367, 0, 366, 0, 0, 0, 370, 0, 520,
	371, 521, 373, 374, 0, 0, 375, 0, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 522, 0, 382,
	0, 523, 383, 384, 376, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 393, 524, 525, 526, 394, 527,
	395, 396, 2352, 397, 0, 398, 399, 400, 401, 402,
	403, 404, 528, 405, 406, 0, 0, 0, 0, 0,
	0, 407, 0, 409, 410, 411, 408, 412, 413, 414,
	415, 0, 416, 417, 0, 418, 419, 420, 421, 529,
	422, 0, 423, 427, 428, 429, 430, 431, 432, 433,
	0, 435, 436, 434, 437, 438, 439, 0, 440, 424,
	425, 441, 442, 0, 443, 444, 530, 0, 445, 0,
	446, 447, 448, 449, 426, 450, 455, 531, 451, 452,
	453, 454, 532, 0, 457, 458, 0, 456, 0, 459,
	460, 461, 462, 463, 298, 464, 0, 465, 533, 534,
	535, 536, 0, 472, 0, 466, 467, 537, 468, 538,
	0, 469, 470, 471, 0, 473, 474, 0, 2351, 475,
	476, 477, 479, 480, 478, 481, 0, 482, 0, 0,
	483, 484, 485, 539, 540, 541, 0, 487, 486, 542,
	1447, 0, 226, 0, 488, 489, 543, 490, 491, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 493, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 494, 495, 0, 496, 247,
	497, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 498, 499, 500, 0, 254, 255, 501, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 502, 503,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 0,
	0, 285, 286, 287, 0, 288, 289, 0, 290, 291,
	0, 292, 293, 504, 294, 295, 297, 299, 296, 300,
	301, 302, 303, 505, 506, 0, 229, 0, 0, 0,
	0, 0, 304, 305, 306, 507, 0, 0, 0, 307,
	0, 308, 0, 0, 0, 309, 310, 508, 509, 311,
	312, 0, 313, 510, 0, 511, 314, 0, 315, 316,
	317, 318, 319, 512, 513, 514, 372, 0, 320, 321,
	0, 322, 323, 324, 325, 0, 0, 0, 230, 326,
	327, 329, 0, 0, 328, 515, 516, 0, 517, 0,
	330, 0, 518, 0, 331, 332, 333, 0, 334, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 341, 340,
	0, 342, 519, 0, 343, 344, 0, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 351, 0, 352, 353,
	355, 357, 354, 356, 361, 358, 359, 360, 363, 0,
	362, 0, 364, 365, 368, 369, 367, 0, 366, 0,
	231, 0, 370, 0, 520, 371, 521, 373, 374, 0,
	0, 375, 0, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 522, 0, 382, 0, 523, 383, 384, 376,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 393,
	524, 525, 526, 394, 527, 395, 396, 0, 397, 0,
	398, 399, 400, 401, 402, 403, 404, 528, 405, 406,
	0, 0, 0, 0, 0, 0, 407, 0, 409, 410,
	411, 408, 412, 413, 414, 415, 0, 416, 417, 0,
	418, 419, 420, 421, 529, 422, 0, 423, 427, 428,
	429, 430, 431, 432, 433, 0, 1450, 436, 434, 437,
	438, 439, 0, 440, 424, 425, 441, 442, 0, 443,
	444, 530, 0, 445, 0, 446, 447, 448, 449, 426,
	450, 455, 531, 451, 452, 453, 454, 532, 0, 457,
	458, 0, 456, 1448, 459, 460, 461, 462, 463, 298,
	464, 0, 465, 533, 534, 535, 536, 0, 472, 0,
	466, 467, 537, 468, 538, 0, 469, 470, 471, 0,
	473, 474, 0, 0, 475, 476, 477, 479, 480, 478,
	481, 0, 482, 0, 0, 483, 484, 485, 539, 540,
	541, 0, 1449, 486, 542, 1193, 0, 226, 0, 488,
	489, 543, 490, 491, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 233, 234, 235, 236, 237,
	0, 238, 239, 0, 0, 0, 0, 0, 493, 0,
	0, 0, 0, 240, 241, 243, 242, 244, 245, 246,
	494, 495, 0, 496, 247, 497, 0, 248, 249, 250,
	251, 252, 0, 0, 0, 253, 498, 499, 500, 0,
	254, 255, 501, 0, 0, 0, 256, 257, 258, 259,
	260, 261, 262, 0, 0, 264, 265, 266, 263, 0,
	267, 0, 268, 269, 270, 0, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 0, 0, 274, 275, 276,
	277, 0, 278, 502, 503, 0, 282, 279, 280, 0,
	283, 281, 0, 284, 0, 0, 285, 286, 287, 0,
	288, 289, 0, 290, 291, 0, 292, 293, 504, 294,
	295, 297, 299, 296, 300, 301, 302, 303, 505, 506,
	0, 229, 0, 0, 0, 0, 0, 304, 305, 306,
	507, 0, 0, 0, 307, 0, 308, 0, 0, 0,
	309, 310, 508, 509, 311, 312, 0, 313, 510, 0,
	511, 314, 0, 315, 316, 317, 318, 319, 1195, 513,
	514, 372, 0, 320, 321, 0, 322, 323, 324, 325,
	0, 0, 0, 230, 326, 327, 329, 0, 0, 328,
	515, 516, 0, 517, 0, 330, 0, 518, 0, 331,
	332, 333, 0, 334, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 341, 340, 0, 342, 519, 0, 343,
	344, 0, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 351, 0, 352, 353, 355, 357, 354, 356, 361,
	358, 359, 360, 363, 0, 362, 0, 364, 365, 368,
	369, 367, 0, 366, 0, 231, 0, 370, 0, 520,
	371, 521, 373, 374, 0, 0, 375, 0, 0, 1031,
	377, 378, 379, 0, 0, 380, 381, 522, 0, 382,
	0, 523, 383, 384, 376, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 393, 524, 525, 526, 394, 527,
	395, 396, 0, 397, 0, 398, 399, 400, 401, 402,
	403, 404, 528, 405, 406, 0, 0, 0, 0, 0,
	0, 407, 0, 409, 410, 411, 408, 412, 413, 414,
	415, 0, 416, 417, 0, 418, 419, 420, 421, 529,
	422, 0, 423, 427, 428, 429, 430, 431, 432, 433,
	0, 435, 436, 434, 437, 438, 439, 0, 440, 424,
	425, 441, 442, 0, 443, 444, 530, 0, 445, 0,
	446, 447, 448, 449, 426, 450, 455, 531, 451, 452,
	453, 454, 532, 0, 457, 458, 0, 456, 0, 459,
	460, 461, 462, 463, 298, 464, 0, 465, 533, 534,
	535, 536, 0, 472, 0, 466, 467, 537, 468, 538,
	0, 469, 470, 471, 0, 473, 474, 0, 0, 475,
	476, 477, 479, 480, 478, 481, 0, 482, 0, 0,
	483, 484, 485, 539, 540, 541, 0, 487, 486, 542,
	1190, 0, 226, 0, 488, 489, 543, 490, 491, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 493, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 494, 495, 0, 496, 247,
	497, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 498, 499, 500, 0, 254, 255, 501, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 502, 503,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 0,
	0, 285, 286, 287, 0, 288, 289, 0, 290, 291,
	0, 292, 293, 504, 294, 295, 297, 299, 296, 300,
	301, 302, 303, 505, 506, 0, 229, 0, 0, 0,
	0, 0, 304, 305, 306, 507, 0, 0, 0, 307,
	0, 308, 0, 0, 0, 309, 310, 508, 509, 311,
	312, 0, 313, 510, 0, 511, 314, 0, 315, 316,
	317, 318, 319, 1192, 513, 514, 372, 0, 320, 321,
	0, 322, 323, 324, 325, 0, 0, 0, 230, 326,
	327, 329, 0, 0, 328, 515, 516, 0, 517, 0,
	330, 0, 518, 0, 331, 332, 333, 0, 334, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 341, 340,
	0, 342, 519, 0, 343, 344, 0, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 351, 0, 352, 353,
	355, 357, 354, 356, 361, 358, 359, 360, 363, 0,
	362, 0, 364, 365, 368, 369, 367, 0, 366, 0,
	231, 0, 370, 0, 520, 371, 521, 373, 374, 0,
	0, 375, 0, 0, 1031, 377, 378, 379, 0, 0,
	380, 381, 522, 0, 382, 0, 523, 383, 384, 376,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 393,
	524, 525, 526, 394, 527, 395, 396, 0, 397, 0,
	398, 399, 400, 401, 402, 403, 404, 528, 405, 406,
	0, 0, 0, 0, 0, 0, 407, 0, 409, 410,
	411, 408, 412, 413, 414, 415, 0, 416, 417, 0,
	418, 419, 420, 421, 529, 422, 0, 423, 427, 428,
	429, 430, 431, 432, 433, 0, 435, 436, 434, 437,
	438, 439, 0, 440, 424, 425, 441, 442, 0, 443,
	444, 530, 0, 445, 0, 446, 447, 448, 449, 426,
	450, 455, 531, 451, 452, 453, 454, 532, 0, 457,
	458, 0, 456, 0, 459, 460, 461, 462, 463, 298,
	464, 0, 465, 533, 534, 535, 536, 0, 472, 0,
	466, 467, 537, 468, 538, 0, 469, 470, 471, 0,
	473, 474, 0, 0, 475, 476, 477, 479, 480, 478,
	481, 0, 482, 0, 0, 483, 484, 485, 539, 540,
	541, 0, 487, 486, 542, 1096, 0, 226, 0, 488,
	489, 543, 490, 491, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 233, 234, 235, 236, 237,
	0, 238, 239, 0, 0, 0, 0, 0, 493, 0,
	0, 0, 0, 240, 241, 243, 242, 244, 245, 246,
	494, 495, 0, 496, 247, 497, 0, 248, 249, 250,
	251, 252, 0, 0, 0, 253, 498, 499, 500, 0,
	254, 255, 501, 0, 0, 0, 256, 257, 258, 259,
	260, 261, 262, 0, 0, 264, 265, 266, 263, 0,
	267, 0, 268, 269, 270, 0, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 0, 0, 274, 275, 276,
	277, 0, 278, 502, 503, 0, 282, 279, 280, 0,
	283, 281, 0, 284, 0, 0, 285, 286, 287, 0,
	288, 289, 0, 290, 291, 0, 292, 293, 504, 294,
	295, 297, 299, 296, 300, 301, 302, 303, 505, 506,
	0, 229, 0, 0, 0, 0, 0, 304, 305, 306,
	507, 0, 0, 0, 307, 0, 308, 0, 0, 0,
	309, 310, 508, 509, 311, 312, 0, 313, 510, 0,
	511, 314, 0, 315, 316, 317, 318, 319, 1098, 513,
	514, 372, 0, 320, 321, 0, 322, 323, 324, 325,
	0, 0, 0, 230, 326, 327, 329, 0, 0, 328,
	515, 516, 0, 517, 0, 330, 0, 518, 0, 331,
	332, 333, 0, 334, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 341, 340, 0, 342, 519, 0, 343,
	344, 0, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 351, 0, 352, 353, 355, 357, 354, 356, 361,
	358, 359, 360, 363, 0, 362, 0, 364, 365, 368,
	369, 367, 0, 366, 0, 231, 0, 370, 0, 520,
	371, 521, 373, 374, 0, 0, 375, 0, 0, 1031,
	377, 378, 379, 0, 0, 380, 381, 522, 0, 382,
	0, 523, 383, 384, 376, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 393, 524, 525, 526, 394, 527,
	395, 396, 0, 397, 0, 398, 399, 400, 401, 402,
	403, 404, 528, 405, 406, 0, 0, 0, 0, 0,
	0, 407, 0, 409, 410, 411, 408, 412, 413, 414,
	415, 0, 416, 417, 0, 418, 419, 420, 421, 529,
	422, 0, 423, 427, 428, 429, 430, 431, 432, 433,
	0, 435, 436, 434, 437, 438, 439, 0, 440, 424,
	425, 441, 442, 0, 443, 444, 530, 0, 445, 0,
	446, 447, 448, 449, 426, 450, 455, 531, 451, 452,
	453, 454, 532, 0, 457, 458, 0, 456, 0, 459,
	460, 461, 462, 463, 298, 464, 0, 465, 533, 534,
	535, 536, 0, 472, 0, 466, 467, 537, 468, 538,
	0, 469, 470, 471, 0, 473, 474, 0, 0, 475,
	476, 477, 479, 480, 478, 481, 0, 482, 0, 0,
	483, 484, 485, 539, 540, 541, 0, 487, 486, 542,
	575, 0, 226, 0, 488, 489, 543, 490, 491, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 574, 236, 237, 564, 238, 239, 0, 0,
	0, 0, 0, 493, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 494, 495, 0, 496, 247,
	497, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 498, 499, 500, 0, 254, 255, 501, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	567, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 502, 503,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 0,
	0, 285, 286, 287, 0, 288, 289, 0, 290, 291,
	0, 292, 293, 504, 294, 295, 297, 299, 296, 300,
	301, 302, 303, 505, 506, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 306, 507, 0, 0, 0, 307,
	0, 308, 0, 0, 0, 309, 310, 508, 509, 311,
	312, 568, 313, 510, 0, 511, 314, 0, 315, 316,
	317, 318, 319, 512, 513, 514, 372, 0, 320, 321,
	0, 322, 323, 324, 325, 0, 0, 0, 0, 326,
	327, 329, 0, 0, 328, 515, 516, 0, 517, 0,
	330, 0, 518, 0, 331, 332, 333, 0, 334, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 341, 340,
	0, 342, 519, 0, 343, 344, 0, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 351, 0, 352, 353,
	355, 357, 354, 356, 361, 358, 359, 360, 363, 0,
	362, 0, 364, 365, 368, 369, 367, 0, 366, 0,
	0, 0, 370, 0, 520, 371, 521, 373, 374, 0,
	0, 375, 0, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 522, 0, 382, 0, 523, 383, 384, 376,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 393,
	524, 525, 526, 394, 527, 395, 396, 0, 397, 0,
	398, 399, 400, 401, 402, 403, 404, 528, 405, 406,
	0, 0, 0, 0, 0, 0, 407, 0, 409, 410,
	411, 408, 412, 413, 414, 415, 0, 416, 417, 0,
	418, 419, 420, 421, 529, 422, 0, 423, 427, 428,
	429, 430, 431, 432, 433, 569, 435, 436, 434, 437,
	438, 439, 0, 440, 424, 425, 441, 442, 0, 443,
	444, 530, 0, 445, 0, 446, 447, 448, 449, 426,
	450, 455, 531, 451, 452, 453, 454, 532, 0, 457,
	458, 0, 456, 0, 459, 460, 461, 462, 463, 298,
	464, 0, 465, 533, 534, 535, 536, 0, 472, 0,
	466, 467, 537, 468, 538, 0, 469, 470, 471, 0,
	473, 474, 0, 0, 475, 476, 477, 479, 480, 478,
	481, 0, 482, 0, 0, 483, 484, 485, 539, 540,
	541, 0, 487, 486, 542, 563, 0, 226, 0, 488,
	489, 543, 490, 491, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 233, 234, 235, 236, 237,
	564, 238, 239, 0, 0, 0, 0, 0, 493, 0,
	0, 0, 0, 240, 241, 243, 242, 244, 245, 246,
	494, 495, 0, 496, 247, 497, 0, 248, 249, 250,
	251, 252, 0, 0, 0, 253, 498, 499, 500, 0,
	254, 255, 501, 0, 0, 0, 256, 257, 258, 259,
	260, 261, 262, 0, 0, 264, 265, 266, 263, 0,
	267, 0, 268, 269, 270, 567, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 0, 0, 274, 275, 276,
	277, 0, 278, 502, 503, 0, 282, 279, 280, 0,
	283, 281, 0, 284, 0, 0, 285, 286, 287, 0,
	288, 289, 0, 290, 291, 0, 292, 293, 504, 294,
	295, 297, 299, 296, 300, 301, 302, 303, 505, 506,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 306,
	507, 0, 0, 0, 307, 0, 308, 0, 0, 0,
	309, 310, 508, 509, 311, 312, 568, 313, 510, 0,
	511, 314, 0, 315, 316, 317, 318, 319, 512, 513,
	514, 372, 0, 320, 321, 0, 322, 323, 324, 325,
	0, 0, 0, 0, 326, 327, 329, 0, 0, 328,
	515, 516, 0, 517, 0, 330, 0, 518, 0, 331,
	332, 333, 0, 334, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 341, 340, 0, 342, 519, 0, 343,
	344, 0, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 351, 0, 352, 353, 355, 357, 354, 356, 361,
	358, 359, 360, 363, 0, 362, 0, 364, 365, 368,
	369, 367, 0, 366, 0, 0, 0, 370, 0, 520,
	371, 521, 373, 374, 0, 0, 375, 0, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 522, 0, 382,
	0, 523, 383, 384, 376, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 393, 524, 525, 526, 394, 527,
	395, 396, 0, 397, 0, 398, 399, 400, 401, 402,
	403, 404, 528, 405, 406, 0, 0, 0, 0, 0,
	0, 407, 0, 409, 410, 411, 408, 412, 413, 414,
	415, 0, 416, 417, 0, 418, 419, 420, 421, 529,
	422, 0, 423, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 436, 434, 437, 438, 439, 0, 440, 424,
	425, 441, 442, 0, 443, 444, 530, 0, 445, 0,
	446, 447, 448, 449, 426, 450, 455, 531, 451, 452,
	453, 454, 532, 0, 457, 458, 0, 456, 0, 459,
	460, 461, 462, 463, 298, 464, 0, 465, 533, 534,
	535, 536, 0, 472, 0, 466, 467, 537, 468, 538,
	0, 469, 470, 471, 0, 473, 474, 0, 0, 475,
	476, 477, 479, 480, 478, 481, 0, 482, 0, 0,
	483, 484, 485, 539, 540, 541, 226, 487, 486, 542,
	0, 0, 0, 0, 488, 489, 543, 490, 491, 492,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 493, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 494,
	495, 0, 496, 247, 497, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 498, 499, 500, 0, 254,
	255, 501, 0, 0, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 502, 503, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 0, 0, 285, 286, 287, 0, 288,
	289, 0, 290, 291, 0, 292, 293, 504, 294, 295,
	297, 299, 296, 300, 301, 302, 303, 505, 506, 0,
	229, 0, 0, 0, 0, 0, 304, 305, 306, 507,
	0, 0, 0, 307, 0, 308, 0, 0, 0, 309,
	310, 508, 509, 311, 312, 0, 313, 510, 0, 511,
	314, 0, 315, 316, 317, 318, 319, 512, 513, 514,
	372, 0, 320, 321, 0, 322, 323, 324, 325, 0,
	0, 0, 230, 326, 327, 329, 0, 0, 328, 515,
	516, 0, 517, 0, 330, 0, 518, 0, 331, 332,
	333, 0, 334, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 341, 340, 0, 342, 519, 0, 343, 344,
	0, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	351, 0, 352, 353, 355, 357, 354, 356, 361, 358,
	359, 360, 363, 0, 362, 0, 364, 365, 368, 369,
	367, 2858, 366, 0, 231, 0, 370, 0, 520, 371,
	521, 373, 374, 0, 0, 375, 0, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 522, 0, 382, 0,
	523, 383, 384, 376, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 393, 524, 525, 526, 394, 527, 395,
	396, 0, 397, 0, 398, 399, 400, 401, 402, 403,
	404, 528, 405, 406, 0, 0, 0, 0, 0, 0,
	407, 0, 409, 410, 411, 408, 412, 413, 414, 415,
	0, 416, 417, 0, 418, 419, 420, 421, 529, 422,
	0, 423, 427, 428, 429, 430, 431, 432, 433, 0,
	435, 436, 434, 437, 438, 439, 0, 440, 424, 425,
	441, 442, 0, 443, 444, 530, 0, 445, 0, 446,
	447, 448, 449, 426, 450, 455, 531, 451, 452, 453,
	454, 532, 0, 457, 458, 0, 456, 0, 459, 460,
	461, 462, 463, 298, 464, 0, 465, 533, 534, 535,
	536, 0, 472, 0, 466, 467, 537, 468, 538, 0,
	469, 470, 471, 0, 473, 474, 0, 0, 475, 476,
	477, 479, 480, 478, 481, 0, 482, 0, 0, 483,
	484, 485, 539, 540, 541, 226, 487, 486, 542, 0,
	0, 0, 0, 488, 489, 543, 490, 491, 492, 0,
	0, 0, 232, 233, 234, 235, 236, 237, 0, 238,
	239, 0, 0, 0, 0, 0, 493, 0, 0, 0,
	0, 240, 241, 243, 242, 244, 245, 246, 494, 495,
	0, 496, 247, 497, 0, 248, 249, 250, 251, 252,
	0, 0, 0, 253, 498, 499, 500, 0, 254, 255,
	501, 0, 0, 0, 256, 257, 258, 259, 260, 261,
	262, 0, 0, 264, 265, 266, 263, 0, 267, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 0, 0, 274, 275, 276, 277, 0,
	278, 502, 503, 0, 282, 279, 280, 0, 283, 281,
	0, 284, 0, 0, 285, 286, 287, 0, 288, 289,
	0, 290, 291, 0, 292, 293, 504, 294, 295, 297,
	299, 296, 300, 301, 302, 303, 505, 506, 0, 229,
	0, 0, 0, 0, 0, 304, 305, 306, 507, 0,
	0, 0, 307, 0, 308, 0, 0, 0, 309, 310,
	508, 509, 311, 312, 0, 313, 510, 0, 511, 314,
	0, 315, 316, 317, 318, 319, 512, 513, 514, 372,
	0, 320, 321, 0, 322, 323, 324, 325, 0, 0,
	0, 230, 326, 327, 329, 0, 0, 328, 515, 516,
	0, 517, 0, 330, 0, 518, 0, 331, 332, 333,
	0, 334, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 341, 340, 0, 342, 519, 0, 343, 344, 0,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 351,
	0, 352, 353, 355, 357, 354, 356, 361, 358, 359,
	360, 363, 0, 362, 0, 364, 365, 368, 369, 367,
	0, 366, 0, 231, 0, 370, 0, 520, 371, 521,
	373, 374, 0, 0, 375, 0, 0, 1031, 377, 378,
	379, 0, 0, 380, 381, 522, 0, 382, 0, 523,
	383, 384, 376, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 393, 524, 525, 526, 394, 527, 395, 396,
	0, 397, 0, 398, 399, 400, 401, 402, 403, 404,
	528, 405, 406, 0, 0, 0, 0, 0, 0, 407,
	0, 409, 410, 411, 408, 412, 413, 414, 415, 0,
	416, 417, 0, 418, 419, 420, 421, 529, 422, 0,
	423, 427, 428, 429, 430, 431, 432, 433, 0, 435,
	436, 434, 437, 438, 439, 0, 440, 424, 425, 441,
	442, 0, 443, 444, 530, 0, 445, 0, 446, 447,
	448, 449, 426, 450, 455, 531, 451, 452, 453, 454,
	532, 0, 457, 458, 0, 456, 0, 459, 460, 461,
	462, 463, 298, 464, 0, 465, 533, 534, 535, 536,
	0, 472, 0, 466, 467, 537, 468, 538, 0, 469,
	470, 471, 0, 473, 474, 0, 0, 475, 476, 477,
	479, 480, 478, 481, 0, 482, 0, 0, 483, 484,
	485, 539, 540, 541, 0, 487, 486, 542, 2454, 0,
	226, 0, 488, 489, 543, 490, 491, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 493, 0, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 494, 495, 0, 496, 247, 497, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 498,
	499, 500, 0, 254, 255, 501, 0, 0, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 502, 503, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 0, 0, 285,
	286, 287, 0, 288, 289, 0, 290, 291, 0, 292,
	293, 504, 294, 295, 297, 299, 296, 300, 301, 302,
	303, 505, 506, 0, 229, 0, 0, 0, 0, 0,
	304, 305, 306, 507, 0, 0, 0, 307, 0, 308,
	0, 0, 0, 309, 310, 508, 509, 311, 312, 0,
	313, 510, 0, 511, 314, 0, 315, 316, 317, 318,
	319, 2453, 513, 514, 372, 0, 320, 321, 0, 322,
	323, 324, 325, 0, 0, 0, 230, 326, 327, 329,
	0, 0, 328, 515, 516, 0, 517, 0, 330, 0,
	518, 0, 331, 332, 333, 0, 334, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 341, 340, 0, 342,
	519, 0, 343, 344, 0, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 351, 0, 352, 353, 355, 357,
	354, 356, 361, 358, 359, 360, 363, 0, 362, 0,
	364, 365, 368, 369, 367, 0, 366, 0, 231, 0,
	370, 0, 520, 371, 521, 373, 374, 0, 0, 375,
	0, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	522, 0, 382, 0, 523, 383, 384, 376, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 393, 524, 525,
	526, 394, 527, 395, 396, 0, 397, 0, 398, 399,
	400, 401, 402, 403, 404, 528, 405, 406, 0, 0,
	0, 0, 0, 0, 407, 0, 409, 410, 411, 408,
	412, 413, 414, 415, 0, 416, 417, 0, 418, 419,
	420, 421, 529, 422, 0, 423, 427, 428, 429, 430,
	431, 432, 433, 0, 435, 436, 434, 437, 438, 439,
	0, 440, 424, 425, 441, 442, 0, 443, 444, 530,
	0, 445, 0, 446, 447, 448, 449, 426, 450, 455,
	531, 451, 452, 453, 454, 532, 0, 457, 458, 0,
	456, 0, 459, 460, 461, 462, 463, 298, 464, 0,
	465, 533, 534, 535, 536, 0, 472, 0, 466, 467,
	537, 468, 538, 0, 469, 470, 471, 0, 473, 474,
	0, 0, 475, 476, 477, 479, 480, 478, 481, 0,
	482, 0, 0, 483, 484, 485, 539, 540, 541, 0,
	487, 486, 542, 1939, 0, 226, 0, 488, 489, 543,
	490, 491, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 233, 234, 235, 236, 237, 0, 238,
	239, 0, 0, 0, 0, 0, 493, 0, 0, 0,
	0, 240, 241, 243, 242, 244, 245, 246, 494, 495,
	0, 496, 247, 497, 0, 248, 249, 250, 251, 252,
	0, 0, 0, 253, 498, 499, 500, 0, 254, 255,
	501, 0, 0, 0, 256, 257, 258, 259, 260, 261,
	262, 0, 0, 264, 265, 266, 263, 0, 267, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 0, 0, 274, 275, 276, 277, 0,
	278, 502, 503, 0, 282, 279, 280, 0, 283, 281,
	0, 284, 0, 0, 285, 286, 287, 0, 288, 289,
	0, 290, 291, 0, 292, 293, 504, 294, 295, 297,
	299, 296, 300, 301, 302, 303, 505, 506, 0, 229,
	0, 0, 0, 0, 0, 304, 305, 306, 507, 0,
	0, 0, 307, 0, 308, 0, 0, 0, 309, 310,
	508, 509, 311, 312, 0, 313, 510, 0, 511, 314,
	0, 315, 316, 317, 318, 319, 512, 513, 514, 372,
	0, 320, 321, 0, 322, 323, 324, 325, 0, 0,
	0, 230, 326, 327, 329, 0, 0, 328, 515, 516,
	0, 517, 0, 330, 0, 518, 0, 331, 332, 333,
	0, 334, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 341, 340, 0, 342, 519, 0, 343, 344, 0,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 351,
	0, 352, 353, 355, 357, 354, 356, 361, 358, 359,
	360, 363, 0, 362, 0, 364, 365, 368, 369, 367,
	0, 366, 0, 231, 0, 370, 0, 520, 371, 521,
	373, 374, 0, 0, 375, 0, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 522, 0, 382, 0, 523,
	383, 384, 376, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 393, 524, 525, 526, 394, 527, 395, 396,
	0, 397, 0, 398, 399, 400, 401, 402, 403, 404,
	528, 405, 406, 0, 0, 0, 0, 0, 0, 407,
	0, 409, 410, 411, 408, 412, 413, 414, 415, 0,
	416, 417, 0, 418, 419, 420, 421, 529, 422, 0,
	423, 427, 428, 429, 430, 431, 432, 433, 0, 435,
	436, 434, 437, 438, 439, 0, 440, 424, 425, 441,
	442, 0, 443, 444, 530, 0, 445, 0, 446, 447,
	448, 449, 426, 450, 455, 531, 451, 452, 453, 454,
	532, 0, 457, 458, 0, 456, 0, 459, 460, 461,
	462, 463, 298, 464, 0, 465, 533, 534, 535, 536,
	0, 472, 0, 466, 467, 537, 468, 538, 0, 469,
	470, 471, 0, 473, 474, 0, 0, 475, 476, 477,
	479, 480, 478, 481, 0, 482, 0, 0, 483, 484,
	485, 539, 540, 541, 226, 487, 486, 542, 0, 0,
	0, 0, 488, 489, 543, 490, 491, 492, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 493, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 494, 495, 0,
	496, 247, 497, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 498, 499, 500, 0, 254, 255, 501,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	502, 503, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 0, 0, 285, 286, 287, 0, 288, 289, 0,
	290, 291, 0, 292, 293, 504, 294, 295, 297, 299,
	296, 300, 301, 302, 303, 505, 506, 0, 229, 0,
	0, 0, 0, 0, 304, 305, 306, 507, 0, 0,
	0, 307, 0, 308, 0, 0, 0, 309, 310, 508,
	509, 311, 312, 0, 313, 510, 0, 511, 314, 0,
	315, 316, 317, 318, 319, 512, 513, 514, 372, 0,
	320, 321, 0, 322, 323, 324, 325, 0, 0, 0,
	230, 326, 327, 329, 0, 0, 328, 515, 516, 0,
	517, 0, 330, 0, 518, 0, 331, 332, 333, 0,
	334, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	341, 340, 0, 342, 519, 0, 343, 344, 0, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 351, 0,
	352, 353, 355, 357, 354, 356, 361, 358, 359, 360,
	363, 0, 362, 0, 364, 365, 368, 369, 367, 0,
	366, 0, 231, 0, 370, 0, 520, 371, 521, 373,
	374, 0, 0, 375, 0, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 522, 0, 382, 0, 523, 383,
	384, 376, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 393, 524, 525, 526, 394, 527, 395, 396, 0,
	397, 0, 398, 399, 400, 401, 402, 403, 404, 528,
	405, 406, 0, 0, 0, 0, 0, 0, 407, 0,
	409, 410, 411, 408, 412, 413, 414, 415, 0, 416,
	417, 0, 418, 419, 420, 421, 529, 422, 0, 423,
	427, 428, 429, 430, 431, 432, 433, 0, 435, 436,
	434, 437, 438, 439, 0, 440, 424, 425, 441, 442,
	0, 443, 444, 530, 0, 445, 0, 446, 447, 448,
	449, 426, 450, 455, 531, 451, 452, 453, 454, 532,
	0, 457, 458, 0, 456, 1865, 459, 460, 461, 462,
	463, 298, 464, 0, 465, 533, 534, 535, 536, 0,
	472, 0, 466, 467, 537, 468, 538, 0, 469, 470,
	471, 0, 473, 474, 0, 0, 475, 476, 477, 479,
	480, 478, 481, 0, 482, 0, 0, 483, 484, 485,
	539, 540, 541, 0, 487, 486, 542, 1870, 0, 226,
	0, 488, 489, 543, 490, 491, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 233, 234, 235,
	236, 237, 0, 238, 239, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 240, 241, 243, 242, 244,
	245, 246, 494, 495, 0, 496, 247, 497, 0, 248,
	249, 250, 251, 252, 0, 0, 0, 253, 498, 499,
	500, 0, 254, 255, 501, 0, 0, 0, 256, 257,
	258, 259, 260, 261, 262, 0, 0, 264, 265, 266,
	263, 0, 267, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 0, 0, 274,
	275, 276, 277, 0, 278, 502, 503, 0, 282, 279,
	280, 0, 283, 281, 0, 284, 0, 0, 285, 286,
	287, 0, 288, 289, 0, 290, 291, 0, 292, 293,
	504, 294, 295, 297, 299, 296, 300, 301, 302, 303,
	505, 506, 0, 229, 0, 0, 0, 0, 0, 304,
	305, 306, 507, 0, 0, 0, 307, 0, 308, 0,
	0, 0, 309, 310, 508, 509, 311, 312, 0, 313,
	510, 0, 511, 314, 0, 315, 316, 317, 318, 319,
	1869, 513, 514, 372, 0, 320, 321, 0, 322, 323,
	324, 325, 0, 0, 0, 230, 326, 327, 329, 0,
	0, 328, 515, 516, 0, 517, 0, 330, 0, 518,
	0, 331, 332, 333, 0, 334, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 341, 340, 0, 342, 519,
	0, 343, 344, 0, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 351, 0, 352, 353, 355, 357, 354,
	356, 361, 358, 359, 360, 363, 0, 362, 0, 364,
	365, 368, 369, 367, 0, 366, 0, 231, 0, 370,
	0, 520, 371, 521, 373, 374, 0, 0, 375, 0,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 522,
	0, 382, 0, 523, 383, 384, 376, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 393, 524, 525, 526,
	394, 527, 395, 396, 0, 397, 0, 398, 399, 400,
	401, 402, 403, 404, 528, 405, 406, 0, 0, 0,
	0, 0, 0, 407, 0, 409, 410, 411, 408, 412,
	413, 414, 415, 0, 416, 417, 0, 418, 419, 420,
	421, 529, 422, 0, 423, 427, 428, 429, 430, 431,
	432, 433, 0, 435, 436, 434, 437, 438, 439, 0,
	440, 424, 425, 441, 442, 0, 443, 444, 530, 0,
	445, 0, 446, 447, 448, 449, 426, 450, 455, 531,
	451, 452, 453, 454, 532, 0, 457, 458, 0, 456,
	0, 459, 460, 461, 462, 463, 298, 464, 0, 465,
	533, 534, 535, 536, 0, 472, 0, 466, 467, 537,
	468, 538, 0, 469, 470, 471, 0, 473, 474, 0,
	0, 475, 476, 477, 479, 480, 478, 481, 0, 482,
	0, 0, 483, 484, 485, 539, 540, 541, 0, 487,
	486, 542, 1858, 0, 226, 0, 488, 489, 543, 490,
	491, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 493, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 494, 495, 0,
	496, 247, 497, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 498, 499, 500, 0, 254, 255, 501,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	502, 503, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 0, 0, 285, 286, 287, 0, 288, 289, 0,
	290, 291, 0, 292, 293, 504, 294, 295, 297, 299,
	296, 300, 301, 302, 303, 505, 506, 0, 229, 0,
	0, 0, 0, 0, 304, 305, 306, 507, 0, 0,
	0, 307, 0, 308, 0, 0, 0, 309, 310, 508,
	509, 311, 312, 0, 313, 510, 0, 511, 314, 0,
	315, 316, 317, 318, 319, 1860, 513, 514, 372, 0,
	320, 321, 0, 322, 323, 324, 325, 0, 0, 0,
	230, 326, 327, 329, 0, 0, 328, 515, 516, 0,
	517, 0, 330, 0, 518, 0, 331, 332, 333, 0,
	334, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	341, 340, 0, 342, 519, 0, 343, 344, 0, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 351, 0,
	352, 353, 355, 357, 354, 356, 361, 358, 359, 360,
	363, 0, 362, 0, 364, 365, 368, 369, 367, 0,
	366, 0, 231, 0, 370, 0, 520, 371, 521, 373,
	374, 0, 0, 375, 0, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 522, 0, 382, 0, 523, 383,
	384, 376, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 393, 524, 525, 526, 394, 527, 395, 396, 0,
	397, 0, 398, 399, 400, 401, 402, 403, 404, 528,
	405, 406, 0, 0, 0, 0, 0, 0, 407, 0,
	409, 410, 411, 408, 412, 413, 414, 415, 0, 416,
	417, 0, 418, 419, 420, 421, 529, 422, 0, 423,
	427, 428, 429, 430, 431, 432, 433, 0, 435, 436,
	434, 437, 438, 439, 0, 440, 424, 425, 441, 442,
	0, 443, 444, 530, 0, 445, 0, 446, 447, 448,
	449, 426, 450, 455, 531, 451, 452, 453, 454, 532,
	0, 457, 458, 0, 456, 0, 459, 460, 461, 462,
	463, 298, 464, 0, 465, 533, 534, 535, 536, 0,
	472, 0, 466, 467, 537, 468, 538, 0, 469, 470,
	471, 0, 473, 474, 0, 0, 475, 476, 477, 479,
	480, 478, 481, 0, 482, 0, 0, 483, 484, 485,
	539, 540, 541, 0, 487, 486, 542, 1345, 0, 226,
	0, 488, 489, 543, 490, 491, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 233, 234, 235,
	236, 237, 0, 238, 239, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 240, 241, 243, 242, 244,
	245, 246, 494, 495, 0, 496, 247, 497, 0, 248,
	249, 250, 251, 252, 0, 0, 0, 253, 498, 499,
	500, 0, 254, 255, 501, 0, 0, 0, 256, 257,
	258, 259, 260, 261, 262, 0, 0, 264, 265, 266,
	263, 0, 267, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 0, 0, 274,
	275, 276, 277, 0, 278, 502, 503, 0, 282, 279,
	280, 0, 283, 281, 0, 284, 0, 0, 285, 286,
	287, 0, 288, 289, 0, 290, 291, 0, 292, 293,
	504, 294, 295, 297, 299, 296, 300, 301, 302, 303,
	505, 506, 0, 229, 0, 0, 0, 0, 0, 304,
	305, 306, 507, 0, 0, 0, 307, 0, 308, 0,
	0, 0, 309, 310, 508, 509, 311, 312, 0, 313,
	510, 0, 511, 314, 0, 315, 316, 317, 318, 319,
	1344, 513, 514, 372, 0, 320, 321, 0, 322, 323,
	324, 325, 0, 0, 0, 230, 326, 327, 329, 0,
	0, 328, 515, 516, 0, 517, 0, 330, 0, 518,
	0, 331, 332, 333, 0, 334, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 341, 340, 0, 342, 519,
	0, 343, 344, 0, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 351, 0, 352, 353, 355, 357, 354,
	356, 361, 358, 359, 360, 363, 0, 362, 0, 364,
	365, 368, 369, 367, 0, 366, 0, 231, 0, 370,
	0, 520, 371, 521, 373, 374, 0, 0, 375, 0,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 522,
	0, 382, 0, 523, 383, 384, 376, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 393, 524, 525, 526,
	394, 527, 395, 396, 0, 397, 0, 398, 399, 400,
	401, 402, 403, 404, 528, 405, 406, 0, 0, 0,
	0, 0, 0, 407, 0, 409, 410, 411, 408, 412,
	413, 414, 415, 0, 416, 417, 0, 418, 419, 420,
	421, 529, 422, 0, 423, 427, 428, 429, 430, 431,
	432, 433, 0, 435, 436, 434, 437, 438, 439, 0,
	440, 424, 425, 441, 442, 0, 443, 444, 530, 0,
	445, 0, 446, 447, 448, 449, 426, 450, 455, 531,
	451, 452, 453, 454, 532, 0, 457, 458, 0, 456,
	0, 459, 460, 461, 462, 463, 298, 464, 0, 465,
	533, 534, 535, 536, 0, 472, 0, 466, 467, 537,
	468, 538, 0, 469, 470, 471, 0, 473, 474, 0,
	0, 475, 476, 477, 479, 480, 478, 481, 0, 482,
	0, 0, 483, 484, 485, 539, 540, 541, 0, 487,
	486, 542, 1336, 0, 226, 0, 488, 489, 543, 490,
	491, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 493, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 494, 495, 0,
	496, 247, 497, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 498, 499, 500, 0, 254, 255, 501,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	502, 503, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 0, 0, 285, 286, 287, 0, 288, 289, 0,
	290, 291, 0, 292, 293, 504, 294, 295, 297, 299,
	296, 300, 301, 302, 303, 505, 506, 0, 229, 0,
	0, 0, 0, 0, 304, 305, 306, 507, 0, 0,
	0, 307, 0, 308, 0, 0, 0, 309, 310, 508,
	509, 311, 312, 0, 313, 510, 0, 511, 314, 0,
	315, 316, 317, 318, 319, 1335, 513, 514, 372, 0,
	320, 321, 0, 322, 323, 324, 325, 0, 0, 0,
	230, 326, 327, 329, 0, 0, 328, 515, 516, 0,
	517, 0, 330, 0, 518, 0, 331, 332, 333, 0,
	334, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	341, 340, 0, 342, 519, 0, 343, 344, 0, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 351, 0,
	352, 353, 355, 357, 354, 356, 361, 358, 359, 360,
	363, 0, 362, 0, 364, 365, 368, 369, 367, 0,
	366, 0, 231, 0, 370, 0, 520, 371, 521, 373,
	374, 0, 0, 375, 0, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 522, 0, 382, 0, 523, 383,
	384, 376, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 393, 524, 525, 526, 394, 527, 395, 396, 0,
	397, 0, 398, 399, 400, 401, 402, 403, 404, 528,
	405, 406, 0, 0, 0, 0, 0, 0, 407, 0,
	409, 410, 411, 408, 412, 413, 414, 415, 0, 416,
	417, 0, 418, 419, 420, 421, 529, 422, 0, 423,
	427, 428, 429, 430, 431, 432, 433, 0, 435, 436,
	434, 437, 438, 439, 0, 440, 424, 425, 441, 442,
	0, 443, 444, 530, 0, 445, 0, 446, 447, 448,
	449, 426, 450, 455, 531, 451, 452, 453, 454, 532,
	0, 457, 458, 0, 456, 0, 459, 460, 461, 462,
	463, 298, 464, 0, 465, 533, 534, 535, 536, 0,
	472, 0, 466, 467, 537, 468, 538, 0, 469, 470,
	471, 0, 473, 474, 0, 0, 475, 476, 477, 479,
	480, 478, 481, 0, 482, 0, 0, 483, 484, 485,
	539, 540, 541, 0, 487, 486, 542, 1333, 0, 226,
	0, 488, 489, 543, 490, 491, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 233, 234, 235,
	236, 237, 0, 238, 239, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 240, 241, 243, 242, 244,
	245, 246, 494, 495, 0, 496, 247, 497, 0, 248,
	249, 250, 251, 252, 0, 0, 0, 253, 498, 499,
	500, 0, 254, 255, 501, 0, 0, 0, 256, 257,
	258, 259, 260, 261, 262, 0, 0, 264, 265, 266,
	263, 0, 267, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 0, 0, 274,
	275, 276, 277, 0, 278, 502, 503, 0, 282, 279,
	280, 0, 283, 281, 0, 284, 0, 0, 285, 286,
	287, 0, 288, 289, 0, 290, 291, 0, 292, 293,
	504, 294, 295, 297, 299, 296, 300, 301, 302, 303,
	505, 506, 0, 229, 0, 0, 0, 0, 0, 304,
	305, 306, 507, 0, 0, 0, 307, 0, 308, 0,
	0, 0, 309, 310, 508, 509, 311, 312, 0, 313,
	510, 0, 511, 314, 0, 315, 316, 317, 318, 319,
	1332, 513, 514, 372, 0, 320, 321, 0, 322, 323,
	324, 325, 0, 0, 0, 230, 326, 327, 329, 0,
	0, 328, 515, 516, 0, 517, 0, 330, 0, 518,
	0, 331, 332, 333, 0, 334, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 341, 340, 0, 342, 519,
	0, 343, 344, 0, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 351, 0, 352, 353, 355, 357, 354,
	356, 361, 358, 359, 360, 363, 0, 362, 0, 364,
	365, 368, 369, 367, 0, 366, 0, 231, 0, 370,
	0, 520, 371, 521, 373, 374, 0, 0, 375, 0,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 522,
	0, 382, 0, 523, 383, 384, 376, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 393, 524, 525, 526,
	394, 527, 395, 396, 0, 397, 0, 398, 399, 400,
	401, 402, 403, 404, 528, 405, 406, 0, 0, 0,
	0, 0, 0, 407, 0, 409, 410, 411, 408, 412,
	413, 414, 415, 0, 416, 417, 0, 418, 419, 420,
	421, 529, 422, 0, 423, 427, 428, 429, 430, 431,
	432, 433, 0, 435, 436, 434, 437, 438, 439, 0,
	440, 424, 425, 441, 442, 0, 443, 444, 530, 0,
	445, 0, 446, 447, 448, 449, 426, 450, 455, 531,
	451, 452, 453, 454, 532, 0, 457, 458, 0, 456,
	0, 459, 460, 461, 462, 463, 298, 464, 0, 465,
	533, 534, 535, 536, 0, 472, 0, 466, 467, 537,
	468, 538, 0, 469, 470, 471, 0, 473, 474, 0,
	0, 475, 476, 477, 479, 480, 478, 481, 0, 482,
	0, 0, 483, 484, 485, 539, 540, 541, 0, 487,
	486, 542, 1329, 0, 226, 0, 488, 489, 543, 490,
	491, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 493, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 494, 495, 0,
	496, 247, 497, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 498, 499, 500, 0, 254, 255, 501,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	502, 503, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 0, 0, 285, 286, 287, 0, 288, 289, 0,
	290, 291, 0, 292, 293, 504, 294, 295, 297, 299,
	296, 300, 301, 302, 303, 505, 506, 0, 229, 0,
	0, 0, 0, 0, 304, 305, 306, 507, 0, 0,
	0, 307, 0, 308, 0, 0, 0, 309, 310, 508,
	509, 311, 312, 0, 313, 510, 0, 511, 314, 0,
	315, 316, 317, 318, 319, 1328, 513, 514, 372, 0,
	320, 321, 0, 322, 323, 324, 325, 0, 0, 0,
	230, 326, 327, 329, 0, 0, 328, 515, 516, 0,
	517, 0, 330, 0, 518, 0, 331, 332, 333, 0,
	334, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	341, 340, 0, 342, 519, 0, 343, 344, 0, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 351, 0,
	352, 353, 355, 357, 354, 356, 361, 358, 359, 360,
	363, 0, 362, 0, 364, 365, 368, 369, 367, 0,
	366, 0, 231, 0, 370, 0, 520, 371, 521, 373,
	374, 0, 0, 375, 0, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 522, 0, 382, 0, 523, 383,
	384, 376, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 393, 524, 525, 526, 394, 527, 395, 396, 0,
	397, 0, 398, 399, 400, 401, 402, 403, 404, 528,
	405, 406, 0, 0, 0, 0, 0, 0, 407, 0,
	409, 410, 411, 408, 412, 413, 414, 415, 0, 416,
	417, 0, 418, 419, 420, 421, 529, 422, 0, 423,
	427, 428, 429, 430, 431, 432, 433, 0, 435, 436,
	434, 437, 438, 439, 0, 440, 424, 425, 441, 442,
	0, 443, 444, 530, 0, 445, 0, 446, 447, 448,
	449, 426, 450, 455, 531, 451, 452, 453, 454, 532,
	0, 457, 458, 0, 456, 0, 459, 460, 461, 462,
	463, 298, 464, 0, 465, 533, 534, 535, 536, 0,
	472, 0, 466, 467, 537, 468, 538, 0, 469, 470,
	471, 0, 473, 474, 0, 0, 475, 476, 477, 479,
	480, 478, 481, 0, 482, 0, 0, 483, 484, 485,
	539, 540, 541, 0, 487, 486, 542, 1285, 0, 226,
	0, 488, 489, 543, 490, 491, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 233, 234, 235,
	236, 237, 0, 238, 239, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 240, 241, 243, 242, 244,
	245, 246, 494, 495, 0, 496, 247, 497, 0, 248,
	249, 250, 251, 252, 0, 0, 0, 253, 498, 499,
	500, 0, 254, 255, 501, 0, 0, 0, 256, 257,
	258, 259, 260, 261, 262, 0, 0, 264, 265, 266,
	263, 0, 267, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 0, 0, 274,
	275, 276, 277, 0, 278, 502, 503, 0, 282, 279,
	280, 0, 283, 281, 0, 284, 0, 0, 285, 286,
	287, 0, 288, 289, 0, 290, 291, 0, 292, 293,
	504, 294, 295, 297, 299, 296, 300, 301, 302, 303,
	505, 506, 0, 229, 0, 0, 0, 0, 0, 304,
	305, 306, 507, 0, 0, 0, 307, 0, 308, 0,
	0, 0, 309, 310, 508, 509, 311, 312, 0, 313,
	510, 0, 511, 314, 0, 315, 316, 317, 318, 319,
	512, 513, 514, 372, 0, 320, 321, 0, 322, 323,
	324, 325, 0, 0, 0, 230, 326, 327, 329, 0,
	0, 328, 515, 516, 0, 517, 0, 330, 0, 518,
	0, 331, 332, 333, 0, 334, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 341, 340, 0, 342, 519,
	0, 343, 344, 0, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 351, 0, 352, 353, 355, 357, 354,
	356, 361, 358, 359, 360, 363, 0, 362, 0, 364,
	365, 368, 369, 367, 0, 366, 0, 231, 0, 370,
	0, 520, 371, 521, 373, 374, 0, 0, 375, 0,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 522,
	0, 382, 0, 523, 383, 384, 376, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 393, 524, 525, 526,
	394, 527, 395, 396, 0, 397, 0, 398, 399, 400,
	401, 402, 403, 404, 528, 405, 406, 0, 0, 0,
	0, 0, 0, 407, 0, 409, 410, 411, 408, 412,
	413, 414, 415, 0, 416, 417, 0, 418, 419, 420,
	421, 529, 422, 0, 423, 427, 428, 429, 430, 431,
	432, 433, 0, 435, 436, 434, 437, 438, 439, 0,
	440, 424, 425, 441, 442, 0, 443, 444, 530, 0,
	445, 0, 446, 447, 448, 449, 426, 450, 455, 531,
	451, 452, 453, 454, 532, 0, 457, 458, 0, 456,
	0, 459, 460, 461, 462, 463, 298, 464, 0, 465,
	533, 534, 535, 536, 0, 472, 0, 466, 467, 537,
	468, 538, 0, 469, 470, 471, 0, 473, 474, 0,
	0, 475, 476, 477, 479, 480, 478, 481, 0, 482,
	0, 0, 483, 484, 485, 539, 540, 541, 0, 487,
	486, 542, 1211, 0, 226, 0, 488, 489, 543, 490,
	491, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 493, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 494, 495, 0,
	496, 247, 497, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 498, 499, 500, 0, 254, 255, 501,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	502, 503, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 0, 0, 285, 286, 287, 0, 288, 289, 0,
	290, 291, 0, 292, 293, 504, 294, 295, 297, 299,
	296, 300, 301, 302, 303, 505, 506, 0, 229, 0,
	0, 0, 0, 0, 304, 305, 306, 507, 0, 0,
	0, 307, 0, 308, 0, 0, 0, 309, 310, 508,
	509, 311, 312, 0, 313, 510, 0, 511, 314, 0,
	315, 316, 317, 318, 319, 512, 513, 514, 372, 0,
	320, 321, 0, 322, 323, 324, 325, 0, 0, 0,
	230, 326, 327, 329, 0, 0, 328, 515, 516, 0,
	517, 0, 330, 0, 518, 0, 331, 332, 333, 0,
	334, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	341, 340, 0, 342, 519, 0, 343, 344, 0, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 351, 0,
	352, 353, 355, 357, 354, 356, 361, 358, 359, 360,
	363, 0, 362, 0, 364, 365, 368, 369, 367, 0,
	366, 0, 231, 0, 370, 0, 520, 371, 521, 373,
	374, 0, 0, 375, 0, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 522, 0, 382, 0, 523, 383,
	384, 376, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 393, 524, 525, 526, 394, 527, 395, 396, 0,
	397, 0, 398, 399, 400, 401, 402, 403, 404, 528,
	405, 406, 0, 0, 0, 0, 0, 0, 407, 0,
	409, 410, 411, 408, 412, 413, 414, 415, 0, 416,
	417, 0, 418, 419, 420, 421, 529, 422, 0, 423,
	427, 428, 429, 430, 431, 432, 433, 0, 435, 436,
	434, 437, 438, 439, 0, 440, 424, 425, 441, 442,
	0, 443, 444, 530, 0, 445, 0, 446, 447, 448,
	449, 426, 450, 455, 531, 451, 452, 453, 454, 532,
	0, 457, 458, 0, 456, 0, 459, 460, 461, 462,
	463, 298, 464, 0, 465, 533, 534, 535, 536, 0,
	472, 0, 466, 467, 537, 468, 538, 0, 469, 470,
	471, 0, 473, 474, 0, 0, 475, 476, 477, 479,
	480, 478, 481, 0, 482, 0, 0, 483, 484, 485,
	539, 540, 541, 0, 487, 486, 542, 1204, 0, 226,
	0, 488, 489, 543, 490, 491, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 233, 234, 235,
	236, 237, 0, 238, 239, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 240, 241, 243, 242, 244,
	245, 246, 494, 495, 0, 496, 247, 497, 0, 248,
	249, 250, 251, 252, 0, 0, 0, 253, 498, 499,
	500, 0, 254, 255, 501, 0, 0, 0, 256, 257,
	258, 259, 260, 261, 262, 0, 0, 264, 265, 266,
	263, 0, 267, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 0, 0, 274,
	275, 276, 277, 0, 278, 502, 503, 0, 282, 279,
	280, 0, 283, 281, 0, 284, 0, 0, 285, 286,
	287, 0, 288, 289, 0, 290, 291, 0, 292, 293,
	504, 294, 295, 297, 299, 296, 300, 301, 302, 303,
	505, 506, 0, 229, 0, 0, 0, 0, 0, 304,
	305, 306, 507, 0, 0, 0, 307, 0, 308, 0,
	0, 0, 309, 310, 508, 509, 311, 312, 0, 313,
	510, 0, 511, 314, 0, 315, 316, 317, 318, 319,
	1206, 513, 514, 372, 0, 320, 321, 0, 322, 323,
	324, 325, 0, 0, 0, 230, 326, 327, 329, 0,
	0, 328, 515, 516, 0, 517, 0, 330, 0, 518,
	0, 331, 332, 333, 0, 334, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 341, 340, 0, 342, 519,
	0, 343, 344, 0, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 351, 0, 352, 353, 355, 357, 354,
	356, 361, 358, 359, 360, 363, 0, 362, 0, 364,
	365, 368, 369, 367, 0, 366, 0, 231, 0, 370,
	0, 520, 371, 521, 373, 374, 0, 0, 375, 0,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 522,
	0, 382, 0, 523, 383, 384, 376, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 393, 524, 525, 526,
	394, 527, 395, 396, 0, 397, 0, 398, 399, 400,
	401, 402, 403, 404, 528, 405, 406, 0, 0, 0,
	0, 0, 0, 407, 0, 409, 410, 411, 408, 412,
	413, 414, 415, 0, 416, 417, 0, 418, 419, 420,
	421, 529, 422, 0, 423, 427, 428, 429, 430, 431,
	432, 433, 0, 435, 436, 434, 437, 438, 439, 0,
	440, 424, 425, 441, 442, 0, 443, 444, 530, 0,
	445, 0, 446, 447, 448, 449, 426, 450, 455, 531,
	451, 452, 453, 454, 532, 0, 457, 458, 0, 456,
	0, 459, 460, 461, 462, 463, 298, 464, 0, 465,
	533, 534, 535, 536, 0, 472, 0, 466, 467, 537,
	468, 538, 0, 469, 470, 471, 0, 473, 474, 0,
	0, 475, 476, 477, 479, 480, 478, 481, 0, 482,
	0, 0, 483, 484, 485, 539, 540, 541, 0, 487,
	486, 542, 545, 0, 226, 0, 488, 489, 543, 490,
	491, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 493, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 494, 495, 0,
	496, 247, 497, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 498, 499, 500, 0, 254, 255, 501,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	502, 503, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 0, 0, 285, 286, 287, 0, 288, 289, 0,
	290, 291, 0, 292, 293, 504, 294, 295, 297, 299,
	296, 300, 301, 302, 303, 505, 506, 0, 229, 0,
	0, 0, 0, 0, 304, 305, 306, 507, 0, 0,
	0, 307, 0, 308, 0, 0, 0, 309, 310, 508,
	509, 311, 312, 0, 313, 510, 0, 511, 314, 0,
	315, 316, 317, 318, 319, 512, 513, 514, 372, 0,
	320, 321, 0, 322, 323, 324, 325, 0, 0, 0,
	230, 326, 327, 329, 0, 0, 328, 515, 516, 0,
	517, 0, 330, 0, 518, 0, 331, 332, 333, 0,
	334, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	341, 340, 0, 342, 519, 0, 343, 344, 0, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 351, 0,
	352, 353, 355, 357, 354, 356, 361, 358, 359, 360,
	363, 0, 362, 0, 364, 365, 368, 369, 367, 0,
	366, 0, 231, 0, 370, 0, 520, 371, 521, 373,
	374, 0, 0, 375, 0, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 522, 0, 382, 0, 523, 383,
	384, 376, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 393, 524, 525, 526, 394, 527, 395, 396, 0,
	397, 0, 398, 399, 400, 401, 402, 403, 404, 528,
	405, 406, 0, 0, 0, 0, 0, 0, 407, 0,
	409, 410, 411, 408, 412, 413, 414, 415, 0, 416,
	417, 0, 418, 419, 420, 421, 529, 422, 0, 423,
	427, 428, 429, 430, 431, 432, 433, 0, 435, 436,
	434, 437, 438, 439, 0, 440, 424, 425, 441, 442,
	0, 443, 444, 530, 0, 445, 0, 446, 447, 448,
	449, 426, 450, 455, 531, 451, 452, 453, 454, 532,
	0, 457, 458, 0, 456, 0, 459, 460, 461, 462,
	463, 298, 464, 0, 465, 533, 534, 535, 536, 0,
	472, 0, 466, 467, 537, 468, 538, 0, 469, 470,
	471, 0, 473, 474, 0, 0, 475, 476, 477, 479,
	480, 478, 481, 0, 482, 0, 0, 483, 484, 485,
	539, 540, 541, 0, 487, 486, 542, 217, 0, 226,
	0, 488, 489, 543, 490, 491, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 233, 234, 235,
	236, 237, 0, 238, 239, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 240, 241, 243, 242, 244,
	245, 246, 494, 495, 0, 496, 247, 497, 0, 248,
	249, 250, 251, 252, 0, 0, 0, 253, 498, 499,
	500, 0, 254, 255, 501, 0, 0, 0, 256, 257,
	258, 259, 260, 261, 262, 0, 0, 264, 265, 266,
	263, 0, 267, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 0, 0, 274,
	275, 276, 277, 0, 278, 502, 503, 0, 282, 279,
	280, 0, 283, 281, 0, 284, 0, 0, 285, 286,
	287, 0, 288, 289, 0, 290, 291, 0, 292, 293,
	504, 294, 295, 297, 299, 296, 300, 301, 302, 303,
	505, 506, 0, 229, 0, 0, 0, 0, 0, 304,
	305, 306, 507, 0, 0, 0, 307, 0, 308, 0,
	0, 0, 309, 310, 508, 509, 311, 312, 0, 313,
	510, 0, 511, 314, 0, 315, 316, 317, 318, 319,
	512, 513, 514, 372, 0, 320, 321, 0, 322, 323,
	324, 325, 0, 0, 0, 230, 326, 327, 329, 0,
	0, 328, 515, 516, 0, 517, 0, 330, 0, 518,
	0, 331, 332, 333, 0, 334, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 341, 340, 0, 342, 519,
	0, 343, 344, 0, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 351, 0, 352, 353, 355, 357, 354,
	356, 361, 358, 359, 360, 363, 0, 362, 0, 364,
	365, 368, 369, 367, 0, 366, 0, 231, 0, 370,
	0, 520, 371, 521, 373, 374, 0, 0, 375, 0,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 522,
	0, 382, 0, 523, 383, 384, 376, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 393, 524, 525, 526,
	394, 527, 395, 396, 0, 397, 0, 398, 399, 400,
	401, 402, 403, 404, 528, 405, 406, 0, 0, 0,
	0, 0, 0, 407, 0, 409, 410, 411, 408, 412,
	413, 414, 415, 0, 416, 417, 0, 418, 419, 420,
	421, 529, 422, 0, 423, 427, 428, 429, 430, 431,
	432, 433, 0, 435, 436, 434, 437, 438, 439, 0,
	440, 424, 425, 441, 442, 0, 443, 444, 530, 0,
	445, 0, 446, 447, 448, 449, 426, 450, 455, 531,
	451, 452, 453, 454, 532, 0, 457, 458, 0, 456,
	0, 459, 460, 461, 462, 463, 298, 464, 0, 465,
	533, 534, 535, 536, 0, 472, 0, 466, 467, 537,
	468, 538, 0, 469, 470, 471, 0, 473, 474, 0,
	0, 475, 476, 477, 479, 480, 478, 481, 0, 482,
	0, 0, 483, 484, 485, 539, 540, 541, 226, 487,
	486, 542, 0, 0, 0, 0, 488, 489, 543, 490,
	491, 492, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 493,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 495, 0, 496, 247, 497, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 498, 499, 500,
	0, 254, 255, 501, 0, 0, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 502, 503, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 286, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 504,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 505,
	506, 0, 229, 0, 0, 0, 0, 0, 304, 305,
	306, 507, 0, 0, 0, 307, 0, 308, 0, 0,
	0, 309, 310, 508, 509, 311, 312, 0, 313, 510,
	0, 511, 314, 0, 315, 316, 317, 318, 319, 512,
	513, 514, 372, 0, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 230, 326, 327, 329, 0, 0,
	328, 515, 516, 0, 517, 0, 330, 0, 518, 0,
	331, 332, 333, 0, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 519, 0,
	343, 344, 0, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 0, 364, 365,
	368, 369, 367, 0, 366, 0, 231, 0, 370, 0,
	520, 371, 521, 373, 374, 0, 0, 375, 0, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 0,
	382, 0, 523, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 526, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 528, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 0, 418, 419, 420, 421,
	529, 422, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 0, 435, 436, 434, 437, 438, 439, 0, 440,
	424, 425, 441, 442, 0, 443, 444, 530, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 531, 451,
	452, 453, 454, 532, 0, 457, 458, 0, 456, 0,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 533,
	534, 535, 536, 0, 472, 0, 466, 467, 537, 468,
	538, 0, 469, 470, 471, 0, 473, 474, 0, 0,
	475, 476, 477, 479, 480, 478, 481, 0, 482, 0,
	0, 483, 484, 485, 539, 540, 541, 226, 487, 486,
	542, 0, 0, 0, 0, 488, 489, 543, 490, 491,
	492, 0, 0, 0, 232, 233, 234, 235, 236, 237,
	0, 238, 239, 0, 0, 0, 0, 0, 493, 0,
	0, 0, 0, 240, 241, 243, 242, 244, 245, 246,
	494, 495, 0, 496, 247, 497, 0, 248, 249, 250,
	251, 252, 0, 0, 0, 253, 498, 499, 500, 0,
	254, 255, 501, 0, 0, 0, 256, 257, 258, 259,
	260, 261, 262, 0, 0, 264, 265, 266, 263, 0,
	267, 0, 268, 269, 270, 567, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 0, 0, 274, 275, 276,
	277, 0, 278, 502, 503, 0, 282, 279, 280, 0,
	283, 281, 0, 284, 0, 0, 285, 286, 287, 0,
	288, 289, 0, 290, 291, 0, 292, 293, 504, 294,
	295, 297, 299, 296, 300, 301, 302, 303, 505, 506,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 306,
	507, 0, 0, 0, 307, 0, 308, 0, 0, 0,
	309, 310, 508, 509, 311, 312, 568, 313, 510, 0,
	511, 314, 0, 315, 316, 317, 318, 319, 512, 513,
	514, 372, 0, 320, 321, 0, 322, 323, 324, 325,
	0, 0, 0, 0, 326, 327, 329, 0, 0, 328,
	515, 516, 0, 517, 0, 330, 0, 518, 0, 331,
	332, 333, 0, 334, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 341, 340, 0, 342, 519, 0, 343,
	344, 0, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 351, 0, 352, 353, 355, 357, 354, 356, 361,
	358, 359, 360, 363, 0, 362, 0, 364, 365, 368,
	369, 367, 0, 366, 0, 0, 0, 370, 0, 520,
	371, 521, 373, 374, 0, 0, 375, 0, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 522, 0, 382,
	0, 523, 383, 384, 376, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 393, 524, 525, 526, 394, 527,
	395, 396, 0, 397, 0, 398, 399, 400, 401, 402,
	403, 404, 528, 405, 406, 0, 0, 0, 0, 0,
	0, 407, 0, 409, 410, 411, 408, 412, 413, 414,
	415, 0, 416, 417, 0, 418, 419, 420, 421, 529,
	422, 0, 423, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 436, 434, 437, 438, 439, 0, 440, 424,
	425, 441, 442, 0, 443, 444, 530, 0, 445, 0,
	446, 447, 448, 449, 426, 450, 455, 531, 451, 452,
	453, 454, 532, 0, 457, 458, 0, 456, 0, 459,
	460, 461, 462, 463, 298, 464, 0, 465, 533, 534,
	535, 536, 0, 472, 0, 466, 467, 537, 468, 538,
	0, 469, 470, 471, 0, 473, 474, 0, 0, 475,
	476, 477, 479, 480, 478, 481, 0, 482, 0, 0,
	483, 484, 485, 539, 540, 541, 226, 487, 486, 542,
	0, 0, 0, 0, 488, 489, 543, 490, 491, 492,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 493, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 494,
	495, 0, 496, 247, 497, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 498, 499, 500, 0, 254,
	255, 501, 0, 0, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 1970, 277,
	0, 278, 502, 503, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 0, 0, 285, 286, 287, 0, 288,
	289, 0, 290, 291, 0, 292, 293, 504, 294, 295,
	297, 299, 296, 300, 301, 302, 303, 505, 506, 0,
	229, 0, 0, 0, 0, 0, 304, 305, 306, 507,
	0, 0, 0, 307, 0, 308, 0, 0, 0, 309,
	310, 508, 509, 311, 312, 0, 313, 510, 0, 511,
	314, 0, 315, 316, 317, 318, 319, 512, 513, 514,
	372, 0, 320, 321, 0, 322, 323, 324, 325, 0,
	0, 0, 230, 326, 327, 329, 0, 0, 328, 515,
	516, 0, 517, 0, 330, 0, 518, 0, 331, 332,
	333, 0, 334, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 341, 340, 0, 342, 519, 0, 343, 344,
	0, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	351, 0, 352, 353, 355, 357, 354, 356, 361, 358,
	359, 360, 363, 0, 362, 0, 364, 365, 368, 369,
	367, 0, 366, 0, 231, 0, 370, 0, 520, 371,
	521, 373, 374, 0, 0, 375, 0, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 522, 0, 382, 0,
	523, 383, 384, 376, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 393, 524, 525, 526, 394, 527, 395,
	396, 0, 397, 0, 398, 399, 400, 401, 402, 403,
	404, 528, 405, 406, 0, 0, 0, 0, 0, 0,
	407, 0, 409, 410, 411, 408, 412, 413, 414, 415,
	0, 416, 417, 0, 418, 419, 420, 421, 529, 422,
	0, 423, 427, 428, 429, 430, 431, 432, 433, 0,
	435, 436, 434, 437, 438, 439, 0, 440, 424, 425,
	441, 442, 0, 443, 444, 530, 0, 445, 0, 446,
	447, 448, 449, 426, 450, 455, 531, 451, 452, 453,
	454, 532, 0, 457, 458, 0, 456, 0, 459, 460,
	461, 462, 463, 298, 464, 0, 465, 533, 534, 535,
	536, 0, 472, 0, 466, 467, 537, 468, 538, 0,
	469, 470, 471, 0, 473, 474, 0, 0, 475, 476,
	477, 479, 480, 478, 481, 0, 482, 0, 0, 483,
	484, 485, 539, 540, 541, 226, 487, 486, 542, 0,
	0, 0, 0, 488, 489, 543, 490, 491, 492, 0,
	0, 0, 232, 233, 234, 235, 236, 237, 0, 238,
	239, 0, 0, 0, 0, 0, 493, 0, 0, 0,
	0, 240, 241, 243, 242, 244, 245, 246, 494, 495,
	0, 496, 247, 497, 0, 248, 249, 250, 251, 252,
	0, 0, 0, 253, 498, 499, 500, 0, 254, 255,
	501, 0, 0, 0, 256, 257, 258, 259, 260, 261,
	262, 0, 0, 264, 265, 266, 263, 0, 267, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 0, 0, 274, 275, 1968, 277, 0,
	278, 502, 503, 0, 282, 279, 280, 0, 283, 281,
	0, 284, 0, 0, 285, 286, 287, 0, 288, 289,
	0, 290, 291, 0, 292, 293, 504, 294, 295, 297,
	299, 296, 300, 301, 302, 303, 505, 506, 0, 229,
	0, 0, 0, 0, 0, 304, 305, 306, 507, 0,
	0, 0, 307, 0, 308, 0, 0, 0, 309, 310,
	508, 509, 311, 312, 0, 313, 510, 0, 511, 314,
	0, 315, 316, 317, 318, 319, 512, 513, 514, 372,
	0, 320, 321, 0, 322, 323, 324, 325, 0, 0,
	0, 230, 326, 327, 329, 0, 0, 328, 515, 516,
	0, 517, 0, 330, 0, 518, 0, 331, 332, 333,
	0, 334, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 341, 340, 0, 342, 519, 0, 343, 344, 0,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 351,
	0, 352, 353, 355, 357, 354, 356, 361, 358, 359,
	360, 363, 0, 362, 0, 364, 365, 368, 369, 367,
	0, 366, 0, 231, 0, 370, 0, 520, 371, 521,
	373, 374, 0, 0, 375, 0, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 522, 0, 382, 0, 523,
	383, 384, 376, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 393, 524, 525, 526, 394, 527, 395, 396,
	0, 397, 0, 398, 399, 400, 401, 402, 403, 404,
	528, 405, 406, 0, 0, 0, 0, 0, 0, 407,
	0, 409, 410, 411, 408, 412, 413, 414, 415, 0,
	416, 417, 0, 418, 419, 420, 421, 529, 422, 0,
	423, 427, 428, 429, 430, 431, 432, 433, 0, 435,
	436, 434, 437, 438, 439, 0, 440, 424, 425, 441,
	442, 0, 443, 444, 530, 0, 445, 0, 446, 447,
	448, 449, 426, 450, 455, 531, 451, 452, 453, 454,
	532, 0, 457, 458, 0, 456, 0, 459, 460, 461,
	462, 463, 298, 464, 0, 465, 533, 534, 535, 536,
	0, 472, 0, 466, 467, 537, 468, 538, 0, 469,
	470, 471, 0, 473, 474, 0, 0, 475, 476, 477,
	479, 480, 478, 481, 0, 482, 0, 0, 483, 484,
	485, 539, 540, 541, 226, 487, 486, 542, 0, 0,
	0, 0, 488, 489, 543, 490, 491, 492, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 493, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 494, 495, 0,
	496, 247, 497, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 498, 499, 500, 0, 254, 255, 501,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 1966, 277, 0, 278,
	502, 503, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 0, 0, 285, 286, 287, 0, 288, 289, 0,
	290, 291, 0, 292, 293, 504, 294, 295, 297, 299,
	296, 300, 301, 302, 303, 505, 506, 0, 229, 0,
	0, 0, 0, 0, 304, 305, 306, 507, 0, 0,
	0, 307, 0, 308, 0, 0, 0, 309, 310, 508,
	509, 311, 312, 0, 313, 510, 0, 511, 314, 0,
	315, 316, 317, 318, 319, 512, 513, 514, 372, 0,
	320, 321, 0, 322, 323, 324, 325, 0, 0, 0,
	230, 326, 327, 329, 0, 0, 328, 515, 516, 0,
	517, 0, 330, 0, 518, 0, 331, 332, 333, 0,
	334, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	341, 340, 0, 342, 519, 0, 343, 344, 0, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 351, 0,
	352, 353, 355, 357, 354, 356, 361, 358, 359, 360,
	363, 0, 362, 0, 364, 365, 368, 369, 367, 0,
	366, 0, 231, 0, 370, 0, 520, 371, 521, 373,
	374, 0, 0, 375, 0, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 522, 0, 382, 0, 523, 383,
	384, 376, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 393, 524, 525, 526, 394, 527, 395, 396, 0,
	397, 0, 398, 399, 400, 401, 402, 403, 404, 528,
	405, 406, 0, 0, 0, 0, 0, 0, 407, 0,
	409, 410, 411, 408, 412, 413, 414, 415, 0, 416,
	417, 0, 418, 419, 420, 421, 529, 422, 0, 423,
	427, 428, 429, 430, 431, 432, 433, 0, 435, 436,
	434, 437, 438, 439, 0, 440, 424, 425, 441, 442,
	0, 443, 444, 530, 0, 445, 0, 446, 447, 448,
	449, 426, 450, 455, 531, 451, 452, 453, 454, 532,
	0, 457, 458, 0, 456, 0, 459, 460, 461, 462,
	463, 298, 464, 0, 465, 533, 534, 535, 536, 0,
	472, 0, 466, 467, 537, 468, 538, 0, 469, 470,
	471, 0, 473, 474, 0, 0, 475, 476, 477, 479,
	480, 478, 481, 0, 482, 0, 0, 483, 484, 485,
	539, 540, 541, 226, 487, 486, 542, 0, 0, 0,
	0, 488, 489, 543, 490, 491, 492, 0, 0, 0,
	232, 233, 234, 235, 236, 237, 0, 238, 239, 0,
	0, 0, 0, 0, 493, 0, 0, 0, 0, 240,
	241, 243, 242, 244, 245, 246, 494, 495, 0, 496,
	247, 497, 0, 248, 249, 250, 251, 252, 0, 0,
	0, 253, 498, 499, 500, 0, 254, 255, 501, 0,
	0, 0, 256, 257, 258, 259, 260, 261, 262, 0,
	0, 264, 265, 266, 263, 0, 267, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 0, 0, 274, 275, 276, 277, 0, 278, 502,
	503, 0, 282, 279, 280, 0, 283, 281, 0, 284,
	0, 0, 285, 286, 287, 0, 288, 289, 0, 290,
	291, 0, 292, 293, 504, 294, 295, 297, 299, 296,
	300, 301, 302, 303, 505, 506, 0, 229, 0, 0,
	0, 0, 0, 304, 305, 306, 507, 0, 0, 0,
	307, 0, 308, 0, 0, 0, 309, 310, 508, 509,
	311, 312, 0, 313, 510, 0, 511, 314, 0, 315,
	316, 317, 318, 319, 1908, 513, 514, 372, 0, 320,
	321, 0, 322, 323, 324, 325, 0, 0, 0, 230,
	326, 327, 329, 0, 0, 328, 515, 516, 0, 517,
	0, 330, 0, 518, 0, 331, 332, 333, 0, 334,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 341,
	340, 0, 342, 519, 0, 343, 344, 0, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 351, 0, 352,
	353, 355, 357, 354, 356, 361, 358, 359, 360, 363,
	0, 362, 0, 364, 365, 368, 369, 367, 0, 366,
	0, 231, 0, 370, 0, 520, 371, 521, 373, 374,
	0, 0, 375, 0, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 522, 0, 382, 0, 523, 383, 384,
	376, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	393, 524, 525, 526, 394, 527, 395, 396, 0, 397,
	0, 398, 399, 400, 401, 402, 403, 404, 528, 405,
	406, 0, 0, 0, 0, 0, 0, 407, 0, 409,
	410, 411, 408, 412, 413, 414, 415, 0, 416, 417,
	0, 418, 419, 420, 421, 529, 422, 0, 423, 427,
	428, 429, 430, 431, 432, 433, 0, 435, 436, 434,
	437, 438, 439, 0, 440, 424, 425, 441, 442, 0,
	443, 444, 530, 0, 445, 0, 446, 447, 448, 449,
	426, 450, 455, 531, 451, 452, 453, 454, 532, 0,
	457, 458, 0, 456, 0, 459, 460, 461, 462, 463,
	298, 464, 0, 465, 533, 534, 535, 536, 0, 472,
	0, 466, 467, 537, 468, 538, 0, 469, 470, 471,
	0, 473, 474, 0, 0, 475, 476, 477, 479, 480,
	478, 481, 0, 482, 0, 0, 483, 484, 485, 539,
	540, 541, 0, 487, 486, 542, 722, 0, 226, 0,
	488, 489, 543, 490, 491, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 493,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 495, 0, 496, 247, 497, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 498, 499, 500,
	0, 254, 255, 501, 0, 0, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 502, 503, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 286, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 504,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 505,
	506, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	306, 507, 0, 0, 0, 307, 0, 308, 0, 0,
	0, 309, 310, 508, 509, 311, 312, 0, 313, 510,
	0, 511, 314, 0, 315, 316, 317, 318, 319, 512,
	513, 514, 372, 0, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 0, 326, 327, 329, 0, 0,
	328, 515, 516, 0, 517, 721, 330, 0, 518, 0,
	331, 332, 333, 0, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 519, 0,
	343, 344, 0, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 0, 364, 365,
	368, 369, 367, 0, 366, 0, 0, 0, 370, 0,
	520, 371, 521, 373, 374, 0, 0, 375, 0, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 0,
	382, 0, 523, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 526, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 528, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 0, 418, 419, 420, 421,
	529, 422, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 0, 435, 436, 434, 437, 438, 439, 0, 440,
	424, 425, 441, 442, 0, 443, 444, 530, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 531, 451,
	452, 453, 454, 532, 0, 457, 458, 0, 456, 720,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 533,
	534, 535, 536, 0, 472, 0, 466, 467, 537, 468,
	538, 0, 469, 470, 471, 0, 473, 474, 0, 0,
	475, 476, 477, 479, 480, 478, 481, 0, 482, 0,
	0, 483, 484, 485, 539, 540, 541, 226, 487, 486,
	542, 0, 0, 0, 0, 488, 489, 543, 490, 491,
	492, 0, 0, 0, 232, 233, 234, 235, 236, 237,
	0, 238, 239, 0, 0, 0, 0, 0, 493, 0,
	0, 0, 0, 240, 241, 243, 242, 244, 245, 246,
	494, 495, 0, 496, 247, 497, 0, 248, 249, 250,
	251, 252, 0, 0, 0, 253, 498, 499, 500, 0,
	254, 255, 501, 0, 0, 0, 256, 257, 258, 259,
	260, 261, 262, 0, 0, 264, 265, 266, 263, 0,
	267, 0, 268, 269, 270, 0, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 0, 0, 274, 275, 276,
	277, 0, 278, 502, 503, 0, 282, 279, 280, 0,
	283, 281, 0, 284, 0, 0, 285, 286, 287, 0,
	288, 289, 0, 290, 291, 0, 292, 293, 504, 294,
	295, 297, 299, 296, 300, 301, 302, 303, 505, 506,
	0, 2520, 0, 0, 0, 0, 0, 304, 305, 306,
	507, 0, 0, 0, 307, 0, 308, 0, 0, 0,
	309, 310, 508, 509, 311, 312, 0, 313, 510, 0,
	511, 314, 0, 315, 316, 317, 318, 319, 512, 513,
	514, 372, 0, 320, 321, 0, 322, 323, 324, 325,
	0, 0, 0, 0, 326, 327, 329, 0, 0, 328,
	515, 516, 0, 517, 0, 330, 0, 518, 0, 331,
	332, 333, 0, 334, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 341, 340, 0, 342, 519, 0, 343,
	344, 0, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 351, 0, 352, 353, 355, 357, 354, 356, 361,
	358, 359, 360, 363, 0, 362, 0, 364, 365, 368,
	369, 367, 0, 366, 0, 0, 0, 370, 0, 520,
	371, 521, 373, 374, 0, 0, 375, 0, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 522, 0, 382,
	0, 523, 383, 384, 376, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 393, 524, 525, 526, 394, 527,
	395, 396, 3432, 397, 0, 398, 399, 400, 401, 402,
	403, 404, 528, 405, 406, 0, 0, 0, 0, 0,
	0, 407, 0, 409, 410, 411, 408, 412, 413, 414,
	415, 0, 416, 417, 0, 418, 419, 420, 421, 529,
	422, 0, 423, 427, 428, 429, 430, 431, 432, 433,
	0, 435, 436, 434, 437, 438, 439, 0, 440, 424,
	425, 441, 442, 0, 443, 444, 530, 0, 445, 0,
	446, 447, 448, 449, 426, 450, 455, 531, 451, 452,
	453, 454, 532, 0, 457, 458, 0, 456, 0, 459,
	460, 461, 462, 463, 298, 464, 0, 465, 533, 534,
	535, 536, 0, 472, 0, 466, 467, 537, 468, 538,
	0, 469, 470, 471, 0, 473, 474, 0, 0, 475,
	476, 477, 479, 480, 478, 481, 0, 482, 0, 0,
	483, 484, 485, 539, 540, 541, 0, 487, 486, 542,
	554, 0, 226, 0, 488, 489, 543, 490, 491, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 553, 238, 239, 0, 0,
	0, 0, 0, 493, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 494, 495, 0, 496, 247,
	497, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 498, 499, 500, 0, 254, 255, 501, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 502, 503,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 0,
	0, 285, 286, 287, 0, 288, 289, 0, 290, 291,
	0, 292, 293, 504, 294, 295, 297, 299, 296, 300,
	301, 302, 303, 505, 506, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 306, 507, 0, 0, 0, 307,
	0, 308, 0, 0, 0, 309, 310, 508, 509, 311,
	312, 0, 313, 510, 0, 511, 314, 0, 315, 316,
	317, 318, 319, 512, 513, 514, 372, 0, 320, 321,
	0, 322, 323, 324, 325, 0, 0, 0, 0, 326,
	327, 329, 0, 0, 328, 515, 516, 0, 517, 0,
	330, 0, 518, 0, 331, 332, 333, 0, 334, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 341, 340,
	0, 342, 519, 0, 343, 344, 0, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 351, 0, 352, 353,
	355, 357, 354, 356, 361, 358, 359, 360, 363, 0,
	362, 0, 364, 365, 368, 369, 367, 0, 366, 0,
	0, 0, 370, 0, 520, 371, 521, 373, 374, 0,
	0, 375, 0, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 522, 0, 382, 0, 523, 383, 384, 376,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 393,
	524, 525, 526, 394, 527, 552, 396, 0, 397, 0,
	398, 399, 400, 401, 402, 403, 404, 528, 405, 406,
	0, 0, 0, 0, 0, 0, 407, 0, 409, 410,
	411, 408, 412, 413, 414, 415, 0, 416, 417, 0,
	418, 419, 420, 421, 529, 422, 0, 423, 427, 428,
	429, 430, 431, 432, 433, 0, 435, 436, 434, 437,
	438, 439, 0, 440, 424, 425, 441, 442, 0, 443,
	444, 530, 0, 445, 0, 446, 447, 448, 449, 426,
	450, 455, 531, 451, 452, 453, 454, 532, 0, 457,
	458, 0, 456, 0, 459, 460, 461, 462, 463, 298,
	464, 0, 465, 533, 534, 535, 536, 0, 472, 0,
	466, 467, 537, 468, 538, 0, 469, 470, 471, 0,
	473, 474, 0, 0, 475, 476, 477, 479, 480, 478,
	481, 0, 482, 0, 0, 483, 484, 485, 539, 540,
	541, 0, 487, 486, 542, 226, 3441, 0, 0, 488,
	489, 543, 490, 491, 492, 0, 0, 0, 0, 0,
	0, 0, 232, 233, 234, 235, 236, 237, 0, 238,
	239, 0, 0, 0, 0, 0, 493, 0, 0, 0,
	0, 240, 241, 243, 242, 244, 245, 246, 494, 495,
	0, 496, 247, 497, 0, 248, 249, 250, 251, 252,
	0, 0, 0, 253, 498, 499, 500, 0, 254, 255,
	501, 0, 0, 0, 256, 257, 258, 259, 260, 261,
	262, 0, 0, 264, 265, 266, 263, 0, 267, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 0, 0, 274, 275, 276, 277, 0,
	278, 502, 503, 0, 282, 279, 280, 0, 283, 281,
	0, 284, 0, 0, 285, 286, 287, 0, 288, 289,
	0, 290, 291, 0, 292, 293, 504, 294, 295, 297,
	299, 296, 300, 301, 302, 303, 505, 506, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 306, 507, 0,
	0, 0, 307, 0, 308, 0, 0, 0, 309, 310,
	508, 509, 311, 312, 0, 313, 510, 0, 511, 314,
	0, 315, 316, 317, 318, 319, 512, 513, 514, 372,
	0, 320, 321, 0, 322, 323, 324, 325, 0, 0,
	0, 0, 326, 327, 329, 0, 0, 328, 515, 516,
	0, 517, 0, 330, 0, 518, 0, 331, 332, 333,
	0, 334, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 341, 340, 0, 342, 519, 0, 343, 344, 0,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 351,
	0, 352, 353, 355, 357, 354, 356, 361, 358, 359,
	360, 363, 0, 362, 0, 364, 365, 368, 369, 367,
	0, 366, 0, 0, 0, 370, 0, 520, 371, 521,
	373, 374, 0, 0, 375, 0, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 522, 0, 382, 0, 523,
	383, 384, 376, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 393, 524, 525, 526, 394, 527, 395, 396,
	0, 397, 0, 398, 399, 400, 401, 402, 403, 404,
	528, 405, 406, 0, 0, 0, 0, 0, 0, 407,
	0, 409, 410, 411, 408, 412, 413, 414, 415, 0,
	416, 417, 0, 418, 419, 420, 421, 529, 422, 0,
	423, 427, 428, 429, 430, 431, 432, 433, 0, 435,
	436, 434, 437, 438, 439, 0, 440, 424, 425, 441,
	442, 0, 443, 444, 530, 0, 445, 0, 446, 447,
	448, 449, 426, 450, 455, 531, 451, 452, 453, 454,
	532, 0, 457, 458, 0, 456, 0, 459, 460, 461,
	462, 463, 298, 464, 0, 465, 533, 534, 535, 536,
	0, 472, 0, 466, 467, 537, 468, 538, 0, 469,
	470, 471, 0, 473, 474, 0, 0, 475, 476, 477,
	479, 480, 478, 481, 0, 482, 0, 0, 483, 484,
	485, 539, 540, 541, 0, 487, 486, 542, 226, 2507,
	0, 0, 488, 489, 543, 490, 491, 492, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 493,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 495, 0, 496, 247, 497, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 498, 499, 500,
	0, 254, 255, 501, 0, 0, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 502, 503, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 286, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 504,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 505,
	506, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	306, 507, 0, 0, 0, 307, 0, 308, 0, 0,
	0, 309, 310, 508, 509, 311, 312, 0, 313, 510,
	0, 511, 314, 0, 315, 316, 317, 318, 319, 512,
	513, 514, 372, 0, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 0, 326, 327, 329, 0, 0,
	328, 515, 516, 0, 517, 0, 330, 0, 518, 0,
	331, 332, 333, 0, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 519, 0,
	343, 344, 0, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 0, 364, 365,
	368, 369, 367, 0, 366, 0, 0, 0, 370, 0,
	520, 371, 521, 373, 374, 0, 0, 375, 0, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 0,
	382, 0, 523, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 526, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 528, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 0, 418, 419, 420, 421,
	529, 422, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 0, 435, 436, 434, 437, 438, 439, 0, 440,
	424, 425, 441, 442, 0, 443, 444, 530, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 531, 451,
	452, 453, 454, 532, 0, 457, 458, 0, 456, 0,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 533,
	534, 535, 536, 0, 472, 0, 466, 467, 537, 468,
	538, 0, 469, 470, 471, 0, 473, 474, 0, 0,
	475, 476, 477, 479, 480, 478, 481, 0, 482, 0,
	0, 483, 484, 485, 539, 540, 541, 226, 487, 486,
	542, 0, 0, 0, 0, 488, 489, 543, 490, 491,
	492, 0, 0, 0, 232, 233, 234, 235, 236, 237,
	0, 238, 239, 0, 0, 0, 0, 0, 493, 0,
	0, 0, 0, 240, 241, 243, 242, 244, 245, 246,
	494, 495, 0, 496, 247, 497, 0, 248, 249, 250,
	251, 252, 0, 0, 0, 253, 498, 499, 500, 0,
	254, 255, 501, 0, 0, 0, 256, 257, 258, 259,
	260, 261, 262, 0, 0, 264, 265, 266, 263, 0,
	267, 0, 268, 269, 270, 0, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 0, 0, 274, 275, 276,
	277, 0, 278, 502, 503, 3184, 282, 279, 280, 0,
	283, 281, 0, 284, 0, 0, 285, 286, 287, 0,
	288, 289, 0, 290, 291, 0, 292, 293, 504, 294,
	295, 297, 299, 296, 300, 301, 302, 303, 505, 506,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 306,
	507, 0, 0, 0, 307, 0, 308, 0, 0, 0,
	309, 310, 508, 509, 311, 312, 0, 313, 510, 0,
	511, 314, 0, 315, 316, 317, 318, 319, 512, 513,
	514, 372, 0, 320, 321, 0, 322, 323, 324, 325,
	0, 0, 0, 0, 326, 327, 329, 0, 0, 328,
	515, 516, 0, 517, 0, 330, 0, 518, 0, 331,
	332, 333, 0, 334, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 341, 340, 0, 342, 519, 0, 343,
	344, 0, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 351, 0, 352, 353, 355, 357, 354, 356, 361,
	358, 359, 360, 363, 0, 362, 0, 364, 365, 368,
	369, 367, 0, 366, 0, 0, 0, 370, 0, 520,
	371, 521, 373, 374, 0, 0, 375, 0, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 522, 0, 382,
	0, 523, 383, 384, 376, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 393, 524, 525, 526, 394, 527,
	395, 396, 0, 397, 0, 398, 399, 400, 401, 402,
	403, 404, 528, 405, 406, 0, 0, 0, 0, 0,
	0, 407, 0, 409, 410, 411, 408, 412, 413, 414,
	415, 0, 416, 417, 0, 418, 419, 420, 421, 529,
	422, 0, 423, 427, 428, 429, 430, 431, 432, 433,
	0, 435, 436, 434, 437, 438, 439, 0, 440, 424,
	425, 441, 442, 0, 443, 444, 530, 0, 445, 0,
	446, 447, 448, 449, 426, 450, 455, 531, 451, 452,
	453, 454, 532, 0, 457, 458, 0, 456, 0, 459,
	460, 461, 462, 463, 298, 464, 0, 465, 533, 534,
	535, 536, 0, 472, 0, 466, 467, 537, 468, 538,
	0, 469, 470, 471, 0, 473, 474, 0, 0, 475,
	476, 477, 479, 480, 478, 481, 0, 482, 0, 0,
	483, 484, 485, 539, 540, 541, 226, 487, 486, 542,
	0, 0, 0, 0, 488, 489, 543, 490, 491, 492,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 493, 0, 2271,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 494,
	495, 0, 496, 247, 497, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 498, 499, 500, 0, 254,
	255, 501, 0, 0, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 502, 503, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 0, 0, 285, 286, 287, 0, 288,
	289, 0, 290, 291, 0, 292, 293, 504, 294, 295,
	297, 299, 296, 300, 301, 302, 303, 505, 506, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 306, 507,
	0, 0, 0, 307, 0, 308, 0, 0, 0, 309,
	310, 508, 509, 311, 312, 0, 313, 510, 0, 511,
	314, 0, 315, 316, 317, 318, 319, 512, 513, 514,
	372, 0, 320, 321, 0, 322, 323, 324, 325, 0,
	0, 0, 0, 326, 327, 329, 0, 0, 328, 515,
	516, 0, 517, 0, 330, 0, 518, 0, 331, 332,
	333, 0, 334, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 341, 340, 0, 342, 519, 0, 343, 344,
	0, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	351, 0, 352, 353, 355, 357, 354, 356, 361, 358,
	359, 360, 363, 0, 362, 0, 364, 365, 368, 369,
	367, 0, 366, 0, 0, 0, 370, 0, 520, 371,
	521, 373, 374, 0, 0, 375, 0, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 522, 0, 382, 0,
	523, 383, 384, 376, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 393, 524, 525, 526, 394, 527, 395,
	396, 0, 397, 0, 398, 399, 400, 401, 402, 403,
	404, 528, 405, 406, 0, 0, 0, 0, 0, 0,
	407, 0, 409, 410, 411, 408, 412, 413, 414, 415,
	0, 416, 417, 0, 418, 419, 420, 421, 529, 422,
	0, 423, 427, 428, 429, 430, 431, 432, 433, 0,
	435, 436, 434, 437, 438, 439, 0, 440, 424, 425,
	441, 442, 0, 443, 444, 530, 0, 445, 0, 446,
	447, 448, 449, 426, 450, 455, 531, 451, 452, 453,
	454, 532, 0, 457, 458, 0, 456, 0, 459, 460,
	461, 462, 463, 298, 464, 0, 465, 533, 534, 535,
	536, 0, 472, 0, 466, 467, 537, 468, 538, 0,
	469, 470, 471, 0, 473, 474, 0, 0, 475, 476,
	477, 479, 480, 478, 481, 0, 482, 0, 0, 483,
	484, 485, 539, 540, 541, 0, 487, 486, 542, 226,
	2507, 0, 0, 488, 489, 543, 490, 491, 492, 0,
	0, 0, 0, 0, 0, 0, 232, 233, 234, 235,
	236, 237, 0, 238, 239, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 240, 241, 243, 242, 244,
	245, 246, 494, 495, 0, 496, 247, 497, 0, 248,
	249, 250, 251, 252, 0, 0, 0, 253, 498, 499,
	500, 0, 254, 255, 501, 0, 0, 0, 256, 257,
	258, 259, 260, 261, 262, 0, 0, 264, 265, 266,
	263, 0, 267, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 0, 0, 274,
	275, 276, 277, 0, 278, 502, 503, 0, 282, 279,
	280, 0, 283, 281, 0, 284, 0, 0, 285, 286,
	287, 0, 288, 289, 0, 290, 291, 0, 292, 293,
	504, 294, 295, 297, 299, 296, 300, 301, 302, 303,
	505, 506, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 306, 507, 0, 0, 0, 307, 0, 308, 0,
	0, 0, 309, 310, 508, 509, 311, 312, 0, 313,
	510, 0, 511, 314, 0, 315, 316, 317, 318, 319,
	512, 513, 514, 372, 0, 320, 321, 0, 322, 323,
	324, 325, 0, 0, 0, 0, 326, 327, 329, 0,
	0, 328, 515, 516, 0, 517, 0, 330, 0, 518,
	0, 331, 332, 333, 0, 334, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 341, 340, 0, 342, 519,
	0, 343, 344, 0, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 351, 0, 352, 353, 355, 357, 354,
	356, 361, 358, 359, 360, 363, 0, 362, 0, 364,
	365, 368, 369, 367, 0, 366, 0, 0, 0, 370,
	0, 520, 371, 521, 373, 374, 0, 0, 375, 0,
	0, 0, 377, 378, 2504, 0, 0, 380, 381, 522,
	0, 382, 0, 523, 383, 384, 376, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 393, 524, 525, 526,
	394, 527, 395, 396, 0, 397, 0, 398, 399, 400,
	401, 402, 403, 404, 528, 405, 406, 0, 0, 0,
	0, 0, 0, 407, 0, 409, 410, 411, 408, 412,
	413, 414, 415, 0, 416, 417, 0, 418, 419, 420,
	421, 529, 422, 0, 423, 427, 428, 429, 430, 431,
	432, 433, 0, 435, 436, 434, 437, 438, 439, 0,
	440, 424, 425, 441, 442, 0, 443, 444, 530, 0,
	445, 0, 446, 447, 448, 449, 426, 450, 455, 531,
	451, 452, 453, 454, 532, 0, 457, 458, 0, 456,
	0, 459, 460, 461, 462, 463, 298, 464, 0, 465,
	533, 534, 535, 536, 0, 472, 0, 466, 467, 537,
	468, 538, 0, 469, 470, 471, 0, 473, 474, 0,
	0, 475, 476, 477, 479, 480, 478, 481, 0, 482,
	0, 0, 483, 484, 485, 539, 540, 541, 226, 487,
	486, 542, 0, 0, 0, 0, 488, 489, 543, 490,
	491, 492, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 1947, 238, 239, 0, 0, 0, 0, 0, 493,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 495, 0, 496, 247, 497, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 498, 499, 500,
	0, 254, 255, 501, 0, 0, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 502, 503, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 286, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 504,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 505,
	506, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	306, 507, 0, 0, 0, 307, 0, 308, 0, 0,
	0, 309, 310, 508, 509, 311, 312, 0, 313, 510,
	0, 511, 314, 0, 315, 316, 317, 318, 319, 512,
	513, 514, 372, 0, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 0, 326, 327, 329, 0, 0,
	328, 515, 516, 0, 517, 0, 330, 0, 518, 0,
	331, 332, 333, 0, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 519, 0,
	343, 344, 0, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 0, 364, 365,
	368, 369, 367, 0, 366, 0, 0, 0, 370, 0,
	520, 371, 521, 373, 374, 0, 0, 375, 0, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 0,
	382, 0, 523, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 526, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 528, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 0, 418, 419, 420, 421,
	529, 422, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 0, 435, 436, 434, 437, 438, 439, 0, 440,
	424, 425, 441, 442, 0, 443, 444, 530, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 531, 451,
	452, 453, 454, 532, 0, 457, 458, 0, 456, 0,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 533,
	534, 535, 536, 0, 472, 0, 466, 467, 537, 468,
	538, 0, 469, 470, 471, 0, 473, 474, 0, 0,
	475, 476, 477, 479, 480, 478, 481, 0, 482, 0,
	0, 483, 484, 485, 539, 540, 541, 0, 487, 486,
	542, 1937, 0, 226, 0, 488, 489, 543, 490, 491,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 233, 234, 235, 236, 237, 0, 238, 239, 0,
	0, 0, 0, 0, 493, 0, 0, 0, 0, 240,
	241, 243, 242, 244, 245, 246, 494, 495, 0, 496,
	247, 497, 0, 248, 249, 250, 251, 252, 0, 0,
	0, 253, 498, 499, 500, 0, 254, 255, 501, 0,
	0, 0, 256, 257, 258, 259, 260, 261, 262, 0,
	0, 264, 265, 266, 263, 0, 267, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 0, 0, 274, 275, 276, 277, 0, 278, 502,
	503, 0, 282, 279, 280, 0, 283, 281, 0, 284,
	0, 0, 285, 286, 287, 0, 288, 289, 0, 290,
	291, 0, 292, 293, 504, 294, 295, 297, 299, 296,
	300, 301, 302, 303, 505, 506, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 306, 507, 0, 0, 0,
	307, 0, 308, 0, 0, 0, 309, 310, 508, 509,
	311, 312, 0, 313, 510, 0, 511, 314, 0, 315,
	316, 317, 318, 319, 512, 513, 514, 372, 0, 320,
	321, 0, 322, 323, 324, 325, 0, 0, 0, 0,
	326, 327, 329, 0, 0, 328, 515, 516, 0, 517,
	0, 330, 0, 518, 0, 331, 332, 333, 0, 334,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 341,
	340, 0, 342, 519, 0, 343, 344, 0, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 351, 0, 352,
	353, 355, 357, 354, 356, 361, 358, 359, 360, 363,
	0, 362, 0, 364, 365, 368, 369, 367, 0, 366,
	0, 0, 0, 370, 0, 520, 371, 521, 373, 374,
	0, 0, 375, 0, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 522, 0, 382, 0, 523, 383, 384,
	376, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	393, 524, 525, 526, 394, 527, 395, 396, 0, 397,
	0, 398, 399, 400, 401, 402, 403, 404, 528, 405,
	406, 0, 0, 0, 0, 0, 0, 407, 0, 409,
	410, 411, 408, 412, 413, 414, 415, 0, 416, 417,
	0, 418, 419, 420, 421, 529, 422, 0, 423, 427,
	428, 429, 430, 431, 432, 433, 0, 435, 436, 434,
	437, 438, 439, 0, 440, 424, 425, 441, 442, 0,
	443, 444, 530, 0, 445, 0, 446, 447, 448, 449,
	426, 450, 455, 531, 451, 452, 453, 454, 532, 0,
	457, 458, 0, 456, 0, 459, 460, 461, 462, 463,
	298, 464, 0, 465, 533, 534, 535, 536, 0, 472,
	0, 466, 467, 537, 468, 538, 0, 469, 470, 471,
	0, 473, 474, 0, 0, 475, 476, 477, 479, 480,
	478, 481, 0, 482, 0, 0, 483, 484, 485, 539,
	540, 541, 0, 487, 486, 542, 595, 0, 226, 0,
	488, 489, 543, 490, 491, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 493,
	0, 0, 0, 0, 240, 241, 1070, 242, 244, 245,
	246, 494, 495, 0, 496, 247, 497, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 498, 499, 1068,
	0, 254, 255, 501, 0, 0, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 502, 503, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 286, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 504,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 505,
	506, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	306, 507, 0, 0, 0, 307, 0, 308, 0, 0,
	0, 309, 310, 508, 509, 311, 312, 0, 313, 510,
	0, 511, 314, 0, 315, 316, 317, 318, 319, 512,
	513, 514, 372, 0, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 0, 326, 327, 329, 0, 0,
	328, 515, 516, 0, 517, 0, 330, 0, 518, 0,
	331, 332, 333, 0, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 519, 0,
	343, 344, 0, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 596, 0, 364, 365,
	368, 369, 367, 0, 366, 0, 0, 0, 370, 0,
	520, 371, 521, 373, 374, 0, 0, 375, 0, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 0,
	382, 0, 523, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 526, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 528, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 0, 418, 419, 420, 421,
	529, 422, 0, 423, 427, 428, 592, 430, 431, 432,
	433, 0, 435, 436, 434, 437, 1071, 439, 0, 440,
	424, 425, 441, 442, 0, 443, 444, 530, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 531, 451,
	452, 453, 454, 532, 0, 457, 458, 0, 456, 0,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 591,
	534, 535, 536, 0, 472, 0, 466, 467, 537, 468,
	538, 0, 469, 470, 471, 0, 473, 474, 0, 0,
	475, 476, 477, 479, 480, 478, 481, 0, 482, 0,
	0, 483, 484, 485, 539, 540, 541, 0, 487, 486,
	542, 595, 0, 226, 0, 488, 489, 543, 490, 491,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 233, 234, 235, 236, 237, 0, 238, 239, 0,
	0, 0, 0, 0, 493, 0, 0, 0, 0, 240,
	241, 243, 242, 244, 245, 246, 494, 495, 0, 496,
	247, 497, 0, 248, 249, 250, 251, 252, 0, 0,
	0, 253, 498, 499, 500, 0, 254, 585, 501, 0,
	0, 0, 256, 257, 258, 259, 260, 261, 262, 0,
	0, 264, 265, 266, 263, 0, 267, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 0, 0, 274, 275, 276, 277, 0, 278, 502,
	503, 0, 282, 279, 280, 0, 283, 281, 0, 284,
	0, 0, 285, 286, 287, 0, 288, 289, 0, 290,
	291, 0, 292, 293, 504, 294, 295, 297, 299, 296,
	300, 301, 302, 303, 505, 506, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 306, 507, 0, 0, 0,
	307, 0, 308, 0, 0, 0, 309, 310, 508, 509,
	311, 312, 0, 313, 510, 0, 511, 314, 0, 315,
	316, 317, 318, 319, 512, 513, 514, 372, 0, 320,
	321, 0, 322, 323, 324, 325, 0, 0, 0, 0,
	326, 327, 329, 0, 0, 328, 515, 516, 0, 517,
	0, 330, 0, 518, 0, 331, 332, 333, 0, 334,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 341,
	340, 0, 342, 519, 0, 343, 344, 0, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 351, 0, 352,
	353, 355, 357, 354, 356, 361, 358, 359, 360, 363,
	0, 596, 0, 364, 365, 368, 369, 367, 0, 366,
	0, 0, 0, 370, 0, 520, 371, 521, 373, 374,
	0, 0, 375, 0, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 522, 0, 382, 0, 523, 383, 384,
	376, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	393, 524, 525, 526, 394, 527, 395, 396, 0, 397,
	0, 398, 399, 400, 401, 402, 403, 404, 528, 405,
	406, 0, 0, 0, 0, 0, 0, 407, 0, 409,
	410, 411, 408, 412, 413, 414, 415, 0, 416, 417,
	0, 418, 419, 420, 421, 529, 422, 0, 423, 427,
	428, 592, 430, 431, 432, 433, 0, 435, 436, 434,
	437, 1360, 439, 0, 440, 424, 425, 441, 442, 0,
	443, 444, 530, 0, 445, 0, 446, 447, 448, 449,
	426, 450, 455, 531, 451, 452, 453, 454, 532, 0,
	457, 458, 0, 456, 0, 459, 460, 461, 462, 463,
	298, 464, 0, 465, 591, 534, 535, 536, 0, 472,
	0, 466, 467, 537, 468, 538, 0, 469, 470, 471,
	0, 473, 474, 0, 0, 475, 476, 477, 479, 480,
	478, 481, 0, 482, 0, 0, 483, 484, 485, 539,
	540, 541, 0, 487, 486, 542, 1342, 0, 226, 0,
	488, 489, 543, 490, 491, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 493,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 495, 0, 496, 247, 497, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 498, 499, 500,
	0, 254, 255, 501, 0, 0, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 502, 503, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 286, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 504,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 505,
	506, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	306, 507, 0, 0, 0, 307, 0, 308, 0, 0,
	0, 309, 310, 508, 509, 311, 312, 0, 313, 510,
	0, 511, 314, 0, 315, 316, 317, 318, 319, 1341,
	513, 514, 372, 0, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 0, 326, 327, 329, 0, 0,
	328, 515, 516, 0, 517, 0, 330, 0, 518, 0,
	331, 332, 333, 0, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 519, 0,
	343, 344, 0, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 0, 364, 365,
	368, 369, 367, 0, 366, 0, 0, 0, 370, 0,
	520, 371, 521, 373, 374, 0, 0, 375, 0, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 0,
	382, 0, 523, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 526, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 528, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 0, 418, 419, 420, 421,
	529, 422, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 0, 435, 436, 434, 437, 438, 439, 0, 440,
	424, 425, 441, 442, 0, 443, 444, 530, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 531, 451,
	452, 453, 454, 532, 0, 457, 458, 0, 456, 0,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 533,
	534, 535, 536, 0, 472, 0, 466, 467, 537, 468,
	538, 0, 469, 470, 471, 0, 473, 474, 0, 0,
	475, 476, 477, 479, 480, 478, 481, 0, 482, 0,
	0, 483, 484, 485, 539, 540, 541, 0, 487, 486,
	542, 1291, 0, 226, 0, 488, 489, 543, 490, 491,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 233, 234, 235, 236, 237, 0, 238, 239, 0,
	0, 0, 0, 0, 493, 0, 0, 0, 0, 240,
	241, 243, 242, 244, 245, 246, 494, 495, 0, 496,
	247, 497, 0, 248, 249, 250, 251, 252, 0, 0,
	0, 253, 498, 499, 500, 0, 254, 255, 501, 0,
	0, 0, 256, 257, 258, 259, 260, 261, 262, 0,
	0, 264, 265, 266, 263, 0, 267, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 0, 0, 274, 275, 276, 277, 0, 278, 502,
	503, 0, 282, 279, 280, 0, 283, 281, 0, 284,
	0, 0, 285, 286, 287, 0, 288, 289, 0, 290,
	291, 0, 292, 293, 504, 294, 295, 297, 299, 296,
	300, 301, 302, 303, 505, 506, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 306, 507, 0, 0, 0,
	307, 0, 308, 0, 0, 0, 309, 310, 508, 509,
	311, 312, 0, 313, 510, 0, 511, 314, 0, 315,
	316, 317, 318, 319, 1290, 513, 514, 372, 0, 320,
	321, 0, 322, 323, 324, 325, 0, 0, 0, 0,
	326, 327, 329, 0, 0, 328, 515, 516, 0, 517,
	0, 330, 0, 518, 0, 331, 332, 333, 0, 334,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 341,
	340, 0, 342, 519, 0, 343, 344, 0, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 351, 0, 352,
	353, 355, 357, 354, 356, 361, 358, 359, 360, 363,
	0, 362, 0, 364, 365, 368, 369, 367, 0, 366,
	0, 0, 0, 370, 0, 520, 371, 521, 373, 374,
	0, 0, 375, 0, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 522, 0, 382, 0, 523, 383, 384,
	376, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	393, 524, 525, 526, 394, 527, 395, 396, 0, 397,
	0, 398, 399, 400, 401, 402, 403, 404, 528, 405,
	406, 0, 0, 0, 0, 0, 0, 407, 0, 409,
	410, 411, 408, 412, 413, 414, 415, 0, 416, 417,
	0, 418, 419, 420, 421, 529, 422, 0, 423, 427,
	428, 429, 430, 431, 432, 433, 0, 435, 436, 434,
	437, 438, 439, 0, 440, 424, 425, 441, 442, 0,
	443, 444, 530, 0, 445, 0, 446, 447, 448, 449,
	426, 450, 455, 531, 451, 452, 453, 454, 532, 0,
	457, 458, 0, 456, 0, 459, 460, 461, 462, 463,
	298, 464, 0, 465, 533, 534, 535, 536, 0, 472,
	0, 466, 467, 537, 468, 538, 0, 469, 470, 471,
	0, 473, 474, 0, 0, 475, 476, 477, 479, 480,
	478, 481, 0, 482, 0, 0, 483, 484, 485, 539,
	540, 541, 0, 487, 486, 542, 1276, 0, 226, 0,
	488, 489, 543, 490, 491, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 493,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 495, 0, 496, 247, 497, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 498, 499, 500,
	0, 254, 255, 501, 0, 0, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 502, 503, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 286, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 504,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 505,
	506, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	306, 507, 0, 0, 0, 307, 0, 308, 0, 0,
	0, 309, 310, 508, 509, 311, 312, 0, 313, 510,
	0, 511, 314, 0, 315, 316, 317, 318, 319, 1275,
	513, 514, 372, 0, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 0, 326, 327, 329, 0, 0,
	328, 515, 516, 0, 517, 0, 330, 0, 518, 0,
	331, 332, 333, 0, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 519, 0,
	343, 344, 0, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 0, 364, 365,
	368, 369, 367, 0, 366, 0, 0, 0, 370, 0,
	520, 371, 521, 373, 374, 0, 0, 375, 0, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 0,
	382, 0, 523, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 526, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 528, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 0, 418, 419, 420, 421,
	529, 422, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 0, 435, 436, 434, 437, 438, 439, 0, 440,
	424, 425, 441, 442, 0, 443, 444, 530, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 531, 451,
	452, 453, 454, 532, 0, 457, 458, 0, 456, 0,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 533,
	534, 535, 536, 0, 472, 0, 466, 467, 537, 468,
	538, 0, 469, 470, 471, 0, 473, 474, 0, 0,
	475, 476, 477, 479, 480, 478, 481, 0, 482, 0,
	0, 483, 484, 485, 539, 540, 541, 0, 487, 486,
	542, 1271, 0, 226, 0, 488, 489, 543, 490, 491,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 233, 234, 235, 236, 237, 0, 238, 239, 0,
	0, 0, 0, 0, 493, 0, 0, 0, 0, 240,
	241, 243, 242, 244, 245, 246, 494, 495, 0, 496,
	247, 497, 0, 248, 249, 250, 251, 252, 0, 0,
	0, 253, 498, 499, 500, 0, 254, 255, 501, 0,
	0, 0, 256, 257, 258, 259, 260, 261, 262, 0,
	0, 264, 265, 266, 263, 0, 267, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 0, 0, 274, 275, 276, 277, 0, 278, 502,
	503, 0, 282, 279, 280, 0, 283, 281, 0, 284,
	0, 0, 285, 286, 287, 0, 288, 289, 0, 290,
	291, 0, 292, 293, 504, 294, 295, 297, 299, 296,
	300, 301, 302, 303, 505, 506, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 306, 507, 0, 0, 0,
	307, 0, 308, 0, 0, 0, 309, 310, 508, 509,
	311, 312, 0, 313, 510, 0, 511, 314, 0, 315,
	316, 317, 318, 319, 512, 513, 514, 372, 0, 320,
	321, 0, 322, 323, 324, 325, 0, 0, 0, 0,
	326, 327, 329, 0, 0, 328, 515, 516, 0, 517,
	0, 330, 0, 518, 0, 331, 332, 333, 0, 334,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 341,
	340, 0, 342, 519, 0, 343, 344, 0, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 351, 0, 352,
	353, 355, 357, 354, 356, 361, 358, 359, 360, 363,
	0, 362, 0, 364, 365, 368, 369, 367, 0, 366,
	0, 0, 0, 370, 0, 520, 371, 521, 373, 374,
	0, 0, 375, 0, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 522, 0, 382, 0, 523, 383, 384,
	376, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	393, 524, 525, 526, 394, 527, 395, 396, 0, 397,
	0, 398, 399, 400, 401, 402, 403, 404, 528, 405,
	406, 0, 0, 0, 0, 0, 0, 407, 0, 409,
	410, 411, 408, 412, 413, 414, 415, 0, 416, 417,
	0, 418, 419, 420, 421, 529, 422, 0, 423, 427,
	428, 429, 430, 431, 432, 433, 0, 435, 436, 434,
	437, 438, 439, 0, 440, 424, 425, 441, 442, 0,
	443, 444, 530, 0, 445, 0, 446, 447, 448, 449,
	426, 450, 455, 531, 451, 452, 453, 454, 532, 0,
	457, 458, 0, 456, 0, 459, 460, 461, 462, 463,
	298, 464, 0, 465, 533, 534, 535, 536, 0, 472,
	0, 466, 467, 537, 468, 538, 0, 469, 470, 471,
	0, 473, 474, 0, 0, 475, 476, 477, 479, 480,
	478, 481, 0, 482, 0, 0, 483, 484, 485, 539,
	540, 541, 0, 487, 486, 542, 1198, 0, 226, 0,
	488, 489, 543, 490, 491, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 493,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 495, 0, 496, 247, 497, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 498, 499, 500,
	0, 254, 255, 501, 0, 0, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 502, 503, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 286, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 504,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 505,
	506, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	306, 507, 0, 0, 0, 307, 0, 308, 0, 0,
	0, 309, 310, 508, 509, 311, 312, 0, 313, 510,
	0, 511, 314, 0, 315, 316, 317, 318, 319, 512,
	513, 514, 372, 0, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 0, 326, 327, 329, 0, 0,
	328, 515, 516, 0, 517, 0, 330, 0, 518, 0,
	331, 332, 333, 0, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 519, 0,
	343, 344, 0, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 0, 364, 365,
	368, 369, 367, 0, 366, 0, 0, 0, 370, 0,
	520, 371, 521, 373, 374, 0, 0, 375, 0, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 0,
	382, 0, 523, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 526, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 528, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 0, 418, 419, 420, 421,
	529, 422, 0, 423, 427, 428, 429, 430, 431, 432,
	433, 0, 435, 436, 434, 437, 438, 439, 0, 440,
	424, 425, 441, 442, 0, 443, 444, 530, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 531, 451,
	452, 453, 454, 532, 0, 457, 458, 0, 456, 0,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 533,
	534, 535, 536, 0, 472, 0, 466, 467, 537, 468,
	538, 0, 469, 470, 471, 0, 473, 474, 0, 0,
	475, 476, 477, 479, 480, 478, 481, 0, 482, 0,
	0, 483, 484, 485, 539, 540, 541, 0, 487, 486,
	542, 595, 0, 226, 0, 488, 489, 543, 490, 491,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 233, 234, 235, 236, 237, 0, 238, 239, 0,
	0, 0, 0, 0, 493, 0, 0, 0, 0, 240,
	241, 1070, 242, 244, 245, 246, 494, 495, 0, 496,
	247, 497, 0, 248, 249, 250, 251, 252, 0, 0,
	0, 253, 498, 499, 1068, 0, 254, 255, 501, 0,
	0, 0, 256, 257, 258, 259, 260, 261, 262, 0,
	0, 264, 265, 266, 263, 0, 267, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 0, 0, 274, 275, 276, 277, 0, 278, 502,
	503, 0, 282, 279, 280, 0, 283, 281, 0, 284,
	0, 0, 285, 286, 287, 0, 288, 289, 0, 290,
	291, 0, 292, 293, 504, 294, 295, 297, 299, 296,
	300, 301, 302, 303, 505, 506, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 306, 507, 0, 0, 0,
	307, 0, 308, 0, 0, 0, 309, 310, 508, 509,
	311, 312, 0, 313, 510, 0, 511, 314, 0, 315,
	316, 317, 318, 319, 512, 513, 514, 372, 0, 320,
	321, 0, 322, 323, 324, 325, 0, 0, 0, 0,
	326, 327, 329, 0, 0, 328, 515, 516, 0, 517,
	0, 330, 0, 518, 0, 331, 332, 333, 0, 334,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 341,
	340, 0, 342, 519, 0, 343, 344, 0, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 351, 0, 352,
	353, 355, 357, 354, 356, 361, 358, 359, 360, 363,
	0, 596, 0, 364, 365, 368, 369, 367, 0, 366,
	0, 0, 0, 370, 0, 520, 371, 521, 373, 374,
	0, 0, 375, 0, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 522, 0, 382, 0, 523, 383, 384,
	376, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	393, 524, 525, 526, 394, 527, 395, 396, 0, 397,
	0, 398, 399, 400, 401, 402, 403, 404, 528, 405,
	406, 0, 0, 0, 0, 0, 0, 407, 0, 409,
	410, 411, 408, 412, 413, 414, 415, 0, 416, 417,
	0, 418, 419, 420, 421, 529, 422, 0, 423, 427,
	428, 592, 430, 431, 432, 433, 0, 435, 436, 434,
	437, 1071, 439, 0, 440, 424, 425, 441, 442, 0,
	443, 444, 530, 0, 445, 0, 446, 447, 448, 449,
	426, 450, 455, 531, 451, 452, 453, 454, 532, 0,
	457, 458, 0, 456, 0, 459, 460, 461, 462, 463,
	298, 464, 0, 465, 591, 534, 535, 536, 0, 472,
	0, 466, 1069, 537, 468, 538, 0, 469, 470, 471,
	0, 473, 474, 0, 0, 475, 476, 477, 479, 480,
	478, 481, 0, 482, 0, 0, 483, 484, 485, 539,
	540, 541, 226, 487, 486, 542, 0, 0, 0, 0,
	488, 489, 543, 490, 491, 492, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 1052, 238, 239, 0, 0,
	0, 0, 0, 493, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 494, 495, 0, 496, 247,
	497, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 498, 499, 500, 0, 254, 255, 501, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 502, 503,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 0,
	0, 285, 286, 287, 0, 288, 289, 0, 290, 291,
	0, 292, 293, 504, 294, 295, 297, 299, 296, 300,
	301, 302, 303, 505, 506, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 306, 507, 0, 0, 0, 307,
	0, 308, 0, 0, 0, 309, 310, 508, 509, 311,
	312, 0, 313, 510, 0, 511, 314, 0, 315, 316,
	317, 318, 319, 512, 513, 514, 372, 0, 320, 321,
	0, 322, 323, 324, 325, 0, 0, 0, 0, 326,
	327, 329, 0, 0, 328, 515, 516, 0, 517, 0,
	330, 0, 518, 0, 331, 332, 333, 0, 334, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 341, 340,
	0, 342, 519, 0, 343, 344, 0, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 351, 0, 352, 353,
	355, 357, 354, 356, 361, 358, 359, 360, 363, 0,
	362, 0, 364, 365, 368, 369, 367, 0, 366, 0,
	0, 0, 370, 0, 520, 371, 521, 373, 374, 0,
	0, 375, 0, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 522, 0, 382, 0, 523, 383, 384, 376,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 393,
	524, 525, 526, 394, 527, 395, 396, 0, 397, 0,
	398, 399, 400, 401, 402, 403, 404, 528, 405, 406,
	0, 0, 0, 0, 0, 0, 407, 0, 409, 410,
	411, 408, 412, 413, 414, 415, 0, 416, 417, 0,
	418, 419, 420, 421, 529, 422, 0, 423, 427, 428,
	429, 430, 431, 432, 433, 0, 435, 436, 434, 437,
	438, 439, 0, 440, 424, 425, 441, 442, 0, 443,
	444, 530, 0, 445, 0, 446, 447, 448, 449, 426,
	450, 455, 531, 451, 452, 453, 454, 532, 0, 457,
	458, 0, 456, 0, 459, 460, 461, 462, 463, 298,
	464, 0, 465, 533, 534, 535, 536, 0, 472, 0,
	466, 467, 537, 468, 538, 0, 469, 470, 471, 0,
	473, 474, 0, 0, 475, 476, 477, 479, 480, 478,
	481, 0, 482, 0, 0, 483, 484, 485, 539, 540,
	541, 226, 487, 486, 542, 0, 0, 0, 0, 488,
	489, 543, 490, 491, 492, 0, 0, 0, 232, 233,
	234, 235, 236, 237, 601, 238, 239, 0, 0, 0,
	0, 0, 493, 0, 0, 0, 0, 240, 241, 243,
	242, 244, 245, 246, 494, 495, 0, 496, 247, 497,
	0, 248, 249, 250, 251, 252, 0, 0, 0, 253,
	498, 499, 500, 0, 254, 255, 501, 0, 0, 0,
	256, 257, 258, 259, 260, 261, 262, 0, 0, 264,
	265, 266, 263, 0, 267, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 0, 0, 0, 0, 0,
	0, 274, 275, 276, 277, 0, 278, 502, 503, 0,
	282, 279, 280, 0, 283, 281, 0, 284, 0, 0,
	285, 286, 287, 0, 288, 289, 0, 290, 291, 0,
	292, 293, 504, 294, 295, 297, 299, 296, 300, 301,
	302, 303, 505, 506, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 306, 507, 0, 0, 0, 307, 0,
	308, 0, 0, 0, 309, 310, 508, 509, 311, 312,
	0, 313, 510, 0, 511, 314, 0, 315, 316, 317,
	318, 319, 512, 513, 514, 372, 0, 320, 321, 0,
	322, 323, 324, 325, 0, 0, 0, 0, 326, 327,
	329, 0, 0, 328, 515, 516, 0, 517, 0, 330,
	0, 518, 0, 331, 332, 333, 0, 334, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 341, 340, 0,
	342, 519, 0, 343, 344, 0, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 351, 0, 352, 353, 355,
	357, 354, 356, 361, 358, 359, 360, 363, 0, 362,
	0, 364, 365, 368, 369, 367, 0, 366, 0, 0,
	0, 370, 0, 520, 371, 521, 373, 374, 0, 0,
	375, 0, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 522, 0, 382, 0, 523, 383, 384, 376, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 393, 524,
	525, 526, 394, 527, 395, 396, 0, 397, 0, 398,
	399, 400, 401, 402, 403, 404, 528, 405, 406, 0,
	0, 0, 0, 0, 0, 407, 0, 409, 410, 411,
	408, 412, 413, 414, 415, 0, 416, 417, 0, 418,
	419, 420, 421, 529, 422, 0, 423, 427, 428, 429,
	430, 431, 432, 433, 0, 435, 436, 434, 437, 438,
	439, 0, 440, 424, 425, 441, 442, 0, 443, 444,
	530, 0, 445, 0, 446, 447, 448, 449, 426, 450,
	455, 531, 451, 452, 453, 454, 532, 0, 457, 458,
	0, 456, 0, 459, 460, 461, 462, 463, 298, 464,
	0, 465, 533, 534, 535, 536, 0, 472, 0, 466,
	467, 537, 468, 538, 0, 469, 470, 471, 0, 473,
	474, 0, 0, 475, 476, 477, 479, 480, 478, 481,
	0, 482, 0, 0, 483, 484, 485, 539, 540, 541,
	0, 487, 486, 542, 595, 0, 226, 0, 488, 489,
	543, 490, 491, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 493, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 494,
	495, 0, 496, 247, 497, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 498, 499, 500, 0, 254,
	585, 501, 0, 0, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 583,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 502, 503, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 0, 0, 285, 286, 287, 0, 288,
	289, 0, 290, 291, 0, 292, 293, 504, 294, 295,
	297, 299, 296, 300, 301, 302, 303, 505, 506, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 306, 507,
	0, 0, 0, 307, 0, 308, 0, 0, 0, 309,
	310, 508, 509, 311, 312, 0, 313, 510, 0, 511,
	314, 0, 315, 316, 317, 318, 319, 512, 513, 514,
	372, 0, 320, 321, 0, 322, 323, 324, 325, 0,
	0, 0, 0, 326, 327, 329, 0, 0, 328, 515,
	516, 0, 517, 0, 330, 0, 518, 0, 331, 332,
	333, 0, 334, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 341, 340, 0, 342, 519, 0, 343, 344,
	0, 0, 345, 346, 584, 0, 0, 348, 349, 350,
	351, 0, 352, 353, 355, 357, 354, 356, 361, 358,
	359, 360, 363, 0, 596, 0, 364, 365, 368, 369,
	367, 0, 366, 0, 0, 0, 370, 0, 520, 371,
	521, 373, 374, 0, 0, 375, 0, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 522, 0, 382, 0,
	523, 383, 384, 376, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 393, 524, 525, 526, 394, 527, 395,
	396, 0, 397, 0, 398, 399, 400, 401, 402, 403,
	404, 528, 405, 406, 0, 0, 0, 0, 0, 0,
	407, 0, 409, 410, 411, 408, 412, 413, 414, 415,
	0, 416, 417, 0, 418, 419, 420, 421, 586, 422,
	0, 423, 427, 428, 592, 430, 431, 432, 433, 0,
	435, 436, 434, 437, 587, 439, 0, 440, 424, 425,
	441, 442, 0, 443, 444, 530, 0, 445, 0, 446,
	447, 448, 449, 426, 450, 455, 531, 451, 452, 453,
	454, 532, 0, 457, 458, 0, 456, 0, 459, 460,
	461, 462, 463, 298, 464, 0, 465, 591, 534, 535,
	536, 0, 472, 0, 466, 589, 537, 468, 538, 0,
	469, 470, 471, 0, 473, 474, 0, 0, 475, 476,
	477, 479, 480, 478, 481, 0, 482, 0, 0, 483,
	484, 485, 539, 540, 541, 0, 487, 486, 542, 579,
	0, 226, 0, 488, 489, 543, 490, 491, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 233,
	234, 235, 236, 237, 0, 238, 239, 0, 0, 0,
	0, 0, 493, 0, 0, 0, 0, 240, 241, 243,
	242, 244, 245, 246, 494, 495, 0, 496, 247, 497,
	0, 248, 249, 250, 251, 252, 0, 0, 0, 253,
	498, 499, 500, 0, 254, 255, 501, 0, 0, 0,
	256, 257, 258, 259, 260, 261, 262, 0, 0, 264,
	265, 266, 263, 0, 267, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 0, 0, 0, 0, 0,
	0, 274, 275, 276, 277, 0, 278, 502, 503, 0,
	282, 279, 280, 0, 283, 281, 0, 284, 0, 0,
	285, 286, 287, 0, 288, 289, 0, 290, 291, 0,
	292, 293, 504, 294, 295, 297, 299, 296, 300, 301,
	302, 303, 505, 506, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 306, 507, 0, 0, 0, 307, 0,
	308, 0, 0, 0, 309, 310, 508, 509, 311, 312,
	0, 313, 510, 0, 511, 314, 0, 315, 316, 317,
	318, 319, 512, 513, 514, 372, 0, 320, 321, 0,
	322, 323, 324, 325, 0, 0, 0, 0, 326, 327,
	329, 0, 0, 328, 515, 516, 0, 517, 0, 330,
	0, 518, 0, 331, 332, 333, 0, 334, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 341, 340, 0,
	342, 519, 0, 343, 344, 0, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 351, 0, 352, 353, 355,
	357, 354, 356, 361, 358, 359, 360, 363, 0, 362,
	0, 364, 365, 368, 369, 367, 0, 366, 0, 0,
	0, 370, 0, 520, 371, 521, 373, 374, 0, 0,
	375, 0, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 522, 0, 382, 0, 523, 383, 384, 376, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 393, 524,
	525, 526, 394, 527, 395, 396, 0, 397, 0, 398,
	399, 400, 401, 402, 403, 404, 528, 405, 406, 0,
	0, 0, 0, 0, 0, 407, 0, 409, 410, 411,
	408, 412, 413, 414, 415, 0, 416, 417, 0, 418,
	419, 420, 421, 529, 422, 0, 423, 580, 428, 429,
	430, 431, 432, 433, 0, 435, 436, 434, 437, 438,
	439, 0, 440, 424, 425, 441, 442, 0, 443, 444,
	530, 0, 445, 0, 446, 447, 448, 449, 426, 450,
	455, 531, 451, 452, 453, 454, 532, 0, 457, 458,
	0, 456, 0, 459, 460, 461, 462, 463, 298, 464,
	0, 465, 533, 534, 535, 536, 0, 472, 0, 466,
	467, 537, 468, 538, 0, 469, 470, 471, 0, 473,
	474, 0, 0, 475, 476, 477, 479, 480, 478, 481,
	0, 482, 0, 0, 483, 484, 485, 539, 540, 541,
	0, 487, 486, 542, 577, 0, 226, 0, 488, 489,
	543, 490, 491, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 493, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 494,
	495, 0, 496, 247, 497, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 498, 499, 500, 0, 254,
	255, 501, 0, 0, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 502, 503, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 0, 0, 285, 286, 287, 0, 288,
	289, 0, 290, 291, 0, 292, 293, 504, 294, 295,
	297, 299, 296, 300, 301, 302, 303, 505, 506, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 306, 507,
	0, 0, 0, 307, 0, 308, 0, 0, 0, 309,
	310, 508, 509, 311, 312, 0, 313, 510, 0, 511,
	314, 0, 315, 316, 317, 318, 319, 512, 513, 514,
	372, 0, 320, 321, 0, 322, 323, 324, 325, 0,
	0, 0, 0, 326, 327, 329, 0, 0, 328, 515,
	516, 0, 517, 0, 330, 0, 518, 0, 331, 332,
	333, 0, 334, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 341, 340, 0, 342, 519, 0, 343, 344,
	0, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	351, 0, 352, 353, 355, 357, 354, 356, 361, 358,
	359, 360, 363, 0, 362, 0, 364, 365, 368, 369,
	367, 0, 366, 0, 0, 0, 370, 0, 520, 371,
	521, 373, 374, 0, 0, 375, 0, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 522, 0, 382, 0,
	523, 383, 384, 376, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 393, 524, 525, 526, 394, 527, 395,
	396, 0, 397, 0, 398, 399, 400, 401, 402, 403,
	404, 528, 405, 406, 0, 0, 0, 0, 0, 0,
	407, 0, 409, 410, 411, 408, 412, 413, 414, 415,
	0, 416, 417, 0, 418, 419, 420, 421, 529, 422,
	0, 423, 427, 428, 429, 430, 431, 432, 433, 0,
	435, 436, 434, 437, 438, 439, 0, 440, 424, 425,
	441, 442, 0, 443, 444, 530, 0, 445, 0, 446,
	447, 448, 449, 426, 450, 455, 531, 451, 452, 453,
	454, 532, 0, 457, 458, 0, 456, 0, 459, 460,
	461, 462, 463, 298, 464, 0, 465, 533, 534, 535,
	536, 0, 472, 0, 466, 467, 537, 468, 538, 0,
	469, 470, 471, 0, 473, 474, 0, 0, 475, 476,
	477, 479, 480, 478, 481, 0, 482, 0, 0, 483,
	484, 485, 539, 540, 541, 0, 487, 486, 542, 571,
	0, 226, 0, 488, 489, 543, 490, 491, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 233,
	234, 235, 236, 237, 0, 238, 239, 0, 0, 0,
	0, 0, 493, 0, 0, 0, 0, 240, 241, 243,
	242, 244, 245, 246, 494, 495, 0, 496, 247, 497,
	0, 248, 249, 250, 251, 252, 0, 0, 0, 253,
	498, 499, 500, 0, 254, 255, 501, 0, 0, 0,
	256, 257, 258, 259, 260, 261, 262, 0, 0, 264,
	265, 266, 263, 0, 267, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 0, 0, 0, 0, 0,
	0, 274, 275, 276, 277, 0, 278, 502, 503, 0,
	282, 279, 280, 0, 283, 281, 0, 284, 0, 0,
	285, 286, 287, 0, 288, 289, 0, 290, 291, 0,
	292, 293, 504, 294, 295, 297, 299, 296, 300, 301,
	302, 303, 505, 506, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 306, 507, 0, 0, 0, 307, 0,
	308, 0, 0, 0, 309, 310, 508, 509, 311, 312,
	0, 313, 510, 0, 511, 314, 0, 315, 316, 317,
	318, 319, 512, 513, 514, 372, 0, 320, 321, 0,
	322, 323, 324, 325, 0, 0, 0, 0, 326, 327,
	329, 0, 0, 328, 515, 516, 0, 517, 0, 330,
	0, 518, 0, 331, 332, 333, 0, 334, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 341, 340, 0,
	342, 519, 0, 343, 344, 0, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 351, 0, 352, 353, 355,
	357, 354, 356, 361, 358, 359, 360, 363, 0, 362,
	0, 364, 365, 368, 369, 367, 0, 366, 0, 0,
	0, 370, 0, 520, 371, 521, 373, 374, 0, 0,
	375, 0, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 522, 0, 382, 0, 523, 383, 384, 376, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 393, 524,
	525, 526, 394, 527, 395, 396, 0, 397, 0, 398,
	399, 400, 401, 402, 403, 404, 528, 405, 406, 0,
	0, 0, 0, 0, 0, 407, 0, 409, 410, 411,
	408, 412, 413, 414, 415, 0, 416, 417, 0, 418,
	419, 420, 421, 529, 422, 0, 423, 427, 428, 429,
	430, 431, 432, 433, 0, 435, 436, 434, 437, 438,
	439, 0, 440, 424, 425, 441, 442, 0, 443, 444,
	530, 0, 445, 0, 446, 447, 448, 449, 426, 450,
	455, 531, 451, 452, 453, 454, 532, 0, 457, 458,
	0, 456, 0, 459, 460, 461, 462, 463, 298, 464,
	0, 465, 533, 534, 535, 536, 0, 472, 0, 466,
	467, 537, 468, 538, 0, 469, 470, 471, 0, 473,
	474, 0, 0, 475, 476, 477, 479, 480, 478, 481,
	0, 482, 0, 0, 483, 484, 485, 539, 540, 541,
	0, 487, 486, 542, 549, 0, 226, 0, 488, 489,
	543, 490, 491, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 493, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 494,
	495, 0, 496, 247, 497, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 498, 499, 500, 0, 254,
	255, 501, 0, 0, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 502, 503, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 0, 0, 285, 286, 287, 0, 288,
	289, 0, 290, 291, 0, 292, 293, 504, 294, 295,
	297, 299, 296, 300, 301, 302, 303, 505, 506, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 306, 507,
	0, 0, 0, 307, 0, 308, 0, 0, 0, 309,
	310, 508, 509, 311, 312, 0, 313, 510, 0, 511,
	314, 0, 315, 316, 317, 318, 319, 512, 513, 514,
	372, 0, 320, 321, 0, 322, 323, 324, 325, 0,
	0, 0, 0, 326, 327, 329, 0, 0, 328, 515,
	516, 0, 517, 0, 330, 0, 518, 0, 331, 332,
	333, 0, 334, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 341, 340, 0, 342, 519, 0, 343, 344,
	0, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	351, 0, 352, 353, 355, 357, 354, 356, 361, 358,
	359, 360, 363, 0, 362, 0, 364, 365, 368, 369,
	367, 0, 366, 0, 0, 0, 370, 0, 520, 371,
	521, 373, 374, 0, 0, 375, 0, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 522, 0, 382, 0,
	523, 383, 384, 376, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 393, 524, 525, 526, 394, 527, 395,
	396, 0, 397, 0, 398, 399, 400, 401, 402, 403,
	404, 528, 405, 406, 0, 0, 0, 0, 0, 0,
	407, 0, 409, 410, 411, 408, 412, 413, 414, 415,
	0, 416, 417, 0, 418, 419, 420, 421, 529, 422,
	0, 423, 427, 428, 429, 430, 431, 432, 433, 0,
	435, 436, 434, 437, 438, 439, 0, 440, 424, 425,
	441, 442, 0, 443, 444, 530, 0, 445, 0, 446,
	447, 448, 449, 426, 450, 455, 531, 451, 452, 453,
	454, 532, 0, 457, 458, 0, 456, 0, 459, 460,
	461, 462, 463, 298, 464, 0, 465, 533, 534, 535,
	536, 0, 472, 0, 466, 467, 537, 468, 538, 0,
	469, 470, 471, 0, 473, 474, 0, 0, 475, 476,
	477, 479, 480, 478, 481, 0, 482, 0, 0, 483,
	484, 485, 539, 540, 541, 226, 487, 486, 542, 0,
	0, 0, 0, 488, 489, 543, 490, 491, 492, 0,
	0, 0, 232, 233, 234, 235, 236, 237, 0, 238,
	239, 0, 0, 0, 0, 0, 493, 0, 0, 0,
	0, 240, 241, 243, 242, 244, 245, 246, 494, 495,
	0, 496, 247, 497, 0, 248, 249, 250, 251, 252,
	0, 0, 0, 253, 498, 499, 500, 0, 254, 255,
	501, 0, 0, 0, 256, 257, 258, 259, 260, 261,
	262, 0, 0, 264, 265, 266, 263, 0, 267, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 0, 0, 274, 275, 276, 277, 0,
	278, 502, 503, 0, 282, 279, 280, 0, 283, 281,
	0, 284, 0, 0, 285, 286, 287, 0, 288, 289,
	0, 290, 291, 0, 292, 293, 504, 294, 295, 297,
	299, 296, 300, 301, 302, 303, 505, 506, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 306, 507, 0,
	0, 0, 307, 0, 308, 0, 0, 0, 309, 310,
	508, 509, 311, 312, 0, 313, 510, 0, 511, 314,
	0, 315, 316, 317, 318, 319, 512, 513, 514, 372,
	0, 320, 321, 0, 322, 323, 324, 325, 0, 0,
	0, 0, 326, 327, 329, 0, 0, 328, 515, 516,
	0, 517, 0, 330, 0, 518, 0, 331, 332, 333,
	0, 334, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 341, 340, 0, 342, 519, 0, 343, 344, 0,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 351,
	0, 352, 353, 355, 357, 354, 356, 361, 358, 359,
	360, 363, 0, 362, 0, 364, 365, 368, 369, 367,
	0, 366, 0, 0, 0, 370, 0, 520, 371, 521,
	373, 374, 0, 0, 375, 0, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 522, 0, 382, 0, 523,
	383, 384, 376, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 393, 524, 525, 526, 394, 527, 395, 396,
	0, 397, 0, 398, 399, 400, 401, 402, 403, 404,
	528, 405, 406, 0, 0, 0, 0, 0, 0, 407,
	0, 409, 410, 411, 408, 412, 413, 414, 415, 0,
	416, 417, 0, 418, 419, 420, 421, 529, 422, 0,
	423, 427, 428, 429, 430, 431, 432, 433, 0, 435,
	436, 434, 437, 438, 439, 0, 440, 424, 425, 441,
	442, 0, 443, 444, 530, 0, 445, 0, 446, 447,
	448, 449, 426, 450, 455, 531, 451, 452, 453, 454,
	532, 0, 457, 458, 0, 456, 0, 459, 460, 461,
	462, 463, 298, 464, 0, 465, 533, 534, 535, 536,
	0, 472, 0, 466, 467, 537, 468, 538, 0, 469,
	470, 471, 0, 473, 474, 0, 0, 475, 476, 477,
	479, 480, 478, 481, 0, 482, 0, 0, 483, 484,
	485, 539, 540, 541, 226, 487, 486, 542, 0, 0,
	0, 0, 488, 489, 543, 490, 491, 492, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 493, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 494, 495, 0,
	496, 247, 497, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 498, 499, 500, 0, 254, 255, 501,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	502, 503, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 0, 0, 285, 286, 287, 0, 288, 289, 0,
	290, 291, 0, 292, 293, 504, 294, 295, 297, 299,
	296, 300, 301, 302, 303, 505, 506, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 306, 507, 0, 0,
	0, 307, 0, 308, 0, 0, 0, 309, 310, 508,
	509, 311, 312, 0, 313, 510, 0, 511, 314, 0,
	315, 316, 317, 318, 319, 2926, 513, 514, 372, 0,
	320, 321, 0, 322, 323, 324, 325, 0, 0, 0,
	0, 326, 327, 329, 0, 0, 328, 515, 516, 0,
	517, 0, 330, 0, 518, 0, 331, 332, 333, 0,
	334, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	341, 340, 0, 342, 519, 0, 343, 344, 0, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 351, 0,
	352, 353, 355, 357, 354, 356, 361, 358, 359, 360,
	363, 0, 362, 0, 364, 365, 368, 369, 367, 0,
	366, 0, 0, 0, 370, 0, 520, 371, 521, 373,
	374, 0, 0, 375, 0, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 522, 0, 382, 0, 523, 383,
	384, 376, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 393, 524, 525, 526, 394, 527, 395, 396, 0,
	397, 0, 398, 399, 400, 401, 402, 403, 404, 528,
	405, 406, 0, 0, 0, 0, 0, 0, 407, 0,
	409, 410, 411, 408, 412, 413, 414, 415, 0, 416,
	417, 0, 418, 419, 420, 421, 529, 422, 0, 423,
	427, 428, 429, 430, 431, 432, 433, 0, 435, 436,
	434, 437, 438, 439, 0, 440, 424, 425, 441, 442,
	0, 443, 444, 530, 0, 445, 0, 446, 447, 448,
	449, 426, 450, 455, 531, 451, 452, 453, 454, 532,
	0, 457, 458, 0, 456, 0, 459, 460, 461, 462,
	463, 298, 464, 0, 465, 533, 534, 535, 536, 0,
	472, 0, 466, 467, 537, 468, 538, 0, 469, 470,
	471, 0, 473, 474, 0, 0, 475, 476, 477, 479,
	480, 478, 481, 0, 482, 0, 0, 483, 484, 485,
	539, 540, 541, 226, 487, 486, 542, 0, 0, 0,
	0, 488, 489, 543, 490, 491, 492, 0, 0, 0,
	232, 233, 234, 235, 236, 237, 0, 238, 239, 0,
	0, 0, 0, 0, 493, 0, 0, 0, 0, 240,
	241, 243, 242, 244, 245, 246, 494, 495, 0, 496,
	247, 497, 0, 248, 249, 250, 251, 252, 0, 0,
	0, 253, 498, 499, 500, 0, 254, 255, 501, 0,
	0, 0, 256, 257, 258, 259, 260, 261, 262, 0,
	0, 264, 265, 266, 263, 0, 267, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 0, 0, 274, 275, 276, 277, 0, 278, 502,
	503, 0, 282, 279, 280, 0, 283, 281, 0, 284,
	0, 0, 285, 286, 287, 0, 288, 289, 0, 290,
	291, 0, 292, 293, 504, 294, 295, 297, 299, 296,
	300, 301, 302, 303, 505, 506, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 306, 507, 0, 0, 0,
	307, 0, 308, 0, 0, 0, 309, 310, 508, 509,
	311, 312, 0, 313, 510, 0, 511, 314, 0, 315,
	316, 317, 318, 319, 2888, 513, 514, 372, 0, 320,
	321, 0, 322, 323, 324, 325, 0, 0, 0, 0,
	326, 327, 329, 0, 0, 328, 515, 516, 0, 517,
	0, 330, 0, 518, 0, 331, 332, 333, 0, 334,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 341,
	340, 0, 342, 519, 0, 343, 344, 0, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 351, 0, 352,
	353, 355, 357, 354, 356, 361, 358, 359, 360, 363,
	0, 362, 0, 364, 365, 368, 369, 367, 0, 366,
	0, 0, 0, 370, 0, 520, 371, 521, 373, 374,
	0, 0, 375, 0, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 522, 0, 382, 0, 523, 383, 384,
	376, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	393, 524, 525, 526, 394, 527, 395, 396, 0, 397,
	0, 398, 399, 400, 401, 402, 403, 404, 528, 405,
	406, 0, 0, 0, 0, 0, 0, 407, 0, 409,
	410, 411, 408, 412, 413, 414, 415, 0, 416, 417,
	0, 418, 419, 420, 421, 529, 422, 0, 423, 427,
	428, 429, 430, 431, 432, 433, 0, 435, 436, 434,
	437, 438, 439, 0, 440, 424, 425, 441, 442, 0,
	443, 444, 530, 0, 445, 0, 446, 447, 448, 449,
	426, 450, 455, 531, 451, 452, 453, 454, 532, 0,
	457, 458, 0, 456, 0, 459, 460, 461, 462, 463,
	298, 464, 0, 465, 533, 534, 535, 536, 0, 472,
	0, 466, 467, 537, 468, 538, 0, 469, 470, 471,
	0, 473, 474, 0, 0, 475, 476, 477, 479, 480,
	478, 481, 0, 482, 0, 0, 483, 484, 485, 539,
	540, 541, 226, 487, 486, 542, 0, 0, 0, 0,
	488, 489, 543, 490, 491, 492, 0, 0, 0, 232,
	233, 234, 235, 236, 237, 0, 238, 239, 0, 0,
	0, 0, 0, 493, 0, 0, 0, 0, 240, 241,
	243, 242, 244, 245, 246, 494, 495, 0, 496, 247,
	497, 0, 248, 249, 250, 251, 252, 0, 0, 0,
	253, 498, 499, 500, 0, 254, 255, 501, 0, 0,
	0, 256, 257, 258, 259, 260, 261, 262, 0, 0,
	264, 265, 266, 263, 0, 267, 0, 268, 269, 270,
	0, 271, 0, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 276, 277, 0, 278, 502, 503,
	0, 282, 279, 280, 0, 283, 281, 0, 284, 0,
	0, 285, 286, 287, 0, 288, 289, 0, 290, 291,
	0, 292, 293, 504, 294, 295, 297, 299, 296, 300,
	301, 302, 303, 505, 506, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 306, 507, 0, 0, 0, 307,
	0, 308, 0, 0, 0, 309, 310, 508, 509, 311,
	312, 0, 313, 510, 0, 511, 314, 0, 315, 316,
	317, 318, 319, 2834, 513, 514, 372, 0, 320, 321,
	0, 322, 323, 324, 325, 0, 0, 0, 0, 326,
	327, 329, 0, 0, 328, 515, 516, 0, 517, 0,
	330, 0, 518, 0, 331, 332, 333, 0, 334, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 341, 340,
	0, 342, 519, 0, 343, 344, 0, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 351, 0, 352, 353,
	355, 357, 354, 356, 361, 358, 359, 360, 363, 0,
	362, 0, 364, 365, 368, 369, 367, 0, 366, 0,
	0, 0, 370, 0, 520, 371, 521, 373, 374, 0,
	0, 375, 0, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 522, 0, 382, 0, 523, 383, 384, 376,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 393,
	524, 525, 526, 394, 527, 395, 396, 0, 397, 0,
	398, 399, 400, 401, 402, 403, 404, 528, 405, 406,
	0, 0, 0, 0, 0, 0, 407, 0, 409, 410,
	411, 408, 412, 413, 414, 415, 0, 416, 417, 0,
	418, 419, 420, 421, 529, 422, 0, 423, 427, 428,
	429, 430, 431, 432, 433, 0, 435, 436, 434, 437,
	438, 439, 0, 440, 424, 425, 441, 442, 0, 443,
	444, 530, 0, 445, 0, 446, 447, 448, 449, 426,
	450, 455, 531, 451, 452, 453, 454, 532, 0, 457,
	458, 0, 456, 0, 459, 460, 461, 462, 463, 298,
	464, 0, 465, 533, 534, 535, 536, 0, 472, 0,
	466, 467, 537, 468, 538, 0, 469, 470, 471, 0,
	473, 474, 0, 0, 475, 476, 477, 479, 480, 478,
	481, 0, 482, 0, 0, 483, 484, 485, 539, 540,
	541, 226, 487, 486, 542, 0, 0, 0, 0, 488,
	489, 543, 490, 491, 492, 0, 0, 0, 232, 233,
	234, 235, 236, 237, 0, 238, 239, 0, 0, 0,
	0, 0, 493, 0, 0, 0, 0, 240, 241, 243,
	242, 244, 245, 246, 494, 495, 0, 496, 247, 497,
	0, 248, 249, 250, 251, 252, 0, 0, 0, 253,
	498, 499, 500, 0, 254, 255, 501, 0, 0, 0,
	256, 257, 258, 259, 260, 261, 262, 0, 0, 264,
	265, 266, 263, 0, 267, 0, 268, 269, 270, 0,
	271, 0, 272, 273, 0, 0, 0, 0, 0, 0,
	0, 274, 275, 276, 277, 0, 278, 502, 503, 0,
	282, 279, 280, 0, 283, 281, 0, 284, 0, 0,
	285, 286, 287, 0, 288, 289, 0, 290, 291, 0,
	292, 293, 504, 294, 295, 297, 299, 296, 300, 301,
	302, 303, 505, 506, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 306, 507, 0, 0, 0, 307, 0,
	308, 0, 0, 0, 309, 310, 508, 509, 311, 312,
	0, 313, 510, 0, 511, 314, 0, 315, 316, 317,
	318, 319, 2832, 513, 514, 372, 0, 320, 321, 0,
	322, 323, 324, 325, 0, 0, 0, 0, 326, 327,
	329, 0, 0, 328, 515, 516, 0, 517, 0, 330,
	0, 518, 0, 331, 332, 333, 0, 334, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 341, 340, 0,
	342, 519, 0, 343, 344, 0, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 351, 0, 352, 353, 355,
	357, 354, 356, 361, 358, 359, 360, 363, 0, 362,
	0, 364, 365, 368, 369, 367, 0, 366, 0, 0,
	0, 370, 0, 520, 371, 521, 373, 374, 0, 0,
	375, 0, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 522, 0, 382, 0, 523, 383, 384, 376, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 393, 524,
	525, 526, 394, 527, 395, 396, 0, 397, 0, 398,
	399, 400, 401, 402, 403, 404, 528, 405, 406, 0,
	0, 0, 0, 0, 0, 407, 0, 409, 410, 411,
	408, 412, 413, 414, 415, 0, 416, 417, 0, 418,
	419, 420, 421, 529, 422, 0, 423, 427, 428, 429,
	430, 431, 432, 433, 0, 435, 436, 434, 437, 438,
	439, 0, 440, 424, 425, 441, 442, 0, 443, 444,
	530, 0, 445, 0, 446, 447, 448, 449, 426, 450,
	455, 531, 451, 452, 453, 454, 532, 0, 457, 458,
	0, 456, 0, 459, 460, 461, 462, 463, 298, 464,
	0, 465, 533, 534, 535, 536, 0, 472, 0, 466,
	467, 537, 468, 538, 0, 469, 470, 471, 0, 473,
	474, 0, 0, 475, 476, 477, 479, 480, 478, 481,
	0, 482, 0, 0, 483, 484, 485, 539, 540, 541,
	226, 487, 486, 542, 0, 0, 0, 0, 488, 489,
	543, 490, 491, 492, 0, 0, 0, 232, 233, 234,
	235, 236, 237, 0, 238, 239, 0, 0, 0, 0,
	0, 493, 0, 0, 0, 0, 240, 241, 243, 242,
	244, 245, 246, 494, 495, 0, 496, 247, 497, 0,
	248, 249, 250, 251, 252, 0, 0, 0, 253, 498,
	499, 500, 0, 254, 255, 501, 0, 0, 0, 256,
	257, 258, 259, 260, 261, 262, 0, 0, 264, 265,
	266, 263, 0, 267, 0, 268, 269, 270, 0, 271,
	0, 272, 273, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 276, 277, 0, 278, 502, 503, 0, 282,
	279, 280, 0, 283, 281, 0, 284, 0, 0, 285,
	286, 287, 0, 288, 289, 0, 290, 291, 0, 292,
	293, 504, 294, 295, 297, 299, 296, 300, 301, 302,
	303, 505, 506, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 306, 507, 0, 0, 0, 307, 0, 308,
	0, 0, 0, 309, 310, 508, 509, 311, 312, 0,
	313, 510, 0, 511, 314, 0, 315, 316, 317, 318,
	319, 2818, 513, 514, 372, 0, 320, 321, 0, 322,
	323, 324, 325, 0, 0, 0, 0, 326, 327, 329,
	0, 0, 328, 515, 516, 0, 517, 0, 330, 0,
	518, 0, 331, 332, 333, 0, 334, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 341, 340, 0, 342,
	519, 0, 343, 344, 0, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 351, 0, 352, 353, 355, 357,
	354, 356, 361, 358, 359, 360, 363, 0, 362, 0,
	364, 365, 368, 369, 367, 0, 366, 0, 0, 0,
	370, 0, 520, 371, 521, 373, 374, 0, 0, 375,
	0, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	522, 0, 382, 0, 523, 383, 384, 376, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 393, 524, 525,
	526, 394, 527, 395, 396, 0, 397, 0, 398, 399,
	400, 401, 402, 403, 404, 528, 405, 406, 0, 0,
	0, 0, 0, 0, 407, 0, 409, 410, 411, 408,
	412, 413, 414, 415, 0, 416, 417, 0, 418, 419,
	420, 421, 529, 422, 0, 423, 427, 428, 429, 430,
	431, 432, 433, 0, 435, 436, 434, 437, 438, 439,
	0, 440, 424, 425, 441, 442, 0, 443, 444, 530,
	0, 445, 0, 446, 447, 448, 449, 426, 450, 455,
	531, 451, 452, 453, 454, 532, 0, 457, 458, 0,
	456, 0, 459, 460, 461, 462, 463, 298, 464, 0,
	465, 533, 534, 535, 536, 0, 472, 0, 466, 467,
	537, 468, 538, 0, 469, 470, 471, 0, 473, 474,
	0, 0, 475, 476, 477, 479, 480, 478, 481, 0,
	482, 0, 0, 483, 484, 485, 539, 540, 541, 226,
	487, 486, 542, 0, 0, 0, 0, 488, 489, 543,
	490, 491, 492, 0, 0, 0, 232, 233, 234, 235,
	236, 237, 0, 238, 239, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 240, 241, 243, 242, 244,
	245, 246, 494, 495, 0, 496, 247, 497, 0, 248,
	249, 250, 251, 252, 0, 0, 0, 253, 498, 499,
	500, 0, 254, 255, 501, 0, 0, 0, 256, 257,
	258, 259, 260, 261, 262, 0, 0, 264, 265, 266,
	263, 0, 267, 0, 268, 269, 270, 0, 271, 0,
	272, 273, 0, 0, 0, 0, 0, 0, 0, 274,
	275, 276, 277, 0, 278, 502, 503, 0, 282, 279,
	280, 0, 283, 281, 0, 284, 0, 0, 285, 286,
	287, 0, 288, 289, 0, 290, 291, 0, 292, 293,
	504, 294, 295, 297, 299, 296, 300, 301, 302, 303,
	505, 506, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 306, 507, 0, 0, 0, 307, 0, 308, 0,
	0, 0, 309, 310, 508, 509, 311, 312, 0, 313,
	510, 0, 511, 314, 0, 315, 316, 317, 318, 319,
	2462, 513, 514, 372, 0, 320, 321, 0, 322, 323,
	324, 325, 0, 0, 0, 0, 326, 327, 329, 0,
	0, 328, 515, 516, 0, 517, 0, 330, 0, 518,
	0, 331, 332, 333, 0, 334, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 341, 340, 0, 342, 519,
	0, 343, 344, 0, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 351, 0, 352, 353, 355, 357, 354,
	356, 361, 358, 359, 360, 363, 0, 362, 0, 364,
	365, 368, 369, 367, 0, 366, 0, 0, 0, 370,
	0, 520, 371, 521, 373, 374, 0, 0, 375, 0,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 522,
	0, 382, 0, 523, 383, 384, 376, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 393, 524, 525, 526,
	394, 527, 395, 396, 0, 397, 0, 398, 399, 400,
	401, 402, 403, 404, 528, 405, 406, 0, 0, 0,
	0, 0, 0, 407, 0, 409, 410, 411, 408, 412,
	413, 414, 415, 0, 416, 417, 0, 418, 419, 420,
	421, 529, 422, 0, 423, 427, 428, 429, 430, 431,
	432, 433, 0, 435, 436, 434, 437, 438, 439, 0,
	440, 424, 425, 441, 442, 0, 443, 444, 530, 0,
	445, 0, 446, 447, 448, 449, 426, 450, 455, 531,
	451, 452, 453, 454, 532, 0, 457, 458, 0, 456,
	0, 459, 460, 461, 462, 463, 298, 464, 0, 465,
	533, 534, 535, 536, 0, 472, 0, 466, 467, 537,
	468, 538, 0, 469, 470, 471, 0, 473, 474, 0,
	0, 475, 476, 477, 479, 480, 478, 481, 0, 482,
	0, 0, 483, 484, 485, 539, 540, 541, 226, 487,
	486, 542, 0, 0, 0, 0, 488, 489, 543, 490,
	491, 492, 0, 0, 0, 232, 233, 234, 235, 236,
	237, 0, 238, 239, 0, 0, 0, 0, 0, 493,
	0, 0, 0, 0, 240, 241, 243, 242, 244, 245,
	246, 494, 495, 0, 496, 247, 497, 0, 248, 249,
	250, 251, 252, 0, 0, 0, 253, 498, 499, 500,
	0, 254, 255, 501, 0, 0, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 264, 265, 266, 263,
	0, 267, 0, 268, 269, 270, 0, 271, 0, 272,
	273, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	276, 277, 0, 278, 502, 503, 0, 282, 279, 280,
	0, 283, 281, 0, 284, 0, 0, 285, 286, 287,
	0, 288, 289, 0, 290, 291, 0, 292, 293, 504,
	294, 295, 297, 299, 296, 300, 301, 302, 303, 505,
	506, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	306, 507, 0, 0, 0, 307, 0, 308, 0, 0,
	0, 309, 310, 508, 509, 311, 312, 0, 313, 510,
	0, 511, 314, 0, 315, 316, 317, 318, 319, 512,
	513, 514, 372, 0, 320, 321, 0, 322, 323, 324,
	325, 0, 0, 0, 0, 326, 327, 329, 0, 0,
	328, 515, 516, 0, 517, 0, 330, 0, 518, 0,
	331, 332, 333, 0, 334, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 341, 340, 0, 342, 519, 0,
	343, 344, 0, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 351, 0, 352, 353, 355, 357, 354, 356,
	361, 358, 359, 360, 363, 0, 362, 0, 364, 365,
	368, 369, 367, 0, 366, 0, 0, 0, 370, 0,
	520, 371, 521, 373, 374, 0, 0, 375, 0, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 522, 0,
	382, 0, 523, 383, 384, 376, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 393, 524, 525, 526, 394,
	527, 395, 396, 0, 397, 0, 398, 399, 400, 401,
	402, 403, 404, 528, 405, 406, 0, 0, 0, 0,
	0, 0, 407, 0, 409, 410, 411, 408, 412, 413,
	414, 415, 0, 416, 417, 0, 418, 419, 420, 421,
	529, 422, 0, 423, 580, 428, 429, 430, 431, 432,
	433, 0, 435, 436, 434, 437, 438, 439, 0, 440,
	424, 425, 441, 442, 0, 443, 444, 530, 0, 445,
	0, 446, 447, 448, 449, 426, 450, 455, 531, 451,
	452, 453, 454, 532, 0, 457, 458, 0, 456, 0,
	459, 460, 461, 462, 463, 298, 464, 0, 465, 533,
	534, 535, 536, 0, 472, 0, 466, 467, 537, 468,
	538, 0, 469, 470, 471, 0, 473, 474, 0, 0,
	475, 476, 477, 479, 480, 478, 481, 0, 482, 0,
	0, 483, 484, 485, 539, 540, 541, 226, 487, 486,
	542, 0, 0, 0, 0, 488, 489, 543, 490, 491,
	492, 0, 0, 0, 232, 233, 234, 235, 236, 237,
	0, 238, 239, 0, 0, 0, 0, 0, 493, 0,
	1890, 0, 0, 240, 241, 243, 242, 244, 245, 246,
	494, 495, 0, 496, 247, 497, 0, 248, 249, 250,
	251, 252, 0, 0, 0, 253, 498, 499, 500, 0,
	254, 255, 501, 0, 0, 0, 256, 257, 258, 259,
	260, 261, 262, 0, 0, 264, 265, 266, 263, 0,
	267, 0, 268, 269, 270, 0, 271, 0, 272, 273,
	0, 0, 0, 0, 0, 0, 0, 274, 275, 276,
	277, 0, 278, 502, 503, 0, 282, 279, 280, 0,
	283, 281, 0, 284, 0, 0, 285, 286, 287, 0,
	288, 289, 0, 290, 291, 0, 292, 293, 504, 294,
	295, 297, 299, 296, 300, 301, 302, 303, 505, 506,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 306,
	507, 0, 0, 0, 307, 0, 308, 0, 0, 0,
	309, 310, 508, 509, 311, 312, 0, 313, 510, 0,
	511, 314, 0, 315, 316, 317, 318, 319, 512, 513,
	514, 372, 0, 320, 321, 0, 322, 323, 324, 325,
	0, 0, 0, 0, 326, 327, 329, 0, 0, 328,
	515, 516, 0, 517, 0, 330, 0, 518, 0, 331,
	332, 333, 0, 334, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 341, 340, 0, 342, 519, 0, 343,
	344, 0, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 351, 0, 352, 353, 355, 357, 354, 356, 361,
	358, 359, 360, 363, 0, 362, 0, 364, 365, 368,
	369, 367, 0, 366, 0, 0, 0, 370, 0, 520,
	371, 521, 373, 374, 0, 0, 375, 0, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 522, 0, 382,
	0, 523, 383, 384, 376, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 393, 524, 525, 526, 394, 527,
	395, 396, 0, 397, 0, 398, 399, 400, 401, 402,
	403, 404, 528, 405, 406, 0, 0, 0, 0, 0,
	0, 407, 0, 409, 410, 411, 408, 412, 413, 414,
	415, 0, 416, 417, 0, 418, 419, 420, 421, 529,
	422, 0, 423, 427, 428, 429, 430, 431, 432, 433,
	0, 435, 436, 434, 437, 438, 439, 0, 0, 424,
	425, 441, 442, 0, 443, 444, 530, 0, 445, 0,
	446, 447, 448, 449, 426, 450, 455, 531, 451, 452,
	453, 454, 532, 0, 457, 458, 0, 456, 0, 459,
	460, 461, 462, 463, 298, 464, 0, 465, 533, 534,
	535, 536, 0, 472, 0, 466, 467, 537, 468, 538,
	0, 469, 470, 471, 0, 473, 474, 0, 0, 475,
	476, 477, 479, 480, 478, 481, 0, 482, 0, 0,
	483, 484, 485, 539, 540, 541, 226, 487, 486, 542,
	0, 0, 0, 0, 488, 489, 543, 490, 491, 492,
	0, 0, 0, 232, 233, 234, 235, 236, 237, 0,
	238, 239, 0, 0, 0, 0, 0, 493, 0, 0,
	0, 0, 240, 241, 243, 242, 244, 245, 246, 494,
	495, 0, 496, 247, 497, 0, 248, 249, 250, 251,
	252, 0, 0, 0, 253, 498, 499, 500, 0, 254,
	255, 501, 0, 0, 0, 256, 257, 258, 259, 260,
	261, 262, 0, 0, 264, 265, 266, 263, 0, 267,
	0, 268, 269, 270, 0, 271, 0, 272, 273, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 276, 277,
	0, 278, 502, 503, 0, 282, 279, 280, 0, 283,
	281, 0, 284, 0, 0, 285, 286, 287, 0, 288,
	289, 0, 290, 291, 0, 292, 293, 504, 294, 295,
	297, 299, 296, 300, 301, 302, 303, 505, 506, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 306, 507,
	0, 0, 0, 307, 0, 308, 0, 0, 0, 309,
	310, 508, 509, 311, 312, 0, 313, 510, 0, 511,
	314, 0, 315, 316, 317, 318, 319, 1313, 513, 514,
	372, 0, 320, 321, 0, 322, 323, 324, 325, 0,
	0, 0, 0, 326, 327, 329, 0, 0, 328, 515,
	516, 0, 517, 0, 330, 0, 518, 0, 331, 332,
	333, 0, 334, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 341, 340, 0, 342, 519, 0, 343, 344,
	0, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	351, 0, 352, 353, 355, 357, 354, 356, 361, 358,
	359, 360, 363, 0, 362, 0, 364, 365, 368, 369,
	367, 0, 366, 0, 0, 0, 370, 0, 520, 371,
	521, 373, 374, 0, 0, 375, 0, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 522, 0, 382, 0,
	523, 383, 384, 376, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 393, 524, 525, 526, 394, 527, 395,
	396, 0, 397, 0, 398, 399, 400, 401, 402, 403,
	404, 528, 405, 406, 0, 0, 0, 0, 0, 0,
	407, 0, 409, 410, 411, 408, 412, 413, 414, 415,
	0, 416, 417, 0, 418, 419, 420, 421, 529, 422,
	0, 423, 427, 428, 429, 430, 431, 432, 433, 0,
	435, 436, 434, 437, 438, 439, 0, 440, 424, 425,
	441, 442, 0, 443, 444, 530, 0, 445, 0, 446,
	447, 448, 449, 426, 450, 455, 531, 451, 452, 453,
	454, 532, 0, 457, 458, 0, 456, 0, 459, 460,
	461, 462, 463, 298, 464, 0, 465, 533, 534, 535,
	536, 0, 472, 0, 466, 467, 537, 468, 538, 0,
	469, 470, 471, 0, 473, 474, 0, 0, 475, 476,
	477, 479, 480, 478, 481, 0, 482, 0, 0, 483,
	484, 485, 539, 540, 541, 226, 487, 486, 542, 0,
	0, 0, 0, 488, 489, 543, 490, 491, 492, 0,
	0, 0, 232, 233, 234, 235, 236, 237, 0, 238,
	239, 0, 0, 0, 0, 0, 493, 0, 0, 0,
	0, 240, 241, 243, 242, 244, 245, 246, 494, 495,
	0, 496, 247, 497, 0, 248, 249, 250, 251, 252,
	0, 0, 0, 253, 498, 499, 500, 0, 254, 255,
	501, 0, 0, 0, 256, 257, 258, 259, 260, 261,
	262, 0, 0, 264, 265, 266, 263, 0, 267, 0,
	268, 269, 270, 0, 271, 0, 272, 273, 0, 0,
	0, 0, 0, 0, 0, 274, 275, 276, 277, 0,
	278, 502, 503, 0, 282, 279, 280, 0, 283, 281,
	0, 284, 0, 0, 285, 286, 287, 0, 288, 289,
	0, 290, 291, 0, 292, 293, 504, 294, 295, 297,
	299, 296, 300, 301, 302, 303, 505, 506, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 306, 507, 0,
	0, 0, 307, 0, 308, 0, 0, 0, 309, 310,
	508, 509, 311, 312, 0, 313, 510, 0, 511, 314,
	0, 315, 316, 317, 318, 319, 1253, 513, 514, 372,
	0, 320, 321, 0, 322, 323, 324, 325, 0, 0,
	0, 0, 326, 327, 329, 0, 0, 328, 515, 516,
	0, 517, 0, 330, 0, 518, 0, 331, 332, 333,
	0, 334, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 341, 340, 0, 342, 519, 0, 343, 344, 0,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 351,
	0, 352, 353, 355, 357, 354, 356, 361, 358, 359,
	360, 363, 0, 362, 0, 364, 365, 368, 369, 367,
	0, 366, 0, 0, 0, 370, 0, 520, 371, 521,
	373, 374, 0, 0, 375, 0, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 522, 0, 382, 0, 523,
	383, 384, 376, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 393, 524, 525, 526, 394, 527, 395, 396,
	0, 397, 0, 398, 399, 400, 401, 402, 403, 404,
	528, 405, 406, 0, 0, 0, 0, 0, 0, 407,
	0, 409, 410, 411, 408, 412, 413, 414, 415, 0,
	416, 417, 0, 418, 419, 420, 421, 529, 422, 0,
	423, 427, 428, 429, 430, 431, 432, 433, 0, 435,
	436, 434, 437, 438, 439, 0, 440, 424, 425, 441,
	442, 0, 443, 444, 530, 0, 445, 0, 446, 447,
	448, 449, 426, 450, 455, 531, 451, 452, 453, 454,
	532, 0, 457, 458, 0, 456, 0, 459, 460, 461,
	462, 463, 298, 464, 0, 465, 533, 534, 535, 536,
	0, 472, 0, 466, 467, 537, 468, 538, 0, 469,
	470, 471, 0, 473, 474, 0, 0, 475, 476, 477,
	479, 480, 478, 481, 0, 482, 0, 0, 483, 484,
	485, 539, 540, 541, 226, 487, 486, 542, 0, 0,
	0, 0, 488, 489, 543, 490, 491, 492, 0, 0,
	0, 232, 233, 234, 235, 236, 237, 0, 238, 239,
	0, 0, 0, 0, 0, 493, 0, 0, 0, 0,
	240, 241, 243, 242, 244, 245, 246, 494, 495, 0,
	496, 247, 497, 0, 248, 249, 250, 251, 252, 0,
	0, 0, 253, 498, 499, 500, 0, 254, 255, 501,
	0, 0, 0, 256, 257, 258, 259, 260, 261, 262,
	0, 0, 264, 265, 266, 263, 0, 267, 0, 268,
	269, 270, 0, 271, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 276, 277, 0, 278,
	502, 503, 0, 282, 279, 280, 0, 283, 281, 0,
	284, 0, 0, 285, 286, 287, 0, 288, 289, 0,
	290, 291, 0, 292, 293, 504, 294, 295, 297, 299,
	296, 300, 301, 302, 303, 505, 506, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 306, 507, 0, 0,
	0, 307, 0, 308, 0, 0, 0, 309, 310, 508,
	509, 311, 312, 0, 313, 510, 0, 511, 314, 0,
	315, 316, 317, 318, 319, 512, 513, 514, 372, 0,
	320, 321, 0, 322, 323, 324, 325, 0, 0, 0,
	0, 326, 327, 329, 0, 0, 328, 515, 516, 0,
	517, 0, 330, 0, 518, 0, 331, 332, 333, 0,
	334, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	341, 340, 0, 342, 519, 0, 343, 344, 0, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 351, 0,
	352, 353, 355, 357, 354, 356, 361, 358, 359, 360,
	363, 0, 362, 0, 364, 365, 368, 369, 367, 0,
	366, 0, 0, 0, 370, 0, 520, 371, 521, 373,
	374, 0, 0, 375, 0, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 522, 0, 382, 0, 523, 383,
	384, 376, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 393, 524, 525, 526, 394, 527, 395, 396, 0,
	397, 0, 398, 399, 400, 401, 402, 403, 404, 528,
	1004, 406, 0, 0, 0, 0, 0, 0, 407, 0,
	409, 410, 411, 408, 412, 413, 414, 415, 0, 416,
	417, 0, 418, 419, 420, 421, 529, 422, 0, 423,
	427, 428, 429, 430, 431, 432, 433, 0, 435, 436,
	434, 437, 438, 439, 0, 440, 424, 425, 441, 442,
	0, 443, 444, 530, 0, 445, 0, 446, 447, 448,
	449, 426, 450, 455, 531, 451, 452, 453, 454, 532,
	0, 457, 458, 0, 456, 0, 459, 460, 461, 462,
	463, 298, 464, 0, 465, 533, 534, 535, 536, 0,
	472, 0, 466, 467, 537, 468, 538, 0, 469, 470,
	471, 0, 473, 474, 0, 0, 475, 476, 477, 479,
	480, 478, 481, 0, 482, 0, 0, 483, 484, 485,
	539, 540, 541, 226, 487, 486, 542, 0, 0, 0,
	0, 488, 489, 543, 490, 491, 492, 0, 0, 0,
	232, 233, 234, 235, 236, 237, 0, 238, 239, 0,
	0, 0, 0, 0, 493, 0, 0, 0, 0, 240,
	241, 243, 242, 244, 245, 246, 494, 495, 0, 496,
	247, 497, 0, 248, 249, 250, 251, 252, 0, 0,
	0, 253, 498, 499, 500, 0, 254, 255, 501, 0,
	0, 0, 256, 257, 258, 259, 260, 261, 262, 0,
	0, 264, 265, 266, 263, 0, 267, 0, 268, 269,
	270, 0, 271, 0, 272, 273, 0, 0, 0, 0,
	0, 0, 0, 274, 275, 276, 277, 0, 278, 502,
	503, 0, 282, 279, 280, 0, 283, 281, 0, 284,
	0, 0, 285, 286, 287, 0, 288, 289, 0, 290,
	291, 0, 292, 293, 504, 294, 295, 297, 299, 296,
	300, 301, 302, 303, 505, 506, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 306, 507, 0, 0, 0,
	307, 0, 308, 0, 0, 0, 309, 310, 508, 509,
	311, 312, 0, 313, 510, 0, 511, 0, 0, 315,
	316, 317, 318, 319, 512, 513, 514, 372, 0, 320,
	321, 0, 322, 323, 324, 325, 0, 0, 0, 0,
	326, 327, 329, 0, 0, 328, 515, 516, 0, 517,
	0, 330, 0, 518, 0, 331, 332, 333, 0, 334,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 341,
	340, 0, 342, 519, 0, 343, 344, 0, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 351, 0, 352,
	353, 355, 357, 354, 356, 361, 358, 359, 360, 363,
	0, 362, 0, 364, 365, 368, 369, 367, 0, 366,
	0, 0, 0, 370, 0, 520, 371, 521, 373, 374,
	0, 0, 375, 0, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 522, 0, 382, 0, 523, 383, 384,
	376, 385, 386, 0, 388, 389, 390, 391, 0, 392,
	393, 524, 525, 526, 394, 527, 395, 396, 0, 397,
	0, 398, 399, 400, 401, 0, 403, 404, 528, 405,
	406, 0, 0, 0, 0, 0, 0, 407, 0, 409,
	410, 411, 408, 412, 413, 414, 415, 0, 416, 417,
	0, 418, 419, 420, 421, 529, 0, 0, 423, 427,
	428, 429, 430, 431, 432, 433, 0, 435, 436, 434,
	437, 438, 439, 0, 440, 424, 425, 441, 442, 0,
	443, 444, 530, 0, 445, 0, 446, 447, 448, 449,
	426, 450, 455, 531, 451, 452, 453, 454, 532, 0,
	457, 458, 0, 456, 0, 459, 460, 461, 462, 463,
	298, 464, 0, 465, 533, 534, 535, 536, 0, 472,
	0, 466, 467, 537, 468, 538, 0, 469, 470, 471,
	0, 473, 474, 0, 0, 475, 476, 477, 479, 480,
	478, 481, 0, 482, 0, 0, 483, 484, 485, 539,
	540, 541, 0, 487, 486, 542, 0, 0, 0, 0,
	488, 489, 543, 490, 491, 492, 1492, 1493, 0, 1525,
	1526, 1527, 1535, 1536, 1537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1528, 1523, 0,
	0, 0, 0, 0, 0, 1495, 0, 0, 0, 0,
	0, 0, 1541, 0, 0, 0, 0, 0, 0, 1492,
	1493, 0, 1525, 1526, 1527, 1535, 1536, 1537, 0, 0,
	0, 0, 0, 0, 0, 1494, 0, 0, 0, 0,
	1528, 1523, 0, 0, 0, 1514, 0, 0, 1495, 0,
	0, 0, 0, 1511, 0, 1541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1514, 0,
	0, 0, 0, 0, 0, 0, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1517, 1518, 1519, 1520, 0,
	0, 0, 0, 0, 0, 1500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1532, 0, 0, 1542, 1517, 1518,
	1519, 1520, 0, 1522, 1524, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1538, 0,
	1539, 0, 0, 0, 0, 0, 0, 1509, 1510, 0,
	0, 0, 0, 0, 0, 0, 0, 1532, 0, 0,
	1542, 0, 0, 1530, 0, 0, 1522, 1524, 0, 0,
	0, 0, 0, 0, 1515, 0, 0, 0, 0, 0,
	0, 1538, 0, 1539, 0, 0, 0, 0, 0, 0,
	1509, 1510, 0, 0, 0, 0, 0, 0, 1540, 0,
	0, 0, 0, 0, 0, 0, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 1529, 0, 1515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1529, 0,
	0, 0, 0, 0, 1521, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 0, 0, 1492, 1493, 0,
	1525, 1526, 1527, 1535, 1536, 1537, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1533, 0, 1521, 1528, 1523,
	0, 0, 0, 0, 0, 0, 1495, 0, 0, 0,
	0, 0, 0, 1541, 0, 0, 1516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1494, 0, 1533, 0,
	0, 0, 0, 0, 0, 0, 1514, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1531, 0, 0, 0, 1506, 1507, 1513, 1534,
	1512, 1508, 0, 1505, 1503, 1504, 1496, 1497, 1498, 1499,
	1501, 1502, 0, 0, 0, 0, 0, 0, 0, 0,
	2668, 0, 0, 0, 0, 0, 1517, 1518, 1519, 1520,
	0, 0, 0, 0, 0, 1531, 1500, 0, 0, 1506,
	1507, 1513, 1534, 1512, 1508, 0, 1505, 1503, 1504, 1496,
	1497, 1498, 1499, 1501, 1502, 0, 0, 0, 0, 0,
	0, 0, 0, 2667, 0, 1532, 0, 0, 1542, 0,
	0, 0, 0, 0, 1522, 1524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1538,
	0, 1539, 0, 0, 0, 0, 0, 0, 1509, 1510,
	0, 1492, 1493, 0, 1525, 1526, 1527, 1535, 1536, 1537,
	0, 0, 0, 0, 1530, 0, 0, 0, 0, 0,
	0, 0, 1528, 1523, 0, 1515, 0, 0, 0, 0,
	1495, 0, 0, 0, 0, 0, 0, 1541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1494, 0, 0, 0, 0, 0, 1529, 0, 0, 0,
	1514, 0, 0, 0, 0, 0, 0, 0, 1511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 0,
	1517, 1518, 1519, 1520, 0, 0, 0, 0, 0, 0,
	1500, 0, 0, 0, 0, 0, 1533, 0, 0, 0,
	0, 0, 0, 1492, 1493, 0, 1525, 1526, 1527, 1535,
	1536, 1537, 0, 0, 0, 0, 0, 0, 0, 1532,
	0, 0, 1542, 0, 1528, 1523, 0, 0, 1522, 1524,
	0, 0, 1495, 0, 0, 0, 0, 0, 0, 1541,
	0, 0, 0, 1538, 0, 1539, 0, 0, 0, 0,
	0, 0, 1509, 1510, 0, 0, 0, 0, 0, 0,
	0, 0, 1494, 0, 0, 0, 0, 0, 1530, 0,
	0, 0, 1514, 0, 0, 0, 0, 0, 0, 1515,
	1511, 0, 0, 1531, 0, 0, 0, 1506, 1507, 1513,
	1534, 1512, 1508, 0, 1505, 1503, 1504, 1496, 1497, 1498,
	1499, 1501, 1502, 1540, 0, 0, 0, 0, 0, 0,
	0, 2664, 0, 0, 0, 0, 0, 0, 0, 0,
	1529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1517, 1518, 1519, 1520, 0, 0, 0, 0,
	0, 0, 1500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1532, 0, 0, 1542, 0, 0, 0, 1516, 0,
	1522, 1524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1538, 0, 1539, 0, 0,
	1533, 0, 0, 0, 1509, 1510, 0, 1492, 1493, 0,
	1525, 1526, 1527, 1535, 1536, 1537, 0, 0, 0, 0,
	1530, 0, 0, 0, 0, 0, 0, 0, 1528, 1523,
	0, 1515, 0, 0, 0, 0, 1495, 0, 0, 0,
	0, 0, 0, 1541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1494, 0, 0, 0,
	0, 0, 1529, 0, 0, 0, 1514, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 1531, 0, 0,
	0, 1506, 1507, 1513, 1534, 1512, 1508, 0, 1505, 1503,
	1504, 1496, 1497, 1498, 1499, 1501, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 2663, 0, 0, 0, 0,
	0, 1521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 0, 0, 0, 1517, 1518, 1519, 1520,
	0, 0, 0, 0, 0, 0, 1500, 0, 0, 0,
	0, 0, 1533, 0, 0, 0, 0, 0, 0, 1492,
	1493, 0, 1525, 1526, 1527, 1535, 1536, 1537, 0, 0,
	0, 0, 0, 0, 0, 1532, 0, 0, 1542, 0,
	1528, 1523, 0, 0, 1522, 1524, 0, 0, 1495, 0,
	0, 0, 0, 0, 0, 1541, 0, 0, 0, 1538,
	0, 1539, 0, 0, 0, 0, 0, 0, 1509, 1510,
	0, 0, 0, 0, 0, 0, 0, 0, 1494, 0,
	0, 0, 0, 0, 1530, 0, 0, 0, 1514, 0,
	0, 0, 0, 0, 0, 1515, 1511, 0, 0, 1531,
	0, 0, 0, 1506, 1507, 1513, 1534, 1512, 1508, 0,
	1505, 1503, 1504, 1496, 1497, 1498, 1499, 1501, 1502, 1540,
	0, 0, 0, 0, 0, 0, 0, 2662, 0, 0,
	0, 0, 0, 0, 0, 0, 1529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1517, 1518,
	1519, 1520, 0, 0, 0, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1532, 0, 0,
	1542, 0, 0, 0, 1516, 0, 1522, 1524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1538, 0, 1539, 0, 0, 1533, 0, 0, 0,
	1509, 1510, 0, 1492, 1493, 0, 1525, 1526, 1527, 1535,
	1536, 1537, 0, 0, 0, 0, 1530, 0, 0, 0,
	0, 0, 0, 0, 1528, 1523, 0, 1515, 0, 0,
	0, 0, 1495, 0, 0, 0, 0, 0, 0, 1541,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1494, 0, 0, 0, 0, 0, 1529, 0,
	0, 0, 1514, 0, 0, 0, 0, 0, 0, 0,
	1511, 0, 0, 1531, 0, 0, 0, 1506, 1507, 1513,
	1534, 1512, 1508, 0, 1505, 1503, 1504, 1496, 1497, 1498,
	1499, 1501, 1502, 0, 0, 0, 0, 0, 0, 0,
	0, 2125, 0, 0, 0, 0, 0, 1521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 0, 0,
	0, 0, 1517, 1518, 1519, 1520, 0, 0, 0, 0,
	0, 0, 1500, 0, 0, 0, 0, 0, 1533, 0,
	0, 0, 0, 0, 0, 1492, 1493, 0, 1525, 1526,
	1527, 1535, 1536, 1537, 0, 0, 0, 0, 0, 0,
	0, 1532, 0, 0, 1542, 0, 1528, 1523, 0, 0,
	1522, 1524, 0, 0, 1495, 0, 0, 0, 0, 0,
	0, 1541, 0, 0, 0, 1538, 0, 1539, 0, 0,
	0, 0, 0, 0, 1509, 1510, 0, 0, 0, 0,
	0, 0, 0, 0, 1494, 0, 0, 0, 0, 0,
	1530, 0, 0, 0, 1514, 0, 0, 0, 0, 0,
	0, 1515, 1511, 0, 0, 1531, 0, 0, 0, 1506,
	1507, 1513, 1534, 1512, 1508, 0, 1505, 1503, 1504, 1496,
	1497, 1498, 1499, 1501, 1502, 1540, 0, 0, 0, 3740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1517, 1518, 1519, 1520, 0, 0,
	0, 0, 0, 0, 1500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1532, 0, 0, 1542, 0, 0, 0,
	1516, 0, 1522, 1524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1538, 0, 1539,
	0, 0, 1533, 0, 0, 0, 1509, 1510, 0, 1492,
	1493, 0, 1525, 1526, 1527, 1535, 1536, 1537, 0, 0,
	0, 0, 1530, 0, 0, 0, 0, 0, 0, 0,
	1528, 1523, 0, 1515, 0, 0, 0, 0, 1495, 0,
	0, 0, 0, 0, 0, 1541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1494, 0,
	0, 0, 0, 0, 1529, 0, 0, 0, 1514, 0,
	0, 0, 0, 0, 0, 0, 1511, 0, 0, 1531,
	0, 0, 0, 1506, 1507, 1513, 1534, 1512, 1508, 0,
	1505, 1503, 1504, 1496, 1497, 1498, 1499, 1501, 1502, 0,
	0, 0, 0, 3736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 0, 0, 0, 0, 1517, 1518,
	1519, 1520, 0, 0, 0, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 1533, 0, 0, 0, 0, 0,
	0, 1492, 1493, 0, 1525, 1526, 1527, 1535, 1536, 1537,
	0, 0, 0, 0, 0, 0, 0, 1532, 0, 0,
	1542, 0, 1528, 1523, 0, 0, 1522, 1524, 0, 0,
	1495, 0, 0, 0, 0, 0, 0, 1541, 0, 0,
	0, 1538, 0, 1539, 0, 0, 0, 0, 0, 0,
	1509, 1510, 0, 0, 0, 0, 0, 0, 0, 0,
	1494, 0, 0, 0, 0, 0, 1530, 0, 0, 0,
	1514, 0, 0, 0, 0, 0, 0, 1515, 1511, 0,
	0, 1531, 0, 0, 0, 1506, 1507, 1513, 1534, 1512,
	1508, 0, 1505, 1503, 1504, 1496, 1497, 1498, 1499, 1501,
	1502, 1540, 0, 0, 0, 3647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1517, 1518, 1519, 1520, 0, 0, 0, 0, 0, 0,
	1500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1532,
	0, 0, 1542, 0, 0, 0, 1516, 0, 1522, 1524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1538, 0, 1539, 0, 0, 1533, 0,
	0, 0, 1509, 1510, 0, 1492, 1493, 0, 1525, 1526,
	1527, 1535, 1536, 1537, 0, 0, 0, 0, 1530, 0,
	0, 0, 0, 0, 0, 0, 1528, 1523, 0, 1515,
	0, 0, 0, 0, 1495, 0, 0, 0, 0, 0,
	0, 1541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1494, 0, 0, 0, 0, 0,
	1529, 0, 0, 0, 1514, 0, 0, 0, 0, 0,
	0, 0, 1511, 0, 0, 1531, 0, 0, 0, 1506,
	1507, 1513, 1534, 1512, 1508, 0, 1505, 1503, 1504, 1496,
	1497, 1498, 1499, 1501, 1502, 0, 0, 0, 0, 3646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 1517, 1518, 1519, 1520, 0, 0,
	0, 0, 0, 0, 1500, 0, 0, 0, 0, 0,
	1533, 0, 0, 0, 0, 0, 0, 1492, 1493, 0,
	1525, 1526, 1527, 1535, 1536, 1537, 0, 0, 0, 0,
	0, 0, 0, 1532, 0, 0, 1542, 0, 1528, 1523,
	0, 0, 1522, 1524, 0, 0, 1495, 0, 0, 0,
	0, 0, 0, 1541, 0, 0, 0, 1538, 0, 1539,
	0, 0, 0, 0, 0, 0, 1509, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 1494, 0, 0, 0,
	0, 0, 1530, 0, 0, 0, 1514, 0, 0, 0,
	0, 0, 0, 1515, 1511, 0, 0, 1531, 0, 0,
	0, 1506, 1507, 1513, 1534, 1512, 1508, 0, 1505, 1503,
	1504, 1496, 1497, 1498, 1499, 1501, 1502, 1540, 0, 0,
	0, 3502, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1517, 1518, 1519, 1520,
	0, 0, 0, 0, 0, 0, 1500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1532, 0, 0, 1542, 0,
	0, 0, 1516, 0, 1522, 1524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1538,
	0, 1539, 0, 0, 1533, 0, 0, 0, 1509, 1510,
	0, 1492, 1493, 0, 1525, 1526, 1527, 1535, 1536, 1537,
	0, 0, 0, 0, 1530, 0, 0, 0, 0, 0,
	0, 0, 1528, 1523, 0, 1515, 0, 0, 0, 0,
	1495, 0, 0, 0, 0, 0, 0, 1541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1494, 0, 0, 0, 0, 0, 1529, 0, 0, 0,
	1514, 0, 0, 0, 0, 0, 0, 0, 1511, 0,
	0, 1531, 0, 0, 0, 1506, 1507, 1513, 1534, 1512,
	1508, 0, 1505, 1503, 1504, 1496, 1497, 1498, 1499, 1501,
	1502, 0, 0, 0, 0, 3378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 0,
	1517, 1518, 1519, 1520, 0, 0, 0, 0, 0, 0,
	1500, 0, 0, 0, 0, 0, 1533, 0, 0, 0,
	0, 0, 0, 1492, 1493, 0, 1525, 1526, 1527, 1535,
	1536, 1537, 0, 0, 0, 0, 0, 0, 0, 1532,
	0, 0, 1542, 0, 1528, 1523, 0, 0, 1522, 1524,
	0, 0, 1495, 0, 0, 0, 0, 0, 0, 1541,
	0, 0, 0, 1538, 0, 1539, 0, 0, 0, 0,
	0, 0, 1509, 1510, 0, 0, 0, 0, 0, 0,
	0, 0, 1494, 0, 0, 0, 0, 0, 1530, 0,
	0, 0, 1514, 0, 0, 0, 0, 0, 0, 1515,
	1511, 0, 0, 1531, 0, 0, 0, 1506, 1507, 1513,
	1534, 1512, 1508, 0, 1505, 1503, 1504, 1496, 1497, 1498,
	1499, 1501, 1502, 1540, 0, 0, 0, 3324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1517, 1518, 1519, 1520, 0, 0, 0, 0,
	0, 0, 1500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1532, 0, 0, 1542, 0, 0, 0, 1516, 0,
	1522, 1524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1538, 0, 1539, 0, 0,
	1533, 0, 0, 0, 1509, 1510, 0, 1492, 1493, 0,
	1525, 1526, 1527, 1535, 1536, 1537, 0, 0, 0, 0,
	1530, 0, 0, 0, 0, 0, 0, 0, 1528, 1523,
	0, 1515, 0, 0, 0, 0, 1495, 0, 0, 0,
	0, 0, 0, 1541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1494, 0, 0, 0,
	0, 0, 1529, 0, 0, 0, 1514, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 1531, 0, 0,
	0, 1506, 1507, 1513, 1534, 1512, 1508, 0, 1505, 1503,
	1504, 1496, 1497, 1498, 1499, 1501, 1502, 0, 0, 0,
	0, 3323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 0, 0, 0, 1517, 1518, 1519, 1520,
	0, 0, 0, 0, 0, 0, 1500, 0, 0, 0,
	0, 0, 1533, 0, 0, 0, 0, 0, 0, 1492,
	1493, 0, 1525, 1526, 1527, 1535, 1536, 1537, 0, 0,
	0, 0, 0, 0, 0, 1532, 0, 0, 1542, 0,
	1528, 1523, 0, 0, 1522, 1524, 0, 0, 1495, 0,
	0, 0, 0, 0, 0, 1541, 0, 0, 0, 1538,
	0, 1539, 0, 0, 0, 0, 0, 0, 1509, 1510,
	0, 0, 0, 0, 0, 0, 0, 0, 1494, 0,
	0, 0, 0, 0, 1530, 0, 0, 0, 1514, 0,
	0, 0, 0, 0, 0, 1515, 1511, 0, 0, 1531,
	0, 0, 0, 1506, 1507, 1513, 1534, 1512, 1508, 0,
	1505, 1503, 1504, 1496, 1497, 1498, 1499, 1501, 1502, 1540,
	0, 0, 0, 3322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1517, 1518,
	1519, 1520, 0, 0, 0, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1532, 0, 0,
	1542, 0, 0, 0, 1516, 0, 1522, 1524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1538, 0, 1539, 0, 0, 1533, 0, 0, 0,
	1509, 1510, 0, 1492, 1493, 0, 1525, 1526, 1527, 1535,
	1536, 1537, 0, 0, 0, 0, 1530, 0, 0, 0,
	0, 0, 0, 0, 1528, 1523, 0, 1515, 0, 0,
	0, 0, 1495, 0, 0, 0, 0, 0, 0, 1541,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1494, 0, 0, 0, 0, 0, 1529, 0,
	0, 0, 1514, 0, 0, 0, 0, 0, 0, 0,
	1511, 0, 0, 1531, 0, 0, 0, 1506, 1507, 1513,
	1534, 1512, 1508, 0, 1505, 1503, 1504, 1496, 1497, 1498,
	1499, 1501, 1502, 0, 0, 0, 0, 3056, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 0, 0,
	0, 0, 1517, 1518, 1519, 1520, 0, 0, 0, 0,
	0, 0, 1500, 0, 0, 0, 0, 0, 1533, 0,
	0, 0, 0, 0, 0, 1492, 1493, 0, 1525, 1526,
	1527, 1535, 1536, 1537, 0, 0, 0, 0, 0, 0,
	0, 1532, 0, 0, 1542, 0, 1528, 1523, 0, 0,
	1522, 1524, 0, 0, 1495, 0, 0, 0, 0, 0,
	0, 1541, 0, 0, 0, 1538, 0, 1539, 0, 0,
	0, 0, 0, 0, 1509, 1510, 0, 0, 0, 0,
	0, 0, 0, 0, 1494, 0, 0, 0, 0, 0,
	1530, 0, 0, 0, 1514, 0, 0, 0, 0, 0,
	0, 1515, 1511, 0, 0, 1531, 0, 0, 0, 1506,
	1507, 1513, 1534, 1512, 1508, 0, 1505, 1503, 1504, 1496,
	1497, 1498, 1499, 1501, 1502, 1540, 0, 0, 0, 2660,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1517, 1518, 1519, 1520, 0, 0,
	0, 0, 0, 0, 1500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1532, 0, 0, 1542, 0, 0, 0,
	1516, 0, 1522, 1524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1538, 0, 1539,
	0, 0, 1533, 0, 0, 0, 1509, 1510, 0, 1492,
	1493, 0, 1525, 1526, 1527, 1535, 1536, 1537, 0, 0,
	0, 0, 1530, 0, 0, 0, 0, 0, 0, 0,
	1528, 1523, 0, 1515, 0, 0, 0, 0, 1495, 0,
	0, 0, 0, 0, 0, 1541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1494, 0,
	0, 0, 0, 0, 1529, 0, 0, 0, 1514, 0,
	0, 0, 0, 0, 0, 0, 1511, 0, 0, 1531,
	0, 0, 0, 1506, 1507, 1513, 1534, 1512, 1508, 0,
	1505, 1503, 1504, 1496, 1497, 1498, 1499, 1501, 1502, 0,
	0, 0, 0, 2659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 0, 0, 0, 0, 1517, 1518,
	1519, 1520, 0, 0, 0, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 1533, 0, 0, 0, 0, 0,
	0, 1492, 1493, 0, 1525, 1526, 1527, 1535, 1536, 1537,
	0, 0, 0, 0, 0, 0, 0, 1532, 0, 0,
	1542, 0, 1528, 1523, 0, 0, 1522, 1524, 0, 0,
	1495, 0, 0, 0, 0, 0, 0, 1541, 0, 0,
	0, 1538, 0, 1539, 0, 0, 0, 0, 0, 0,
	1509, 1510, 0, 0, 0, 0, 0, 0, 0, 0,
	1494, 0, 0, 0, 0, 0, 1530, 0, 0, 0,
	1514, 0, 0, 0, 0, 0, 0, 1515, 1511, 0,
	0, 1531, 0, 0, 0, 1506, 1507, 1513, 1534, 1512,
	1508, 0, 1505, 1503, 1504, 1496, 1497, 1498, 1499, 1501,
	1502, 1540, 0, 0, 0, 2658, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1517, 1518, 1519, 1520, 0, 0, 0, 0, 0, 0,
	1500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1532,
	0, 0, 1542, 0, 0, 0, 1516, 0, 1522, 1524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1538, 0, 1539, 0, 0, 1533, 0,
	0, 0, 1509, 1510, 0, 1492, 1493, 0, 1525, 1526,
	1527, 1535, 1536, 1537, 0, 0, 0, 0, 1530, 0,
	0, 0, 0, 0, 0, 0, 1528, 1523, 0, 1515,
	0, 0, 0, 0, 1495, 0, 0, 0, 0, 0,
	0, 1541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1494, 0, 0, 0, 0, 0,
	1529, 0, 0, 0, 1514, 0, 0, 0, 0, 0,
	0, 0, 1511, 0, 0, 1531, 0, 0, 0, 1506,
	1507, 1513, 1534, 1512, 1508, 0, 1505, 1503, 1504, 1496,
	1497, 1498, 1499, 1501, 1502, 0, 0, 0, 0, 2657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 1517, 1518, 1519, 1520, 0, 0,
	0, 0, 0, 0, 1500, 3853, 0, 0, 0, 0,
	1533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1532, 0, 0, 1542, 0, 0, 0,
	0, 0, 1522, 1524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1538, 0, 1539,
	0, 0, 0, 0, 0, 0, 1509, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1515, 0, 0, 0, 1531, 0, 0,
	0, 1506, 1507, 1513, 1534, 1512, 1508, 0, 1505, 1503,
	1504, 1496, 1497, 1498, 1499, 1501, 1502, 1540, 0, 2624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1492, 1493, 3852,
	1525, 1526, 1527, 1535, 1536, 1537, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1528, 1523,
	0, 0, 0, 1521, 2595, 0, 1495, 0, 0, 0,
	0, 0, 0, 1541, 0, 0, 0, 0, 0, 0,
	1492, 1493, 1516, 1525, 1526, 1527, 1535, 1536, 1537, 0,
	0, 0, 0, 0, 0, 0, 1494, 0, 0, 0,
	0, 1528, 1523, 0, 1533, 0, 1514, 0, 0, 1495,
	0, 0, 0, 0, 1511, 0, 1541, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1494,
	0, 0, 0, 0, 0, 2596, 0, 0, 0, 1514,
	0, 0, 0, 0, 0, 0, 0, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1517, 1518, 1519, 1520,
	0, 0, 0, 0, 0, 0, 1500, 0, 0, 0,
	0, 1531, 0, 0, 0, 1506, 1507, 1513, 1534, 1512,
	1508, 0, 1505, 1503, 1504, 1496, 1497, 1498, 1499, 1501,
	1502, 0, 0, 0, 0, 1532, 0, 0, 1542, 1517,
	1518, 1519, 1520, 0, 1522, 1524, 0, 0, 0, 1500,
	0, 2720, 0, 0, 2719, 0, 0, 0, 0, 1538,
	0, 1539, 0, 0, 0, 0, 0, 0, 1509, 1510,
	0, 0, 0, 0, 0, 0, 0, 0, 1532, 0,
	0, 1542, 0, 0, 1530, 0, 0, 1522, 1524, 0,
	0, 0, 0, 0, 0, 1515, 0, 0, 0, 0,
	0, 0, 1538, 0, 1539, 0, 0, 0, 0, 0,
	0, 1509, 1510, 0, 0, 0, 0, 0, 0, 1540,
	0, 0, 0, 0, 0, 0, 0, 1530, 0, 0,
	0, 0, 0, 0, 0, 0, 1529, 0, 1515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1529,
	0, 0, 0, 0, 0, 1521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2245, 0, 0, 1516, 0, 0, 0, 1492, 1493,
	0, 1525, 1526, 1527, 1535, 1536, 1537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1533, 0, 1521, 1528,
	1523, 0, 0, 0, 2244, 0, 0, 1495, 0, 0,
	0, 0, 0, 0, 1541, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1494, 0, 1533,
	0, 0, 0, 0, 0, 0, 0, 1514, 0, 0,
	0, 0, 0, 0, 0, 1511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1531, 0, 0, 0, 1506, 1507, 1513,
	1534, 1512, 1508, 0, 1505, 1503, 1504, 1496, 1497, 1498,
	1499, 1501, 1502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1517, 1518, 1519,
	1520, 0, 0, 0, 0, 0, 1531, 1500, 0, 0,
	1506, 1507, 1513, 1534, 1512, 1508, 0, 1505, 1503, 1504,
	1496, 1497, 1498, 1499, 1501, 1502, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1532, 0, 0, 1542,
	0, 0, 0, 0, 0, 1522, 1524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1538, 0, 1539, 0, 0, 0, 0, 0, 0, 1509,
	1510, 0, 1492, 1493, 0, 1525, 1526, 1527, 1535, 1536,
	1537, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	0, 0, 0, 1528, 1523, 0, 1515, 0, 0, 0,
	0, 1495, 0, 0, 0, 0, 0, 0, 1541, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1494, 0, 0, 0, 0, 0, 1529, 0, 0,
	0, 1514, 0, 0, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 1517, 1518, 1519, 1520, 0, 0, 0, 0, 0,
	0, 1500, 0, 0, 0, 0, 0, 1533, 0, 0,
	0, 0, 0, 0, 1492, 1493, 0, 1525, 1526, 1527,
	1535, 1536, 1537, 0, 0, 0, 0, 0, 0, 0,
	1532, 0, 0, 1542, 0, 1528, 1523, 0, 0, 1522,
	1524, 0, 0, 1495, 0, 0, 0, 0, 0, 0,
	1541, 0, 0, 0, 1538, 0, 1539, 0, 0, 0,
	0, 0, 0, 1509, 1510, 0, 0, 0, 0, 0,
	0, 0, 0, 1494, 0, 0, 0, 0, 0, 1530,
	0, 0, 0, 1514, 0, 0, 0, 0, 0, 0,
	1515, 1511, 0, 0, 1531, 0, 0, 0, 1506, 1507,
	1513, 1534, 1512, 1508, 0, 1505, 1503, 1504, 1496, 1497,
	1498, 1499, 1501, 1502, 1540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1529, 862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1517, 1518, 1519, 1520, 0, 0, 0,
	0, 0, 0, 1500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1521, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1532, 0, 0, 1542, 0, 0, 0, 1516,
	0, 1522, 1524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1538, 0, 1539, 0,
	0, 1533, 0, 0, 0, 1509, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1531, 0,
	0, 0, 1506, 1507, 1513, 1534, 1512, 1508, 0, 1505,
	1503, 1504, 1496, 1497, 1498, 1499, 1501, 1502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1521, 0, 0, 0, 0, 0, 0, 0,
	0, 1492, 1493, 0, 1525, 1526, 1527, 1535, 1536, 1537,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1528, 1523, 0, 0, 0, 0, 0, 0,
	1495, 0, 0, 1533, 0, 0, 0, 1541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1494, 0, 0, 0, 0, 0, 3037, 0, 0, 0,
	1514, 0, 0, 0, 0, 0, 0, 0, 1511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1531, 0, 0, 0, 1506, 1507, 1513, 1534, 1512, 1508,
	0, 1505, 1503, 1504, 1496, 1497, 1498, 1499, 1501, 1502,
	1517, 1518, 1519, 1520, 0, 0, 0, 0, 0, 0,
	1500, 0, 0, 0, 0, 2726, 0, 0, 0, 0,
	0, 0, 0, 0, 1492, 1493, 0, 1525, 1526, 1527,
	1535, 1536, 1537, 0, 0, 0, 0, 0, 0, 1532,
	0, 0, 1542, 0, 0, 1528, 1523, 0, 1522, 1524,
	2721, 0, 0, 1495, 0, 0, 0, 0, 0, 0,
	1541, 0, 0, 1538, 0, 1539, 0, 0, 0, 0,
	0, 0, 1509, 1510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1494, 0, 0, 0, 0, 1530, 0,
	0, 0, 0, 1514, 0, 0, 0, 0, 0, 1515,
	0, 1511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1517, 1518, 1519, 1520, 0, 0, 0,
	0, 0, 0, 1500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1532, 0, 0, 1542, 0, 0, 1516, 0,
	0, 1522, 1524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1538, 0, 1539, 0,
	1533, 0, 0, 0, 0, 1509, 1510, 0, 1492, 1493,
	0, 1525, 1526, 1527, 1535, 1536, 1537, 0, 0, 0,
	0, 1530, 0, 0, 0, 0, 0, 0, 0, 1528,
	1523, 0, 1515, 0, 0, 0, 0, 1495, 0, 0,
	0, 0, 0, 0, 1541, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1494, 0, 0,
	0, 0, 0, 1529, 0, 0, 0, 1514, 0, 0,
	0, 0, 0, 0, 0, 1511, 0, 1531, 0, 0,
	0, 1506, 1507, 1513, 1534, 1512, 1508, 0, 1505, 1503,
	1504, 1496, 1497, 1498, 1499, 1501, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 0, 0, 0, 0, 1517, 1518, 1519,
	1520, 0, 0, 0, 0, 0, 0, 1500, 0, 0,
	0, 0, 0, 1533, 0, 0, 0, 0, 0, 0,
	0, 1492, 1493, 0, 1525, 1526, 1527, 1535, 1536, 1537,
	0, 0, 0, 0, 0, 0, 1532, 0, 0, 1542,
	0, 0, 1528, 1523, 0, 1522, 1524, 2661, 0, 0,
	1495, 0, 0, 0, 0, 0, 0, 1541, 0, 0,
	1538, 0, 1539, 0, 0, 0, 0, 0, 0, 1509,
	1510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1494, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	1514, 0, 0, 0, 0, 0, 1515, 0, 1511, 0,
	1531, 0, 0, 0, 1506, 1507, 1513, 1534, 1512, 1508,
	0, 1505, 1503, 1504, 1496, 1497, 1498, 1499, 1501, 1502,
	1540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2688, 0, 0, 0,
	1517, 1518, 1519, 1520, 0, 0, 0, 0, 0, 0,
	1500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1532,
	0, 0, 1542, 0, 0, 1516, 0, 0, 1522, 1524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1538, 0, 1539, 0, 1533, 0, 0,
	0, 0, 1509, 1510, 0, 1492, 1493, 0, 1525, 1526,
	1527, 1535, 1536, 1537, 0, 0, 0, 0, 1530, 0,
	0, 0, 0, 0, 0, 0, 1528, 1523, 0, 1515,
	0, 0, 0, 0, 1495, 0, 0, 0, 0, 0,
	0, 1541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1494, 0, 0, 0, 0, 0,
	1529, 0, 0, 0, 1514, 0, 0, 0, 0, 0,
	0, 0, 1511, 0, 1531, 0, 0, 0, 1506, 1507,
	1513, 1534, 1512, 1508, 0, 1505, 1503, 1504, 1496, 1497,
	1498, 1499, 1501, 1502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 1517, 1518, 1519, 1520, 0, 0,
	0, 0, 0, 0, 1500, 0, 0, 0, 0, 0,
	1533, 0, 0, 0, 0, 0, 0, 1492, 1493, 0,
	1525, 1526, 1527, 1535, 1536, 1537, 0, 0, 0, 0,
	0, 0, 0, 1532, 0, 0, 1542, 0, 1528, 1523,
	0, 0, 1522, 1524, 0, 0, 1495, 0, 0, 0,
	0, 0, 0, 1541, 0, 0, 0, 1538, 0, 1539,
	0, 0, 0, 0, 0, 0, 1509, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 1494, 0, 0, 0,
	0, 0, 1530, 0, 0, 0, 1514, 0, 0, 0,
	0, 0, 0, 1515, 1511, 0, 0, 1531, 0, 0,
	0, 1506, 1507, 1513, 1534, 1512, 1508, 0, 1505, 1503,
	1504, 1496, 1497, 1498, 1499, 1501, 1502, 1540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1517, 1518, 1519, 1520,
	0, 0, 0, 0, 0, 0, 1500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1532, 0, 0, 1542, 0,
	0, 0, 1516, 0, 1522, 1524, 0, 0, 0, 1492,
	1493, 0, 1525, 1526, 1527, 1535, 1536, 1537, 0, 1538,
	0, 1539, 0, 0, 1533, 0, 0, 0, 1509, 1510,
	0, 1523, 0, 0, 0, 0, 0, 0, 1495, 0,
	0, 0, 0, 0, 1530, 1541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1514, 1540,
	0, 0, 0, 0, 0, 0, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1531, 0, 0, 0, 1506, 1507, 1513, 1534, 1512,
	1508, 0, 1505, 1503, 1504, 1496, 1497, 1498, 1499, 1501,
	1502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 0, 0, 1517, 1518,
	1519, 1520, 0, 0, 0, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1533, 1532, 0, 0,
	1542, 0, 0, 0, 0, 0, 1522, 1524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1538, 0, 1539, 0, 0, 0, 0, 0, 0,
	1509, 1510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1540, 0, 1531, 0, 0, 0, 1506, 1507, 1513,
	1534, 1512, 1508, 0, 1505, 1503, 1504, 1496, 1497, 1498,
	1499, 1501, 1502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1531, 0, 0, 0, 1506,
	1507, 1513, 1534, 1512, 1508, 0, 1505, 1503, 1504, 1496,
	1497, 1498, 1499, 1501, 1502,
}
var sqlPact = [...]int{

	9842, -1000, -1000, -1000, -1000, 216, -1000, -1000, 214, 213,
	201, 184, 178, 177, 173, 172, -1000, -1000, -1000, -1000,
	-1000, -1000, 170, -1000, -1000, 163, -1000, 161, 160, 158,
	157, -1000, 155, 154, 153, -1000, -1000, -1000, -1000, 151,
	149, 147, 65495, 65040, 65944, 1975, 79522, 69548, 1806, 58233,
	79067, 57778, 78612, 78157, 144, -1000, 77702, 143, 142, 141,
	-1000, 77247, -1000, 1639, -1000, 140, 2905, 47752, 138, 132,
	131, 2264, 122, -1000, 121, -1000, 10492, 1378, -1000, 120,
	-1000, 7941, 6371, 68644, 2440, 118, 117, 47296, 2436, 2515,
	-1000, -1000, 1838, -1000, -1000, 116, 115, 111, 109, 108,
	107, 106, 103, 102, -1000, 98, 97, 95, 94, 92,
	91, 90, -1000, 89, 87, 86, 85, 84, 82, 81,
	79, 78, 74, 73, 72, -1000, 11094, 1730, 1444, 1435,
	1433, 1425, 1424, 877, 69, 68, 67, 66, 64, 63,
	62, 61, -1000, 59, 58, 55, 54, 50, 46, 45,
	44, 148, 43, 42, 41, 29, 28, 27, 2212, -1000,
	1427, 744, 23238, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 84910, 79971, 23, -72,
	21, -1000, 2853, 917, 39540, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 275, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 446, 1929, 684, -1000,
	-1000, -1000, 76798, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1965, -3, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	683, -1000, 1963, 210, 1898, -1000, -1000, -1000, -1000, -1000,
	79971, -1000, -1000, 3198, 3197, 1770, 681, 76349, -1000, 1446,
	-1000, 832, 26124, -1000, 1161, -1000, 26124, 272, -1000, -1000,
	-1000, -1000, -1000, -1000, 3196, 3191, 3190, 3189, -1000, -1000,
	57323, 17436, 56868, 56413, 75894, 16971, 64585, 64130, 52787, -1000,
	-1000, -1000, 1232, -1000, -1000, -1000, -1000, -1000, -1000, -12,
	50927, 79971, -1000, 265, -1000, -1000, -1000, -1000, -1000, -1000,
	32962, 727, 32471, 854, 31980, 562, -1000, -1000, -1000, 3187,
	3186, 985, 3184, 2798, 84461, 1611, 3183, 1662, 1126, 915,
	3182, 3180, 3179, 3177, 3175, 3169, 1335, 75439, 2518, 74984,
	1675, 52322, 63675, 65944, 2276, 74529, 1305, 1248, -1000, -1000,
	-1000, -1000, 2631, 2513, 2504, 44587, -1000, 3168, 3167, 3166,
	3165, 3164, 84012, 1551, 3163, 2158, 3161, 3159, 3158, 3157,
	3156, 3155, 3154, 3153, -1000, 63220, 62765, 62310, 2926, 74074,
	61855, 51857, -1000, -1000, -1000, 41374, 5985, 4917, 73619, 42770,
	65944, 65944, -1000, -1000, 33441, 51, -1000, -1000, -1000, 42307,
	2469, -1000, 33441, 51, -1000, 79971, -1000, 2517, 1726, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1934,
	1396, 3056, 51392, 1860, 1245, 2850, 2626, 2589, 1304, 2198,
	2583, 2580, 2576, 2569, 2567, 1573, 2210, 435, 22747, 1423,
	1319, 2564, 2563, 3084, 1757, 1783, 55958, 3152, 3151, 2818,
	2554, 2552, 2467, -1000, -1000, -1000, -1000, 1258, -1000, -1000,
	59131, -1000, -1000, 1023, -1000, -1000, 1023, -1000, -1000, -1000,
	-1000, -1000, 1229, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1427, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1784, -1000, 1765, -1000, -1000, 2112, 2822,
	2822, 2822, 2886, 433, 415, -1000, 148, -1000, -1000, 91884,
	-1000, -1000, 33441, 33441, 33441, 33441, 33441, 33441, 33441, 1857,
	-1000, 677, -1000, -1000, 719, -1000, 676, 555, -1000, -1000,
	-1000, -1000, -1000, -1000, 675, -1000, -1000, -1000, -1000, -1000,
	-1000, 3063, -1000, 19813, -1000, -1000, -1000, 406, 674, 33441,
	-1000, -1000, 3096, 3095, 892, -1000, 264, 838, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2516, 671, 670, -1000, 669, 668, 667, 663, 660, -1000,
	-1000, -1000, 658, 657, 656, 655, 653, 643, 640, 639,
	-1000, 1759, -1000, -1000, -1000, -1000, -1000, -1000, 608, 605,
	605, 605, -1000, 911, -1000, -1000, -1000, 297, 603, 287,
	601, 599, 595, 638, 637, 633, 628, 626, 625, 623,
	622, 620, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 910, -1000,
	-1000, -1000, -1000, -16, 79971, -1000, 446, -16, -1000, -1000,
	619, -1000, 26603, 26603, 26603, -1000, -1000, 1962, 33441, -1000,
	2065, -1000, 1, 1, 754, 40448, -1000, 38614, 754, 285,
	728, 44131, -1000, 2455, -1000, -1000, 618, 260, -1000, -1000,
	-1000, -1000, 17899, 2449, 79971, 79971, 65944, 65944, 65944, 2734,
	33441, -1000, -1000, 48650, 79971, 66393, 3000, 49099, 48650, 79971,
	2498, -1000, -1000, -1000, 79971, -1000, 33441, -1000, 2999, 1434,
	53703, 2911, -27, -1000, -1000, -1000, -1000, -1000, -1000, 2122,
	2252, 1016, 1996, 1722, -1000, 26124, 2774, -1000, -1000, -1000,
	244, 17899, -1000, -1000, -1000, -1000, -1000, 2036, 2694, 1297,
	-1000, 1994, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1688, 2693, -1000, 1659, 2689, 1678, -1000, -1000, 1928,
	-1000, -1000, 2813, -1000, -1000, 1360, 2688, 2, -1000, -1000,
	2383, -1000, -1000, 864, 2686, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 42307, 50927, -20, -1000, -1000, -32,
	-1000, 16506, 91884, -1000, -1000, -1000, 91884, 788, -1000, -1000,
	2685, -1000, 91884, 787, -1000, -1000, 2681, -1000, -1000, -1000,
	3150, -1000, 3149, 2062, 3147, 3146, 3145, -1000, 1558, 1751,
	3144, -1000, 3142, -1000, -1000, -1000, -1000, -1000, -1000, 61400,
	1957, -1000, -1000, 60490, -1000, 2061, -1000, -1000, 60945, 914,
	-1000, 864, 2060, -1000, 883, -1000, 3141, 2918, 2301, 864,
	2056, -1000, -1000, -1000, -1000, -1000, 45485, -1000, 45485, -1000,
	45485, -1000, 1461, -1000, 83563, 1, 1, 3063, -1000, -1000,
	-1000, -1000, -1000, 2679, 3140, 3139, 3138, -1000, 79971, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 187, 2678, -1000,
	-1000, 187, 2677, -1000, 187, 2676, -1000, 68189, -1000, -1000,
	1955, 2671, -1000, 185, 2669, -1000, -1000, -48, 2668, -1000,
	-1000, -36, -1000, -1000, -1000, 917, -1000, 40904, -1000, 40904,
	73164, 53250, 848, 647, 46840, 91884, -1000, -73, -1000, -1000,
	53250, 42307, 91884, -1000, 53250, 60490, -1000, 72709, 60041, -1000,
	-1000, 1329, 2200, -1000, -1000, -1000, 848, 53250, 53250, 53250,
	-1000, 72254, -1000, -1000, 1828, 1549, 2815, 1813, 65944, -1000,
	1723, -1000, -1000, -1000, 2838, 2497, -1000, 48201, 67740, -1000,
	67291, -1000, 66842, -1000, 65944, -1000, 65944, -1000, 3137, 3135,
	3134, -1000, 3132, 2831, 91884, 2830, -1000, 2640, 1448, 1443,
	79971, -1000, -1000, 79971, -1000, 79971, -1000, -1000, -1000, -1000,
	-1000, 2119, -1000, -1000, -1000, -1000, 65944, -1000, -1000, -1000,
	-1000, -1000, -1000, 2493, -1000, 1539, -1000, 1568, -1000, 1317,
	-1000, -1000, 196, -1000, -1000, -27, -1000, 83114, -1000, 2112,
	-1000, 79971, -1000, 2142, 2481, 2489, 1342, 1984, 2209, -1000,
	31489, 2188, 35836, 1993, 148, -1000, -1000, 148, 148, 24196,
	-1000, -1000, 49099, 49099, 17899, 1239, 33441, 33441, 33441, 33441,
	33441, 33441, 33441, 33441, 33441, 33441, 33441, 33441, 33441, 33441,
	33441, 33441, 33441, 33441, 33441, 33441, 33441, 33441, 33441, 33441,
	33441, 33441, 33441, 33441, 33441, 33441, 33441, 33441, 33441, 33441,
	33441, 2132, 33441, 1199, 33441, 33441, 33441, 33441, 1889, -1000,
	-1000, 1710, 483, 1849, -1000, 3044, 3044, 3044, 1308, 1308,
	92238, 92238, 551, 3131, 719, -1000, 33441, -1000, 51, 33441,
	18364, -1000, -1000, 415, 10495, 2071, -1000, 414, 18855, -1000,
	-1000, -1000, 19813, 555, 30998, 33441, 904, 91884, -1000, -1000,
	1520, 3069, 16043, 2526, 2371, 617, 756, 749, 22256, 21765,
	21274, 20783, 746, 33441, 33441, 33441, 33441, 33441, 33441, 33441,
	33441, -1000, -1000, 3075, -1000, 3069, -1000, -1000, -1000, -1000,
	3069, 1238, 1215, 3069, -1000, 3069, 3069, 2560, 2560, 30519,
	30028, 29537, 36315, 29046, 33441, 20292, 28555, 28064, -1000, 79971,
	-16, 2997, 33441, 180, -1000, 90417, -1000, 180, 180, 616,
	-37, 91884, 2163, 2163, 39994, 2021, 1875, 1875, 1875, -1000,
	754, 12310, 754, 71352, 1880, 754, 754, 234, 263, 411,
	38160, 2065, 71352, 699, 614, 20, 19, 16, -1000, -1000,
	12, -2, -1000, -1000, 65944, 613, 18364, 17899, 229, 1352,
	-49, 2260, 2259, 2250, -1000, 2249, 1561, -55, 1184, -166,
	-1000, 282, -57, -1000, 1156, 225, 3069, -1000, -1000, -1000,
	-1000, -1000, 3130, 3129, -1000, 908, 612, 611, 362, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 608, 605, 605,
	605, -1000, 297, 603, 287, 601, 599, 595, -1000, -1000,
	-1000, -1000, 2448, -32, 66393, 797, -60, 1009, -27, -1000,
	-1000, -1000, 53703, 1023, -1000, 1565, -1000, -1000, -1000, -1000,
	-1000, -1000, 1261, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	892, -1000, -1000, -1000, -1000, -1000, -1000, 3060, 3053, -17,
	-1000, -1000, 17899, -1000, -29, 1502, -1000, 55503, 2047, 2820,
	2809, 1441, -1000, 1366, 2881, 59131, 2937, 2985, 694, -1000,
	2447, -1000, -1000, 831, 1523, 1174, 59131, 1659, -1000, 49099,
	-1000, 2278, 2879, 1228, 1255, 1228, 1228, 1200, -1000, 59131,
	1168, -1000, 1167, -1000, -30, 2936, 2932, 113, -1000, 2444,
	1166, -1000, -1000, 65944, 17899, 1346, 1333, 1543, 1163, -18,
	-1000, 2920, 2919, -1000, 1576, -1000, 53250, 750, -20, 50927,
	79971, 223, -1000, 33441, 51, 33441, 51, -1000, -1000, 2662,
	-1000, -1000, -1000, 3128, 1731, 2157, -1000, -1000, -1000, 593,
	2044, 2442, 79971, 2275, -21, 65944, -1000, 2659, 1659, 2043,
	-1000, -1000, 59586, -1000, 2653, 636, 3127, -1000, 82665, -1000,
	2821, 1137, 2646, 960, 567, 2996, -1000, 567, 45934, -1000,
	79971, -1000, -1000, 79971, -1000, -1000, -1000, 3125, -1000, 65944,
	-1000, -1000, 65944, -1000, 65944, -1000, 65944, 181, 2643, -1000,
	-1000, 79971, -1000, 65944, 65944, 53250, 53250, 4037, 54605, -62,
	-63, 410, -1000, 71805, 79971, 959, 55054, 79971, 2764, 848,
	42307, -1000, -65, -73, 848, 848, 750, -1000, 750, -1000,
	65944, 2487, -1000, 848, 848, 848, -1000, -1000, -1000, -1000,
	3123, 3122, -1000, -1000, -1000, 863, 65944, 79971, 65944, -1000,
	-1000, 79971, -1000, 79971, -1000, 863, 79971, 863, 79971, 863,
	79971, -1000, -1000, -1000, -1000, -1000, -1000, 51, 33441, 1516,
	-1000, 2485, -1000, 2483, -1000, 40, -1000, -1000, -1000, -1000,
	1762, 65944, 65944, 65944, 65944, 79971, 65944, -1000, 59131, -1000,
	2142, 2481, -1000, -1000, -1000, -1000, -1000, -1000, 1559, 1912,
	-1000, 2195, -1000, 1380, -1000, -1000, -1000, 91884, 36778, -1000,
	-1000, 91884, 1637, -1000, 35357, 34878, -1000, -1000, 1527, 65944,
	2251, -1000, 2251, -173, -1000, 90066, 2193, 65944, -1000, -1000,
	-1000, -1000, -1000, 822, 1157, 1157, 1231, 1231, 1231, 1231,
	2912, 851, 5438, 4982, 4936, 4936, 300, 300, 300, 300,
	300, 4936, 992, 1308, 1308, 992, 992, 992, 992, 992,
	1308, 1308, 1308, 4936, 4936, 4936, 92238, 92046, 10709, 33441,
	33441, 1160, 1707, 483, 9110, 33441, 4403, 4403, 4403, 4403,
	-1000, 1819, -1000, -1000, -1000, -1000, 2438, 592, 36315, 36315,
	-1000, -1000, -1000, -1000, 19334, 33441, -1000, -1000, -1000, -1000,
	27573, -1000, -1000, 89550, -262, 409, -119, 13, -1000, 33441,
	33441, 33441, 407, -1000, 222, 33441, 79971, -1000, 86756, 696,
	-75, -1000, -78, 1223, -1000, 33441, -1000, -1000, 1153, -1000,
	1144, 1128, 1072, -1000, 591, 402, -1000, 219, -1000, 1855,
	587, 586, 33441, -1000, -1000, -1000, -1000, -1000, 89388, -1000,
	-1000, 89174, -1000, -1000, 89012, -1000, -1000, 88798, -1000, -1000,
	-1000, 91670, 86542, 86380, 86166, 8121, 85858, 85815, -80, 399,
	-85, 398, 821, 818, 396, 395, 390, -86, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -87, 380, -1000, 2433,
	-119, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 379,
	-1000, 378, -1000, 91507, -119, 377, 5221, -1000, 36315, 36315,
	36315, -1000, 376, -1000, 90109, -1000, 91293, 27094, 27094, 27094,
	373, 91130, 33441, -119, -92, -1000, -93, -1000, -1000, 467,
	-94, 853, 26603, 39084, 17899, -1000, 853, 853, 33441, -1000,
	33441, 2226, -1000, -1000, -1000, 2216, 1644, 2163, 39994, -1000,
	-1000, -1000, -1000, 71352, -1000, 3063, 2405, -1000, 71352, -1000,
	-1000, 79971, 446, -1000, 71352, 71352, 17899, 754, -1000, 754,
	71352, 597, -1000, -1000, -1000, -1000, -1000, 370, 43223, 13,
	197, 17899, 848, -1000, 2274, 2274, 2274, 2274, -1000, -1000,
	79971, 3020, -1000, 1768, -1000, 49099, -1000, 715, 1067, 17899,
	-1000, -1000, -1000, 579, -1000, 3069, 3069, -1000, 3069, 79971,
	112, 26124, -1000, 1023, -1000, -1000, 1345, -1000, 1742, -1000,
	1204, -1000, -1000, -1000, -1000, 26124, -1000, 2022, 79971, 79971,
	65944, -1000, -1000, 2042, 82216, 2041, 49099, 79971, -1000, -1000,
	578, 576, 2183, 2181, 954, 79971, 79971, 2178, 81767, 81318,
	79971, 1812, 33441, 1981, 1999, 51, 51, -1000, -1000, 51,
	574, 1256, 65944, 65944, 65944, 1677, -1000, -1000, -1000, -1000,
	-1000, 58682, -1000, -1000, 3072, 3071, -1000, 1228, -1000, -1000,
	-1000, 1228, 1659, 1666, 65944, 79971, 1787, 51, 51, -1000,
	-1000, 51, 563, 17899, 1753, -1000, 2529, 79971, 3094, 65944,
	79971, 79971, 50478, 2819, 80869, 79971, 1576, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 50025, 965, 864, 2307, -1000, -1000,
	15580, 91884, -1000, 91884, -1000, 79971, -1000, 913, 79971, 55054,
	843, 2622, 45036, -32, 848, 53250, 65944, -21, 79971, -1000,
	1659, 2621, 446, 2040, -1000, -1000, 53250, 558, 3121, 3119,
	-1000, 1956, 2038, -1000, -1000, 80420, 2714, 757, 79971, 853,
	39994, 1712, -1000, 43678, 933, 79971, 1640, 75, -1000, -1000,
	-1000, 31, 79971, -1000, 3118, -1000, -1000, 187, 187, 187,
	-1000, 65944, 65944, 1955, -1000, 185, -1000, -48, -1000, -1000,
	4037, 4037, 848, -23, 557, -1000, 806, 802, 41844, 53250,
	-100, -1000, -1000, -1000, -1000, -1000, 65944, 79971, 665, 2299,
	79971, -101, -1000, 186, 556, -1000, -1000, -1000, 848, 2432,
	-1000, -1000, 882, -1000, 1314, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 0, -32, -32, -1000, 863, -1000,
	863, -1000, 863, -1000, 91884, -1000, 1499, 1483, 79971, -1000,
	17899, 79971, 65944, 17899, 65944, 2479, 2478, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 980, -1000, 1637, 1909, -1000,
	555, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2105, -1000, -26, 24196, 2001, -1000, -1000, 65944, -1, 33441,
	33441, 7556, 6870, 33441, 36315, 36315, -1000, 33441, 4359, -1000,
	-1000, -1000, -1000, -1000, 2430, 554, 33441, 49099, 4973, 4434,
	-1000, 369, 11631, 992, -1000, 33441, -1000, 366, 25645, -1000,
	90631, -50, -102, -1000, 12786, -119, -107, -1000, -1000, 713,
	-1000, 2710, -1000, 33441, 90793, 2079, 1846, 1636, 1526, 3069,
	3093, 15117, -1000, 46387, 889, 1891, 88636, -1000, -1000, -1000,
	-1000, 49099, 49099, 33441, 33441, -1000, 33441, 33441, 33441, -1000,
	-1000, -1000, 3069, 823, -1000, -1000, -1000, 823, -1000, -1000,
	1228, -1000, 1228, -1000, 33441, -1000, -1000, 2425, 33441, -1000,
	49099, 49099, 36315, 36315, 36315, 36315, 36315, 36315, 36315, 36315,
	36315, 36315, 36315, 36315, 36315, 36315, 36315, 36315, 36315, 36315,
	36315, 2143, 36315, 3040, 3040, 3040, -1000, 2476, 2425, 33441,
	33441, 49099, 364, 363, 360, -1000, 33441, -119, -1000, -1000,
	4037, 552, -1000, 2039, -1000, 2365, -1000, 33441, -1000, -103,
	-1000, 2065, -1000, -1000, 2365, 2365, -109, 91884, 39994, 39994,
	-1000, 548, 33441, 2202, -1000, -1000, 692, -263, -1000, 801,
	-1000, -1000, -1000, -1000, -1000, 446, -1000, -1000, -1000, 114,
	71352, 71352, 691, -1000, -110, -1000, -1000, -118, -1000, 2995,
	358, 17899, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-32, 1897, 3092, -1000, 3070, 705, 690, 76, 3069, 354,
	353, 352, -32, 79971, -1000, -27, -1000, -1000, -1000, 33441,
	-1000, -1000, 2817, 1070, 1063, -1000, 2616, -1000, 2034, -1000,
	938, -1000, 1504, -1000, 33441, 33441, 547, 546, 3117, 1734,
	3116, 956, 2612, 1955, 2611, 1955, -1000, -1000, 828, -1000,
	91884, 544, 539, -1000, -29, 1482, 881, -1000, -1000, 33441,
	33441, 70903, -1000, 386, 2813, -4, -1000, 1048, -1000, -1000,
	-1000, -1000, 1659, 1047, -1000, -1000, -1000, 867, -1000, -1000,
	33441, -1000, -30, 1044, 2925, 2031, 65944, 1040, -1000, 1039,
	-1000, -1000, -1000, -1000, -1000, -1000, 2915, 1955, 2607, 1049,
	-1000, -1000, -1000, 49562, -1000, 865, 2422, -1000, 3115, 65944,
	3114, 351, -123, -31, 49099, 2991, 1951, 565, 65944, 826,
	-1000, 3063, -1000, -1000, -1000, -1000, 65944, 2987, 2605, 864,
	3090, -1000, -1000, 65944, 2602, 1942, 2027, 2138, 757, 54156,
	-1000, 864, 1886, -46, -1000, 1640, 25154, 2811, -124, -1000,
	-1000, -1000, 853, 45934, 39994, 33441, 3113, -130, -1000, -1000,
	-1000, -1000, -1000, 181, -1000, -1000, -1000, -1000, -1000, 70454,
	70454, 53250, 53250, 53250, 848, 79971, 79971, 55054, -1000, 534,
	79971, 79971, 533, -1000, 79971, 79971, 3111, 53250, -1000, 51,
	-1000, 1895, 65944, 14654, -1000, -1000, -1000, -1000, -1000, 863,
	-1000, -1000, 1791, 1992, 1791, 1622, 1597, -1000, 1902, -1000,
	-1000, -1000, -1000, 2247, 2810, 17899, 2928, 4403, 33441, 33441,
	1130, 4106, 514, 4403, 33441, 33441, 49099, 5827, -131, 33441,
	33441, -1000, 33441, 689, 91884, 3088, 33441, 350, 346, -1000,
	-1000, -1000, 3065, -1000, -1000, -1000, 91884, 33441, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 345, -1000, 52, -1000, -1000,
	-1000, 85359, -1000, 33441, 342, 2877, -1000, 340, 338, 11326,
	470, 88422, 88260, 88046, 335, -1000, -1000, 333, 322, 91884,
	2476, 91884, -1000, -1000, 871, 871, 1187, 1187, 1187, 1187,
	3040, 495, 957, 432, 218, 218, 218, 337, 971, 971,
	218, 218, 218, 2398, 2148, 531, 5756, -1000, -1000, 91884,
	91884, 319, -1000, -1000, -1000, -119, 317, 4037, -1000, 2360,
	2872, 91884, -1000, 39994, 2360, 2360, -1000, -1000, 1644, 79971,
	91884, 39994, -1000, 2405, -1000, 13260, -1000, 17899, -1000, -1000,
	-1000, -1000, 3063, -1000, 43223, -1000, 530, -1000, 32, -1000,
	-1000, 687, 3110, 701, 17899, 316, -1000, -1000, -1000, -32,
	91884, 79971, 79971, 79971, 2601, -1000, 2901, -1000, 954, 87884,
	-132, -1000, 90066, 33441, 79971, -1000, -1000, 1672, 2218, 993,
	-1000, 2840, 79971, -1000, 79971, -1000, -1000, 79971, 79971, 65944,
	2575, -133, 91884, -33, -1000, 800, -1000, 1211, -1000, 14191,
	65944, 65944, 2543, -138, 17899, -1000, 3087, 3086, 2600, 2844,
	3085, 79971, -1000, 79971, 65944, 2763, -1000, -1000, -1000, 1905,
	53250, -1000, 446, -1000, 2293, -1000, 69093, 1948, 51, -1000,
	70001, 3107, 528, -1000, 1894, -1000, 598, 1659, 51, 65944,
	-1000, 315, -34, -1000, 947, 17899, 65944, 2598, 2144, 757,
	54156, -1000, 1137, 2209, -1000, -38, -1000, 526, 51, 1886,
	-1000, -46, 91884, -1000, 799, -1000, -1000, -139, -1000, -1000,
	307, -1000, 2761, 2760, -1000, 2389, 33441, 520, 519, 79971,
	2759, -1000, -1000, -140, -1000, 2057, -1000, -1000, -1000, -1000,
	-1000, 17899, 1497, -1000, 518, 517, -1000, -1000, -1000, -1000,
	2810, 4403, 4403, 33441, 33441, 33441, 4403, 5827, -148, -1000,
	4403, 4403, -119, -1000, -1000, 90631, -1000, -1000, -1000, 91884,
	-1000, 13728, 1793, -1000, 87670, -1000, 24196, -1000, -1000, 33441,
	33441, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 36315,
	2397, 516, 49099, -1000, -1000, 303, 886, 33441, 33441, 2065,
	886, 886, -1000, -153, -1000, -1000, -1000, 3063, 32, -1000,
	-1000, 3106, 17899, 695, -1000, 3105, -1000, -1000, -1000, -1000,
	-1000, 79971, -1000, 79971, -1000, 17899, 79971, 2373, 2013, -1000,
	-1000, 2172, 515, 36315, 65944, 786, -1000, 3014, 2377, 1664,
	33441, 2001, -154, -159, 2008, -1000, -1000, 2007, 33441, -1000,
	49099, 501, 1955, 1955, -160, -161, -1000, 33441, 1032, 79971,
	24675, -1000, 3104, 2813, -1000, -1000, 33441, 1028, -1000, -1000,
	-1000, 3080, 1955, 17899, -1000, 1955, 1955, 2844, 991, -47,
	499, -1000, 794, -1000, -48, 2977, 1787, 2322, -1000, -1000,
	-1000, -1000, 2170, -1000, -1000, 79971, 2151, 852, -167, -1000,
	791, 762, -1000, 55054, 843, 869, -1000, -1000, -1000, 446,
	-1000, 3079, 498, 79971, 1940, 484, 17899, -1000, 757, 54156,
	-1000, 2714, 1640, -1000, 2722, 79971, 2805, -1000, 2209, 483,
	-1000, 848, 481, 480, 2266, 2266, -168, 33441, 33441, -170,
	476, 848, -54, -1000, 768, 766, -1000, -1000, 65944, 65944,
	33441, 33441, -1000, 4403, 4403, 4403, -1000, 301, -1000, -1000,
	1886, 2870, -1000, -56, 87508, 87294, 5241, 36315, 49099, -175,
	-1000, -1000, 79971, 91884, -119, -1000, -1000, -1000, 471, -1000,
	3102, -1000, -1000, 1859, -1000, -1000, -1000, 79971, 2025, -1000,
	951, 33441, 5756, 474, 33441, -1000, 2971, -1000, 2287, 2409,
	2293, 473, -1000, -1000, -1000, -1000, -1000, 941, 1698, -1000,
	-1000, 91884, 2844, 33441, -1000, -1000, 469, 468, 91884, 457,
	753, 2395, -1000, -1000, -1000, 91884, 450, 2925, -1000, -1000,
	-1000, -1000, 1955, 65944, 1868, 1868, 53250, 51, 843, -1000,
	1848, 1948, 449, -1000, -1000, 1921, 2237, -1000, 70001, 37704,
	37704, 283, 2948, 869, -1000, 3037, -1000, 2931, -1000, 33441,
	-1000, 65944, 33441, 1938, 54156, -1000, 2138, -1000, 1142, -176,
	79971, 1640, -1000, -1000, 53250, 53250, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 941, -177, -178,
	-1000, 53250, -1000, 2057, -1000, 79971, -1000, 79971, -1000, -1000,
	-186, -189, -1000, 1854, 33441, 24196, -1000, -1000, 5241, -194,
	-1000, -112, -1000, 2929, -1000, -1000, -1000, -1000, 2590, 2358,
	87132, 2096, 79971, 86918, -1000, 2402, -1000, -1000, 1787, 79971,
	2293, 2349, 65944, 948, -195, 1791, 1791, 33441, 23717, 1836,
	33441, -1000, -1000, 2844, -1000, -196, -1000, -1000, 1921, 65944,
	79971, -1000, 2835, -1000, 2758, -1000, -1000, -1000, 2293, 51,
	-1000, -1000, 51, -203, 947, -205, 65944, -1000, 2144, 1431,
	-1000, 853, -1000, -1000, -206, -208, 1664, 941, 853, -215,
	-1000, -216, -217, -1000, -1000, 279, 34399, 34399, 34399, -119,
	-173, -1000, 79971, 448, 2534, 858, -1000, 1922, 1674, 278,
	962, -1000, -1000, 2377, -222, -1000, 856, 446, -1000, 33441,
	941, -224, -1000, 930, -225, -1000, 920, -227, -1000, 2394,
	-1000, -230, 1955, -1000, -1000, 445, -232, -1000, -1000, 2019,
	-1000, 1787, 852, -1000, 941, 442, 1664, 441, -1000, 45934,
	-1000, 848, 848, 2293, 1664, -1000, 848, -1000, -1000, -1000,
	2702, -1000, 37241, 1943, 1585, 89764, 2702, 2702, -1000, -1000,
	79971, 2897, -1000, 1933, 1924, 1294, -1000, -1000, -1000, -1000,
	-1000, -1000, 853, -1000, 2896, 2096, 91884, 2293, -1000, 1791,
	2319, -1000, 1791, 2390, -1000, 1800, -1000, -1000, 79971, -1000,
	79971, 1557, 1554, 3101, 843, 1921, 1664, 33441, 2293, 33441,
	-223, -1000, -1000, 1787, 2293, -1000, -1000, 1718, 3009, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 751, -1000, 2738,
	-1000, 970, 1738, 1738, -1000, 742, 1922, -1000, -1000, 440,
	-1000, 438, -1000, -235, -1000, -1000, 3100, -1000, 1921, -1000,
	2293, -240, 1787, -242, -1000, 853, 1787, 1578, -1000, -1000,
	1870, 33920, 33441, -1000, 3023, -1000, -1000, 2164, -1000, 33441,
	2377, 33441, 33441, 1949, -1000, -1000, 1787, 941, 853, 1664,
	-1000, 853, -1000, -1000, -1000, 91884, -1000, -1000, -1000, 91884,
	-1000, -243, -245, -1000, -1000, -1000, 853, 1664, -1000, 2293,
	-1000, 1787, 1014, -1000, 2293, 1787, -1000, 436, 1787, 853,
	33441, 853, -1000, -253, -1000, 1787, -1000,
}
var sqlPgo = [...]int{

	0, 3766, 3765, 3764, 3759, 3758, 3753, 3751, 3747, 3746,
	3744, 3740, 3736, 3735, 3732, 3731, 3730, 3726, 3725, 3724,
	3723, 3722, 3720, 3718, 3713, 3711, 3710, 3709, 3708, 3707,
	3706, 3705, 3704, 3703, 3702, 3701, 3700, 3698, 3696, 3695,
	3694, 3693, 3692, 3691, 3690, 3684, 3683, 3680, 37, 3677,
	3676, 3675, 3674, 3669, 3668, 3667, 3666, 3665, 3664, 3663,
	3662, 3661, 3660, 3659, 3658, 3657, 44, 3655, 222, 3652,
	3650, 3644, 3640, 3639, 3634, 3633, 3630, 3629, 3627, 3626,
	221, 3624, 129, 3621, 3617, 3612, 3610, 3609, 219, 3608,
	3607, 3606, 3604, 3601, 3599, 3598, 3597, 159, 199, 3596,
	42, 3595, 3594, 3593, 3592, 3589, 3588, 3585, 3584, 3583,
	3582, 203, 3580, 216, 3579, 3578, 3575, 3573, 3572, 3571,
	3570, 3569, 3566, 3564, 3561, 3555, 3551, 3549, 3547, 3545,
	3544, 3543, 3540, 3534, 3531, 3530, 3527, 3525, 3521, 3520,
	3519, 3516, 220, 157, 3515, 3514, 215, 214, 3512, 3511,
	3510, 3500, 3498, 100, 98, 24, 3497, 3495, 50, 46,
	99, 48, 3488, 8, 192, 217, 7920, 198, 3487, 3485,
	3483, 201, 153, 3482, 189, 3481, 3480, 3475, 3474, 77,
	72, 139, 142, 133, 130, 344, 3473, 3472, 80, 60,
	40, 32, 3469, 3468, 3467, 2831, 103, 3464, 213, 191,
	125, 3461, 3459, 3452, 1182, 3450, 33, 3447, 156, 61,
	101, 21, 94, 3443, 126, 20, 3437, 120, 38, 3434,
	113, 75, 63, 5859, 6877, 3433, 85, 49, 83, 123,
	194, 169, 162, 131, 174, 168, 138, 108, 3432, 231,
	3431, 2951, 56, 117, 3428, 3427, 3425, 69, 160, 78,
	3424, 3423, 53, 10, 16, 1, 140, 9, 93, 17,
	3422, 12, 3418, 3415, 3413, 3411, 26, 128, 3409, 226,
	3408, 55, 36, 11, 3406, 18, 173, 3405, 181, 102,
	3400, 3399, 208, 165, 151, 3397, 71, 185, 3394, 3390,
	3387, 3386, 3385, 105, 23, 104, 3383, 3382, 116, 197,
	155, 3380, 39, 3379, 135, 81, 106, 218, 97, 179,
	87, 180, 143, 183, 3378, 3377, 3376, 158, 3375, 3373,
	175, 136, 3372, 3370, 161, 227, 34, 64, 188, 54,
	150, 134, 3369, 164, 3367, 3365, 3364, 223, 144, 176,
	3, 2, 73, 95, 31, 15, 187, 118, 233, 90,
	3363, 4019, 1339, 66, 45, 3362, 111, 91, 58, 92,
	115, 210, 59, 3360, 3358, 1835, 3356, 3355, 3354, 3352,
	147, 3351, 3350, 3349, 119, 114, 146, 3347, 76, 74,
	13, 96, 247, 228, 89, 177, 190, 244, 3346, 148,
	3345, 47, 137, 3344, 154, 207, 3343, 3342, 145, 3341,
	124, 1617, 51, 127, 3337, 178, 3334, 3332, 3331, 3329,
	3326, 3325, 3324, 1486, 186, 3322, 3318, 3316, 112, 152,
	3314, 209, 258, 184, 82, 35, 3311, 70, 3581, 3304,
	1296, 193, 43, 3300, 41, 57, 0, 8711, 8128, 6063,
	7719, 3299, 2690, 3293, 3292, 3290, 170, 110, 3289, 3285,
	3281, 86, 3280, 65, 3279, 3276, 52, 3275, 14, 5,
	7, 22, 19, 281, 205, 3272, 3270, 84, 107, 121,
	3269, 224, 182, 3266, 3265, 3264, 3263, 79, 3262, 30,
	3260, 28, 3259, 3258, 27, 6, 25, 3255, 3253, 196,
	3252, 202, 3251, 3250, 3249, 2949, 109, 3248, 3247, 211,
	62, 3246, 206, 3245, 2904, 141, 172, 3244, 3242, 3235,
	132, 3234, 3228, 3221, 200, 3217, 3216, 29, 3212, 4,
	3205, 3204, 166, 2859, 3203, 3202, 67, 3201, 149,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 11,
	11, 7, 7, 8, 8, 8, 36, 36, 9, 9,
	9, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 15, 15, 26, 26, 16, 16, 28, 28,
	17, 17, 29, 29, 499, 499, 20, 31, 21, 32,
	14, 500, 500, 500, 500, 25, 22, 33, 23, 23,
	23, 23, 23, 156, 156, 156, 156, 19, 19, 27,
	27, 182, 182, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 498, 498, 184, 184, 183,
	178, 178, 501, 501, 185, 185, 185, 187, 187, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 402, 402,
	402, 508, 508, 508, 509, 509, 510, 510, 510, 510,
	510, 37, 37, 493, 493, 157, 157, 157, 159, 159,
	158, 158, 96, 96, 96, 97, 97, 98, 98, 160,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 84,
	84, 434, 434, 435, 435, 152, 152, 153, 153, 153,
	153, 154, 154, 155, 155, 155, 51, 39, 39, 39,
	39, 39, 39, 39, 40, 40, 40, 40, 41, 41,
	41, 41, 41, 41, 42, 42, 42, 42, 42, 42,
	49, 49, 49, 49, 143, 143, 52, 52, 52, 52,
	52, 52, 52, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 512, 512, 513, 513, 514, 514, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 63, 63, 268, 268,
	240, 240, 64, 64, 64, 65, 65, 66, 66, 53,
	53, 491, 491, 283, 283, 393, 393, 68, 68, 303,
	303, 69, 69, 69, 69, 69, 69, 70, 70, 70,
	70, 70, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 77, 77, 77, 78, 78, 78,
	75, 75, 75, 73, 73, 73, 72, 72, 72, 76,
	76, 76, 232, 232, 74, 74, 74, 284, 284, 79,
	79, 79, 79, 241, 80, 80, 80, 80, 80, 80,
	80, 80, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 395, 395, 81,
	81, 81, 363, 363, 85, 85, 85, 318, 318, 86,
	86, 86, 86, 86, 87, 87, 87, 87, 99, 99,
	99, 99, 495, 495, 276, 276, 198, 198, 198, 198,
	92, 92, 92, 92, 93, 93, 93, 94, 94, 148,
	148, 105, 105, 105, 105, 105, 104, 104, 104, 104,
	104, 104, 43, 43, 43, 44, 44, 45, 45, 46,
	46, 47, 47, 48, 48, 48, 48, 48, 107, 107,
	505, 505, 109, 106, 106, 106, 108, 108, 108, 108,
	110, 111, 111, 111, 111, 111, 111, 111, 111, 112,
	112, 427, 427, 292, 292, 425, 425, 443, 443, 426,
	426, 245, 245, 245, 245, 245, 246, 246, 246, 433,
	433, 433, 433, 433, 433, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 149,
	149, 150, 151, 151, 151, 151, 132, 132, 132, 142,
	142, 142, 142, 142, 142, 142, 135, 135, 135, 122,
	122, 114, 114, 114, 114, 114, 118, 118, 118, 118,
	118, 118, 118, 118, 115, 115, 124, 124, 124, 124,
	124, 119, 119, 121, 121, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 116, 116, 116, 116, 126, 126,
	126, 126, 325, 325, 325, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 138, 138, 138, 138, 138,
	138, 377, 377, 133, 133, 133, 133, 137, 137, 137,
	137, 308, 308, 130, 130, 130, 131, 131, 131, 136,
	136, 134, 134, 139, 139, 139, 139, 117, 117, 117,
	516, 516, 516, 140, 140, 129, 129, 141, 141, 141,
	141, 141, 141, 141, 141, 128, 128, 128, 127, 127,
	127, 127, 120, 492, 492, 489, 489, 489, 489, 489,
	489, 489, 490, 490, 494, 494, 90, 90, 90, 58,
	58, 58, 59, 59, 163, 163, 163, 163, 253, 253,
	253, 253, 161, 161, 162, 162, 60, 60, 517, 517,
	517, 502, 502, 502, 503, 503, 503, 503, 503, 503,
	247, 247, 248, 248, 343, 343, 343, 343, 343, 251,
	251, 251, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 254, 254, 186, 186, 186, 257, 258, 258, 255,
	255, 256, 256, 256, 260, 260, 259, 262, 262, 261,
	342, 452, 452, 454, 454, 454, 454, 454, 454, 454,
	456, 456, 456, 456, 456, 456, 456, 456, 456, 456,
	456, 518, 518, 450, 450, 450, 451, 446, 446, 447,
	447, 447, 447, 447, 249, 249, 250, 250, 250, 250,
	448, 449, 274, 274, 380, 453, 453, 455, 455, 457,
	519, 519, 519, 519, 519, 519, 520, 520, 520, 341,
	341, 340, 340, 266, 266, 458, 458, 458, 458, 459,
	459, 459, 459, 459, 462, 461, 460, 460, 460, 460,
	460, 62, 62, 62, 305, 305, 304, 304, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 145, 145, 201, 201, 57, 57, 57,
	12, 12, 12, 504, 504, 504, 61, 61, 61, 61,
	200, 200, 200, 200, 200, 200, 497, 497, 496, 496,
	202, 202, 522, 522, 67, 67, 67, 67, 67, 67,
	67, 396, 396, 397, 397, 56, 56, 56, 56, 56,
	326, 326, 324, 324, 323, 323, 273, 273, 379, 206,
	206, 179, 179, 179, 24, 18, 18, 34, 34, 35,
	35, 30, 30, 506, 506, 507, 507, 91, 91, 95,
	95, 95, 103, 103, 144, 144, 144, 144, 144, 144,
	144, 38, 38, 38, 38, 50, 50, 50, 50, 101,
	524, 524, 524, 102, 102, 102, 523, 523, 199, 199,
	337, 337, 338, 338, 525, 525, 339, 339, 339, 339,
	193, 192, 194, 194, 55, 55, 55, 188, 188, 189,
	189, 190, 190, 191, 191, 526, 526, 88, 88, 88,
	147, 147, 239, 239, 239, 333, 333, 333, 267, 267,
	212, 212, 336, 336, 334, 334, 334, 334, 302, 302,
	302, 146, 146, 281, 281, 294, 294, 295, 295, 390,
	390, 296, 100, 100, 166, 166, 164, 164, 164, 164,
	164, 164, 164, 164, 171, 171, 172, 172, 173, 173,
	174, 175, 175, 175, 175, 285, 285, 176, 176, 176,
	165, 165, 165, 167, 167, 167, 167, 167, 167, 167,
	170, 170, 170, 170, 177, 177, 177, 169, 169, 469,
	469, 469, 471, 471, 473, 473, 472, 472, 468, 468,
	470, 470, 521, 521, 307, 307, 307, 264, 265, 263,
	263, 271, 271, 269, 270, 270, 272, 272, 378, 378,
	378, 180, 180, 180, 299, 299, 299, 299, 300, 300,
	329, 329, 327, 327, 327, 327, 328, 328, 330, 330,
	330, 331, 331, 332, 332, 298, 298, 359, 359, 168,
	168, 168, 278, 278, 278, 279, 279, 349, 349, 349,
	349, 349, 349, 350, 350, 348, 348, 348, 348, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 382, 383,
	383, 280, 280, 384, 335, 335, 487, 487, 487, 488,
	488, 376, 376, 385, 385, 385, 385, 385, 385, 374,
	374, 375, 375, 391, 392, 392, 311, 311, 311, 311,
	309, 309, 312, 312, 312, 312, 310, 310, 386, 386,
	386, 386, 301, 301, 387, 387, 387, 387, 388, 344,
	345, 345, 398, 398, 398, 398, 400, 277, 277, 277,
	277, 277, 445, 444, 444, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 414, 414, 414, 414, 414, 414,
	414, 414, 415, 415, 415, 415, 415, 415, 401, 401,
	401, 401, 401, 405, 405, 405, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 406, 406, 411,
	411, 412, 412, 412, 407, 408, 413, 413, 413, 413,
	527, 527, 417, 417, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 403, 403, 403, 410, 410, 410, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 319, 319, 321, 321, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 353, 353, 353, 353, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 463, 463, 463, 463, 463, 463, 463, 463,
	355, 355, 466, 466, 467, 467, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 474, 474, 475, 475, 477,
	477, 478, 478, 479, 480, 480, 480, 481, 482, 482,
	476, 476, 483, 483, 483, 483, 484, 484, 485, 485,
	485, 485, 485, 486, 486, 486, 486, 486, 365, 365,
	366, 366, 372, 372, 372, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 203, 203, 203, 203, 203, 290, 290, 288, 288,
	288, 291, 291, 289, 289, 287, 287, 286, 286, 362,
	362, 360, 360, 364, 364, 313, 313, 416, 416, 416,
	416, 416, 416, 416, 416, 314, 314, 314, 322, 315,
	315, 316, 316, 316, 316, 316, 356, 357, 317, 317,
	317, 358, 358, 367, 371, 371, 370, 369, 369, 368,
	368, 346, 346, 347, 347, 297, 297, 528, 528, 293,
	293, 389, 389, 389, 389, 243, 243, 282, 282, 242,
	242, 234, 234, 235, 235, 235, 235, 275, 275, 373,
	373, 418, 418, 419, 419, 420, 420, 421, 421, 422,
	423, 424, 361, 361, 222, 221, 209, 210, 220, 219,
	218, 208, 211, 215, 216, 217, 213, 214, 228, 227,
	226, 233, 224, 225, 394, 207, 236, 236, 237, 237,
	237, 238, 238, 238, 238, 204, 204, 205, 205, 229,
	229, 230, 231, 231, 223, 223, 223, 195, 195, 195,
	196, 196, 197, 197, 432, 432, 429, 429, 429, 430,
	430, 430, 431, 431, 431, 431, 428, 428, 428, 428,
	428, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 437, 437, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 439, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 442, 442,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 3, 1, 1, 3, 4, 6, 1, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 2, 1, 1, 3, 1,
	3, 2, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 3, 6, 4, 6, 7,
	9, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 5, 6, 2, 1, 3, 1, 3, 1,
	6, 4, 9, 7, 12, 12, 12, 9, 2, 7,
	2, 1, 1, 1, 3, 3, 0, 3, 1, 3,
	1, 1, 3, 2, 5, 0, 6, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	6, 6, 6, 6, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 3, 3, 4, 3, 4, 7, 4,
	4, 4, 3, 5, 7, 4, 3, 3, 4, 3,
	3, 3, 3, 2, 0, 1, 0, 1, 0, 3,
	3, 3, 3, 3, 6, 4, 4, 4, 3, 5,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	5, 1, 2, 1, 3, 2, 0, 9, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 6, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 3, 3, 5, 3, 1, 3, 2,
	2, 2, 2, 1, 2, 2, 5, 3, 3, 6,
	6, 3, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 3, 5,
	7, 2, 3, 0, 3, 5, 2, 3, 0, 2,
	3, 2, 3, 2, 6, 4, 7, 2, 6, 4,
	7, 2, 1, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 1, 5, 3, 2, 6, 3, 3, 4, 4,
	3, 1, 3, 2, 3, 3, 1, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	2, 1, 3, 3, 3, 3, 2, 3, 3, 1,
	1, 1, 1, 1, 2, 2, 5, 7, 3, 3,
	3, 4, 5, 5, 5, 3, 4, 4, 3, 4,
	4, 3, 4, 4, 5, 3, 5, 5, 5, 7,
	3, 3, 3, 4, 3, 5, 3, 6, 5, 6,
	3, 5, 6, 3, 4, 3, 4, 3, 3, 4,
	4, 5, 0, 1, 1, 3, 2, 4, 3, 3,
	5, 4, 3, 5, 3, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 3, 3, 4, 3, 3, 3, 3, 4, 3,
	1, 1, 1, 2, 3, 2, 3, 6, 6, 7,
	9, 7, 9, 3, 4, 10, 10, 3, 5, 5,
	5, 3, 5, 2, 0, 1, 1, 1, 1, 3,
	2, 2, 2, 1, 2, 0, 3, 3, 2, 3,
	6, 3, 11, 14, 0, 2, 4, 3, 0, 4,
	5, 4, 3, 3, 1, 3, 10, 13, 0, 2,
	3, 1, 1, 0, 1, 2, 2, 2, 2, 1,
	1, 0, 1, 3, 1, 1, 1, 1, 3, 3,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 8, 0, 1, 1, 0, 2, 1, 0, 1,
	0, 9, 9, 3, 1, 3, 7, 1, 3, 11,
	3, 2, 0, 3, 1, 2, 2, 3, 2, 6,
	2, 1, 1, 2, 8, 4, 2, 5, 5, 5,
	2, 1, 3, 10, 11, 7, 5, 3, 1, 5,
	9, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 6, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 2, 2, 4, 7, 3,
	4, 6, 3, 1, 1, 1, 8, 10, 11, 5,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 16, 19, 15, 18, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 3, 2,
	0, 1, 1, 0, 6, 6, 8, 6, 8, 6,
	8, 6, 8, 1, 0, 2, 0, 2, 2, 3,
	3, 2, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	2, 3, 2, 2, 8, 11, 3, 3, 0, 3,
	0, 3, 0, 3, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 8, 5, 3, 4, 3, 0, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 3, 3, 5, 1, 3, 3, 4,
	5, 2, 2, 0, 2, 2, 1, 1, 1, 0,
	1, 0, 2, 2, 5, 4, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 0, 3, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 2, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 6, 6, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 1, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	2, 2, 4, 1, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 6, 6,
	8, 8, 6, 4, 6, 6, 6, 4, 1, 3,
	3, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 1, 2,
	3, 2, 3, 2, 3, 1, 0, 1, 3, 1,
	3, 3, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 1, 2, 3,
	0, 3, 3, 2, 2, 1, 2, 2, 3, 2,
	1, 1, 1, 5, 1, 2, 4, 2, 0, 1,
	0, 3, 5, 1, 0, 1, 2, 1, 0, 1,
	3, 3, 2, 1, 1, 1, 3, 1, 3, 3,
	1, 1, 1, 1, 5, 3, 1, 1, 3, 1,
	1, 1, 1, 2, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 493, -82, -79, -51, -49, -85, -86,
	-69, -87, -81, -99, -103, -91, -105, -144, -149, -150,
	-151, -3, -37, -39, -52, -68, -70, -80, -89, -88,
	-90, -92, -96, -95, -84, -43, -100, -104, -113, -145,
	-146, -147, 31, 30, 90, 74, 136, 114, 120, 173,
	317, 350, 360, 343, -108, -109, 375, -38, -50, -102,
	-101, 67, 115, 338, -4, -12, 28, 44, -40, -41,
	-42, 57, -57, -54, -63, -511, 92, -470, -71, -74,
	-515, 125, 142, 191, 307, -93, -94, 345, 347, 143,
	-45, -44, 137, -164, -166, -106, -107, -148, -114, -115,
	-116, -117, -118, -119, -120, -121, -122, -123, -124, -125,
	-126, -127, -128, -129, -134, -130, -131, -132, -133, -135,
	-136, -137, -138, -139, -140, -141, 379, 428, 46, 389,
	76, 129, 354, 21, -5, -6, -7, -8, -9, -10,
	-11, -13, -53, -55, -56, -58, -59, -60, -67, -61,
	-62, -469, -72, -73, -75, -77, -78, -76, 344, -167,
	-165, 490, 442, -15, -20, -21, -16, -17, -19, -22,
	-18, -26, -31, -32, -28, -29, -27, -30, -33, -34,
	-35, -36, -24, -25, -14, -23, 460, 468, -170, -168,
	-169, -177, 367, 450, 405, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, -241, 2, -224, -229,
	-230, -231, -223, -195, -439, -442, 4, -436, -440, 148,
	200, 272, 21, 22, 23, 24, 25, 26, 28, 29,
	40, 41, 43, 42, 44, 45, 46, 51, 54, 55,
	56, 57, 58, 62, 67, 68, 73, 74, 75, 76,
	77, 78, 79, 85, 82, 83, 84, 87, 89, 90,
	91, 93, 95, 96, 104, 105, 106, 107, 109, 114,
	115, 118, 113, 117, 120, 123, 124, 125, 127, 128,
	130, 131, 133, 134, 136, 137, 140, 138, 411, 139,
	141, 142, 143, 144, 154, 155, 156, 161, 163, 167,
	168, 171, 172, 174, 178, 180, 181, 182, 183, 184,
	190, 191, 193, 194, 195, 196, 201, 202, 206, 203,
	212, 216, 217, 218, 220, 224, 225, 226, 227, 228,
	231, 230, 233, 236, 237, 240, 241, 242, 245, 246,
	247, 248, 250, 251, 254, 252, 255, 253, 257, 258,
	259, 256, 262, 260, 264, 265, 270, 268, 266, 267,
	274, 277, 188, 279, 280, 283, 301, 287, 288, 289,
	292, 293, 296, 299, 300, 302, 303, 304, 305, 306,
	307, 308, 310, 311, 315, 317, 318, 320, 322, 323,
	324, 325, 326, 327, 328, 330, 331, 338, 343, 340,
	341, 342, 344, 345, 346, 347, 349, 350, 352, 353,
	354, 355, 357, 359, 376, 377, 391, 360, 361, 362,
	363, 364, 365, 366, 370, 368, 369, 371, 372, 373,
	375, 378, 379, 381, 382, 385, 387, 388, 389, 390,
	392, 395, 396, 397, 398, 393, 404, 401, 402, 406,
	407, 408, 409, 410, 412, 414, 422, 423, 425, 428,
	429, 430, 420, 432, 433, 436, 437, 438, 441, 439,
	440, 442, 444, 447, 448, 449, 455, 454, 461, 462,
	464, 465, 466, 35, 47, 48, 50, 52, 63, 64,
	65, 69, 110, 111, 135, 145, 146, 157, 169, 170,
	175, 177, 185, 186, 187, 207, 208, 210, 214, 234,
	276, 278, 294, 298, 312, 313, 314, 316, 329, 356,
	383, 394, 399, 415, 416, 417, 418, 424, 426, 450,
	451, 452, 456, 463, -241, 2, -224, 285, -217, 2,
	-195, -195, 317, 27, 2, 27, 311, 369, 407, 409,
	2, -495, -276, 2, 27, -198, -195, 92, 173, 367,
	-217, 2, -495, -276, 24, 2, -195, 2, -199, 2,
	360, -195, 493, 87, 242, 68, 356, 372, -111, 423,
	-110, 415, 362, -112, -427, 2, 262, -195, 493, 493,
	493, 27, -207, -195, 405, 200, 106, 402, 493, 2,
	405, 304, 454, 368, 106, 326, 200, 430, -504, 352,
	176, 443, -493, 2, -489, 4, -440, -436, -235, -234,
	405, 106, -231, -223, 483, -230, 493, 493, 493, 2,
	217, 218, 325, 324, 372, 373, 493, 493, 2, 26,
	60, 86, 89, 112, 144, 164, 167, 290, -512, 251,
	301, 323, 371, 404, 412, 425, -503, 390, 62, 362,
	-502, -504, 430, 123, -323, 106, 242, 172, 437, 409,
	407, 435, 118, 206, 440, 439, 493, 26, 60, 71,
	89, 123, 144, 164, 167, -514, 301, 323, 359, 362,
	371, 404, 412, 425, 2, 454, 368, 405, 200, 106,
	430, -504, 321, -82, 2, 490, 31, 30, 375, -160,
	405, 211, 2, -195, 217, 218, 2, 493, 493, 165,
	-489, 2, 217, 218, 2, 211, 2, 62, 364, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 2, -142, 372,
	390, 182, 44, 68, 27, 322, 73, 305, 107, 174,
	200, 201, 225, 86, 87, -325, 43, 218, 217, -377,
	406, 363, 369, 401, 360, 423, 92, 444, 353, 466,
	326, 327, 138, 4, 106, 262, 374, 415, 242, 78,
	-521, 2, 405, -523, 2, 423, 423, 2, -523, 2,
	-523, 2, -523, 2, -524, 423, 463, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, -165, -167, -166, 493, 493, 493, 493,
	493, 493, -142, 372, 2, 68, 27, -269, -271, 434,
	209, 132, 291, -164, -166, 2, -469, -425, 2, -351,
	-443, -353, 481, 482, 474, 403, 61, 271, 467, -365,
	112, 435, 285, -442, -354, -367, 135, 356, -291, 8,
	9, 5, 6, 7, -204, -355, -361, 427, 147, 275,
	-238, 494, 10, 490, -466, -166, -366, 36, 177, 59,
	-429, -237, -205, -401, 210, -236, -223, -463, -464, 4,
	-436, -437, -430, -404, -412, -408, -409, -415, -195, -439,
	71, 98, 99, 97, 102, 101, 244, 243, 103, 100,
	374, 443, 60, 35, 185, 186, 214, 276, 187, 69,
	-465, 124, -438, 207, 208, 383, 48, 329, 157, 111,
	110, 278, 52, 50, 451, -413, 108, 415, 416, 417,
	418, 169, 170, 145, 146, 298, 314, 399, 424, 426,
	175, 234, 94, 166, 205, 189, 213, 215, 219, 235,
	238, 263, 269, 273, 295, 297, 351, 380, -527, 452,
	394, 63, 64, -471, 330, -472, -217, -471, 493, 493,
	495, 493, -263, -264, -265, 2, 27, 121, 490, 2,
	-381, 2, -382, -386, -166, 229, -385, 490, -383, 488,
	-224, 286, -467, 357, -463, -464, -204, -223, -237, 4,
	-436, -438, 492, -266, 490, 106, 405, 72, 200, -318,
	490, -195, 27, 285, 419, 495, -363, 490, 285, 165,
	288, -195, 2, 2, 376, 2, 490, -111, 65, 423,
	42, 372, -338, 2, -339, -192, -193, -194, -391, 216,
	320, 328, 469, 466, -425, -505, 165, 473, 419, -425,
	-292, 492, 2, 2, 2, 2, 2, -386, 185, -224,
	2, -221, -428, 4, -436, -440, -437, -441, -439, 27,
	30, 31, 32, 34, 36, 37, 38, 39, 53, 59,
	60, 66, 70, 72, 81, 86, 92, 97, 98, 100,
	99, 101, 102, 103, 112, 116, 119, 121, 122, 126,
	129, 132, 147, 149, 162, 164, 165, 173, 176, 179,
	192, 204, 209, 211, 229, 232, 239, 243, 244, 271,
	275, 281, 285, 286, 290, 291, 309, 319, 332, 348,
	367, 374, 386, 400, 405, 413, 419, 421, 427, 434,
	435, 443, 445, 453, 457, 458, 459, 460, -442, 71,
	2, -386, 185, 2, -226, 185, -386, -229, 2, -208,
	-195, 2, -220, -428, 2, -242, 185, -224, -225, -229,
	-227, 2, -229, -434, 185, 2, -432, 10, -431, 5,
	4, -436, -440, -437, 419, 495, -282, -234, -235, -275,
	-195, 492, -351, 2, -100, 2, -351, 185, 2, -100,
	185, 2, -351, 185, 2, -100, 185, 2, 2, 2,
	425, 2, 89, 185, -195, 405, 105, 2, 342, -513,
	359, 429, 454, 2, 2, 2, 2, 2, 2, 405,
	-213, 2, -195, 162, -233, 185, 2, -195, 368, -522,
	330, -434, 185, 2, -227, 2, -227, 200, 212, -208,
	185, 2, 409, 407, 409, 407, 165, 2, 211, 2,
	211, 2, -387, 2, -388, -382, -224, 488, 2, 2,
	2, 2, 2, 185, -195, 405, 105, 2, 227, 2,
	2, 2, 2, 2, 2, 2, 2, -284, 185, 2,
	-224, -284, 185, 2, -284, 185, 2, -324, 2, 81,
	-208, 185, 2, -232, 185, 2, -227, -435, 185, 2,
	-434, -395, 2, -394, -431, 450, -82, 490, -82, 490,
	372, 490, -434, -224, -224, -351, -100, -98, -97, -434,
	490, 165, -351, -100, -160, 162, 2, 106, 405, -142,
	2, 162, 445, 2, 8, 2, -434, 363, 327, 154,
	2, 376, 2, 377, 68, -325, 466, 68, 165, 2,
	165, 2, -308, 2, 460, -492, 2, 285, 165, 2,
	165, 2, 165, 2, 165, 2, 165, 2, 324, 373,
	218, 2, -100, 457, -351, 457, 2, 422, 226, 139,
	165, -308, 2, 165, 2, 165, 2, 5, 2, 391,
	2, 216, 320, 391, 2, -224, -516, 2, 405, 454,
	368, 2, 2, 82, 83, 165, 2, 165, 2, 165,
	466, 2, -301, -386, -337, -338, -337, 419, -269, -271,
	-142, 376, 2, -171, -299, -173, 162, -327, -328, -174,
	239, 149, 281, -175, -307, 27, 121, -307, -307, 55,
	491, 491, 11, 12, 70, 40, 481, 482, 483, 484,
	160, 485, 486, 479, 480, 478, 471, 472, 476, 222,
	223, 88, 475, 473, 80, 249, 358, 150, 151, 152,
	153, 339, 198, 33, 199, 14, 15, 16, 32, 290,
	238, 467, 189, 380, 474, 17, 18, 19, 213, 215,
	273, 47, 192, -203, -244, -351, -351, -351, -351, -351,
	-351, -351, 297, 490, -297, -346, 488, -166, 490, 490,
	490, -424, 8, -166, -351, -365, 491, -289, 490, -166,
	-365, -360, 490, 356, 488, 490, -368, -351, 5, 5,
	5, 490, 492, -474, 461, 162, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 316, -406, 490, -405, 490, -405, -405, 455, -403,
	490, 468, 462, 490, -403, 490, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 455, 495,
	-471, -266, 490, -293, -389, -351, 483, -293, -293, 285,
	-286, -351, 94, -311, 219, 263, 166, 235, 351, 205,
	-348, 494, -348, -376, 468, -166, -383, -223, -166, -385,
	490, -381, -376, -83, -424, -68, -80, -88, -100, -113,
	-146, -147, 483, -224, 490, 165, 490, 492, -428, 165,
	-275, -208, -224, -236, -237, -242, 120, -286, -489, -275,
	-198, 37, -362, -398, -399, -445, 494, -444, -401, -411,
	-407, -410, 312, 313, -430, 50, 451, -413, 210, 4,
	-436, -438, 207, 208, 383, 48, 329, 157, 111, 110,
	278, 52, 415, 416, 417, 418, 169, 170, 452, 394,
	63, 64, -489, -275, 162, -427, -286, 37, -338, 2,
	112, -432, 42, -525, 495, 237, -246, 248, 270, 181,
	286, 464, 279, -433, 5, 4, -361, -373, 112, 242,
	210, -418, -420, 8, -419, 9, -421, 481, 482, -426,
	-425, 96, 492, -428, -182, 340, -181, 23, 28, 125,
	448, 140, -256, 202, 304, 135, 387, 438, -499, -500,
	361, 410, 411, 84, 279, 340, 135, -304, -306, 37,
	104, 265, 299, 56, 195, 253, 254, 389, 456, 135,
	340, -500, 340, -500, -184, 387, 438, -499, -500, 361,
	340, -183, -256, 135, 494, 23, 340, 375, 300, -509,
	-510, 125, 28, -496, -468, 460, 135, -97, -282, 495,
	495, -428, 483, 135, 135, 135, 135, 2, 2, 271,
	2, 2, 2, 167, -502, -514, 2, 2, 2, -224,
	185, -268, 285, -491, -283, 405, -224, 271, -226, 185,
	2, -229, 454, -496, 271, 37, 490, 2, -324, 2,
	200, -468, 271, -387, -239, -224, -382, -239, 375, -217,
	37, -348, -348, 135, 2, 2, 2, -195, -185, 495,
	58, 346, 135, -185, 135, -185, 135, -243, 185, -242,
	-185, 135, -185, 495, 135, 495, 135, 491, 495, -395,
	-395, -434, -155, 460, 165, 92, 490, 490, -160, -392,
	495, -391, -435, -98, -434, -491, -208, 2, -224, 2,
	405, 220, -155, -434, -434, -434, -427, 27, 377, 2,
	324, 373, 83, 377, 2, -224, 405, 106, 200, 74,
	-494, 162, -490, 352, -489, -224, 106, -224, 106, -224,
	106, -224, -224, 2, 2, 2, 2, 79, 79, 162,
	2, 422, 2, 422, 2, -195, -195, -195, 237, -224,
	162, 405, 200, 405, 200, 106, 405, -185, 495, -199,
	-171, -299, -427, -300, -299, -172, -171, -174, 162, 328,
	439, 265, 378, 224, -328, -327, 27, -351, -332, 156,
	264, -351, -330, -353, 481, 482, -419, -421, -285, 279,
	-165, -165, -165, -272, -378, -351, 319, 200, -400, -398,
	-398, -222, -428, 415, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, 238,
	189, 380, 47, 192, -351, 419, -351, -351, -351, -351,
	260, 271, 275, 427, 147, 436, 121, 279, -528, 400,
	39, -358, -166, -290, 490, -372, 34, 386, 27, -365,
	490, 2, -346, -351, -347, -287, -286, -286, 491, 453,
	27, 121, 483, 2, 491, 495, 37, 491, -351, -287,
	-364, -360, -286, -371, -370, 457, -319, -320, 465, 256,
	109, 183, 255, -321, 366, -422, 8, -428, 483, -475,
	155, 176, 490, 491, 2, 491, 2, 491, -351, 2,
	491, -351, 2, 491, -351, 2, 491, -351, 2, 491,
	2, -351, -351, -351, -351, -351, -351, -351, -286, 8,
	-422, -422, 415, 415, -422, -422, -422, -414, 312, 240,
	313, 171, 259, 257, 258, 170, -414, -313, 2, -416,
	-286, 4, 465, 256, 109, 183, 255, 366, 5, -313,
	2, -314, 2, -351, -286, -315, -352, -353, 481, 482,
	474, -365, -316, 2, -351, -287, -351, 53, 232, 421,
	-317, -351, 165, -286, -286, 2, -286, 2, -472, 37,
	-286, -278, 495, 165, 37, 4, -278, -278, 490, 491,
	495, -312, 180, 252, 247, -312, -381, -311, 219, -309,
	295, -309, -309, -376, -209, 488, 496, -428, -376, -375,
	-374, 37, -217, 292, -376, -376, 492, 491, -375, 489,
	-487, 490, 493, 493, 493, 493, 493, -224, 490, -286,
	-428, 492, 392, 491, 213, 213, 213, 213, 357, 491,
	419, 460, -82, 287, 491, 495, -277, 36, 488, 492,
	-422, 2, 2, -417, 455, 490, 490, -320, 490, 165,
	-276, -505, 491, 423, -339, -245, 328, 385, 341, 370,
	402, 8, 9, 8, 9, 495, -428, 495, -506, 86,
	419, 72, -342, 185, 72, -446, -211, 86, -447, -195,
	66, 435, 319, 164, 133, -506, 86, 319, -506, 86,
	86, 375, 390, 55, -386, 40, 40, 27, -100, 233,
	165, 466, 405, 200, 419, -386, -306, -398, 104, 253,
	254, 55, -423, -418, 481, 482, -423, 55, -423, -423,
	-423, 460, -226, -386, 419, 419, 495, 40, 40, 27,
	-100, 233, 165, 419, -242, -209, 449, 41, 449, 419,
	41, 362, 419, 495, 41, 41, -497, -200, 93, 266,
	246, 267, -201, -202, 306, 447, -434, -392, -234, -195,
	492, -351, -100, -351, -100, 135, 2, -522, 227, 490,
	-249, 271, 165, -275, -393, 211, 495, -283, 135, -305,
	-304, 271, -228, 185, 2, -224, 135, 130, 490, 326,
	2, -210, 185, -196, -195, -324, -188, 408, 135, -303,
	445, -333, -100, 490, 112, 37, -333, -294, -295, -390,
	-296, -211, 490, -217, -195, 2, -224, -284, -284, -284,
	-185, 495, 135, -208, -227, -232, -434, -435, -82, -394,
	491, 491, 491, -154, 289, -153, -195, 5, -160, 445,
	-248, -343, -342, -450, -451, -446, 238, 200, 435, 212,
	148, -267, -212, -211, 105, -155, -97, 491, -392, -155,
	-155, -392, -392, -224, 162, -155, -155, -155, 2, 2,
	-308, -224, -208, -242, -224, -275, -275, -308, -208, -308,
	-208, -308, -208, -100, -351, 372, 162, 162, 492, -308,
	326, 106, 405, 304, 200, -224, -242, -224, -242, -208,
	-224, -386, -300, -172, 286, 224, 378, -330, -331, -353,
	356, 357, -331, 356, 357, 8, 9, 8, 9, -176,
	382, 274, -284, 495, -179, 38, 119, 224, -224, 466,
	131, -351, -351, 419, -528, 400, -358, 131, -351, 260,
	275, 427, 147, 436, 121, 279, 165, 490, -352, -352,
	491, -288, -351, -351, 489, 498, 491, -271, 495, -269,
	-351, -286, -286, 491, 492, -286, -275, 489, 489, 495,
	491, -369, -370, 126, -351, 419, 419, 419, 419, 490,
	491, 492, -480, 296, 490, 490, -351, 491, 491, 491,
	491, 37, 495, 495, 495, 491, 495, 495, 495, 491,
	491, 491, 495, 491, 466, 466, 491, 491, 491, 491,
	495, 491, 495, 491, 165, 491, 491, -322, 309, 491,
	11, 12, 481, 482, 483, 484, 160, 485, 486, 479,
	480, 478, 471, 472, 473, 80, 249, 358, 14, 15,
	16, 213, 192, -352, -352, -352, 491, -356, -357, 165,
	162, 37, -317, -317, -317, 491, 165, -286, 491, 491,
	490, -473, 251, 271, 491, -345, -344, 458, -389, -279,
	2, -381, -219, -428, -345, -345, -286, -351, 219, 219,
	-310, 445, 285, -312, -381, -375, -424, -350, -349, 163,
	38, 119, 268, 188, -375, -217, -266, -375, -375, -428,
	-376, -376, -374, 491, -488, -424, 491, -280, -384, -467,
	-271, 492, -428, -155, -143, 5, 275, -143, -143, -143,
	-275, 24, 310, -398, 488, 489, 8, -428, 490, -422,
	-422, -422, -275, 165, -425, -338, 433, 77, 328, 415,
	-425, -181, 340, -211, -211, -224, 271, -342, 185, -187,
	271, -398, -218, -195, 490, 490, 224, 224, 445, -211,
	-218, 224, 185, -211, 185, -218, -218, -498, 328, 280,
	-351, 241, 326, 272, -182, 340, -100, -100, -100, 490,
	-505, 445, 120, -224, -242, -224, -228, 340, 269, -236,
	-423, -423, -304, 340, -226, -208, -183, -100, -100, -100,
	490, -209, -184, 340, 5, 185, -211, 5, -227, -211,
	-233, -508, -432, 103, 374, -510, 23, -211, 185, -211,
	-200, -434, 275, 441, -496, -152, 196, 483, -195, 454,
	-195, -247, -250, -248, -211, -163, 462, 460, 135, -240,
	-224, 488, -155, -434, -224, -233, 135, -266, 271, -434,
	490, 2, 2, 285, 271, -210, 185, -189, 127, -526,
	473, -208, -345, -279, -302, -336, 348, 285, -267, 450,
	-217, -302, -281, 495, 165, 473, 492, -267, 2, -185,
	-185, -185, -242, -243, -185, -185, -82, -82, -155, 495,
	490, 473, 473, 490, -434, -434, 491, 495, -224, -210,
	200, 200, -216, -196, 491, 495, 492, 490, -155, 165,
	-46, 460, 405, 494, -308, -308, -308, 372, 372, -195,
	-220, -208, -224, -221, -242, 162, 162, 439, -331, 286,
	245, -378, -180, 277, -224, 494, -351, -351, 131, 131,
	-351, -352, -352, -351, 131, 165, 490, -351, -362, 32,
	32, 491, 495, -347, -351, 491, 453, -271, -271, 491,
	483, -428, 494, 491, -360, 129, -351, 413, 256, 183,
	255, -321, 255, -321, -321, -422, 5, -428, 483, -481,
	-214, 490, -195, 458, -270, 291, 491, -400, -398, -351,
	-351, -351, -351, -351, -422, -403, -403, -418, -418, -351,
	-356, -351, -400, -398, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, 121, 271, 279, -352, -357, -356, -351,
	-351, -398, 491, 491, 491, -286, -82, 490, 251, -298,
	176, -351, -392, 495, -298, -298, 491, -381, -381, 490,
	-351, 219, 489, 495, 497, 473, -266, 492, -374, -375,
	489, 491, 495, 491, 495, -335, 37, 491, -428, 288,
	5, 8, 488, 489, 492, -422, 491, 491, 491, -275,
	-351, 419, 419, 135, 271, 447, -452, -447, 133, -351,
	-273, -379, -351, 490, 490, 2, -178, 125, 375, -507,
	2, 445, 135, -185, 135, -185, 464, 490, 490, 419,
	460, -286, -351, -156, 112, -427, -500, 494, -500, 494,
	419, 419, 460, -286, 419, -402, 45, 25, 271, -227,
	419, 419, -185, 135, 430, 375, -434, 275, -157, 460,
	165, 2, -228, 2, 491, 491, 495, -453, 37, 283,
	490, 283, -224, -64, 460, -391, -424, -226, 37, 135,
	-496, -396, -397, 5, -224, 135, 285, 271, -190, 231,
	-526, -432, -468, -271, -302, -293, 272, 85, 491, -345,
	-295, -279, -351, 2, 491, -185, -153, -154, -434, -434,
	-434, -155, -160, -160, -343, -251, 490, -210, -196, 490,
	-160, -212, 2, -435, -100, 289, -224, 483, -308, -258,
	-257, 304, 279, -258, 356, 356, 286, 156, 228, -179,
	-209, -351, -351, 131, 32, 32, -351, -351, -362, 491,
	-351, -351, -286, 489, 5, -351, 491, 491, 8, -351,
	491, 492, -482, -195, -351, 491, 55, 491, 491, 495,
	495, 491, 491, 491, 491, 491, 491, 491, -357, 165,
	121, 279, 490, 491, 491, -82, -359, 179, 55, -381,
	-359, -359, -310, -275, -381, -349, -209, 488, -428, -424,
	-384, 490, 492, 489, 2, 488, -428, 491, -211, -211,
	-342, 135, -454, 86, -456, 70, 148, 92, 271, 275,
	435, 319, 66, 112, 332, -518, 37, 470, 491, 491,
	495, -179, -273, -275, 271, 397, 112, 271, 112, 105,
	430, 73, -211, -218, -275, -275, -224, 141, 491, 495,
	473, 2, 483, 483, -228, -226, 141, 491, -209, 5,
	5, 135, -206, 70, 5, -211, -211, -227, 105, -159,
	289, -158, 128, 349, -435, -266, -254, 203, -211, -451,
	-448, -449, 319, -455, -457, 148, 319, -100, -162, -161,
	-195, 5, 2, 490, -249, 289, 489, -305, -100, -228,
	491, 495, -326, 445, -209, -224, 135, -191, 230, -526,
	-432, -188, -329, -327, -334, 490, 285, -100, -271, 473,
	491, 491, 105, 105, 194, 134, -273, 490, 490, -275,
	105, 491, -47, -48, 200, 86, 308, -221, 405, 200,
	490, 490, -179, -351, -351, -351, 491, -271, -428, 483,
	-476, 304, 491, -378, -351, -351, -352, 165, 490, -362,
	491, -477, 459, -351, -286, -477, -477, 491, -424, 2,
	488, 2, -342, -218, -222, -215, -195, 148, 185, 275,
	224, 490, -352, -224, 490, 2, 29, -519, 116, 204,
	-341, -520, 91, 398, 193, -379, -180, 491, 491, 275,
	275, -351, -398, 490, -185, -185, 491, 491, -351, 419,
	-427, 90, -425, 2, -500, -351, 419, 5, -185, -222,
	-185, -185, -206, 430, 495, 490, 473, 37, -255, -256,
	192, -453, 224, -215, 224, -517, 460, 491, 495, 473,
	473, -247, -163, -65, -66, 420, -391, -266, 5, 490,
	-195, 285, 490, -209, -526, -432, -189, -302, 122, -275,
	86, -329, -358, -155, 490, 490, -252, 75, 87, 113,
	184, 168, 201, 390, 395, 27, -252, 491, -273, -273,
	491, 490, -155, 495, 27, 490, 27, 490, -224, -242,
	-286, -286, 491, -271, 55, 495, 491, 491, -352, -362,
	491, -478, -479, -214, 489, 2, -456, -215, 271, 445,
	-351, -197, 490, -351, 37, 204, 117, 190, -254, 490,
	-340, 445, 332, -206, -273, 490, 490, 490, 473, 165,
	490, -402, -185, -227, -158, -159, -434, -100, -163, 302,
	490, -253, 285, 105, 265, -161, -354, -354, 491, 37,
	-66, 9, 37, -273, -224, -273, 285, -432, -190, 439,
	272, 491, -218, -302, -435, -435, -340, 491, 491, -435,
	-48, -275, -275, 491, 491, -483, 326, 357, 178, -286,
	-272, 491, 495, 37, 135, 180, 491, -458, 250, -195,
	491, 117, 190, -255, -275, -254, 180, -224, -501, 445,
	491, -260, -259, -257, -262, -261, -257, -286, -425, 90,
	302, -286, -206, 491, -253, -224, -274, -380, -211, 76,
	105, -254, -100, -100, 491, -326, 491, -224, -191, 375,
	-344, 491, 491, -341, -340, -345, 491, 491, 491, 491,
	-484, -485, 47, 432, 96, -351, -484, -484, -479, -481,
	148, 460, -459, -462, -461, 285, 381, 166, 303, 491,
	397, 456, -519, 491, 460, -266, -351, -340, 491, 495,
	450, 491, 495, 450, 491, 165, 491, -185, 490, 491,
	495, 318, 118, 125, -255, -517, -340, 490, -341, 490,
	-294, -155, -155, -254, -341, -155, -486, 133, -485, 315,
	161, 356, 315, 161, -486, -486, -215, 51, -461, 285,
	-462, 285, 439, 118, -345, 51, -458, -254, -259, 192,
	-261, 165, 302, -275, -380, 357, 357, 2, -163, -253,
	-341, -273, -254, -273, -345, -255, -254, 96, 176, 414,
	265, 32, 473, -460, 265, 346, 58, 375, -460, 473,
	-459, 490, 490, 491, 2, -253, -254, 491, -255, 491,
	-345, -255, 356, 293, -485, -351, 22, 275, 112, -351,
	-519, -286, -286, -186, 58, 346, -255, -340, -345, -341,
	-345, 491, 491, -345, -341, -254, -255, 419, -254, -255,
	490, -255, -345, -286, -345, 491, -255,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 25, 26, 27,
	28, 412, 413, 415, 416, 417, 419, 420, 422, 424,
	426, 428, 429, 431, 433, 435, 436, 437, 438, 439,
	441, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 501, 503, 0, 1034, 1036, 1038,
	1040, 0, 631, 0, 30, 31, 0, -2, 227, 229,
	231, 0, 256, 258, 259, 261, -2, 0, 357, 358,
	360, -2, -2, 0, 0, 490, 492, 0, 0, 0,
	512, 513, 0, 1122, -2, 506, 508, 510, 575, 577,
	579, 581, 583, 585, 587, 588, 590, 592, 594, 596,
	598, 600, 602, 603, 605, 607, 609, 611, 613, 615,
	617, 619, 621, 623, 625, 627, -2, -2, -2, 0,
	-2, -2, -2, 1052, 34, 36, 38, 40, 42, 44,
	46, 48, 308, 309, 311, 313, 315, 317, 320, 322,
	324, 1180, 362, 364, 366, 368, 370, 372, 0, -2,
	1192, 0, 0, 50, 51, 52, 53, 54, 55, 56,
	57, 73, 74, 75, 76, 77, 78, 79, 80, 61,
	63, 64, 68, 69, 71, 59, 0, 0, 1153, 1155,
	1157, 1159, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 414, 418, 421, 423, 425, 427,
	430, 432, 434, 440, 442, 444, 399, 400, 403, 1812,
	1829, 1830, 1831, 1834, 1835, 1836, 1837, 1838, 1839, 2192,
	2273, 2274, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
	1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888,
	1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,
	1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908,
	1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918,
	1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928,
	1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938,
	1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948,
	1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958,
	1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968,
	1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978,
	1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988,
	1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
	1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
	2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
	2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028,
	2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038,
	2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048,
	2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058,
	2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068,
	2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078,
	2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088,
	2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098,
	2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108,
	2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118,
	2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128,
	2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138,
	2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148,
	2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158,
	2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168,
	2169, 2170, 2171, 2172, 401, 402, 914, 0, 468, 466,
	1805, 469, 2024, 471, 473, 351, 352, 353, 354, 355,
	356, 0, 483, 477, 482, 484, 486, 487, 488, 489,
	463, 461, 0, 483, 1864, 481, 1032, 1033, 1027, 1028,
	2056, 1059, 502, -2, -2, -2, 2158, -2, 534, -2,
	541, 2162, 2058, 546, 0, 548, -2, 551, 1035, 1037,
	1039, 629, 630, 1815, 0, 0, 0, 0, 32, 33,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 963,
	964, 965, 0, 182, 184, -2, -2, -2, -2, 0,
	0, 1905, 1773, 1831, 1776, 1771, 228, 230, 232, 233,
	0, 0, 0, 0, 0, 0, 257, 260, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 0, 0, 809, 801,
	802, 1004, 0, 0, 0, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 0, -2, 0,
	0, 0, 287, 404, 405, 0, 1181, 1181, 0, 0,
	0, 0, 208, 199, 0, 0, 778, 491, 493, 0,
	0, 194, 0, 0, 1031, 0, 210, 0, 0, 507,
	509, 511, 576, 578, 580, 582, 584, 586, 589, 591,
	593, 595, 597, 599, 601, 604, 606, 608, 610, 612,
	614, 616, 618, 620, 622, 624, 626, 628, 636, 0,
	0, 0, 0, -2, -2, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	-2, -2, -2, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 639, 641, 642, 643, 0, 694, 711,
	0, 954, 1182, 1061, 1042, 1056, 1061, 1044, 1045, 1046,
	1047, 1048, 1053, 1055, 1049, 1050, 1051, 35, 37, 39,
	41, 43, 45, 47, 49, 310, 312, 314, 316, 318,
	321, 323, 325, -2, 1151, 1152, 363, 365, 367, 369,
	371, 373, 494, 0, 496, 0, 640, -2, 0, 1186,
	1186, 1186, 0, 0, 1152, 1150, 0, 499, 500, 555,
	556, 1416, 0, 0, 0, 0, 0, 0, 0, 1670,
	1502, 0, 557, -2, 1533, 1535, 2133, 2158, 1669, 1537,
	1538, 1539, 1540, 1541, 0, 1543, 1544, 1545, 1546, 1547,
	1548, 0, 1550, 0, 1555, 1556, 1557, 0, 2140, 1750,
	1825, -2, 0, 0, 2146, 1821, 0, 1636, 1573, -2,
	-2, 1848, 1827, 1348, 1349, 1350, 1351, 1352, -2, -2,
	2175, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 0, 2122, 2141, 2142, 2147, 2149, 2143, 2130,
	1598, 1915, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1375, 1384, -2, -2, -2,
	-2, -2, -2, 2134, 2135, 2152, 2155, 2161, 2166, 2167,
	2139, 2148, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 1376, -2,
	-2, -2, -2, 1169, 2034, 1172, 914, 1170, 1154, 1156,
	0, 1158, 0, 0, 0, 1163, 1189, 1187, 0, 1230,
	1167, 1168, 1248, 1248, 1272, 0, 1253, 0, 1272, 1181,
	1298, 0, 1259, 2051, 1574, 1575, 0, 1831, 1826, -2,
	-2, 2173, 0, 0, 0, 0, 0, 0, 0, 464,
	0, 470, 472, 0, 0, 0, 0, 0, 0, 0,
	0, 1058, 504, 505, 0, 529, 0, 533, 2129, -2,
	1872, 2067, -2, 537, 1062, 1066, 1067, 1068, 1069, 0,
	0, 0, 0, 0, 543, 0, 0, 530, 531, 549,
	552, 0, 632, 633, 634, 635, 58, 0, 2141, 1298,
	60, 0, 1795, 1856, 1857, 1858, 1859, 1860, 2174, 2193,
	2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203,
	2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213,
	2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223,
	2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233,
	2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243,
	2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253,
	2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263,
	2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2175,
	62, 0, 2141, 65, 0, 2141, 0, -2, 70, 0,
	1801, 72, 0, 1798, 81, 0, 2141, 0, 1770, -2,
	0, 167, 1809, -2, 2141, 962, 211, 212, 1844, 1845,
	1852, 1853, 1854, 1855, 0, 0, 770, 1767, 1772, 771,
	1777, 0, 234, 235, 236, 237, 238, 2141, 240, 241,
	0, 243, 244, 2141, 246, 247, 0, 249, 263, 264,
	0, 266, 0, 2141, 0, 0, 0, 272, -2, 288,
	0, 285, 0, 276, 277, 279, 280, 281, 282, 0,
	329, 327, 1806, 0, 779, 2141, 781, 1811, 0, 0,
	983, -2, 2141, 959, 989, 985, 0, -2, 0, 1179,
	2141, 1076, 805, 806, 807, 808, 0, 348, 0, 1089,
	0, 1091, 0, 1112, 1304, 1248, 1248, 0, 289, 290,
	291, 292, 293, 2141, 0, 0, 0, 298, 0, 300,
	301, 302, 303, 304, 305, 306, 307, 156, 2141, 376,
	397, 156, 2141, 379, 156, 2141, 382, 0, 385, 1002,
	156, 2141, 388, 156, 2141, 391, 392, 394, 2141, 396,
	213, 0, -2, 457, 1814, -2, 407, 0, 408, 0,
	-2, 0, 225, 0, 0, 776, 777, 1285, 197, 195,
	0, 0, 1029, 1030, 0, 0, 514, 0, 0, 637,
	638, 0, 0, 648, 649, 650, 225, 2059, 2032, 1933,
	655, 0, 658, 661, -2, 0, 0, 0, 0, 665,
	0, 670, 671, 672, 0, 775, 674, 0, 0, 676,
	0, 680, 0, 683, 0, 685, 0, 687, -2, -2,
	-2, 698, -2, 0, 702, 0, 704, 0, 0, 0,
	0, 719, 720, 0, 725, 0, 728, 729, 730, 731,
	732, 0, 734, 735, 736, 737, 0, 739, 740, -2,
	-2, 744, 746, 0, 753, 0, 757, 0, 761, 0,
	644, 645, 156, 1302, 1041, -2, 1043, 0, -2, 0,
	495, 0, 498, 1209, 1137, 1134, 0, 1206, 1207, 1138,
	0, 0, 0, 1145, 0, 1184, 1185, 0, 0, 0,
	1124, 1125, 0, 0, 0, 0, 1675, 1676, 1677, 1678,
	1679, 1680, 1683, 1684, 1681, 1682, 1685, 1686, 0, 0,
	0, 0, 0, 1687, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1688, 1689, 1690, 0, 0,
	1692, 0, 1694, 0, 0, 0, 0, 0, 0, 1481,
	1483, 1758, 0, 0, 1691, 1421, 1422, 1423, 1424, 1425,
	1460, 1461, 0, 0, 1534, 1755, 1754, 1536, 0, 1706,
	0, 1549, 1791, -2, 0, 1670, 1701, 0, 0, 1558,
	1559, 1560, 0, 0, 1706, 0, 0, 1749, 1570, 1571,
	1413, 0, 0, 1638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1362, 1361, 0, 1363, 0, 1364, 1365, 1372, 1385,
	0, 0, 0, 0, 1389, 0, 0, 0, 0, 0,
	0, 0, 1730, -2, 0, 0, 0, 0, 1377, 0,
	1171, 0, 0, 1234, 1759, 1763, 1764, 1234, 1234, 0,
	0, 1707, 1295, 1295, 0, 0, 1291, 1291, 1291, 1289,
	1272, 0, 1272, 1282, 0, 1272, 1272, 0, -2, 1253,
	0, 0, 1282, 0, 1266, 445, 447, 449, 451, 452,
	453, 455, 1299, 1300, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 475,
	485, 1181, 0, 1709, 1321, 1325, 0, 1327, 1328, 1329,
	1330, 1331, 0, 0, 1322, -2, 1373, 1375, 1396, 1849,
	1850, 1851, 1356, 1357, 1358, 1359, 1360, 1368, 1355, 1355,
	1355, 1366, 1395, 1387, 1395, 1391, 1342, 1343, 1378, 1379,
	1380, 1381, 0, 479, 0, 0, 0, 0, -2, 539,
	544, 545, 0, 0, 1064, 0, 1070, 566, 567, 568,
	1072, 1073, 0, 542, 569, 570, 571, 572, 573, 574,
	0, 1779, 1780, 1781, 1782, 1785, 1786, 0, 0, 540,
	559, 547, 0, 553, 82, 1024, 121, 0, 1024, 1024,
	0, 0, 143, 0, 0, 0, 0, 0, 0, 106,
	117, 94, 95, 0, 0, 0, 0, 66, 936, 0,
	939, 0, 0, 0, 0, 0, 0, 0, 952, 0,
	0, 105, 0, 100, 84, 0, 0, 0, 107, 119,
	0, 147, 149, 0, 0, 0, 0, 0, 0, 166,
	174, 0, 0, 960, 0, 1178, 0, 1285, 769, 0,
	0, 1832, 1775, 0, 0, 0, 0, 265, 267, 0,
	269, 270, 271, 0, 982, 0, 278, 275, 319, 885,
	2141, 0, 0, 346, 341, 0, 343, 0, 935, 2141,
	933, 1810, 0, 957, 0, 0, 0, 990, 1841, 999,
	1003, 1078, 0, 350, 0, 1092, 1094, 0, 0, 1305,
	0, 1307, 1308, 0, 295, 296, 297, 0, 374, 0,
	154, 155, 0, 377, 0, 380, 0, 156, 2141, 1765,
	386, 0, 389, 0, 0, 0, 0, 1181, 0, 0,
	0, 0, 201, 0, 0, 0, 0, 0, 0, 225,
	0, 1284, 0, 1285, 225, 225, 1285, 516, 1285, 518,
	0, 0, 651, 225, 225, 225, 656, 657, 659, 660,
	-2, -2, 754, 662, 663, 722, 0, 0, 0, 721,
	673, 0, 763, 2047, 773, 722, 1905, 722, 1905, 722,
	1905, 684, 686, 689, 714, 697, 701, 0, 0, 0,
	706, 0, 708, 0, 710, 722, 723, 726, 733, 738,
	0, 0, 0, 0, 0, 0, 0, 953, 0, 1054,
	1209, 1137, 497, 1128, 1208, 1129, 1136, 1139, 0, 0,
	1141, 0, 1143, 0, 1204, 1205, 1212, 1213, 0, 1223,
	1224, 1216, 0, -2, 0, 0, 1219, 1220, 1147, 0,
	1164, 1165, 1166, 1193, 1196, 1013, 0, 2273, 1417, 1316,
	1418, 1419, 1794, 0, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, -2, -2, -2, -2, -2, -2,
	-2, -2, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, -2, -2, -2, 1458, 1459, -2, 1693,
	1695, 0, 1758, 0, -2, 0, -2, -2, -2, -2,
	1478, 0, 1480, 1485, 1487, 1489, 0, 0, 0, 0,
	1757, 1499, 1741, 1742, 0, 0, 1672, 1673, 1674, 1484,
	0, 1503, 1756, 1753, 0, 0, 1705, 1192, 1562, 0,
	0, 0, 0, 1569, 1554, 1703, 0, 1702, 0, 0,
	0, 1713, 0, 1748, 1744, 0, 1792, 1412, 1399, 1400,
	1401, 1402, 1403, 1404, 1414, 0, 1789, 1818, 1824, 1646,
	0, 0, 0, 1599, 1600, 1601, 1602, 1603, 0, 1605,
	1606, 0, 1608, 1609, 0, 1611, 1612, 0, 1614, 1615,
	1616, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 0, 0, 1618, 0,
	1716, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	1620, 0, 1622, 1707, 1727, 0, 0, 1504, 0, 0,
	0, 1670, 0, 1625, 1707, 1735, 0, 0, 0, 0,
	0, 1707, 0, 1740, 0, 1632, 0, 1634, 1173, 0,
	0, 1311, 0, 0, 0, 1762, 1311, 1311, 0, 1229,
	0, 0, 1292, 1293, 1294, 0, 0, 1295, 0, 1286,
	1290, 1287, 1288, 1282, 1245, 0, 0, 1796, 1282, 1251,
	1281, 0, 914, 1271, 1282, 1282, 0, -2, 1255, 1272,
	0, 0, 446, 448, 450, 454, 456, 0, 0, 1192,
	-2, 0, 225, 913, 0, 0, 0, 0, 465, 467,
	0, 0, 459, 0, 462, 0, 1312, 1315, 0, 0,
	1326, 1332, 1333, 0, -2, 0, 0, 1397, 0, 0,
	0, 0, 532, 0, 1063, 1071, 0, 563, 0, 565,
	0, 1783, 1787, 1784, 1788, 0, 554, 0, 0, 0,
	0, 1023, 125, 2141, 0, 158, 0, 0, 878, 1802,
	0, 0, 0, 0, 1921, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 91, 96, 0,
	0, 0, 0, 0, 0, 0, 937, 938, 940, 947,
	949, 0, 943, 1790, 0, 0, 944, 0, 946, 948,
	950, 0, 0, 0, 0, 0, 0, 0, 0, 93,
	97, 0, 0, 0, 0, 1769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 978, 976, 970, 971,
	972, 973, 974, 975, 0, 0, -2, 216, 1768, 1778,
	0, 239, 242, 245, 248, 0, 273, 0, 0, 811,
	784, 0, 0, 328, 225, 0, 0, 342, 0, 931,
	934, 0, 914, 2141, 969, 1808, 0, 0, 0, 0,
	988, 0, 2141, 1797, 1840, 1841, 1080, 1086, 0, 1311,
	0, 1110, 1095, 0, 0, 0, 1110, 1114, 1115, 1117,
	1118, 0, 0, 1306, 0, 299, 398, 156, 156, 156,
	383, 0, 0, 156, 393, 156, 214, 395, 406, 458,
	1181, 1181, 225, 223, 2008, 221, 218, 220, 0, 0,
	0, 812, 814, 815, 816, 817, 0, 1841, 0, 1959,
	1841, 0, 1098, 1100, 0, 192, 198, 196, 225, 0,
	340, 515, 520, 646, 0, 652, 653, 654, 691, 716,
	664, 666, 667, 668, 0, 774, 772, 675, 722, 678,
	722, 681, 722, 700, 703, 705, 0, 0, 0, 718,
	0, 0, 0, 0, 0, 0, 0, 758, 759, 760,
	762, 1303, 1132, 1133, 1135, 0, 1144, 0, 0, 1218,
	-2, -2, 1217, 1221, 1222, -2, -2, -2, -2, 1140,
	0, 1149, 1146, 0, 1203, 1011, 1012, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 1500, 0, -2, 1479,
	1482, 1486, 1488, 1490, 0, 0, 0, 0, 0, 0,
	1696, 0, 1698, 1501, 1751, 1754, 1668, 0, 0, 1191,
	1192, 1192, 0, 1568, 0, 1704, 0, 1711, 1712, 0,
	1561, 0, 1745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1572, 0, 0, 0, 0, 1604, 1607, 1610,
	1613, 0, 0, 0, 0, 1593, 0, 0, 0, 1597,
	1367, 1353, 0, 1395, 1393, 1394, 1388, 1395, 1392, 1345,
	0, 1344, 0, 1617, 0, 1619, 1621, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 1508, 1509, 1624, 1733, 1734, 0,
	0, 0, 0, 0, 0, 1630, 0, 1739, 1631, 1633,
	1181, 0, 1174, 0, 1231, 1226, 1310, 0, 1760, 1285,
	1233, 1235, 1761, 1799, 1226, 1226, 0, 1708, 0, 0,
	1276, 0, 0, 0, 1278, 1249, 0, 0, 1243, 0,
	1239, 1240, 1241, 1242, 1250, 914, 1280, 1252, 1256, 1818,
	0, 1282, 0, 1267, 0, 1269, 1301, 0, 1261, 1264,
	0, 0, 1833, 226, 250, 254, 255, 251, 252, 253,
	474, 0, 0, 1710, 0, 1317, 0, 1323, 0, 0,
	0, 0, 478, 0, 528, -2, 561, 562, 564, 0,
	560, 122, 1024, 0, 0, 1015, 0, 127, 2141, 136,
	0, 852, 0, 1800, 0, 0, 0, 0, 0, 1026,
	0, 0, 2141, 156, 2141, 156, 139, 142, 0, 146,
	144, 0, 0, 843, 83, 1024, 86, 90, 98, 0,
	0, 0, 104, 0, 0, 0, 1017, 0, 941, 942,
	945, 951, 67, 0, 1019, 1014, 148, 88, 92, 99,
	0, 1021, 85, 0, 170, 0, 0, 0, 162, 0,
	163, 164, 171, 172, 173, 175, 0, 156, 2141, 0,
	977, 955, 956, 0, 961, 187, 0, 1774, 0, 0,
	0, 0, 0, 810, 896, 0, 0, 0, 0, 334,
	330, 0, 339, 345, 344, 780, 0, 0, 0, -2,
	992, 986, 987, 0, 0, 0, 2141, 1082, 1086, 0,
	1085, 1179, 1192, 349, 1087, 1110, 0, 0, 0, 1097,
	1093, 1090, 1311, 0, 0, 0, 0, 0, 294, 375,
	378, 381, 1766, 156, 387, 390, 409, 410, 200, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 821, 0,
	1841, 1841, 0, 1804, 0, 0, 0, 0, 193, 0,
	517, 0, 0, 0, 677, 679, 682, 707, 709, 722,
	747, 748, 838, 0, 838, 0, 0, 1142, 0, 1215,
	1148, 1197, 1198, 0, 1013, 0, 1420, 1463, 0, 0,
	-2, 0, 0, 1467, 0, 0, 0, -2, 0, 0,
	0, 1697, 1699, 0, 1753, 1563, 0, 0, 0, 1567,
	1551, 1552, 0, 1671, 1714, 1743, 1747, 0, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 0, 1793, 1819, 1823, 1644,
	1645, 1649, 1807, 0, 0, 0, 1576, 0, 0, 0,
	0, 0, 0, 0, 0, 1386, 1390, 0, 0, 1715,
	1726, 1728, 1505, 1506, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, -2, -2, -2, 1523, 1524, 1525,
	-2, -2, -2, 0, 0, 0, 1729, 1731, 1732, 1736,
	1737, 0, 1627, 1628, 1629, 1738, 0, 1181, 1175, 1228,
	0, 1309, 1232, 0, 1228, 1228, 1188, 1274, 0, 0,
	1297, 0, 1246, 0, 1247, 0, 1279, 0, 1254, 1257,
	1258, 1268, 0, 1260, 0, 1263, 0, 1563, -2, 476,
	460, 0, 0, 1319, 0, 0, 1370, 1374, 1398, 480,
	1283, 0, 0, 0, 0, 157, 850, 877, 0, 0,
	0, 1006, 1013, 0, 0, 883, 129, 0, 0, 0,
	137, 0, 0, 134, 0, 141, 145, 0, 0, 0,
	0, 0, 101, 102, 103, 0, 108, 0, 109, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 1010,
	0, 0, 177, 0, 0, 0, 980, 981, 181, 0,
	0, 268, 914, 274, 832, 884, 0, 886, 0, 785,
	0, 0, 885, 326, 0, 333, 0, 935, 0, 0,
	958, 0, 991, 993, 1001, 0, 0, 0, 1084, 1086,
	0, 1077, 1078, 1211, 1088, 1108, -2, 1107, 0, 1192,
	1116, 1113, 1119, 1120, 0, 384, 222, 0, 217, 219,
	0, 203, 0, 0, 813, 818, 0, 0, 0, 0,
	0, 1099, 1101, 0, 209, 0, 647, 669, 717, 749,
	837, 0, 0, 751, 0, 0, 1214, 1201, 1202, 1199,
	1013, 1465, 1469, 0, 0, 0, 1471, -2, 0, 1493,
	-2, -2, 1700, 1752, 1542, 1192, 1564, 1566, 1553, 1746,
	1415, 0, 1651, 1648, 0, 1635, 0, 1588, 1589, 0,
	0, 1592, 1594, 1595, 1596, 1354, 1347, 1346, 1725, 0,
	0, 0, 0, 1626, 1176, 0, 1640, 0, 0, 1236,
	1640, 1640, 1275, 0, 1277, 1244, 1237, 0, 1819, 1270,
	1262, 0, 0, 1313, 1318, 0, 1324, 1369, 123, 124,
	126, 0, 851, 0, 854, 0, 0, 0, 0, 861,
	862, 0, 0, 0, 0, 0, 871, 0, 900, 910,
	0, 1203, 0, 0, 0, 131, 151, 0, 0, 1025,
	0, 0, 156, 156, 0, 0, 1016, 0, 0, 0,
	0, 111, 0, 0, 1018, 1020, 0, 0, 1022, 168,
	169, 0, 156, 0, 161, 156, 156, 1010, 0, 185,
	0, 188, 0, 191, 215, 0, 840, 0, 896, 888,
	889, 890, 0, 895, 897, 0, 0, 798, 0, 794,
	0, 0, 787, 811, 784, 0, 331, 932, 966, 914,
	984, 0, 0, 0, 0, 0, 0, 1074, 1086, 0,
	1079, 1080, 1110, 1210, 0, 0, 0, 1096, 1211, 0,
	224, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 519, 521, 0, 0, 527, 836, 0, 0,
	0, 0, 1200, 1473, -2, -2, 1494, 0, 1820, 1822,
	1192, 0, 1637, 1194, 0, 0, -2, 0, 0, 0,
	1177, 1160, 0, 1227, 1225, 1161, 1162, 1296, 0, 1265,
	0, 1320, 128, 0, 855, 856, 1803, 858, 0, 860,
	863, 0, 866, 1843, 0, 870, 0, 879, 901, 0,
	832, 0, 906, 907, 908, 1007, 1008, 912, 0, 130,
	132, 150, 1010, 0, 133, 140, 0, 0, 87, 0,
	0, 1898, 114, 112, 110, 89, 0, 170, 176, 1009,
	165, 178, 156, 0, 0, 0, 0, 0, 784, 839,
	0, 887, 0, 898, 899, 788, 0, 786, 0, 0,
	0, 0, 0, 332, 335, 0, 338, 0, 994, 0,
	1000, 0, 0, 0, 0, 1081, 1082, 347, 0, 0,
	0, 1110, 1121, 202, 0, 0, 819, 822, 823, 824,
	825, 826, 827, 828, 829, 830, 820, 912, 0, 0,
	876, 0, 207, 0, 523, 0, 525, 0, 750, 752,
	0, 0, 1565, 1655, 0, 0, 1590, 1591, -2, 0,
	1531, 1639, 1641, 0, 1238, 1314, 853, 857, 0, 0,
	0, 918, 0, 0, 872, 0, 904, 905, 840, 0,
	832, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	0, 160, 179, 1010, 189, 0, 190, 967, 788, 0,
	0, 796, 0, 799, 0, 795, 792, 793, 832, 0,
	336, 337, 0, 0, 1001, 0, 0, 1083, 1084, 0,
	1103, 1104, 1106, 1111, 0, 0, 910, 912, 1311, 0,
	522, 0, 0, 755, 756, 0, 0, 0, 0, 1650,
	1195, 1532, 0, 0, 0, 0, 865, 923, 0, 0,
	0, 902, 903, 900, 0, 881, 0, 914, 135, 0,
	912, 0, 844, 0, 0, 847, 0, 0, 115, 1898,
	113, 0, 156, 186, 782, 0, 0, 892, 894, 0,
	800, 840, 798, 968, 912, 0, 910, 0, 1075, 0,
	1105, 225, 225, 832, 910, 875, 225, 524, 526, 1647,
	1667, 1656, -2, 2102, 1902, 0, 1667, 1667, 1642, 1643,
	0, 0, 867, 919, 920, 0, 915, 916, 917, 1842,
	868, 869, 1311, 909, 0, 918, 152, 832, 841, 0,
	0, 842, 0, 0, 118, 0, 120, 180, 0, 891,
	0, 0, 0, 0, 784, 788, 910, 0, 832, 0,
	1311, 204, 205, 840, 832, 206, 1652, 0, 0, 1658,
	1659, 1660, 1661, 1662, 1653, 1654, 859, 0, 921, 0,
	922, 0, 0, 0, 880, 0, 923, 138, 845, 0,
	848, 0, 116, 0, 893, 789, 0, 791, 788, 797,
	832, 0, 840, 0, 1102, 1311, 840, 0, 1664, 1665,
	0, 0, 0, 924, 0, 927, 928, 0, 925, 0,
	900, 0, 0, 835, 790, 783, 840, 912, 1311, 910,
	873, 1311, 1663, 1666, 1657, 864, 926, 929, 930, 911,
	882, 0, 0, 831, 833, 834, 1311, 910, 997, 832,
	874, 840, 0, 995, 832, 840, 846, 0, 840, 1311,
	0, 1311, 998, 0, 996, 840, 849,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 479, 3, 485, 480, 3,
	490, 491, 483, 481, 495, 482, 492, 484, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 498, 3,
	471, 473, 472, 476, 494, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 488, 3, 489, 486, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 496, 478, 497, 474,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 475, 57814, 477,
	57815, 487, 57816, 493, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1171
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1176
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1178
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1181
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1182
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1183
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1184
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1185
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1186
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1187
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1188
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1195
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1204
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1205
		{
			return helpWith(sqllex, "ALTER")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1208
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1209
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1210
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1211
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1212
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1213
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1214
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1215
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1269
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1295
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1306
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1325
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 67:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1329
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1343
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1362
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1394
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1398
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1402
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1408
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1412
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1418
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1427
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1438
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1442
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1448
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1456
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1466
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1470
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1480
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1491
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1498
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1510
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1517
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1525
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1530
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1534
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1539
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1545
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1553
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1564
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 108:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1574
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 109:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1584
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 110:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1593
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1604
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 112:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1610
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1618
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1622
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1626
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 116:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1630
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1636
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1641
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1652
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1656
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1662
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1666
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1673
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1678
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1683
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1688
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1693
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1698
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1703
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1708
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1713
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1718
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1723
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1732
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1754
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1761
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 138:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1765
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1773
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1780
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1798
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1803
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1810
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1818
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1819
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1823
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1833
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1845
		{
			sqlVAL.union.val = nil
		}
	case 152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = nil
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1862
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1905
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1916
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1927
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1937
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].union.unresolvedObjectName(),
				},
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1955
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1959
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1963
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1966
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1970
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1984
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 181:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2027
		{
			backup := &tree.Backup{
				To:              sqlDollar[4].union.partitionedBackup(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}

			tl := sqlDollar[2].union.targetListPtr()
			if tl == nil {
				backup.DescriptorCoverage = tree.AllDescriptors
			} else {
				backup.DescriptorCoverage = tree.RequestedDescriptors
				backup.Targets = *tl
			}

			sqlVAL.union.val = backup
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2045
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2049
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2053
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2061
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2069
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2076
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2080
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2089
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2093
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2118
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2125
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2129
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2133
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 200:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2186
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2191
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2195
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2201
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2206
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2211
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2216
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2221
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2225
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2241
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2244
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2248
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2252
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2264
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2270
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2280
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2288
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2302
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2308
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2312
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2316
		{
			sqlVAL.union.val = nil
		}
	case 226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2322
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2336
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2337
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2338
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2339
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2357
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2362
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2372
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2389
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2391
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2398
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2408
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2417
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2425
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2427
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2431
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2434
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2446
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2459
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2465
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2470
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2482
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2484
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2485
		{
		}
	case 262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2486
		{
			return helpWith(sqllex, "CREATE")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2489
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2490
		{
			return unimplemented(sqllex, "create cast")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2491
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2492
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2493
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2494
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2495
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2496
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2497
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2498
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2499
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2500
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 275:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2501
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2502
		{
			return unimplemented(sqllex, "create operator")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2503
		{
			return unimplemented(sqllex, "create publication")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2504
		{
			return unimplemented(sqllex, "create rule")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2505
		{
			return unimplemented(sqllex, "create server")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2506
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2507
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2508
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2511
		{
		}
	case 284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2512
		{
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2515
		{
		}
	case 286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2516
		{
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2519
		{
		}
	case 288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2520
		{
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2523
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2524
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2525
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2526
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2527
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2528
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 295:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2529
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2530
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2531
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2532
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2533
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2534
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2535
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2536
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2537
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2538
		{
			return unimplemented(sqllex, "drop server")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2539
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2540
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2541
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2545
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2546
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2547
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2548
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2549
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2551
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2552
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2553
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2554
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2564
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2572
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2576
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2586
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2590
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2599
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2612
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2622
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2633
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2661
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2675
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2696
		{

			sqlVAL.union.val = nil
		}
	case 347:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2710
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2720
		{
			return helpWith(sqllex, "DELETE")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2723
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2724
		{
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2732
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2735
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2736
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2737
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2738
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2739
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2748
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2749
		{
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2750
		{
			return helpWith(sqllex, "DROP")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2753
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2754
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2755
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2756
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2757
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2758
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2766
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2770
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2773
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2788
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2796
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2800
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2803
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2828
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2851
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2866
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2873
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2878
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2893
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2897
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2900
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2904
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2909
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2922
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2927
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2934
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2938
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2960
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2967
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2969
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2977
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2993
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3001
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3012
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3016
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3019
		{
			return helpWith(sqllex, "DELETE")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3021
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3022
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3023
		{
			return helpWith(sqllex, "INSERT")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3024
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3026
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3027
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3028
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3036
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3037
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3038
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3043
		{
			return helpWith(sqllex, "DELETE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3044
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3045
		{
			return helpWith(sqllex, "INSERT")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3047
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3051
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3052
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3056
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3060
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3070
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3078
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3086
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3094
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3111
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3119
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3127
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3137
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3149
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3152
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3172
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3176
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3180
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3183
		{
			return helpWith(sqllex, "GRANT")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3207
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3211
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3214
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3219
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3223
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3233
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3237
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3251
		{
			return helpWith(sqllex, "RESET")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3252
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3260
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3267
		{
			return helpWith(sqllex, "RESET")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3278
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3292
		{
			return helpWith(sqllex, "USE")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3296
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3297
		{
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3298
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3299
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3303
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3304
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3305
		{
			return helpWith(sqllex, "USE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3321
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3339
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3365
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 520:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3379
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3383
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3393
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3416
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3419
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3429
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3445
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3449
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3454
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3471
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3476
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3479
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3483
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3502
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3509
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3514
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3519
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3524
		{
			return unimplemented(sqllex, "set from current")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3525
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3533
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3538
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3555
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3566
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3587
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3591
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3597
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = tree.Low
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = tree.Normal
		}
	case 568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3627
		{
			sqlVAL.union.val = tree.High
		}
	case 569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3638
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3642
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3651
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3655
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3668
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3669
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3670
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3671
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3672
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3673
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3675
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3676
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3677
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3678
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3679
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3680
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3681
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3683
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3684
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3685
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3686
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3687
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3688
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3689
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3690
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3691
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3693
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3694
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3696
		{
			return helpWith(sqllex, "SHOW")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3701
		{
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3702
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3705
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3709
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3714
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3719
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3724
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3734
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3735
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3736
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3747
		{
			sqlVAL.str = "client_encoding"
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3750
		{
			sqlVAL.str = "timezone"
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3751
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3765
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3769
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3773
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3784
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3792
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3800
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3808
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3817
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3826
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3834
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3844
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3848
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3851
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3858
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3862
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3865
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3873
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3876
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3884
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3888
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3896
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3899
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3907
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3910
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3923
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3931
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3942
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3955
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3964
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3972
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3975
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3977
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3980
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3991
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3996
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4000
		{
			sqlVAL.union.val = true
		}
	case 693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4002
		{
			sqlVAL.union.val = true
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4004
		{
			sqlVAL.union.val = false
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4014
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4018
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4021
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4022
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4028
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4031
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4033
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4041
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4049
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4058
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4061
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4063
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4066
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4068
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4072
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4075
		{
			sqlVAL.union.val = true
		}
	case 712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = false
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4087
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4092
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4100
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4110
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4120
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4123
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			sqlVAL.union.val = true
		}
	case 722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = false
		}
	case 723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4134
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4138
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4148
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4155
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4162
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4166
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4176
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4184
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4189
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4194
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4198
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4210
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4214
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4230
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4238
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4241
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4249
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4253
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4261
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4269
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4276
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4283
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4287
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4298
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4306
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4312
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4321
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4326
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4330
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4333
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4337
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4344
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4349
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4477
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4520
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4529
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4570
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4573
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4581
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4593
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4632
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:4647
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4664
		{
			sqlVAL.union.val = nil
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4668
		{

			sqlVAL.union.val = nil
		}
	case 786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4674
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4679
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4685
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4689
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4694
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4699
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4710
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4720
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 796:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4726
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4739
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4753
		{
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4754
		{
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4755
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4773
		{
			sqlVAL.union.val = true
		}
	case 802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4774
		{
			sqlVAL.union.val = true
		}
	case 803:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4775
		{
			sqlVAL.union.val = false
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4779
		{
			sqlVAL.union.val = true
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4780
		{
			sqlVAL.union.val = true
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4781
		{
			sqlVAL.union.val = true
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = true
		}
	case 809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4783
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4788
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4794
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4798
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4810
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4827
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4833
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4838
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4839
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4840
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4841
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4842
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4843
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4844
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4845
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4846
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4851
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4867
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4872
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4877
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4890
		{
			sqlVAL.str = ""
		}
	case 840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 841:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4903
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4917
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4923
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4927
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 846:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4933
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4943
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 849:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4967
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4978
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4982
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4996
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5000
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5004
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5008
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5012
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5038
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5042
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5053
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5057
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5061
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5075
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5079
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5086
		{
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5087
		{
		}
	case 873:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5092
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
				Predicate:   sqlDollar[10].union.expr(),
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5104
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
					Predicate:   sqlDollar[11].union.expr(),
				},
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:      tree.Name(sqlDollar[3].str),
				Columns:   sqlDollar[5].union.idxElems(),
				Inverted:  true,
				Predicate: sqlDollar[7].union.expr(),
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5129
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5141
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5146
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5152
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5158
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5182
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5193
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5200
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5204
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5210
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5220
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5231
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5235
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5242
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5248
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5259
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5275
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5285
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5289
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5300
		{
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5301
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5302
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5303
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5304
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5305
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5323
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 910:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5327
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 911:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5333
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 914:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5349
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5369
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5373
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5377
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5381
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5390
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5394
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5430
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5461
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5470
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5478
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5485
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5489
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5493
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5494
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5504
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5507
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5509
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5511
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5514
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5517
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5519
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5521
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5529
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5532
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5540
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5554
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5557
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5569
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5572
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = true
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5582
		{

			sqlVAL.union.val = true
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = false
		}
	case 966:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5597
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5611
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Temporary:   sqlDollar[4].union.persistenceType(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5623
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5634
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5642
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5646
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5650
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5658
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = nil
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5687
		{
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5688
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5697
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5704
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5706
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5708
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5710
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5712
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5714
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 992:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5722
		{
			sqlVAL.union.val = []string(nil)
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5732
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 995:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5750
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[5].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Columns:      sqlDollar[10].union.idxElems(),
				Sharded:      sqlDollar[12].union.shardedIndexDef(),
				Storing:      sqlDollar[13].union.nameList(),
				Interleave:   sqlDollar[14].union.interleave(),
				PartitionBy:  sqlDollar[15].union.partitionBy(),
				Predicate:    sqlDollar[16].union.expr(),
				Inverted:     sqlDollar[8].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:5767
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[8].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Sharded:      sqlDollar[15].union.shardedIndexDef(),
				Storing:      sqlDollar[16].union.nameList(),
				Interleave:   sqlDollar[17].union.interleave(),
				PartitionBy:  sqlDollar[18].union.partitionBy(),
				Inverted:     sqlDollar[11].union.bool(),
				Predicate:    sqlDollar[19].union.expr(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5785
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[6].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				Columns:      sqlDollar[10].union.idxElems(),
				Storing:      sqlDollar[12].union.nameList(),
				Interleave:   sqlDollar[13].union.interleave(),
				PartitionBy:  sqlDollar[14].union.partitionBy(),
				Predicate:    sqlDollar[15].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:5801
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[9].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Storing:      sqlDollar[15].union.nameList(),
				Interleave:   sqlDollar[16].union.interleave(),
				PartitionBy:  sqlDollar[17].union.partitionBy(),
				Predicate:    sqlDollar[18].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5817
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5821
		{

			switch sqlDollar[2].str {
			case "gin":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "gist", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = false
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = true
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqlVAL.union.val = false
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5852
		{
			sqlVAL.union.val = true
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5856
		{
			sqlVAL.union.val = false
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5875
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5897
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5898
		{
			sqlVAL.str = ""
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5902
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5910
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5922
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5928
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5936
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5942
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5950
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5956
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5973
		{
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5974
		{
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5977
		{
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5978
		{
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5989
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5999
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6008
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6011
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6022
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6026
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6027
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6028
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6047
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6052
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6065
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6070
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6079
		{
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6080
		{
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6081
		{
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6095
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6098
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6101
		{
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6102
		{
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6106
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6110
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6116
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6130
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6143
		{
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6145
		{
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6149
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6158
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6162
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6174
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6180
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6194
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6204
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6214
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6222
		{
			sqlVAL.str = ""
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.str = ""
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6238
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.str = ""
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.str = ""
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6257
		{
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6258
		{
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6277
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6284
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6295
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6302
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6306
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6315
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6364
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6372
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6381
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6382
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6390
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6416
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6428
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6440
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6444
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6460
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6464
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6556
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6565
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6596
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6599
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6603
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6610
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6645
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6646
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6647
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6669
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6708
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6752
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6768
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = true
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6793
		{
			sqlVAL.union.val = false
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6799
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6821
		{
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6822
		{
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = nil
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6835
		{
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6836
		{
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = true
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = false
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = false
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = true
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6860
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6865
		{
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6866
		{
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6890
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6907
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6928
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6933
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6949
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6953
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6962
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6971
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6983
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6987
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6995
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7028
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7050
		{
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7051
		{
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7054
		{
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7055
		{
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7108
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7110
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7125
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7147
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7152
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7157
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7163
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7168
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7175
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7180
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7191
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7199
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7238
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7248
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7258
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7283
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7294
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7324
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7357
		{
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7359
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = nil
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7372
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = true
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = false
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7445
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7458
		{
			sqlVAL.str = tree.AstFull
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7462
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.str = tree.AstRight
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.str = tree.AstInner
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7476
		{
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7477
		{
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.str = tree.AstHash
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.str = ""
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7523
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7535
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7539
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7544
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7562
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7568
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7574
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7584
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7613
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7626
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7634
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7635
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7653
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7655
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7663
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7664
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7676
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7683
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7692
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7732
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.IDTypeReference{ID: uint32(id)}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7737
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7744
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7745
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7749
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7750
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7753
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7754
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7755
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = types.Geography
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7761
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7765
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7769
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7777
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7803
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7811
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7819
		{
			sqlVAL.union.val = nil
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7830
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = types.Int2
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.union.val = types.Int
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = types.Float4
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = types.Float
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7854
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7862
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7870
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.union.val = types.Bool
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7884
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = types.Float
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7903
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7909
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7917
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7921
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7931
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7957
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = types.String
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7970
		{
			sqlVAL.union.val = true
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = false
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = types.Date
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7980
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7988
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8002
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8011
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8019
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8036
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = true
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = false
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.union.val = false
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = types.Interval
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8060
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8071
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8144
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8159
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8165
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = nil
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8189
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8234
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8249
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8270
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8290
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8322
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8338
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8342
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8482
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8501
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8539
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8567
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8589
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8633
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8661
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8677
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8681
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8693
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8767
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8783
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8788
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8790
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8814
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8823
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8830
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8834
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8838
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8853
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8857
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8868
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8876
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8879
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8880
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8895
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8904
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8970
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9005
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9041
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9045
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9069
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9077
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9095
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9100
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9109
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9118
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9127
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9136
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9141
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9146
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9151
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9156
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9165
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9166
		{
			return unimplemented(sqllex, "treat")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9187
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9192
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9229
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9239
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.str = ""
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9298
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9328
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9341
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9401
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9405
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9409
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9414
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9438
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = tree.Any
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = tree.Some
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = tree.All
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9464
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.union.val = tree.Div
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9468
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = tree.LT
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = tree.GT
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = tree.LE
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = tree.GE
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = tree.NE
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = tree.Like
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9631
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9639
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9645
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9681
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9685
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9689
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9799
		{
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9800
		{
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9872
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9880
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9953
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9969
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9978
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9989
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9998
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10006
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10018
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10196
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10209
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10216
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.str = ""
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
