// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:66

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}

//line sql-gen.y:621
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BLOB = lex.BLOB
const BOOL = lex.BOOL
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BY = lex.BY
const BYTEA = lex.BYTEA
const BYTES = lex.BYTES
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEALLOCATE = lex.DEALLOCATE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INT2VECTOR = lex.INT2VECTOR
const INT2 = lex.INT2
const INT4 = lex.INT4
const INT8 = lex.INT8
const INT64 = lex.INT64
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIAL = lex.SERIAL
const SERIAL2 = lex.SERIAL2
const SERIAL4 = lex.SERIAL4
const SERIAL8 = lex.SERIAL8
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BOTH",
	"BY",
	"BYTEA",
	"BYTES",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEALLOCATE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXISTS",
	"EXECUTE",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INT2VECTOR",
	"INT2",
	"INT4",
	"INT8",
	"INT64",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIAL",
	"SERIAL2",
	"SERIAL4",
	"SERIAL8",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:10193

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 24,
	-2, 1105,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	184, 929,
	201, 929,
	216, 252,
	300, 252,
	309, 748,
	336, 252,
	345, 748,
	384, 748,
	408, 252,
	432, 748,
	-2, 0,
	-1, 75,
	216, 256,
	-2, 0,
	-1, 76,
	111, 1105,
	190, 1105,
	418, 1105,
	419, 1105,
	-2, 0,
	-1, 88,
	124, 1079,
	140, 1079,
	153, 1079,
	198, 1079,
	228, 1079,
	264, 1079,
	274, 1079,
	413, 1079,
	-2, 1050,
	-1, 120,
	130, 664,
	215, 664,
	303, 644,
	354, 644,
	401, 664,
	-2, 0,
	-1, 121,
	4, 1107,
	21, 1107,
	22, 1107,
	23, 1107,
	24, 1107,
	25, 1107,
	27, 1107,
	33, 1107,
	38, 1107,
	39, 1107,
	40, 1107,
	41, 1107,
	42, 1107,
	43, 1107,
	44, 1107,
	45, 1107,
	46, 1107,
	47, 1107,
	48, 1107,
	49, 1107,
	50, 1107,
	52, 1107,
	53, 1107,
	54, 1107,
	55, 1107,
	56, 1107,
	57, 1107,
	60, 1107,
	61, 1107,
	62, 1107,
	63, 1107,
	65, 1107,
	66, 1107,
	70, 1107,
	71, 1107,
	72, 1107,
	73, 1107,
	74, 1107,
	75, 1107,
	77, 1107,
	78, 1107,
	79, 1107,
	80, 1107,
	82, 1107,
	84, 1107,
	85, 1107,
	86, 1107,
	88, 1107,
	90, 1107,
	91, 1107,
	99, 1107,
	100, 1107,
	101, 1107,
	102, 1107,
	103, 1107,
	104, 1107,
	105, 1107,
	106, 1107,
	108, 1107,
	110, 1107,
	111, 1107,
	113, 1107,
	116, 1107,
	117, 1107,
	118, 1107,
	120, 1107,
	122, 1107,
	123, 1107,
	125, 1107,
	126, 1107,
	127, 1107,
	128, 1107,
	129, 1107,
	130, 1107,
	131, 1107,
	132, 1107,
	133, 1107,
	134, 1107,
	135, 1107,
	136, 1107,
	137, 1107,
	139, 1107,
	145, 1107,
	146, 1107,
	147, 1107,
	148, 1107,
	149, 1107,
	150, 1107,
	152, 1107,
	154, 1107,
	158, 1107,
	159, 1107,
	161, 1107,
	162, 1107,
	164, 1107,
	165, 1107,
	167, 1107,
	168, 1107,
	169, 1107,
	170, 1107,
	171, 1107,
	172, 1107,
	173, 1107,
	174, 1107,
	176, 1107,
	177, 1107,
	179, 1107,
	180, 1107,
	181, 1107,
	184, 1107,
	185, 1107,
	186, 1107,
	187, 1107,
	190, 1107,
	191, 1107,
	192, 1107,
	193, 1107,
	194, 1107,
	195, 1107,
	196, 1107,
	197, 1107,
	199, 1107,
	201, 1107,
	203, 1107,
	205, 1107,
	206, 1107,
	207, 1107,
	209, 1107,
	210, 1107,
	213, 1107,
	214, 1107,
	215, 1107,
	216, 1107,
	217, 1107,
	219, 1107,
	220, 1107,
	222, 1107,
	223, 1107,
	225, 1107,
	226, 1107,
	229, 1107,
	230, 1107,
	233, 1107,
	234, 1107,
	235, 1107,
	237, 1107,
	238, 1107,
	239, 1107,
	240, 1107,
	241, 1107,
	242, 1107,
	243, 1107,
	244, 1107,
	245, 1107,
	246, 1107,
	248, 1107,
	249, 1107,
	250, 1107,
	251, 1107,
	253, 1107,
	255, 1107,
	257, 1107,
	259, 1107,
	260, 1107,
	261, 1107,
	262, 1107,
	263, 1107,
	265, 1107,
	266, 1107,
	267, 1107,
	269, 1107,
	270, 1107,
	271, 1107,
	272, 1107,
	275, 1107,
	276, 1107,
	277, 1107,
	279, 1107,
	281, 1107,
	282, 1107,
	283, 1107,
	284, 1107,
	285, 1107,
	286, 1107,
	287, 1107,
	288, 1107,
	289, 1107,
	290, 1107,
	292, 1107,
	293, 1107,
	294, 1107,
	295, 1107,
	296, 1107,
	297, 1107,
	299, 1107,
	301, 1107,
	302, 1107,
	303, 1107,
	304, 1107,
	305, 1107,
	306, 1107,
	307, 1107,
	308, 1107,
	309, 1107,
	310, 1107,
	312, 1107,
	313, 1107,
	314, 1107,
	315, 1107,
	316, 1107,
	318, 1107,
	319, 1107,
	320, 1107,
	321, 1107,
	322, 1107,
	323, 1107,
	324, 1107,
	325, 1107,
	327, 1107,
	329, 1107,
	330, 1107,
	331, 1107,
	332, 1107,
	333, 1107,
	334, 1107,
	336, 1107,
	337, 1107,
	338, 1107,
	339, 1107,
	340, 1107,
	341, 1107,
	342, 1107,
	343, 1107,
	345, 1107,
	346, 1107,
	347, 1107,
	348, 1107,
	349, 1107,
	350, 1107,
	351, 1107,
	352, 1107,
	353, 1107,
	354, 1107,
	356, 1107,
	357, 1107,
	358, 1107,
	359, 1107,
	360, 1107,
	362, 1107,
	363, 1107,
	364, 1107,
	365, 1107,
	366, 1107,
	368, 1107,
	369, 1107,
	370, 1107,
	371, 1107,
	372, 1107,
	373, 1107,
	374, 1107,
	375, 1107,
	376, 1107,
	377, 1107,
	378, 1107,
	379, 1107,
	381, 1107,
	382, 1107,
	383, 1107,
	385, 1107,
	386, 1107,
	387, 1107,
	388, 1107,
	389, 1107,
	390, 1107,
	391, 1107,
	393, 1107,
	394, 1107,
	395, 1107,
	396, 1107,
	397, 1107,
	399, 1107,
	401, 1107,
	402, 1107,
	403, 1107,
	404, 1107,
	405, 1107,
	407, 1107,
	408, 1107,
	409, 1107,
	411, 1107,
	412, 1107,
	415, 1107,
	416, 1107,
	417, 1107,
	418, 1107,
	419, 1107,
	420, 1107,
	422, 1107,
	424, 1107,
	425, 1107,
	426, 1107,
	427, 1107,
	428, 1107,
	429, 1107,
	430, 1107,
	432, 1107,
	433, 1107,
	434, 1107,
	439, 1107,
	440, 1107,
	441, 1107,
	442, 1107,
	443, 1107,
	444, 1107,
	-2, 0,
	-1, 122,
	1, 980,
	205, 980,
	299, 980,
	307, 980,
	447, 980,
	470, 980,
	-2, 0,
	-1, 124,
	1, 980,
	470, 980,
	-2, 0,
	-1, 125,
	1, 980,
	470, 980,
	-2, 0,
	-1, 126,
	1, 984,
	470, 984,
	-2, 0,
	-1, 150,
	124, 1078,
	140, 1078,
	153, 1078,
	198, 1078,
	228, 1078,
	264, 1078,
	274, 1078,
	413, 1078,
	-2, 1053,
	-1, 183,
	4, 1114,
	5, 1114,
	6, 1114,
	7, 1114,
	8, 1114,
	9, 1114,
	10, 1114,
	21, 1114,
	22, 1114,
	23, 1114,
	24, 1114,
	25, 1114,
	27, 1114,
	33, 1114,
	34, 1114,
	38, 1114,
	39, 1114,
	40, 1114,
	41, 1114,
	42, 1114,
	43, 1114,
	44, 1114,
	45, 1114,
	46, 1114,
	47, 1114,
	48, 1114,
	49, 1114,
	50, 1114,
	52, 1114,
	53, 1114,
	54, 1114,
	55, 1114,
	56, 1114,
	57, 1114,
	58, 1114,
	59, 1114,
	60, 1114,
	61, 1114,
	62, 1114,
	63, 1114,
	65, 1114,
	66, 1114,
	68, 1114,
	70, 1114,
	71, 1114,
	72, 1114,
	73, 1114,
	74, 1114,
	75, 1114,
	77, 1114,
	78, 1114,
	79, 1114,
	80, 1114,
	82, 1114,
	84, 1114,
	85, 1114,
	86, 1114,
	88, 1114,
	89, 1114,
	90, 1114,
	91, 1114,
	92, 1114,
	93, 1114,
	94, 1114,
	95, 1114,
	96, 1114,
	97, 1114,
	98, 1114,
	99, 1114,
	100, 1114,
	101, 1114,
	102, 1114,
	103, 1114,
	104, 1114,
	105, 1114,
	106, 1114,
	107, 1114,
	108, 1114,
	110, 1114,
	111, 1114,
	113, 1114,
	116, 1114,
	117, 1114,
	118, 1114,
	120, 1114,
	122, 1114,
	123, 1114,
	125, 1114,
	126, 1114,
	127, 1114,
	128, 1114,
	129, 1114,
	130, 1114,
	131, 1114,
	132, 1114,
	133, 1114,
	134, 1114,
	135, 1114,
	136, 1114,
	137, 1114,
	138, 1114,
	139, 1114,
	145, 1114,
	146, 1114,
	147, 1114,
	148, 1114,
	149, 1114,
	150, 1114,
	152, 1114,
	154, 1114,
	157, 1114,
	158, 1114,
	159, 1114,
	161, 1114,
	162, 1114,
	164, 1114,
	165, 1114,
	167, 1114,
	168, 1114,
	169, 1114,
	170, 1114,
	171, 1114,
	172, 1114,
	173, 1114,
	174, 1114,
	175, 1114,
	176, 1114,
	177, 1114,
	179, 1114,
	180, 1114,
	181, 1114,
	184, 1114,
	185, 1114,
	186, 1114,
	187, 1114,
	189, 1114,
	190, 1114,
	191, 1114,
	192, 1114,
	193, 1114,
	194, 1114,
	195, 1114,
	196, 1114,
	197, 1114,
	199, 1114,
	201, 1114,
	202, 1114,
	203, 1114,
	204, 1114,
	205, 1114,
	206, 1114,
	207, 1114,
	208, 1114,
	209, 1114,
	210, 1114,
	213, 1114,
	214, 1114,
	215, 1114,
	216, 1114,
	217, 1114,
	219, 1114,
	220, 1114,
	222, 1114,
	223, 1114,
	224, 1114,
	225, 1114,
	226, 1114,
	227, 1114,
	229, 1114,
	230, 1114,
	231, 1114,
	232, 1114,
	233, 1114,
	234, 1114,
	235, 1114,
	237, 1114,
	238, 1114,
	239, 1114,
	240, 1114,
	241, 1114,
	242, 1114,
	243, 1114,
	244, 1114,
	245, 1114,
	246, 1114,
	247, 1114,
	248, 1114,
	249, 1114,
	250, 1114,
	251, 1114,
	252, 1114,
	253, 1114,
	254, 1114,
	255, 1114,
	256, 1114,
	257, 1114,
	258, 1114,
	259, 1114,
	260, 1114,
	261, 1114,
	262, 1114,
	263, 1114,
	265, 1114,
	266, 1114,
	267, 1114,
	270, 1114,
	271, 1114,
	272, 1114,
	275, 1114,
	276, 1114,
	277, 1114,
	278, 1114,
	279, 1114,
	280, 1114,
	281, 1114,
	282, 1114,
	283, 1114,
	284, 1114,
	285, 1114,
	286, 1114,
	287, 1114,
	288, 1114,
	289, 1114,
	290, 1114,
	292, 1114,
	293, 1114,
	294, 1114,
	295, 1114,
	296, 1114,
	297, 1114,
	299, 1114,
	301, 1114,
	302, 1114,
	303, 1114,
	304, 1114,
	305, 1114,
	306, 1114,
	307, 1114,
	308, 1114,
	309, 1114,
	310, 1114,
	312, 1114,
	313, 1114,
	314, 1114,
	315, 1114,
	316, 1114,
	318, 1114,
	319, 1114,
	320, 1114,
	321, 1114,
	322, 1114,
	323, 1114,
	324, 1114,
	325, 1114,
	327, 1114,
	328, 1114,
	329, 1114,
	330, 1114,
	331, 1114,
	332, 1114,
	333, 1114,
	334, 1114,
	336, 1114,
	337, 1114,
	338, 1114,
	339, 1114,
	340, 1114,
	341, 1114,
	342, 1114,
	343, 1114,
	345, 1114,
	346, 1114,
	347, 1114,
	348, 1114,
	349, 1114,
	350, 1114,
	351, 1114,
	352, 1114,
	353, 1114,
	354, 1114,
	355, 1114,
	356, 1114,
	357, 1114,
	358, 1114,
	359, 1114,
	360, 1114,
	361, 1114,
	362, 1114,
	363, 1114,
	364, 1114,
	365, 1114,
	366, 1114,
	368, 1114,
	369, 1114,
	370, 1114,
	371, 1114,
	372, 1114,
	373, 1114,
	374, 1114,
	375, 1114,
	376, 1114,
	377, 1114,
	378, 1114,
	379, 1114,
	381, 1114,
	382, 1114,
	383, 1114,
	385, 1114,
	386, 1114,
	387, 1114,
	388, 1114,
	389, 1114,
	390, 1114,
	391, 1114,
	393, 1114,
	394, 1114,
	395, 1114,
	396, 1114,
	397, 1114,
	399, 1114,
	401, 1114,
	402, 1114,
	403, 1114,
	404, 1114,
	405, 1114,
	406, 1114,
	407, 1114,
	408, 1114,
	409, 1114,
	411, 1114,
	412, 1114,
	414, 1114,
	415, 1114,
	416, 1114,
	417, 1114,
	418, 1114,
	419, 1114,
	420, 1114,
	421, 1114,
	422, 1114,
	424, 1114,
	425, 1114,
	426, 1114,
	427, 1114,
	428, 1114,
	429, 1114,
	430, 1114,
	432, 1114,
	433, 1114,
	434, 1114,
	439, 1114,
	440, 1114,
	441, 1114,
	442, 1114,
	443, 1114,
	444, 1114,
	445, 1114,
	451, 1114,
	458, 1114,
	459, 1114,
	460, 1114,
	467, 1114,
	471, 1114,
	-2, 0,
	-1, 565,
	156, 1815,
	398, 1815,
	450, 1815,
	469, 1815,
	-2, 0,
	-1, 566,
	156, 1895,
	398, 1895,
	450, 1895,
	469, 1895,
	-2, 0,
	-1, 567,
	156, 1804,
	398, 1804,
	450, 1804,
	469, 1804,
	-2, 0,
	-1, 569,
	156, 1989,
	398, 1989,
	450, 1989,
	469, 1989,
	-2, 0,
	-1, 571,
	156, 2019,
	398, 2019,
	450, 2019,
	469, 2019,
	-2, 0,
	-1, 578,
	156, 1906,
	398, 1906,
	450, 1906,
	469, 1906,
	-2, 509,
	-1, 600,
	469, 1761,
	472, 1761,
	-2, 717,
	-1, 601,
	469, 1763,
	472, 1763,
	-2, 718,
	-1, 602,
	469, 1762,
	472, 1762,
	-2, 719,
	-1, 603,
	472, 1700,
	-2, 720,
	-1, 646,
	432, 911,
	-2, 749,
	-1, 752,
	303, 645,
	354, 645,
	-2, 0,
	-1, 753,
	303, 644,
	354, 644,
	-2, 592,
	-1, 757,
	1, 674,
	466, 674,
	468, 674,
	470, 674,
	-2, 0,
	-1, 758,
	1, 716,
	153, 716,
	466, 716,
	468, 716,
	470, 716,
	-2, 0,
	-1, 766,
	1, 648,
	466, 648,
	468, 648,
	470, 648,
	-2, 0,
	-1, 769,
	1, 674,
	466, 674,
	468, 674,
	470, 674,
	-2, 0,
	-1, 770,
	1, 676,
	466, 676,
	468, 676,
	470, 676,
	-2, 0,
	-1, 771,
	1, 679,
	466, 679,
	468, 679,
	470, 679,
	-2, 0,
	-1, 776,
	1, 695,
	466, 695,
	468, 695,
	470, 695,
	-2, 0,
	-1, 777,
	1, 697,
	466, 697,
	468, 697,
	470, 697,
	-2, 0,
	-1, 821,
	140, 1116,
	153, 1116,
	228, 1116,
	264, 1116,
	-2, 1057,
	-1, 834,
	140, 1115,
	153, 1115,
	228, 1115,
	264, 1115,
	-2, 1054,
	-1, 858,
	469, 1760,
	-2, 517,
	-1, 886,
	467, 1752,
	-2, 1743,
	-1, 892,
	5, 1256,
	-2, 1794,
	-1, 893,
	5, 1257,
	-2, 1799,
	-1, 894,
	5, 1258,
	-2, 1798,
	-1, 895,
	5, 1259,
	-2, 2016,
	-1, 896,
	5, 1260,
	-2, 1908,
	-1, 897,
	5, 1261,
	-2, 1981,
	-1, 898,
	5, 1262,
	-2, 1983,
	-1, 899,
	5, 1263,
	-2, 1996,
	-1, 900,
	5, 1264,
	-2, 1984,
	-1, 901,
	5, 1265,
	-2, 1985,
	-1, 902,
	5, 1266,
	-2, 1793,
	-1, 903,
	5, 1267,
	-2, 2032,
	-1, 904,
	5, 1268,
	-2, 1869,
	-1, 905,
	5, 1269,
	-2, 1919,
	-1, 906,
	5, 1270,
	-2, 1921,
	-1, 907,
	5, 1271,
	-2, 1873,
	-1, 908,
	5, 1272,
	467, 1770,
	-2, 1761,
	-1, 914,
	467, 1771,
	-2, 1762,
	-1, 916,
	5, 1276,
	-2, 2065,
	-1, 917,
	5, 1277,
	-2, 2066,
	-1, 918,
	5, 1278,
	-2, 1872,
	-1, 919,
	5, 1279,
	-2, 2078,
	-1, 920,
	5, 1280,
	-2, 1874,
	-1, 921,
	5, 1281,
	-2, 1875,
	-1, 922,
	5, 1282,
	-2, 1876,
	-1, 923,
	5, 1283,
	-2, 2047,
	-1, 924,
	5, 1284,
	-2, 2076,
	-1, 925,
	5, 1285,
	-2, 1852,
	-1, 926,
	5, 1286,
	-2, 1853,
	-1, 927,
	5, 1300,
	-2, 2059,
	-1, 929,
	5, 1275,
	-2, 2055,
	-1, 930,
	5, 1275,
	-2, 2054,
	-1, 931,
	5, 1275,
	-2, 2071,
	-1, 932,
	5, 1292,
	-2, 2049,
	-1, 933,
	5, 1293,
	-2, 1795,
	-1, 934,
	5, 1303,
	-2, 2048,
	-1, 935,
	5, 1305,
	-2, 2087,
	-1, 937,
	5, 1316,
	-2, 1826,
	-1, 938,
	5, 1327,
	-2, 2080,
	-1, 939,
	5, 1319,
	-2, 2081,
	-1, 940,
	5, 1327,
	-2, 2082,
	-1, 941,
	5, 1323,
	-2, 2083,
	-1, 942,
	5, 1244,
	-2, 1882,
	-1, 943,
	5, 1245,
	-2, 1883,
	-1, 944,
	469, 1758,
	-2, 1742,
	-1, 945,
	467, 2108,
	-2, 1759,
	-1, 967,
	5, 1311,
	-2, 2007,
	-1, 985,
	5, 1310,
	-2, 2088,
	-1, 995,
	5, 1312,
	433, 1312,
	-2, 2050,
	-1, 996,
	5, 1313,
	433, 1313,
	-2, 2051,
	-1, 1033,
	467, 1770,
	-2, 1761,
	-1, 1061,
	156, 2019,
	398, 2019,
	450, 2019,
	469, 2019,
	-2, 0,
	-1, 1064,
	1, 495,
	470, 495,
	-2, 992,
	-1, 1184,
	318, 1739,
	460, 1739,
	-2, 1738,
	-1, 1196,
	471, 1739,
	-2, 1740,
	-1, 1197,
	88, 1103,
	250, 1103,
	288, 1103,
	-2, 910,
	-1, 1208,
	88, 1103,
	250, 1103,
	288, 1103,
	-2, 910,
	-1, 1248,
	309, 748,
	432, 748,
	-2, 251,
	-1, 1268,
	88, 1103,
	250, 1103,
	288, 1103,
	-2, 910,
	-1, 1271,
	88, 1103,
	250, 1103,
	288, 1103,
	-2, 910,
	-1, 1277,
	268, 1765,
	-2, 0,
	-1, 1343,
	1, 370,
	466, 370,
	468, 370,
	470, 370,
	-2, 1077,
	-1, 1346,
	4, 2086,
	11, 2086,
	12, 2086,
	14, 2086,
	15, 2086,
	16, 2086,
	17, 2086,
	18, 2086,
	19, 2086,
	21, 2086,
	22, 2086,
	23, 2086,
	24, 2086,
	25, 2086,
	27, 2086,
	30, 2086,
	31, 2086,
	33, 2086,
	35, 2086,
	38, 2086,
	39, 2086,
	40, 2086,
	41, 2086,
	42, 2086,
	43, 2086,
	44, 2086,
	45, 2086,
	46, 2086,
	47, 2086,
	48, 2086,
	49, 2086,
	50, 2086,
	52, 2086,
	53, 2086,
	54, 2086,
	55, 2086,
	56, 2086,
	57, 2086,
	60, 2086,
	61, 2086,
	62, 2086,
	63, 2086,
	65, 2086,
	66, 2086,
	67, 2086,
	70, 2086,
	71, 2086,
	72, 2086,
	73, 2086,
	74, 2086,
	75, 2086,
	76, 2086,
	77, 2086,
	78, 2086,
	79, 2086,
	80, 2086,
	82, 2086,
	83, 2086,
	84, 2086,
	85, 2086,
	86, 2086,
	88, 2086,
	89, 2086,
	90, 2086,
	91, 2086,
	99, 2086,
	100, 2086,
	101, 2086,
	102, 2086,
	103, 2086,
	104, 2086,
	105, 2086,
	106, 2086,
	108, 2086,
	110, 2086,
	111, 2086,
	113, 2086,
	116, 2086,
	117, 2086,
	118, 2086,
	120, 2086,
	122, 2086,
	123, 2086,
	125, 2086,
	126, 2086,
	127, 2086,
	128, 2086,
	129, 2086,
	130, 2086,
	131, 2086,
	132, 2086,
	133, 2086,
	134, 2086,
	135, 2086,
	136, 2086,
	137, 2086,
	141, 2086,
	142, 2086,
	143, 2086,
	144, 2086,
	145, 2086,
	146, 2086,
	147, 2086,
	148, 2086,
	149, 2086,
	150, 2086,
	151, 2086,
	152, 2086,
	154, 2086,
	157, 2086,
	158, 2086,
	159, 2086,
	161, 2086,
	162, 2086,
	164, 2086,
	165, 2086,
	167, 2086,
	168, 2086,
	169, 2086,
	170, 2086,
	171, 2086,
	172, 2086,
	173, 2086,
	174, 2086,
	175, 2086,
	176, 2086,
	177, 2086,
	178, 2086,
	179, 2086,
	180, 2086,
	181, 2086,
	182, 2086,
	183, 2086,
	185, 2086,
	186, 2086,
	187, 2086,
	189, 2086,
	190, 2086,
	191, 2086,
	192, 2086,
	193, 2086,
	194, 2086,
	195, 2086,
	196, 2086,
	197, 2086,
	199, 2086,
	201, 2086,
	202, 2086,
	203, 2086,
	204, 2086,
	205, 2086,
	206, 2086,
	207, 2086,
	208, 2086,
	209, 2086,
	210, 2086,
	211, 2086,
	212, 2086,
	213, 2086,
	214, 2086,
	215, 2086,
	216, 2086,
	217, 2086,
	219, 2086,
	220, 2086,
	222, 2086,
	223, 2086,
	224, 2086,
	225, 2086,
	226, 2086,
	227, 2086,
	229, 2086,
	230, 2086,
	233, 2086,
	234, 2086,
	235, 2086,
	236, 2086,
	237, 2086,
	238, 2086,
	239, 2086,
	240, 2086,
	241, 2086,
	242, 2086,
	243, 2086,
	244, 2086,
	245, 2086,
	246, 2086,
	247, 2086,
	248, 2086,
	249, 2086,
	250, 2086,
	251, 2086,
	253, 2086,
	256, 2086,
	257, 2086,
	259, 2086,
	260, 2086,
	261, 2086,
	262, 2086,
	263, 2086,
	265, 2086,
	266, 2086,
	267, 2086,
	270, 2086,
	271, 2086,
	272, 2086,
	273, 2086,
	275, 2086,
	276, 2086,
	277, 2086,
	279, 2086,
	281, 2086,
	282, 2086,
	283, 2086,
	284, 2086,
	285, 2086,
	286, 2086,
	287, 2086,
	288, 2086,
	289, 2086,
	290, 2086,
	292, 2086,
	293, 2086,
	294, 2086,
	295, 2086,
	296, 2086,
	297, 2086,
	299, 2086,
	301, 2086,
	302, 2086,
	303, 2086,
	304, 2086,
	305, 2086,
	306, 2086,
	307, 2086,
	308, 2086,
	309, 2086,
	310, 2086,
	312, 2086,
	313, 2086,
	314, 2086,
	315, 2086,
	316, 2086,
	317, 2086,
	318, 2086,
	319, 2086,
	320, 2086,
	321, 2086,
	322, 2086,
	323, 2086,
	324, 2086,
	325, 2086,
	327, 2086,
	328, 2086,
	329, 2086,
	330, 2086,
	331, 2086,
	332, 2086,
	333, 2086,
	334, 2086,
	335, 2086,
	336, 2086,
	337, 2086,
	338, 2086,
	339, 2086,
	340, 2086,
	341, 2086,
	342, 2086,
	343, 2086,
	345, 2086,
	346, 2086,
	347, 2086,
	348, 2086,
	349, 2086,
	350, 2086,
	351, 2086,
	352, 2086,
	353, 2086,
	354, 2086,
	356, 2086,
	357, 2086,
	358, 2086,
	359, 2086,
	360, 2086,
	361, 2086,
	362, 2086,
	363, 2086,
	364, 2086,
	365, 2086,
	366, 2086,
	368, 2086,
	369, 2086,
	370, 2086,
	371, 2086,
	372, 2086,
	373, 2086,
	374, 2086,
	375, 2086,
	376, 2086,
	377, 2086,
	378, 2086,
	379, 2086,
	381, 2086,
	382, 2086,
	383, 2086,
	385, 2086,
	386, 2086,
	387, 2086,
	388, 2086,
	389, 2086,
	390, 2086,
	391, 2086,
	393, 2086,
	394, 2086,
	395, 2086,
	396, 2086,
	397, 2086,
	399, 2086,
	401, 2086,
	402, 2086,
	403, 2086,
	404, 2086,
	405, 2086,
	407, 2086,
	408, 2086,
	409, 2086,
	411, 2086,
	412, 2086,
	415, 2086,
	416, 2086,
	417, 2086,
	418, 2086,
	419, 2086,
	420, 2086,
	422, 2086,
	424, 2086,
	425, 2086,
	426, 2086,
	427, 2086,
	428, 2086,
	429, 2086,
	430, 2086,
	432, 2086,
	433, 2086,
	434, 2086,
	439, 2086,
	440, 2086,
	441, 2086,
	442, 2086,
	443, 2086,
	444, 2086,
	445, 2086,
	446, 2086,
	448, 2086,
	449, 2086,
	450, 2086,
	451, 2086,
	452, 2086,
	453, 2086,
	455, 2086,
	456, 2086,
	457, 2086,
	458, 2086,
	459, 2086,
	460, 2086,
	461, 2086,
	462, 2086,
	463, 2086,
	465, 2086,
	468, 2086,
	469, 2086,
	471, 2086,
	472, 2086,
	-2, 0,
	-1, 1351,
	156, 1989,
	398, 1989,
	450, 1989,
	469, 1989,
	-2, 0,
	-1, 1383,
	303, 645,
	354, 645,
	-2, 0,
	-1, 1407,
	1, 640,
	466, 640,
	468, 640,
	470, 640,
	-2, 0,
	-1, 1408,
	1, 665,
	466, 665,
	468, 665,
	470, 665,
	-2, 0,
	-1, 1409,
	1, 647,
	466, 647,
	468, 647,
	470, 647,
	-2, 0,
	-1, 1411,
	1, 651,
	466, 651,
	468, 651,
	470, 651,
	-2, 0,
	-1, 1438,
	1, 2039,
	466, 2039,
	468, 2039,
	469, 2039,
	470, 2039,
	-2, 693,
	-1, 1439,
	1, 1986,
	466, 1986,
	468, 1986,
	469, 1986,
	470, 1986,
	-2, 694,
	-1, 1454,
	1, 987,
	470, 987,
	-2, 992,
	-1, 1458,
	140, 1115,
	153, 1115,
	228, 1115,
	264, 1115,
	-2, 1058,
	-1, 1552,
	124, 1079,
	140, 1079,
	153, 1079,
	198, 1079,
	228, 1079,
	264, 1079,
	274, 1079,
	413, 1079,
	-2, 1486,
	-1, 1609,
	468, 1634,
	-2, 0,
	-1, 1643,
	124, 1079,
	140, 1079,
	153, 1079,
	198, 1079,
	228, 1079,
	264, 1079,
	274, 1079,
	413, 1079,
	-2, 1194,
	-1, 1702,
	467, 1315,
	-2, 1303,
	-1, 1746,
	1, 497,
	470, 497,
	-2, 992,
	-1, 1955,
	1, 642,
	466, 642,
	468, 642,
	470, 642,
	-2, 0,
	-1, 1956,
	1, 667,
	466, 667,
	468, 667,
	470, 667,
	-2, 0,
	-1, 2028,
	333, 1140,
	334, 1140,
	-2, 1348,
	-1, 2059,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1366,
	-1, 2060,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1367,
	-1, 2061,
	83, 0,
	211, 0,
	212, 0,
	452, 0,
	453, 0,
	-2, 1368,
	-1, 2062,
	83, 0,
	211, 0,
	212, 0,
	452, 0,
	453, 0,
	-2, 1369,
	-1, 2063,
	83, 0,
	211, 0,
	212, 0,
	452, 0,
	453, 0,
	-2, 1370,
	-1, 2064,
	83, 0,
	211, 0,
	212, 0,
	452, 0,
	453, 0,
	-2, 1371,
	-1, 2065,
	83, 0,
	211, 0,
	212, 0,
	452, 0,
	453, 0,
	-2, 1372,
	-1, 2066,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1373,
	-1, 2078,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1385,
	-1, 2079,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1386,
	-1, 2080,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1387,
	-1, 2083,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1392,
	-1, 2089,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1396,
	-1, 2091,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1404,
	-1, 2092,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1405,
	-1, 2093,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1406,
	-1, 2094,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1407,
	-1, 2196,
	5, 1272,
	156, 1645,
	467, 1770,
	-2, 1761,
	-1, 2197,
	156, 1646,
	-2, 2043,
	-1, 2198,
	156, 1647,
	-2, 1905,
	-1, 2199,
	156, 1648,
	-2, 1827,
	-1, 2200,
	156, 1649,
	-2, 1863,
	-1, 2201,
	156, 1650,
	-2, 1903,
	-1, 2202,
	156, 1651,
	-2, 1980,
	-1, 2203,
	156, 1652,
	-2, 1469,
	-1, 2272,
	1, 1195,
	2, 1195,
	89, 1195,
	124, 1195,
	140, 1195,
	153, 1195,
	157, 1195,
	163, 1195,
	166, 1195,
	189, 1195,
	198, 1195,
	208, 1195,
	224, 1195,
	228, 1195,
	247, 1195,
	264, 1195,
	268, 1195,
	274, 1195,
	326, 1195,
	328, 1195,
	413, 1195,
	423, 1195,
	436, 1195,
	437, 1195,
	438, 1195,
	447, 1195,
	466, 1195,
	468, 1195,
	470, 1195,
	472, 1195,
	-2, 1194,
	-1, 2285,
	467, 1744,
	-2, 1756,
	-1, 2305,
	467, 1314,
	-2, 1304,
	-1, 2402,
	88, 1103,
	250, 1103,
	288, 1103,
	-2, 910,
	-1, 2403,
	88, 1103,
	250, 1103,
	288, 1103,
	-2, 910,
	-1, 2556,
	269, 1143,
	-2, 2077,
	-1, 2557,
	269, 1144,
	-2, 1969,
	-1, 2561,
	333, 1711,
	334, 1711,
	-2, 1467,
	-1, 2562,
	333, 1715,
	334, 1715,
	-2, 1468,
	-1, 2563,
	333, 1712,
	334, 1712,
	-2, 1467,
	-1, 2564,
	333, 1716,
	334, 1716,
	-2, 1468,
	-1, 2577,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1394,
	-1, 2578,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1398,
	-1, 2584,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1400,
	-1, 2773,
	205, 992,
	299, 992,
	307, 992,
	447, 992,
	-2, 494,
	-1, 2870,
	88, 1103,
	250, 1103,
	288, 1103,
	-2, 910,
	-1, 2871,
	88, 1103,
	250, 1103,
	288, 1103,
	-2, 910,
	-1, 2960,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1402,
	-1, 2967,
	202, 0,
	204, 0,
	256, 0,
	-2, 1421,
	-1, 3031,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1450,
	-1, 3032,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1451,
	-1, 3033,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1452,
	-1, 3037,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1456,
	-1, 3038,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1457,
	-1, 3039,
	14, 0,
	15, 0,
	16, 0,
	448, 0,
	449, 0,
	450, 0,
	-2, 1458,
	-1, 3083,
	467, 1745,
	-2, 1757,
	-1, 3174,
	469, 2190,
	-2, 1036,
	-1, 3224,
	202, 0,
	204, 0,
	256, 0,
	-2, 1422,
	-1, 3227,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1425,
	-1, 3228,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1427,
	-1, 3393,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1426,
	-1, 3394,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	175, 0,
	178, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 1428,
	-1, 3404,
	202, 0,
	-2, 1459,
	-1, 3518,
	202, 0,
	-2, 1460,
	-1, 3648,
	43, 0,
	175, 0,
	227, 0,
	361, 0,
	445, 0,
	451, 0,
	-2, 2046,
}

const sqlPrivate = 57344

const sqlLast = 84804

var sqlAct = [...]int{

	914, 3753, 3647, 3462, 3436, 3539, 3433, 3658, 3740, 2704,
	3625, 2857, 3616, 3613, 3207, 3597, 3659, 3698, 3329, 3660,
	3469, 3422, 2999, 2456, 2705, 3358, 3522, 1034, 2046, 2790,
	3382, 3646, 2886, 1335, 3166, 3161, 3478, 1840, 3342, 215,
	2106, 215, 215, 844, 215, 215, 215, 215, 215, 3286,
	3103, 215, 1467, 1200, 3363, 2879, 2853, 2881, 3145, 3408,
	602, 2952, 1089, 859, 1677, 1331, 1929, 1797, 3104, 2570,
	2445, 2428, 835, 576, 2489, 2420, 2491, 2719, 215, 3259,
	2747, 1649, 602, 2710, 1026, 3206, 2690, 2727, 2480, 698,
	2499, 2488, 1884, 1391, 2482, 1887, 2395, 1678, 2708, 2431,
	1618, 2457, 1806, 1834, 2339, 2689, 3054, 2605, 3523, 1839,
	2228, 2119, 2265, 1833, 2337, 1560, 2039, 2043, 1181, 2264,
	1189, 2554, 4, 2150, 2397, 2404, 2267, 2498, 886, 2429,
	2148, 1829, 1822, 1580, 910, 1077, 1784, 87, 2139, 1454,
	2103, 1782, 2246, 1619, 1772, 2027, 2010, 2753, 1017, 1638,
	2225, 1869, 2855, 1328, 1266, 1359, 2008, 1344, 2450, 2492,
	209, 1024, 2329, 1066, 603, 1575, 2142, 530, 544, 936,
	1020, 552, 1628, 1318, 208, 2254, 1202, 1907, 215, 215,
	604, 870, 999, 2236, 1543, 2120, 2192, 1468, 1219, 2009,
	1469, 2011, 207, 560, 32, 598, 1893, 1868, 150, 692,
	206, 570, 1016, 1358, 646, 843, 143, 1342, 1635, 1292,
	151, 673, 1216, 37, 555, 1796, 2032, 2373, 3463, 547,
	607, 871, 1022, 1474, 36, 747, 2372, 34, 25, 23,
	1274, 21, 764, 997, 610, 1453, 3068, 2601, 3069, 2706,
	1909, 839, 607, 1186, 1909, 1909, 3786, 3776, 3775, 3750,
	2245, 2245, 2245, 1845, 3730, 839, 610, 3728, 3300, 834,
	3684, 3300, 3682, 3680, 3685, 2614, 2245, 2245, 3677, 1014,
	3674, 2615, 3678, 2245, 3675, 2895, 3669, 709, 3592, 3644,
	1845, 3643, 143, 1845, 3642, 1845, 1410, 3639, 1921, 2896,
	840, 1921, 3638, 1482, 1483, 3611, 1921, 3591, 3585, 3300,
	3504, 2300, 2245, 3584, 1000, 1000, 3579, 2245, 3578, 2771,
	3300, 3572, 3300, 1513, 1032, 1845, 3058, 3566, 3564, 3520,
	1485, 3300, 3300, 2300, 3501, 2262, 3498, 3471, 1845, 3452,
	3300, 3472, 3451, 1845, 3443, 3442, 1845, 3414, 1845, 3300,
	3395, 1845, 822, 3380, 2300, 2238, 1074, 1921, 3371, 1484,
	1482, 1483, 2909, 3327, 821, 3318, 3299, 2245, 3226, 2245,
	3300, 3182, 2300, 3176, 3143, 2925, 1051, 2925, 3144, 3078,
	1513, 3058, 3076, 3079, 3061, 829, 3077, 1485, 2245, 2983,
	2979, 2924, 1074, 1845, 2245, 2925, 1338, 2916, 2703, 2662,
	2663, 2917, 2245, 2701, 2700, 2654, 2633, 2245, 2245, 2245,
	2634, 2616, 2296, 1046, 2478, 2245, 1484, 1937, 1925, 2477,
	2406, 2237, 1001, 1925, 1921, 1504, 2313, 2299, 1921, 2294,
	2245, 2300, 1501, 2245, 2287, 2244, 1924, 3319, 1845, 2245,
	1925, 1845, 1003, 1490, 1004, 2917, 1845, 2386, 2328, 2245,
	1752, 1482, 1483, 1908, 183, 2909, 2426, 2569, 1844, 2326,
	1614, 1215, 1801, 2604, 3131, 2955, 2933, 1636, 1832, 2897,
	1393, 1513, 3220, 2281, 1512, 1514, 2280, 2279, 1485, 2278,
	2277, 1005, 1002, 828, 1237, 1551, 827, 1047, 2898, 3275,
	1507, 1508, 1509, 1510, 185, 826, 825, 824, 820, 819,
	1490, 2534, 3507, 818, 817, 816, 183, 1484, 815, 814,
	813, 812, 811, 810, 1482, 1483, 1504, 1910, 809, 808,
	2391, 1910, 1910, 1501, 745, 744, 743, 742, 1505, 741,
	740, 1512, 1514, 739, 1513, 738, 737, 736, 184, 2668,
	735, 1485, 734, 733, 732, 215, 185, 731, 177, 730,
	729, 728, 727, 2662, 2663, 726, 178, 725, 724, 723,
	1499, 1500, 722, 2964, 2662, 2663, 721, 720, 719, 718,
	1484, 707, 706, 215, 2145, 664, 663, 152, 623, 1504,
	215, 1507, 1508, 1509, 1510, 1505, 1501, 622, 621, 613,
	184, 1490, 612, 611, 584, 583, 582, 215, 1092, 215,
	215, 215, 1092, 215, 1205, 1205, 581, 580, 1205, 564,
	205, 204, 203, 3665, 202, 2895, 215, 215, 2677, 1070,
	201, 200, 1512, 1514, 2678, 199, 2959, 1506, 1076, 152,
	2662, 2663, 1081, 2438, 198, 1047, 197, 196, 183, 195,
	2146, 215, 183, 194, 1507, 1508, 1509, 1510, 193, 192,
	191, 1499, 1500, 1236, 1490, 215, 190, 189, 1205, 1205,
	215, 215, 188, 215, 187, 1917, 1511, 1639, 1192, 1908,
	2003, 2237, 186, 215, 3238, 3072, 1505, 2926, 185, 2750,
	2627, 215, 185, 2610, 1506, 1512, 1514, 2410, 2288, 1481,
	2183, 2271, 1047, 2668, 1780, 215, 215, 215, 215, 215,
	1205, 1205, 2169, 2453, 2668, 1205, 2167, 1551, 215, 1205,
	215, 215, 2147, 2144, 1499, 1500, 1662, 1569, 1231, 1205,
	1221, 1064, 184, 2679, 1083, 215, 184, 1036, 1932, 1412,
	1562, 3645, 177, 3559, 1339, 3513, 177, 3372, 3279, 1505,
	178, 3432, 3367, 3258, 178, 1085, 3505, 1178, 1183, 1494,
	1486, 1487, 1488, 1489, 1491, 1492, 3257, 1511, 1087, 3245,
	1583, 152, 1205, 1211, 1194, 152, 1582, 913, 3244, 3243,
	2668, 1583, 3242, 3237, 3234, 1506, 607, 1582, 2678, 3233,
	1218, 1059, 3149, 3142, 3092, 3091, 215, 1586, 1562, 2678,
	610, 3090, 1184, 3082, 3051, 1196, 1217, 1931, 1581, 1881,
	215, 1502, 1498, 3050, 1495, 1493, 1494, 1486, 1487, 1488,
	1489, 1491, 1492, 2149, 1363, 215, 2439, 1567, 3049, 2975,
	1511, 1224, 2971, 1229, 2745, 1235, 183, 2920, 1347, 1349,
	2697, 2688, 76, 2661, 1296, 2662, 2663, 2658, 1506, 2657,
	1070, 2655, 840, 1070, 2671, 2672, 2664, 2665, 2666, 2667,
	2669, 2670, 1275, 1275, 3129, 2678, 1321, 1321, 1321, 1194,
	2640, 2639, 1563, 2638, 1561, 3783, 185, 2635, 2632, 1322,
	1325, 1354, 1355, 1420, 2626, 1295, 2609, 2679, 2602, 2662,
	2663, 1345, 2680, 2681, 2682, 2662, 2663, 1230, 2679, 2479,
	1196, 1276, 1502, 1498, 2272, 1495, 1493, 1494, 1486, 1487,
	1488, 1489, 1491, 1492, 1459, 2132, 1279, 1481, 1013, 1357,
	184, 143, 143, 2143, 1850, 1480, 3749, 1362, 3748, 1848,
	177, 3683, 2115, 1090, 1035, 3001, 3634, 1190, 178, 3632,
	3553, 3550, 3547, 3546, 3545, 3538, 3532, 2309, 3502, 1458,
	183, 3366, 1332, 3508, 2677, 2742, 3497, 1434, 1452, 152,
	3496, 2109, 3448, 1029, 2679, 1502, 1498, 3428, 1495, 1493,
	1494, 1486, 1487, 1488, 1489, 1491, 1492, 3406, 1550, 3390,
	2765, 1411, 3389, 3377, 2359, 2668, 3376, 3356, 2437, 3353,
	185, 3346, 3274, 3148, 1368, 3256, 3196, 3193, 3120, 3119,
	1197, 1208, 3107, 3106, 1212, 3064, 1384, 2673, 2671, 2672,
	2664, 2665, 2666, 2667, 2669, 2670, 2966, 1547, 1457, 215,
	2672, 2664, 2665, 2666, 2667, 2669, 2670, 2927, 2910, 2668,
	2302, 2873, 2837, 2816, 184, 2668, 840, 2793, 2792, 2766,
	2702, 2631, 2630, 2625, 177, 1464, 215, 1463, 1616, 2593,
	1225, 1455, 178, 183, 1268, 1271, 215, 1092, 215, 215,
	215, 215, 822, 2419, 1587, 1584, 602, 215, 215, 120,
	183, 602, 215, 2452, 821, 1576, 1460, 215, 1573, 2307,
	2683, 1477, 1478, 1205, 2673, 2671, 2672, 2664, 2665, 2666,
	2667, 2669, 2670, 185, 1585, 2306, 1482, 1483, 912, 2283,
	2276, 2243, 2165, 1661, 1092, 1353, 183, 842, 1617, 1613,
	185, 1612, 1611, 1610, 2678, 1212, 1577, 1578, 1933, 1070,
	2793, 1609, 1608, 1485, 1607, 1646, 1670, 1606, 1622, 1623,
	1605, 1603, 1602, 1601, 1600, 1599, 1749, 184, 1598, 1597,
	1596, 1778, 1595, 1625, 1594, 1000, 185, 177, 1593, 1592,
	1743, 1591, 1484, 1590, 184, 178, 1589, 1564, 1375, 1548,
	1546, 1541, 1058, 1049, 177, 3524, 2182, 1042, 1032, 3349,
	1032, 3276, 178, 1672, 3230, 1771, 152, 3088, 2168, 840,
	3321, 3075, 2166, 3067, 2613, 2274, 3417, 3278, 1669, 1744,
	184, 1771, 1647, 152, 1668, 2662, 2663, 3506, 3087, 1563,
	177, 2763, 1544, 1482, 1483, 1657, 1080, 1658, 178, 1078,
	3746, 3739, 1644, 2679, 2662, 2663, 3431, 2819, 3548, 2882,
	1667, 1746, 1194, 3474, 1383, 1801, 607, 3473, 3370, 152,
	1485, 607, 1747, 3320, 1205, 1205, 215, 3070, 1653, 1704,
	610, 1882, 1092, 2912, 1664, 610, 1637, 2911, 1074, 143,
	1639, 1680, 1615, 1196, 3479, 1674, 1771, 1656, 1079, 1484,
	1741, 1673, 1641, 2637, 2636, 1598, 1740, 1841, 1655, 848,
	1598, 1654, 1652, 1651, 1819, 1650, 1071, 1821, 3118, 3152,
	1826, 215, 1450, 2575, 1028, 215, 215, 1675, 1074, 1568,
	2361, 1075, 2664, 2665, 2666, 2667, 2669, 2670, 215, 1583,
	2377, 1666, 1074, 1421, 1571, 1582, 1758, 215, 1930, 215,
	806, 215, 1774, 1769, 2859, 215, 2858, 1764, 3470, 1392,
	3670, 3657, 3754, 1393, 1790, 1835, 2674, 2675, 2676, 215,
	3134, 1805, 3122, 2673, 2671, 2672, 2664, 2665, 2666, 2667,
	2669, 2670, 1837, 1490, 2666, 2667, 2669, 2670, 2931, 807,
	3409, 2706, 3666, 2145, 2668, 3003, 2140, 2305, 1604, 1579,
	2851, 1876, 1252, 3679, 3676, 2619, 2891, 3099, 1372, 1205,
	1072, 1205, 215, 1205, 3540, 3609, 215, 1065, 1073, 3162,
	3529, 1205, 1665, 1012, 1205, 215, 3113, 215, 215, 787,
	1842, 2486, 183, 2449, 1482, 1483, 607, 1205, 1205, 1205,
	1218, 215, 1877, 1890, 1872, 1879, 3715, 3571, 215, 3667,
	610, 3714, 2947, 2775, 3310, 1250, 1217, 602, 215, 2146,
	215, 1485, 215, 1240, 215, 3297, 215, 2314, 1825, 1781,
	3780, 1830, 185, 1989, 800, 1071, 3461, 798, 2764, 2678,
	215, 1898, 1864, 215, 3454, 215, 1871, 3136, 1843, 183,
	1484, 1080, 3133, 3132, 3294, 796, 215, 1419, 802, 3096,
	793, 2303, 1947, 3095, 1987, 1935, 2624, 2623, 1296, 2777,
	1894, 2332, 1894, 1859, 1951, 2622, 184, 215, 1875, 1759,
	1418, 1860, 215, 2330, 1798, 2621, 177, 1251, 1936, 185,
	2579, 2147, 2144, 2393, 178, 1763, 1762, 3295, 2341, 1771,
	1773, 2385, 1080, 1079, 2384, 1092, 840, 1896, 840, 1295,
	2364, 1895, 2295, 1895, 1794, 152, 1892, 2090, 1074, 1370,
	1912, 2018, 1456, 1914, 1900, 1901, 1916, 2818, 869, 1072,
	1919, 1214, 659, 184, 1490, 1799, 1800, 1073, 2679, 2161,
	2446, 2020, 2160, 177, 2332, 1345, 1871, 1345, 1492, 1943,
	2048, 178, 2018, 2932, 1079, 2007, 2330, 2016, 790, 1285,
	838, 1284, 1283, 1795, 1282, 1417, 3388, 1846, 1858, 1960,
	3570, 2001, 152, 1059, 1945, 2363, 1926, 607, 1927, 1970,
	1071, 1972, 1940, 1974, 1938, 1976, 1306, 1977, 2016, 2344,
	1092, 610, 2149, 1997, 1260, 1246, 2321, 3438, 1766, 3306,
	2044, 2045, 2105, 1385, 2000, 2381, 1657, 1039, 2286, 2352,
	2105, 660, 1969, 2552, 3636, 2014, 2211, 1994, 2351, 1381,
	1897, 1212, 1959, 1627, 2938, 2374, 2375, 2937, 1429, 2567,
	1941, 2531, 2101, 1962, 837, 215, 2149, 2031, 3322, 1037,
	2293, 2374, 2375, 3109, 3290, 716, 1365, 2670, 3291, 2002,
	1486, 1487, 1488, 1489, 1491, 1492, 2099, 1092, 1954, 215,
	1462, 2664, 2665, 2666, 2667, 2669, 2670, 2017, 215, 2006,
	2004, 2005, 1704, 1704, 1072, 2019, 2012, 1074, 2121, 2122,
	215, 2140, 1073, 1092, 1680, 1680, 3757, 1999, 3293, 2992,
	1768, 1631, 2143, 822, 2121, 2137, 822, 822, 2017, 2136,
	3703, 3296, 1057, 2590, 840, 2035, 2374, 2375, 2036, 2037,
	839, 3212, 2113, 3714, 1030, 840, 1963, 1955, 2111, 840,
	2158, 1767, 1040, 1634, 1449, 2159, 2015, 2588, 2162, 2317,
	2163, 2164, 2343, 2251, 2191, 2566, 2195, 2195, 2209, 1393,
	2121, 2319, 1629, 2229, 2231, 1366, 3304, 2117, 2235, 1646,
	3211, 1416, 2774, 2259, 1807, 1393, 2888, 2015, 1632, 1928,
	1248, 1000, 2095, 215, 782, 3541, 3387, 1212, 1956, 2134,
	1939, 1205, 2096, 2320, 1811, 2362, 2097, 1801, 1032, 3589,
	2102, 1630, 2830, 1948, 1949, 1950, 833, 2273, 2318, 1371,
	2149, 2250, 2284, 1996, 1032, 2537, 657, 1029, 656, 1029,
	3121, 1092, 2721, 840, 3292, 2258, 215, 2263, 2824, 1070,
	2269, 2270, 3769, 2204, 215, 2220, 1407, 2233, 1808, 2297,
	2559, 2560, 1074, 2252, 1749, 215, 2241, 2242, 2256, 2257,
	2047, 1267, 1988, 2585, 794, 1433, 1644, 794, 215, 662,
	661, 2282, 3734, 1488, 1489, 1491, 1492, 2586, 2342, 836,
	2889, 2591, 215, 1092, 804, 795, 3743, 1205, 803, 1205,
	794, 783, 1633, 1986, 1267, 215, 215, 1408, 1909, 3305,
	1305, 1818, 1803, 2331, 1792, 3297, 2776, 3663, 2540, 1245,
	2333, 3110, 1574, 2332, 691, 2761, 1585, 1998, 215, 3439,
	3702, 215, 2308, 2806, 1792, 2346, 3208, 215, 1812, 2312,
	1265, 3400, 143, 1801, 3294, 3723, 2840, 3287, 2888, 3621,
	215, 1577, 1578, 3338, 3735, 2152, 1961, 2394, 215, 3587,
	215, 3285, 1038, 215, 2098, 2367, 717, 3289, 2366, 215,
	3552, 2311, 215, 2100, 215, 2315, 215, 2805, 215, 215,
	791, 215, 1205, 1205, 1205, 2581, 1205, 3295, 3588, 1775,
	1776, 215, 215, 2104, 215, 215, 2382, 2720, 1205, 1813,
	1814, 542, 2354, 2398, 2131, 2336, 215, 1540, 1809, 2345,
	2348, 2629, 2407, 2365, 1380, 1382, 2473, 2474, 1958, 3288,
	2539, 614, 215, 215, 215, 537, 2383, 215, 831, 215,
	782, 854, 215, 2989, 215, 2587, 215, 1704, 1428, 2536,
	3737, 1810, 2443, 2469, 2589, 3664, 784, 2255, 2285, 1680,
	3758, 2358, 833, 1194, 1953, 1461, 1820, 215, 215, 215,
	215, 215, 215, 2502, 215, 607, 2505, 2506, 1367, 1218,
	1184, 2268, 2460, 3701, 2417, 2511, 2512, 2513, 1430, 610,
	2390, 2485, 2427, 839, 1196, 2408, 2462, 3348, 3741, 2519,
	3202, 832, 1871, 2112, 3384, 215, 3084, 1056, 2434, 2376,
	2378, 2379, 2380, 215, 2412, 2990, 2414, 2475, 2504, 2500,
	2808, 2507, 3339, 2508, 2516, 2455, 2423, 1052, 2538, 3770,
	1395, 3213, 3662, 2542, 2523, 2544, 2525, 783, 2527, 1815,
	2465, 2949, 2470, 1321, 3290, 1321, 2810, 1321, 3291, 1194,
	1194, 2087, 3661, 2476, 2535, 2466, 2487, 2467, 2451, 2468,
	1792, 2451, 2347, 2503, 2550, 785, 3713, 3711, 1028, 3485,
	1028, 3355, 1345, 3742, 2877, 2399, 2327, 2509, 2441, 1867,
	1196, 1196, 1431, 1624, 1050, 1910, 1045, 529, 3293, 1631,
	1627, 3040, 1828, 2517, 3736, 2520, 2809, 3147, 1472, 2582,
	143, 3296, 215, 1816, 786, 3744, 1471, 3383, 3254, 3209,
	2034, 1802, 1827, 2401, 1760, 2953, 2149, 3763, 3445, 2558,
	3444, 1634, 2547, 2549, 2754, 2521, 1196, 2522, 2541, 1194,
	2543, 1194, 2548, 2546, 2471, 615, 616, 3554, 2031, 2553,
	2253, 3426, 1823, 3528, 3309, 3098, 2878, 2529, 2869, 2788,
	2784, 3308, 2442, 1757, 2430, 1432, 1632, 2421, 1631, 1540,
	1196, 1891, 1196, 1799, 1800, 2603, 1321, 1880, 1878, 1854,
	2024, 2988, 2368, 2950, 2574, 3598, 2518, 1993, 2568, 1471,
	1753, 3167, 784, 2085, 1785, 2524, 2088, 2526, 1786, 2528,
	1634, 1824, 1466, 2402, 1470, 2403, 1471, 2247, 2580, 3359,
	3214, 3468, 538, 2418, 3292, 1308, 2607, 2608, 3466, 1629,
	1092, 2611, 3427, 3385, 2545, 2798, 2795, 840, 2794, 2573,
	1755, 2713, 2714, 2729, 2551, 1632, 1946, 3066, 2718, 215,
	1472, 3041, 618, 617, 215, 2084, 1409, 215, 1756, 3042,
	215, 215, 1092, 2717, 713, 2292, 215, 2618, 1630, 2291,
	2290, 2289, 1291, 1289, 2425, 539, 3255, 715, 1277, 1092,
	1633, 837, 2921, 3534, 2249, 2735, 215, 1470, 3762, 2248,
	3215, 2025, 3330, 1889, 2405, 1278, 705, 3720, 2472, 1787,
	3464, 215, 619, 620, 1470, 3606, 3555, 3434, 3595, 830,
	2612, 785, 1789, 3424, 1212, 540, 1396, 541, 3307, 2730,
	215, 215, 215, 1472, 3601, 3260, 215, 2723, 2699, 215,
	3535, 3055, 2725, 2369, 2370, 2156, 215, 215, 1447, 215,
	215, 215, 1070, 2751, 2715, 3425, 2772, 2749, 2744, 1633,
	786, 1445, 3722, 215, 215, 215, 1425, 1032, 2748, 1423,
	2778, 2728, 215, 2694, 2695, 2696, 2797, 1791, 2724, 2802,
	2803, 2707, 1032, 2733, 585, 215, 215, 1029, 2741, 2736,
	2737, 2732, 3681, 2734, 1092, 2722, 3435, 1785, 2762, 2086,
	3602, 1786, 1205, 1029, 1406, 1404, 3536, 2755, 1402, 1400,
	2785, 1092, 1032, 3549, 1398, 1390, 215, 3405, 1388, 215,
	215, 1287, 2739, 215, 2740, 3253, 1205, 215, 1985, 2821,
	2767, 2768, 1369, 2769, 782, 2789, 1205, 1205, 2756, 2757,
	2758, 2692, 215, 2691, 2781, 2782, 2965, 2929, 215, 2847,
	2656, 2592, 2422, 215, 2773, 215, 833, 2392, 2884, 2868,
	2796, 2360, 215, 2800, 2823, 2779, 2310, 1663, 2731, 1660,
	1704, 2846, 1448, 1360, 2946, 2945, 1466, 1792, 711, 712,
	1290, 1288, 1680, 590, 2759, 714, 1205, 1205, 2893, 2533,
	2838, 2864, 1787, 2783, 215, 215, 2811, 2817, 215, 2770,
	1669, 2532, 1446, 2831, 1785, 1789, 2826, 1704, 1786, 2812,
	703, 704, 2829, 2510, 2013, 1444, 2844, 2845, 2833, 1680,
	1424, 2841, 1995, 1422, 2820, 2822, 2434, 2839, 1030, 1966,
	1030, 783, 2366, 2848, 2856, 215, 1742, 1092, 215, 215,
	1092, 215, 1588, 1364, 1264, 596, 2908, 1790, 2885, 3656,
	2813, 2814, 3326, 3317, 2815, 2155, 1196, 3594, 1405, 1403,
	1791, 3283, 1401, 1399, 792, 2712, 592, 2500, 1397, 1389,
	3165, 2928, 1387, 1790, 215, 1286, 2500, 1875, 1032, 1984,
	2890, 2892, 2834, 2835, 2862, 3157, 2836, 2919, 2866, 2899,
	840, 3116, 944, 2923, 3114, 3097, 2876, 2738, 1626, 1787,
	2906, 2907, 2943, 2875, 2827, 1830, 2944, 3699, 2828, 2867,
	2860, 1092, 1789, 1830, 2752, 2447, 2436, 1788, 2934, 2435,
	2935, 2415, 2936, 1923, 1922, 1920, 1918, 1915, 1092, 2832,
	215, 211, 1913, 532, 533, 1911, 548, 532, 548, 558,
	563, 1902, 1851, 579, 2901, 2902, 2903, 1849, 2904, 2905,
	1838, 1836, 211, 1831, 1817, 2918, 1804, 2940, 2968, 1793,
	1792, 2985, 2880, 3490, 1671, 3715, 2571, 1791, 587, 1475,
	702, 1009, 3627, 3379, 211, 2948, 784, 3374, 3373, 2977,
	2978, 2501, 1779, 143, 143, 1242, 2951, 591, 3492, 797,
	799, 2883, 2780, 2332, 2332, 1010, 2350, 3175, 1801, 1957,
	2942, 3311, 1194, 1442, 1443, 2330, 2349, 1983, 1028, 1982,
	1964, 595, 3543, 2973, 594, 1386, 3515, 3261, 1482, 1483,
	2371, 3716, 2028, 2353, 1028, 1479, 3709, 589, 1750, 2387,
	2355, 2984, 3593, 1196, 2389, 2954, 2752, 3563, 3000, 3004,
	215, 215, 2572, 543, 2044, 3010, 2388, 2357, 3560, 2995,
	3156, 1092, 846, 2991, 2993, 2994, 3738, 1476, 3005, 2356,
	2044, 3020, 3071, 1704, 3009, 3017, 586, 1792, 3146, 3006,
	532, 532, 215, 3007, 1484, 1680, 3044, 3081, 211, 2454,
	3019, 2941, 2234, 1011, 648, 785, 1482, 1483, 2842, 554,
	690, 3048, 1745, 1676, 2760, 3761, 3045, 2662, 2663, 1783,
	1788, 3062, 3063, 593, 1482, 1483, 2324, 2325, 3562, 3052,
	2322, 2323, 2865, 1485, 588, 1551, 1704, 1704, 3057, 215,
	3059, 3060, 2870, 2871, 786, 3053, 3235, 2151, 1680, 1680,
	1374, 3086, 1704, 1704, 2324, 2322, 1373, 2157, 1427, 3231,
	3085, 1426, 1484, 2996, 1680, 1680, 1032, 1032, 1205, 1549,
	1554, 3773, 3073, 3525, 1559, 3458, 3418, 3416, 2212, 3345,
	3074, 215, 1190, 1704, 3277, 1090, 3199, 3192, 215, 3181,
	3160, 3141, 2914, 2915, 3140, 1680, 3139, 1092, 215, 3112,
	2900, 3137, 1205, 2874, 2872, 2515, 2514, 2464, 3128, 3130,
	3089, 2440, 3127, 2416, 2116, 3101, 215, 1981, 1980, 3153,
	1979, 1978, 1905, 1904, 3177, 1903, 1883, 1788, 143, 1862,
	215, 215, 1205, 1205, 1205, 3138, 215, 215, 215, 1861,
	3172, 215, 215, 1857, 1856, 215, 215, 3123, 1205, 1855,
	1853, 1852, 2366, 215, 1092, 3169, 2981, 1441, 3168, 1440,
	1317, 1316, 1315, 1314, 1313, 3154, 1312, 1311, 3135, 1310,
	1309, 1307, 1302, 2997, 2789, 1301, 1092, 3171, 1300, 1299,
	3093, 3200, 1298, 1259, 1258, 1257, 1256, 1255, 1254, 1253,
	1247, 1241, 1239, 3163, 1238, 1055, 1054, 984, 3115, 891,
	3117, 3188, 1751, 805, 3158, 3159, 3155, 3170, 789, 3173,
	3437, 1435, 74, 1249, 634, 3179, 1029, 3178, 68, 3184,
	3111, 643, 215, 3608, 3183, 3189, 3190, 2804, 2396, 3191,
	2460, 1029, 1965, 3194, 3197, 1394, 3198, 3195, 1967, 2743,
	2275, 3586, 3150, 3239, 3216, 1032, 1704, 2628, 3521, 3399,
	3210, 3225, 2154, 3205, 1570, 70, 879, 966, 1680, 3164,
	2500, 1029, 3337, 3336, 3284, 3100, 2490, 3334, 3333, 847,
	1095, 1761, 3217, 885, 1777, 1770, 2304, 2194, 1684, 888,
	1875, 1681, 1683, 890, 889, 215, 1682, 1572, 887, 1679,
	2424, 1092, 2458, 1092, 1294, 768, 3083, 1765, 2110, 2138,
	2617, 1565, 860, 3229, 881, 2135, 1048, 2726, 2887, 3080,
	3365, 2023, 651, 2659, 3203, 2141, 215, 215, 215, 1041,
	2217, 2210, 2206, 2448, 3252, 1451, 1542, 2459, 215, 1082,
	863, 2108, 1556, 2597, 2033, 215, 2894, 215, 2746, 2301,
	215, 215, 215, 3624, 3201, 2038, 1866, 1043, 1008, 1007,
	1006, 3615, 1092, 215, 215, 3612, 1704, 1092, 1030, 3263,
	3264, 3265, 3262, 2854, 1754, 215, 3313, 2316, 1680, 215,
	3267, 1534, 2861, 875, 1030, 1053, 3268, 3302, 215, 3272,
	3273, 1195, 579, 215, 2748, 2711, 1092, 3269, 2922, 1205,
	1261, 3542, 3282, 846, 1533, 3301, 2400, 846, 801, 211,
	3531, 211, 211, 1187, 1069, 211, 1068, 1032, 1067, 2787,
	3768, 3108, 182, 2565, 1473, 1032, 1465, 215, 211, 1220,
	179, 181, 180, 3341, 3125, 91, 35, 1029, 1032, 1092,
	3280, 3281, 16, 119, 1222, 118, 1226, 117, 1232, 116,
	115, 3332, 3361, 1244, 3364, 3360, 3347, 3350, 114, 3312,
	113, 108, 3324, 3328, 112, 111, 110, 1263, 109, 1092,
	107, 3362, 211, 211, 3375, 1187, 106, 105, 104, 103,
	3369, 102, 3325, 3266, 101, 211, 100, 3352, 99, 3331,
	98, 97, 3357, 1304, 96, 95, 94, 93, 92, 575,
	572, 3386, 49, 2555, 48, 90, 1092, 211, 211, 211,
	211, 1187, 89, 3316, 215, 15, 215, 3391, 1092, 215,
	579, 33, 211, 211, 2434, 13, 3303, 215, 3185, 3186,
	3187, 53, 1356, 54, 12, 3396, 28, 702, 3314, 3315,
	1361, 29, 80, 79, 27, 3420, 3421, 1028, 14, 2434,
	215, 3407, 26, 3412, 3413, 24, 1875, 10, 8, 7,
	30, 1648, 1028, 11, 148, 147, 73, 146, 72, 215,
	145, 3340, 144, 71, 22, 9, 140, 215, 3477, 3151,
	67, 3351, 3415, 2212, 2212, 142, 215, 141, 3419, 3476,
	3467, 1205, 1028, 3441, 3457, 65, 1413, 215, 211, 3440,
	139, 3368, 3411, 138, 64, 137, 136, 66, 135, 20,
	3481, 5, 211, 52, 6, 3378, 3480, 3381, 215, 215,
	3465, 3459, 2930, 3455, 84, 85, 3489, 563, 3271, 31,
	62, 61, 60, 3475, 3482, 19, 51, 3484, 3447, 18,
	215, 3494, 172, 171, 3487, 170, 169, 3486, 3488, 164,
	163, 168, 3364, 166, 3493, 215, 1704, 3499, 3500, 165,
	167, 162, 174, 173, 176, 160, 156, 155, 1680, 3495,
	159, 161, 158, 157, 154, 175, 3527, 3503, 1535, 1536,
	1537, 1538, 1539, 56, 3510, 3537, 134, 133, 3430, 57,
	132, 2856, 131, 2212, 2212, 2212, 130, 129, 128, 55,
	3526, 3519, 3514, 215, 3551, 1029, 1029, 1553, 17, 2,
	1704, 1, 0, 1566, 0, 0, 215, 1205, 0, 0,
	3449, 3450, 1680, 215, 0, 0, 0, 1205, 1205, 3544,
	3511, 3512, 0, 1205, 3577, 0, 0, 215, 0, 215,
	0, 3556, 2114, 0, 3561, 3480, 0, 3483, 0, 3565,
	0, 0, 3573, 3569, 0, 0, 3574, 0, 1028, 1554,
	3575, 3576, 0, 215, 1090, 3581, 3580, 3557, 3558, 215,
	3568, 3603, 215, 0, 1092, 0, 0, 0, 0, 3509,
	1194, 0, 0, 215, 215, 3491, 0, 0, 3605, 0,
	3614, 3617, 0, 0, 3397, 0, 0, 0, 0, 0,
	3631, 3633, 3610, 0, 0, 0, 1704, 0, 3628, 0,
	2216, 1196, 3640, 0, 3641, 0, 0, 0, 1680, 0,
	0, 532, 3619, 215, 0, 3635, 0, 3637, 0, 0,
	0, 3397, 0, 0, 0, 1620, 1620, 1620, 0, 0,
	3668, 0, 211, 2047, 211, 0, 3655, 3673, 211, 3654,
	3652, 3653, 0, 0, 0, 0, 3590, 0, 1220, 0,
	1187, 211, 3686, 211, 0, 3671, 3688, 215, 211, 1220,
	548, 0, 0, 211, 1220, 0, 3696, 3567, 0, 579,
	3687, 3700, 3690, 0, 1029, 0, 0, 215, 3618, 3695,
	3692, 3622, 0, 0, 0, 0, 0, 0, 3626, 0,
	3706, 3707, 0, 0, 0, 0, 846, 3712, 3708, 3710,
	0, 0, 0, 3689, 215, 3691, 215, 3717, 0, 3719,
	3614, 3721, 3718, 3617, 3729, 3582, 3725, 3583, 3726, 3732,
	2594, 2595, 3731, 3607, 0, 3693, 3694, 3727, 0, 3697,
	0, 0, 0, 0, 3623, 3733, 0, 0, 0, 0,
	0, 0, 0, 0, 3745, 3747, 0, 3604, 0, 0,
	0, 3751, 0, 0, 3752, 3755, 0, 3756, 0, 0,
	0, 3759, 0, 0, 0, 0, 0, 1030, 0, 0,
	0, 2460, 0, 3771, 3765, 3629, 0, 3772, 3630, 0,
	0, 0, 1030, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3774, 0, 0, 0, 3778, 3779,
	3782, 3781, 0, 3784, 0, 0, 0, 0, 0, 0,
	3787, 3777, 1030, 0, 0, 0, 1028, 1028, 2662, 2663,
	3626, 2680, 2681, 2682, 0, 0, 1482, 1483, 211, 0,
	2685, 2686, 2687, 0, 0, 0, 1029, 0, 0, 0,
	0, 0, 0, 0, 1029, 0, 1513, 0, 0, 0,
	2212, 2212, 0, 1485, 0, 0, 0, 1029, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 0, 0, 211, 211, 3766,
	3767, 0, 1484, 2677, 0, 0, 0, 0, 0, 2047,
	1888, 0, 3724, 0, 0, 0, 0, 0, 0, 211,
	0, 211, 0, 211, 0, 0, 0, 532, 0, 0,
	0, 0, 0, 0, 3785, 0, 0, 0, 0, 0,
	0, 1906, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2212, 2212, 2212, 2212, 2212, 2212,
	2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212,
	2212, 2212, 2212, 0, 2212, 0, 0, 0, 2668, 0,
	0, 0, 0, 0, 579, 0, 1490, 0, 702, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 1030, 1187,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 579, 0, 1028, 0, 1512, 1514, 0,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	211, 0, 211, 0, 211, 2216, 211, 0, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 1991, 0, 1992, 0, 0,
	0, 0, 0, 2678, 0, 0, 0, 0, 211, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 563,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2022,
	0, 2026, 0, 0, 0, 2216, 2216, 0, 2040, 0,
	0, 0, 0, 0, 0, 2049, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073,
	2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	0, 2089, 2679, 2091, 2092, 2093, 2094, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 1028, 0, 0,
	0, 0, 0, 2118, 0, 1028, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1553, 0, 1028, 0,
	2133, 0, 0, 0, 0, 0, 0, 2662, 2663, 0,
	2680, 2681, 2682, 0, 0, 0, 0, 2961, 2962, 0,
	0, 0, 0, 0, 0, 2216, 2216, 2216, 0, 0,
	2171, 2174, 2177, 2180, 0, 2184, 2185, 2186, 2187, 2188,
	2189, 2190, 0, 0, 0, 0, 2208, 532, 2219, 2221,
	2226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2662, 2663, 211, 2680, 2681, 2682, 1030, 1030, 0, 0,
	0, 532, 2677, 0, 0, 2674, 2675, 2676, 211, 3222,
	532, 0, 2673, 2671, 2672, 2664, 2665, 2666, 2667, 2669,
	2670, 0, 211, 1486, 1487, 1488, 1489, 1491, 1492, 0,
	0, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029,
	3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039,
	0, 3043, 0, 0, 0, 2677, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1482, 1483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2668, 0, 0,
	0, 0, 0, 0, 0, 0, 1513, 0, 0, 0,
	0, 0, 0, 1485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2684, 548, 0, 0, 2662, 2663,
	0, 2680, 2681, 2682, 0, 0, 0, 0, 0, 0,
	0, 0, 1484, 0, 0, 0, 0, 3221, 2683, 0,
	2668, 1504, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2340, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 0, 0,
	0, 0, 2678, 0, 0, 0, 0, 211, 0, 0,
	0, 0, 0, 2677, 0, 1030, 0, 0, 2958, 0,
	211, 2683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 1507, 1508, 1509, 1510,
	0, 0, 0, 0, 0, 0, 1490, 211, 2409, 0,
	0, 0, 0, 0, 0, 2678, 0, 2411, 0, 2413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1220, 0, 0, 211, 0, 0, 0, 1512, 1514, 211,
	0, 0, 0, 0, 0, 0, 0, 0, 2668, 0,
	0, 0, 1888, 0, 0, 0, 0, 0, 0, 0,
	2340, 2679, 532, 0, 0, 2463, 1499, 1500, 0, 0,
	0, 211, 0, 2212, 211, 0, 211, 0, 211, 0,
	211, 211, 0, 1187, 0, 0, 0, 0, 0, 0,
	0, 1505, 0, 2483, 702, 0, 2340, 2340, 0, 2683,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	0, 0, 0, 0, 2679, 2212, 0, 0, 0, 0,
	0, 0, 2216, 2216, 211, 1187, 211, 0, 0, 1220,
	0, 1220, 0, 2678, 1187, 0, 1187, 1030, 1187, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 2530, 0, 0, 0, 0, 0, 1030, 211,
	211, 211, 211, 1187, 211, 0, 211, 0, 0, 0,
	0, 0, 1511, 0, 2674, 2675, 2676, 0, 0, 0,
	0, 2673, 2671, 2672, 2664, 2665, 2666, 2667, 2669, 2670,
	1506, 0, 0, 0, 0, 0, 0, 211, 1535, 1536,
	0, 0, 0, 0, 0, 211, 2216, 2216, 2216, 2216,
	2216, 2216, 2216, 2216, 2216, 2216, 2216, 2216, 2216, 2216,
	2216, 2216, 2216, 2216, 2216, 2212, 2216, 2674, 2675, 2676,
	0, 0, 2679, 0, 2673, 2671, 2672, 2664, 2665, 2666,
	2667, 2669, 2670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2577, 2578, 0, 0, 0, 0, 2584,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2598, 2599,
	0, 0, 0, 0, 2133, 0, 0, 0, 0, 0,
	0, 0, 0, 2606, 1220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1502, 1498, 2620,
	1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 2641, 0, 58, 0, 0, 0,
	0, 0, 0, 0, 0, 2674, 2675, 2676, 0, 0,
	59, 122, 2673, 2671, 2672, 2664, 2665, 2666, 2667, 2669,
	2670, 0, 0, 0, 0, 63, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	39, 124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2226, 2226, 2226, 38, 0, 69, 0, 1482, 1483,
	0, 211, 0, 0, 0, 0, 1620, 0, 0, 0,
	0, 0, 0, 0, 2716, 0, 211, 41, 1513, 0,
	3404, 532, 42, 0, 0, 1485, 532, 75, 0, 532,
	125, 0, 532, 532, 0, 0, 40, 86, 532, 0,
	0, 0, 76, 83, 0, 0, 211, 0, 0, 0,
	0, 0, 0, 0, 1484, 0, 0, 0, 1220, 0,
	0, 0, 3429, 1504, 0, 0, 0, 0, 0, 43,
	0, 0, 0, 1220, 0, 0, 0, 0, 0, 0,
	0, 846, 0, 0, 0, 0, 77, 0, 0, 0,
	0, 0, 2340, 2340, 211, 846, 0, 0, 2340, 0,
	0, 2791, 0, 0, 0, 0, 0, 0, 2340, 2791,
	0, 2340, 2791, 2791, 0, 0, 0, 0, 0, 0,
	0, 2807, 0, 0, 0, 211, 211, 211, 1507, 1508,
	1509, 1510, 0, 0, 0, 0, 0, 0, 1490, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 1187, 0,
	0, 0, 0, 0, 0, 2662, 2663, 0, 2680, 2681,
	2682, 0, 0, 0, 0, 0, 0, 0, 0, 1512,
	1514, 0, 3518, 0, 2970, 0, 0, 0, 2850, 0,
	0, 2852, 2340, 0, 0, 211, 0, 0, 0, 211,
	0, 0, 0, 0, 0, 0, 0, 0, 78, 0,
	0, 0, 0, 0, 211, 0, 44, 0, 0, 0,
	1187, 0, 211, 0, 0, 2340, 0, 532, 0, 0,
	2677, 0, 0, 1505, 2340, 0, 0, 0, 0, 0,
	47, 149, 81, 0, 82, 0, 45, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 46, 0, 0, 0,
	0, 945, 0, 183, 0, 0, 211, 1888, 0, 0,
	1888, 0, 0, 0, 0, 50, 0, 1482, 1483, 120,
	1515, 1516, 1517, 1525, 1526, 1527, 0, 0, 0, 123,
	0, 0, 0, 0, 0, 0, 0, 1513, 0, 0,
	212, 0, 0, 185, 1485, 2668, 0, 2939, 0, 1531,
	1187, 211, 0, 211, 1511, 0, 0, 0, 0, 0,
	0, 212, 0, 0, 0, 0, 121, 0, 0, 0,
	0, 0, 1506, 1484, 0, 0, 0, 0, 0, 153,
	0, 0, 1504, 212, 0, 0, 211, 184, 2040, 1501,
	0, 0, 0, 0, 2956, 2957, 2683, 177, 2960, 0,
	0, 0, 2963, 0, 0, 178, 0, 1482, 1483, 0,
	0, 2967, 0, 0, 0, 0, 0, 0, 0, 0,
	2974, 0, 0, 2716, 0, 0, 152, 1513, 0, 3,
	2678, 0, 0, 0, 1485, 0, 0, 0, 2986, 0,
	0, 0, 3002, 0, 0, 2216, 0, 1507, 1508, 1509,
	1510, 0, 0, 0, 0, 0, 0, 1490, 0, 0,
	0, 0, 0, 1484, 0, 0, 0, 3011, 3012, 0,
	3013, 3014, 3015, 0, 0, 3016, 0, 0, 0, 3018,
	0, 1522, 0, 0, 1532, 0, 0, 2216, 1512, 1514,
	0, 0, 1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491,
	1492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3046, 3047, 0, 0, 0, 0, 0, 1499, 1500, 0,
	0, 0, 0, 0, 0, 3056, 0, 0, 0, 2679,
	211, 211, 213, 1520, 0, 0, 0, 0, 0, 0,
	3065, 0, 1505, 0, 0, 0, 0, 1490, 0, 0,
	0, 0, 532, 532, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1512, 1514,
	0, 0, 0, 0, 1220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3094, 2216, 0, 2662,
	2663, 0, 2680, 2681, 2682, 0, 0, 0, 0, 0,
	0, 3102, 3105, 0, 0, 0, 0, 0, 2969, 0,
	0, 0, 0, 1511, 0, 0, 0, 0, 0, 0,
	0, 579, 1505, 0, 0, 0, 3124, 0, 0, 0,
	0, 1506, 2674, 2675, 2676, 0, 0, 0, 0, 2673,
	2671, 2672, 2664, 2665, 2666, 2667, 2669, 2670, 0, 0,
	0, 0, 0, 0, 2677, 2216, 2216, 1523, 0, 0,
	0, 0, 0, 211, 0, 0, 0, 0, 0, 0,
	211, 0, 0, 0, 0, 0, 858, 0, 0, 0,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1620, 2340, 211,
	0, 0, 0, 0, 0, 0, 3180, 0, 0, 0,
	0, 0, 2483, 2483, 0, 0, 0, 0, 702, 702,
	2340, 1506, 0, 1888, 1888, 0, 0, 702, 2340, 2668,
	0, 0, 0, 0, 0, 211, 0, 0, 0, 0,
	0, 1521, 0, 0, 1496, 1497, 1503, 1524, 1502, 1498,
	0, 1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492,
	0, 0, 0, 0, 0, 0, 0, 3218, 3219, 0,
	0, 0, 0, 3223, 3224, 0, 0, 0, 3227, 3228,
	2683, 0, 0, 0, 0, 3232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3236, 1482, 1483, 0,
	0, 0, 0, 0, 3240, 0, 0, 0, 0, 0,
	0, 0, 3241, 0, 2678, 0, 0, 1513, 0, 0,
	0, 0, 0, 0, 1485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492,
	0, 0, 0, 1484, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 0, 0, 0, 0, 1220, 0, 211,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 1097,
	212, 212, 211, 1097, 212, 1097, 1097, 0, 0, 1097,
	0, 0, 0, 0, 0, 0, 0, 212, 2340, 2340,
	2340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1220, 0, 0, 2679, 0, 3105, 0, 2340, 0, 2791,
	0, 0, 1220, 1220, 211, 0, 0, 0, 0, 0,
	0, 0, 1482, 1483, 0, 211, 211, 1490, 0, 1097,
	1097, 212, 212, 0, 0, 0, 0, 2340, 0, 0,
	0, 3343, 1513, 0, 212, 0, 0, 0, 0, 1485,
	211, 0, 0, 0, 0, 3354, 0, 0, 1512, 1514,
	0, 0, 0, 0, 0, 0, 212, 212, 212, 212,
	0, 1097, 1097, 0, 0, 0, 1097, 0, 1484, 0,
	1097, 212, 212, 0, 0, 0, 0, 1504, 0, 1220,
	1097, 0, 3105, 0, 1501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1505, 0, 0, 0, 2674, 2675, 2676, 3392,
	3393, 3394, 0, 2673, 2671, 2672, 2664, 2665, 2666, 2667,
	2669, 2670, 0, 1097, 2583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3402, 3403, 0, 0, 0,
	0, 0, 1507, 1508, 1509, 1510, 0, 212, 0, 3410,
	0, 0, 1490, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 0, 0, 0, 2340, 0, 2791, 0,
	0, 3423, 0, 0, 0, 0, 0, 858, 0, 211,
	0, 858, 0, 1512, 1514, 0, 0, 0, 0, 3105,
	1176, 0, 911, 0, 1176, 0, 0, 3446, 0, 0,
	0, 1506, 579, 0, 0, 0, 3453, 0, 0, 846,
	0, 0, 1499, 1500, 0, 3460, 0, 0, 0, 0,
	0, 3423, 0, 0, 0, 0, 0, 0, 0, 2340,
	0, 210, 0, 0, 0, 0, 0, 1505, 211, 0,
	0, 0, 3105, 0, 0, 3105, 0, 0, 0, 1220,
	0, 0, 608, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3105, 3105, 0, 0, 0,
	211, 211, 0, 0, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3002, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3530, 1511, 0,
	3533, 0, 1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492,
	0, 0, 0, 0, 0, 0, 1506, 3105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	0, 0, 0, 0, 0, 2791, 0, 0, 1031, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1220,
	0, 1220, 0, 0, 0, 0, 0, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1097, 0,
	212, 212, 212, 0, 0, 3599, 0, 212, 0, 0,
	0, 1220, 212, 0, 211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1097, 211, 2340, 846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1502, 1498, 1097, 1495, 1493, 1494, 1486,
	1487, 1488, 1489, 1491, 1492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3002, 3651, 3651, 3651, 0,
	0, 0, 0, 216, 1482, 1483, 0, 1515, 1516, 1517,
	1525, 1526, 1527, 0, 0, 0, 0, 0, 3672, 0,
	0, 0, 0, 1518, 1513, 0, 0, 0, 0, 0,
	0, 1485, 0, 0, 0, 0, 1531, 0, 0, 2340,
	0, 3105, 0, 3105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3651, 0, 3423,
	1484, 0, 0, 601, 0, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 1501, 0, 0, 0,
	0, 0, 0, 0, 0, 601, 1220, 0, 2340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1097, 1097, 212, 0, 0,
	0, 0, 0, 1097, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 1508, 1509, 1510, 0, 0,
	0, 0, 0, 0, 1490, 0, 0, 3651, 3760, 0,
	0, 0, 212, 0, 0, 3764, 212, 212, 0, 1176,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 1532, 0, 0, 0, 1512, 1514, 0, 212, 0,
	212, 0, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1528, 0, 1529, 0, 0,
	858, 0, 0, 0, 1499, 1500, 1176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 0, 0, 0, 0, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1097, 0, 1097, 0, 1097, 0, 0, 0, 0, 1530,
	0, 0, 1097, 0, 0, 1097, 212, 0, 0, 212,
	0, 0, 0, 0, 0, 0, 1519, 0, 1097, 1097,
	1097, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 212,
	0, 212, 0, 212, 0, 212, 0, 212, 0, 210,
	0, 210, 210, 0, 0, 210, 0, 0, 0, 0,
	1511, 0, 0, 0, 0, 0, 0, 0, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 1506, 0,
	0, 880, 88, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1523, 0, 0, 0, 0, 0,
	0, 0, 210, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 1097, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 210, 210,
	210, 0, 0, 0, 0, 0, 0, 0, 88, 0,
	0, 0, 210, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1521, 0,
	0, 1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493,
	1494, 1486, 1487, 1488, 1489, 1491, 1492, 0, 0, 0,
	0, 1097, 0, 0, 0, 3246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 823, 0, 0, 0, 0,
	0, 0, 0, 0, 841, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1018, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 0, 1097, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1482, 1483, 0, 1515, 1516, 1517, 1525,
	1526, 1527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1093, 1518, 1513, 0, 1093, 0, 1206, 1206, 0,
	1485, 1206, 0, 0, 0, 1531, 0, 1176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1484,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 915, 1097, 0, 0, 1501, 0, 0, 0, 0,
	0, 1206, 1206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1097, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 212, 0, 0, 0, 0,
	0, 0, 1176, 1206, 1206, 0, 212, 0, 1206, 0,
	0, 0, 1206, 1507, 1508, 1509, 1510, 0, 0, 212,
	0, 0, 1206, 1490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 1097, 0, 0, 0, 1097, 0,
	1097, 0, 1642, 0, 1031, 0, 212, 1522, 210, 0,
	1532, 0, 0, 0, 1512, 1514, 0, 0, 0, 0,
	0, 210, 1642, 210, 0, 1206, 0, 0, 608, 1176,
	0, 0, 212, 608, 1528, 0, 1529, 0, 212, 0,
	0, 0, 0, 1499, 1500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1176, 0, 0, 0, 1520,
	0, 0, 0, 0, 0, 0, 0, 0, 1505, 0,
	212, 0, 0, 212, 0, 212, 0, 212, 0, 212,
	212, 0, 0, 1097, 1097, 1097, 0, 1097, 1530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1097,
	0, 0, 0, 0, 0, 1519, 0, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 212,
	212, 212, 0, 212, 0, 212, 0, 1506, 0, 0,
	0, 0, 0, 1176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1523, 0, 0, 212, 0, 608, 0,
	0, 0, 0, 0, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 0,
	88, 0, 88, 0, 0, 1176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 210, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 210, 0, 210, 0, 0, 0, 1521, 0, 0,
	1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493, 1494,
	1486, 1487, 1488, 1489, 1491, 1492, 841, 88, 88, 0,
	3248, 0, 0, 0, 3247, 0, 88, 0, 0, 0,
	1093, 0, 0, 0, 88, 0, 0, 0, 0, 601,
	0, 0, 0, 0, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 1093, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 608,
	210, 0, 210, 0, 210, 0, 210, 0, 210, 0,
	1482, 1483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1097, 0, 0, 0, 0, 0, 0, 0, 0,
	1513, 0, 0, 0, 0, 0, 0, 1485, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1097, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 823, 1484, 0, 0, 0,
	1097, 0, 0, 0, 0, 1504, 0, 0, 0, 0,
	0, 0, 1501, 1545, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1552, 0, 0, 0, 1558, 0, 0, 1206, 1206, 0,
	0, 0, 0, 212, 0, 1093, 0, 0, 0, 1094,
	0, 0, 2576, 1094, 0, 1207, 1207, 0, 0, 1207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 1508, 1509, 1510, 212, 212, 212, 0, 0, 0,
	1490, 0, 0, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 1097, 0, 0, 0, 1207,
	1207, 1512, 1514, 1097, 0, 0, 0, 0, 0, 0,
	0, 0, 1097, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 0, 1097, 212, 0,
	1499, 1500, 0, 0, 0, 0, 0, 1097, 1097, 0,
	0, 1207, 1207, 212, 0, 0, 1207, 0, 0, 0,
	1207, 0, 1031, 0, 0, 1505, 0, 0, 0, 0,
	1207, 1640, 1206, 1643, 1206, 88, 1206, 0, 1031, 0,
	0, 0, 1176, 0, 1206, 0, 0, 1206, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 1097, 1097, 0,
	1206, 1206, 1206, 0, 0, 212, 0, 0, 0, 0,
	0, 0, 0, 1207, 1176, 0, 0, 0, 0, 0,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1511, 0, 1097, 0,
	212, 1097, 212, 0, 0, 858, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 0, 0, 858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1097, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1176, 210, 0, 1097,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 1176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 608, 0, 0,
	0, 1502, 1498, 0, 1495, 1493, 1494, 1486, 1487, 1488,
	1489, 1491, 1492, 1093, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 210,
	0, 1482, 1483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1513, 0, 0, 0, 0, 0, 0, 1485, 0,
	0, 210, 0, 0, 210, 0, 210, 0, 210, 0,
	210, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	1093, 0, 1097, 0, 0, 0, 0, 1484, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 0, 210, 1176,
	0, 0, 1176, 1501, 0, 0, 1093, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 210, 0, 1094, 0,
	841, 0, 841, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1207, 0, 0, 0, 0, 210,
	210, 210, 210, 0, 210, 0, 210, 0, 0, 0,
	0, 1507, 1508, 1509, 1510, 1094, 0, 0, 0, 0,
	0, 1490, 0, 1176, 0, 0, 0, 0, 0, 1097,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	1176, 0, 212, 0, 1206, 210, 0, 0, 0, 212,
	0, 0, 1512, 1514, 0, 0, 0, 0, 1097, 212,
	0, 0, 0, 1097, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1093, 0, 0, 0, 0, 0,
	0, 1499, 1500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1097, 1097, 1097, 823, 0, 0, 823,
	823, 0, 0, 0, 0, 0, 1505, 0, 0, 1097,
	0, 0, 0, 0, 212, 1097, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1093, 0, 0, 0,
	1206, 0, 1206, 0, 0, 0, 0, 1097, 0, 0,
	0, 0, 0, 0, 0, 1207, 1207, 0, 0, 0,
	0, 0, 0, 1094, 2107, 0, 0, 0, 0, 0,
	0, 0, 0, 1176, 0, 0, 0, 0, 841, 0,
	0, 0, 0, 0, 693, 0, 0, 0, 0, 1552,
	0, 0, 0, 1552, 0, 0, 0, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 58,
	696, 695, 0, 0, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 59, 0, 1206, 1206, 1206, 0, 1206,
	0, 0, 0, 0, 0, 0, 0, 0, 63, 0,
	0, 1206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1018, 1097, 0, 1097, 0, 1031, 0, 0, 69,
	0, 0, 0, 0, 0, 0, 0, 1643, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1207, 0, 1207, 0, 1207, 0, 1642, 0, 0, 1176,
	75, 0, 1207, 0, 0, 1207, 0, 0, 88, 0,
	86, 0, 0, 212, 0, 76, 83, 0, 1207, 1207,
	1207, 0, 0, 1097, 212, 212, 0, 0, 1097, 0,
	0, 0, 1502, 1498, 0, 1495, 1493, 1494, 1486, 1487,
	1488, 1489, 1491, 1492, 210, 0, 0, 0, 0, 212,
	0, 0, 0, 0, 0, 0, 1176, 1097, 0, 77,
	1097, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 210, 210, 1176, 0,
	0, 0, 0, 0, 1642, 0, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	1097, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 666, 0, 0, 1094, 0, 88, 0,
	1097, 0, 667, 0, 0, 210, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 668, 0,
	0, 0, 0, 0, 210, 0, 0, 88, 0, 0,
	0, 0, 1031, 0, 0, 688, 0, 1097, 0, 0,
	0, 78, 0, 0, 0, 0, 0, 0, 0, 1097,
	669, 88, 0, 88, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 1176, 0, 1176, 0, 0, 0, 670,
	0, 0, 58, 0, 149, 81, 210, 82, 0, 0,
	0, 1094, 0, 0, 0, 0, 59, 0, 0, 671,
	0, 0, 672, 0, 0, 88, 183, 596, 88, 0,
	0, 63, 0, 0, 0, 0, 0, 0, 697, 0,
	0, 0, 120, 1093, 0, 0, 0, 212, 687, 0,
	0, 210, 1097, 210, 1176, 0, 88, 0, 0, 1176,
	0, 0, 69, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 1093, 0, 0, 1094, 212,
	212, 0, 0, 0, 0, 0, 210, 0, 1176, 121,
	0, 0, 1093, 75, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 86, 1094, 0, 0, 0, 76, 83,
	184, 0, 0, 0, 88, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 1176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 674, 0, 694,
	0, 0, 77, 0, 0, 0, 0, 0, 0, 0,
	0, 1176, 0, 0, 691, 0, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 1097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1097, 1097,
	0, 0, 1207, 595, 1097, 0, 0, 1093, 1176, 0,
	676, 0, 0, 677, 0, 1206, 0, 0, 0, 685,
	1176, 0, 0, 0, 1093, 0, 678, 0, 0, 0,
	2107, 0, 1094, 0, 0, 0, 0, 0, 0, 1206,
	1031, 1031, 0, 212, 0, 1097, 0, 0, 0, 1206,
	1206, 1552, 0, 858, 212, 2298, 0, 679, 686, 0,
	0, 0, 0, 0, 0, 680, 0, 0, 0, 0,
	0, 0, 0, 0, 78, 0, 0, 0, 682, 0,
	0, 0, 0, 681, 1094, 0, 0, 0, 1207, 0,
	1207, 0, 0, 0, 0, 689, 0, 0, 0, 1206,
	1206, 0, 0, 0, 0, 0, 684, 149, 81, 0,
	82, 0, 0, 0, 0, 0, 1482, 1483, 0, 1515,
	1516, 1517, 1525, 1526, 1527, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 1518, 1513, 0, 0, 0,
	0, 697, 0, 1485, 0, 120, 0, 0, 1531, 0,
	1093, 0, 0, 1093, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 1484, 1207, 1207, 1207, 0, 1207, 0, 0,
	1018, 1504, 0, 210, 0, 0, 0, 0, 1501, 1207,
	210, 0, 121, 0, 0, 1018, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 1031,
	0, 0, 0, 177, 1093, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1093, 0, 0, 0, 0, 1507, 1508, 1509, 1510,
	0, 0, 152, 58, 0, 210, 1490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	0, 0, 0, 0, 0, 0, 1176, 0, 0, 0,
	1522, 858, 63, 1532, 0, 0, 0, 1512, 1514, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 88, 0,
	0, 88, 0, 0, 0, 0, 0, 1528, 0, 1529,
	0, 0, 0, 69, 0, 0, 1499, 1500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	88, 0, 1520, 88, 0, 0, 0, 0, 0, 0,
	0, 1505, 0, 0, 75, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 86, 0, 0, 0, 0, 76,
	83, 1530, 0, 0, 1093, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1519, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 0, 1031,
	0, 1018, 0, 0, 841, 0, 0, 0, 0, 0,
	0, 0, 1642, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	88, 0, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 210, 0, 0, 0,
	0, 1206, 0, 0, 0, 0, 1523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1093, 1094, 0, 0, 0, 1206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 78, 58, 0, 0, 0,
	0, 0, 0, 1094, 0, 1206, 1206, 1206, 0, 0,
	59, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1094, 1206, 0, 0, 0, 63, 0, 1093, 149, 81,
	1521, 82, 0, 1496, 1497, 1503, 1524, 1502, 1498, 0,
	1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492, 1093,
	183, 0, 0, 2650, 0, 0, 69, 2651, 0, 0,
	0, 0, 697, 0, 1482, 1483, 120, 1515, 1516, 1517,
	1525, 1526, 1527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 1513, 0, 0, 75, 0, 0,
	185, 1485, 0, 0, 0, 0, 1531, 86, 0, 210,
	0, 0, 76, 83, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 0, 0, 0, 0, 0, 0,
	1484, 0, 0, 0, 88, 1094, 153, 0, 0, 1504,
	0, 0, 0, 1207, 184, 0, 1501, 0, 0, 1018,
	1018, 0, 1094, 0, 177, 0, 77, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 1207, 210, 0,
	0, 0, 0, 0, 1093, 0, 1093, 1207, 1207, 0,
	0, 0, 0, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 210, 0, 0, 1507, 1508, 1509, 1510, 0, 0,
	0, 0, 0, 0, 1490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1207, 1207, 0,
	0, 0, 0, 0, 0, 1093, 0, 0, 1522, 0,
	1093, 1532, 0, 0, 0, 1512, 1514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1528, 0, 1529, 78, 1093,
	0, 0, 1206, 0, 1499, 1500, 0, 0, 1094, 0,
	0, 1094, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 0, 0, 0, 0, 0, 0, 0, 210, 1505,
	0, 149, 81, 0, 82, 0, 0, 0, 0, 0,
	0, 0, 1093, 0, 0, 0, 0, 0, 0, 1530,
	0, 0, 0, 183, 0, 0, 0, 0, 1018, 0,
	0, 0, 0, 0, 0, 697, 1519, 0, 0, 120,
	0, 0, 1093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1094, 0, 210, 0, 0, 0, 0, 0,
	0, 88, 0, 185, 0, 210, 0, 0, 0, 1094,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1093,
	1511, 0, 0, 0, 0, 0, 121, 0, 0, 0,
	0, 1093, 0, 0, 0, 0, 0, 0, 1506, 153,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 1523, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1018, 0, 1094, 0, 0, 0, 0, 0, 1018, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1521, 0,
	0, 1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493,
	1494, 1486, 1487, 1488, 1489, 1491, 1492, 0, 0, 0,
	0, 2129, 0, 0, 0, 2130, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 0,
	0, 0, 0, 0, 0, 58, 0, 0, 88, 1207,
	1206, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	1206, 1206, 0, 0, 0, 0, 1206, 0, 88, 0,
	0, 0, 0, 0, 63, 0, 0, 0, 1094, 0,
	0, 0, 0, 1207, 1482, 1483, 0, 1515, 1516, 1517,
	1525, 1526, 1527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 1513, 69, 0, 1093, 0, 0,
	0, 1485, 0, 1207, 1207, 1207, 1531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1207,
	0, 0, 0, 0, 0, 1094, 75, 0, 0, 0,
	1484, 0, 0, 0, 0, 0, 86, 0, 0, 1504,
	0, 76, 83, 0, 0, 0, 1501, 1094, 0, 0,
	0, 0, 0, 0, 1482, 1483, 0, 1515, 1516, 1517,
	1525, 1526, 1527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 1513, 0, 0, 0, 0, 0,
	0, 1485, 0, 0, 0, 77, 1531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 1508, 1509, 1510, 0, 0,
	1484, 0, 0, 0, 1490, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 1501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 1532, 0, 0, 0, 1512, 1514, 0, 0, 0,
	0, 0, 2107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1094, 0, 1094, 1528, 0, 1529, 0, 0,
	0, 0, 0, 0, 1499, 1500, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 1508, 1509, 1510, 0, 0,
	1520, 0, 0, 0, 1490, 0, 0, 78, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 1530,
	0, 1532, 0, 1094, 0, 1512, 1514, 0, 1094, 0,
	149, 81, 0, 82, 0, 0, 1519, 0, 0, 0,
	0, 0, 0, 0, 0, 1528, 0, 1529, 0, 0,
	0, 0, 183, 0, 1499, 1500, 0, 1094, 0, 0,
	1207, 0, 0, 0, 697, 0, 0, 0, 120, 0,
	1520, 0, 0, 0, 0, 0, 0, 0, 0, 1505,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 0, 0, 0, 1506, 1530,
	1094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 1519, 0, 0, 0,
	0, 0, 0, 0, 1523, 0, 0, 0, 153, 0,
	1094, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 88, 0, 0, 88, 177, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	1511, 0, 0, 0, 0, 0, 0, 1094, 0, 0,
	0, 0, 0, 0, 0, 1348, 0, 0, 1506, 1094,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1523, 0, 0, 0, 1521, 0,
	0, 1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493,
	1494, 1486, 1487, 1488, 1489, 1491, 1492, 0, 0, 0,
	0, 0, 0, 0, 0, 2972, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1521, 0,
	0, 1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493,
	1494, 1486, 1487, 1488, 1489, 1491, 1492, 0, 0, 0,
	0, 0, 0, 0, 0, 2653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1207, 1207,
	0, 0, 0, 0, 1207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	1098, 225, 1099, 1100, 1101, 1094, 1102, 483, 1103, 1104,
	1105, 1106, 226, 228, 227, 229, 230, 484, 485, 231,
	486, 234, 232, 233, 487, 1107, 235, 236, 237, 238,
	239, 240, 1108, 1109, 241, 488, 489, 490, 1110, 242,
	491, 1111, 1096, 1112, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 1113, 253, 0, 254, 255,
	256, 1114, 257, 968, 258, 259, 1115, 1116, 1118, 1117,
	1119, 1120, 1121, 260, 261, 262, 263, 264, 265, 492,
	493, 1122, 266, 1123, 268, 267, 1124, 269, 1125, 1126,
	270, 271, 272, 1127, 273, 1128, 274, 275, 1129, 276,
	494, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	495, 496, 1130, 217, 1131, 0, 0, 0, 0, 287,
	288, 289, 497, 290, 291, 0, 292, 1132, 293, 1133,
	1134, 969, 294, 295, 1135, 296, 498, 1136, 499, 297,
	1137, 298, 299, 300, 301, 500, 501, 502, 354, 971,
	302, 303, 1138, 304, 305, 307, 0, 0, 218, 306,
	308, 315, 1139, 970, 309, 503, 311, 310, 312, 313,
	314, 504, 1140, 505, 1141, 316, 972, 506, 973, 317,
	318, 319, 974, 320, 321, 0, 0, 322, 323, 324,
	325, 326, 1142, 328, 327, 1143, 329, 507, 975, 330,
	331, 976, 1144, 332, 333, 1145, 1146, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 977, 347, 348, 351, 350, 978, 349, 1147, 219,
	979, 352, 1148, 508, 353, 509, 355, 356, 1149, 357,
	358, 359, 1150, 1151, 361, 362, 363, 1152, 1153, 364,
	365, 510, 980, 366, 981, 511, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 1154, 375, 376, 512, 377,
	513, 378, 1155, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 514, 387, 388, 1156, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	1157, 402, 982, 403, 404, 405, 406, 515, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 1158, 424,
	425, 419, 421, 422, 423, 420, 426, 427, 428, 1159,
	429, 409, 410, 430, 431, 983, 432, 433, 516, 434,
	435, 1160, 436, 437, 438, 439, 411, 440, 444, 445,
	441, 442, 443, 517, 1161, 447, 448, 446, 1162, 449,
	450, 451, 452, 453, 281, 454, 1163, 455, 518, 519,
	520, 521, 1164, 462, 1165, 456, 457, 522, 458, 523,
	1166, 459, 460, 461, 0, 463, 464, 1167, 1168, 465,
	466, 467, 468, 469, 471, 1169, 472, 1170, 470, 473,
	474, 475, 524, 525, 526, 1171, 477, 476, 527, 1172,
	1173, 1174, 1175, 478, 479, 528, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1091, 0, 0, 0, 0, 0, 0, 0, 2260,
	0, 0, 0, 0, 0, 0, 0, 2261, 220, 221,
	222, 223, 224, 1098, 225, 1099, 1100, 1101, 0, 1102,
	483, 1103, 1104, 1105, 1106, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 1107, 235,
	236, 237, 238, 239, 240, 1108, 1109, 241, 488, 489,
	490, 1110, 242, 491, 1111, 1096, 1112, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 1113, 253,
	0, 254, 255, 256, 1114, 257, 968, 258, 259, 1115,
	1116, 1118, 1117, 1119, 1120, 1121, 260, 261, 262, 263,
	264, 265, 492, 493, 1122, 266, 1123, 268, 267, 1124,
	269, 1125, 1126, 270, 271, 272, 1127, 273, 1128, 274,
	275, 1129, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 1130, 217, 1131, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	1132, 293, 1133, 1134, 969, 294, 295, 1135, 296, 498,
	1136, 499, 297, 1137, 298, 299, 300, 301, 500, 501,
	502, 354, 971, 302, 303, 1138, 304, 305, 307, 0,
	0, 218, 306, 308, 315, 1139, 970, 309, 503, 311,
	310, 312, 313, 314, 504, 1140, 505, 1141, 316, 972,
	506, 973, 317, 318, 319, 974, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 1142, 328, 327, 1143, 329,
	507, 975, 330, 331, 976, 1144, 332, 333, 1145, 1146,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 977, 347, 348, 351, 350, 978,
	349, 1147, 219, 979, 352, 1148, 508, 353, 509, 355,
	356, 1149, 357, 358, 359, 1150, 1151, 361, 362, 363,
	1152, 1153, 364, 365, 510, 980, 366, 981, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 1154, 375,
	376, 512, 377, 513, 378, 1155, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 1156, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 1157, 402, 982, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 1158, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 1159, 429, 409, 410, 430, 431, 983, 432,
	433, 516, 434, 435, 1160, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 1161, 447, 448,
	446, 1162, 449, 450, 451, 452, 453, 281, 454, 1163,
	455, 518, 519, 520, 521, 1164, 462, 1165, 456, 457,
	522, 458, 523, 1166, 459, 460, 461, 0, 463, 464,
	1167, 1168, 465, 466, 467, 468, 469, 471, 1169, 472,
	1170, 470, 473, 474, 475, 524, 525, 526, 1171, 477,
	476, 527, 1172, 1173, 1174, 1175, 478, 479, 528, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1091, 0, 0, 0, 0, 2980, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2982, 220,
	221, 222, 223, 224, 1098, 225, 1099, 1100, 1101, 0,
	1102, 483, 1103, 1104, 1105, 1106, 226, 228, 227, 229,
	230, 484, 485, 231, 486, 234, 232, 233, 487, 1107,
	235, 236, 237, 238, 239, 240, 1108, 1109, 241, 488,
	489, 490, 1110, 242, 491, 1111, 1096, 1112, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 1113,
	253, 0, 254, 255, 256, 1114, 257, 968, 258, 259,
	1115, 1116, 1118, 1117, 1119, 1120, 1121, 260, 261, 262,
	263, 264, 265, 492, 493, 1122, 266, 1123, 268, 267,
	1124, 269, 1125, 1126, 270, 271, 272, 1127, 273, 1128,
	274, 275, 1129, 276, 494, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 495, 496, 1130, 217, 1131, 0,
	0, 0, 0, 287, 288, 289, 497, 290, 291, 0,
	292, 1132, 293, 1133, 1134, 969, 294, 295, 1135, 296,
	498, 1136, 499, 297, 1137, 298, 299, 300, 301, 500,
	501, 502, 354, 971, 302, 303, 1138, 304, 305, 307,
	0, 0, 218, 306, 308, 315, 1139, 970, 309, 503,
	311, 310, 312, 313, 314, 504, 1140, 505, 1141, 316,
	972, 506, 973, 317, 318, 319, 974, 320, 321, 0,
	0, 322, 323, 324, 325, 326, 1142, 328, 327, 1143,
	329, 507, 975, 330, 331, 976, 1144, 332, 333, 1145,
	1146, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 977, 347, 348, 351, 350,
	978, 349, 1147, 219, 979, 352, 1148, 508, 353, 509,
	355, 356, 1149, 357, 358, 359, 1150, 1151, 361, 362,
	363, 1152, 1153, 364, 365, 510, 980, 366, 981, 511,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 1154,
	375, 376, 512, 377, 513, 378, 1155, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 514, 387, 388, 1156,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 1157, 402, 982, 403, 404, 405,
	406, 515, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 1158, 424, 425, 419, 421, 422, 423, 420,
	426, 427, 428, 1159, 429, 409, 410, 430, 431, 983,
	432, 433, 516, 434, 435, 1160, 436, 437, 438, 439,
	411, 440, 444, 445, 441, 442, 443, 517, 1161, 447,
	448, 446, 1162, 449, 450, 451, 452, 453, 281, 454,
	1163, 455, 518, 519, 520, 521, 1164, 462, 1165, 456,
	457, 522, 458, 523, 1166, 459, 460, 461, 0, 463,
	464, 1167, 1168, 465, 466, 467, 468, 469, 471, 1169,
	472, 1170, 470, 473, 474, 475, 524, 525, 526, 1171,
	477, 476, 527, 1172, 1173, 1174, 1175, 478, 479, 528,
	480, 481, 482, 0, 0, 0, 0, 1091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3270, 220, 221, 222, 223, 224, 1098,
	225, 1099, 1100, 1101, 0, 1102, 483, 1103, 1104, 1105,
	1106, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 1107, 235, 236, 237, 238, 239,
	240, 1108, 1109, 241, 488, 489, 490, 1110, 242, 491,
	1111, 1096, 1112, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 1113, 253, 0, 254, 255, 256,
	1114, 257, 968, 258, 259, 1115, 1116, 1118, 1117, 1119,
	1120, 1121, 260, 261, 262, 263, 264, 265, 492, 493,
	1122, 266, 1123, 268, 267, 1124, 269, 1125, 1126, 270,
	271, 272, 1127, 273, 1128, 274, 275, 1129, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 1130, 217, 1131, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 1132, 293, 1133, 1134,
	969, 294, 295, 1135, 296, 498, 1136, 499, 297, 1137,
	298, 299, 300, 301, 500, 501, 502, 354, 971, 302,
	303, 1138, 304, 305, 307, 0, 0, 218, 306, 308,
	315, 1139, 970, 309, 503, 311, 310, 312, 313, 314,
	504, 1140, 505, 1141, 316, 972, 506, 973, 317, 318,
	319, 974, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 1142, 328, 327, 1143, 329, 507, 975, 330, 331,
	976, 1144, 332, 333, 1145, 1146, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	977, 347, 348, 351, 350, 978, 349, 1147, 219, 979,
	352, 1148, 508, 353, 509, 355, 356, 1149, 357, 358,
	359, 1150, 1151, 361, 362, 363, 1152, 1153, 364, 365,
	510, 980, 366, 981, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 1154, 375, 376, 512, 377, 513,
	378, 1155, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 1156, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 1157,
	402, 982, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 1158, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 1159, 429,
	409, 410, 430, 431, 983, 432, 433, 516, 434, 435,
	1160, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 1161, 447, 448, 446, 1162, 449, 450,
	451, 452, 453, 281, 454, 1163, 455, 518, 519, 520,
	521, 1164, 462, 1165, 456, 457, 522, 458, 523, 1166,
	459, 460, 461, 0, 463, 464, 1167, 1168, 465, 466,
	467, 468, 469, 471, 1169, 472, 1170, 470, 473, 474,
	475, 524, 525, 526, 1171, 477, 476, 527, 1172, 1173,
	1174, 1175, 478, 479, 528, 480, 481, 482, 1091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3398, 0, 220, 221, 222, 223, 224,
	1098, 225, 1099, 1100, 1101, 0, 1102, 483, 1103, 1104,
	1105, 1106, 226, 228, 227, 229, 230, 484, 485, 231,
	486, 234, 232, 233, 487, 1107, 235, 236, 237, 238,
	239, 240, 1108, 1109, 241, 488, 489, 490, 1110, 242,
	491, 1111, 1096, 1112, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 1113, 253, 0, 254, 255,
	256, 1114, 257, 968, 258, 259, 1115, 1116, 1118, 1117,
	1119, 1120, 1121, 260, 261, 262, 263, 264, 265, 492,
	493, 1122, 266, 1123, 268, 267, 1124, 269, 1125, 1126,
	270, 271, 272, 1127, 273, 1128, 274, 275, 1129, 276,
	494, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	495, 496, 1130, 217, 1131, 0, 0, 0, 0, 287,
	288, 289, 497, 290, 291, 0, 292, 1132, 293, 1133,
	1134, 969, 294, 295, 1135, 296, 498, 1136, 499, 297,
	1137, 298, 299, 300, 301, 500, 501, 502, 354, 971,
	302, 303, 1138, 304, 305, 307, 0, 0, 218, 306,
	308, 315, 1139, 970, 309, 503, 311, 310, 312, 313,
	314, 504, 1140, 505, 1141, 316, 972, 506, 973, 317,
	318, 319, 974, 320, 321, 0, 0, 322, 323, 324,
	325, 326, 1142, 328, 327, 1143, 329, 507, 975, 330,
	331, 976, 1144, 332, 333, 1145, 1146, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 977, 347, 348, 351, 350, 978, 349, 1147, 219,
	979, 352, 1148, 508, 353, 509, 355, 356, 1149, 357,
	358, 359, 1150, 1151, 361, 362, 363, 1152, 1153, 364,
	365, 510, 980, 366, 981, 511, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 1154, 375, 376, 512, 377,
	513, 378, 1155, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 514, 387, 388, 1156, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	1157, 402, 982, 403, 404, 405, 406, 515, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 1158, 424,
	425, 419, 421, 422, 423, 420, 426, 427, 428, 1159,
	429, 409, 410, 430, 431, 983, 432, 433, 516, 434,
	435, 1160, 436, 437, 438, 439, 411, 440, 444, 445,
	441, 442, 443, 517, 1161, 447, 448, 446, 1162, 449,
	450, 451, 452, 453, 281, 454, 1163, 455, 518, 519,
	520, 521, 1164, 462, 1165, 456, 457, 522, 458, 523,
	1166, 459, 460, 461, 0, 463, 464, 1167, 1168, 465,
	466, 467, 468, 469, 471, 1169, 472, 1170, 470, 473,
	474, 475, 524, 525, 526, 1171, 477, 476, 527, 1172,
	1173, 1174, 1175, 478, 479, 528, 480, 481, 482, 1091,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3323, 0, 220, 221, 222, 223,
	224, 1098, 225, 1099, 1100, 1101, 0, 1102, 483, 1103,
	1104, 1105, 1106, 226, 228, 227, 229, 230, 484, 485,
	231, 486, 234, 232, 233, 487, 1107, 235, 236, 237,
	238, 239, 240, 1108, 1109, 241, 488, 489, 490, 1110,
	242, 491, 1111, 1096, 1112, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 1113, 253, 0, 254,
	255, 256, 1114, 257, 968, 258, 259, 1115, 1116, 1118,
	1117, 1119, 1120, 1121, 260, 261, 262, 263, 264, 265,
	492, 493, 1122, 266, 1123, 268, 267, 1124, 269, 1125,
	1126, 270, 271, 272, 1127, 273, 1128, 274, 275, 1129,
	276, 494, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 495, 496, 1130, 217, 1131, 0, 0, 0, 0,
	287, 288, 289, 497, 290, 291, 0, 292, 1132, 293,
	1133, 1134, 969, 294, 295, 1135, 296, 498, 1136, 499,
	297, 1137, 298, 299, 300, 301, 500, 501, 502, 354,
	971, 302, 303, 1138, 304, 305, 307, 0, 0, 218,
	306, 308, 315, 1139, 970, 309, 503, 311, 310, 312,
	313, 314, 504, 1140, 505, 1141, 316, 972, 506, 973,
	317, 318, 319, 974, 320, 321, 0, 0, 322, 323,
	324, 325, 326, 1142, 328, 327, 1143, 329, 507, 975,
	330, 331, 976, 1144, 332, 333, 1145, 1146, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 977, 347, 348, 351, 350, 978, 349, 1147,
	219, 979, 352, 1148, 508, 353, 509, 355, 356, 1149,
	357, 358, 359, 1150, 1151, 361, 362, 363, 1152, 1153,
	364, 365, 510, 980, 366, 981, 511, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 1154, 375, 376, 512,
	377, 513, 378, 1155, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 514, 387, 388, 1156, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 1157, 402, 982, 403, 404, 405, 406, 515, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 1158,
	424, 425, 419, 421, 422, 423, 420, 426, 427, 428,
	1159, 429, 409, 410, 430, 431, 983, 432, 433, 516,
	434, 435, 1160, 436, 437, 438, 439, 411, 440, 444,
	445, 441, 442, 443, 517, 1161, 447, 448, 446, 1162,
	449, 450, 451, 452, 453, 281, 454, 1163, 455, 518,
	519, 520, 521, 1164, 462, 1165, 456, 457, 522, 458,
	523, 1166, 459, 460, 461, 0, 463, 464, 1167, 1168,
	465, 466, 467, 468, 469, 471, 1169, 472, 1170, 470,
	473, 474, 475, 524, 525, 526, 1171, 477, 476, 527,
	1172, 1173, 1174, 1175, 478, 479, 528, 480, 481, 482,
	1091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3204, 0, 220, 221, 222,
	223, 224, 1098, 225, 1099, 1100, 1101, 0, 1102, 483,
	1103, 1104, 1105, 1106, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 1107, 235, 236,
	237, 238, 239, 240, 1108, 1109, 241, 488, 489, 490,
	1110, 242, 491, 1111, 1096, 1112, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 1113, 253, 0,
	254, 255, 256, 1114, 257, 968, 258, 259, 1115, 1116,
	1118, 1117, 1119, 1120, 1121, 260, 261, 262, 263, 264,
	265, 492, 493, 1122, 266, 1123, 268, 267, 1124, 269,
	1125, 1126, 270, 271, 272, 1127, 273, 1128, 274, 275,
	1129, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 1130, 217, 1131, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 1132,
	293, 1133, 1134, 969, 294, 295, 1135, 296, 498, 1136,
	499, 297, 1137, 298, 299, 300, 301, 500, 501, 502,
	354, 971, 302, 303, 1138, 304, 305, 307, 0, 0,
	218, 306, 308, 315, 1139, 970, 309, 503, 311, 310,
	312, 313, 314, 504, 1140, 505, 1141, 316, 972, 506,
	973, 317, 318, 319, 974, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 1142, 328, 327, 1143, 329, 507,
	975, 330, 331, 976, 1144, 332, 333, 1145, 1146, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 977, 347, 348, 351, 350, 978, 349,
	1147, 219, 979, 352, 1148, 508, 353, 509, 355, 356,
	1149, 357, 358, 359, 1150, 1151, 361, 362, 363, 1152,
	1153, 364, 365, 510, 980, 366, 981, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 1154, 375, 376,
	512, 377, 513, 378, 1155, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 1156, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 1157, 402, 982, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	1158, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 1159, 429, 409, 410, 430, 431, 983, 432, 433,
	516, 434, 435, 1160, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 1161, 447, 448, 446,
	1162, 449, 450, 451, 452, 453, 281, 454, 1163, 455,
	518, 519, 520, 521, 1164, 462, 1165, 456, 457, 522,
	458, 523, 1166, 459, 460, 461, 0, 463, 464, 1167,
	1168, 465, 466, 467, 468, 469, 471, 1169, 472, 1170,
	470, 473, 474, 475, 524, 525, 526, 1171, 477, 476,
	527, 1172, 1173, 1174, 1175, 478, 479, 528, 480, 481,
	482, 1091, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2998, 0, 220, 221,
	222, 223, 224, 1098, 225, 1099, 1100, 1101, 0, 1102,
	483, 1103, 1104, 1105, 1106, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 1107, 235,
	236, 237, 238, 239, 240, 1108, 1109, 241, 488, 489,
	490, 1110, 242, 491, 1111, 1096, 1112, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 1113, 253,
	0, 254, 255, 256, 1114, 257, 968, 258, 259, 1115,
	1116, 1118, 1117, 1119, 1120, 1121, 260, 261, 262, 263,
	264, 265, 492, 493, 1122, 266, 1123, 268, 267, 1124,
	269, 1125, 1126, 270, 271, 272, 1127, 273, 1128, 274,
	275, 1129, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 1130, 217, 1131, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	1132, 293, 1133, 1134, 969, 294, 295, 1135, 296, 498,
	1136, 499, 297, 1137, 298, 299, 300, 301, 500, 501,
	502, 354, 971, 302, 303, 1138, 304, 305, 307, 0,
	0, 218, 306, 308, 315, 1139, 970, 309, 503, 311,
	310, 312, 313, 314, 504, 1140, 505, 1141, 316, 972,
	506, 973, 317, 318, 319, 974, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 1142, 328, 327, 1143, 329,
	507, 975, 330, 331, 976, 1144, 332, 333, 1145, 1146,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 977, 347, 348, 351, 350, 978,
	349, 1147, 219, 979, 352, 1148, 508, 353, 509, 355,
	356, 1149, 357, 358, 359, 1150, 1151, 361, 362, 363,
	1152, 1153, 364, 365, 510, 980, 366, 981, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 1154, 375,
	376, 512, 377, 513, 378, 1155, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 1156, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 1157, 402, 982, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 1158, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 1159, 429, 409, 410, 430, 431, 983, 432,
	433, 516, 434, 435, 1160, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 1161, 447, 448,
	446, 1162, 449, 450, 451, 452, 453, 281, 454, 1163,
	455, 518, 519, 520, 521, 1164, 462, 1165, 456, 457,
	522, 458, 523, 1166, 459, 460, 461, 0, 463, 464,
	1167, 1168, 465, 466, 467, 468, 469, 471, 1169, 472,
	1170, 470, 473, 474, 475, 524, 525, 526, 1171, 477,
	476, 527, 1172, 1173, 1174, 1175, 478, 479, 528, 480,
	481, 482, 1091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2849, 0, 220,
	221, 222, 223, 224, 1098, 225, 1099, 1100, 1101, 0,
	1102, 483, 1103, 1104, 1105, 1106, 226, 228, 227, 229,
	230, 484, 485, 231, 486, 234, 232, 233, 487, 1107,
	235, 236, 237, 238, 239, 240, 1108, 1109, 241, 488,
	489, 490, 1110, 242, 491, 1111, 1096, 1112, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 1113,
	253, 0, 254, 255, 256, 1114, 257, 968, 258, 259,
	1115, 1116, 1118, 1117, 1119, 1120, 1121, 260, 261, 262,
	263, 264, 265, 492, 493, 1122, 266, 1123, 268, 267,
	1124, 269, 1125, 1126, 270, 271, 272, 1127, 273, 1128,
	274, 275, 1129, 276, 494, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 495, 496, 1130, 217, 1131, 0,
	0, 0, 0, 287, 288, 289, 497, 290, 291, 0,
	292, 1132, 293, 1133, 1134, 969, 294, 295, 1135, 296,
	498, 1136, 499, 297, 1137, 298, 299, 300, 301, 500,
	501, 502, 354, 971, 302, 303, 1138, 304, 305, 307,
	0, 0, 218, 306, 308, 315, 1139, 970, 309, 503,
	311, 310, 312, 313, 314, 504, 1140, 505, 1141, 316,
	972, 506, 973, 317, 318, 319, 974, 320, 321, 0,
	0, 322, 323, 324, 325, 326, 1142, 328, 327, 1143,
	329, 507, 975, 330, 331, 976, 1144, 332, 333, 1145,
	1146, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 977, 347, 348, 351, 350,
	978, 349, 1147, 219, 979, 352, 1148, 508, 353, 509,
	355, 356, 1149, 357, 358, 359, 1150, 1151, 361, 362,
	363, 1152, 1153, 364, 365, 510, 980, 366, 981, 511,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 1154,
	375, 376, 512, 377, 513, 378, 1155, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 514, 387, 388, 1156,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 1157, 402, 982, 403, 404, 405,
	406, 515, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 1158, 424, 425, 419, 421, 422, 423, 420,
	426, 427, 428, 1159, 429, 409, 410, 430, 431, 983,
	432, 433, 516, 434, 435, 1160, 436, 437, 438, 439,
	411, 440, 444, 445, 441, 442, 443, 517, 1161, 447,
	448, 446, 1162, 449, 450, 451, 452, 453, 281, 454,
	1163, 455, 518, 519, 520, 521, 1164, 462, 1165, 456,
	457, 522, 458, 523, 1166, 459, 460, 461, 0, 463,
	464, 1167, 1168, 465, 466, 467, 468, 469, 471, 1169,
	472, 1170, 470, 473, 474, 475, 524, 525, 526, 1171,
	477, 476, 527, 1172, 1173, 1174, 1175, 478, 479, 528,
	480, 481, 482, 1091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2153, 0,
	220, 221, 222, 223, 224, 1098, 225, 1099, 1100, 1101,
	0, 1102, 483, 1103, 1104, 1105, 1106, 226, 228, 227,
	229, 230, 484, 485, 231, 486, 234, 232, 233, 487,
	1107, 235, 236, 237, 238, 239, 240, 1108, 1109, 241,
	488, 489, 490, 1110, 242, 491, 1111, 1096, 1112, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	1113, 253, 0, 254, 255, 256, 1114, 257, 968, 258,
	259, 1115, 1116, 1118, 1117, 1119, 1120, 1121, 260, 261,
	262, 263, 264, 265, 492, 493, 1122, 266, 1123, 268,
	267, 1124, 269, 1125, 1126, 270, 271, 272, 1127, 273,
	1128, 274, 275, 1129, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 495, 496, 1130, 217, 1131,
	0, 0, 0, 0, 287, 288, 289, 497, 290, 291,
	0, 292, 1132, 293, 1133, 1134, 969, 294, 295, 1135,
	296, 498, 1136, 499, 297, 1137, 298, 299, 300, 301,
	500, 501, 502, 354, 971, 302, 303, 1138, 304, 305,
	307, 0, 0, 218, 306, 308, 315, 1139, 970, 309,
	503, 311, 310, 312, 313, 314, 504, 1140, 505, 1141,
	316, 972, 506, 973, 317, 318, 319, 974, 320, 321,
	0, 0, 322, 323, 324, 325, 326, 1142, 328, 327,
	1143, 329, 507, 975, 330, 331, 976, 1144, 332, 333,
	1145, 1146, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 977, 347, 348, 351,
	350, 978, 349, 1147, 219, 979, 352, 1148, 508, 353,
	509, 355, 356, 1149, 357, 358, 359, 1150, 1151, 361,
	362, 363, 1152, 1153, 364, 365, 510, 980, 366, 981,
	511, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	1154, 375, 376, 512, 377, 513, 378, 1155, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 514, 387, 388,
	1156, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 1157, 402, 982, 403, 404,
	405, 406, 515, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 1158, 424, 425, 419, 421, 422, 423,
	420, 426, 427, 428, 1159, 429, 409, 410, 430, 431,
	983, 432, 433, 516, 434, 435, 1160, 436, 437, 438,
	439, 411, 440, 444, 445, 441, 442, 443, 517, 1161,
	447, 448, 446, 1162, 449, 450, 451, 452, 453, 281,
	454, 1163, 455, 518, 519, 520, 521, 1164, 462, 1165,
	456, 457, 522, 458, 523, 1166, 459, 460, 461, 0,
	463, 464, 1167, 1168, 465, 466, 467, 468, 469, 471,
	1169, 472, 1170, 470, 473, 474, 475, 524, 525, 526,
	1171, 477, 476, 527, 1172, 1173, 1174, 1175, 478, 479,
	528, 480, 481, 482, 1188, 0, 1091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	0, 0, 0, 220, 221, 222, 223, 224, 1098, 225,
	1099, 1100, 1101, 0, 1102, 483, 1103, 1104, 1105, 1106,
	226, 228, 227, 229, 230, 484, 485, 231, 486, 234,
	232, 233, 487, 1107, 235, 236, 237, 238, 239, 240,
	1108, 1109, 241, 488, 489, 490, 1110, 242, 491, 1111,
	1096, 1112, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 1113, 253, 0, 254, 255, 256, 1114,
	257, 968, 258, 259, 1115, 1116, 1118, 1117, 1119, 1120,
	1121, 260, 261, 262, 263, 264, 265, 492, 493, 1122,
	266, 1123, 268, 267, 1124, 269, 1125, 1126, 270, 271,
	272, 1127, 273, 1128, 274, 275, 1129, 276, 494, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 495, 496,
	1130, 217, 1131, 0, 0, 0, 0, 287, 288, 289,
	497, 290, 291, 0, 292, 1132, 293, 1133, 1134, 969,
	294, 295, 1135, 296, 498, 1136, 499, 297, 1137, 298,
	299, 300, 301, 500, 501, 502, 354, 971, 302, 303,
	1138, 304, 305, 307, 0, 0, 218, 306, 308, 315,
	1139, 970, 309, 503, 311, 310, 312, 313, 314, 504,
	1140, 505, 1141, 316, 972, 506, 973, 317, 318, 319,
	974, 320, 321, 0, 0, 322, 323, 324, 325, 326,
	1142, 328, 327, 1143, 329, 507, 975, 330, 331, 976,
	1144, 332, 333, 1145, 1146, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 977,
	347, 348, 351, 350, 978, 349, 1147, 219, 979, 352,
	1148, 508, 353, 509, 355, 356, 1149, 357, 358, 359,
	1150, 1151, 361, 362, 363, 1152, 1153, 364, 365, 510,
	980, 366, 981, 511, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 1154, 375, 376, 512, 377, 513, 378,
	1155, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	514, 387, 388, 1156, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 1157, 402,
	982, 403, 404, 405, 406, 515, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 1158, 424, 425, 419,
	421, 422, 423, 420, 426, 427, 428, 1159, 429, 409,
	410, 430, 431, 983, 432, 433, 516, 434, 435, 1160,
	436, 437, 438, 439, 411, 440, 444, 445, 441, 442,
	443, 517, 1161, 447, 448, 446, 1162, 449, 450, 451,
	452, 453, 281, 454, 1163, 455, 518, 519, 520, 521,
	1164, 462, 1165, 456, 457, 522, 458, 523, 1166, 459,
	460, 461, 0, 463, 464, 1167, 1168, 465, 466, 467,
	468, 469, 471, 1169, 472, 1170, 470, 473, 474, 475,
	524, 525, 526, 1171, 477, 476, 527, 1172, 1173, 1174,
	1175, 478, 479, 528, 480, 481, 482, 1088, 0, 1091,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 1098, 225, 1099, 1100, 1101, 0, 1102, 483, 1103,
	1104, 1105, 1106, 226, 228, 227, 229, 230, 484, 485,
	231, 486, 234, 232, 233, 487, 1107, 235, 236, 237,
	238, 239, 240, 1108, 1109, 241, 488, 489, 490, 1110,
	242, 491, 1111, 1096, 1112, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 1113, 253, 0, 254,
	255, 256, 1114, 257, 968, 258, 259, 1115, 1116, 1118,
	1117, 1119, 1120, 1121, 260, 261, 262, 263, 264, 265,
	492, 493, 1122, 266, 1123, 268, 267, 1124, 269, 1125,
	1126, 270, 271, 272, 1127, 273, 1128, 274, 275, 1129,
	276, 494, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 495, 496, 1130, 217, 1131, 0, 0, 0, 0,
	287, 288, 289, 497, 290, 291, 0, 292, 1132, 293,
	1133, 1134, 969, 294, 295, 1135, 296, 498, 1136, 499,
	297, 1137, 298, 299, 300, 301, 500, 501, 502, 354,
	971, 302, 303, 1138, 304, 305, 307, 0, 0, 218,
	306, 308, 315, 1139, 970, 309, 503, 311, 310, 312,
	313, 314, 504, 1140, 505, 1141, 316, 972, 506, 973,
	317, 318, 319, 974, 320, 321, 0, 0, 322, 323,
	324, 325, 326, 1142, 328, 327, 1143, 329, 507, 975,
	330, 331, 976, 1144, 332, 333, 1145, 1146, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 977, 347, 348, 351, 350, 978, 349, 1147,
	219, 979, 352, 1148, 508, 353, 509, 355, 356, 1149,
	357, 358, 359, 1150, 1151, 361, 362, 363, 1152, 1153,
	364, 365, 510, 980, 366, 981, 511, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 1154, 375, 376, 512,
	377, 513, 378, 1155, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 514, 387, 388, 1156, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 1157, 402, 982, 403, 404, 405, 406, 515, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 1158,
	424, 425, 419, 421, 422, 423, 420, 426, 427, 428,
	1159, 429, 409, 410, 430, 431, 983, 432, 433, 516,
	434, 435, 1160, 436, 437, 438, 439, 411, 440, 444,
	445, 441, 442, 443, 517, 1161, 447, 448, 446, 1162,
	449, 450, 451, 452, 453, 281, 454, 1163, 455, 518,
	519, 520, 521, 1164, 462, 1165, 456, 457, 522, 458,
	523, 1166, 459, 460, 461, 0, 463, 464, 1167, 1168,
	465, 466, 467, 468, 469, 471, 1169, 472, 1170, 470,
	473, 474, 475, 524, 525, 526, 1171, 477, 476, 527,
	1172, 1173, 1174, 1175, 478, 479, 528, 480, 481, 482,
	1091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 1098, 225, 1099, 1100, 1101, 0, 1102, 483,
	1103, 1104, 1105, 1106, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 1107, 235, 236,
	237, 238, 239, 240, 1108, 1109, 241, 488, 489, 490,
	1110, 242, 491, 1111, 1096, 1112, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 1113, 253, 0,
	254, 255, 256, 1114, 257, 968, 258, 259, 1115, 1116,
	1118, 1117, 1119, 1120, 1121, 260, 261, 262, 263, 264,
	265, 492, 493, 1122, 266, 1123, 268, 267, 1124, 269,
	1125, 1126, 270, 271, 272, 1127, 273, 1128, 274, 275,
	1129, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 1130, 217, 1131, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 1132,
	293, 1133, 1134, 969, 294, 295, 1135, 296, 498, 1136,
	499, 297, 1137, 298, 299, 300, 301, 500, 501, 502,
	354, 971, 302, 303, 1138, 304, 305, 307, 0, 0,
	218, 306, 308, 315, 1139, 970, 309, 503, 311, 310,
	312, 313, 314, 504, 1140, 505, 1141, 316, 972, 506,
	973, 317, 318, 319, 974, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 1142, 328, 327, 1143, 329, 507,
	975, 330, 331, 976, 1144, 332, 333, 1145, 1146, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 977, 347, 348, 351, 350, 978, 349,
	1147, 219, 979, 352, 1148, 508, 353, 509, 355, 356,
	1149, 357, 358, 359, 1150, 1151, 361, 362, 363, 1152,
	1153, 364, 365, 510, 980, 366, 981, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 1154, 375, 376,
	512, 377, 513, 378, 1155, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 1156, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 1157, 402, 982, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	1158, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 1159, 429, 409, 410, 430, 431, 983, 432, 433,
	516, 434, 435, 1160, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 1161, 447, 448, 446,
	1162, 449, 450, 451, 452, 453, 281, 454, 1163, 455,
	518, 519, 520, 521, 1164, 462, 1165, 456, 457, 522,
	458, 523, 1166, 459, 460, 461, 0, 463, 464, 1167,
	1168, 465, 466, 467, 468, 469, 471, 1169, 472, 1170,
	470, 473, 474, 475, 524, 525, 526, 1171, 477, 476,
	527, 1172, 1173, 1174, 1175, 478, 479, 528, 480, 481,
	482, 2128, 0, 908, 866, 867, 868, 864, 865, 877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 2125, 225, 0, 0, 0,
	0, 0, 959, 882, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 923, 902, 934, 234, 892, 933, 932,
	0, 235, 894, 893, 238, 239, 240, 884, 958, 241,
	995, 996, 490, 0, 242, 965, 0, 946, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 968, 258,
	259, 949, 947, 948, 955, 951, 950, 954, 260, 261,
	262, 263, 937, 265, 930, 929, 855, 266, 0, 268,
	267, 0, 269, 2126, 0, 270, 928, 272, 0, 273,
	0, 274, 275, 0, 276, 861, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 986, 987, 873, 217, 0,
	0, 0, 0, 0, 287, 288, 289, 927, 925, 926,
	0, 292, 0, 293, 0, 0, 969, 294, 295, 0,
	296, 993, 0, 883, 297, 0, 298, 299, 300, 301,
	960, 961, 964, 354, 971, 302, 303, 0, 304, 305,
	904, 0, 0, 218, 306, 308, 315, 0, 970, 309,
	916, 907, 918, 920, 921, 922, 917, 0, 909, 0,
	316, 972, 962, 973, 317, 318, 319, 974, 942, 943,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 994, 975, 330, 331, 976, 0, 332, 333,
	953, 952, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 896, 344, 977, 347, 348, 351,
	350, 978, 349, 852, 219, 979, 352, 874, 963, 353,
	931, 355, 356, 0, 905, 358, 906, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 980, 366, 981,
	988, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 989, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 924, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 982, 403, 404,
	405, 406, 862, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 897, 898, 900, 901,
	420, 426, 427, 428, 956, 429, 409, 410, 430, 431,
	983, 432, 433, 919, 899, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 967, 441, 442, 443, 990, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	895, 0, 455, 938, 939, 940, 941, 0, 462, 0,
	456, 457, 991, 458, 992, 872, 459, 460, 461, 0,
	463, 464, 0, 856, 465, 466, 467, 468, 469, 471,
	957, 472, 0, 903, 473, 474, 475, 524, 935, 985,
	2124, 477, 476, 527, 0, 0, 0, 0, 478, 479,
	528, 480, 481, 482, 853, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 0, 0, 0, 849, 850, 2127,
	0, 0, 0, 0, 0, 0, 878, 2123, 0, 842,
	876, 908, 866, 867, 868, 864, 865, 877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	959, 882, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 923, 902, 934, 234, 892, 933, 932, 0, 235,
	894, 893, 238, 239, 240, 884, 958, 241, 995, 996,
	490, 0, 242, 965, 0, 946, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 968, 258, 259, 949,
	947, 948, 955, 951, 950, 954, 260, 261, 262, 263,
	937, 265, 930, 929, 855, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 928, 272, 0, 273, 0, 274,
	275, 0, 276, 861, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 986, 987, 873, 217, 0, 0, 0,
	0, 0, 287, 288, 289, 927, 925, 926, 0, 292,
	0, 293, 0, 0, 969, 294, 295, 0, 296, 993,
	0, 883, 297, 0, 298, 299, 300, 301, 960, 961,
	964, 354, 971, 302, 303, 0, 304, 305, 904, 0,
	0, 218, 306, 308, 315, 0, 970, 309, 916, 907,
	918, 920, 921, 922, 917, 0, 909, 0, 316, 972,
	962, 973, 317, 318, 319, 974, 942, 943, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	994, 975, 330, 331, 976, 0, 332, 333, 953, 952,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 896, 344, 977, 347, 348, 351, 350, 978,
	349, 852, 219, 979, 352, 874, 963, 353, 931, 355,
	356, 0, 905, 358, 906, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 980, 366, 981, 988, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 989, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 924, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 982, 403, 404, 405, 406,
	862, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 183, 424, 425, 897, 898, 900, 901, 420, 426,
	427, 428, 956, 429, 409, 410, 430, 431, 983, 432,
	433, 919, 899, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 967, 441, 442, 443, 990, 0, 447, 448,
	446, 185, 449, 450, 451, 452, 453, 281, 895, 0,
	455, 938, 939, 940, 941, 0, 462, 0, 456, 457,
	991, 458, 992, 872, 459, 460, 461, 0, 463, 464,
	0, 856, 465, 466, 467, 468, 469, 471, 957, 472,
	0, 903, 473, 474, 475, 1346, 935, 985, 0, 477,
	476, 527, 0, 0, 0, 177, 478, 479, 528, 480,
	481, 482, 853, 178, 0, 0, 0, 0, 851, 0,
	0, 0, 0, 0, 0, 849, 850, 908, 866, 867,
	868, 864, 865, 877, 1557, 1555, 0, 0, 876, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 959, 882, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 923, 902, 934,
	234, 892, 933, 932, 0, 235, 894, 893, 238, 239,
	240, 884, 958, 241, 995, 996, 490, 0, 242, 965,
	0, 946, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 968, 258, 259, 949, 947, 948, 955, 951,
	950, 954, 260, 261, 262, 263, 937, 265, 930, 929,
	855, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	928, 272, 0, 273, 0, 274, 275, 0, 276, 861,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 986,
	987, 873, 217, 0, 0, 0, 0, 0, 287, 288,
	289, 927, 925, 926, 0, 292, 0, 293, 0, 0,
	969, 294, 295, 0, 296, 993, 0, 883, 297, 0,
	298, 299, 300, 301, 960, 961, 964, 354, 971, 302,
	303, 0, 304, 305, 904, 0, 0, 218, 306, 308,
	315, 0, 970, 309, 916, 907, 918, 920, 921, 922,
	917, 0, 909, 0, 316, 972, 962, 973, 317, 318,
	319, 974, 942, 943, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 994, 975, 330, 331,
	976, 0, 332, 333, 953, 952, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 896, 344,
	977, 347, 348, 351, 350, 978, 349, 852, 219, 979,
	352, 874, 963, 353, 931, 355, 356, 0, 905, 358,
	906, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 980, 366, 981, 988, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 989, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 924, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 982, 403, 404, 405, 406, 862, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 183, 424, 425,
	897, 898, 900, 901, 420, 426, 427, 428, 956, 429,
	409, 410, 430, 431, 983, 432, 433, 919, 899, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 967, 441,
	442, 443, 990, 0, 447, 448, 446, 185, 449, 450,
	451, 452, 453, 281, 895, 0, 455, 938, 939, 940,
	941, 0, 462, 0, 456, 457, 991, 458, 992, 872,
	459, 460, 461, 0, 463, 464, 0, 856, 465, 466,
	467, 468, 469, 471, 957, 472, 0, 903, 473, 474,
	475, 1346, 935, 985, 0, 477, 476, 527, 0, 0,
	0, 177, 478, 479, 528, 480, 481, 482, 853, 178,
	0, 0, 0, 0, 851, 0, 0, 0, 0, 0,
	0, 849, 850, 908, 866, 867, 868, 864, 865, 877,
	1557, 2596, 0, 0, 876, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 959, 882, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 923, 902, 934, 234, 892, 933, 932,
	0, 235, 894, 893, 238, 239, 240, 884, 958, 241,
	995, 996, 490, 0, 242, 965, 0, 946, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 968, 258,
	259, 949, 947, 948, 955, 951, 950, 954, 260, 261,
	262, 263, 937, 265, 930, 929, 855, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 928, 272, 0, 273,
	0, 274, 275, 0, 276, 861, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 986, 987, 873, 217, 0,
	0, 0, 0, 0, 287, 288, 289, 927, 925, 926,
	0, 292, 0, 293, 0, 0, 969, 294, 295, 0,
	296, 993, 0, 883, 297, 0, 298, 299, 300, 301,
	960, 961, 964, 354, 971, 302, 303, 0, 304, 305,
	904, 0, 0, 218, 306, 308, 315, 0, 970, 309,
	916, 907, 918, 920, 921, 922, 917, 0, 909, 0,
	316, 972, 962, 973, 317, 318, 319, 974, 942, 943,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 994, 975, 330, 331, 976, 0, 332, 333,
	953, 952, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 896, 344, 977, 347, 348, 351,
	350, 978, 349, 852, 219, 979, 352, 874, 963, 353,
	931, 355, 356, 0, 905, 358, 906, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 980, 366, 981,
	988, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 989, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 924, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 982, 403, 404,
	405, 406, 862, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 183, 424, 425, 897, 898, 900, 901,
	420, 426, 427, 428, 956, 429, 409, 410, 430, 431,
	983, 432, 433, 919, 899, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 967, 441, 442, 443, 990, 0,
	447, 448, 446, 185, 449, 450, 451, 452, 453, 281,
	895, 0, 455, 938, 939, 940, 941, 0, 462, 0,
	456, 457, 991, 458, 992, 872, 459, 460, 461, 0,
	463, 464, 0, 856, 465, 466, 467, 468, 469, 471,
	957, 472, 0, 903, 473, 474, 475, 1346, 935, 985,
	0, 477, 476, 527, 0, 0, 0, 177, 478, 479,
	528, 480, 481, 482, 853, 178, 0, 0, 0, 0,
	851, 0, 0, 0, 0, 0, 0, 849, 850, 908,
	866, 867, 868, 864, 865, 877, 1557, 1555, 0, 0,
	876, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 959, 882,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 923,
	902, 934, 234, 892, 933, 932, 2222, 235, 894, 893,
	238, 239, 240, 884, 958, 241, 995, 996, 490, 0,
	242, 965, 0, 946, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 968, 258, 259, 949, 947, 948,
	955, 951, 950, 954, 260, 261, 262, 263, 937, 265,
	930, 929, 855, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 928, 272, 0, 273, 0, 274, 275, 0,
	276, 861, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 986, 987, 873, 217, 0, 0, 0, 0, 0,
	287, 288, 289, 927, 925, 926, 0, 292, 0, 293,
	0, 2227, 969, 294, 295, 0, 296, 993, 0, 883,
	297, 0, 298, 299, 300, 301, 960, 961, 964, 354,
	971, 302, 303, 0, 304, 305, 904, 0, 0, 218,
	306, 308, 315, 0, 970, 309, 916, 907, 918, 920,
	921, 922, 917, 0, 909, 0, 316, 972, 962, 973,
	317, 318, 319, 974, 942, 943, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 2223, 329, 994, 975,
	330, 331, 976, 0, 332, 333, 953, 952, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	896, 344, 977, 347, 348, 351, 350, 978, 349, 852,
	219, 979, 352, 874, 963, 353, 931, 355, 356, 0,
	905, 358, 906, 0, 0, 361, 362, 363, 0, 0,
	364, 365, 510, 980, 366, 981, 988, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 989,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 924, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 982, 403, 404, 405, 406, 862, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 897, 898, 900, 901, 420, 426, 427, 428,
	956, 429, 409, 410, 430, 431, 983, 432, 433, 919,
	899, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	967, 441, 442, 443, 990, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 895, 0, 455, 938,
	939, 940, 941, 0, 462, 2224, 456, 457, 991, 458,
	992, 872, 459, 460, 461, 0, 463, 464, 0, 856,
	465, 466, 467, 468, 469, 471, 957, 472, 0, 903,
	473, 474, 475, 524, 935, 985, 0, 477, 476, 527,
	0, 0, 0, 0, 478, 479, 528, 480, 481, 482,
	853, 0, 0, 0, 0, 0, 851, 0, 0, 0,
	0, 0, 0, 849, 850, 0, 0, 0, 0, 0,
	0, 0, 878, 0, 0, 2181, 876, 908, 866, 867,
	868, 864, 865, 877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 959, 882, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 923, 902, 934,
	234, 892, 933, 932, 0, 235, 894, 893, 238, 239,
	240, 884, 958, 241, 995, 996, 490, 0, 242, 965,
	0, 946, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 968, 258, 259, 949, 947, 948, 955, 951,
	950, 954, 260, 261, 262, 263, 937, 265, 930, 929,
	855, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	928, 272, 0, 273, 0, 274, 275, 0, 276, 861,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 986,
	987, 873, 217, 0, 0, 0, 0, 0, 287, 288,
	289, 927, 925, 926, 0, 292, 0, 293, 0, 0,
	969, 294, 295, 0, 296, 993, 0, 883, 297, 0,
	298, 299, 300, 301, 960, 961, 964, 354, 971, 302,
	303, 0, 304, 305, 904, 0, 0, 218, 306, 308,
	315, 0, 970, 309, 916, 907, 918, 920, 921, 922,
	917, 0, 909, 0, 316, 972, 962, 973, 317, 318,
	319, 974, 942, 943, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 994, 975, 330, 331,
	976, 0, 332, 333, 953, 952, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 896, 344,
	977, 347, 348, 351, 350, 978, 349, 852, 219, 979,
	352, 874, 963, 353, 931, 355, 356, 0, 905, 358,
	906, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 980, 366, 981, 988, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 989, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 924, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 982, 403, 404, 405, 406, 862, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	897, 898, 900, 901, 420, 426, 427, 428, 956, 429,
	409, 410, 430, 431, 983, 432, 433, 919, 899, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 967, 441,
	442, 443, 990, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 895, 0, 455, 938, 939, 940,
	941, 0, 462, 0, 456, 457, 991, 458, 992, 872,
	459, 460, 461, 0, 463, 464, 0, 856, 465, 466,
	467, 468, 469, 471, 957, 472, 0, 903, 473, 474,
	475, 524, 935, 985, 0, 477, 476, 527, 0, 0,
	0, 0, 478, 479, 528, 480, 481, 482, 853, 0,
	0, 0, 0, 0, 851, 0, 0, 0, 0, 0,
	0, 849, 850, 0, 0, 0, 0, 0, 0, 0,
	878, 2179, 0, 2178, 876, 908, 866, 867, 868, 864,
	865, 877, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 959, 882, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 923, 902, 934, 234, 892,
	933, 932, 0, 235, 894, 893, 238, 239, 240, 884,
	958, 241, 995, 996, 490, 0, 242, 965, 0, 946,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	968, 258, 259, 949, 947, 948, 955, 951, 950, 954,
	260, 261, 262, 263, 937, 265, 930, 929, 855, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 928, 272,
	0, 273, 0, 274, 275, 0, 276, 861, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 986, 987, 873,
	217, 0, 0, 0, 0, 0, 287, 288, 289, 927,
	925, 926, 0, 292, 0, 293, 0, 0, 969, 294,
	295, 0, 296, 993, 0, 883, 297, 0, 298, 299,
	300, 301, 960, 961, 964, 354, 971, 302, 303, 0,
	304, 305, 904, 0, 0, 218, 306, 308, 315, 0,
	970, 309, 916, 907, 918, 920, 921, 922, 917, 0,
	909, 0, 316, 972, 962, 973, 317, 318, 319, 974,
	942, 943, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 994, 975, 330, 331, 976, 0,
	332, 333, 953, 952, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 896, 344, 977, 347,
	348, 351, 350, 978, 349, 852, 219, 979, 352, 874,
	963, 353, 931, 355, 356, 0, 905, 358, 906, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 980,
	366, 981, 988, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 989, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 924,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 982,
	403, 404, 405, 406, 862, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 0, 424, 425, 897, 898,
	900, 901, 420, 426, 427, 428, 956, 429, 409, 410,
	430, 431, 983, 432, 433, 919, 899, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 967, 441, 442, 443,
	990, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 895, 0, 455, 938, 939, 940, 941, 0,
	462, 0, 456, 457, 991, 458, 992, 872, 459, 460,
	461, 0, 463, 464, 0, 856, 465, 466, 467, 468,
	469, 471, 957, 472, 0, 903, 473, 474, 475, 524,
	935, 985, 0, 477, 476, 527, 0, 0, 0, 0,
	478, 479, 528, 480, 481, 482, 853, 0, 0, 0,
	0, 0, 851, 0, 0, 0, 0, 0, 0, 849,
	850, 0, 0, 0, 0, 0, 0, 0, 878, 2176,
	0, 2175, 876, 908, 866, 867, 868, 864, 865, 877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 959, 882, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 923, 902, 934, 234, 892, 933, 932,
	0, 235, 894, 893, 238, 239, 240, 884, 958, 241,
	995, 996, 490, 0, 242, 965, 0, 946, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 968, 258,
	259, 949, 947, 948, 955, 951, 950, 954, 260, 261,
	262, 263, 937, 265, 930, 929, 855, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 928, 272, 0, 273,
	0, 274, 275, 0, 276, 861, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 986, 987, 873, 217, 0,
	0, 0, 0, 0, 287, 288, 289, 927, 925, 926,
	0, 292, 0, 293, 0, 0, 969, 294, 295, 0,
	296, 993, 0, 883, 297, 0, 298, 299, 300, 301,
	960, 961, 964, 354, 971, 302, 303, 0, 304, 305,
	904, 0, 0, 218, 306, 308, 315, 0, 970, 309,
	916, 907, 918, 920, 921, 922, 917, 0, 909, 0,
	316, 972, 962, 973, 317, 318, 319, 974, 942, 943,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 994, 975, 330, 331, 976, 0, 332, 333,
	953, 952, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 896, 344, 977, 347, 348, 351,
	350, 978, 349, 852, 219, 979, 352, 874, 963, 353,
	931, 355, 356, 0, 905, 358, 906, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 980, 366, 981,
	988, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 989, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 924, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 982, 403, 404,
	405, 406, 862, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 897, 898, 900, 901,
	420, 426, 427, 428, 956, 429, 409, 410, 430, 431,
	983, 432, 433, 919, 899, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 967, 441, 442, 443, 990, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	895, 0, 455, 938, 939, 940, 941, 0, 462, 0,
	456, 457, 991, 458, 992, 872, 459, 460, 461, 0,
	463, 464, 0, 856, 465, 466, 467, 468, 469, 471,
	957, 472, 0, 903, 473, 474, 475, 524, 935, 985,
	0, 477, 476, 527, 0, 0, 0, 0, 478, 479,
	528, 480, 481, 482, 853, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 0, 0, 0, 849, 850, 0,
	0, 0, 0, 0, 0, 0, 878, 2173, 0, 2172,
	876, 908, 866, 867, 868, 864, 865, 877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	959, 882, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 923, 902, 934, 234, 892, 933, 932, 0, 235,
	894, 893, 238, 239, 240, 884, 958, 241, 995, 996,
	490, 0, 242, 965, 0, 946, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 968, 258, 259, 949,
	947, 948, 955, 951, 950, 954, 260, 261, 262, 263,
	937, 265, 930, 929, 855, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 928, 272, 0, 273, 0, 274,
	275, 0, 276, 861, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 986, 987, 873, 217, 0, 0, 0,
	0, 0, 287, 288, 289, 927, 925, 926, 0, 292,
	0, 293, 0, 0, 969, 294, 295, 0, 296, 993,
	0, 883, 297, 0, 298, 299, 300, 301, 960, 961,
	964, 354, 971, 302, 303, 0, 304, 305, 904, 0,
	0, 218, 306, 308, 315, 0, 970, 309, 916, 907,
	918, 920, 921, 922, 917, 0, 909, 0, 316, 972,
	962, 973, 317, 318, 319, 974, 942, 943, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	994, 975, 330, 331, 976, 0, 332, 333, 953, 952,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 896, 344, 977, 347, 348, 351, 350, 978,
	349, 852, 219, 979, 352, 874, 963, 353, 931, 355,
	356, 0, 905, 358, 906, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 980, 366, 981, 988, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 989, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 924, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 982, 403, 404, 405, 406,
	862, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 897, 898, 900, 901, 420, 426,
	427, 428, 956, 429, 409, 410, 430, 431, 983, 432,
	433, 919, 899, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 967, 441, 442, 443, 990, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 895, 0,
	455, 938, 939, 940, 941, 0, 462, 0, 456, 457,
	991, 458, 992, 872, 459, 460, 461, 0, 463, 464,
	0, 856, 465, 466, 467, 468, 469, 471, 957, 472,
	0, 903, 473, 474, 475, 524, 935, 985, 0, 477,
	476, 527, 0, 0, 0, 0, 478, 479, 528, 480,
	481, 482, 853, 0, 0, 0, 0, 0, 851, 0,
	0, 0, 0, 0, 0, 849, 850, 0, 0, 0,
	0, 0, 0, 0, 878, 2170, 0, 1415, 876, 908,
	866, 867, 868, 864, 865, 877, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 959, 882,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 923,
	902, 934, 234, 892, 933, 932, 0, 235, 894, 893,
	238, 239, 240, 884, 958, 241, 995, 996, 490, 0,
	242, 965, 0, 946, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 968, 258, 259, 949, 947, 948,
	955, 951, 950, 954, 260, 261, 262, 263, 937, 265,
	930, 929, 855, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 928, 272, 0, 273, 0, 274, 275, 0,
	276, 861, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 986, 987, 873, 217, 0, 0, 0, 0, 0,
	287, 288, 289, 927, 925, 926, 0, 292, 0, 293,
	0, 0, 969, 294, 295, 0, 296, 993, 0, 883,
	297, 0, 298, 299, 300, 301, 960, 961, 964, 354,
	971, 302, 303, 0, 304, 305, 904, 0, 0, 218,
	306, 308, 315, 0, 970, 309, 916, 907, 918, 920,
	921, 922, 917, 0, 909, 0, 316, 972, 962, 973,
	317, 318, 319, 974, 942, 943, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 994, 975,
	330, 331, 976, 0, 332, 333, 953, 952, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	896, 344, 977, 347, 348, 351, 350, 978, 349, 852,
	219, 979, 352, 874, 963, 353, 931, 355, 356, 0,
	905, 358, 906, 0, 0, 361, 362, 363, 0, 0,
	364, 365, 510, 980, 366, 981, 988, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 989,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 924, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 982, 403, 404, 405, 406, 862, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 897, 898, 900, 901, 420, 426, 427, 428,
	956, 429, 409, 410, 430, 431, 983, 432, 433, 919,
	899, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	967, 441, 442, 443, 990, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 895, 0, 455, 938,
	939, 940, 941, 0, 462, 0, 456, 457, 991, 458,
	992, 872, 459, 460, 461, 0, 463, 464, 0, 856,
	465, 466, 467, 468, 469, 471, 957, 472, 0, 903,
	473, 474, 475, 524, 935, 985, 0, 477, 476, 527,
	1414, 0, 0, 0, 478, 479, 528, 480, 481, 482,
	853, 0, 0, 0, 0, 0, 851, 0, 0, 0,
	0, 0, 0, 849, 850, 0, 0, 0, 0, 0,
	0, 0, 878, 0, 0, 845, 876, 908, 866, 867,
	868, 864, 865, 877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 959, 882, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 923, 902, 934,
	234, 892, 933, 932, 0, 235, 894, 893, 238, 239,
	240, 884, 958, 241, 995, 996, 490, 0, 242, 965,
	0, 946, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 968, 258, 259, 949, 947, 948, 955, 951,
	950, 954, 260, 261, 262, 263, 937, 265, 930, 929,
	855, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	928, 272, 0, 273, 0, 274, 275, 0, 276, 861,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 986,
	987, 873, 217, 0, 0, 0, 0, 0, 287, 288,
	289, 927, 925, 926, 0, 292, 0, 293, 0, 0,
	969, 294, 295, 0, 296, 993, 0, 883, 297, 0,
	298, 299, 300, 301, 960, 961, 964, 354, 971, 302,
	303, 0, 304, 305, 904, 0, 0, 218, 306, 308,
	315, 0, 970, 309, 916, 907, 918, 920, 921, 922,
	917, 0, 909, 0, 316, 972, 962, 973, 317, 318,
	319, 974, 942, 943, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 994, 975, 330, 331,
	976, 0, 332, 333, 953, 952, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 896, 344,
	977, 347, 348, 351, 350, 978, 349, 852, 219, 979,
	352, 874, 963, 353, 931, 355, 356, 0, 905, 358,
	906, 857, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 980, 366, 981, 988, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 989, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 924, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 982, 403, 404, 405, 406, 862, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	897, 898, 900, 901, 420, 426, 427, 428, 956, 429,
	409, 410, 430, 431, 983, 432, 433, 919, 899, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 967, 441,
	442, 443, 990, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 895, 0, 455, 938, 939, 940,
	941, 0, 462, 0, 456, 457, 991, 458, 992, 872,
	459, 460, 461, 0, 463, 464, 0, 856, 465, 466,
	467, 468, 469, 471, 957, 472, 0, 903, 473, 474,
	475, 524, 935, 985, 0, 477, 476, 527, 0, 0,
	0, 0, 478, 479, 528, 480, 481, 482, 853, 0,
	0, 0, 0, 0, 851, 0, 0, 0, 0, 0,
	0, 849, 850, 908, 866, 867, 868, 864, 865, 877,
	878, 0, 0, 0, 876, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 959, 882, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 923, 902, 934, 234, 892, 933, 932,
	0, 235, 894, 893, 238, 239, 240, 884, 958, 241,
	995, 996, 490, 0, 242, 965, 0, 946, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 3620, 256, 0, 257, 968, 258,
	259, 949, 947, 948, 955, 951, 950, 954, 260, 261,
	262, 263, 937, 265, 930, 929, 855, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 928, 272, 0, 273,
	0, 274, 275, 0, 276, 861, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 986, 987, 873, 217, 0,
	0, 0, 0, 0, 287, 288, 289, 927, 925, 926,
	0, 292, 0, 293, 0, 0, 969, 294, 295, 0,
	296, 993, 0, 883, 297, 0, 298, 299, 300, 301,
	960, 961, 964, 354, 971, 302, 303, 0, 304, 305,
	904, 0, 0, 218, 306, 308, 315, 0, 970, 309,
	916, 907, 918, 920, 921, 922, 917, 0, 909, 0,
	316, 972, 962, 973, 317, 318, 319, 974, 942, 943,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 994, 975, 330, 331, 976, 0, 332, 333,
	953, 952, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 896, 344, 977, 347, 348, 351,
	350, 978, 349, 852, 219, 979, 352, 874, 963, 353,
	931, 355, 356, 0, 905, 358, 906, 857, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 980, 366, 981,
	988, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 989, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 924, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 982, 403, 404,
	405, 406, 862, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 897, 898, 900, 901,
	420, 426, 427, 428, 956, 429, 409, 410, 430, 431,
	983, 432, 433, 919, 899, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 967, 441, 442, 443, 990, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	895, 0, 455, 938, 939, 940, 941, 0, 462, 0,
	456, 457, 991, 458, 992, 872, 459, 460, 461, 0,
	463, 464, 0, 856, 465, 466, 467, 468, 469, 471,
	957, 472, 0, 903, 473, 474, 475, 524, 935, 985,
	0, 477, 476, 527, 0, 0, 0, 0, 478, 479,
	528, 480, 481, 482, 853, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 0, 0, 0, 849, 850, 908,
	866, 867, 868, 864, 865, 877, 878, 0, 0, 0,
	876, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 959, 882,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 923,
	902, 934, 234, 892, 933, 932, 0, 235, 894, 893,
	238, 239, 240, 884, 958, 241, 995, 996, 490, 0,
	242, 965, 0, 946, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	3456, 256, 0, 257, 968, 258, 259, 949, 947, 948,
	955, 951, 950, 954, 260, 261, 262, 263, 937, 265,
	930, 929, 855, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 928, 272, 0, 273, 0, 274, 275, 0,
	276, 861, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 986, 987, 873, 217, 0, 0, 0, 0, 0,
	287, 288, 289, 927, 925, 926, 0, 292, 0, 293,
	0, 0, 969, 294, 295, 0, 296, 993, 0, 883,
	297, 0, 298, 299, 300, 301, 960, 961, 964, 354,
	971, 302, 303, 0, 304, 305, 904, 0, 0, 218,
	306, 308, 315, 0, 970, 309, 916, 907, 918, 920,
	921, 922, 917, 0, 909, 0, 316, 972, 962, 973,
	317, 318, 319, 974, 942, 943, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 994, 975,
	330, 331, 976, 0, 332, 333, 953, 952, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	896, 344, 977, 347, 348, 351, 350, 978, 349, 852,
	219, 979, 352, 874, 963, 353, 931, 355, 356, 0,
	905, 358, 906, 857, 0, 361, 362, 363, 0, 0,
	364, 365, 510, 980, 366, 981, 988, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 989,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 924, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 982, 403, 404, 405, 406, 862, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 897, 898, 900, 901, 420, 426, 427, 428,
	956, 429, 409, 410, 430, 431, 983, 432, 433, 919,
	899, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	967, 441, 442, 443, 990, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 895, 0, 455, 938,
	939, 940, 941, 0, 462, 0, 456, 457, 991, 458,
	992, 872, 459, 460, 461, 0, 463, 464, 0, 856,
	465, 466, 467, 468, 469, 471, 957, 472, 0, 903,
	473, 474, 475, 524, 935, 985, 0, 477, 476, 527,
	0, 0, 0, 0, 478, 479, 528, 480, 481, 482,
	853, 0, 0, 0, 0, 0, 851, 0, 0, 0,
	0, 0, 0, 849, 850, 908, 866, 867, 868, 864,
	865, 877, 878, 0, 0, 0, 876, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 959, 882, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 923, 902, 934, 234, 892,
	933, 932, 0, 235, 894, 893, 238, 239, 240, 884,
	958, 241, 995, 996, 490, 0, 242, 965, 0, 946,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	968, 258, 259, 949, 947, 948, 955, 951, 950, 954,
	260, 261, 262, 263, 937, 265, 930, 929, 855, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 928, 272,
	0, 273, 0, 274, 275, 0, 276, 861, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 986, 987, 873,
	217, 0, 0, 0, 0, 0, 287, 288, 289, 927,
	925, 926, 0, 292, 0, 293, 0, 0, 969, 294,
	295, 0, 296, 993, 0, 883, 297, 0, 298, 299,
	300, 301, 960, 961, 964, 354, 971, 302, 303, 0,
	304, 305, 904, 0, 0, 218, 306, 308, 315, 0,
	970, 309, 916, 907, 918, 920, 921, 922, 917, 0,
	909, 0, 316, 972, 962, 973, 317, 318, 319, 974,
	942, 943, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 994, 975, 330, 331, 976, 0,
	332, 333, 953, 952, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 896, 344, 977, 347,
	348, 351, 350, 978, 349, 852, 3174, 979, 352, 874,
	963, 353, 931, 355, 356, 0, 905, 358, 906, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 980,
	366, 981, 988, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 989, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 924,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 982,
	403, 404, 405, 406, 862, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 0, 424, 425, 897, 898,
	900, 901, 420, 426, 427, 428, 956, 429, 409, 410,
	430, 431, 983, 432, 433, 919, 899, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 967, 441, 442, 443,
	990, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 895, 0, 455, 938, 939, 940, 941, 0,
	462, 0, 456, 457, 991, 458, 992, 872, 459, 460,
	461, 0, 463, 464, 0, 856, 465, 466, 467, 468,
	469, 471, 957, 472, 0, 903, 473, 474, 475, 524,
	935, 985, 0, 477, 476, 527, 0, 0, 0, 0,
	478, 479, 528, 480, 481, 482, 853, 0, 0, 0,
	0, 0, 851, 0, 0, 0, 0, 0, 0, 849,
	850, 1621, 0, 0, 0, 0, 0, 0, 878, 0,
	0, 0, 876, 908, 866, 867, 868, 864, 865, 877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 959, 882, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 923, 902, 934, 234, 892, 933, 932,
	0, 235, 894, 893, 238, 239, 240, 884, 958, 241,
	995, 996, 490, 0, 242, 965, 0, 946, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 968, 258,
	259, 949, 947, 948, 955, 951, 950, 954, 260, 261,
	262, 263, 937, 265, 930, 929, 855, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 928, 272, 0, 273,
	0, 274, 275, 0, 276, 861, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 986, 987, 873, 217, 0,
	0, 0, 0, 0, 287, 288, 289, 927, 925, 926,
	0, 292, 0, 293, 0, 0, 969, 294, 295, 0,
	296, 993, 0, 883, 297, 0, 298, 299, 300, 301,
	960, 961, 964, 354, 971, 302, 303, 0, 304, 305,
	904, 0, 0, 218, 306, 308, 315, 0, 970, 309,
	916, 907, 918, 920, 921, 922, 917, 0, 909, 0,
	316, 972, 962, 973, 317, 318, 319, 974, 942, 943,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 994, 975, 330, 331, 976, 0, 332, 333,
	953, 952, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 896, 344, 977, 347, 348, 351,
	350, 978, 349, 852, 219, 979, 352, 874, 963, 353,
	931, 355, 356, 0, 905, 358, 906, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 980, 366, 981,
	988, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 989, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 924, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 982, 403, 404,
	405, 406, 862, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 897, 898, 900, 901,
	420, 426, 427, 428, 956, 429, 409, 410, 430, 431,
	983, 432, 433, 919, 899, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 967, 441, 442, 443, 990, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	895, 0, 455, 938, 939, 940, 941, 0, 462, 0,
	456, 457, 991, 458, 992, 872, 459, 460, 461, 0,
	463, 464, 0, 856, 465, 466, 467, 468, 469, 471,
	957, 472, 0, 903, 473, 474, 475, 524, 935, 985,
	2976, 477, 476, 527, 0, 0, 0, 0, 478, 479,
	528, 480, 481, 482, 853, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 0, 0, 0, 849, 850, 908,
	866, 867, 868, 864, 865, 877, 878, 0, 0, 0,
	876, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 959, 882,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 923,
	902, 934, 234, 892, 933, 932, 0, 235, 894, 893,
	238, 239, 240, 884, 958, 241, 995, 996, 490, 0,
	242, 965, 0, 946, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 968, 258, 259, 949, 947, 948,
	955, 951, 950, 954, 260, 261, 262, 263, 937, 265,
	930, 929, 855, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 928, 272, 0, 273, 0, 274, 275, 0,
	276, 861, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 986, 987, 873, 217, 0, 0, 0, 0, 0,
	287, 288, 289, 927, 925, 926, 0, 292, 0, 293,
	0, 0, 969, 294, 295, 0, 296, 993, 0, 883,
	297, 0, 298, 299, 300, 301, 960, 961, 964, 354,
	971, 302, 303, 0, 304, 305, 904, 0, 0, 2042,
	306, 308, 315, 0, 970, 309, 916, 907, 918, 920,
	921, 922, 917, 0, 909, 0, 316, 972, 962, 973,
	317, 318, 319, 974, 942, 943, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 994, 975,
	330, 331, 976, 0, 332, 333, 953, 952, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	896, 344, 977, 347, 348, 351, 350, 978, 349, 852,
	219, 979, 352, 874, 963, 353, 931, 355, 356, 0,
	905, 358, 906, 0, 0, 361, 362, 363, 0, 0,
	364, 365, 510, 980, 366, 981, 988, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 989,
	377, 513, 378, 2041, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 924, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 982, 403, 404, 405, 406, 862, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 897, 898, 900, 901, 420, 426, 427, 428,
	956, 429, 409, 410, 430, 431, 983, 432, 433, 919,
	899, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	967, 441, 442, 443, 990, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 895, 0, 455, 938,
	939, 940, 941, 0, 462, 0, 456, 457, 991, 458,
	992, 872, 459, 460, 461, 0, 463, 464, 0, 856,
	465, 466, 467, 468, 469, 471, 957, 472, 0, 903,
	473, 474, 475, 524, 935, 985, 0, 477, 476, 527,
	0, 0, 0, 0, 478, 479, 528, 480, 481, 482,
	853, 0, 0, 0, 0, 0, 851, 0, 0, 0,
	0, 0, 0, 849, 850, 908, 866, 867, 868, 864,
	865, 877, 878, 0, 0, 0, 876, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 959, 882, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 923, 902, 934, 234, 892,
	933, 932, 0, 235, 894, 893, 238, 239, 240, 884,
	958, 241, 995, 996, 490, 0, 242, 965, 0, 946,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	968, 258, 259, 949, 947, 948, 955, 951, 950, 954,
	260, 261, 262, 263, 937, 265, 930, 929, 855, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 928, 272,
	0, 273, 0, 274, 275, 0, 276, 861, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 986, 987, 873,
	217, 0, 0, 0, 0, 0, 287, 288, 289, 927,
	925, 926, 0, 292, 0, 293, 0, 0, 969, 294,
	295, 0, 296, 993, 0, 883, 297, 0, 298, 299,
	300, 301, 960, 961, 964, 354, 971, 302, 303, 0,
	304, 305, 904, 0, 0, 218, 306, 308, 315, 0,
	970, 309, 916, 907, 918, 920, 921, 922, 917, 0,
	909, 0, 316, 972, 962, 973, 317, 318, 319, 974,
	942, 943, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 994, 975, 330, 331, 976, 0,
	332, 333, 953, 952, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 896, 344, 977, 347,
	348, 351, 350, 978, 349, 852, 219, 979, 352, 874,
	963, 353, 931, 355, 356, 0, 905, 358, 906, 857,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 980,
	366, 981, 988, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 989, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 924,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 982,
	403, 404, 405, 406, 862, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 0, 424, 425, 897, 898,
	900, 901, 420, 426, 427, 428, 956, 429, 409, 410,
	430, 431, 983, 432, 433, 919, 899, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 967, 441, 442, 443,
	990, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 895, 0, 455, 938, 939, 940, 941, 0,
	462, 0, 456, 457, 991, 458, 992, 872, 459, 460,
	461, 0, 463, 464, 0, 856, 465, 466, 467, 468,
	469, 471, 957, 472, 0, 903, 473, 474, 475, 524,
	935, 985, 0, 477, 476, 527, 0, 0, 0, 0,
	478, 479, 528, 480, 481, 482, 853, 0, 0, 0,
	0, 0, 851, 0, 0, 0, 0, 0, 0, 849,
	850, 908, 866, 867, 868, 864, 865, 877, 878, 0,
	0, 0, 876, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	959, 882, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 923, 902, 934, 234, 892, 933, 932, 0, 235,
	894, 893, 238, 239, 240, 884, 958, 241, 995, 996,
	490, 0, 242, 965, 0, 946, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 968, 258, 259, 949,
	947, 948, 955, 951, 950, 954, 260, 261, 262, 263,
	937, 265, 930, 929, 855, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 928, 272, 0, 273, 0, 274,
	275, 0, 276, 861, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 986, 987, 873, 217, 0, 0, 0,
	0, 0, 287, 288, 289, 927, 925, 926, 0, 292,
	0, 293, 0, 0, 969, 294, 295, 0, 296, 993,
	0, 883, 297, 0, 298, 299, 300, 301, 960, 961,
	964, 354, 971, 302, 303, 0, 304, 305, 904, 0,
	0, 218, 306, 308, 315, 0, 970, 309, 916, 907,
	918, 920, 921, 922, 917, 0, 909, 0, 316, 972,
	962, 973, 317, 318, 319, 974, 942, 943, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	994, 975, 330, 331, 976, 0, 332, 333, 953, 952,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 896, 344, 977, 347, 348, 351, 350, 978,
	349, 852, 219, 979, 352, 874, 963, 353, 931, 355,
	356, 0, 905, 358, 906, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 980, 366, 981, 988, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 989, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 924, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 982, 403, 404, 405, 406,
	862, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 897, 898, 900, 901, 420, 426,
	427, 428, 956, 429, 409, 410, 430, 431, 983, 432,
	433, 919, 899, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 967, 441, 442, 443, 990, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 895, 0,
	455, 938, 939, 940, 941, 0, 462, 0, 456, 457,
	991, 458, 992, 872, 459, 460, 461, 0, 463, 464,
	0, 856, 465, 466, 467, 468, 469, 471, 957, 472,
	0, 903, 473, 474, 475, 524, 935, 985, 0, 477,
	476, 527, 0, 0, 0, 0, 478, 479, 528, 480,
	481, 482, 853, 0, 0, 0, 0, 0, 851, 0,
	0, 0, 0, 0, 0, 849, 850, 1621, 0, 0,
	0, 0, 0, 0, 878, 0, 0, 0, 876, 908,
	866, 867, 868, 864, 865, 877, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 959, 882,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 923,
	902, 934, 234, 892, 933, 932, 0, 235, 894, 893,
	238, 239, 240, 884, 958, 241, 995, 996, 490, 0,
	242, 965, 0, 946, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 968, 258, 259, 949, 947, 948,
	955, 951, 950, 954, 260, 261, 262, 263, 937, 265,
	930, 929, 855, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 928, 272, 0, 273, 0, 274, 275, 0,
	276, 861, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 986, 987, 873, 217, 0, 0, 0, 0, 0,
	287, 288, 289, 927, 925, 926, 0, 292, 0, 293,
	0, 2227, 969, 294, 295, 0, 296, 993, 0, 883,
	297, 0, 298, 299, 300, 301, 960, 961, 964, 354,
	971, 302, 303, 0, 304, 305, 904, 0, 0, 218,
	306, 308, 315, 0, 970, 309, 916, 907, 918, 920,
	921, 922, 917, 0, 909, 0, 316, 972, 962, 973,
	317, 318, 319, 974, 942, 943, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 994, 975,
	330, 331, 976, 0, 332, 333, 953, 952, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	896, 344, 977, 347, 348, 351, 350, 978, 349, 852,
	219, 979, 352, 874, 963, 353, 931, 355, 356, 0,
	905, 358, 906, 0, 0, 361, 362, 363, 0, 0,
	364, 365, 510, 980, 366, 981, 988, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 989,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 924, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 982, 403, 404, 405, 406, 862, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 897, 898, 900, 901, 420, 426, 427, 428,
	956, 429, 409, 410, 430, 431, 983, 432, 433, 919,
	899, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	967, 441, 442, 443, 990, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 895, 0, 455, 938,
	939, 940, 941, 0, 462, 0, 456, 457, 991, 458,
	992, 872, 459, 460, 461, 0, 463, 464, 0, 856,
	465, 466, 467, 468, 469, 471, 957, 472, 0, 903,
	473, 474, 475, 524, 935, 985, 0, 477, 476, 527,
	0, 0, 0, 0, 478, 479, 528, 480, 481, 482,
	853, 0, 0, 0, 0, 0, 851, 0, 0, 0,
	0, 0, 0, 849, 850, 908, 866, 867, 868, 864,
	865, 877, 878, 0, 0, 0, 876, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 959, 882, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 923, 902, 934, 234, 892,
	933, 932, 0, 235, 894, 893, 238, 239, 240, 884,
	958, 241, 995, 996, 490, 0, 242, 965, 0, 946,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	968, 258, 259, 949, 947, 948, 955, 951, 950, 954,
	260, 261, 262, 263, 937, 265, 930, 929, 855, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 928, 272,
	0, 273, 0, 274, 275, 0, 276, 861, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 986, 987, 873,
	217, 0, 0, 0, 0, 0, 287, 288, 289, 927,
	925, 926, 0, 292, 0, 293, 0, 0, 969, 294,
	295, 0, 296, 993, 0, 883, 297, 0, 298, 299,
	300, 301, 960, 961, 964, 354, 971, 302, 303, 0,
	304, 305, 904, 0, 0, 218, 306, 308, 315, 0,
	970, 309, 916, 907, 918, 920, 921, 922, 917, 0,
	909, 0, 316, 972, 962, 973, 317, 318, 319, 974,
	942, 943, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 994, 975, 330, 331, 976, 0,
	332, 333, 953, 952, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 896, 344, 977, 347,
	348, 351, 350, 978, 349, 852, 219, 979, 352, 874,
	963, 353, 931, 355, 356, 0, 905, 358, 906, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 980,
	366, 981, 988, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 989, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 924,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 982,
	403, 404, 405, 406, 862, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 0, 424, 425, 897, 898,
	900, 901, 420, 426, 427, 428, 956, 429, 409, 410,
	430, 431, 983, 432, 433, 919, 899, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 967, 441, 442, 443,
	990, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 895, 0, 455, 938, 939, 940, 941, 0,
	462, 0, 456, 457, 991, 458, 992, 872, 459, 460,
	461, 0, 463, 464, 0, 856, 465, 466, 467, 468,
	469, 471, 957, 472, 0, 903, 473, 474, 475, 524,
	935, 985, 0, 477, 476, 527, 0, 0, 0, 0,
	478, 479, 528, 480, 481, 482, 853, 0, 0, 0,
	0, 0, 851, 0, 0, 0, 0, 0, 0, 849,
	850, 0, 0, 0, 0, 0, 0, 0, 878, 1555,
	0, 2232, 876, 908, 866, 867, 868, 864, 865, 877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 959, 882, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 923, 902, 934, 234, 892, 933, 932,
	0, 235, 894, 893, 238, 239, 240, 884, 958, 241,
	995, 996, 490, 0, 242, 965, 0, 946, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 968, 258,
	259, 949, 947, 948, 955, 951, 950, 954, 260, 261,
	262, 263, 937, 265, 930, 929, 855, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 928, 272, 0, 273,
	0, 274, 275, 0, 276, 861, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 986, 987, 873, 217, 0,
	0, 0, 0, 0, 287, 288, 289, 927, 925, 926,
	0, 292, 0, 293, 0, 0, 969, 294, 295, 0,
	296, 993, 0, 883, 297, 0, 298, 299, 300, 301,
	960, 961, 964, 354, 971, 302, 303, 0, 304, 305,
	904, 0, 0, 218, 306, 308, 315, 0, 970, 309,
	916, 907, 918, 920, 921, 922, 917, 0, 909, 0,
	316, 972, 962, 973, 317, 318, 319, 974, 942, 943,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 994, 975, 330, 331, 976, 0, 332, 333,
	953, 952, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 896, 344, 977, 347, 348, 351,
	350, 978, 349, 852, 219, 979, 352, 874, 963, 353,
	931, 355, 356, 0, 905, 358, 906, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 980, 366, 981,
	988, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 989, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 924, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 982, 403, 404,
	405, 406, 862, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 897, 898, 900, 901,
	420, 426, 427, 428, 956, 429, 409, 410, 430, 431,
	983, 432, 433, 919, 899, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 967, 441, 442, 443, 990, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	895, 0, 455, 938, 939, 940, 941, 0, 462, 0,
	456, 457, 991, 458, 992, 872, 459, 460, 461, 0,
	463, 464, 0, 856, 465, 466, 467, 468, 469, 471,
	957, 472, 0, 903, 473, 474, 475, 524, 935, 985,
	0, 477, 476, 527, 0, 0, 0, 0, 478, 479,
	528, 480, 481, 482, 853, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 0, 0, 0, 849, 850, 0,
	0, 0, 0, 0, 0, 0, 878, 0, 0, 2230,
	876, 908, 866, 867, 868, 864, 865, 877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	959, 882, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 923, 902, 934, 234, 892, 933, 932, 0, 235,
	894, 893, 238, 239, 240, 884, 958, 241, 995, 996,
	490, 0, 242, 965, 0, 946, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 968, 258, 259, 949,
	947, 948, 955, 951, 950, 954, 260, 261, 262, 263,
	937, 265, 930, 929, 855, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 928, 272, 0, 273, 0, 274,
	275, 0, 276, 861, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 986, 987, 873, 217, 0, 0, 0,
	0, 0, 287, 288, 289, 927, 925, 926, 0, 292,
	0, 293, 0, 0, 969, 294, 295, 0, 296, 993,
	0, 883, 297, 0, 298, 299, 300, 301, 960, 961,
	964, 354, 971, 302, 303, 0, 304, 305, 904, 0,
	0, 218, 306, 308, 315, 0, 970, 309, 916, 907,
	918, 920, 921, 922, 917, 0, 909, 0, 316, 972,
	962, 973, 317, 318, 319, 974, 942, 943, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	994, 975, 330, 331, 976, 0, 332, 333, 953, 952,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 896, 344, 977, 347, 348, 351, 350, 978,
	349, 852, 219, 979, 352, 874, 963, 353, 931, 355,
	356, 0, 905, 358, 906, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 980, 366, 981, 988, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 989, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 924, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 982, 403, 404, 405, 406,
	862, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 897, 898, 900, 901, 420, 426,
	427, 428, 956, 429, 409, 410, 430, 431, 983, 432,
	433, 919, 899, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 967, 441, 442, 443, 990, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 895, 0,
	455, 938, 939, 940, 941, 0, 462, 0, 456, 457,
	991, 458, 992, 872, 459, 460, 461, 0, 463, 464,
	0, 856, 465, 466, 467, 468, 469, 471, 957, 472,
	0, 903, 473, 474, 475, 524, 935, 985, 0, 477,
	476, 527, 0, 0, 0, 0, 478, 479, 528, 480,
	481, 482, 853, 0, 0, 0, 0, 0, 851, 0,
	0, 0, 0, 0, 0, 849, 850, 0, 0, 0,
	0, 0, 0, 0, 878, 0, 0, 2218, 876, 908,
	866, 867, 868, 864, 865, 877, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 959, 882,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 923,
	902, 934, 234, 892, 933, 932, 0, 235, 894, 893,
	238, 239, 240, 884, 958, 241, 995, 996, 490, 0,
	242, 965, 0, 946, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 968, 258, 259, 949, 947, 948,
	955, 951, 950, 954, 260, 261, 262, 263, 937, 265,
	930, 929, 855, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 928, 272, 0, 273, 0, 274, 275, 0,
	276, 861, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 986, 987, 873, 217, 0, 0, 0, 0, 0,
	287, 288, 289, 927, 925, 926, 0, 292, 0, 293,
	0, 0, 969, 294, 295, 0, 296, 993, 0, 883,
	297, 0, 298, 299, 300, 301, 960, 961, 964, 354,
	971, 302, 303, 0, 304, 305, 904, 0, 0, 218,
	306, 308, 315, 0, 970, 309, 916, 907, 918, 920,
	921, 922, 917, 0, 909, 0, 316, 972, 962, 973,
	317, 318, 319, 974, 942, 943, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 994, 975,
	330, 331, 976, 0, 332, 333, 953, 952, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	896, 344, 977, 347, 348, 351, 350, 978, 349, 852,
	219, 979, 352, 874, 963, 353, 931, 355, 356, 0,
	905, 358, 906, 0, 0, 361, 362, 363, 0, 0,
	364, 365, 510, 980, 366, 981, 988, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 989,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 924, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 982, 403, 404, 405, 406, 862, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 897, 898, 900, 901, 420, 426, 427, 428,
	956, 429, 409, 410, 430, 431, 983, 432, 433, 919,
	899, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	967, 441, 442, 443, 990, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 895, 0, 455, 938,
	939, 940, 941, 0, 462, 0, 456, 457, 991, 458,
	992, 872, 459, 460, 461, 0, 463, 464, 0, 856,
	465, 466, 467, 468, 469, 471, 957, 472, 0, 903,
	473, 474, 475, 524, 935, 985, 0, 477, 476, 527,
	0, 0, 0, 0, 478, 479, 528, 480, 481, 482,
	853, 0, 0, 0, 0, 0, 851, 0, 0, 0,
	0, 0, 0, 849, 850, 0, 0, 0, 0, 0,
	0, 0, 878, 0, 0, 2207, 876, 908, 866, 867,
	868, 864, 865, 877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 959, 882, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 923, 902, 934,
	234, 892, 933, 932, 0, 235, 894, 893, 238, 239,
	240, 884, 958, 241, 995, 996, 490, 0, 242, 965,
	0, 946, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 968, 258, 259, 949, 947, 948, 955, 951,
	950, 954, 260, 261, 262, 263, 937, 265, 930, 929,
	855, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	928, 272, 0, 273, 0, 274, 275, 0, 276, 861,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 986,
	987, 873, 217, 0, 0, 0, 0, 0, 287, 288,
	289, 927, 925, 926, 0, 292, 0, 293, 0, 0,
	969, 294, 295, 0, 296, 993, 0, 883, 297, 0,
	298, 299, 300, 301, 960, 961, 964, 354, 971, 302,
	303, 0, 304, 305, 904, 0, 0, 218, 306, 308,
	315, 0, 970, 309, 916, 907, 918, 920, 921, 922,
	917, 0, 909, 0, 316, 972, 962, 973, 317, 318,
	319, 974, 942, 943, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 994, 975, 330, 331,
	976, 0, 332, 333, 953, 952, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 896, 344,
	977, 347, 348, 351, 350, 978, 349, 852, 219, 979,
	352, 874, 963, 353, 931, 355, 356, 0, 905, 358,
	906, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 980, 366, 981, 988, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 989, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 924, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 982, 403, 404, 405, 406, 862, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	897, 898, 900, 901, 420, 426, 427, 428, 956, 429,
	409, 410, 430, 431, 983, 432, 433, 919, 899, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 967, 441,
	442, 443, 990, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 895, 0, 455, 938, 939, 940,
	941, 0, 462, 0, 456, 457, 991, 458, 992, 872,
	459, 460, 461, 0, 463, 464, 0, 856, 465, 466,
	467, 468, 469, 471, 957, 472, 0, 903, 473, 474,
	475, 524, 935, 985, 0, 477, 476, 527, 0, 0,
	0, 0, 478, 479, 528, 480, 481, 482, 853, 0,
	0, 0, 0, 0, 851, 0, 0, 0, 0, 0,
	0, 849, 850, 0, 0, 0, 0, 0, 0, 0,
	878, 0, 0, 2205, 876, 2196, 2203, 867, 868, 864,
	865, 877, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 959, 882, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 923, 902, 934, 234, 892,
	933, 932, 0, 235, 894, 893, 238, 239, 240, 884,
	958, 241, 995, 996, 490, 0, 242, 965, 0, 946,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	968, 258, 259, 949, 947, 948, 955, 951, 950, 954,
	260, 261, 262, 263, 937, 2199, 930, 929, 855, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 928, 272,
	0, 273, 0, 274, 275, 0, 276, 861, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 986, 987, 873,
	217, 0, 0, 0, 0, 0, 287, 288, 289, 927,
	925, 926, 0, 292, 0, 293, 0, 0, 969, 294,
	295, 0, 296, 993, 0, 883, 297, 0, 298, 299,
	300, 2200, 960, 961, 964, 354, 971, 302, 303, 0,
	304, 305, 904, 0, 0, 218, 306, 308, 315, 0,
	970, 309, 916, 907, 918, 920, 921, 922, 917, 0,
	909, 0, 316, 972, 962, 973, 317, 318, 319, 974,
	942, 943, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 994, 975, 330, 331, 976, 0,
	332, 333, 953, 952, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 2201, 2198, 345, 896, 344, 977, 347,
	348, 351, 350, 978, 349, 852, 219, 979, 352, 874,
	963, 353, 931, 355, 356, 0, 905, 358, 906, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 980,
	366, 981, 988, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 989, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 924,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 982,
	403, 404, 405, 406, 862, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 2202, 0, 424, 425, 897, 898,
	900, 901, 420, 426, 427, 428, 956, 429, 409, 410,
	430, 431, 983, 432, 433, 919, 899, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 967, 441, 442, 443,
	990, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 895, 0, 455, 938, 939, 940, 941, 0,
	462, 0, 456, 457, 991, 458, 992, 872, 459, 460,
	461, 0, 463, 464, 0, 856, 465, 466, 467, 468,
	469, 471, 957, 472, 0, 903, 473, 474, 475, 524,
	935, 985, 0, 477, 476, 527, 0, 0, 0, 0,
	478, 479, 528, 480, 2197, 482, 853, 0, 0, 0,
	0, 0, 851, 0, 0, 0, 0, 0, 0, 849,
	850, 0, 0, 0, 0, 0, 0, 0, 878, 0,
	0, 2193, 876, 2196, 2203, 867, 868, 864, 865, 877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 959, 882, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 923, 902, 934, 234, 892, 933, 932,
	0, 235, 894, 893, 238, 239, 240, 884, 958, 241,
	995, 996, 490, 0, 242, 965, 0, 946, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 968, 258,
	259, 949, 947, 948, 955, 951, 950, 954, 260, 261,
	262, 263, 937, 2199, 930, 929, 855, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 928, 272, 0, 273,
	0, 274, 275, 0, 276, 861, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 986, 987, 873, 217, 0,
	0, 0, 0, 0, 287, 288, 289, 927, 925, 926,
	0, 292, 0, 293, 0, 0, 969, 294, 295, 0,
	296, 993, 0, 883, 297, 0, 298, 299, 300, 2200,
	960, 961, 964, 354, 971, 302, 303, 0, 304, 305,
	904, 0, 0, 218, 306, 308, 315, 0, 970, 309,
	916, 907, 918, 920, 921, 922, 917, 0, 909, 0,
	316, 972, 962, 973, 317, 318, 319, 974, 942, 943,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 994, 975, 330, 331, 976, 0, 332, 333,
	953, 952, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 2201, 2198, 345, 896, 344, 977, 347, 348, 351,
	350, 978, 349, 852, 219, 979, 352, 874, 963, 353,
	931, 355, 356, 0, 905, 358, 906, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 980, 366, 981,
	988, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 989, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 924, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 982, 403, 404,
	405, 406, 862, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 2202, 0, 424, 425, 897, 898, 900, 901,
	420, 426, 427, 428, 956, 429, 409, 410, 430, 431,
	983, 432, 433, 919, 899, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 967, 441, 442, 443, 990, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	895, 0, 455, 938, 939, 940, 941, 0, 462, 0,
	456, 457, 991, 458, 992, 872, 459, 460, 461, 0,
	463, 464, 0, 856, 465, 466, 467, 468, 469, 471,
	957, 472, 0, 903, 473, 474, 475, 524, 935, 985,
	0, 477, 476, 527, 0, 0, 0, 0, 478, 479,
	528, 480, 2197, 482, 853, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 0, 0, 0, 849, 850, 908,
	866, 867, 868, 864, 865, 877, 878, 0, 0, 0,
	876, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 959, 882,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 923,
	902, 934, 234, 892, 933, 932, 0, 235, 894, 893,
	238, 239, 240, 884, 958, 241, 995, 996, 490, 0,
	242, 965, 0, 946, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 968, 258, 259, 949, 947, 948,
	955, 951, 950, 954, 260, 261, 262, 263, 937, 265,
	930, 929, 855, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 928, 272, 0, 273, 0, 274, 275, 0,
	276, 861, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 986, 987, 873, 217, 0, 0, 0, 0, 0,
	287, 288, 289, 927, 925, 926, 0, 292, 0, 293,
	0, 0, 969, 294, 295, 0, 296, 993, 0, 883,
	297, 0, 298, 299, 300, 301, 960, 961, 964, 354,
	971, 302, 303, 0, 304, 305, 904, 0, 0, 218,
	306, 308, 315, 0, 970, 309, 916, 907, 918, 920,
	921, 922, 917, 0, 909, 0, 316, 972, 962, 973,
	317, 318, 319, 974, 942, 943, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 994, 975,
	330, 331, 976, 0, 332, 333, 953, 952, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	896, 344, 977, 347, 348, 351, 350, 978, 349, 852,
	219, 979, 352, 874, 963, 353, 931, 355, 356, 0,
	905, 358, 906, 0, 0, 361, 362, 363, 0, 0,
	364, 365, 510, 980, 366, 981, 988, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 989,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 924, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 982, 403, 404, 405, 406, 862, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 897, 898, 900, 901, 420, 426, 427, 428,
	956, 429, 409, 410, 430, 431, 983, 432, 433, 919,
	899, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	967, 441, 442, 443, 990, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 895, 0, 455, 938,
	939, 940, 941, 0, 462, 0, 456, 457, 991, 458,
	992, 872, 459, 460, 461, 0, 463, 464, 0, 856,
	465, 466, 467, 468, 469, 471, 957, 472, 0, 903,
	473, 474, 475, 524, 935, 985, 0, 477, 476, 527,
	0, 0, 0, 0, 478, 479, 528, 480, 481, 482,
	853, 0, 0, 0, 0, 0, 851, 0, 0, 0,
	0, 0, 0, 849, 850, 0, 0, 0, 0, 0,
	1563, 0, 878, 0, 0, 0, 876, 908, 866, 867,
	868, 864, 865, 877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 2021,
	225, 0, 0, 0, 0, 0, 959, 882, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 923, 902, 934,
	234, 892, 933, 932, 0, 235, 894, 893, 238, 239,
	240, 884, 958, 241, 995, 996, 490, 0, 242, 965,
	0, 946, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 968, 258, 259, 949, 947, 948, 955, 951,
	950, 954, 260, 261, 262, 263, 937, 265, 930, 929,
	855, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	928, 272, 0, 273, 0, 274, 275, 0, 276, 861,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 986,
	987, 873, 217, 0, 0, 0, 0, 0, 287, 288,
	289, 927, 925, 926, 0, 292, 0, 293, 0, 0,
	969, 294, 295, 0, 296, 993, 0, 883, 297, 0,
	298, 299, 300, 301, 960, 961, 964, 354, 971, 302,
	303, 0, 304, 305, 904, 0, 0, 218, 306, 308,
	315, 0, 970, 309, 916, 907, 918, 920, 921, 922,
	917, 0, 909, 0, 316, 972, 962, 973, 317, 318,
	319, 974, 942, 943, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 994, 975, 330, 331,
	976, 0, 332, 333, 953, 952, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 896, 344,
	977, 347, 348, 351, 350, 978, 349, 852, 219, 979,
	352, 874, 963, 353, 931, 355, 356, 0, 905, 358,
	906, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 980, 366, 981, 988, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 989, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 924, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 982, 403, 404, 405, 406, 862, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	897, 898, 900, 901, 420, 426, 427, 428, 956, 429,
	409, 410, 430, 431, 983, 432, 433, 919, 899, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 967, 441,
	442, 443, 990, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 895, 0, 455, 938, 939, 940,
	941, 0, 462, 0, 456, 457, 991, 458, 992, 872,
	459, 460, 461, 0, 463, 464, 0, 856, 465, 466,
	467, 468, 469, 471, 957, 472, 0, 903, 473, 474,
	475, 524, 935, 985, 0, 477, 476, 527, 0, 0,
	0, 0, 478, 479, 528, 480, 481, 482, 853, 0,
	0, 0, 0, 0, 851, 0, 0, 0, 0, 0,
	0, 849, 850, 0, 0, 0, 0, 0, 0, 0,
	878, 0, 0, 1234, 876, 908, 866, 867, 868, 864,
	865, 877, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 959, 882, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 923, 902, 934, 234, 892,
	933, 932, 0, 235, 894, 893, 238, 239, 240, 884,
	958, 241, 995, 996, 490, 0, 242, 965, 0, 946,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	968, 258, 259, 949, 947, 948, 955, 951, 950, 954,
	260, 261, 262, 263, 937, 265, 930, 929, 855, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 928, 272,
	0, 273, 0, 274, 275, 0, 276, 861, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 986, 987, 873,
	217, 0, 0, 0, 0, 0, 287, 288, 289, 927,
	925, 926, 0, 292, 0, 293, 0, 0, 969, 294,
	295, 0, 296, 993, 0, 883, 297, 0, 298, 299,
	300, 301, 1233, 961, 964, 354, 971, 302, 303, 0,
	304, 305, 904, 0, 0, 218, 306, 308, 315, 0,
	970, 309, 916, 907, 918, 920, 921, 922, 917, 0,
	909, 0, 316, 972, 962, 973, 317, 318, 319, 974,
	942, 943, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 994, 975, 330, 331, 976, 0,
	332, 333, 953, 952, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 896, 344, 977, 347,
	348, 351, 350, 978, 349, 852, 219, 979, 352, 874,
	963, 353, 931, 355, 356, 0, 905, 358, 906, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 980,
	366, 981, 988, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 989, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 924,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 982,
	403, 404, 405, 406, 862, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 0, 424, 425, 897, 898,
	900, 901, 420, 426, 427, 428, 956, 429, 409, 410,
	430, 431, 983, 432, 433, 919, 899, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 967, 441, 442, 443,
	990, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 895, 0, 455, 938, 939, 940, 941, 0,
	462, 0, 456, 457, 991, 458, 992, 872, 459, 460,
	461, 0, 463, 464, 0, 856, 465, 466, 467, 468,
	469, 471, 957, 472, 0, 903, 473, 474, 475, 524,
	935, 985, 0, 477, 476, 527, 0, 0, 0, 0,
	478, 479, 528, 480, 481, 482, 853, 0, 0, 0,
	0, 0, 851, 0, 0, 0, 0, 0, 0, 849,
	850, 0, 0, 0, 0, 0, 0, 0, 878, 0,
	0, 1228, 876, 908, 866, 867, 868, 864, 865, 877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 959, 882, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 923, 902, 934, 234, 892, 933, 932,
	0, 235, 894, 893, 238, 239, 240, 884, 958, 241,
	995, 996, 490, 0, 242, 965, 0, 946, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 968, 258,
	259, 949, 947, 948, 955, 951, 950, 954, 260, 261,
	262, 263, 937, 265, 930, 929, 855, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 928, 272, 0, 273,
	0, 274, 275, 0, 276, 861, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 986, 987, 873, 217, 0,
	0, 0, 0, 0, 287, 288, 289, 927, 925, 926,
	0, 292, 0, 293, 0, 0, 969, 294, 295, 0,
	296, 993, 0, 883, 297, 0, 298, 299, 300, 301,
	1227, 961, 964, 354, 971, 302, 303, 0, 304, 305,
	904, 0, 0, 218, 306, 308, 315, 0, 970, 309,
	916, 907, 918, 920, 921, 922, 917, 0, 909, 0,
	316, 972, 962, 973, 317, 318, 319, 974, 942, 943,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 994, 975, 330, 331, 976, 0, 332, 333,
	953, 952, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 896, 344, 977, 347, 348, 351,
	350, 978, 349, 852, 219, 979, 352, 874, 963, 353,
	931, 355, 356, 0, 905, 358, 906, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 980, 366, 981,
	988, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 989, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 924, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 982, 403, 404,
	405, 406, 862, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 897, 898, 900, 901,
	420, 426, 427, 428, 956, 429, 409, 410, 430, 431,
	983, 432, 433, 919, 899, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 967, 441, 442, 443, 990, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	895, 0, 455, 938, 939, 940, 941, 0, 462, 0,
	456, 457, 991, 458, 992, 872, 459, 460, 461, 0,
	463, 464, 0, 856, 465, 466, 467, 468, 469, 471,
	957, 472, 0, 903, 473, 474, 475, 524, 935, 985,
	0, 477, 476, 527, 0, 0, 0, 0, 478, 479,
	528, 480, 481, 482, 853, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 0, 0, 0, 849, 850, 0,
	0, 0, 0, 0, 0, 0, 878, 0, 0, 1223,
	876, 908, 866, 867, 868, 864, 865, 877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	959, 882, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 923, 902, 934, 234, 892, 933, 932, 0, 235,
	894, 893, 238, 239, 240, 884, 958, 241, 995, 996,
	490, 0, 242, 965, 0, 946, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 968, 258, 259, 949,
	947, 948, 955, 951, 950, 954, 260, 261, 262, 263,
	937, 265, 930, 929, 855, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 928, 272, 0, 273, 0, 274,
	275, 0, 276, 861, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 986, 987, 873, 217, 0, 0, 0,
	0, 0, 287, 288, 289, 927, 925, 926, 0, 292,
	0, 293, 0, 0, 969, 294, 295, 0, 296, 993,
	0, 883, 297, 0, 298, 299, 300, 301, 960, 961,
	964, 354, 971, 302, 303, 0, 304, 305, 904, 0,
	0, 218, 306, 308, 315, 0, 970, 309, 916, 907,
	918, 920, 921, 922, 917, 0, 909, 0, 316, 972,
	962, 973, 317, 318, 319, 974, 942, 943, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	994, 975, 330, 331, 976, 0, 332, 333, 953, 952,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 896, 344, 977, 347, 348, 351, 350, 978,
	349, 852, 219, 979, 352, 874, 963, 353, 931, 355,
	356, 0, 905, 358, 906, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 980, 366, 981, 988, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 989, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 924, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 982, 403, 404, 405, 406,
	862, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 897, 898, 900, 901, 420, 426,
	427, 428, 956, 429, 409, 410, 430, 431, 983, 432,
	433, 919, 899, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 967, 441, 442, 443, 990, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 895, 0,
	455, 938, 939, 940, 941, 0, 462, 0, 456, 457,
	991, 458, 992, 872, 459, 460, 461, 0, 463, 464,
	0, 856, 465, 466, 467, 468, 469, 471, 957, 472,
	0, 903, 473, 474, 475, 524, 935, 985, 0, 477,
	476, 527, 0, 0, 0, 0, 478, 479, 528, 480,
	481, 482, 853, 0, 0, 0, 0, 0, 851, 0,
	0, 0, 0, 0, 0, 849, 850, 908, 866, 867,
	868, 864, 865, 877, 878, 0, 0, 0, 876, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 959, 882, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 923, 902, 934,
	234, 892, 933, 932, 0, 235, 894, 893, 238, 239,
	240, 884, 958, 241, 995, 996, 490, 0, 242, 965,
	0, 946, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 968, 258, 259, 949, 947, 948, 955, 951,
	950, 954, 260, 261, 262, 263, 937, 265, 930, 929,
	855, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	928, 272, 0, 273, 0, 274, 275, 0, 276, 861,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 986,
	987, 873, 217, 0, 0, 0, 0, 0, 287, 288,
	289, 927, 925, 926, 0, 292, 0, 293, 0, 0,
	969, 294, 295, 0, 296, 993, 0, 883, 297, 0,
	298, 299, 300, 301, 960, 961, 964, 354, 971, 302,
	303, 0, 304, 305, 904, 0, 0, 218, 306, 308,
	315, 0, 970, 309, 916, 907, 918, 920, 921, 922,
	917, 0, 909, 0, 316, 972, 962, 973, 317, 318,
	319, 974, 942, 943, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 994, 975, 330, 331,
	976, 0, 332, 333, 953, 952, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 896, 344,
	977, 347, 348, 351, 350, 978, 349, 852, 219, 979,
	352, 874, 963, 353, 931, 355, 356, 0, 905, 358,
	906, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 980, 366, 981, 988, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 989, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 924, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 982, 403, 404, 405, 406, 862, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	897, 898, 900, 901, 420, 426, 427, 428, 956, 429,
	409, 410, 430, 431, 983, 432, 433, 919, 899, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 967, 441,
	442, 443, 990, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 895, 0, 455, 938, 939, 940,
	941, 0, 462, 0, 456, 457, 991, 458, 992, 872,
	459, 460, 461, 0, 463, 464, 0, 856, 465, 466,
	467, 468, 469, 471, 957, 472, 0, 903, 473, 474,
	475, 524, 935, 985, 0, 477, 476, 527, 0, 0,
	0, 0, 478, 479, 528, 480, 481, 482, 853, 0,
	0, 0, 0, 0, 851, 0, 0, 0, 0, 0,
	0, 849, 850, 908, 866, 867, 868, 864, 865, 877,
	878, 0, 0, 0, 876, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 959, 882, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 923, 902, 934, 234, 892, 933, 932,
	0, 235, 894, 893, 238, 239, 240, 884, 958, 241,
	995, 996, 490, 0, 242, 965, 0, 946, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 968, 258,
	3650, 949, 947, 948, 955, 951, 950, 954, 260, 261,
	262, 263, 937, 265, 930, 929, 855, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 928, 272, 0, 273,
	0, 274, 275, 0, 276, 861, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 986, 987, 873, 217, 0,
	0, 0, 0, 0, 287, 288, 289, 927, 925, 926,
	0, 292, 0, 293, 0, 0, 969, 294, 295, 0,
	296, 993, 0, 883, 297, 0, 298, 299, 300, 301,
	960, 961, 964, 354, 971, 302, 303, 0, 304, 305,
	904, 0, 0, 218, 306, 308, 315, 0, 970, 309,
	916, 907, 918, 920, 921, 922, 917, 0, 909, 0,
	316, 972, 962, 973, 317, 318, 319, 974, 942, 943,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 994, 975, 330, 331, 976, 0, 332, 333,
	953, 952, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 896, 344, 977, 347, 348, 351,
	350, 978, 349, 852, 219, 979, 352, 874, 963, 353,
	931, 355, 356, 0, 905, 358, 906, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 980, 366, 981,
	988, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 989, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 924, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 982, 403, 404,
	405, 406, 862, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 897, 898, 900, 901,
	420, 426, 427, 428, 956, 429, 409, 410, 430, 431,
	983, 432, 433, 919, 899, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 967, 441, 442, 443, 990, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	895, 0, 455, 938, 939, 940, 941, 0, 462, 0,
	456, 457, 991, 458, 992, 872, 459, 460, 461, 0,
	3649, 464, 0, 856, 465, 466, 467, 468, 469, 471,
	957, 472, 0, 903, 473, 474, 475, 524, 935, 985,
	0, 477, 476, 527, 0, 0, 0, 0, 478, 479,
	528, 480, 481, 482, 853, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 0, 0, 0, 849, 850, 908,
	866, 867, 868, 864, 865, 877, 878, 0, 0, 0,
	876, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 959, 882,
	0, 0, 0, 226, 228, 227, 229, 230, 3648, 923,
	902, 934, 234, 892, 933, 932, 0, 235, 894, 893,
	238, 239, 240, 884, 958, 241, 995, 996, 490, 0,
	242, 965, 0, 946, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 968, 258, 3650, 949, 947, 948,
	955, 951, 950, 954, 260, 261, 262, 263, 937, 265,
	930, 929, 855, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 928, 272, 0, 273, 0, 274, 275, 0,
	276, 861, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 986, 987, 873, 217, 0, 0, 0, 0, 0,
	287, 288, 289, 927, 925, 926, 0, 292, 0, 293,
	0, 0, 969, 294, 295, 0, 296, 993, 0, 883,
	297, 0, 298, 299, 300, 301, 960, 961, 964, 354,
	971, 302, 303, 0, 304, 305, 904, 0, 0, 218,
	306, 308, 315, 0, 970, 309, 916, 907, 918, 920,
	921, 922, 917, 0, 909, 0, 316, 972, 962, 973,
	317, 318, 319, 974, 942, 943, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 994, 975,
	330, 331, 976, 0, 332, 333, 953, 952, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	896, 344, 977, 347, 348, 351, 350, 978, 349, 852,
	219, 979, 352, 874, 963, 353, 931, 355, 356, 0,
	905, 358, 906, 0, 0, 361, 362, 363, 0, 0,
	364, 365, 510, 980, 366, 981, 988, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 989,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 924, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 982, 403, 404, 405, 406, 862, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 897, 898, 900, 901, 420, 426, 427, 428,
	956, 429, 409, 410, 430, 431, 983, 432, 433, 919,
	899, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	967, 441, 442, 443, 990, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 895, 0, 455, 938,
	939, 940, 941, 0, 462, 0, 456, 457, 991, 458,
	992, 872, 459, 460, 461, 0, 3649, 464, 0, 856,
	465, 466, 467, 468, 469, 471, 957, 472, 0, 903,
	473, 474, 475, 524, 935, 985, 0, 477, 476, 527,
	0, 0, 0, 0, 478, 479, 528, 480, 481, 482,
	853, 0, 0, 0, 0, 0, 851, 0, 0, 0,
	0, 0, 0, 849, 850, 908, 866, 867, 868, 2563,
	2564, 877, 878, 0, 0, 0, 876, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 959, 882, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 923, 902, 934, 234, 892,
	933, 932, 0, 235, 894, 893, 238, 239, 240, 884,
	958, 241, 995, 996, 490, 0, 242, 965, 0, 946,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	968, 258, 259, 949, 947, 948, 955, 951, 950, 954,
	260, 261, 262, 263, 937, 265, 930, 929, 855, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 928, 272,
	0, 273, 0, 274, 275, 0, 276, 861, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 986, 987, 873,
	217, 0, 0, 0, 0, 0, 287, 288, 289, 927,
	925, 926, 0, 292, 0, 293, 0, 0, 969, 294,
	295, 0, 296, 993, 0, 883, 297, 0, 298, 299,
	300, 301, 960, 961, 964, 354, 971, 302, 303, 0,
	304, 305, 904, 0, 0, 218, 306, 308, 315, 0,
	970, 309, 916, 907, 918, 920, 921, 922, 917, 0,
	909, 0, 316, 972, 962, 973, 317, 318, 319, 974,
	942, 943, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 994, 975, 330, 331, 976, 0,
	332, 333, 953, 952, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 896, 344, 977, 347,
	348, 351, 350, 978, 349, 852, 219, 979, 352, 874,
	963, 353, 931, 355, 356, 0, 905, 358, 906, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 980,
	366, 981, 988, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 989, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 924,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 982,
	403, 404, 405, 406, 862, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 0, 424, 425, 897, 898,
	900, 901, 420, 426, 427, 428, 956, 429, 409, 410,
	430, 431, 983, 432, 433, 919, 899, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 967, 441, 442, 443,
	990, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 895, 0, 455, 938, 939, 940, 941, 0,
	462, 0, 456, 457, 991, 458, 992, 872, 459, 460,
	461, 0, 463, 464, 0, 856, 465, 466, 467, 468,
	469, 471, 957, 472, 0, 903, 473, 474, 475, 524,
	935, 985, 0, 477, 476, 527, 0, 0, 0, 0,
	478, 479, 528, 480, 481, 482, 853, 0, 0, 0,
	0, 0, 851, 0, 0, 0, 0, 0, 0, 849,
	850, 908, 866, 867, 868, 2561, 2562, 877, 878, 0,
	0, 0, 876, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	959, 882, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 923, 902, 934, 234, 892, 933, 932, 0, 235,
	894, 893, 238, 239, 240, 884, 958, 241, 995, 996,
	490, 0, 242, 965, 0, 946, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 968, 258, 259, 949,
	947, 948, 955, 951, 950, 954, 260, 261, 262, 263,
	937, 265, 930, 929, 855, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 928, 272, 0, 273, 0, 274,
	275, 0, 276, 861, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 986, 987, 873, 217, 0, 0, 0,
	0, 0, 287, 288, 289, 927, 925, 926, 0, 292,
	0, 293, 0, 0, 969, 294, 295, 0, 296, 993,
	0, 883, 297, 0, 298, 299, 300, 301, 960, 961,
	964, 354, 971, 302, 303, 0, 304, 305, 904, 0,
	0, 218, 306, 308, 315, 0, 970, 309, 916, 907,
	918, 920, 921, 922, 917, 0, 909, 0, 316, 972,
	962, 973, 317, 318, 319, 974, 942, 943, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	994, 975, 330, 331, 976, 0, 332, 333, 953, 952,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 896, 344, 977, 347, 348, 351, 350, 978,
	349, 852, 219, 979, 352, 874, 963, 353, 931, 355,
	356, 0, 905, 358, 906, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 980, 366, 981, 988, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 989, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 924, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 982, 403, 404, 405, 406,
	862, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 897, 898, 900, 901, 420, 426,
	427, 428, 956, 429, 409, 410, 430, 431, 983, 432,
	433, 919, 899, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 967, 441, 442, 443, 990, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 895, 0,
	455, 938, 939, 940, 941, 0, 462, 0, 456, 457,
	991, 458, 992, 872, 459, 460, 461, 0, 463, 464,
	0, 856, 465, 466, 467, 468, 469, 471, 957, 472,
	0, 903, 473, 474, 475, 524, 935, 985, 0, 477,
	476, 527, 0, 0, 0, 0, 478, 479, 528, 480,
	481, 482, 853, 0, 0, 0, 0, 0, 851, 0,
	0, 0, 0, 0, 0, 849, 850, 908, 866, 867,
	868, 864, 865, 877, 878, 0, 0, 0, 876, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 959, 882, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 923, 902, 934,
	234, 892, 933, 932, 0, 235, 894, 893, 238, 239,
	240, 884, 958, 241, 995, 996, 490, 0, 242, 965,
	0, 946, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 968, 258, 259, 949, 947, 948, 955, 951,
	950, 954, 260, 261, 262, 263, 937, 265, 930, 929,
	855, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	928, 272, 0, 273, 0, 274, 275, 0, 276, 861,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 986,
	987, 873, 217, 0, 0, 0, 0, 0, 287, 288,
	289, 927, 925, 926, 0, 292, 0, 293, 0, 0,
	969, 294, 295, 0, 296, 993, 0, 883, 297, 0,
	298, 299, 300, 301, 960, 961, 964, 354, 971, 302,
	303, 0, 304, 305, 904, 0, 0, 218, 306, 308,
	315, 0, 970, 309, 916, 907, 918, 920, 921, 922,
	917, 0, 909, 0, 316, 972, 962, 973, 317, 318,
	319, 974, 942, 943, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 994, 975, 330, 331,
	976, 0, 332, 333, 953, 952, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 896, 344,
	977, 347, 348, 351, 350, 978, 349, 852, 219, 979,
	352, 874, 963, 353, 931, 355, 356, 0, 905, 358,
	906, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 980, 366, 981, 988, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 989, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 924, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 982, 403, 404, 405, 406, 862, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	897, 898, 900, 901, 420, 426, 427, 428, 956, 429,
	409, 410, 430, 431, 983, 432, 433, 919, 899, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 967, 441,
	442, 443, 990, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 895, 0, 455, 938, 939, 940,
	941, 0, 462, 0, 456, 457, 991, 458, 992, 872,
	459, 460, 461, 0, 463, 464, 0, 856, 465, 466,
	467, 468, 469, 471, 957, 472, 0, 903, 473, 474,
	475, 524, 935, 985, 0, 477, 476, 527, 0, 0,
	0, 0, 478, 479, 528, 480, 481, 482, 853, 0,
	0, 0, 0, 0, 851, 0, 0, 0, 0, 0,
	0, 2029, 2030, 908, 866, 867, 868, 864, 865, 877,
	878, 0, 0, 0, 876, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 959, 882, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 923, 902, 934, 234, 892, 933, 932,
	0, 235, 894, 893, 238, 239, 240, 884, 958, 241,
	995, 996, 490, 0, 242, 965, 0, 946, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 968, 258,
	259, 949, 947, 948, 955, 951, 950, 954, 260, 261,
	262, 263, 937, 265, 930, 929, 0, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 928, 272, 0, 273,
	0, 274, 275, 0, 276, 861, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 986, 987, 873, 217, 0,
	0, 0, 0, 0, 287, 288, 289, 927, 925, 926,
	0, 292, 0, 293, 0, 0, 969, 294, 295, 0,
	296, 993, 0, 883, 297, 0, 298, 299, 300, 301,
	960, 961, 964, 354, 971, 302, 303, 0, 304, 305,
	904, 0, 0, 218, 306, 308, 315, 0, 970, 309,
	916, 907, 918, 920, 921, 922, 917, 0, 909, 0,
	316, 972, 962, 973, 317, 318, 319, 974, 942, 943,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 994, 975, 330, 331, 976, 0, 332, 333,
	953, 952, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 896, 344, 977, 347, 348, 351,
	350, 978, 349, 0, 219, 979, 352, 874, 963, 353,
	931, 355, 356, 0, 905, 358, 906, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 980, 366, 981,
	988, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 989, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 924, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 982, 403, 404,
	405, 406, 862, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 897, 898, 900, 901,
	420, 426, 427, 428, 956, 429, 409, 410, 430, 431,
	983, 432, 433, 919, 899, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 967, 441, 442, 443, 990, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	895, 0, 455, 938, 939, 940, 941, 0, 462, 0,
	456, 457, 991, 458, 992, 872, 459, 460, 461, 0,
	463, 464, 0, 0, 465, 466, 467, 468, 469, 471,
	957, 472, 0, 903, 473, 474, 475, 524, 935, 985,
	0, 477, 476, 527, 0, 0, 0, 0, 478, 479,
	528, 480, 481, 482, 0, 0, 0, 0, 0, 0,
	2215, 0, 0, 0, 0, 0, 0, 2213, 2214, 908,
	866, 867, 868, 864, 865, 877, 878, 0, 0, 0,
	876, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 959, 882,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 923,
	902, 934, 234, 892, 933, 932, 0, 235, 894, 893,
	238, 239, 240, 884, 958, 241, 995, 996, 490, 0,
	242, 965, 0, 946, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 968, 258, 259, 949, 947, 948,
	955, 951, 950, 954, 260, 261, 262, 263, 937, 265,
	930, 929, 0, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 928, 272, 0, 273, 0, 274, 275, 0,
	276, 861, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 986, 987, 873, 217, 0, 0, 0, 0, 0,
	287, 288, 289, 927, 925, 926, 0, 292, 0, 293,
	0, 0, 969, 294, 295, 0, 296, 993, 0, 883,
	297, 0, 298, 299, 300, 301, 960, 961, 964, 354,
	971, 302, 303, 0, 304, 305, 904, 0, 0, 218,
	306, 308, 315, 0, 970, 309, 916, 907, 918, 920,
	921, 922, 917, 0, 909, 0, 316, 972, 962, 973,
	317, 318, 319, 974, 942, 943, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 994, 975,
	330, 331, 976, 0, 332, 333, 953, 952, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	896, 344, 977, 347, 348, 351, 350, 978, 349, 0,
	219, 979, 352, 874, 963, 353, 931, 355, 356, 0,
	905, 358, 906, 0, 0, 361, 362, 363, 0, 0,
	364, 365, 510, 980, 366, 981, 988, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 989,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 924, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 982, 403, 404, 405, 406, 2556, 2557,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 897, 898, 900, 901, 420, 426, 427, 428,
	956, 429, 409, 410, 430, 431, 983, 432, 433, 919,
	899, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	967, 441, 442, 443, 990, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 895, 0, 455, 938,
	939, 940, 941, 0, 462, 0, 456, 457, 991, 458,
	992, 872, 459, 460, 461, 0, 463, 464, 0, 0,
	465, 466, 467, 468, 469, 471, 957, 472, 0, 903,
	473, 474, 475, 524, 935, 985, 0, 477, 476, 527,
	0, 0, 0, 0, 478, 479, 528, 480, 481, 482,
	908, 866, 867, 868, 864, 865, 877, 0, 0, 0,
	0, 0, 0, 1775, 1776, 0, 0, 220, 221, 222,
	223, 224, 878, 225, 0, 0, 876, 0, 0, 959,
	882, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	923, 902, 934, 234, 892, 933, 932, 0, 235, 894,
	893, 238, 239, 240, 0, 958, 241, 995, 996, 490,
	0, 242, 965, 0, 946, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 968, 258, 259, 949, 947,
	948, 955, 951, 950, 954, 260, 261, 262, 263, 937,
	265, 930, 929, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 928, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 986, 987, 873, 217, 0, 0, 0, 0,
	0, 287, 288, 289, 927, 925, 926, 0, 292, 0,
	293, 0, 0, 969, 294, 295, 0, 296, 993, 0,
	883, 297, 0, 298, 299, 300, 301, 960, 961, 964,
	354, 971, 302, 303, 0, 304, 305, 904, 0, 0,
	218, 306, 308, 315, 0, 970, 309, 916, 907, 918,
	920, 921, 922, 917, 0, 909, 0, 316, 972, 962,
	973, 317, 318, 319, 974, 942, 943, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 994,
	975, 330, 331, 976, 0, 332, 333, 953, 952, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 896, 344, 977, 347, 348, 351, 350, 978, 349,
	0, 219, 979, 352, 874, 963, 353, 931, 355, 356,
	0, 905, 358, 906, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 980, 366, 981, 988, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	989, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 924, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 982, 403, 404, 405, 406, 862,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 897, 898, 900, 901, 420, 426, 427,
	428, 956, 429, 409, 410, 430, 431, 983, 432, 433,
	919, 899, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 967, 441, 442, 443, 990, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 895, 0, 455,
	938, 939, 940, 941, 0, 462, 0, 456, 457, 991,
	458, 992, 872, 459, 460, 461, 0, 463, 464, 0,
	0, 465, 466, 467, 468, 469, 471, 957, 472, 0,
	903, 473, 474, 475, 524, 935, 985, 0, 477, 476,
	527, 0, 0, 0, 0, 478, 479, 528, 480, 481,
	482, 908, 866, 867, 868, 864, 865, 877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 878, 225, 0, 0, 876, 0, 0,
	959, 882, 0, 0, 0, 226, 228, 227, 229, 230,
	0, 923, 902, 934, 234, 892, 933, 932, 0, 235,
	894, 893, 238, 239, 240, 884, 958, 241, 995, 996,
	490, 0, 242, 965, 0, 946, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 968, 258, 3650, 949,
	947, 948, 955, 951, 950, 954, 260, 261, 262, 263,
	937, 265, 930, 929, 855, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 928, 272, 0, 273, 0, 274,
	275, 0, 276, 861, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 986, 987, 873, 217, 0, 0, 0,
	0, 0, 287, 288, 289, 927, 925, 926, 0, 292,
	0, 293, 0, 0, 969, 294, 295, 0, 296, 993,
	0, 883, 297, 0, 298, 299, 300, 301, 960, 961,
	964, 354, 0, 302, 303, 0, 304, 305, 904, 0,
	0, 218, 306, 308, 315, 0, 970, 309, 916, 907,
	918, 920, 921, 922, 917, 0, 909, 0, 316, 0,
	962, 0, 317, 318, 319, 974, 942, 943, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	994, 975, 330, 331, 0, 0, 332, 333, 953, 952,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 896, 344, 977, 347, 348, 351, 350, 978,
	349, 852, 219, 0, 352, 874, 963, 353, 931, 355,
	356, 0, 905, 358, 906, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 980, 366, 981, 988, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 989, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 924, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 982, 403, 404, 405, 406,
	862, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 897, 898, 900, 901, 420, 426,
	427, 428, 956, 429, 409, 410, 430, 431, 0, 432,
	433, 919, 899, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 967, 441, 442, 443, 990, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 895, 0,
	455, 938, 939, 940, 941, 0, 462, 0, 456, 457,
	991, 458, 992, 872, 459, 460, 461, 0, 3649, 464,
	0, 856, 465, 466, 467, 468, 469, 471, 957, 472,
	0, 903, 473, 474, 475, 524, 935, 985, 0, 477,
	476, 527, 0, 0, 0, 0, 478, 479, 528, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	842, 0, 1033, 0, 0, 849, 850, 0, 0, 0,
	0, 0, 0, 0, 878, 0, 0, 0, 876, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 485, 231, 486, 234, 232, 233, 487, 0,
	235, 236, 237, 238, 239, 240, 0, 958, 241, 488,
	489, 490, 0, 242, 965, 0, 946, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 968, 258, 259,
	949, 947, 948, 955, 951, 950, 954, 260, 261, 262,
	263, 264, 265, 492, 493, 0, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 276, 494, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 986, 987, 0, 217, 0, 0,
	0, 0, 0, 287, 288, 289, 497, 290, 291, 0,
	292, 0, 293, 0, 0, 969, 294, 295, 0, 296,
	993, 0, 499, 297, 0, 298, 299, 300, 301, 960,
	961, 964, 354, 971, 302, 303, 0, 304, 305, 307,
	0, 0, 218, 306, 308, 315, 0, 970, 309, 503,
	311, 310, 312, 313, 314, 504, 0, 505, 0, 316,
	972, 962, 973, 317, 318, 319, 974, 320, 321, 0,
	0, 322, 323, 324, 325, 326, 1019, 328, 327, 0,
	329, 994, 975, 330, 331, 976, 0, 332, 333, 953,
	952, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 977, 347, 348, 351, 350,
	978, 349, 0, 219, 979, 352, 0, 963, 353, 509,
	355, 356, 0, 357, 358, 359, 0, 1025, 361, 362,
	363, 0, 0, 364, 365, 510, 980, 366, 981, 988,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 989, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 514, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 982, 403, 404, 405,
	406, 515, 1027, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 183, 424, 425, 419, 421, 422, 423, 420,
	426, 427, 428, 956, 429, 409, 410, 430, 431, 983,
	432, 433, 516, 434, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 445, 441, 442, 443, 990, 0, 447,
	448, 446, 185, 449, 450, 451, 452, 453, 281, 454,
	0, 455, 518, 519, 520, 521, 0, 462, 0, 456,
	457, 991, 458, 992, 0, 459, 460, 461, 0, 463,
	464, 0, 0, 465, 466, 467, 468, 469, 471, 957,
	472, 0, 470, 473, 474, 475, 1346, 525, 526, 0,
	477, 476, 527, 1033, 0, 0, 177, 478, 479, 528,
	480, 481, 482, 0, 178, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 959, 1023, 0, 1645, 0, 226, 228, 227,
	229, 230, 484, 485, 231, 486, 234, 232, 233, 487,
	0, 235, 236, 237, 238, 239, 240, 0, 958, 241,
	488, 489, 490, 0, 242, 965, 0, 946, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 968, 258,
	259, 949, 947, 948, 955, 951, 950, 954, 260, 261,
	262, 263, 264, 265, 492, 493, 0, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 986, 987, 0, 217, 0,
	0, 0, 0, 0, 287, 288, 289, 497, 290, 291,
	0, 292, 0, 293, 0, 0, 969, 294, 295, 0,
	296, 993, 0, 499, 297, 0, 298, 299, 300, 301,
	960, 961, 964, 354, 971, 302, 303, 0, 304, 305,
	307, 0, 0, 218, 306, 308, 315, 0, 970, 309,
	503, 311, 310, 312, 313, 314, 504, 0, 505, 0,
	316, 972, 962, 973, 317, 318, 319, 974, 320, 321,
	0, 0, 322, 323, 324, 325, 326, 1019, 328, 327,
	0, 329, 994, 975, 330, 331, 976, 0, 332, 333,
	953, 952, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 977, 347, 348, 351,
	350, 978, 349, 0, 219, 979, 352, 0, 963, 353,
	509, 355, 356, 0, 357, 358, 359, 0, 1025, 361,
	362, 363, 0, 0, 364, 365, 510, 980, 366, 981,
	988, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 989, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 514, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 982, 403, 404,
	405, 406, 515, 1027, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 183, 424, 425, 419, 421, 422, 423,
	420, 426, 427, 428, 956, 429, 409, 410, 430, 431,
	983, 432, 433, 516, 434, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 445, 441, 442, 443, 990, 0,
	447, 448, 446, 185, 449, 450, 451, 452, 453, 281,
	454, 0, 455, 518, 519, 520, 521, 0, 462, 0,
	456, 457, 991, 458, 992, 0, 459, 460, 461, 0,
	463, 464, 0, 0, 465, 466, 467, 468, 469, 471,
	957, 472, 0, 470, 473, 474, 475, 1346, 525, 526,
	0, 477, 476, 527, 2709, 0, 1033, 177, 478, 479,
	528, 480, 481, 482, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 1023, 959, 1645, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 485, 231, 486, 234,
	232, 233, 487, 0, 235, 236, 237, 238, 239, 240,
	0, 958, 241, 488, 489, 490, 0, 242, 965, 0,
	946, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 968, 258, 259, 949, 947, 948, 955, 951, 950,
	954, 260, 261, 262, 263, 264, 265, 492, 493, 0,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 276, 494, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 986, 987,
	0, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	497, 290, 291, 0, 292, 0, 293, 0, 0, 969,
	294, 295, 0, 296, 993, 0, 499, 297, 0, 298,
	299, 300, 301, 960, 961, 964, 354, 971, 302, 303,
	0, 304, 305, 307, 0, 0, 218, 306, 308, 315,
	0, 970, 309, 503, 311, 310, 312, 313, 314, 504,
	0, 505, 0, 316, 972, 962, 973, 317, 318, 319,
	974, 320, 321, 0, 0, 322, 323, 324, 325, 326,
	1019, 328, 327, 0, 329, 994, 975, 330, 331, 976,
	0, 332, 333, 953, 952, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 977,
	347, 348, 351, 350, 978, 349, 0, 219, 979, 352,
	0, 963, 353, 509, 355, 356, 0, 357, 358, 359,
	0, 1025, 361, 362, 363, 0, 0, 364, 365, 510,
	980, 366, 981, 988, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 989, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	514, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	982, 403, 404, 405, 406, 515, 1027, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 419,
	421, 422, 423, 420, 426, 427, 428, 956, 429, 409,
	410, 430, 431, 983, 432, 433, 516, 434, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 445, 441, 442,
	443, 990, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 454, 0, 455, 518, 519, 520, 521,
	0, 462, 0, 456, 457, 991, 458, 992, 0, 459,
	460, 461, 0, 463, 464, 0, 0, 465, 466, 467,
	468, 469, 471, 957, 472, 0, 470, 473, 474, 475,
	524, 525, 526, 0, 477, 476, 527, 1015, 0, 1033,
	0, 478, 479, 528, 480, 481, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 1023, 959, 1021,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 485,
	231, 486, 234, 232, 233, 487, 0, 235, 236, 237,
	238, 239, 240, 0, 958, 241, 488, 489, 490, 0,
	242, 965, 0, 946, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 968, 258, 259, 949, 947, 948,
	955, 951, 950, 954, 260, 261, 262, 263, 264, 265,
	492, 493, 0, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	276, 494, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 986, 987, 0, 217, 0, 0, 0, 0, 0,
	287, 288, 289, 497, 290, 291, 0, 292, 0, 293,
	0, 0, 969, 294, 295, 0, 296, 993, 0, 499,
	297, 0, 298, 299, 300, 301, 960, 961, 964, 354,
	971, 302, 303, 0, 304, 305, 307, 0, 0, 218,
	306, 308, 315, 0, 970, 309, 503, 311, 310, 312,
	313, 314, 504, 0, 505, 0, 316, 972, 962, 973,
	317, 318, 319, 974, 320, 321, 0, 0, 322, 323,
	324, 325, 326, 1019, 328, 327, 0, 329, 994, 975,
	330, 331, 976, 0, 332, 333, 953, 952, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 977, 347, 348, 351, 350, 978, 349, 0,
	219, 979, 352, 0, 963, 353, 509, 355, 356, 0,
	357, 358, 359, 0, 1025, 361, 362, 363, 0, 0,
	364, 365, 510, 980, 366, 981, 988, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 989,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 514, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 982, 403, 404, 405, 406, 515, 1027,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 419, 421, 422, 423, 420, 426, 427, 428,
	956, 429, 409, 410, 430, 431, 983, 432, 433, 516,
	434, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	445, 441, 442, 443, 990, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 454, 0, 455, 518,
	519, 520, 521, 0, 462, 0, 456, 457, 991, 458,
	992, 0, 459, 460, 461, 0, 463, 464, 0, 0,
	465, 466, 467, 468, 469, 471, 957, 472, 0, 470,
	473, 474, 475, 524, 525, 526, 0, 477, 476, 527,
	1033, 0, 0, 0, 478, 479, 528, 480, 481, 482,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 959,
	1023, 0, 1021, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 958, 241, 488, 489, 490,
	0, 242, 965, 0, 946, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 968, 258, 259, 949, 947,
	948, 955, 951, 950, 954, 260, 261, 262, 263, 264,
	265, 492, 493, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 986, 987, 0, 217, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 0, 0, 969, 294, 295, 0, 296, 993, 0,
	499, 297, 0, 298, 299, 300, 301, 960, 961, 964,
	354, 971, 302, 303, 0, 304, 305, 307, 0, 0,
	218, 306, 308, 315, 0, 970, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 316, 972, 962,
	973, 317, 318, 319, 974, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 1019, 328, 327, 0, 329, 994,
	975, 330, 331, 976, 0, 332, 333, 953, 952, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 977, 347, 348, 351, 350, 978, 349,
	0, 219, 979, 352, 0, 963, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 1025, 361, 362, 363, 0,
	0, 364, 365, 510, 980, 366, 981, 988, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	989, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 982, 403, 404, 405, 406, 515,
	1027, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 956, 429, 409, 410, 430, 431, 983, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 990, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	518, 519, 520, 521, 0, 462, 0, 456, 457, 991,
	458, 992, 0, 459, 460, 461, 0, 463, 464, 0,
	0, 465, 466, 467, 468, 469, 471, 957, 472, 0,
	470, 473, 474, 475, 524, 525, 526, 0, 477, 476,
	527, 1033, 0, 0, 0, 478, 479, 528, 480, 481,
	482, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	959, 1023, 0, 1021, 0, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 0, 235,
	236, 237, 238, 239, 240, 0, 958, 241, 488, 489,
	490, 0, 242, 965, 0, 946, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 968, 258, 259, 949,
	947, 948, 955, 951, 950, 954, 260, 261, 262, 263,
	264, 265, 492, 493, 0, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 986, 987, 0, 217, 0, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	0, 293, 0, 0, 969, 294, 295, 0, 296, 993,
	0, 499, 297, 0, 298, 299, 300, 301, 960, 961,
	964, 354, 971, 302, 303, 0, 304, 305, 307, 0,
	0, 218, 306, 308, 315, 0, 970, 309, 503, 311,
	310, 312, 313, 314, 504, 0, 505, 0, 316, 972,
	962, 973, 317, 318, 319, 974, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	994, 975, 330, 331, 976, 0, 332, 333, 953, 952,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 977, 347, 348, 351, 350, 978,
	349, 0, 219, 979, 352, 0, 963, 353, 509, 355,
	356, 0, 357, 358, 359, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 980, 366, 981, 988, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 989, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 982, 403, 404, 405, 406,
	515, 1027, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 956, 429, 409, 410, 430, 431, 983, 432,
	433, 516, 434, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 990, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 454, 0,
	455, 518, 519, 520, 521, 0, 462, 0, 456, 457,
	991, 458, 992, 0, 459, 460, 461, 0, 463, 464,
	0, 0, 465, 466, 467, 468, 469, 471, 957, 472,
	0, 470, 473, 474, 475, 524, 525, 526, 0, 477,
	476, 527, 842, 0, 1204, 0, 478, 479, 528, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 483, 1546, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 0,
	241, 488, 489, 490, 0, 242, 491, 0, 1096, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 968,
	258, 259, 0, 0, 0, 0, 0, 0, 0, 260,
	261, 262, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 0, 217,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 969, 294, 295,
	0, 296, 498, 0, 499, 297, 0, 298, 299, 300,
	301, 500, 501, 502, 354, 971, 302, 303, 0, 304,
	305, 307, 0, 0, 0, 306, 308, 315, 0, 970,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	0, 316, 972, 506, 973, 317, 318, 319, 974, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 507, 975, 330, 331, 976, 0, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 977, 347, 348,
	351, 350, 978, 349, 0, 0, 979, 352, 0, 508,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 980, 366,
	981, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 512, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 982, 403,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 183, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 0, 429, 409, 410, 430,
	431, 983, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	0, 447, 448, 446, 185, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 518, 519, 520, 521, 0, 462,
	0, 456, 457, 522, 458, 523, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 0, 472, 0, 470, 473, 474, 475, 1346, 525,
	526, 0, 477, 476, 527, 1343, 0, 1204, 177, 478,
	479, 528, 480, 481, 482, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 152, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 0, 242, 491,
	0, 1096, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 968, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 262, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 217, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	969, 294, 295, 0, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 500, 501, 502, 354, 971, 302,
	303, 0, 304, 305, 307, 0, 0, 0, 306, 308,
	315, 0, 970, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 972, 506, 973, 317, 318,
	319, 974, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 975, 330, 331,
	976, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	977, 347, 348, 351, 350, 978, 349, 0, 0, 979,
	352, 0, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 980, 366, 981, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 982, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 183, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 0, 429,
	409, 410, 430, 431, 983, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 185, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 1346, 525, 526, 0, 477, 476, 527, 0, 0,
	0, 177, 478, 479, 528, 480, 481, 482, 0, 178,
	0, 0, 0, 0, 1204, 1203, 0, 0, 0, 0,
	1201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 0,
	241, 488, 489, 490, 0, 242, 491, 0, 1096, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 968,
	258, 259, 0, 0, 0, 0, 0, 0, 0, 260,
	261, 262, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 0, 217,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 969, 294, 295,
	0, 296, 498, 0, 499, 297, 0, 298, 299, 300,
	301, 500, 501, 502, 354, 971, 302, 303, 0, 304,
	305, 307, 0, 0, 0, 306, 308, 315, 0, 970,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	0, 316, 972, 506, 973, 317, 318, 319, 974, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 507, 975, 330, 331, 976, 0, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 977, 347, 348,
	351, 350, 978, 349, 0, 0, 979, 352, 0, 508,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 980, 366,
	981, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 512, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 982, 403,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 0, 429, 409, 410, 430,
	431, 983, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 518, 519, 520, 521, 0, 462,
	0, 456, 457, 522, 458, 523, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 0, 472, 0, 470, 473, 474, 475, 524, 525,
	526, 0, 477, 476, 527, 0, 0, 0, 0, 478,
	479, 528, 480, 481, 482, 1204, 1203, 0, 0, 0,
	0, 1201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 2913, 225, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 0, 235, 236, 237, 238, 239, 240, 0,
	0, 241, 488, 489, 490, 0, 242, 491, 0, 1096,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	968, 258, 259, 0, 0, 0, 0, 0, 0, 0,
	260, 261, 262, 263, 264, 265, 492, 493, 0, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 495, 496, 0,
	217, 0, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 0, 293, 0, 0, 969, 294,
	295, 0, 296, 498, 0, 499, 297, 0, 298, 299,
	300, 301, 500, 501, 502, 354, 971, 302, 303, 0,
	304, 305, 307, 0, 0, 0, 306, 308, 315, 0,
	970, 309, 503, 311, 310, 312, 313, 314, 504, 0,
	505, 0, 316, 972, 506, 973, 317, 318, 319, 974,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 507, 975, 330, 331, 976, 0,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 977, 347,
	348, 351, 350, 978, 349, 0, 0, 979, 352, 0,
	508, 353, 509, 355, 356, 0, 357, 358, 359, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 980,
	366, 981, 511, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 512, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 982,
	403, 404, 405, 406, 515, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 0, 424, 425, 419, 421,
	422, 423, 420, 426, 427, 428, 0, 429, 409, 410,
	430, 431, 983, 432, 433, 516, 434, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	517, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 454, 0, 455, 518, 519, 520, 521, 0,
	462, 0, 456, 457, 522, 458, 523, 0, 459, 460,
	461, 0, 463, 464, 0, 0, 465, 466, 467, 468,
	469, 471, 0, 472, 0, 470, 473, 474, 475, 524,
	525, 526, 0, 477, 476, 527, 0, 0, 0, 0,
	478, 479, 528, 480, 481, 482, 1204, 1203, 0, 0,
	0, 0, 1201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 1213, 225,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 485, 231, 486, 234,
	232, 233, 487, 0, 235, 236, 237, 238, 239, 240,
	0, 0, 241, 488, 489, 490, 0, 242, 491, 0,
	1096, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 968, 258, 259, 0, 0, 0, 0, 0, 0,
	0, 260, 261, 262, 263, 264, 265, 492, 493, 0,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 276, 494, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 495, 496,
	0, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	497, 290, 291, 0, 292, 0, 293, 0, 0, 969,
	294, 295, 0, 296, 498, 0, 499, 297, 0, 298,
	299, 300, 301, 500, 501, 502, 354, 971, 302, 303,
	0, 304, 305, 307, 0, 0, 0, 306, 308, 315,
	0, 970, 309, 503, 311, 310, 312, 313, 314, 504,
	0, 505, 0, 316, 972, 506, 973, 317, 318, 319,
	974, 320, 321, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 507, 975, 330, 331, 976,
	0, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 977,
	347, 348, 351, 350, 978, 349, 0, 0, 979, 352,
	0, 508, 353, 509, 355, 356, 0, 357, 358, 359,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	980, 366, 981, 511, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 512, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	514, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	982, 403, 404, 405, 406, 515, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 419,
	421, 422, 423, 420, 426, 427, 428, 0, 429, 409,
	410, 430, 431, 983, 432, 433, 516, 434, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 445, 441, 442,
	443, 517, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 454, 0, 455, 518, 519, 520, 521,
	0, 462, 0, 456, 457, 522, 458, 523, 0, 459,
	460, 461, 0, 463, 464, 0, 0, 465, 466, 467,
	468, 469, 471, 0, 472, 0, 470, 473, 474, 475,
	524, 525, 526, 0, 477, 476, 527, 1033, 0, 0,
	0, 478, 479, 528, 480, 481, 482, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 959, 0, 0, 1352,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 958, 241, 488, 489, 490, 0, 242, 965,
	0, 946, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 968, 258, 259, 949, 947, 948, 955, 951,
	950, 954, 260, 261, 262, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 986,
	987, 0, 217, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	969, 294, 295, 0, 296, 993, 0, 499, 297, 0,
	298, 299, 300, 301, 960, 961, 964, 354, 971, 302,
	303, 0, 304, 305, 307, 0, 0, 218, 306, 308,
	315, 0, 970, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 972, 962, 973, 317, 318,
	319, 974, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 994, 975, 330, 331,
	976, 0, 332, 333, 953, 952, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	977, 347, 348, 351, 350, 978, 349, 0, 219, 979,
	352, 0, 963, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 980, 366, 981, 988, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 989, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 982, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 956, 429,
	409, 410, 430, 431, 983, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 990, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 991, 458, 992, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 957, 472, 0, 470, 473, 474,
	475, 524, 525, 526, 0, 477, 476, 527, 842, 0,
	214, 0, 478, 479, 528, 480, 481, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 0, 241, 488, 489, 490,
	0, 242, 491, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 0, 258, 259, 0, 0,
	0, 0, 0, 0, 0, 260, 261, 262, 263, 264,
	265, 492, 493, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 0, 0, 0, 294, 295, 0, 296, 498, 0,
	499, 297, 0, 298, 299, 300, 301, 500, 501, 502,
	354, 0, 302, 303, 0, 304, 305, 307, 0, 0,
	0, 306, 308, 315, 0, 0, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 316, 0, 506,
	0, 317, 318, 319, 0, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 507,
	0, 330, 331, 0, 0, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 350, 0, 349,
	0, 0, 0, 352, 0, 508, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 0, 366, 0, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	512, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	183, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 0, 429, 409, 410, 430, 431, 0, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 0, 447, 448, 446,
	185, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	518, 519, 520, 521, 0, 462, 0, 456, 457, 522,
	458, 523, 0, 459, 460, 461, 0, 463, 464, 0,
	0, 465, 466, 467, 468, 469, 471, 0, 472, 0,
	470, 473, 474, 475, 1346, 525, 526, 0, 477, 476,
	527, 214, 0, 0, 177, 478, 479, 528, 480, 481,
	482, 0, 178, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	483, 0, 0, 152, 0, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 0, 235,
	236, 237, 238, 239, 240, 0, 0, 241, 488, 489,
	490, 0, 242, 491, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 0, 258, 259, 0,
	0, 0, 0, 0, 0, 0, 260, 261, 262, 263,
	264, 265, 492, 493, 0, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 0, 217, 0, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	0, 293, 0, 0, 0, 294, 295, 0, 296, 498,
	0, 499, 297, 0, 298, 299, 300, 301, 500, 501,
	502, 354, 0, 302, 303, 0, 304, 305, 307, 0,
	0, 218, 306, 308, 315, 0, 0, 309, 503, 311,
	310, 312, 313, 314, 504, 0, 505, 0, 316, 0,
	506, 0, 317, 318, 319, 0, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	507, 0, 330, 331, 0, 0, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 350, 0,
	349, 0, 219, 0, 352, 0, 508, 353, 509, 355,
	356, 0, 357, 358, 359, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 0, 366, 0, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 512, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 0, 429, 409, 410, 430, 431, 0, 432,
	433, 516, 434, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 454, 0,
	455, 518, 519, 520, 521, 0, 462, 0, 456, 457,
	522, 458, 523, 0, 459, 460, 461, 0, 463, 464,
	0, 0, 465, 466, 467, 468, 469, 471, 0, 472,
	0, 470, 473, 474, 475, 524, 525, 526, 0, 477,
	476, 527, 1293, 0, 214, 0, 478, 479, 528, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 483, 1659, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 0,
	241, 488, 489, 490, 0, 242, 491, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 0,
	258, 259, 0, 0, 0, 0, 0, 0, 0, 260,
	261, 262, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 0, 217,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 0, 294, 295,
	0, 296, 498, 0, 499, 297, 0, 298, 299, 300,
	301, 500, 501, 502, 354, 0, 302, 303, 0, 304,
	305, 307, 0, 0, 218, 306, 308, 315, 0, 0,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	0, 316, 0, 506, 0, 317, 318, 319, 0, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 507, 0, 330, 331, 0, 0, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 350, 0, 349, 0, 219, 0, 352, 0, 508,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 0, 366,
	0, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 512, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 0, 429, 409, 410, 430,
	431, 0, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 518, 519, 520, 521, 0, 462,
	0, 456, 457, 522, 458, 523, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 0, 472, 0, 470, 473, 474, 475, 524, 525,
	526, 0, 477, 476, 527, 214, 0, 0, 0, 478,
	479, 528, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 483, 1297, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 0, 235, 236, 237, 238, 239, 240, 0,
	0, 241, 488, 489, 490, 0, 242, 491, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	0, 258, 259, 0, 0, 0, 0, 0, 0, 0,
	260, 261, 262, 263, 264, 265, 492, 493, 0, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 495, 496, 0,
	217, 0, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 0, 293, 0, 0, 0, 294,
	295, 0, 296, 498, 0, 499, 297, 0, 298, 299,
	300, 301, 500, 501, 502, 354, 0, 302, 303, 0,
	304, 305, 307, 0, 0, 218, 306, 308, 315, 0,
	0, 309, 503, 311, 310, 312, 313, 314, 504, 0,
	505, 0, 316, 0, 506, 0, 317, 318, 319, 0,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 507, 0, 330, 331, 0, 0,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 350, 0, 349, 0, 219, 0, 352, 0,
	508, 353, 509, 355, 356, 0, 357, 358, 359, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 0,
	366, 0, 511, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 512, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 515, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 0, 424, 425, 419, 421,
	422, 423, 420, 426, 427, 428, 0, 429, 409, 410,
	430, 431, 0, 432, 433, 516, 434, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	517, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 454, 0, 455, 518, 519, 520, 521, 0,
	462, 0, 456, 457, 522, 458, 523, 0, 459, 460,
	461, 0, 463, 464, 0, 0, 465, 466, 467, 468,
	469, 471, 0, 472, 0, 470, 473, 474, 475, 524,
	525, 526, 0, 477, 476, 527, 214, 0, 0, 0,
	478, 479, 528, 480, 481, 482, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 483, 2863, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 485, 231, 486, 234,
	232, 233, 487, 0, 235, 236, 237, 238, 239, 240,
	0, 0, 241, 488, 489, 490, 0, 242, 491, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 0, 258, 259, 0, 0, 0, 0, 0, 0,
	0, 260, 261, 262, 263, 264, 265, 492, 493, 0,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 276, 494, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 495, 496,
	0, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	497, 290, 291, 0, 292, 0, 293, 0, 0, 0,
	294, 295, 0, 296, 498, 0, 499, 297, 0, 298,
	299, 300, 301, 500, 501, 502, 354, 0, 302, 303,
	0, 304, 305, 307, 0, 0, 218, 306, 308, 315,
	0, 0, 309, 503, 311, 310, 312, 313, 314, 504,
	0, 505, 0, 316, 0, 506, 0, 317, 318, 319,
	0, 320, 321, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 507, 0, 330, 331, 0,
	0, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 0,
	347, 348, 351, 350, 0, 349, 0, 219, 0, 352,
	0, 508, 353, 509, 355, 356, 0, 357, 358, 359,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	0, 366, 0, 511, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 512, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	514, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 515, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 419,
	421, 422, 423, 420, 426, 427, 428, 0, 429, 409,
	410, 430, 431, 0, 432, 433, 516, 434, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 445, 441, 442,
	443, 517, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 454, 0, 455, 518, 519, 520, 521,
	0, 462, 0, 456, 457, 522, 458, 523, 0, 459,
	460, 461, 0, 463, 464, 0, 0, 465, 466, 467,
	468, 469, 471, 0, 472, 0, 470, 473, 474, 475,
	524, 525, 526, 0, 477, 476, 527, 214, 0, 0,
	0, 478, 479, 528, 480, 481, 482, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 1297, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 0, 242, 491,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 0, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 262, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	0, 294, 295, 0, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 500, 501, 502, 354, 0, 302,
	303, 0, 304, 305, 307, 0, 0, 0, 306, 308,
	315, 0, 0, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 0, 506, 0, 317, 318,
	319, 0, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 0, 330, 331,
	0, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 350, 0, 349, 0, 0, 0,
	352, 0, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 0, 366, 0, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 0, 429,
	409, 410, 430, 431, 0, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 524, 525, 526, 0, 477, 476, 527, 214, 0,
	0, 0, 478, 479, 528, 480, 481, 482, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 483, 0, 0,
	2461, 0, 226, 228, 227, 229, 230, 484, 485, 231,
	486, 234, 232, 233, 487, 0, 235, 236, 237, 238,
	239, 240, 0, 0, 241, 488, 489, 490, 0, 242,
	491, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 0, 258, 259, 0, 0, 0, 0,
	0, 0, 0, 260, 261, 262, 263, 264, 265, 492,
	493, 0, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 276,
	494, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	495, 496, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 497, 290, 291, 0, 292, 0, 293, 0,
	0, 0, 294, 295, 0, 296, 498, 0, 499, 297,
	0, 298, 299, 300, 301, 500, 501, 502, 354, 0,
	302, 303, 0, 304, 305, 307, 0, 0, 0, 306,
	308, 315, 0, 0, 309, 503, 311, 310, 312, 313,
	314, 504, 0, 505, 0, 316, 0, 506, 0, 317,
	318, 319, 0, 320, 321, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 507, 0, 330,
	331, 0, 0, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 350, 0, 349, 0, 0,
	0, 352, 0, 508, 353, 509, 355, 356, 0, 357,
	358, 359, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 0, 366, 0, 511, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 512, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 514, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 515, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 419, 421, 422, 423, 420, 426, 427, 428, 0,
	429, 409, 410, 430, 431, 0, 432, 433, 516, 434,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 445,
	441, 442, 443, 517, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 454, 0, 455, 518, 519,
	520, 521, 0, 462, 0, 456, 457, 522, 458, 523,
	0, 459, 460, 461, 0, 463, 464, 0, 0, 465,
	466, 467, 468, 469, 471, 0, 472, 0, 470, 473,
	474, 475, 524, 525, 526, 0, 477, 476, 527, 214,
	0, 0, 0, 478, 479, 528, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 483, 0,
	0, 3001, 0, 226, 228, 227, 229, 230, 484, 485,
	231, 486, 234, 232, 233, 487, 0, 235, 236, 237,
	238, 239, 240, 0, 0, 241, 488, 489, 490, 0,
	242, 491, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 0, 258, 259, 0, 0, 0,
	0, 0, 0, 0, 260, 261, 262, 263, 264, 265,
	492, 493, 0, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	276, 494, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 495, 496, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 497, 290, 291, 0, 292, 0, 293,
	0, 0, 0, 294, 295, 0, 296, 498, 0, 499,
	297, 0, 298, 299, 300, 301, 500, 501, 502, 354,
	0, 302, 303, 0, 304, 305, 307, 0, 0, 0,
	306, 308, 315, 0, 0, 309, 503, 311, 310, 312,
	313, 314, 504, 0, 505, 0, 316, 0, 506, 0,
	317, 318, 319, 0, 320, 321, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 507, 0,
	330, 331, 0, 0, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 350, 0, 349, 0,
	0, 0, 352, 0, 508, 353, 509, 355, 356, 0,
	357, 358, 359, 0, 0, 361, 362, 363, 0, 0,
	364, 365, 510, 0, 366, 0, 511, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 512,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 514, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 515, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 419, 421, 422, 423, 420, 426, 427, 428,
	0, 429, 409, 410, 430, 431, 0, 432, 433, 516,
	434, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	445, 441, 442, 443, 517, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 454, 0, 455, 518,
	519, 520, 521, 0, 462, 0, 456, 457, 522, 458,
	523, 0, 459, 460, 461, 0, 463, 464, 0, 0,
	465, 466, 467, 468, 469, 471, 0, 472, 0, 470,
	473, 474, 475, 524, 525, 526, 0, 477, 476, 527,
	710, 0, 600, 0, 478, 479, 528, 480, 481, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 483, 1934, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 485, 231, 486, 234, 232, 233, 487, 0,
	235, 236, 237, 238, 239, 240, 0, 0, 241, 488,
	489, 490, 0, 242, 491, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 0, 258, 259,
	0, 0, 0, 0, 0, 0, 0, 260, 261, 606,
	263, 264, 265, 492, 493, 0, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 276, 494, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 495, 496, 0, 217, 0, 0,
	0, 0, 0, 287, 288, 289, 497, 290, 291, 0,
	292, 0, 293, 0, 708, 0, 294, 295, 0, 296,
	498, 0, 499, 297, 0, 298, 299, 300, 301, 500,
	501, 502, 354, 0, 302, 303, 0, 304, 305, 307,
	0, 0, 218, 306, 308, 315, 0, 0, 309, 503,
	311, 310, 312, 313, 314, 504, 0, 505, 0, 316,
	0, 506, 0, 317, 318, 319, 0, 320, 321, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 507, 0, 330, 331, 0, 0, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 350,
	0, 349, 0, 219, 0, 352, 0, 508, 353, 509,
	355, 356, 0, 357, 358, 359, 0, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 0, 366, 0, 511,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 512, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 514, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 515, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 419, 421, 422, 423, 420,
	426, 427, 428, 0, 429, 409, 410, 430, 431, 0,
	432, 433, 516, 434, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 445, 441, 442, 443, 517, 0, 447,
	448, 446, 605, 449, 450, 451, 452, 453, 281, 454,
	0, 455, 518, 519, 520, 521, 0, 462, 0, 456,
	457, 522, 458, 523, 0, 459, 460, 461, 0, 463,
	464, 0, 0, 465, 466, 467, 468, 469, 471, 0,
	472, 0, 470, 473, 474, 475, 524, 525, 526, 0,
	477, 476, 527, 0, 599, 0, 600, 478, 479, 528,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 609, 225,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 485, 231, 486, 234,
	232, 233, 487, 0, 235, 236, 237, 238, 239, 240,
	0, 0, 241, 488, 489, 490, 0, 242, 491, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 0, 258, 259, 0, 0, 0, 0, 0, 0,
	0, 260, 261, 606, 263, 264, 265, 492, 493, 0,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 276, 494, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 495, 496,
	0, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	497, 290, 291, 0, 292, 0, 293, 0, 0, 0,
	294, 295, 0, 296, 498, 0, 499, 297, 0, 298,
	299, 300, 301, 500, 501, 502, 354, 0, 302, 303,
	0, 304, 305, 307, 0, 0, 218, 306, 308, 315,
	0, 0, 309, 503, 311, 310, 312, 313, 314, 504,
	0, 505, 0, 316, 0, 506, 0, 317, 318, 319,
	0, 320, 321, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 507, 0, 330, 331, 0,
	0, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 0,
	347, 348, 351, 350, 0, 349, 0, 219, 0, 352,
	0, 508, 353, 509, 355, 356, 0, 357, 358, 359,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	0, 366, 0, 511, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 512, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	514, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 515, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 419,
	421, 422, 423, 420, 426, 427, 428, 0, 429, 409,
	410, 430, 431, 0, 432, 433, 516, 434, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 445, 441, 442,
	443, 517, 0, 447, 448, 446, 605, 449, 450, 451,
	452, 453, 281, 454, 0, 455, 518, 519, 520, 521,
	597, 462, 0, 456, 457, 522, 458, 523, 0, 459,
	460, 461, 0, 463, 464, 0, 0, 465, 466, 467,
	468, 469, 471, 0, 472, 0, 470, 473, 474, 475,
	524, 525, 526, 0, 477, 476, 527, 0, 0, 0,
	0, 478, 479, 528, 480, 481, 482, 1204, 1203, 0,
	0, 0, 0, 1201, 0, 0, 0, 0, 0, 0,
	0, 0, 609, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 0, 242, 491,
	0, 1096, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 968, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 262, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 217, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	969, 294, 295, 0, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 500, 501, 502, 354, 971, 302,
	303, 0, 304, 305, 307, 0, 0, 0, 306, 308,
	315, 0, 970, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 972, 506, 973, 317, 318,
	319, 974, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 975, 330, 331,
	976, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	977, 347, 348, 351, 350, 978, 349, 0, 0, 979,
	352, 2843, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 980, 366, 981, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 982, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 0, 429,
	409, 410, 430, 431, 983, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 524, 525, 526, 600, 477, 476, 527, 0, 0,
	0, 0, 478, 479, 528, 480, 481, 482, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 0,
	241, 488, 489, 490, 0, 242, 491, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 0,
	258, 259, 0, 0, 0, 0, 0, 0, 0, 260,
	261, 606, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 0, 217,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 0, 294, 295,
	0, 296, 498, 0, 499, 297, 0, 298, 299, 300,
	301, 500, 501, 502, 354, 0, 302, 303, 0, 304,
	305, 307, 0, 0, 218, 306, 308, 315, 0, 0,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	0, 316, 0, 506, 0, 317, 318, 319, 0, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 507, 0, 330, 331, 0, 0, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 350, 0, 349, 0, 219, 0, 352, 0, 508,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 0, 366,
	0, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 512, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 0, 1968,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 0, 429, 409, 410, 430,
	431, 0, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	0, 447, 448, 446, 605, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 518, 519, 520, 521, 0, 462,
	0, 456, 457, 522, 458, 523, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 0, 472, 0, 470, 473, 474, 475, 524, 525,
	526, 0, 477, 476, 527, 600, 0, 0, 0, 478,
	479, 528, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	609, 0, 0, 0, 483, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 0, 235, 236, 237, 238, 239, 240, 0,
	0, 241, 488, 489, 490, 0, 242, 491, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	0, 258, 259, 0, 0, 0, 0, 0, 0, 0,
	260, 261, 606, 263, 264, 265, 492, 493, 0, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 495, 496, 0,
	217, 0, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 0, 293, 0, 0, 0, 294,
	295, 0, 296, 498, 0, 499, 297, 0, 298, 299,
	300, 301, 500, 501, 502, 354, 0, 302, 303, 0,
	304, 305, 307, 0, 0, 218, 306, 308, 315, 0,
	0, 309, 503, 311, 310, 312, 313, 314, 504, 0,
	505, 0, 316, 0, 506, 0, 317, 318, 319, 0,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 507, 0, 330, 331, 0, 0,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 350, 0, 349, 0, 219, 0, 352, 0,
	508, 353, 509, 355, 356, 0, 357, 358, 359, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 0,
	366, 0, 511, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 512, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 515, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 0, 424, 425, 419, 421,
	422, 423, 420, 426, 427, 428, 0, 429, 409, 410,
	430, 431, 0, 432, 433, 516, 434, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	517, 0, 447, 448, 446, 605, 449, 450, 451, 452,
	453, 281, 454, 0, 455, 518, 519, 520, 521, 0,
	462, 0, 456, 457, 522, 458, 523, 0, 459, 460,
	461, 0, 463, 464, 0, 0, 465, 466, 467, 468,
	469, 471, 0, 472, 0, 470, 473, 474, 475, 524,
	525, 526, 0, 477, 476, 527, 0, 0, 0, 0,
	478, 479, 528, 480, 481, 482, 1379, 0, 1204, 1203,
	0, 0, 0, 0, 1201, 0, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 485, 231,
	486, 234, 232, 233, 487, 0, 235, 236, 237, 238,
	239, 240, 0, 0, 241, 488, 489, 490, 0, 242,
	491, 0, 1096, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 968, 258, 259, 0, 0, 0, 0,
	0, 0, 0, 260, 261, 262, 263, 264, 265, 492,
	493, 0, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 276,
	494, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	495, 496, 0, 217, 0, 0, 0, 0, 0, 1378,
	288, 289, 497, 290, 291, 0, 292, 0, 293, 0,
	0, 969, 294, 295, 0, 296, 498, 0, 499, 297,
	0, 298, 299, 300, 301, 500, 501, 502, 354, 971,
	302, 303, 0, 304, 305, 307, 0, 0, 0, 306,
	308, 315, 0, 970, 309, 503, 311, 310, 312, 313,
	314, 504, 0, 505, 0, 316, 972, 506, 973, 317,
	318, 319, 974, 320, 321, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 507, 975, 330,
	331, 976, 0, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 977, 347, 348, 351, 350, 978, 349, 0, 0,
	979, 352, 0, 508, 353, 509, 355, 356, 0, 357,
	358, 359, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 980, 366, 981, 511, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 512, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	1377, 386, 514, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 982, 403, 404, 405, 406, 515, 407, 0,
	408, 412, 413, 414, 1376, 416, 417, 418, 0, 424,
	425, 419, 421, 422, 423, 420, 426, 427, 428, 0,
	429, 409, 410, 430, 431, 983, 432, 433, 516, 434,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 445,
	441, 442, 443, 517, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 454, 0, 455, 518, 519,
	520, 521, 0, 462, 0, 456, 457, 522, 458, 523,
	0, 459, 460, 461, 0, 463, 464, 0, 0, 465,
	466, 467, 468, 469, 471, 0, 472, 0, 470, 473,
	474, 475, 524, 525, 526, 0, 477, 476, 527, 0,
	0, 0, 0, 478, 479, 528, 480, 481, 482, 1341,
	0, 1204, 1203, 0, 0, 0, 0, 1201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 0, 235,
	236, 237, 238, 239, 240, 0, 0, 241, 488, 489,
	490, 0, 242, 491, 0, 1096, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 968, 258, 259, 0,
	0, 0, 0, 0, 0, 0, 260, 261, 262, 263,
	264, 265, 492, 493, 0, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 0, 217, 0, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	0, 293, 0, 0, 969, 294, 295, 0, 296, 498,
	0, 499, 297, 0, 298, 299, 300, 301, 1340, 501,
	502, 354, 971, 302, 303, 0, 304, 305, 307, 0,
	0, 0, 306, 308, 315, 0, 970, 309, 503, 311,
	310, 312, 313, 314, 504, 0, 505, 0, 316, 972,
	506, 973, 317, 318, 319, 974, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	507, 975, 330, 331, 976, 0, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 977, 347, 348, 351, 350, 978,
	349, 0, 0, 979, 352, 0, 508, 353, 509, 355,
	356, 0, 357, 358, 359, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 980, 366, 981, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 512, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 982, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 0, 429, 409, 410, 430, 431, 983, 432,
	433, 516, 434, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 454, 0,
	455, 518, 519, 520, 521, 0, 462, 0, 456, 457,
	522, 458, 523, 0, 459, 460, 461, 0, 463, 464,
	0, 0, 465, 466, 467, 468, 469, 471, 0, 472,
	0, 470, 473, 474, 475, 524, 525, 526, 0, 477,
	476, 527, 0, 0, 0, 0, 478, 479, 528, 480,
	481, 482, 1337, 0, 1204, 1203, 0, 0, 0, 0,
	1201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 0,
	241, 488, 489, 490, 0, 242, 491, 0, 1096, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 968,
	258, 259, 0, 0, 0, 0, 0, 0, 0, 260,
	261, 262, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 0, 217,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 969, 294, 295,
	0, 296, 498, 0, 499, 297, 0, 298, 299, 300,
	301, 1336, 501, 502, 354, 971, 302, 303, 0, 304,
	305, 307, 0, 0, 0, 306, 308, 315, 0, 970,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	0, 316, 972, 506, 973, 317, 318, 319, 974, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 507, 975, 330, 331, 976, 0, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 977, 347, 348,
	351, 350, 978, 349, 0, 0, 979, 352, 0, 508,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 980, 366,
	981, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 512, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 982, 403,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 0, 429, 409, 410, 430,
	431, 983, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 518, 519, 520, 521, 0, 462,
	0, 456, 457, 522, 458, 523, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 0, 472, 0, 470, 473, 474, 475, 524, 525,
	526, 0, 477, 476, 527, 0, 0, 0, 0, 478,
	479, 528, 480, 481, 482, 1273, 0, 1204, 1203, 0,
	0, 0, 0, 1201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 0, 242, 491,
	0, 1096, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 968, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 262, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 217, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	969, 294, 295, 0, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 1272, 501, 502, 354, 971, 302,
	303, 0, 304, 305, 307, 0, 0, 0, 306, 308,
	315, 0, 970, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 972, 506, 973, 317, 318,
	319, 974, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 975, 330, 331,
	976, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	977, 347, 348, 351, 350, 978, 349, 0, 0, 979,
	352, 0, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 980, 366, 981, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 982, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 0, 429,
	409, 410, 430, 431, 983, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 524, 525, 526, 0, 477, 476, 527, 0, 0,
	0, 0, 478, 479, 528, 480, 481, 482, 1270, 0,
	1204, 1203, 0, 0, 0, 0, 1201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 0, 241, 488, 489, 490,
	0, 242, 491, 0, 1096, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 968, 258, 259, 0, 0,
	0, 0, 0, 0, 0, 260, 261, 262, 263, 264,
	265, 492, 493, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 0, 217, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 0, 0, 969, 294, 295, 0, 296, 498, 0,
	499, 297, 0, 298, 299, 300, 301, 1269, 501, 502,
	354, 971, 302, 303, 0, 304, 305, 307, 0, 0,
	0, 306, 308, 315, 0, 970, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 316, 972, 506,
	973, 317, 318, 319, 974, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 507,
	975, 330, 331, 976, 0, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 977, 347, 348, 351, 350, 978, 349,
	0, 0, 979, 352, 0, 508, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 980, 366, 981, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	512, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 982, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 0, 429, 409, 410, 430, 431, 983, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	518, 519, 520, 521, 0, 462, 0, 456, 457, 522,
	458, 523, 0, 459, 460, 461, 0, 463, 464, 0,
	0, 465, 466, 467, 468, 469, 471, 0, 472, 0,
	470, 473, 474, 475, 524, 525, 526, 0, 477, 476,
	527, 0, 0, 0, 0, 478, 479, 528, 480, 481,
	482, 1210, 0, 1204, 1203, 0, 0, 0, 0, 1201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 485, 231, 486, 234, 232, 233, 487,
	0, 235, 236, 237, 238, 239, 240, 0, 0, 241,
	488, 489, 490, 0, 242, 491, 0, 1096, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 968, 258,
	259, 0, 0, 0, 0, 0, 0, 0, 260, 261,
	262, 263, 264, 265, 492, 493, 0, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 495, 496, 0, 217, 0,
	0, 0, 0, 0, 287, 288, 289, 497, 290, 291,
	0, 292, 0, 293, 0, 0, 969, 294, 295, 0,
	296, 498, 0, 499, 297, 0, 298, 299, 300, 301,
	1209, 501, 502, 354, 971, 302, 303, 0, 304, 305,
	307, 0, 0, 0, 306, 308, 315, 0, 970, 309,
	503, 311, 310, 312, 313, 314, 504, 0, 505, 0,
	316, 972, 506, 973, 317, 318, 319, 974, 320, 321,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 507, 975, 330, 331, 976, 0, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 977, 347, 348, 351,
	350, 978, 349, 0, 0, 979, 352, 0, 508, 353,
	509, 355, 356, 0, 357, 358, 359, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 980, 366, 981,
	511, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 512, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 514, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 982, 403, 404,
	405, 406, 515, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 419, 421, 422, 423,
	420, 426, 427, 428, 0, 429, 409, 410, 430, 431,
	983, 432, 433, 516, 434, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 445, 441, 442, 443, 517, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	454, 0, 455, 518, 519, 520, 521, 0, 462, 0,
	456, 457, 522, 458, 523, 0, 459, 460, 461, 0,
	463, 464, 0, 0, 465, 466, 467, 468, 469, 471,
	0, 472, 0, 470, 473, 474, 475, 524, 525, 526,
	0, 477, 476, 527, 0, 0, 0, 0, 478, 479,
	528, 480, 481, 482, 1199, 0, 1204, 1203, 0, 0,
	0, 0, 1201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 485, 231, 486, 234,
	232, 233, 487, 0, 235, 236, 237, 238, 239, 240,
	0, 0, 241, 488, 489, 490, 0, 242, 491, 0,
	1096, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 968, 258, 259, 0, 0, 0, 0, 0, 0,
	0, 260, 261, 262, 263, 264, 265, 492, 493, 0,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 276, 494, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 495, 496,
	0, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	497, 290, 291, 0, 292, 0, 293, 0, 0, 969,
	294, 295, 0, 296, 498, 0, 499, 297, 0, 298,
	299, 300, 301, 1198, 501, 502, 354, 971, 302, 303,
	0, 304, 305, 307, 0, 0, 0, 306, 308, 315,
	0, 970, 309, 503, 311, 310, 312, 313, 314, 504,
	0, 505, 0, 316, 972, 506, 973, 317, 318, 319,
	974, 320, 321, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 507, 975, 330, 331, 976,
	0, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 977,
	347, 348, 351, 350, 978, 349, 0, 0, 979, 352,
	0, 508, 353, 509, 355, 356, 0, 357, 358, 359,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	980, 366, 981, 511, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 512, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	514, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	982, 403, 404, 405, 406, 515, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 419,
	421, 422, 423, 420, 426, 427, 428, 0, 429, 409,
	410, 430, 431, 983, 432, 433, 516, 434, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 445, 441, 442,
	443, 517, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 454, 0, 455, 518, 519, 520, 521,
	0, 462, 0, 456, 457, 522, 458, 523, 0, 459,
	460, 461, 0, 463, 464, 0, 0, 465, 466, 467,
	468, 469, 471, 0, 472, 0, 470, 473, 474, 475,
	524, 525, 526, 0, 477, 476, 527, 0, 0, 0,
	0, 478, 479, 528, 480, 481, 482, 1204, 1203, 0,
	0, 0, 0, 1201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 0, 242, 491,
	0, 1096, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 968, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 262, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 217, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	969, 294, 295, 0, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 500, 501, 502, 354, 971, 302,
	303, 0, 304, 305, 307, 0, 0, 0, 306, 308,
	315, 0, 970, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 972, 506, 973, 317, 318,
	319, 974, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 975, 330, 331,
	976, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	977, 347, 348, 351, 350, 978, 349, 0, 0, 979,
	352, 0, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 980, 366, 981, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 982, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 0, 429,
	409, 410, 430, 431, 983, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 524, 525, 526, 214, 477, 476, 527, 0, 0,
	0, 0, 478, 479, 528, 480, 481, 482, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 0,
	241, 488, 489, 490, 0, 242, 491, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 0,
	258, 259, 0, 0, 0, 0, 0, 0, 0, 260,
	261, 262, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 0, 217,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 0, 294, 295,
	0, 296, 498, 0, 499, 297, 0, 298, 299, 300,
	301, 500, 501, 502, 354, 0, 302, 303, 0, 304,
	305, 307, 0, 0, 218, 306, 308, 315, 0, 0,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	0, 316, 0, 506, 0, 317, 318, 319, 0, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 507, 0, 330, 331, 0, 0, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 350, 0, 349, 0, 219, 0, 352, 0, 508,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 0, 366,
	0, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 512, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 0, 429, 409, 410, 430,
	431, 0, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 518, 519, 520, 521, 0, 462,
	0, 456, 457, 522, 458, 523, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 0, 472, 0, 470, 473, 474, 475, 524, 525,
	526, 0, 477, 476, 527, 1204, 1203, 0, 0, 478,
	479, 528, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	609, 0, 0, 0, 483, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 0, 235, 236, 237, 238, 239, 240, 0,
	0, 241, 488, 489, 490, 0, 242, 491, 0, 1096,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	968, 258, 259, 0, 0, 0, 0, 0, 0, 0,
	260, 261, 262, 263, 264, 265, 492, 493, 1748, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 495, 496, 0,
	217, 0, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 0, 293, 0, 0, 969, 294,
	295, 0, 296, 498, 0, 499, 297, 0, 298, 299,
	300, 301, 500, 501, 502, 354, 971, 302, 303, 0,
	304, 305, 307, 0, 0, 0, 306, 308, 315, 0,
	970, 309, 503, 311, 310, 312, 313, 314, 504, 0,
	505, 0, 316, 972, 506, 973, 317, 318, 319, 974,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 507, 975, 330, 331, 976, 0,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 977, 347,
	348, 351, 350, 978, 349, 0, 0, 979, 352, 0,
	508, 353, 509, 355, 356, 0, 357, 358, 359, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 980,
	366, 981, 511, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 512, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 982,
	403, 404, 405, 406, 515, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 0, 424, 425, 419, 421,
	422, 423, 420, 426, 427, 428, 0, 429, 409, 410,
	430, 431, 983, 432, 433, 516, 434, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	517, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 454, 0, 455, 518, 519, 520, 521, 0,
	462, 0, 456, 457, 522, 458, 523, 0, 459, 460,
	461, 0, 463, 464, 0, 0, 465, 466, 467, 468,
	469, 471, 0, 472, 0, 470, 473, 474, 475, 524,
	525, 526, 0, 477, 476, 527, 1204, 1203, 0, 0,
	478, 479, 528, 480, 481, 482, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 485, 231, 486, 234,
	232, 233, 487, 0, 235, 236, 237, 238, 239, 240,
	0, 0, 241, 488, 489, 490, 0, 242, 491, 0,
	1096, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 968, 258, 259, 0, 0, 0, 0, 0, 0,
	0, 260, 261, 262, 263, 264, 265, 492, 493, 0,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 276, 494, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 495, 496,
	0, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	497, 290, 291, 0, 292, 0, 293, 0, 0, 969,
	294, 295, 0, 296, 498, 0, 499, 297, 0, 298,
	299, 300, 301, 500, 501, 502, 354, 971, 302, 303,
	0, 304, 305, 307, 0, 0, 0, 306, 308, 315,
	0, 970, 309, 503, 311, 310, 312, 313, 314, 504,
	0, 505, 0, 316, 972, 506, 973, 317, 318, 319,
	974, 320, 321, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 507, 975, 330, 331, 976,
	0, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 977,
	347, 348, 351, 350, 978, 349, 0, 0, 979, 352,
	0, 508, 353, 509, 355, 356, 0, 357, 358, 359,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	980, 366, 981, 511, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 512, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	514, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	982, 403, 404, 405, 406, 515, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 419,
	421, 422, 423, 420, 426, 427, 428, 0, 429, 409,
	410, 430, 431, 983, 432, 433, 516, 434, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 445, 441, 442,
	443, 517, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 454, 0, 455, 518, 519, 520, 521,
	0, 462, 0, 456, 457, 522, 458, 523, 0, 459,
	460, 461, 0, 463, 464, 0, 0, 465, 466, 467,
	468, 469, 471, 0, 472, 0, 470, 473, 474, 475,
	524, 525, 526, 1204, 477, 476, 527, 0, 0, 0,
	0, 478, 479, 528, 480, 481, 482, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 485, 231, 486, 234, 232, 233, 487,
	0, 235, 236, 237, 238, 239, 240, 0, 0, 241,
	488, 489, 490, 0, 242, 491, 0, 1096, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 968, 258,
	259, 0, 0, 0, 0, 0, 0, 0, 260, 261,
	262, 263, 264, 265, 492, 493, 0, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 495, 496, 0, 217, 0,
	0, 0, 0, 0, 287, 288, 289, 497, 290, 291,
	0, 292, 0, 293, 0, 0, 969, 294, 295, 0,
	296, 498, 0, 499, 297, 0, 298, 299, 300, 301,
	500, 501, 502, 354, 971, 302, 303, 0, 304, 305,
	307, 0, 0, 0, 306, 308, 315, 0, 970, 309,
	503, 311, 310, 312, 313, 314, 504, 0, 505, 0,
	316, 972, 506, 973, 317, 318, 319, 974, 320, 321,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 507, 975, 330, 331, 976, 0, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 977, 347, 348, 351,
	350, 978, 349, 0, 0, 979, 352, 0, 508, 353,
	509, 355, 356, 0, 357, 358, 359, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 980, 366, 981,
	511, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 512, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 514, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 982, 403, 404,
	405, 406, 515, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 419, 421, 422, 423,
	420, 426, 427, 428, 0, 429, 409, 410, 430, 431,
	983, 432, 433, 516, 434, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 445, 441, 442, 443, 517, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	454, 0, 455, 518, 519, 520, 521, 0, 462, 0,
	456, 457, 522, 458, 523, 0, 459, 460, 461, 0,
	463, 464, 0, 0, 465, 466, 467, 468, 469, 471,
	0, 472, 0, 470, 473, 474, 475, 524, 525, 526,
	214, 477, 476, 527, 0, 0, 0, 0, 478, 479,
	528, 480, 481, 482, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 0, 241, 488, 489, 490,
	2341, 242, 491, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 2338, 253, 0,
	254, 255, 256, 0, 257, 0, 258, 259, 0, 0,
	0, 0, 0, 0, 0, 260, 261, 262, 263, 264,
	265, 492, 493, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 0, 2497, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 2344, 0, 0, 294, 295, 0, 296, 498, 0,
	499, 297, 0, 298, 299, 300, 301, 500, 501, 502,
	354, 0, 302, 303, 0, 304, 305, 307, 0, 0,
	2494, 306, 308, 315, 0, 0, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 2496, 0, 506,
	0, 317, 318, 319, 0, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 507,
	0, 330, 331, 2493, 0, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 350, 0, 349,
	0, 0, 0, 352, 0, 508, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 0, 366, 0, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	512, 377, 513, 378, 2343, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 0, 429, 409, 410, 430, 431, 0, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	518, 519, 520, 521, 0, 462, 0, 456, 457, 522,
	458, 523, 0, 459, 460, 461, 0, 463, 464, 0,
	2495, 465, 466, 467, 468, 469, 471, 0, 472, 0,
	470, 473, 474, 475, 524, 525, 526, 214, 477, 476,
	527, 0, 0, 0, 0, 478, 479, 528, 480, 481,
	482, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 2341, 242, 491,
	0, 0, 2335, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 2338, 253, 0, 254, 255, 256,
	0, 257, 0, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 262, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 2344, 0,
	0, 294, 295, 0, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 2334, 501, 502, 354, 0, 302,
	303, 0, 304, 305, 307, 0, 0, 0, 306, 308,
	315, 0, 0, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 0, 506, 0, 317, 318,
	319, 0, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 0, 330, 331,
	0, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 350, 0, 349, 0, 0, 0,
	352, 0, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 0, 366, 0, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 2343, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 0, 429,
	409, 410, 430, 431, 0, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 2342, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 524, 525, 526, 0, 477, 476, 527, 1436, 0,
	214, 0, 478, 479, 528, 480, 481, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 0, 241, 488, 489, 490,
	0, 242, 491, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 0, 258, 259, 0, 0,
	0, 0, 0, 0, 0, 260, 261, 262, 263, 264,
	265, 492, 493, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 0, 217, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 0, 0, 0, 294, 295, 0, 296, 498, 0,
	499, 297, 0, 298, 299, 300, 301, 500, 501, 502,
	354, 0, 302, 303, 0, 304, 305, 307, 0, 0,
	218, 306, 308, 315, 0, 0, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 316, 0, 506,
	0, 317, 318, 319, 0, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 507,
	0, 330, 331, 0, 0, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 350, 0, 349,
	0, 219, 0, 352, 0, 508, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 0, 366, 0, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	512, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 1439, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 0, 429, 409, 410, 430, 431, 0, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 0, 447, 448, 446,
	1437, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	518, 519, 520, 521, 0, 462, 0, 456, 457, 522,
	458, 523, 0, 459, 460, 461, 0, 463, 464, 0,
	0, 465, 466, 467, 468, 469, 471, 0, 472, 0,
	470, 473, 474, 475, 524, 525, 526, 0, 1438, 476,
	527, 1180, 0, 214, 0, 478, 479, 528, 480, 481,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 485, 231, 486, 234, 232, 233, 487,
	0, 235, 236, 237, 238, 239, 240, 0, 0, 241,
	488, 489, 490, 0, 242, 491, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 0, 258,
	259, 0, 0, 0, 0, 0, 0, 0, 260, 261,
	262, 263, 264, 265, 492, 493, 0, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 495, 496, 0, 217, 0,
	0, 0, 0, 0, 287, 288, 289, 497, 290, 291,
	0, 292, 0, 293, 0, 0, 0, 294, 295, 0,
	296, 498, 0, 499, 297, 0, 298, 299, 300, 301,
	1182, 501, 502, 354, 0, 302, 303, 0, 304, 305,
	307, 0, 0, 218, 306, 308, 315, 0, 0, 309,
	503, 311, 310, 312, 313, 314, 504, 0, 505, 0,
	316, 0, 506, 0, 317, 318, 319, 0, 320, 321,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 507, 0, 330, 331, 0, 0, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	350, 0, 349, 0, 219, 0, 352, 0, 508, 353,
	509, 355, 356, 0, 357, 358, 359, 0, 1025, 361,
	362, 363, 0, 0, 364, 365, 510, 0, 366, 0,
	511, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 512, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 514, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 515, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 419, 421, 422, 423,
	420, 426, 427, 428, 0, 429, 409, 410, 430, 431,
	0, 432, 433, 516, 434, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 445, 441, 442, 443, 517, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	454, 0, 455, 518, 519, 520, 521, 0, 462, 0,
	456, 457, 522, 458, 523, 0, 459, 460, 461, 0,
	463, 464, 0, 0, 465, 466, 467, 468, 469, 471,
	0, 472, 0, 470, 473, 474, 475, 524, 525, 526,
	0, 477, 476, 527, 1177, 0, 214, 0, 478, 479,
	528, 480, 481, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 485, 231, 486, 234,
	232, 233, 487, 0, 235, 236, 237, 238, 239, 240,
	0, 0, 241, 488, 489, 490, 0, 242, 491, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 0, 258, 259, 0, 0, 0, 0, 0, 0,
	0, 260, 261, 262, 263, 264, 265, 492, 493, 0,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 276, 494, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 495, 496,
	0, 217, 0, 0, 0, 0, 0, 287, 288, 289,
	497, 290, 291, 0, 292, 0, 293, 0, 0, 0,
	294, 295, 0, 296, 498, 0, 499, 297, 0, 298,
	299, 300, 301, 1179, 501, 502, 354, 0, 302, 303,
	0, 304, 305, 307, 0, 0, 218, 306, 308, 315,
	0, 0, 309, 503, 311, 310, 312, 313, 314, 504,
	0, 505, 0, 316, 0, 506, 0, 317, 318, 319,
	0, 320, 321, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 507, 0, 330, 331, 0,
	0, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 0,
	347, 348, 351, 350, 0, 349, 0, 219, 0, 352,
	0, 508, 353, 509, 355, 356, 0, 357, 358, 359,
	0, 1025, 361, 362, 363, 0, 0, 364, 365, 510,
	0, 366, 0, 511, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 512, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	514, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 515, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 419,
	421, 422, 423, 420, 426, 427, 428, 0, 429, 409,
	410, 430, 431, 0, 432, 433, 516, 434, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 445, 441, 442,
	443, 517, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 454, 0, 455, 518, 519, 520, 521,
	0, 462, 0, 456, 457, 522, 458, 523, 0, 459,
	460, 461, 0, 463, 464, 0, 0, 465, 466, 467,
	468, 469, 471, 0, 472, 0, 470, 473, 474, 475,
	524, 525, 526, 0, 477, 476, 527, 1084, 0, 214,
	0, 478, 479, 528, 480, 481, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 485,
	231, 486, 234, 232, 233, 487, 0, 235, 236, 237,
	238, 239, 240, 0, 0, 241, 488, 489, 490, 0,
	242, 491, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 0, 258, 259, 0, 0, 0,
	0, 0, 0, 0, 260, 261, 262, 263, 264, 265,
	492, 493, 0, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	276, 494, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 495, 496, 0, 217, 0, 0, 0, 0, 0,
	287, 288, 289, 497, 290, 291, 0, 292, 0, 293,
	0, 0, 0, 294, 295, 0, 296, 498, 0, 499,
	297, 0, 298, 299, 300, 301, 1086, 501, 502, 354,
	0, 302, 303, 0, 304, 305, 307, 0, 0, 218,
	306, 308, 315, 0, 0, 309, 503, 311, 310, 312,
	313, 314, 504, 0, 505, 0, 316, 0, 506, 0,
	317, 318, 319, 0, 320, 321, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 507, 0,
	330, 331, 0, 0, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 350, 0, 349, 0,
	219, 0, 352, 0, 508, 353, 509, 355, 356, 0,
	357, 358, 359, 0, 1025, 361, 362, 363, 0, 0,
	364, 365, 510, 0, 366, 0, 511, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 512,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 514, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 515, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 419, 421, 422, 423, 420, 426, 427, 428,
	0, 429, 409, 410, 430, 431, 0, 432, 433, 516,
	434, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	445, 441, 442, 443, 517, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 454, 0, 455, 518,
	519, 520, 521, 0, 462, 0, 456, 457, 522, 458,
	523, 0, 459, 460, 461, 0, 463, 464, 0, 0,
	465, 466, 467, 468, 469, 471, 0, 472, 0, 470,
	473, 474, 475, 524, 525, 526, 0, 477, 476, 527,
	557, 0, 214, 0, 478, 479, 528, 480, 481, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 556, 224, 546, 225, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 485, 231, 486, 234, 232, 233, 487, 0,
	235, 236, 237, 238, 239, 240, 0, 0, 241, 488,
	489, 490, 0, 242, 491, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 549, 257, 0, 258, 259,
	0, 0, 0, 0, 0, 0, 0, 260, 261, 262,
	263, 264, 265, 492, 493, 0, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 276, 494, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 495, 496, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 497, 290, 291, 0,
	292, 0, 293, 0, 0, 0, 294, 295, 550, 296,
	498, 0, 499, 297, 0, 298, 299, 300, 301, 500,
	501, 502, 354, 0, 302, 303, 0, 304, 305, 307,
	0, 0, 0, 306, 308, 315, 0, 0, 309, 503,
	311, 310, 312, 313, 314, 504, 0, 505, 0, 316,
	0, 506, 0, 317, 318, 319, 0, 320, 321, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 507, 0, 330, 331, 0, 0, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 350,
	0, 349, 0, 0, 0, 352, 0, 508, 353, 509,
	355, 356, 0, 357, 358, 359, 0, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 0, 366, 0, 511,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 512, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 514, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 515, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 551, 424, 425, 419, 421, 422, 423, 420,
	426, 427, 428, 0, 429, 409, 410, 430, 431, 0,
	432, 433, 516, 434, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 445, 441, 442, 443, 517, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 454,
	0, 455, 518, 519, 520, 521, 0, 462, 0, 456,
	457, 522, 458, 523, 0, 459, 460, 461, 0, 463,
	464, 0, 0, 465, 466, 467, 468, 469, 471, 0,
	472, 0, 470, 473, 474, 475, 524, 525, 526, 0,
	477, 476, 527, 545, 0, 214, 0, 478, 479, 528,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 546, 225, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 0, 235, 236, 237, 238, 239, 240, 0,
	0, 241, 488, 489, 490, 0, 242, 491, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 549, 257,
	0, 258, 259, 0, 0, 0, 0, 0, 0, 0,
	260, 261, 262, 263, 264, 265, 492, 493, 0, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 495, 496, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 0, 293, 0, 0, 0, 294,
	295, 550, 296, 498, 0, 499, 297, 0, 298, 299,
	300, 301, 500, 501, 502, 354, 0, 302, 303, 0,
	304, 305, 307, 0, 0, 0, 306, 308, 315, 0,
	0, 309, 503, 311, 310, 312, 313, 314, 504, 0,
	505, 0, 316, 0, 506, 0, 317, 318, 319, 0,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 507, 0, 330, 331, 0, 0,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 350, 0, 349, 0, 0, 0, 352, 0,
	508, 353, 509, 355, 356, 0, 357, 358, 359, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 0,
	366, 0, 511, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 512, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 515, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 551, 424, 425, 419, 421,
	422, 423, 420, 426, 427, 428, 0, 429, 409, 410,
	430, 431, 0, 432, 433, 516, 434, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	517, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 454, 0, 455, 518, 519, 520, 521, 0,
	462, 0, 456, 457, 522, 458, 523, 0, 459, 460,
	461, 0, 463, 464, 0, 0, 465, 466, 467, 468,
	469, 471, 0, 472, 0, 470, 473, 474, 475, 524,
	525, 526, 214, 477, 476, 527, 0, 0, 0, 0,
	478, 479, 528, 480, 481, 482, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 485, 231, 486, 234, 232, 233, 487, 0,
	235, 236, 237, 238, 239, 240, 0, 0, 241, 488,
	489, 490, 0, 242, 491, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 0, 258, 259,
	0, 0, 0, 0, 0, 0, 0, 260, 261, 262,
	263, 264, 265, 492, 493, 0, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 276, 494, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 495, 496, 0, 217, 0, 0,
	0, 0, 0, 287, 288, 289, 497, 290, 291, 0,
	292, 0, 293, 0, 0, 0, 294, 295, 0, 296,
	498, 0, 499, 297, 0, 298, 299, 300, 301, 500,
	501, 502, 354, 0, 302, 303, 0, 304, 305, 307,
	0, 0, 218, 306, 308, 315, 0, 0, 309, 503,
	311, 310, 312, 313, 314, 504, 0, 505, 0, 316,
	0, 506, 0, 317, 318, 319, 0, 320, 321, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 507, 0, 330, 331, 0, 0, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 350,
	2825, 349, 0, 219, 0, 352, 0, 508, 353, 509,
	355, 356, 0, 357, 358, 359, 0, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 0, 366, 0, 511,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 512, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 514, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 515, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 419, 421, 422, 423, 420,
	426, 427, 428, 0, 429, 409, 410, 430, 431, 0,
	432, 433, 516, 434, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 445, 441, 442, 443, 517, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 454,
	0, 455, 518, 519, 520, 521, 0, 462, 0, 456,
	457, 522, 458, 523, 0, 459, 460, 461, 0, 463,
	464, 0, 0, 465, 466, 467, 468, 469, 471, 0,
	472, 0, 470, 473, 474, 475, 524, 525, 526, 214,
	477, 476, 527, 0, 0, 0, 0, 478, 479, 528,
	480, 481, 482, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 485,
	231, 486, 234, 232, 233, 487, 0, 235, 236, 237,
	238, 239, 240, 0, 0, 241, 488, 489, 490, 0,
	242, 491, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 0, 258, 259, 0, 0, 0,
	0, 0, 0, 0, 260, 261, 262, 263, 264, 265,
	492, 493, 0, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	276, 494, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 495, 496, 0, 217, 0, 0, 0, 0, 0,
	287, 288, 289, 497, 290, 291, 0, 292, 0, 293,
	0, 0, 0, 294, 295, 0, 296, 498, 0, 499,
	297, 0, 298, 299, 300, 301, 500, 501, 502, 354,
	0, 302, 303, 0, 304, 305, 307, 0, 0, 218,
	306, 308, 315, 0, 0, 309, 503, 311, 310, 312,
	313, 314, 504, 0, 505, 0, 316, 0, 506, 0,
	317, 318, 319, 0, 320, 321, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 507, 0,
	330, 331, 0, 0, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 350, 0, 349, 0,
	219, 0, 352, 0, 508, 353, 509, 355, 356, 0,
	357, 358, 359, 0, 1025, 361, 362, 363, 0, 0,
	364, 365, 510, 0, 366, 0, 511, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 512,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 514, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 515, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 419, 421, 422, 423, 420, 426, 427, 428,
	0, 429, 409, 410, 430, 431, 0, 432, 433, 516,
	434, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	445, 441, 442, 443, 517, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 454, 0, 455, 518,
	519, 520, 521, 0, 462, 0, 456, 457, 522, 458,
	523, 0, 459, 460, 461, 0, 463, 464, 0, 0,
	465, 466, 467, 468, 469, 471, 0, 472, 0, 470,
	473, 474, 475, 524, 525, 526, 0, 477, 476, 527,
	2433, 0, 214, 0, 478, 479, 528, 480, 481, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 485, 231, 486, 234, 232, 233, 487, 0,
	235, 236, 237, 238, 239, 240, 0, 0, 241, 488,
	489, 490, 0, 242, 491, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 0, 258, 259,
	0, 0, 0, 0, 0, 0, 0, 260, 261, 262,
	263, 264, 265, 492, 493, 0, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 276, 494, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 495, 496, 0, 217, 0, 0,
	0, 0, 0, 287, 288, 289, 497, 290, 291, 0,
	292, 0, 293, 0, 0, 0, 294, 295, 0, 296,
	498, 0, 499, 297, 0, 298, 299, 300, 301, 2432,
	501, 502, 354, 0, 302, 303, 0, 304, 305, 307,
	0, 0, 218, 306, 308, 315, 0, 0, 309, 503,
	311, 310, 312, 313, 314, 504, 0, 505, 0, 316,
	0, 506, 0, 317, 318, 319, 0, 320, 321, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 507, 0, 330, 331, 0, 0, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 350,
	0, 349, 0, 219, 0, 352, 0, 508, 353, 509,
	355, 356, 0, 357, 358, 359, 0, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 0, 366, 0, 511,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 512, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 514, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 515, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 419, 421, 422, 423, 420,
	426, 427, 428, 0, 429, 409, 410, 430, 431, 0,
	432, 433, 516, 434, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 445, 441, 442, 443, 517, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 454,
	0, 455, 518, 519, 520, 521, 0, 462, 0, 456,
	457, 522, 458, 523, 0, 459, 460, 461, 0, 463,
	464, 0, 0, 465, 466, 467, 468, 469, 471, 0,
	472, 0, 470, 473, 474, 475, 524, 525, 526, 0,
	477, 476, 527, 1944, 0, 214, 0, 478, 479, 528,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 0, 235, 236, 237, 238, 239, 240, 0,
	0, 241, 488, 489, 490, 0, 242, 491, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	0, 258, 259, 0, 0, 0, 0, 0, 0, 0,
	260, 261, 262, 263, 264, 265, 492, 493, 0, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 495, 496, 0,
	217, 0, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 0, 293, 0, 0, 0, 294,
	295, 0, 296, 498, 0, 499, 297, 0, 298, 299,
	300, 301, 500, 501, 502, 354, 0, 302, 303, 0,
	304, 305, 307, 0, 0, 218, 306, 308, 315, 0,
	0, 309, 503, 311, 310, 312, 313, 314, 504, 0,
	505, 0, 316, 0, 506, 0, 317, 318, 319, 0,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 507, 0, 330, 331, 0, 0,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 350, 0, 349, 0, 219, 0, 352, 0,
	508, 353, 509, 355, 356, 0, 357, 358, 359, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 0,
	366, 0, 511, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 512, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 515, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 0, 424, 425, 419, 421,
	422, 423, 420, 426, 427, 428, 0, 429, 409, 410,
	430, 431, 0, 432, 433, 516, 434, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	517, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 454, 0, 455, 518, 519, 520, 521, 0,
	462, 0, 456, 457, 522, 458, 523, 0, 459, 460,
	461, 0, 463, 464, 0, 0, 465, 466, 467, 468,
	469, 471, 0, 472, 0, 470, 473, 474, 475, 524,
	525, 526, 214, 477, 476, 527, 0, 0, 0, 0,
	478, 479, 528, 480, 481, 482, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 485, 231, 486, 234, 232, 233, 487, 0,
	235, 236, 237, 238, 239, 240, 0, 0, 241, 488,
	489, 490, 0, 242, 491, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 0, 258, 259,
	0, 0, 0, 0, 0, 0, 0, 260, 261, 262,
	263, 264, 265, 492, 493, 0, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 276, 494, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 495, 496, 0, 217, 0, 0,
	0, 0, 0, 287, 288, 289, 497, 290, 291, 0,
	292, 0, 293, 0, 0, 0, 294, 295, 0, 296,
	498, 0, 499, 297, 0, 298, 299, 300, 301, 500,
	501, 502, 354, 0, 302, 303, 0, 304, 305, 307,
	0, 0, 218, 306, 308, 315, 0, 0, 309, 503,
	311, 310, 312, 313, 314, 504, 0, 505, 0, 316,
	0, 506, 0, 317, 318, 319, 0, 320, 321, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 507, 0, 330, 331, 0, 0, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 350,
	0, 349, 0, 219, 0, 352, 0, 508, 353, 509,
	355, 356, 0, 357, 358, 359, 0, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 0, 366, 0, 511,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 512, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 514, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 515, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 419, 421, 422, 423, 420,
	426, 427, 428, 0, 429, 409, 410, 430, 431, 0,
	432, 433, 516, 434, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 445, 441, 442, 443, 517, 0, 447,
	448, 446, 1870, 449, 450, 451, 452, 453, 281, 454,
	0, 455, 518, 519, 520, 521, 0, 462, 0, 456,
	457, 522, 458, 523, 0, 459, 460, 461, 0, 463,
	464, 0, 0, 465, 466, 467, 468, 469, 471, 0,
	472, 0, 470, 473, 474, 475, 524, 525, 526, 0,
	477, 476, 527, 1874, 0, 214, 0, 478, 479, 528,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 0, 235, 236, 237, 238, 239, 240, 0,
	0, 241, 488, 489, 490, 0, 242, 491, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	0, 258, 259, 0, 0, 0, 0, 0, 0, 0,
	260, 261, 262, 263, 264, 265, 492, 493, 0, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 495, 496, 0,
	217, 0, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 0, 293, 0, 0, 0, 294,
	295, 0, 296, 498, 0, 499, 297, 0, 298, 299,
	300, 301, 1873, 501, 502, 354, 0, 302, 303, 0,
	304, 305, 307, 0, 0, 218, 306, 308, 315, 0,
	0, 309, 503, 311, 310, 312, 313, 314, 504, 0,
	505, 0, 316, 0, 506, 0, 317, 318, 319, 0,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 507, 0, 330, 331, 0, 0,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 350, 0, 349, 0, 219, 0, 352, 0,
	508, 353, 509, 355, 356, 0, 357, 358, 359, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 0,
	366, 0, 511, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 512, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 515, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 0, 424, 425, 419, 421,
	422, 423, 420, 426, 427, 428, 0, 429, 409, 410,
	430, 431, 0, 432, 433, 516, 434, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	517, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 454, 0, 455, 518, 519, 520, 521, 0,
	462, 0, 456, 457, 522, 458, 523, 0, 459, 460,
	461, 0, 463, 464, 0, 0, 465, 466, 467, 468,
	469, 471, 0, 472, 0, 470, 473, 474, 475, 524,
	525, 526, 0, 477, 476, 527, 1863, 0, 214, 0,
	478, 479, 528, 480, 481, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 485, 231,
	486, 234, 232, 233, 487, 0, 235, 236, 237, 238,
	239, 240, 0, 0, 241, 488, 489, 490, 0, 242,
	491, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 0, 258, 259, 0, 0, 0, 0,
	0, 0, 0, 260, 261, 262, 263, 264, 265, 492,
	493, 0, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 276,
	494, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	495, 496, 0, 217, 0, 0, 0, 0, 0, 287,
	288, 289, 497, 290, 291, 0, 292, 0, 293, 0,
	0, 0, 294, 295, 0, 296, 498, 0, 499, 297,
	0, 298, 299, 300, 301, 1865, 501, 502, 354, 0,
	302, 303, 0, 304, 305, 307, 0, 0, 218, 306,
	308, 315, 0, 0, 309, 503, 311, 310, 312, 313,
	314, 504, 0, 505, 0, 316, 0, 506, 0, 317,
	318, 319, 0, 320, 321, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 507, 0, 330,
	331, 0, 0, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 350, 0, 349, 0, 219,
	0, 352, 0, 508, 353, 509, 355, 356, 0, 357,
	358, 359, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 0, 366, 0, 511, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 512, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 514, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 515, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 419, 421, 422, 423, 420, 426, 427, 428, 0,
	429, 409, 410, 430, 431, 0, 432, 433, 516, 434,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 445,
	441, 442, 443, 517, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 454, 0, 455, 518, 519,
	520, 521, 0, 462, 0, 456, 457, 522, 458, 523,
	0, 459, 460, 461, 0, 463, 464, 0, 0, 465,
	466, 467, 468, 469, 471, 0, 472, 0, 470, 473,
	474, 475, 524, 525, 526, 0, 477, 476, 527, 1330,
	0, 214, 0, 478, 479, 528, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 0, 235,
	236, 237, 238, 239, 240, 0, 0, 241, 488, 489,
	490, 0, 242, 491, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 0, 258, 259, 0,
	0, 0, 0, 0, 0, 0, 260, 261, 262, 263,
	264, 265, 492, 493, 0, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 0, 217, 0, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	0, 293, 0, 0, 0, 294, 295, 0, 296, 498,
	0, 499, 297, 0, 298, 299, 300, 301, 1329, 501,
	502, 354, 0, 302, 303, 0, 304, 305, 307, 0,
	0, 218, 306, 308, 315, 0, 0, 309, 503, 311,
	310, 312, 313, 314, 504, 0, 505, 0, 316, 0,
	506, 0, 317, 318, 319, 0, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	507, 0, 330, 331, 0, 0, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 350, 0,
	349, 0, 219, 0, 352, 0, 508, 353, 509, 355,
	356, 0, 357, 358, 359, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 0, 366, 0, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 512, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 0, 429, 409, 410, 430, 431, 0, 432,
	433, 516, 434, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 454, 0,
	455, 518, 519, 520, 521, 0, 462, 0, 456, 457,
	522, 458, 523, 0, 459, 460, 461, 0, 463, 464,
	0, 0, 465, 466, 467, 468, 469, 471, 0, 472,
	0, 470, 473, 474, 475, 524, 525, 526, 0, 477,
	476, 527, 1327, 0, 214, 0, 478, 479, 528, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 0,
	241, 488, 489, 490, 0, 242, 491, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 0,
	258, 259, 0, 0, 0, 0, 0, 0, 0, 260,
	261, 262, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 0, 217,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 0, 294, 295,
	0, 296, 498, 0, 499, 297, 0, 298, 299, 300,
	301, 1326, 501, 502, 354, 0, 302, 303, 0, 304,
	305, 307, 0, 0, 218, 306, 308, 315, 0, 0,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	0, 316, 0, 506, 0, 317, 318, 319, 0, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 507, 0, 330, 331, 0, 0, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 350, 0, 349, 0, 219, 0, 352, 0, 508,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 0, 366,
	0, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 512, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 0, 429, 409, 410, 430,
	431, 0, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 518, 519, 520, 521, 0, 462,
	0, 456, 457, 522, 458, 523, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 0, 472, 0, 470, 473, 474, 475, 524, 525,
	526, 0, 477, 476, 527, 1324, 0, 214, 0, 478,
	479, 528, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 0, 242, 491,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 0, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 262, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 217, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	0, 294, 295, 0, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 1323, 501, 502, 354, 0, 302,
	303, 0, 304, 305, 307, 0, 0, 218, 306, 308,
	315, 0, 0, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 0, 506, 0, 317, 318,
	319, 0, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 0, 330, 331,
	0, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 350, 0, 349, 0, 219, 0,
	352, 0, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 0, 366, 0, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 0, 429,
	409, 410, 430, 431, 0, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 524, 525, 526, 0, 477, 476, 527, 1320, 0,
	214, 0, 478, 479, 528, 480, 481, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 0, 241, 488, 489, 490,
	0, 242, 491, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 0, 258, 259, 0, 0,
	0, 0, 0, 0, 0, 260, 261, 262, 263, 264,
	265, 492, 493, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 0, 217, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 0, 0, 0, 294, 295, 0, 296, 498, 0,
	499, 297, 0, 298, 299, 300, 301, 1319, 501, 502,
	354, 0, 302, 303, 0, 304, 305, 307, 0, 0,
	218, 306, 308, 315, 0, 0, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 316, 0, 506,
	0, 317, 318, 319, 0, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 507,
	0, 330, 331, 0, 0, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 350, 0, 349,
	0, 219, 0, 352, 0, 508, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 0, 366, 0, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	512, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 0, 429, 409, 410, 430, 431, 0, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	518, 519, 520, 521, 0, 462, 0, 456, 457, 522,
	458, 523, 0, 459, 460, 461, 0, 463, 464, 0,
	0, 465, 466, 467, 468, 469, 471, 0, 472, 0,
	470, 473, 474, 475, 524, 525, 526, 0, 477, 476,
	527, 1191, 0, 214, 0, 478, 479, 528, 480, 481,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 485, 231, 486, 234, 232, 233, 487,
	0, 235, 236, 237, 238, 239, 240, 0, 0, 241,
	488, 489, 490, 0, 242, 491, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 0, 258,
	259, 0, 0, 0, 0, 0, 0, 0, 260, 261,
	262, 263, 264, 265, 492, 493, 0, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 495, 496, 0, 217, 0,
	0, 0, 0, 0, 287, 288, 289, 497, 290, 291,
	0, 292, 0, 293, 0, 0, 0, 294, 295, 0,
	296, 498, 0, 499, 297, 0, 298, 299, 300, 301,
	1193, 501, 502, 354, 0, 302, 303, 0, 304, 305,
	307, 0, 0, 218, 306, 308, 315, 0, 0, 309,
	503, 311, 310, 312, 313, 314, 504, 0, 505, 0,
	316, 0, 506, 0, 317, 318, 319, 0, 320, 321,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 507, 0, 330, 331, 0, 0, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	350, 0, 349, 0, 219, 0, 352, 0, 508, 353,
	509, 355, 356, 0, 357, 358, 359, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 0, 366, 0,
	511, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 512, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 514, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 515, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 419, 421, 422, 423,
	420, 426, 427, 428, 0, 429, 409, 410, 430, 431,
	0, 432, 433, 516, 434, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 445, 441, 442, 443, 517, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	454, 0, 455, 518, 519, 520, 521, 0, 462, 0,
	456, 457, 522, 458, 523, 0, 459, 460, 461, 0,
	463, 464, 0, 0, 465, 466, 467, 468, 469, 471,
	0, 472, 0, 470, 473, 474, 475, 524, 525, 526,
	214, 477, 476, 527, 0, 0, 0, 0, 478, 479,
	528, 480, 481, 482, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 0, 241, 488, 489, 490,
	0, 242, 491, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 0, 258, 259, 0, 0,
	0, 0, 0, 0, 0, 260, 261, 262, 263, 264,
	265, 492, 493, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 0, 217, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 0, 0, 0, 294, 295, 0, 296, 498, 0,
	499, 297, 0, 298, 299, 300, 301, 500, 501, 502,
	354, 0, 302, 303, 0, 304, 305, 307, 0, 0,
	218, 306, 308, 315, 0, 0, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 316, 0, 506,
	0, 317, 318, 319, 0, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 507,
	0, 330, 331, 0, 0, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 350, 0, 349,
	0, 219, 0, 352, 0, 508, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 0, 366, 0, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	512, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 0, 429, 409, 410, 430, 431, 0, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	518, 519, 520, 521, 0, 462, 0, 456, 457, 522,
	458, 523, 0, 459, 460, 461, 0, 463, 464, 0,
	0, 465, 466, 467, 468, 469, 471, 0, 472, 0,
	470, 473, 474, 475, 524, 525, 526, 214, 477, 476,
	527, 0, 0, 0, 0, 478, 479, 528, 480, 481,
	482, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 0, 242, 491,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	549, 257, 0, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 262, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	0, 294, 295, 550, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 500, 501, 502, 354, 0, 302,
	303, 0, 304, 305, 307, 0, 0, 0, 306, 308,
	315, 0, 0, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 0, 506, 0, 317, 318,
	319, 0, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 0, 330, 331,
	0, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 350, 0, 349, 0, 0, 0,
	352, 0, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 0, 366, 0, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 551, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 0, 429,
	409, 410, 430, 431, 0, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 524, 525, 526, 214, 477, 476, 527, 0, 0,
	0, 0, 478, 479, 528, 480, 481, 482, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 0,
	241, 488, 489, 490, 0, 242, 491, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 0,
	258, 259, 0, 0, 0, 0, 0, 0, 0, 260,
	261, 1975, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 0, 217,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 0, 294, 295,
	0, 296, 498, 0, 499, 297, 0, 298, 299, 300,
	301, 500, 501, 502, 354, 0, 302, 303, 0, 304,
	305, 307, 0, 0, 218, 306, 308, 315, 0, 0,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	0, 316, 0, 506, 0, 317, 318, 319, 0, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 507, 0, 330, 331, 0, 0, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 350, 0, 349, 0, 219, 0, 352, 0, 508,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 0, 366,
	0, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 512, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 0, 429, 409, 410, 430,
	431, 0, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 518, 519, 520, 521, 0, 462,
	0, 456, 457, 522, 458, 523, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 0, 472, 0, 470, 473, 474, 475, 524, 525,
	526, 214, 477, 476, 527, 0, 0, 0, 0, 478,
	479, 528, 480, 481, 482, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 0, 235,
	236, 237, 238, 239, 240, 0, 0, 241, 488, 489,
	490, 0, 242, 491, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 0, 258, 259, 0,
	0, 0, 0, 0, 0, 0, 260, 261, 1973, 263,
	264, 265, 492, 493, 0, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 0, 217, 0, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	0, 293, 0, 0, 0, 294, 295, 0, 296, 498,
	0, 499, 297, 0, 298, 299, 300, 301, 500, 501,
	502, 354, 0, 302, 303, 0, 304, 305, 307, 0,
	0, 218, 306, 308, 315, 0, 0, 309, 503, 311,
	310, 312, 313, 314, 504, 0, 505, 0, 316, 0,
	506, 0, 317, 318, 319, 0, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	507, 0, 330, 331, 0, 0, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 350, 0,
	349, 0, 219, 0, 352, 0, 508, 353, 509, 355,
	356, 0, 357, 358, 359, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 0, 366, 0, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 512, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 0, 429, 409, 410, 430, 431, 0, 432,
	433, 516, 434, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 454, 0,
	455, 518, 519, 520, 521, 0, 462, 0, 456, 457,
	522, 458, 523, 0, 459, 460, 461, 0, 463, 464,
	0, 0, 465, 466, 467, 468, 469, 471, 0, 472,
	0, 470, 473, 474, 475, 524, 525, 526, 214, 477,
	476, 527, 0, 0, 0, 0, 478, 479, 528, 480,
	481, 482, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 485, 231,
	486, 234, 232, 233, 487, 0, 235, 236, 237, 238,
	239, 240, 0, 0, 241, 488, 489, 490, 0, 242,
	491, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 0, 258, 259, 0, 0, 0, 0,
	0, 0, 0, 260, 261, 1971, 263, 264, 265, 492,
	493, 0, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 276,
	494, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	495, 496, 0, 217, 0, 0, 0, 0, 0, 287,
	288, 289, 497, 290, 291, 0, 292, 0, 293, 0,
	0, 0, 294, 295, 0, 296, 498, 0, 499, 297,
	0, 298, 299, 300, 301, 500, 501, 502, 354, 0,
	302, 303, 0, 304, 305, 307, 0, 0, 218, 306,
	308, 315, 0, 0, 309, 503, 311, 310, 312, 313,
	314, 504, 0, 505, 0, 316, 0, 506, 0, 317,
	318, 319, 0, 320, 321, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 507, 0, 330,
	331, 0, 0, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 350, 0, 349, 0, 219,
	0, 352, 0, 508, 353, 509, 355, 356, 0, 357,
	358, 359, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 0, 366, 0, 511, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 512, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 514, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 515, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 419, 421, 422, 423, 420, 426, 427, 428, 0,
	429, 409, 410, 430, 431, 0, 432, 433, 516, 434,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 445,
	441, 442, 443, 517, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 454, 0, 455, 518, 519,
	520, 521, 0, 462, 0, 456, 457, 522, 458, 523,
	0, 459, 460, 461, 0, 463, 464, 0, 0, 465,
	466, 467, 468, 469, 471, 0, 472, 0, 470, 473,
	474, 475, 524, 525, 526, 0, 477, 476, 527, 701,
	0, 214, 0, 478, 479, 528, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 0, 235,
	236, 237, 238, 239, 240, 0, 0, 241, 488, 489,
	490, 0, 242, 491, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 0, 258, 259, 0,
	0, 0, 0, 0, 0, 0, 260, 261, 262, 263,
	264, 265, 492, 493, 0, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	0, 293, 0, 0, 0, 294, 295, 0, 296, 498,
	0, 499, 297, 0, 298, 299, 300, 301, 500, 501,
	502, 354, 0, 302, 303, 0, 304, 305, 307, 0,
	0, 0, 306, 308, 315, 0, 0, 309, 503, 311,
	310, 312, 313, 314, 504, 0, 505, 700, 316, 0,
	506, 0, 317, 318, 319, 0, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	507, 0, 330, 331, 0, 0, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 350, 0,
	349, 0, 0, 0, 352, 0, 508, 353, 509, 355,
	356, 0, 357, 358, 359, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 0, 366, 0, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 512, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 0, 429, 409, 410, 430, 431, 0, 432,
	433, 516, 434, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 0, 447, 448,
	446, 699, 449, 450, 451, 452, 453, 281, 454, 0,
	455, 518, 519, 520, 521, 0, 462, 0, 456, 457,
	522, 458, 523, 0, 459, 460, 461, 0, 463, 464,
	0, 0, 465, 466, 467, 468, 469, 471, 0, 472,
	0, 470, 473, 474, 475, 524, 525, 526, 214, 477,
	476, 527, 0, 0, 0, 0, 478, 479, 528, 480,
	481, 482, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 485, 231,
	486, 234, 232, 233, 487, 0, 235, 236, 237, 238,
	239, 240, 0, 0, 241, 488, 489, 490, 0, 242,
	491, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 0, 258, 259, 0, 0, 0, 0,
	0, 0, 0, 260, 261, 262, 263, 264, 265, 492,
	493, 0, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 276,
	494, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	495, 496, 0, 2497, 0, 0, 0, 0, 0, 287,
	288, 289, 497, 290, 291, 0, 292, 0, 293, 0,
	0, 0, 294, 295, 0, 296, 498, 0, 499, 297,
	0, 298, 299, 300, 301, 500, 501, 502, 354, 0,
	302, 303, 0, 304, 305, 307, 0, 0, 0, 306,
	308, 315, 0, 0, 309, 503, 311, 310, 312, 313,
	314, 504, 0, 505, 0, 316, 0, 506, 0, 317,
	318, 319, 0, 320, 321, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 507, 0, 330,
	331, 0, 0, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 350, 0, 349, 0, 0,
	0, 352, 0, 508, 353, 509, 355, 356, 0, 357,
	358, 359, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 0, 366, 0, 511, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 512, 377,
	513, 378, 3335, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 514, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 515, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 419, 421, 422, 423, 420, 426, 427, 428, 0,
	429, 409, 410, 430, 431, 0, 432, 433, 516, 434,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 445,
	441, 442, 443, 517, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 454, 0, 455, 518, 519,
	520, 521, 0, 462, 0, 456, 457, 522, 458, 523,
	0, 459, 460, 461, 0, 463, 464, 0, 0, 465,
	466, 467, 468, 469, 471, 0, 472, 0, 470, 473,
	474, 475, 524, 525, 526, 0, 477, 476, 527, 536,
	0, 214, 0, 478, 479, 528, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 535, 225, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 0, 235,
	236, 237, 238, 239, 240, 0, 0, 241, 488, 489,
	490, 0, 242, 491, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 0, 258, 259, 0,
	0, 0, 0, 0, 0, 0, 260, 261, 262, 263,
	264, 265, 492, 493, 0, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	0, 293, 0, 0, 0, 294, 295, 0, 296, 498,
	0, 499, 297, 0, 298, 299, 300, 301, 500, 501,
	502, 354, 0, 302, 303, 0, 304, 305, 307, 0,
	0, 0, 306, 308, 315, 0, 0, 309, 503, 311,
	310, 312, 313, 314, 504, 0, 505, 0, 316, 0,
	506, 0, 317, 318, 319, 0, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	507, 0, 330, 331, 0, 0, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 350, 0,
	349, 0, 0, 0, 352, 0, 508, 353, 509, 355,
	356, 0, 357, 358, 359, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 0, 366, 0, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 512, 377, 513, 534, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 0, 429, 409, 410, 430, 431, 0, 432,
	433, 516, 434, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 454, 0,
	455, 518, 519, 520, 521, 0, 462, 0, 456, 457,
	522, 458, 523, 0, 459, 460, 461, 0, 463, 464,
	0, 0, 465, 466, 467, 468, 469, 471, 0, 472,
	0, 470, 473, 474, 475, 524, 525, 526, 0, 477,
	476, 527, 214, 3344, 0, 0, 478, 479, 528, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 485, 231, 486, 234, 232, 233, 487, 0,
	235, 236, 237, 238, 239, 240, 0, 0, 241, 488,
	489, 490, 0, 242, 491, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 0, 258, 259,
	0, 0, 0, 0, 0, 0, 0, 260, 261, 262,
	263, 264, 265, 492, 493, 0, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 276, 494, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 495, 496, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 497, 290, 291, 0,
	292, 0, 293, 0, 0, 0, 294, 295, 0, 296,
	498, 0, 499, 297, 0, 298, 299, 300, 301, 500,
	501, 502, 354, 0, 302, 303, 0, 304, 305, 307,
	0, 0, 0, 306, 308, 315, 0, 0, 309, 503,
	311, 310, 312, 313, 314, 504, 0, 505, 0, 316,
	0, 506, 0, 317, 318, 319, 0, 320, 321, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 507, 0, 330, 331, 0, 0, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 350,
	0, 349, 0, 0, 0, 352, 0, 508, 353, 509,
	355, 356, 0, 357, 358, 359, 0, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 0, 366, 0, 511,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 512, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 514, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 515, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 419, 421, 422, 423, 420,
	426, 427, 428, 0, 429, 409, 410, 430, 431, 0,
	432, 433, 516, 434, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 445, 441, 442, 443, 517, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 454,
	0, 455, 518, 519, 520, 521, 0, 462, 0, 456,
	457, 522, 458, 523, 0, 459, 460, 461, 0, 463,
	464, 0, 0, 465, 466, 467, 468, 469, 471, 0,
	472, 0, 470, 473, 474, 475, 524, 525, 526, 0,
	477, 476, 527, 214, 2484, 0, 0, 478, 479, 528,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 485, 231, 486, 234, 232, 233, 487,
	0, 235, 236, 237, 238, 239, 240, 0, 0, 241,
	488, 489, 490, 0, 242, 491, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 0, 258,
	259, 0, 0, 0, 0, 0, 0, 0, 260, 261,
	262, 263, 264, 265, 492, 493, 0, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 495, 496, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 497, 290, 291,
	0, 292, 0, 293, 0, 0, 0, 294, 295, 0,
	296, 498, 0, 499, 297, 0, 298, 299, 300, 301,
	500, 501, 502, 354, 0, 302, 303, 0, 304, 305,
	307, 0, 0, 0, 306, 308, 315, 0, 0, 309,
	503, 311, 310, 312, 313, 314, 504, 0, 505, 0,
	316, 0, 506, 0, 317, 318, 319, 0, 320, 321,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 507, 0, 330, 331, 0, 0, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	350, 0, 349, 0, 0, 0, 352, 0, 508, 353,
	509, 355, 356, 0, 357, 358, 359, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 0, 366, 0,
	511, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 512, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 514, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 515, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 419, 421, 422, 423,
	420, 426, 427, 428, 0, 429, 409, 410, 430, 431,
	0, 432, 433, 516, 434, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 445, 441, 442, 443, 517, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	454, 0, 455, 518, 519, 520, 521, 0, 462, 0,
	456, 457, 522, 458, 523, 0, 459, 460, 461, 0,
	463, 464, 0, 0, 465, 466, 467, 468, 469, 471,
	0, 472, 0, 470, 473, 474, 475, 524, 525, 526,
	214, 477, 476, 527, 0, 0, 0, 0, 478, 479,
	528, 480, 481, 482, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 0, 241, 488, 489, 490,
	0, 242, 491, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 0, 258, 259, 0, 0,
	0, 0, 0, 0, 0, 260, 261, 262, 263, 264,
	265, 492, 493, 3126, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 0, 0, 0, 294, 295, 0, 296, 498, 0,
	499, 297, 0, 298, 299, 300, 301, 500, 501, 502,
	354, 0, 302, 303, 0, 304, 305, 307, 0, 0,
	0, 306, 308, 315, 0, 0, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 316, 0, 506,
	0, 317, 318, 319, 0, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 507,
	0, 330, 331, 0, 0, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 350, 0, 349,
	0, 0, 0, 352, 0, 508, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 0, 366, 0, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	512, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 0, 429, 409, 410, 430, 431, 0, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	518, 519, 520, 521, 0, 462, 0, 456, 457, 522,
	458, 523, 0, 459, 460, 461, 0, 463, 464, 0,
	0, 465, 466, 467, 468, 469, 471, 0, 472, 0,
	470, 473, 474, 475, 524, 525, 526, 214, 477, 476,
	527, 0, 0, 0, 0, 478, 479, 528, 480, 481,
	482, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 0, 2266, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 0, 242, 491,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 0, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 262, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	0, 294, 295, 0, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 500, 501, 502, 354, 0, 302,
	303, 0, 304, 305, 307, 0, 0, 0, 306, 308,
	315, 0, 0, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 0, 506, 0, 317, 318,
	319, 0, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 0, 330, 331,
	0, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 350, 0, 349, 0, 0, 0,
	352, 0, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 0, 366, 0, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 0, 429,
	409, 410, 430, 431, 0, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 524, 525, 526, 0, 477, 476, 527, 214, 2484,
	0, 0, 478, 479, 528, 480, 481, 482, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 485, 231,
	486, 234, 232, 233, 487, 0, 235, 236, 237, 238,
	239, 240, 0, 0, 241, 488, 489, 490, 0, 242,
	491, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 0, 258, 259, 0, 0, 0, 0,
	0, 0, 0, 260, 261, 262, 263, 264, 265, 492,
	493, 0, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 276,
	494, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	495, 496, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 497, 290, 291, 0, 292, 0, 293, 0,
	0, 0, 294, 295, 0, 296, 498, 0, 499, 297,
	0, 298, 299, 300, 301, 500, 501, 502, 354, 0,
	302, 303, 0, 304, 305, 307, 0, 0, 0, 306,
	308, 315, 0, 0, 309, 503, 311, 310, 312, 313,
	314, 504, 0, 505, 0, 316, 0, 506, 0, 317,
	318, 319, 0, 320, 321, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 507, 0, 330,
	331, 0, 0, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 350, 0, 349, 0, 0,
	0, 352, 0, 508, 353, 509, 355, 356, 0, 357,
	358, 359, 0, 0, 361, 362, 2481, 0, 0, 364,
	365, 510, 0, 366, 0, 511, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 512, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 514, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 515, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 419, 421, 422, 423, 420, 426, 427, 428, 0,
	429, 409, 410, 430, 431, 0, 432, 433, 516, 434,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 445,
	441, 442, 443, 517, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 454, 0, 455, 518, 519,
	520, 521, 0, 462, 0, 456, 457, 522, 458, 523,
	0, 459, 460, 461, 0, 463, 464, 0, 0, 465,
	466, 467, 468, 469, 471, 0, 472, 0, 470, 473,
	474, 475, 524, 525, 526, 214, 477, 476, 527, 0,
	0, 0, 0, 478, 479, 528, 480, 481, 482, 0,
	0, 0, 220, 221, 222, 223, 224, 1952, 225, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 0, 235, 236, 237, 238, 239, 240, 0,
	0, 241, 488, 489, 490, 0, 242, 491, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	0, 258, 259, 0, 0, 0, 0, 0, 0, 0,
	260, 261, 262, 263, 264, 265, 492, 493, 0, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 495, 496, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 0, 293, 0, 0, 0, 294,
	295, 0, 296, 498, 0, 499, 297, 0, 298, 299,
	300, 301, 500, 501, 502, 354, 0, 302, 303, 0,
	304, 305, 307, 0, 0, 0, 306, 308, 315, 0,
	0, 309, 503, 311, 310, 312, 313, 314, 504, 0,
	505, 0, 316, 0, 506, 0, 317, 318, 319, 0,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 507, 0, 330, 331, 0, 0,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 350, 0, 349, 0, 0, 0, 352, 0,
	508, 353, 509, 355, 356, 0, 357, 358, 359, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 0,
	366, 0, 511, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 512, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 515, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 0, 424, 425, 419, 421,
	422, 423, 420, 426, 427, 428, 0, 429, 409, 410,
	430, 431, 0, 432, 433, 516, 434, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	517, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 454, 0, 455, 518, 519, 520, 521, 0,
	462, 0, 456, 457, 522, 458, 523, 0, 459, 460,
	461, 0, 463, 464, 0, 0, 465, 466, 467, 468,
	469, 471, 0, 472, 0, 470, 473, 474, 475, 524,
	525, 526, 0, 477, 476, 527, 1942, 0, 214, 0,
	478, 479, 528, 480, 481, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 485, 231,
	486, 234, 232, 233, 487, 0, 235, 236, 237, 238,
	239, 240, 0, 0, 241, 488, 489, 490, 0, 242,
	491, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 0, 258, 259, 0, 0, 0, 0,
	0, 0, 0, 260, 261, 262, 263, 264, 265, 492,
	493, 0, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 276,
	494, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	495, 496, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 497, 290, 291, 0, 292, 0, 293, 0,
	0, 0, 294, 295, 0, 296, 498, 0, 499, 297,
	0, 298, 299, 300, 301, 500, 501, 502, 354, 0,
	302, 303, 0, 304, 305, 307, 0, 0, 0, 306,
	308, 315, 0, 0, 309, 503, 311, 310, 312, 313,
	314, 504, 0, 505, 0, 316, 0, 506, 0, 317,
	318, 319, 0, 320, 321, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 507, 0, 330,
	331, 0, 0, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 350, 0, 349, 0, 0,
	0, 352, 0, 508, 353, 509, 355, 356, 0, 357,
	358, 359, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 0, 366, 0, 511, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 512, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 514, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 515, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 419, 421, 422, 423, 420, 426, 427, 428, 0,
	429, 409, 410, 430, 431, 0, 432, 433, 516, 434,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 445,
	441, 442, 443, 517, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 454, 0, 455, 518, 519,
	520, 521, 0, 462, 0, 456, 457, 522, 458, 523,
	0, 459, 460, 461, 0, 463, 464, 0, 0, 465,
	466, 467, 468, 469, 471, 0, 472, 0, 470, 473,
	474, 475, 524, 525, 526, 0, 477, 476, 527, 577,
	0, 214, 0, 478, 479, 528, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 226, 1062, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 0, 235,
	236, 237, 238, 239, 240, 0, 0, 241, 488, 489,
	1060, 0, 242, 491, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 0, 258, 259, 0,
	0, 0, 0, 0, 0, 0, 260, 261, 262, 263,
	264, 265, 492, 493, 0, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	0, 293, 0, 0, 0, 294, 295, 0, 296, 498,
	0, 499, 297, 0, 298, 299, 300, 301, 500, 501,
	502, 354, 0, 302, 303, 0, 304, 305, 307, 0,
	0, 0, 306, 308, 315, 0, 0, 309, 503, 311,
	310, 312, 313, 314, 504, 0, 505, 0, 316, 0,
	506, 0, 317, 318, 319, 0, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	507, 0, 330, 331, 0, 0, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 578, 0, 347, 348, 351, 350, 0,
	349, 0, 0, 0, 352, 0, 508, 353, 509, 355,
	356, 0, 357, 358, 359, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 0, 366, 0, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 512, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 574, 415, 416, 417,
	418, 0, 424, 425, 419, 421, 422, 423, 420, 426,
	1063, 428, 0, 429, 409, 410, 430, 431, 0, 432,
	433, 516, 434, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 454, 0,
	455, 573, 519, 520, 521, 0, 462, 0, 456, 457,
	522, 458, 523, 0, 459, 460, 461, 0, 463, 464,
	0, 0, 465, 466, 467, 468, 469, 471, 0, 472,
	0, 470, 473, 474, 475, 524, 525, 526, 0, 477,
	476, 527, 1886, 0, 214, 0, 478, 479, 528, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 0,
	241, 488, 489, 490, 0, 242, 491, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 0,
	258, 259, 0, 0, 0, 0, 0, 0, 0, 260,
	261, 262, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 0, 294, 295,
	0, 296, 498, 0, 499, 297, 0, 298, 299, 300,
	301, 1885, 501, 502, 354, 0, 302, 303, 0, 304,
	305, 307, 0, 0, 0, 306, 308, 315, 0, 0,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	0, 316, 0, 506, 0, 317, 318, 319, 0, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 507, 0, 330, 331, 0, 0, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 350, 0, 349, 0, 0, 0, 352, 0, 508,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 0, 366,
	0, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 512, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 0, 429, 409, 410, 430,
	431, 0, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 518, 519, 520, 521, 0, 462,
	0, 456, 457, 522, 458, 523, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 0, 472, 0, 470, 473, 474, 475, 524, 525,
	526, 0, 477, 476, 527, 577, 0, 214, 0, 478,
	479, 528, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 0, 567, 491,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 0, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 262, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	0, 294, 295, 0, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 500, 501, 502, 354, 0, 302,
	303, 0, 304, 305, 307, 0, 0, 0, 306, 308,
	315, 0, 0, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 0, 506, 0, 317, 318,
	319, 0, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 0, 330, 331,
	0, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 578,
	0, 347, 348, 351, 350, 0, 349, 0, 0, 0,
	352, 0, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 0, 366, 0, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 574, 415, 416, 417, 418, 0, 424, 425,
	419, 421, 422, 423, 420, 426, 1351, 428, 0, 429,
	409, 410, 430, 431, 0, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 573, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 524, 525, 526, 0, 477, 476, 527, 1334, 0,
	214, 0, 478, 479, 528, 480, 481, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 0, 241, 488, 489, 490,
	0, 242, 491, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 0, 258, 259, 0, 0,
	0, 0, 0, 0, 0, 260, 261, 262, 263, 264,
	265, 492, 493, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 0, 0, 0, 294, 295, 0, 296, 498, 0,
	499, 297, 0, 298, 299, 300, 301, 1333, 501, 502,
	354, 0, 302, 303, 0, 304, 305, 307, 0, 0,
	0, 306, 308, 315, 0, 0, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 316, 0, 506,
	0, 317, 318, 319, 0, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 507,
	0, 330, 331, 0, 0, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 350, 0, 349,
	0, 0, 0, 352, 0, 508, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 0, 366, 0, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	512, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 0, 429, 409, 410, 430, 431, 0, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	518, 519, 520, 521, 0, 462, 0, 456, 457, 522,
	458, 523, 0, 459, 460, 461, 0, 463, 464, 0,
	0, 465, 466, 467, 468, 469, 471, 0, 472, 0,
	470, 473, 474, 475, 524, 525, 526, 0, 477, 476,
	527, 1281, 0, 214, 0, 478, 479, 528, 480, 481,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 484, 485, 231, 486, 234, 232, 233, 487,
	0, 235, 236, 237, 238, 239, 240, 0, 0, 241,
	488, 489, 490, 0, 242, 491, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 0, 258,
	259, 0, 0, 0, 0, 0, 0, 0, 260, 261,
	262, 263, 264, 265, 492, 493, 0, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 495, 496, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 497, 290, 291,
	0, 292, 0, 293, 0, 0, 0, 294, 295, 0,
	296, 498, 0, 499, 297, 0, 298, 299, 300, 301,
	1280, 501, 502, 354, 0, 302, 303, 0, 304, 305,
	307, 0, 0, 0, 306, 308, 315, 0, 0, 309,
	503, 311, 310, 312, 313, 314, 504, 0, 505, 0,
	316, 0, 506, 0, 317, 318, 319, 0, 320, 321,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 507, 0, 330, 331, 0, 0, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	350, 0, 349, 0, 0, 0, 352, 0, 508, 353,
	509, 355, 356, 0, 357, 358, 359, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 0, 366, 0,
	511, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 512, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 514, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 515, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 419, 421, 422, 423,
	420, 426, 427, 428, 0, 429, 409, 410, 430, 431,
	0, 432, 433, 516, 434, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 445, 441, 442, 443, 517, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	454, 0, 455, 518, 519, 520, 521, 0, 462, 0,
	456, 457, 522, 458, 523, 0, 459, 460, 461, 0,
	463, 464, 0, 0, 465, 466, 467, 468, 469, 471,
	0, 472, 0, 470, 473, 474, 475, 524, 525, 526,
	0, 477, 476, 527, 1262, 0, 214, 0, 478, 479,
	528, 480, 481, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 485, 231, 486, 234,
	232, 233, 487, 0, 235, 236, 237, 238, 239, 240,
	0, 0, 241, 488, 489, 490, 0, 242, 491, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 0, 258, 259, 0, 0, 0, 0, 0, 0,
	0, 260, 261, 262, 263, 264, 265, 492, 493, 0,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 276, 494, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 495, 496,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	497, 290, 291, 0, 292, 0, 293, 0, 0, 0,
	294, 295, 0, 296, 498, 0, 499, 297, 0, 298,
	299, 300, 301, 500, 501, 502, 354, 0, 302, 303,
	0, 304, 305, 307, 0, 0, 0, 306, 308, 315,
	0, 0, 309, 503, 311, 310, 312, 313, 314, 504,
	0, 505, 0, 316, 0, 506, 0, 317, 318, 319,
	0, 320, 321, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 507, 0, 330, 331, 0,
	0, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 0,
	347, 348, 351, 350, 0, 349, 0, 0, 0, 352,
	0, 508, 353, 509, 355, 356, 0, 357, 358, 359,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	0, 366, 0, 511, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 512, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	514, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 515, 407, 0, 408, 412,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 419,
	421, 422, 423, 420, 426, 427, 428, 0, 429, 409,
	410, 430, 431, 0, 432, 433, 516, 434, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 445, 441, 442,
	443, 517, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 454, 0, 455, 518, 519, 520, 521,
	0, 462, 0, 456, 457, 522, 458, 523, 0, 459,
	460, 461, 0, 463, 464, 0, 0, 465, 466, 467,
	468, 469, 471, 0, 472, 0, 470, 473, 474, 475,
	524, 525, 526, 0, 477, 476, 527, 1185, 0, 214,
	0, 478, 479, 528, 480, 481, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 485,
	231, 486, 234, 232, 233, 487, 0, 235, 236, 237,
	238, 239, 240, 0, 0, 241, 488, 489, 490, 0,
	242, 491, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 0, 258, 259, 0, 0, 0,
	0, 0, 0, 0, 260, 261, 262, 263, 264, 265,
	492, 493, 0, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	276, 494, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 495, 496, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 497, 290, 291, 0, 292, 0, 293,
	0, 0, 0, 294, 295, 0, 296, 498, 0, 499,
	297, 0, 298, 299, 300, 301, 500, 501, 502, 354,
	0, 302, 303, 0, 304, 305, 307, 0, 0, 0,
	306, 308, 315, 0, 0, 309, 503, 311, 310, 312,
	313, 314, 504, 0, 505, 0, 316, 0, 506, 0,
	317, 318, 319, 0, 320, 321, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 507, 0,
	330, 331, 0, 0, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 350, 0, 349, 0,
	0, 0, 352, 0, 508, 353, 509, 355, 356, 0,
	357, 358, 359, 0, 0, 361, 362, 363, 0, 0,
	364, 365, 510, 0, 366, 0, 511, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 512,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 514, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 515, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 419, 421, 422, 423, 420, 426, 427, 428,
	0, 429, 409, 410, 430, 431, 0, 432, 433, 516,
	434, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	445, 441, 442, 443, 517, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 454, 0, 455, 518,
	519, 520, 521, 0, 462, 0, 456, 457, 522, 458,
	523, 0, 459, 460, 461, 0, 463, 464, 0, 0,
	465, 466, 467, 468, 469, 471, 0, 472, 0, 470,
	473, 474, 475, 524, 525, 526, 0, 477, 476, 527,
	577, 0, 214, 0, 478, 479, 528, 480, 481, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 226, 1062, 227, 229,
	230, 484, 485, 231, 486, 234, 232, 233, 487, 0,
	235, 236, 237, 238, 239, 240, 0, 0, 241, 488,
	489, 1060, 0, 242, 491, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 0, 258, 259,
	0, 0, 0, 0, 0, 0, 0, 260, 261, 262,
	263, 264, 265, 492, 493, 0, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 276, 494, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 495, 496, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 497, 290, 291, 0,
	292, 0, 293, 0, 0, 0, 294, 295, 0, 296,
	498, 0, 499, 297, 0, 298, 299, 300, 301, 500,
	501, 502, 354, 0, 302, 303, 0, 304, 305, 307,
	0, 0, 0, 306, 308, 315, 0, 0, 309, 503,
	311, 310, 312, 313, 314, 504, 0, 505, 0, 316,
	0, 506, 0, 317, 318, 319, 0, 320, 321, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 507, 0, 330, 331, 0, 0, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 578, 0, 347, 348, 351, 350,
	0, 349, 0, 0, 0, 352, 0, 508, 353, 509,
	355, 356, 0, 357, 358, 359, 0, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 0, 366, 0, 511,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 512, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 514, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 515, 407, 0, 408, 412, 413, 574, 415, 416,
	417, 418, 0, 424, 425, 419, 421, 422, 423, 420,
	426, 1063, 428, 0, 429, 409, 410, 430, 431, 0,
	432, 433, 516, 434, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 445, 441, 442, 443, 517, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 454,
	0, 455, 573, 519, 520, 521, 0, 462, 0, 456,
	1061, 522, 458, 523, 0, 459, 460, 461, 0, 463,
	464, 0, 0, 465, 466, 467, 468, 469, 471, 0,
	472, 0, 470, 473, 474, 475, 524, 525, 526, 214,
	477, 476, 527, 0, 0, 0, 0, 478, 479, 528,
	480, 481, 482, 0, 0, 0, 220, 221, 222, 223,
	224, 1044, 225, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 485,
	231, 486, 234, 232, 233, 487, 0, 235, 236, 237,
	238, 239, 240, 0, 0, 241, 488, 489, 490, 0,
	242, 491, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 0, 258, 259, 0, 0, 0,
	0, 0, 0, 0, 260, 261, 262, 263, 264, 265,
	492, 493, 0, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	276, 494, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 495, 496, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 497, 290, 291, 0, 292, 0, 293,
	0, 0, 0, 294, 295, 0, 296, 498, 0, 499,
	297, 0, 298, 299, 300, 301, 500, 501, 502, 354,
	0, 302, 303, 0, 304, 305, 307, 0, 0, 0,
	306, 308, 315, 0, 0, 309, 503, 311, 310, 312,
	313, 314, 504, 0, 505, 0, 316, 0, 506, 0,
	317, 318, 319, 0, 320, 321, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 507, 0,
	330, 331, 0, 0, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 350, 0, 349, 0,
	0, 0, 352, 0, 508, 353, 509, 355, 356, 0,
	357, 358, 359, 0, 0, 361, 362, 363, 0, 0,
	364, 365, 510, 0, 366, 0, 511, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 512,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 514, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 515, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 419, 421, 422, 423, 420, 426, 427, 428,
	0, 429, 409, 410, 430, 431, 0, 432, 433, 516,
	434, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	445, 441, 442, 443, 517, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 454, 0, 455, 518,
	519, 520, 521, 0, 462, 0, 456, 457, 522, 458,
	523, 0, 459, 460, 461, 0, 463, 464, 0, 0,
	465, 466, 467, 468, 469, 471, 0, 472, 0, 470,
	473, 474, 475, 524, 525, 526, 0, 477, 476, 527,
	577, 0, 214, 0, 478, 479, 528, 480, 481, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 485, 231, 486, 234, 232, 233, 487, 0,
	235, 236, 237, 238, 239, 240, 0, 0, 241, 488,
	489, 490, 0, 567, 491, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	565, 0, 254, 255, 256, 0, 257, 0, 258, 259,
	0, 0, 0, 0, 0, 0, 0, 260, 261, 262,
	263, 264, 265, 492, 493, 0, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 276, 494, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 495, 496, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 497, 290, 291, 0,
	292, 0, 293, 0, 0, 0, 294, 295, 0, 296,
	498, 0, 499, 297, 0, 298, 299, 300, 301, 500,
	501, 502, 354, 0, 302, 303, 0, 304, 305, 307,
	0, 0, 0, 306, 308, 315, 0, 0, 309, 503,
	311, 310, 312, 313, 314, 504, 0, 505, 0, 316,
	0, 506, 0, 317, 318, 319, 0, 320, 321, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 507, 0, 330, 331, 0, 0, 332, 566, 0,
	0, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 578, 0, 347, 348, 351, 350,
	0, 349, 0, 0, 0, 352, 0, 508, 353, 509,
	355, 356, 0, 357, 358, 359, 0, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 0, 366, 0, 511,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 512, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 514, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 568, 407, 0, 408, 412, 413, 574, 415, 416,
	417, 418, 0, 424, 425, 419, 421, 422, 423, 420,
	426, 569, 428, 0, 429, 409, 410, 430, 431, 0,
	432, 433, 516, 434, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 445, 441, 442, 443, 517, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 454,
	0, 455, 573, 519, 520, 521, 0, 462, 0, 456,
	571, 522, 458, 523, 0, 459, 460, 461, 0, 463,
	464, 0, 0, 465, 466, 467, 468, 469, 471, 0,
	472, 0, 470, 473, 474, 475, 524, 525, 526, 0,
	477, 476, 527, 561, 0, 214, 0, 478, 479, 528,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 0, 235, 236, 237, 238, 239, 240, 0,
	0, 241, 488, 489, 490, 0, 242, 491, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	0, 258, 259, 0, 0, 0, 0, 0, 0, 0,
	260, 261, 262, 263, 264, 265, 492, 493, 0, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 495, 496, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 0, 293, 0, 0, 0, 294,
	295, 0, 296, 498, 0, 499, 297, 0, 298, 299,
	300, 301, 500, 501, 502, 354, 0, 302, 303, 0,
	304, 305, 307, 0, 0, 0, 306, 308, 315, 0,
	0, 309, 503, 311, 310, 312, 313, 314, 504, 0,
	505, 0, 316, 0, 506, 0, 317, 318, 319, 0,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 507, 0, 330, 331, 0, 0,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 350, 0, 349, 0, 0, 0, 352, 0,
	508, 353, 509, 355, 356, 0, 357, 358, 359, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 0,
	366, 0, 511, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 512, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 515, 407, 0, 408, 562, 413,
	414, 415, 416, 417, 418, 0, 424, 425, 419, 421,
	422, 423, 420, 426, 427, 428, 0, 429, 409, 410,
	430, 431, 0, 432, 433, 516, 434, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	517, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 454, 0, 455, 518, 519, 520, 521, 0,
	462, 0, 456, 457, 522, 458, 523, 0, 459, 460,
	461, 0, 463, 464, 0, 0, 465, 466, 467, 468,
	469, 471, 0, 472, 0, 470, 473, 474, 475, 524,
	525, 526, 0, 477, 476, 527, 559, 0, 214, 0,
	478, 479, 528, 480, 481, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 485, 231,
	486, 234, 232, 233, 487, 0, 235, 236, 237, 238,
	239, 240, 0, 0, 241, 488, 489, 490, 0, 242,
	491, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 0, 258, 259, 0, 0, 0, 0,
	0, 0, 0, 260, 261, 262, 263, 264, 265, 492,
	493, 0, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 276,
	494, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	495, 496, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 497, 290, 291, 0, 292, 0, 293, 0,
	0, 0, 294, 295, 0, 296, 498, 0, 499, 297,
	0, 298, 299, 300, 301, 500, 501, 502, 354, 0,
	302, 303, 0, 304, 305, 307, 0, 0, 0, 306,
	308, 315, 0, 0, 309, 503, 311, 310, 312, 313,
	314, 504, 0, 505, 0, 316, 0, 506, 0, 317,
	318, 319, 0, 320, 321, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 507, 0, 330,
	331, 0, 0, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 350, 0, 349, 0, 0,
	0, 352, 0, 508, 353, 509, 355, 356, 0, 357,
	358, 359, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 0, 366, 0, 511, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 512, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 514, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 515, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 419, 421, 422, 423, 420, 426, 427, 428, 0,
	429, 409, 410, 430, 431, 0, 432, 433, 516, 434,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 445,
	441, 442, 443, 517, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 454, 0, 455, 518, 519,
	520, 521, 0, 462, 0, 456, 457, 522, 458, 523,
	0, 459, 460, 461, 0, 463, 464, 0, 0, 465,
	466, 467, 468, 469, 471, 0, 472, 0, 470, 473,
	474, 475, 524, 525, 526, 0, 477, 476, 527, 553,
	0, 214, 0, 478, 479, 528, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 0, 235,
	236, 237, 238, 239, 240, 0, 0, 241, 488, 489,
	490, 0, 242, 491, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 0, 258, 259, 0,
	0, 0, 0, 0, 0, 0, 260, 261, 262, 263,
	264, 265, 492, 493, 0, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	0, 293, 0, 0, 0, 294, 295, 0, 296, 498,
	0, 499, 297, 0, 298, 299, 300, 301, 500, 501,
	502, 354, 0, 302, 303, 0, 304, 305, 307, 0,
	0, 0, 306, 308, 315, 0, 0, 309, 503, 311,
	310, 312, 313, 314, 504, 0, 505, 0, 316, 0,
	506, 0, 317, 318, 319, 0, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	507, 0, 330, 331, 0, 0, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 350, 0,
	349, 0, 0, 0, 352, 0, 508, 353, 509, 355,
	356, 0, 357, 358, 359, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 0, 366, 0, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 512, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 0, 429, 409, 410, 430, 431, 0, 432,
	433, 516, 434, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 454, 0,
	455, 518, 519, 520, 521, 0, 462, 0, 456, 457,
	522, 458, 523, 0, 459, 460, 461, 0, 463, 464,
	0, 0, 465, 466, 467, 468, 469, 471, 0, 472,
	0, 470, 473, 474, 475, 524, 525, 526, 0, 477,
	476, 527, 531, 0, 214, 0, 478, 479, 528, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 0,
	241, 488, 489, 490, 0, 242, 491, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 0,
	258, 259, 0, 0, 0, 0, 0, 0, 0, 260,
	261, 262, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 0, 294, 295,
	0, 296, 498, 0, 499, 297, 0, 298, 299, 300,
	301, 500, 501, 502, 354, 0, 302, 303, 0, 304,
	305, 307, 0, 0, 0, 306, 308, 315, 0, 0,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	0, 316, 0, 506, 0, 317, 318, 319, 0, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 507, 0, 330, 331, 0, 0, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 350, 0, 349, 0, 0, 0, 352, 0, 508,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 0, 366,
	0, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 512, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 387,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 0, 429, 409, 410, 430,
	431, 0, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 518, 519, 520, 521, 0, 462,
	0, 456, 457, 522, 458, 523, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 0, 472, 0, 470, 473, 474, 475, 524, 525,
	526, 214, 477, 476, 527, 0, 0, 0, 0, 478,
	479, 528, 480, 481, 482, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 0, 235,
	236, 237, 238, 239, 240, 0, 0, 241, 488, 489,
	490, 0, 242, 491, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 0, 258, 259, 0,
	0, 0, 0, 0, 0, 0, 260, 261, 262, 263,
	264, 265, 492, 493, 0, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	0, 293, 0, 0, 0, 294, 295, 0, 296, 498,
	0, 499, 297, 0, 298, 299, 300, 301, 500, 501,
	502, 354, 0, 302, 303, 0, 304, 305, 307, 0,
	0, 0, 306, 308, 315, 0, 0, 309, 503, 311,
	310, 312, 313, 314, 504, 0, 505, 0, 316, 0,
	506, 0, 317, 318, 319, 0, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	507, 0, 330, 331, 0, 0, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 350, 0,
	349, 0, 0, 0, 352, 0, 508, 353, 509, 355,
	356, 0, 357, 358, 359, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 0, 366, 0, 511, 367,
	360, 368, 369, 370, 371, 372, 373, 374, 0, 375,
	376, 512, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 384, 385, 386, 514, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	515, 407, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 0, 429, 409, 410, 430, 431, 0, 432,
	433, 516, 434, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 454, 0,
	455, 518, 519, 520, 521, 0, 462, 0, 456, 457,
	522, 458, 523, 0, 459, 460, 461, 0, 463, 464,
	0, 0, 465, 466, 467, 468, 469, 471, 0, 472,
	0, 470, 473, 474, 475, 524, 525, 526, 214, 477,
	476, 527, 0, 0, 0, 0, 478, 479, 528, 480,
	481, 482, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 484, 485, 231,
	486, 234, 232, 233, 487, 0, 235, 236, 237, 238,
	239, 240, 0, 0, 241, 488, 489, 490, 0, 242,
	491, 0, 0, 0, 243, 244, 245, 246, 247, 248,
	0, 250, 251, 252, 249, 0, 253, 0, 254, 255,
	256, 0, 257, 0, 258, 259, 0, 0, 0, 0,
	0, 0, 0, 260, 261, 262, 263, 264, 265, 492,
	493, 0, 266, 0, 268, 267, 0, 269, 0, 0,
	270, 271, 272, 0, 273, 0, 274, 275, 0, 276,
	494, 277, 278, 280, 282, 279, 283, 284, 285, 286,
	495, 496, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 497, 290, 291, 0, 292, 0, 293, 0,
	0, 0, 294, 295, 0, 296, 498, 0, 499, 297,
	0, 298, 299, 300, 301, 2801, 501, 502, 354, 0,
	302, 303, 0, 304, 305, 307, 0, 0, 0, 306,
	308, 315, 0, 0, 309, 503, 311, 310, 312, 313,
	314, 504, 0, 505, 0, 316, 0, 506, 0, 317,
	318, 319, 0, 320, 321, 0, 0, 322, 323, 324,
	325, 326, 0, 328, 327, 0, 329, 507, 0, 330,
	331, 0, 0, 332, 333, 0, 0, 334, 335, 336,
	0, 337, 338, 340, 342, 339, 341, 343, 345, 346,
	344, 0, 347, 348, 351, 350, 0, 349, 0, 0,
	0, 352, 0, 508, 353, 509, 355, 356, 0, 357,
	358, 359, 0, 0, 361, 362, 363, 0, 0, 364,
	365, 510, 0, 366, 0, 511, 367, 360, 368, 369,
	370, 371, 372, 373, 374, 0, 375, 376, 512, 377,
	513, 378, 0, 379, 0, 380, 381, 382, 383, 384,
	385, 386, 514, 387, 388, 0, 389, 390, 391, 392,
	393, 0, 395, 396, 397, 394, 398, 399, 400, 401,
	0, 402, 0, 403, 404, 405, 406, 515, 407, 0,
	408, 412, 413, 414, 415, 416, 417, 418, 0, 424,
	425, 419, 421, 422, 423, 420, 426, 427, 428, 0,
	429, 409, 410, 430, 431, 0, 432, 433, 516, 434,
	435, 0, 436, 437, 438, 439, 411, 440, 444, 445,
	441, 442, 443, 517, 0, 447, 448, 446, 0, 449,
	450, 451, 452, 453, 281, 454, 0, 455, 518, 519,
	520, 521, 0, 462, 0, 456, 457, 522, 458, 523,
	0, 459, 460, 461, 0, 463, 464, 0, 0, 465,
	466, 467, 468, 469, 471, 0, 472, 0, 470, 473,
	474, 475, 524, 525, 526, 214, 477, 476, 527, 0,
	0, 0, 0, 478, 479, 528, 480, 481, 482, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 484, 485, 231, 486, 234, 232,
	233, 487, 0, 235, 236, 237, 238, 239, 240, 0,
	0, 241, 488, 489, 490, 0, 242, 491, 0, 0,
	0, 243, 244, 245, 246, 247, 248, 0, 250, 251,
	252, 249, 0, 253, 0, 254, 255, 256, 0, 257,
	0, 258, 259, 0, 0, 0, 0, 0, 0, 0,
	260, 261, 262, 263, 264, 265, 492, 493, 0, 266,
	0, 268, 267, 0, 269, 0, 0, 270, 271, 272,
	0, 273, 0, 274, 275, 0, 276, 494, 277, 278,
	280, 282, 279, 283, 284, 285, 286, 495, 496, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 497,
	290, 291, 0, 292, 0, 293, 0, 0, 0, 294,
	295, 0, 296, 498, 0, 499, 297, 0, 298, 299,
	300, 301, 2799, 501, 502, 354, 0, 302, 303, 0,
	304, 305, 307, 0, 0, 0, 306, 308, 315, 0,
	0, 309, 503, 311, 310, 312, 313, 314, 504, 0,
	505, 0, 316, 0, 506, 0, 317, 318, 319, 0,
	320, 321, 0, 0, 322, 323, 324, 325, 326, 0,
	328, 327, 0, 329, 507, 0, 330, 331, 0, 0,
	332, 333, 0, 0, 334, 335, 336, 0, 337, 338,
	340, 342, 339, 341, 343, 345, 346, 344, 0, 347,
	348, 351, 350, 0, 349, 0, 0, 0, 352, 0,
	508, 353, 509, 355, 356, 0, 357, 358, 359, 0,
	0, 361, 362, 363, 0, 0, 364, 365, 510, 0,
	366, 0, 511, 367, 360, 368, 369, 370, 371, 372,
	373, 374, 0, 375, 376, 512, 377, 513, 378, 0,
	379, 0, 380, 381, 382, 383, 384, 385, 386, 514,
	387, 388, 0, 389, 390, 391, 392, 393, 0, 395,
	396, 397, 394, 398, 399, 400, 401, 0, 402, 0,
	403, 404, 405, 406, 515, 407, 0, 408, 412, 413,
	414, 415, 416, 417, 418, 0, 424, 425, 419, 421,
	422, 423, 420, 426, 427, 428, 0, 429, 409, 410,
	430, 431, 0, 432, 433, 516, 434, 435, 0, 436,
	437, 438, 439, 411, 440, 444, 445, 441, 442, 443,
	517, 0, 447, 448, 446, 0, 449, 450, 451, 452,
	453, 281, 454, 0, 455, 518, 519, 520, 521, 0,
	462, 0, 456, 457, 522, 458, 523, 0, 459, 460,
	461, 0, 463, 464, 0, 0, 465, 466, 467, 468,
	469, 471, 0, 472, 0, 470, 473, 474, 475, 524,
	525, 526, 214, 477, 476, 527, 0, 0, 0, 0,
	478, 479, 528, 480, 481, 482, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 484, 485, 231, 486, 234, 232, 233, 487, 0,
	235, 236, 237, 238, 239, 240, 0, 0, 241, 488,
	489, 490, 0, 242, 491, 0, 0, 0, 243, 244,
	245, 246, 247, 248, 0, 250, 251, 252, 249, 0,
	253, 0, 254, 255, 256, 0, 257, 0, 258, 259,
	0, 0, 0, 0, 0, 0, 0, 260, 261, 262,
	263, 264, 265, 492, 493, 0, 266, 0, 268, 267,
	0, 269, 0, 0, 270, 271, 272, 0, 273, 0,
	274, 275, 0, 276, 494, 277, 278, 280, 282, 279,
	283, 284, 285, 286, 495, 496, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 497, 290, 291, 0,
	292, 0, 293, 0, 0, 0, 294, 295, 0, 296,
	498, 0, 499, 297, 0, 298, 299, 300, 301, 2786,
	501, 502, 354, 0, 302, 303, 0, 304, 305, 307,
	0, 0, 0, 306, 308, 315, 0, 0, 309, 503,
	311, 310, 312, 313, 314, 504, 0, 505, 0, 316,
	0, 506, 0, 317, 318, 319, 0, 320, 321, 0,
	0, 322, 323, 324, 325, 326, 0, 328, 327, 0,
	329, 507, 0, 330, 331, 0, 0, 332, 333, 0,
	0, 334, 335, 336, 0, 337, 338, 340, 342, 339,
	341, 343, 345, 346, 344, 0, 347, 348, 351, 350,
	0, 349, 0, 0, 0, 352, 0, 508, 353, 509,
	355, 356, 0, 357, 358, 359, 0, 0, 361, 362,
	363, 0, 0, 364, 365, 510, 0, 366, 0, 511,
	367, 360, 368, 369, 370, 371, 372, 373, 374, 0,
	375, 376, 512, 377, 513, 378, 0, 379, 0, 380,
	381, 382, 383, 384, 385, 386, 514, 387, 388, 0,
	389, 390, 391, 392, 393, 0, 395, 396, 397, 394,
	398, 399, 400, 401, 0, 402, 0, 403, 404, 405,
	406, 515, 407, 0, 408, 412, 413, 414, 415, 416,
	417, 418, 0, 424, 425, 419, 421, 422, 423, 420,
	426, 427, 428, 0, 429, 409, 410, 430, 431, 0,
	432, 433, 516, 434, 435, 0, 436, 437, 438, 439,
	411, 440, 444, 445, 441, 442, 443, 517, 0, 447,
	448, 446, 0, 449, 450, 451, 452, 453, 281, 454,
	0, 455, 518, 519, 520, 521, 0, 462, 0, 456,
	457, 522, 458, 523, 0, 459, 460, 461, 0, 463,
	464, 0, 0, 465, 466, 467, 468, 469, 471, 0,
	472, 0, 470, 473, 474, 475, 524, 525, 526, 214,
	477, 476, 527, 0, 0, 0, 0, 478, 479, 528,
	480, 481, 482, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 226, 228, 227, 229, 230, 484, 485,
	231, 486, 234, 232, 233, 487, 0, 235, 236, 237,
	238, 239, 240, 0, 0, 241, 488, 489, 490, 0,
	242, 491, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 0, 250, 251, 252, 249, 0, 253, 0, 254,
	255, 256, 0, 257, 0, 258, 259, 0, 0, 0,
	0, 0, 0, 0, 260, 261, 262, 263, 264, 265,
	492, 493, 0, 266, 0, 268, 267, 0, 269, 0,
	0, 270, 271, 272, 0, 273, 0, 274, 275, 0,
	276, 494, 277, 278, 280, 282, 279, 283, 284, 285,
	286, 495, 496, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 497, 290, 291, 0, 292, 0, 293,
	0, 0, 0, 294, 295, 0, 296, 498, 0, 499,
	297, 0, 298, 299, 300, 301, 2444, 501, 502, 354,
	0, 302, 303, 0, 304, 305, 307, 0, 0, 0,
	306, 308, 315, 0, 0, 309, 503, 311, 310, 312,
	313, 314, 504, 0, 505, 0, 316, 0, 506, 0,
	317, 318, 319, 0, 320, 321, 0, 0, 322, 323,
	324, 325, 326, 0, 328, 327, 0, 329, 507, 0,
	330, 331, 0, 0, 332, 333, 0, 0, 334, 335,
	336, 0, 337, 338, 340, 342, 339, 341, 343, 345,
	346, 344, 0, 347, 348, 351, 350, 0, 349, 0,
	0, 0, 352, 0, 508, 353, 509, 355, 356, 0,
	357, 358, 359, 0, 0, 361, 362, 363, 0, 0,
	364, 365, 510, 0, 366, 0, 511, 367, 360, 368,
	369, 370, 371, 372, 373, 374, 0, 375, 376, 512,
	377, 513, 378, 0, 379, 0, 380, 381, 382, 383,
	384, 385, 386, 514, 387, 388, 0, 389, 390, 391,
	392, 393, 0, 395, 396, 397, 394, 398, 399, 400,
	401, 0, 402, 0, 403, 404, 405, 406, 515, 407,
	0, 408, 412, 413, 414, 415, 416, 417, 418, 0,
	424, 425, 419, 421, 422, 423, 420, 426, 427, 428,
	0, 429, 409, 410, 430, 431, 0, 432, 433, 516,
	434, 435, 0, 436, 437, 438, 439, 411, 440, 444,
	445, 441, 442, 443, 517, 0, 447, 448, 446, 0,
	449, 450, 451, 452, 453, 281, 454, 0, 455, 518,
	519, 520, 521, 0, 462, 0, 456, 457, 522, 458,
	523, 0, 459, 460, 461, 0, 463, 464, 0, 0,
	465, 466, 467, 468, 469, 471, 0, 472, 0, 470,
	473, 474, 475, 524, 525, 526, 214, 477, 476, 527,
	0, 0, 0, 0, 478, 479, 528, 480, 481, 482,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 484, 485, 231, 486, 234,
	232, 233, 487, 0, 235, 236, 237, 238, 239, 240,
	0, 0, 241, 488, 489, 490, 0, 242, 491, 0,
	0, 0, 243, 244, 245, 246, 247, 248, 0, 250,
	251, 252, 249, 0, 253, 0, 254, 255, 256, 0,
	257, 0, 258, 259, 0, 0, 0, 0, 0, 0,
	0, 260, 261, 262, 263, 264, 265, 492, 493, 0,
	266, 0, 268, 267, 0, 269, 0, 0, 270, 271,
	272, 0, 273, 0, 274, 275, 0, 276, 494, 277,
	278, 280, 282, 279, 283, 284, 285, 286, 495, 496,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	497, 290, 291, 0, 292, 0, 293, 0, 0, 0,
	294, 295, 0, 296, 498, 0, 499, 297, 0, 298,
	299, 300, 301, 500, 501, 502, 354, 0, 302, 303,
	0, 304, 305, 307, 0, 0, 0, 306, 308, 315,
	0, 0, 309, 503, 311, 310, 312, 313, 314, 504,
	0, 505, 0, 316, 0, 506, 0, 317, 318, 319,
	0, 320, 321, 0, 0, 322, 323, 324, 325, 326,
	0, 328, 327, 0, 329, 507, 0, 330, 331, 0,
	0, 332, 333, 0, 0, 334, 335, 336, 0, 337,
	338, 340, 342, 339, 341, 343, 345, 346, 344, 0,
	347, 348, 351, 350, 0, 349, 0, 0, 0, 352,
	0, 508, 353, 509, 355, 356, 0, 357, 358, 359,
	0, 0, 361, 362, 363, 0, 0, 364, 365, 510,
	0, 366, 0, 511, 367, 360, 368, 369, 370, 371,
	372, 373, 374, 0, 375, 376, 512, 377, 513, 378,
	0, 379, 0, 380, 381, 382, 383, 384, 385, 386,
	514, 387, 388, 0, 389, 390, 391, 392, 393, 0,
	395, 396, 397, 394, 398, 399, 400, 401, 0, 402,
	0, 403, 404, 405, 406, 515, 407, 0, 408, 562,
	413, 414, 415, 416, 417, 418, 0, 424, 425, 419,
	421, 422, 423, 420, 426, 427, 428, 0, 429, 409,
	410, 430, 431, 0, 432, 433, 516, 434, 435, 0,
	436, 437, 438, 439, 411, 440, 444, 445, 441, 442,
	443, 517, 0, 447, 448, 446, 0, 449, 450, 451,
	452, 453, 281, 454, 0, 455, 518, 519, 520, 521,
	0, 462, 0, 456, 457, 522, 458, 523, 0, 459,
	460, 461, 0, 463, 464, 0, 0, 465, 466, 467,
	468, 469, 471, 0, 472, 0, 470, 473, 474, 475,
	524, 525, 526, 214, 477, 476, 527, 0, 0, 0,
	0, 478, 479, 528, 480, 481, 482, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 483, 0, 1899, 0, 0, 226, 228, 227,
	229, 230, 484, 485, 231, 486, 234, 232, 233, 487,
	0, 235, 236, 237, 238, 239, 240, 0, 0, 241,
	488, 489, 490, 0, 242, 491, 0, 0, 0, 243,
	244, 245, 246, 247, 248, 0, 250, 251, 252, 249,
	0, 253, 0, 254, 255, 256, 0, 257, 0, 258,
	259, 0, 0, 0, 0, 0, 0, 0, 260, 261,
	262, 263, 264, 265, 492, 493, 0, 266, 0, 268,
	267, 0, 269, 0, 0, 270, 271, 272, 0, 273,
	0, 274, 275, 0, 276, 494, 277, 278, 280, 282,
	279, 283, 284, 285, 286, 495, 496, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 497, 290, 291,
	0, 292, 0, 293, 0, 0, 0, 294, 295, 0,
	296, 498, 0, 499, 297, 0, 298, 299, 300, 301,
	500, 501, 502, 354, 0, 302, 303, 0, 304, 305,
	307, 0, 0, 0, 306, 308, 315, 0, 0, 309,
	503, 311, 310, 312, 313, 314, 504, 0, 505, 0,
	316, 0, 506, 0, 317, 318, 319, 0, 320, 321,
	0, 0, 322, 323, 324, 325, 326, 0, 328, 327,
	0, 329, 507, 0, 330, 331, 0, 0, 332, 333,
	0, 0, 334, 335, 336, 0, 337, 338, 340, 342,
	339, 341, 343, 345, 346, 344, 0, 347, 348, 351,
	350, 0, 349, 0, 0, 0, 352, 0, 508, 353,
	509, 355, 356, 0, 357, 358, 359, 0, 0, 361,
	362, 363, 0, 0, 364, 365, 510, 0, 366, 0,
	511, 367, 360, 368, 369, 370, 371, 372, 373, 374,
	0, 375, 376, 512, 377, 513, 378, 0, 379, 0,
	380, 381, 382, 383, 384, 385, 386, 514, 387, 388,
	0, 389, 390, 391, 392, 393, 0, 395, 396, 397,
	394, 398, 399, 400, 401, 0, 402, 0, 403, 404,
	405, 406, 515, 407, 0, 408, 412, 413, 414, 415,
	416, 417, 418, 0, 424, 425, 419, 421, 422, 423,
	420, 426, 427, 428, 0, 0, 409, 410, 430, 431,
	0, 432, 433, 516, 434, 435, 0, 436, 437, 438,
	439, 411, 440, 444, 445, 441, 442, 443, 517, 0,
	447, 448, 446, 0, 449, 450, 451, 452, 453, 281,
	454, 0, 455, 518, 519, 520, 521, 0, 462, 0,
	456, 457, 522, 458, 523, 0, 459, 460, 461, 0,
	463, 464, 0, 0, 465, 466, 467, 468, 469, 471,
	0, 472, 0, 470, 473, 474, 475, 524, 525, 526,
	214, 477, 476, 527, 0, 0, 0, 0, 478, 479,
	528, 480, 481, 482, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 484,
	485, 231, 486, 234, 232, 233, 487, 0, 235, 236,
	237, 238, 239, 240, 0, 0, 241, 488, 489, 490,
	0, 242, 491, 0, 0, 0, 243, 244, 245, 246,
	247, 248, 0, 250, 251, 252, 249, 0, 253, 0,
	254, 255, 256, 0, 257, 0, 258, 259, 0, 0,
	0, 0, 0, 0, 0, 260, 261, 262, 263, 264,
	265, 492, 493, 0, 266, 0, 268, 267, 0, 269,
	0, 0, 270, 271, 272, 0, 273, 0, 274, 275,
	0, 276, 494, 277, 278, 280, 282, 279, 283, 284,
	285, 286, 495, 496, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 497, 290, 291, 0, 292, 0,
	293, 0, 0, 0, 294, 295, 0, 296, 498, 0,
	499, 297, 0, 298, 299, 300, 301, 1303, 501, 502,
	354, 0, 302, 303, 0, 304, 305, 307, 0, 0,
	0, 306, 308, 315, 0, 0, 309, 503, 311, 310,
	312, 313, 314, 504, 0, 505, 0, 316, 0, 506,
	0, 317, 318, 319, 0, 320, 321, 0, 0, 322,
	323, 324, 325, 326, 0, 328, 327, 0, 329, 507,
	0, 330, 331, 0, 0, 332, 333, 0, 0, 334,
	335, 336, 0, 337, 338, 340, 342, 339, 341, 343,
	345, 346, 344, 0, 347, 348, 351, 350, 0, 349,
	0, 0, 0, 352, 0, 508, 353, 509, 355, 356,
	0, 357, 358, 359, 0, 0, 361, 362, 363, 0,
	0, 364, 365, 510, 0, 366, 0, 511, 367, 360,
	368, 369, 370, 371, 372, 373, 374, 0, 375, 376,
	512, 377, 513, 378, 0, 379, 0, 380, 381, 382,
	383, 384, 385, 386, 514, 387, 388, 0, 389, 390,
	391, 392, 393, 0, 395, 396, 397, 394, 398, 399,
	400, 401, 0, 402, 0, 403, 404, 405, 406, 515,
	407, 0, 408, 412, 413, 414, 415, 416, 417, 418,
	0, 424, 425, 419, 421, 422, 423, 420, 426, 427,
	428, 0, 429, 409, 410, 430, 431, 0, 432, 433,
	516, 434, 435, 0, 436, 437, 438, 439, 411, 440,
	444, 445, 441, 442, 443, 517, 0, 447, 448, 446,
	0, 449, 450, 451, 452, 453, 281, 454, 0, 455,
	518, 519, 520, 521, 0, 462, 0, 456, 457, 522,
	458, 523, 0, 459, 460, 461, 0, 463, 464, 0,
	0, 465, 466, 467, 468, 469, 471, 0, 472, 0,
	470, 473, 474, 475, 524, 525, 526, 214, 477, 476,
	527, 0, 0, 0, 0, 478, 479, 528, 480, 481,
	482, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 484, 485, 231, 486,
	234, 232, 233, 487, 0, 235, 236, 237, 238, 239,
	240, 0, 0, 241, 488, 489, 490, 0, 242, 491,
	0, 0, 0, 243, 244, 245, 246, 247, 248, 0,
	250, 251, 252, 249, 0, 253, 0, 254, 255, 256,
	0, 257, 0, 258, 259, 0, 0, 0, 0, 0,
	0, 0, 260, 261, 262, 263, 264, 265, 492, 493,
	0, 266, 0, 268, 267, 0, 269, 0, 0, 270,
	271, 272, 0, 273, 0, 274, 275, 0, 276, 494,
	277, 278, 280, 282, 279, 283, 284, 285, 286, 495,
	496, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 497, 290, 291, 0, 292, 0, 293, 0, 0,
	0, 294, 295, 0, 296, 498, 0, 499, 297, 0,
	298, 299, 300, 301, 1243, 501, 502, 354, 0, 302,
	303, 0, 304, 305, 307, 0, 0, 0, 306, 308,
	315, 0, 0, 309, 503, 311, 310, 312, 313, 314,
	504, 0, 505, 0, 316, 0, 506, 0, 317, 318,
	319, 0, 320, 321, 0, 0, 322, 323, 324, 325,
	326, 0, 328, 327, 0, 329, 507, 0, 330, 331,
	0, 0, 332, 333, 0, 0, 334, 335, 336, 0,
	337, 338, 340, 342, 339, 341, 343, 345, 346, 344,
	0, 347, 348, 351, 350, 0, 349, 0, 0, 0,
	352, 0, 508, 353, 509, 355, 356, 0, 357, 358,
	359, 0, 0, 361, 362, 363, 0, 0, 364, 365,
	510, 0, 366, 0, 511, 367, 360, 368, 369, 370,
	371, 372, 373, 374, 0, 375, 376, 512, 377, 513,
	378, 0, 379, 0, 380, 381, 382, 383, 384, 385,
	386, 514, 387, 388, 0, 389, 390, 391, 392, 393,
	0, 395, 396, 397, 394, 398, 399, 400, 401, 0,
	402, 0, 403, 404, 405, 406, 515, 407, 0, 408,
	412, 413, 414, 415, 416, 417, 418, 0, 424, 425,
	419, 421, 422, 423, 420, 426, 427, 428, 0, 429,
	409, 410, 430, 431, 0, 432, 433, 516, 434, 435,
	0, 436, 437, 438, 439, 411, 440, 444, 445, 441,
	442, 443, 517, 0, 447, 448, 446, 0, 449, 450,
	451, 452, 453, 281, 454, 0, 455, 518, 519, 520,
	521, 0, 462, 0, 456, 457, 522, 458, 523, 0,
	459, 460, 461, 0, 463, 464, 0, 0, 465, 466,
	467, 468, 469, 471, 0, 472, 0, 470, 473, 474,
	475, 524, 525, 526, 214, 477, 476, 527, 0, 0,
	0, 0, 478, 479, 528, 480, 481, 482, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 484, 485, 231, 486, 234, 232, 233,
	487, 0, 235, 236, 237, 238, 239, 240, 0, 0,
	241, 488, 489, 490, 0, 242, 491, 0, 0, 0,
	243, 244, 245, 246, 247, 248, 0, 250, 251, 252,
	249, 0, 253, 0, 254, 255, 256, 0, 257, 0,
	258, 259, 0, 0, 0, 0, 0, 0, 0, 260,
	261, 262, 263, 264, 265, 492, 493, 0, 266, 0,
	268, 267, 0, 269, 0, 0, 270, 271, 272, 0,
	273, 0, 274, 275, 0, 276, 494, 277, 278, 280,
	282, 279, 283, 284, 285, 286, 495, 496, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 497, 290,
	291, 0, 292, 0, 293, 0, 0, 0, 294, 295,
	0, 296, 498, 0, 499, 297, 0, 298, 299, 300,
	301, 500, 501, 502, 354, 0, 302, 303, 0, 304,
	305, 307, 0, 0, 0, 306, 308, 315, 0, 0,
	309, 503, 311, 310, 312, 313, 314, 504, 0, 505,
	0, 316, 0, 506, 0, 317, 318, 319, 0, 320,
	321, 0, 0, 322, 323, 324, 325, 326, 0, 328,
	327, 0, 329, 507, 0, 330, 331, 0, 0, 332,
	333, 0, 0, 334, 335, 336, 0, 337, 338, 340,
	342, 339, 341, 343, 345, 346, 344, 0, 347, 348,
	351, 350, 0, 349, 0, 0, 0, 352, 0, 508,
	353, 509, 355, 356, 0, 357, 358, 359, 0, 0,
	361, 362, 363, 0, 0, 364, 365, 510, 0, 366,
	0, 511, 367, 360, 368, 369, 370, 371, 372, 373,
	374, 0, 375, 376, 512, 377, 513, 378, 0, 379,
	0, 380, 381, 382, 383, 384, 385, 386, 514, 998,
	388, 0, 389, 390, 391, 392, 393, 0, 395, 396,
	397, 394, 398, 399, 400, 401, 0, 402, 0, 403,
	404, 405, 406, 515, 407, 0, 408, 412, 413, 414,
	415, 416, 417, 418, 0, 424, 425, 419, 421, 422,
	423, 420, 426, 427, 428, 0, 429, 409, 410, 430,
	431, 0, 432, 433, 516, 434, 435, 0, 436, 437,
	438, 439, 411, 440, 444, 445, 441, 442, 443, 517,
	0, 447, 448, 446, 0, 449, 450, 451, 452, 453,
	281, 454, 0, 455, 518, 519, 520, 521, 0, 462,
	0, 456, 457, 522, 458, 523, 0, 459, 460, 461,
	0, 463, 464, 0, 0, 465, 466, 467, 468, 469,
	471, 0, 472, 0, 470, 473, 474, 475, 524, 525,
	526, 214, 477, 476, 527, 0, 0, 0, 0, 478,
	479, 528, 480, 481, 482, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 226, 228, 227, 229, 230,
	484, 485, 231, 486, 234, 232, 233, 487, 0, 235,
	236, 237, 238, 239, 240, 0, 0, 241, 488, 489,
	490, 0, 242, 491, 0, 0, 0, 243, 244, 245,
	246, 247, 248, 0, 250, 251, 252, 249, 0, 253,
	0, 254, 255, 256, 0, 257, 0, 258, 259, 0,
	0, 0, 0, 0, 0, 0, 260, 261, 262, 263,
	264, 265, 492, 493, 0, 266, 0, 268, 267, 0,
	269, 0, 0, 270, 271, 272, 0, 273, 0, 274,
	275, 0, 276, 494, 277, 278, 280, 282, 279, 283,
	284, 285, 286, 495, 496, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 497, 290, 291, 0, 292,
	0, 293, 0, 0, 0, 294, 295, 0, 296, 498,
	0, 499, 0, 0, 298, 299, 300, 301, 500, 501,
	502, 354, 0, 302, 303, 0, 304, 305, 307, 0,
	0, 0, 306, 308, 315, 0, 0, 309, 503, 311,
	310, 312, 313, 314, 504, 0, 505, 0, 316, 0,
	506, 0, 317, 318, 319, 0, 320, 321, 0, 0,
	322, 323, 324, 325, 326, 0, 328, 327, 0, 329,
	507, 0, 330, 331, 0, 0, 332, 333, 0, 0,
	334, 335, 336, 0, 337, 338, 340, 342, 339, 341,
	343, 345, 346, 344, 0, 347, 348, 351, 350, 0,
	349, 0, 0, 0, 352, 0, 508, 353, 509, 355,
	356, 0, 357, 358, 359, 0, 0, 361, 362, 363,
	0, 0, 364, 365, 510, 0, 366, 0, 511, 367,
	360, 368, 369, 0, 371, 372, 373, 374, 0, 375,
	376, 512, 377, 513, 378, 0, 379, 0, 380, 381,
	382, 383, 0, 385, 386, 514, 387, 388, 0, 389,
	390, 391, 392, 393, 0, 395, 396, 397, 394, 398,
	399, 400, 401, 0, 402, 0, 403, 404, 405, 406,
	515, 0, 0, 408, 412, 413, 414, 415, 416, 417,
	418, 0, 424, 425, 419, 421, 422, 423, 420, 426,
	427, 428, 0, 429, 409, 410, 430, 431, 0, 432,
	433, 516, 434, 435, 0, 436, 437, 438, 439, 411,
	440, 444, 445, 441, 442, 443, 517, 0, 447, 448,
	446, 0, 449, 450, 451, 452, 453, 281, 454, 0,
	455, 518, 519, 520, 521, 0, 462, 0, 456, 457,
	522, 458, 523, 0, 459, 460, 461, 0, 463, 464,
	0, 0, 465, 466, 467, 468, 469, 471, 0, 472,
	0, 470, 473, 474, 475, 524, 525, 526, 0, 477,
	476, 527, 0, 0, 0, 0, 478, 479, 528, 480,
	481, 482, 1482, 1483, 0, 1515, 1516, 1517, 1525, 1526,
	1527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 1513, 0, 0, 0, 0, 0, 0, 1485,
	0, 0, 0, 0, 1531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1482, 1483, 0, 1515, 1516,
	1517, 1525, 1526, 1527, 0, 0, 0, 0, 1484, 0,
	0, 0, 0, 0, 1518, 1513, 0, 1504, 0, 0,
	0, 0, 1485, 0, 1501, 0, 0, 1531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1484, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 1501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 1508, 1509, 1510, 0, 0, 0, 0,
	0, 0, 1490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 0, 0, 1532,
	0, 0, 0, 1512, 1514, 1507, 1508, 1509, 1510, 0,
	0, 0, 0, 0, 0, 1490, 0, 0, 0, 0,
	0, 0, 0, 1528, 0, 1529, 0, 0, 0, 0,
	0, 0, 1499, 1500, 0, 0, 0, 0, 0, 1522,
	0, 0, 1532, 0, 0, 0, 1512, 1514, 1520, 0,
	0, 0, 0, 0, 0, 0, 0, 1505, 0, 0,
	0, 0, 0, 0, 0, 0, 1528, 0, 1529, 0,
	0, 0, 0, 0, 0, 1499, 1500, 1530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1520, 0, 0, 1519, 0, 0, 0, 0, 0,
	1505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 1511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1482, 1483, 0, 1515,
	1516, 1517, 1525, 1526, 1527, 0, 0, 0, 0, 0,
	0, 1511, 1523, 0, 0, 1518, 1513, 0, 0, 0,
	0, 0, 0, 1485, 0, 0, 0, 0, 1531, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1484, 0, 0, 1523, 0, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1521, 0, 0, 1496,
	1497, 1503, 1524, 1502, 1498, 0, 1495, 1493, 1494, 1486,
	1487, 1488, 1489, 1491, 1492, 0, 0, 0, 0, 0,
	0, 0, 0, 2652, 0, 0, 1507, 1508, 1509, 1510,
	0, 0, 0, 0, 0, 0, 1490, 0, 0, 1521,
	0, 0, 1496, 1497, 1503, 1524, 1502, 1498, 0, 1495,
	1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492, 0, 0,
	1522, 0, 0, 1532, 0, 0, 2649, 1512, 1514, 0,
	0, 0, 0, 1482, 1483, 0, 0, 0, 0, 1525,
	1526, 1527, 0, 0, 0, 0, 0, 1528, 0, 1529,
	0, 0, 0, 1513, 0, 0, 1499, 1500, 0, 0,
	1485, 0, 0, 0, 0, 1531, 0, 0, 0, 0,
	0, 0, 1520, 0, 0, 0, 0, 0, 0, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 1484,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 1530, 0, 0, 0, 1501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1519, 0,
	1482, 1483, 0, 1515, 1516, 1517, 1525, 1526, 1527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	1513, 0, 0, 0, 0, 0, 0, 1485, 0, 0,
	0, 0, 1531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1511, 1507, 1508, 1509, 1510, 0, 0, 0,
	0, 0, 0, 1490, 0, 0, 1484, 0, 0, 0,
	1506, 0, 0, 0, 0, 1504, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 1522, 0, 0,
	1532, 0, 0, 0, 1512, 1514, 1523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1499, 1500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1520,
	1507, 1508, 1509, 1510, 0, 0, 0, 0, 1505, 0,
	1490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 0, 0, 1532, 0, 0,
	1521, 1512, 1514, 1496, 1497, 1503, 1524, 1502, 1498, 0,
	1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492, 0,
	0, 1528, 0, 1529, 0, 0, 0, 2648, 0, 0,
	1499, 1500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1520, 0, 0, 1511,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 0, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1519, 1523, 1482, 1483, 0, 1515, 1516, 1517,
	1525, 1526, 1527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 1513, 0, 0, 0, 0, 0,
	0, 1485, 0, 0, 0, 0, 1531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1484, 0, 0, 0, 1506, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 1501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 0, 0,
	1523, 0, 0, 1524, 1502, 1498, 0, 1495, 1493, 1494,
	1486, 1487, 1488, 1489, 1491, 1492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 1508, 1509, 1510, 0, 0,
	0, 0, 0, 0, 1490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 1532, 0, 0, 1521, 1512, 1514, 1496, 1497, 1503,
	1524, 1502, 1498, 0, 1495, 1493, 1494, 1486, 1487, 1488,
	1489, 1491, 1492, 0, 0, 1528, 0, 1529, 0, 0,
	0, 2647, 0, 0, 1499, 1500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 0, 0, 0, 0, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1519, 0, 1482, 1483,
	0, 1515, 1516, 1517, 1525, 1526, 1527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 1513, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	1531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1484, 0, 0, 0, 1506, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	1501, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 1508,
	1509, 1510, 0, 0, 0, 0, 0, 0, 1490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 0, 0, 1532, 0, 0, 1521, 1512,
	1514, 1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493,
	1494, 1486, 1487, 1488, 1489, 1491, 1492, 0, 0, 1528,
	0, 1529, 0, 0, 0, 2130, 0, 0, 1499, 1500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1520, 0, 0, 0, 0, 0,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1482, 1483, 0,
	1515, 1516, 1517, 1525, 1526, 1527, 0, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 1518, 1513, 0, 0,
	0, 0, 0, 0, 1485, 0, 0, 0, 0, 1531,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	1482, 1483, 0, 1515, 1516, 1517, 1525, 1526, 1527, 0,
	0, 0, 0, 1484, 0, 0, 0, 0, 1523, 1518,
	1513, 0, 1504, 0, 0, 0, 0, 1485, 0, 1501,
	0, 0, 1531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1484, 0, 0, 0,
	0, 0, 0, 0, 0, 1504, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 1508, 1509,
	1510, 0, 0, 0, 0, 0, 0, 1490, 0, 0,
	0, 0, 1521, 0, 0, 1496, 1497, 1503, 1524, 1502,
	1498, 0, 1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491,
	1492, 1522, 0, 0, 1532, 3600, 0, 0, 1512, 1514,
	1507, 1508, 1509, 1510, 0, 0, 0, 0, 0, 0,
	1490, 0, 0, 0, 0, 0, 0, 0, 1528, 0,
	1529, 0, 0, 0, 0, 0, 0, 1499, 1500, 0,
	0, 0, 0, 0, 1522, 0, 0, 1532, 0, 0,
	0, 1512, 1514, 1520, 0, 0, 0, 0, 0, 0,
	0, 0, 1505, 0, 0, 0, 0, 0, 746, 0,
	782, 1528, 0, 1529, 0, 0, 0, 0, 0, 0,
	1499, 1500, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 753, 0, 0, 0, 1520, 0, 0, 1519,
	0, 0, 0, 0, 0, 1505, 765, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	0, 752, 0, 0, 0, 0, 755, 0, 0, 0,
	788, 0, 1519, 1511, 0, 0, 0, 762, 763, 0,
	0, 0, 0, 775, 0, 0, 0, 0, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 783, 757, 1482,
	1483, 0, 1515, 1516, 1517, 1525, 1526, 1527, 0, 0,
	0, 0, 0, 0, 0, 0, 1511, 1523, 1518, 1513,
	0, 0, 0, 0, 0, 781, 1485, 0, 0, 0,
	0, 1531, 0, 0, 1506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1484, 0, 758, 0, 0,
	1523, 0, 0, 0, 1504, 750, 0, 0, 0, 0,
	0, 1501, 0, 0, 0, 0, 0, 0, 0, 0,
	759, 760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1521, 767, 766, 1496, 1497, 1503, 1524, 1502, 1498,
	761, 1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492,
	0, 0, 0, 0, 3596, 0, 787, 0, 0, 1507,
	1508, 1509, 1510, 0, 0, 0, 0, 0, 0, 1490,
	0, 0, 784, 0, 1521, 0, 0, 1496, 1497, 1503,
	1524, 1502, 1498, 0, 1495, 1493, 1494, 1486, 1487, 1488,
	1489, 1491, 1492, 1522, 0, 0, 1532, 3517, 0, 0,
	1512, 1514, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 756, 0, 0, 0, 0, 0, 0,
	1528, 0, 1529, 0, 0, 0, 0, 754, 0, 1499,
	1500, 779, 780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1520, 0, 0, 0, 0,
	0, 0, 0, 0, 1505, 0, 777, 0, 0, 0,
	0, 0, 0, 773, 0, 0, 770, 0, 0, 0,
	0, 0, 771, 0, 1530, 0, 0, 0, 0, 748,
	0, 785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1519, 0, 0, 0, 0, 0, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 772, 0, 0,
	0, 769, 0, 0, 0, 0, 0, 0, 1482, 1483,
	786, 1515, 1516, 1517, 1525, 1526, 1527, 0, 774, 0,
	0, 0, 0, 0, 0, 1511, 0, 1518, 1513, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 776, 0,
	1531, 0, 0, 1506, 0, 0, 0, 0, 0, 0,
	0, 1482, 1483, 0, 1515, 1516, 1517, 1525, 1526, 1527,
	778, 0, 0, 0, 1484, 0, 0, 0, 0, 1523,
	1518, 1513, 0, 1504, 0, 0, 0, 0, 1485, 0,
	1501, 0, 0, 1531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1484, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 0, 1501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 1508,
	1509, 1510, 0, 0, 0, 0, 0, 0, 1490, 0,
	0, 0, 0, 1521, 0, 0, 1496, 1497, 1503, 1524,
	1502, 1498, 0, 1495, 1493, 1494, 1486, 1487, 1488, 1489,
	1491, 1492, 1522, 0, 0, 1532, 3516, 0, 0, 1512,
	1514, 1507, 1508, 1509, 1510, 0, 0, 0, 0, 0,
	0, 1490, 0, 0, 0, 0, 0, 0, 0, 1528,
	0, 1529, 0, 0, 0, 0, 0, 0, 1499, 1500,
	0, 0, 0, 0, 0, 1522, 0, 0, 1532, 0,
	0, 0, 1512, 1514, 1520, 0, 0, 0, 0, 0,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 0,
	0, 0, 1528, 0, 1529, 0, 0, 0, 0, 0,
	0, 1499, 1500, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1520, 0, 0,
	1519, 0, 0, 0, 0, 0, 1505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1519, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	1482, 1483, 0, 1515, 1516, 1517, 1525, 1526, 1527, 0,
	0, 0, 0, 0, 0, 0, 0, 1511, 1523, 1518,
	1513, 0, 0, 0, 0, 0, 0, 1485, 0, 0,
	0, 0, 1531, 0, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1484, 0, 0, 0,
	0, 1523, 0, 0, 0, 1504, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1521, 0, 0, 1496, 1497, 1503, 1524, 1502,
	1498, 0, 1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491,
	1492, 0, 0, 0, 0, 3401, 0, 0, 0, 0,
	1507, 1508, 1509, 1510, 0, 0, 0, 0, 0, 0,
	1490, 0, 0, 0, 0, 1521, 0, 0, 1496, 1497,
	1503, 1524, 1502, 1498, 0, 1495, 1493, 1494, 1486, 1487,
	1488, 1489, 1491, 1492, 1522, 0, 0, 1532, 3298, 0,
	0, 1512, 1514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1528, 0, 1529, 0, 0, 0, 0, 0, 0,
	1499, 1500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1520, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1482,
	1483, 0, 1515, 1516, 1517, 1525, 1526, 1527, 0, 0,
	0, 0, 0, 0, 0, 0, 1511, 0, 1518, 1513,
	0, 0, 0, 0, 0, 0, 1485, 0, 0, 0,
	0, 1531, 0, 0, 1506, 0, 0, 0, 0, 0,
	0, 0, 1482, 1483, 0, 1515, 1516, 1517, 1525, 1526,
	1527, 0, 0, 0, 0, 1484, 0, 0, 0, 0,
	1523, 1518, 1513, 0, 1504, 0, 0, 0, 0, 1485,
	0, 1501, 0, 0, 1531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1484, 0,
	0, 0, 0, 0, 0, 0, 0, 1504, 0, 0,
	0, 0, 0, 0, 1501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	1508, 1509, 1510, 0, 0, 0, 0, 0, 0, 1490,
	0, 0, 0, 0, 1521, 0, 0, 1496, 1497, 1503,
	1524, 1502, 1498, 0, 1495, 1493, 1494, 1486, 1487, 1488,
	1489, 1491, 1492, 1522, 0, 0, 1532, 3251, 0, 0,
	1512, 1514, 1507, 1508, 1509, 1510, 0, 0, 0, 0,
	0, 0, 1490, 0, 0, 0, 0, 0, 0, 0,
	1528, 0, 1529, 0, 0, 0, 0, 0, 0, 1499,
	1500, 0, 0, 0, 0, 0, 1522, 0, 0, 1532,
	0, 0, 0, 1512, 1514, 1520, 0, 0, 0, 0,
	0, 0, 0, 0, 1505, 0, 0, 0, 0, 0,
	0, 0, 0, 1528, 0, 1529, 0, 0, 0, 0,
	0, 0, 1499, 1500, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1520, 0,
	0, 1519, 0, 0, 0, 0, 0, 1505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1519, 1511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 0, 0, 0, 0, 0, 0,
	0, 1482, 1483, 0, 1515, 1516, 1517, 1525, 1526, 1527,
	0, 0, 0, 0, 0, 0, 0, 0, 1511, 1523,
	1518, 1513, 0, 0, 0, 0, 0, 0, 1485, 0,
	0, 0, 0, 1531, 0, 0, 1506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1484, 0, 0,
	0, 0, 1523, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 0, 1501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1521, 0, 0, 1496, 1497, 1503, 1524,
	1502, 1498, 0, 1495, 1493, 1494, 1486, 1487, 1488, 1489,
	1491, 1492, 0, 0, 0, 0, 3250, 0, 0, 0,
	0, 1507, 1508, 1509, 1510, 0, 0, 0, 0, 0,
	0, 1490, 0, 0, 0, 0, 1521, 0, 0, 1496,
	1497, 1503, 1524, 1502, 1498, 0, 1495, 1493, 1494, 1486,
	1487, 1488, 1489, 1491, 1492, 1522, 0, 0, 1532, 3249,
	0, 0, 1512, 1514, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1528, 0, 1529, 0, 0, 0, 0, 0,
	0, 1499, 1500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1520, 0, 0,
	0, 0, 0, 0, 0, 0, 1505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1482, 1483, 0, 1515, 1516, 1517, 1525, 1526, 1527, 0,
	0, 0, 0, 0, 0, 0, 0, 1511, 0, 1518,
	1513, 0, 0, 0, 0, 0, 0, 1485, 0, 0,
	0, 0, 1531, 0, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 1482, 1483, 0, 1515, 1516, 1517, 1525,
	1526, 1527, 0, 0, 0, 0, 1484, 0, 0, 0,
	0, 1523, 1518, 1513, 0, 1504, 0, 0, 0, 0,
	1485, 0, 1501, 0, 0, 1531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1484,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 1501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 1508, 1509, 1510, 0, 0, 0, 0, 0, 0,
	1490, 0, 0, 0, 0, 1521, 0, 0, 1496, 1497,
	1503, 1524, 1502, 1498, 0, 1495, 1493, 1494, 1486, 1487,
	1488, 1489, 1491, 1492, 1522, 0, 0, 1532, 3008, 0,
	0, 1512, 1514, 1507, 1508, 1509, 1510, 0, 0, 0,
	0, 0, 0, 1490, 0, 0, 0, 0, 0, 0,
	0, 1528, 0, 1529, 0, 0, 0, 0, 0, 0,
	1499, 1500, 0, 0, 0, 0, 0, 1522, 0, 0,
	1532, 0, 0, 0, 1512, 1514, 1520, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 0, 0, 1528, 0, 1529, 0, 0, 0,
	0, 0, 0, 1499, 1500, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1520,
	0, 0, 1519, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1519, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 0, 0, 0,
	0, 0, 1482, 1483, 0, 1515, 1516, 1517, 1525, 1526,
	1527, 0, 0, 0, 0, 0, 0, 0, 0, 1511,
	1523, 1518, 1513, 0, 0, 0, 0, 0, 0, 1485,
	0, 0, 0, 0, 1531, 0, 0, 1506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1484, 0,
	0, 0, 0, 1523, 0, 0, 0, 1504, 0, 0,
	0, 0, 0, 0, 1501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1521, 0, 0, 1496, 1497, 1503,
	1524, 1502, 1498, 0, 1495, 1493, 1494, 1486, 1487, 1488,
	1489, 1491, 1492, 0, 0, 0, 0, 2645, 0, 0,
	0, 0, 1507, 1508, 1509, 1510, 0, 0, 0, 0,
	0, 0, 1490, 0, 0, 0, 0, 1521, 0, 0,
	1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493, 1494,
	1486, 1487, 1488, 1489, 1491, 1492, 1522, 0, 0, 1532,
	2644, 0, 0, 1512, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1528, 0, 1529, 0, 0, 0, 0,
	0, 0, 1499, 1500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1520, 0,
	0, 0, 0, 0, 0, 0, 0, 1505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1482, 1483, 0, 1515, 1516, 1517, 1525, 1526, 1527,
	0, 0, 0, 0, 0, 0, 0, 0, 1511, 0,
	1518, 1513, 0, 0, 0, 0, 0, 0, 1485, 0,
	0, 0, 0, 1531, 0, 0, 1506, 0, 0, 0,
	0, 0, 0, 0, 1482, 1483, 0, 1515, 1516, 1517,
	1525, 1526, 1527, 0, 0, 0, 0, 1484, 0, 0,
	0, 0, 1523, 1518, 1513, 0, 1504, 0, 0, 0,
	0, 1485, 0, 1501, 0, 0, 1531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1484, 0, 0, 0, 0, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 1501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 1508, 1509, 1510, 0, 0, 0, 0, 0,
	0, 1490, 0, 0, 0, 0, 1521, 0, 0, 1496,
	1497, 1503, 1524, 1502, 1498, 0, 1495, 1493, 1494, 1486,
	1487, 1488, 1489, 1491, 1492, 1522, 0, 0, 1532, 2643,
	0, 0, 1512, 1514, 1507, 1508, 1509, 1510, 0, 0,
	0, 0, 0, 0, 1490, 0, 0, 0, 0, 0,
	0, 0, 1528, 0, 1529, 0, 0, 0, 0, 0,
	0, 1499, 1500, 0, 0, 0, 0, 0, 1522, 0,
	0, 1532, 0, 0, 0, 1512, 1514, 1520, 0, 0,
	0, 0, 0, 0, 0, 0, 1505, 0, 0, 0,
	0, 0, 0, 0, 0, 1528, 0, 1529, 0, 0,
	0, 0, 0, 0, 1499, 1500, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 0, 0, 1519, 0, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1519, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 1482, 1483, 0, 1515, 1516, 1517, 1525,
	1526, 1527, 0, 0, 0, 0, 0, 0, 0, 0,
	1511, 1523, 1518, 1513, 0, 0, 0, 0, 0, 0,
	1485, 0, 0, 0, 0, 1531, 0, 0, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1484,
	0, 0, 0, 0, 1523, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 1501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 0, 0, 1496, 1497,
	1503, 1524, 1502, 1498, 0, 1495, 1493, 1494, 1486, 1487,
	1488, 1489, 1491, 1492, 0, 0, 0, 0, 2642, 0,
	0, 0, 0, 1507, 1508, 1509, 1510, 0, 0, 0,
	0, 0, 0, 1490, 3705, 0, 0, 0, 1521, 0,
	0, 1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493,
	1494, 1486, 1487, 1488, 1489, 1491, 1492, 1522, 0, 2600,
	1532, 0, 0, 0, 1512, 1514, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1528, 0, 1529, 0, 0, 0,
	0, 0, 0, 1499, 1500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1520,
	0, 0, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3704, 0, 0,
	0, 0, 1482, 1483, 0, 1515, 1516, 1517, 1525, 1526,
	1527, 0, 0, 0, 0, 0, 0, 0, 0, 1511,
	0, 1518, 1513, 0, 0, 0, 0, 2571, 0, 1485,
	0, 0, 0, 0, 1531, 0, 0, 1506, 0, 0,
	0, 0, 0, 0, 0, 1482, 1483, 0, 1515, 1516,
	1517, 1525, 1526, 1527, 0, 0, 0, 0, 1484, 0,
	0, 0, 0, 1523, 1518, 1513, 0, 1504, 0, 0,
	0, 0, 1485, 0, 1501, 0, 0, 1531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1484, 0, 2572, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 1501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 1508, 1509, 1510, 0, 0, 0, 0,
	0, 0, 1490, 0, 0, 0, 0, 1521, 0, 0,
	1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493, 1494,
	1486, 1487, 1488, 1489, 1491, 1492, 1522, 0, 0, 1532,
	0, 0, 0, 1512, 1514, 1507, 1508, 1509, 1510, 0,
	0, 0, 0, 0, 0, 1490, 0, 2692, 0, 0,
	2691, 0, 0, 1528, 0, 1529, 0, 0, 0, 0,
	0, 0, 1499, 1500, 0, 0, 0, 0, 0, 1522,
	0, 0, 1532, 0, 0, 0, 1512, 1514, 1520, 0,
	0, 0, 0, 0, 0, 0, 0, 1505, 0, 0,
	0, 0, 0, 0, 0, 0, 1528, 0, 1529, 0,
	0, 0, 0, 0, 0, 1499, 1500, 1530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1520, 0, 0, 1519, 0, 0, 0, 0, 0,
	1505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 1511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 2240, 0, 0,
	0, 0, 0, 0, 1482, 1483, 0, 1515, 1516, 1517,
	1525, 1526, 1527, 0, 0, 0, 0, 0, 0, 0,
	0, 1511, 1523, 1518, 1513, 0, 0, 0, 2239, 0,
	0, 1485, 0, 0, 0, 0, 1531, 0, 0, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1484, 0, 0, 0, 0, 1523, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 1501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1521, 0, 0, 1496,
	1497, 1503, 1524, 1502, 1498, 0, 1495, 1493, 1494, 1486,
	1487, 1488, 1489, 1491, 1492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 1508, 1509, 1510, 0, 0,
	0, 0, 0, 0, 1490, 0, 0, 0, 0, 1521,
	0, 0, 1496, 1497, 1503, 1524, 1502, 1498, 0, 1495,
	1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492, 1522, 0,
	0, 1532, 0, 0, 0, 1512, 1514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1528, 0, 1529, 0, 0,
	0, 0, 0, 0, 1499, 1500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 0, 0, 0, 0, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1519, 0, 1482, 1483,
	0, 1515, 1516, 1517, 1525, 1526, 1527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 1513, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	1531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1484, 0, 0, 0, 1506, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	1501, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 1508,
	1509, 1510, 0, 0, 0, 0, 0, 0, 1490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 0, 0, 1532, 0, 0, 1521, 1512,
	1514, 1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493,
	1494, 1486, 1487, 1488, 1489, 1491, 1492, 0, 0, 1528,
	0, 1529, 0, 0, 0, 0, 0, 0, 1499, 1500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1520, 0, 0, 0, 0, 0,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1519, 839, 1482, 1483, 0, 1515, 1516, 1517, 1525, 1526,
	1527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 1513, 0, 0, 0, 0, 0, 0, 1485,
	0, 0, 0, 0, 1531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1484, 0,
	0, 0, 1506, 0, 0, 0, 0, 1504, 0, 0,
	0, 0, 0, 0, 1501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 1508, 1509, 1510, 0, 0, 0, 0,
	0, 0, 1490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 0, 0, 1532,
	0, 0, 1521, 1512, 1514, 1496, 1497, 1503, 1524, 1502,
	1498, 0, 1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491,
	1492, 0, 0, 1528, 0, 1529, 0, 0, 0, 0,
	0, 0, 1499, 1500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1520, 0,
	0, 0, 0, 0, 0, 0, 0, 1505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1519, 0, 1482, 1483, 0, 1515,
	1516, 1517, 1525, 1526, 1527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 1513, 0, 0, 0,
	0, 0, 0, 1485, 0, 0, 0, 0, 1531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1484, 0, 0, 0, 1506, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 1508, 1509, 1510,
	0, 0, 0, 0, 0, 0, 1490, 0, 0, 0,
	0, 2698, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1522, 0, 0, 1532, 0, 0, 1521, 1512, 1514, 1496,
	1497, 1503, 1524, 1502, 1498, 0, 1495, 1493, 1494, 1486,
	1487, 1488, 1489, 1491, 1492, 0, 0, 1528, 0, 1529,
	0, 0, 0, 0, 0, 0, 1499, 1500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1520, 0, 0, 0, 0, 0, 0, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1519, 0,
	1482, 1483, 0, 1515, 1516, 1517, 1525, 1526, 1527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	1513, 0, 0, 0, 2693, 0, 0, 1485, 0, 0,
	0, 0, 1531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1484, 0, 0, 0,
	1506, 0, 0, 0, 0, 1504, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 1508, 1509, 1510, 0, 0, 0, 0, 0, 0,
	1490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 0, 0, 1532, 0, 0,
	1521, 1512, 1514, 1496, 1497, 1503, 1524, 1502, 1498, 0,
	1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492, 0,
	0, 1528, 0, 1529, 0, 0, 0, 0, 0, 0,
	1499, 1500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1520, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1519, 0, 1482, 1483, 0, 1515, 1516, 1517,
	1525, 1526, 1527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 1513, 0, 0, 0, 0, 0,
	0, 1485, 0, 0, 0, 0, 1531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1484, 0, 0, 0, 1506, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 1501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 1508, 1509, 1510, 0, 0,
	0, 0, 0, 0, 1490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 1532, 0, 0, 1521, 1512, 1514, 1496, 1497, 1503,
	1524, 1502, 1498, 0, 1495, 1493, 1494, 1486, 1487, 1488,
	1489, 1491, 1492, 0, 0, 1528, 0, 1529, 0, 0,
	0, 0, 0, 0, 1499, 1500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 0, 0, 0, 0, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1519, 0, 1482, 1483,
	0, 1515, 1516, 1517, 1525, 1526, 1527, 0, 0, 0,
	0, 0, 0, 0, 2660, 0, 0, 1518, 1513, 0,
	0, 0, 2646, 0, 0, 1485, 0, 0, 0, 0,
	1531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1484, 0, 0, 0, 1506, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	1501, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 1508,
	1509, 1510, 0, 0, 0, 0, 0, 0, 1490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 0, 0, 1532, 0, 0, 1521, 1512,
	1514, 1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493,
	1494, 1486, 1487, 1488, 1489, 1491, 1492, 0, 0, 1528,
	0, 1529, 0, 0, 0, 0, 0, 0, 1499, 1500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1520, 0, 0, 0, 0, 0,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1519, 0, 1482, 1483, 0, 1515, 1516, 1517, 1525, 1526,
	1527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 1513, 0, 0, 0, 0, 0, 0, 1485,
	0, 0, 0, 0, 1531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1484, 0,
	0, 0, 1506, 0, 0, 0, 0, 1504, 0, 0,
	0, 0, 0, 0, 1501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 1508, 1509, 1510, 0, 0, 0, 0,
	0, 0, 1490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 0, 0, 1532,
	0, 0, 1521, 1512, 1514, 1496, 1497, 1503, 1524, 1502,
	1498, 0, 1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491,
	1492, 0, 0, 1528, 0, 1529, 0, 0, 0, 0,
	0, 0, 1499, 1500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1520, 0,
	0, 0, 0, 0, 0, 0, 0, 1505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1519, 0, 1482, 1483, 0, 1515,
	1516, 1517, 1525, 1526, 1527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 1513, 0, 0, 0,
	0, 0, 0, 1485, 0, 0, 0, 0, 1531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1484, 0, 0, 0, 1506, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 1508, 1509, 1510,
	0, 0, 0, 0, 0, 0, 1490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1522, 0, 0, 1532, 0, 0, 1521, 1512, 1514, 1496,
	1497, 1503, 1524, 1502, 1498, 0, 1495, 1493, 1494, 1486,
	1487, 1488, 1489, 1491, 1492, 0, 0, 1528, 0, 1529,
	0, 0, 0, 0, 0, 0, 1499, 1500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1520, 0, 0, 0, 0, 0, 0, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1482, 1483, 0, 1515, 1516, 1517, 1525, 1526, 1527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1513, 0, 0, 0, 0, 0, 0, 1485, 0, 0,
	0, 0, 1531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1484, 0, 0, 0,
	1506, 0, 0, 0, 0, 1504, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 1508, 1509, 1510, 0, 0, 0, 0, 0, 0,
	1490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 1701, 0, 1532, 0, 0,
	1521, 1512, 1514, 1496, 1497, 1503, 1524, 1502, 1498, 0,
	1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492, 0,
	0, 1528, 0, 1529, 0, 0, 0, 0, 0, 0,
	1499, 1500, 0, 0, 0, 1718, 1695, 1702, 0, 1685,
	1728, 1727, 0, 0, 1687, 1686, 1520, 0, 0, 0,
	0, 0, 1738, 1739, 0, 1505, 0, 0, 0, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 625, 0, 0,
	0, 0, 0, 0, 1729, 0, 1725, 1724, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 626, 645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1511, 0, 0, 1722,
	1720, 1721, 0, 627, 0, 0, 628, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 0, 0, 0,
	0, 0, 0, 652, 0, 0, 0, 0, 0, 629,
	0, 0, 1697, 0, 0, 0, 0, 0, 650, 0,
	1523, 0, 1711, 1700, 1713, 1715, 1716, 1717, 1712, 0,
	1705, 0, 0, 0, 0, 0, 0, 630, 0, 0,
	1734, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 631, 0, 0,
	632, 654, 0, 0, 0, 596, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1689, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1726, 0, 0, 0, 1698, 0, 1699, 0,
	0, 0, 0, 0, 1521, 0, 0, 1496, 1497, 1503,
	1524, 1502, 1498, 0, 1495, 1493, 1494, 1486, 1487, 1488,
	1489, 1491, 1492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 653, 0, 0, 0, 0, 0, 0, 1719,
	635, 0, 0, 1708, 1706, 1707, 1710, 1709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 633, 0, 0, 1690, 1691,
	1693, 1694, 0, 0, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1714, 1692, 0, 0, 0,
	0, 0, 0, 0, 637, 0, 1737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1688, 0, 0, 1730, 1731, 1732, 1733, 0,
	0, 595, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 639, 1696, 0, 0, 0, 0,
	1703, 1736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 640, 0, 0, 657, 0,
	656, 0, 0, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 649, 0, 0, 0, 0, 658, 0, 655, 0,
	0, 0, 0, 647,
}
var sqlPact = [...]int{

	4739, -1000, -1000, -1000, -1000, -1000, -1000, 192, 184, 182,
	177, 176, 170, 169, 168, -1000, -1000, -1000, 163, -1000,
	-1000, 159, -1000, 157, 156, 154, 145, -1000, 141, 140,
	134, -1000, -1000, -1000, -1000, 132, 131, 130, 59716, 1849,
	71780, 62717, 1939, 54111, 71347, 53678, 70914, 70481, 129, -1000,
	70048, 127, 126, 116, -1000, -1000, 115, 114, 2382, 44102,
	113, 112, 109, 1959, 108, 107, -1000, 98, -1000, 84382,
	1401, -1000, 96, 95, -1000, 8254, 8072, 61857, 2304, 92,
	91, 43668, 2272, 2285, -1000, -1000, 1565, -1000, -1000, 89,
	88, 87, 86, 82, 79, 78, 77, 75, -1000, 72,
	71, 70, 69, 67, 64, 63, -1000, 62, 60, 57,
	56, 55, 53, 50, 49, 47, 46, 45, 44, -1000,
	78566, 1536, 1438, 1433, 1415, 1412, 1436, 888, 39, 38,
	33, 32, 31, 30, 29, -1000, 28, 25, 24, 23,
	-1000, 19, 18, 152, 17, 16, 15, 6, 3, 1966,
	-1000, 1416, 1085, 20753, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 76050, 72207, 2,
	-38, 1, -1000, 2669, 896, 36295, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 447, -1000, -1000, -1000,
	248, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1518,
	680, -1000, -1000, -1000, 69615, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1848, 5, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 676, -1000, 1846, 210, 1786, -1000, -1000, -1000,
	-1000, -1000, 72207, -1000, -1000, 2974, 2973, 1680, 675, 69188,
	-1000, 1355, -1000, 827, 23501, -1000, 1033, -1000, 23501, 245,
	-1000, -1000, -1000, -1000, -1000, -1000, 53245, 15225, 52812, 52379,
	68755, 14782, 59289, 48502, 48059, -1000, -1000, 38911, 1113, -1000,
	-1000, -1000, -1000, -1000, -21, 49370, 72207, -1000, 241, -1000,
	-1000, -1000, -1000, -1000, -1000, 30017, 1028, 29549, 706, 29081,
	472, -1000, -1000, -1000, -1000, 2972, 2970, 999, 2969, 2601,
	75623, 1475, 2968, 1420, 1059, 910, 2967, 2966, 2965, 2964,
	2963, 2962, 2961, 1190, 68322, 2391, 1535, 47616, 47173, 59716,
	59716, 2104, 67889, 1156, 1153, -1000, -1000, -1000, -1000, 2419,
	2281, 2280, 41080, -1000, -1000, 2960, 2957, 2956, 2953, 2950,
	75196, 1466, 2949, 2019, 2948, 2947, 2945, 2944, 2942, 2941,
	2940, 2939, 2938, -1000, 58856, 58423, 57990, 57557, 67456, 46730,
	46287, -1000, -1000, -1000, 38023, 9648, 9069, 67023, 39352, 59716,
	59716, -1000, -1000, 30473, 100, -1000, -1000, -1000, 38911, 2317,
	-1000, 30473, 100, -1000, 72207, -1000, 2390, 1624, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2430, 1346,
	2828, 45844, 1597, 1139, 2650, 2416, 2413, 1297, 2058, 2412,
	2407, 2406, 2403, 2402, 1493, 2059, 284, 20285, 1330, 1281,
	2367, 2364, 2836, 1606, 1813, 51946, 2937, 2935, 2626, 2359,
	2346, 2316, -1000, -1000, -1000, -1000, 1260, -1000, -1000, 54965,
	-1000, -1000, 1051, -1000, -1000, 1051, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1104, 74342, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1416, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1740, -1000, 1638, -1000, -1000, 2069, 2643, 2643, 2643, 2673,
	437, 429, -1000, 152, -1000, -1000, 83611, -1000, -1000, 30473,
	30473, 30473, 30473, 30473, 1667, -1000, 674, -1000, -1000, 717,
	-1000, 673, 530, -1000, -1000, -1000, -1000, -1000, -1000, 672,
	2844, -1000, -1000, -1000, -1000, -1000, 2807, -1000, 17489, -1000,
	-1000, -1000, 387, 670, 30473, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 802,
	-1000, 238, 845, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 591, 1566, 588,
	588, 588, -1000, -1000, 906, -1000, -1000, -1000, 321, 578,
	310, 577, -1000, -1000, -1000, -1000, 2389, 669, 666, -1000,
	664, 662, 661, 657, 655, -1000, -1000, -1000, 653, 652,
	651, 648, 647, 646, 645, 644, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 905, -1000, 643, 640, 637, 635,
	634, 626, 625, 624, 622, -1000, -1000, -22, 72207, -1000,
	447, -22, -1000, -1000, 621, -1000, 23957, 23957, 23957, -1000,
	-1000, 1845, 30473, -1000, 2031, -1000, -14, -14, 784, 37157,
	-1000, 35429, 784, 689, 725, 40647, -1000, 2313, -1000, -1000,
	616, 237, -1000, -1000, 2311, 72207, 15666, 72207, 59716, 59716,
	59716, 2551, 30473, -1000, -1000, 45401, 72207, 60143, 2758, 84311,
	45401, 72207, 2383, -1000, -1000, -1000, 72207, -1000, 30473, -1000,
	2757, 1210, 49801, 2689, -32, -1000, -1000, -1000, -1000, -1000,
	-1000, 1984, 2015, 1017, 1882, 1471, -1000, 23501, 2591, -1000,
	-1000, -1000, 215, 15666, -1000, 2481, 2533, 1126, -1000, 1879,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1534, 2530,
	-1000, 1699, 2528, 1533, -1000, -1000, 1678, -1000, -1000, 2619,
	-1000, -1000, 1804, 2527, -13, -1000, -1000, 867, 2525, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 867, 2524,
	-1000, 781, -1000, 48943, 38911, 49370, -24, -1000, -1000, -41,
	-1000, 14339, 83611, -1000, -1000, -1000, 83611, 783, -1000, -1000,
	2521, -1000, 83611, 778, -1000, -1000, 2516, -1000, -1000, -1000,
	2929, -1000, 2928, 1945, 2927, 2922, 2921, -1000, 1390, 1564,
	2917, -1000, 2907, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	57124, 1841, -1000, -1000, 56258, 56691, 909, -1000, 867, 1944,
	-1000, 867, 1943, -1000, 754, -1000, 2904, 66590, 2119, 867,
	1937, -1000, -1000, -1000, -1000, -1000, 41942, -1000, 41942, -1000,
	41942, -1000, 1244, -1000, 74769, -14, -14, 2807, -1000, -1000,
	-1000, -1000, -1000, 2515, 2903, 2901, 2900, -1000, 72207, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 187, 2509,
	-1000, -1000, 187, 2506, -1000, 187, 2501, -1000, 183, 2500,
	-1000, -1000, 1791, 2499, -1000, -54, 2498, -1000, -1000, -54,
	2497, -1000, -42, -1000, -1000, -1000, 896, -1000, 37590, -1000,
	37590, 66157, 48943, 850, 631, 43235, 83611, -1000, -65, -1000,
	38911, 83611, -1000, 48943, 56258, -1000, 65724, 55831, -1000, -1000,
	1170, 2047, -1000, -1000, -1000, 850, 48943, 48943, 48943, -1000,
	65291, -1000, -1000, 1636, 1394, 2621, 1600, 59716, -1000, 1512,
	-1000, -1000, -1000, 2639, 2376, -1000, 44970, 61424, -1000, 60997,
	-1000, 60570, -1000, 59716, -1000, 59716, -1000, 2899, 2898, 2896,
	-1000, 2895, 2634, 83611, 2632, -1000, 2426, 1442, 1411, 72207,
	-1000, -1000, 72207, -1000, 72207, -1000, -1000, -1000, -1000, -1000,
	1981, -1000, -1000, -1000, -1000, 59716, -1000, -1000, -1000, -1000,
	-1000, -1000, 2369, -1000, 1389, -1000, 1483, -1000, 1167, -1000,
	-1000, 188, -1000, -1000, -32, -1000, 74342, -1000, -1000, 2069,
	-1000, 72207, -1000, 1996, 2323, 2361, 1288, 1864, 2086, -1000,
	28613, 2053, 32753, 1878, 152, -1000, -1000, 152, 152, 23045,
	-1000, -1000, 84311, 84311, 15666, 1136, 30473, 30473, 30473, 30473,
	30473, 30473, 30473, 30473, 30473, 30473, 30473, 30473, 30473, 30473,
	30473, 30473, 30473, 30473, 30473, 30473, 30473, 30473, 30473, 30473,
	30473, 30473, 30473, 30473, 30473, 30473, 30473, 30473, 30473, 30473,
	30473, 2038, 30473, 1099, 30473, 30473, 30473, 30473, 1498, -1000,
	-1000, 1553, 474, 1666, -1000, 2793, 2793, 2793, 84139, 84139,
	445, 2892, 717, -1000, 30473, -1000, 100, 30473, 16109, -1000,
	-1000, -1000, 429, 9153, 1909, -1000, 427, 16577, -1000, -1000,
	-1000, 17489, 530, 28145, 30473, 901, 83611, 1229, 2819, 13898,
	2409, 2182, -1000, 2829, -1000, -1000, 2819, -1000, -1000, -1000,
	-1000, 2819, 1128, 1125, 2819, -1000, 2819, 2819, 615, 694,
	690, 19817, 19349, 18881, 18413, 678, 30473, 30473, 30473, 30473,
	30473, 30473, 30473, 30473, -1000, 27689, 27221, 26753, 33209, 26285,
	30473, 17945, 25817, 25349, 72207, -22, 2747, 30473, 189, -1000,
	81763, -1000, 189, 189, 614, -43, 83611, 2060, 2060, 36726,
	1962, 1709, 1709, 1709, -1000, 784, 10344, 784, 64433, 1736,
	784, 784, 212, 211, 416, 34998, 2031, 64433, 699, 613,
	0, -1, -3, -1000, -1000, -4, -7, -1000, -1000, 59716,
	612, 16109, 15666, 1215, -44, 209, 2079, 2078, 2077, -1000,
	2073, 1286, -49, 1094, -36, -1000, 8365, -51, -1000, 976,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 904, 608, 592, 460, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 591, 1566, 588, 588, 588, -1000, -1000, -1000,
	321, 578, 310, 577, -1000, -1000, -1000, -1000, -1000, -1000,
	2310, -41, 60143, 788, -52, 1005, -32, -1000, -1000, -1000,
	49801, 1051, -1000, 1402, -1000, -1000, -1000, -1000, -1000, -1000,
	1194, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 802, -1000,
	-1000, -1000, -1000, -1000, -1000, 2802, 2798, -23, -1000, -1000,
	15666, -1000, -34, 1455, -1000, 51513, 1794, 2625, 2615, 1242,
	-1000, 1218, 2671, 54965, 2692, 2721, 742, -1000, 2305, -1000,
	-1000, 826, 1371, 1092, 54965, 1699, -1000, 84311, -1000, 2103,
	2668, 1163, 1228, 1163, 1163, 1147, -1000, 54965, 1086, -1000,
	1083, -1000, -35, 2691, 2708, 288, -1000, 2301, 1075, -1000,
	-1000, 59716, 15666, -1000, 1855, -1000, 48943, -1000, 48943, 2124,
	-1000, -58, 781, -24, 49370, 72207, 208, -1000, 30473, 100,
	30473, 100, -1000, -1000, 2495, -1000, -1000, -1000, 2891, 1502,
	2017, -1000, -1000, -1000, 576, 1933, 2296, 72207, 2084, -26,
	59716, -1000, 1699, 1930, -1000, -1000, 55398, -1000, 2493, -1000,
	2490, 501, 2889, -1000, 1840, 1928, -1000, -1000, -1000, 73915,
	1133, 2489, 950, 586, 2744, -1000, 586, 42373, -1000, 72207,
	-1000, -1000, 72207, -1000, -1000, -1000, 2885, -1000, 59716, -1000,
	-1000, 59716, -1000, 59716, -1000, 59716, -1000, 59716, 59716, -1000,
	72207, 48943, 48943, 48943, 8806, 50659, -59, -64, 411, -1000,
	64864, 72207, 948, 51086, 72207, 2581, 850, 38911, -65, 850,
	850, 781, -1000, 781, -1000, 59716, 2360, -1000, 850, 850,
	850, -1000, -1000, -1000, -1000, 2884, 2883, -1000, -1000, -1000,
	865, 59716, 72207, 59716, -1000, -1000, 72207, -1000, 72207, -1000,
	865, 72207, 865, 72207, 865, 72207, -1000, -1000, -1000, -1000,
	-1000, -1000, 100, 30473, 1258, -1000, 2348, -1000, 2336, -1000,
	22, -1000, -1000, -1000, -1000, 1674, 59716, 59716, 59716, 59716,
	72207, 59716, -1000, 54965, -1000, 1996, 2323, -1000, -1000, -1000,
	-1000, -1000, -1000, 1319, 1825, -1000, 2041, -1000, 1234, -1000,
	-1000, -1000, 83611, 33665, -1000, -1000, 83611, 1467, -1000, 32297,
	31841, -1000, -1000, 1352, 59716, 2093, -1000, 2093, -25, -1000,
	81431, 2036, 59716, -1000, -1000, -1000, -1000, -1000, 819, 1363,
	1363, 1065, 1065, 1065, 1065, 2775, 282, 3795, 5576, 77422,
	77422, 4817, 4817, 4817, 4817, 4817, 77422, 5176, 1172, 1172,
	5176, 5176, 5176, 5176, 5176, 1172, 1172, 1172, 77422, 77422,
	77422, 84139, 83875, 7299, 30473, 30473, 1072, 1545, 474, 5711,
	30473, 7770, 7770, 7770, 7770, -1000, 1569, -1000, -1000, -1000,
	-1000, 2295, 562, 33209, 33209, -1000, -1000, -1000, -1000, 17033,
	30473, -1000, -1000, -1000, -1000, 24881, -1000, -1000, 80853, -238,
	400, -199, -19, -1000, 30473, 30473, 30473, 398, -1000, 204,
	30473, 72207, -1000, 77773, 698, -201, -1000, -67, 1226, -1000,
	30473, -1000, -1000, 1067, -1000, 1057, 1049, 1048, -1000, 556,
	396, -1000, 201, -1000, 1672, 555, 554, 390, -72, 389,
	800, 799, 385, 383, 382, 30473, -1000, -1000, -1000, -1000,
	-1000, 80810, -1000, -1000, 80521, -1000, -1000, 80232, -1000, -1000,
	80189, -1000, -1000, -1000, 83347, 77509, 77245, 76954, 8685, 76911,
	9783, -73, 363, -1000, 2294, -199, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 361, -1000, 359, -1000, 83083, -199,
	355, 4156, -1000, 33209, 33209, 33209, -1000, 353, -1000, 81474,
	-1000, 82819, 24425, 24425, 24425, 352, 82555, 30473, -199, -74,
	-1000, -75, -1000, -1000, 553, -80, 895, 23957, 35862, 15666,
	-1000, 895, 895, 30473, -1000, 30473, 2065, -1000, -1000, -1000,
	2050, 1514, 2060, 36726, -1000, -1000, -1000, -1000, 64433, -1000,
	2807, 2217, -1000, 64433, -1000, -1000, 72207, 447, -1000, 64433,
	64433, 15666, 784, -1000, 784, 64433, 467, -1000, -1000, -1000,
	-1000, -1000, 346, 39783, -19, 200, 850, -1000, 15666, 2149,
	2149, 2149, 2149, -1000, -1000, 72207, 2770, -1000, 1573, -1000,
	84311, -1000, 716, 952, 552, -1000, 2819, 2819, -1000, 2819,
	72207, 153, 23501, -1000, 1051, -1000, -1000, 1320, -1000, 1549,
	-1000, 1055, -1000, -1000, -1000, -1000, 23501, -1000, 2374, 72207,
	72207, 59716, -1000, -1000, 1926, 73488, 1925, 84311, 72207, -1000,
	-1000, 551, 550, 2035, 2033, 72207, 72207, 2032, 73061, 72634,
	72207, 1610, 30473, 1821, 2191, 100, 100, -1000, -1000, 100,
	546, 1084, 59716, 59716, 59716, 1470, -1000, -1000, -1000, -1000,
	-1000, 54538, -1000, -1000, 2827, 2826, -1000, 1163, -1000, -1000,
	-1000, 1163, 1699, 1444, 59716, 72207, 1588, 100, 100, -1000,
	-1000, 100, 545, 15666, 1568, -1000, 1855, -1000, -1000, -1000,
	-1000, 44543, 867, 867, 850, 2293, -1000, 2124, -1000, -1000,
	13457, 83611, -1000, 83611, -1000, 72207, -1000, 908, 72207, 51086,
	856, 2484, 41511, -41, 850, 48943, 59716, -26, -1000, 1699,
	2483, 447, 1924, -1000, -1000, 48943, 48943, 2882, 544, 2881,
	-1000, 59716, 2470, 1836, 1922, 2542, 749, 72207, 895, 36726,
	1562, -1000, 40216, 918, 72207, 1410, 133, -1000, -1000, -1000,
	9, 72207, -1000, 2878, -1000, -1000, 187, 187, 187, -1000,
	183, 1791, -1000, -54, -54, -1000, -1000, 8806, 8806, 850,
	-27, 541, -1000, 777, 773, 38470, 48943, -81, -1000, -1000,
	-1000, -1000, -1000, 59716, 72207, 633, 2108, 72207, -87, -1000,
	198, 540, -1000, -1000, 850, 2291, -1000, -1000, 890, -1000,
	1149, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-15, -41, -41, -1000, 865, -1000, 865, -1000, 865, -1000,
	83611, -1000, 1254, 1251, 72207, -1000, 15666, 72207, 59716, 15666,
	59716, 2322, 2321, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 974, -1000, 1467, 1802, -1000, 530, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1970, -1000, -29, 23045,
	1885, -1000, -1000, 59716, -16, 30473, 30473, 4285, 493, 30473,
	33209, 33209, -1000, 30473, 430, -1000, -1000, -1000, -1000, -1000,
	2290, 529, 30473, 84311, 5368, 4974, -1000, 344, 9703, 5176,
	-1000, 30473, -1000, 341, 22589, -1000, 82027, -33, -88, -1000,
	10797, -199, -89, -1000, -1000, 714, -1000, 2540, -1000, 30473,
	82291, 1958, 1803, 1427, 1273, 2819, 2838, 13016, -1000, 42804,
	899, 1749, -1000, -1000, 2819, 839, -1000, -1000, -1000, 839,
	-1000, 79900, -1000, -1000, -1000, -1000, 84311, 84311, 30473, 30473,
	-1000, 30473, 30473, 30473, -1000, -1000, 30473, -1000, -1000, 2287,
	30473, -1000, 84311, 84311, 33209, 33209, 33209, 33209, 33209, 33209,
	33209, 33209, 33209, 33209, 33209, 33209, 33209, 33209, 33209, 33209,
	33209, 33209, 33209, 2007, 33209, 2786, 2786, 2786, -1000, 2288,
	2287, 30473, 30473, 84311, 340, 325, 316, -1000, 30473, -199,
	-1000, -1000, 8806, -1000, 2178, -1000, 30473, -1000, -101, -1000,
	2031, -1000, -1000, 2178, 2178, -94, 83611, 36726, 36726, -1000,
	518, 30473, 2049, -1000, -1000, 697, -236, -1000, 767, -1000,
	-1000, -1000, -1000, -1000, 447, -1000, -1000, -1000, 196, 64433,
	64433, 695, -1000, -96, -1000, -1000, -99, -1000, 2742, 315,
	15666, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -41,
	1765, 2835, -1000, 2823, 713, 691, 2819, 313, 307, 306,
	-41, 72207, -1000, -32, -1000, -1000, -1000, 30473, -1000, -1000,
	2624, 1045, 1041, -1000, 2469, -1000, 1921, -1000, 922, -1000,
	1414, -1000, 30473, 30473, 516, 515, 1505, 2877, 943, 2468,
	1791, 2465, 1791, -1000, -1000, 816, -1000, 83611, 512, 511,
	-1000, -34, 1382, 874, -1000, -1000, 30473, 30473, 64006, -1000,
	373, 2619, -17, -1000, 1035, -1000, -1000, -1000, -1000, 1699,
	1034, -1000, -1000, -1000, 872, -1000, -1000, 30473, -1000, -35,
	1029, -1000, -1000, -1000, -1000, -1000, -1000, 48943, 850, -1000,
	2874, 2872, 2869, 305, -104, -37, 84311, 2733, 1861, 506,
	59716, 821, -1000, 2807, -1000, -1000, -1000, 59716, 2715, 2459,
	867, 867, -1000, 2868, -1000, 936, 15666, 59716, 2444, 1991,
	749, 50232, -1000, 867, 1749, -156, -1000, 1410, 22121, 2617,
	-105, -1000, -1000, -1000, 895, 42373, 36726, 30473, 2867, -107,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 63579,
	63579, 48943, 48943, 48943, 850, 72207, 72207, 51086, 2865, 510,
	72207, 72207, 509, -1000, 72207, 72207, 2864, 48943, -1000, 100,
	-1000, 1758, 59716, 12575, -1000, -1000, -1000, -1000, -1000, 865,
	-1000, -1000, 1590, 1877, 1590, 1397, 1358, -1000, 1792, -1000,
	-1000, -1000, -1000, 2083, 2630, 15666, 2707, 7770, 30473, 30473,
	339, 4327, 4209, 7770, 30473, 30473, 84311, 5086, -110, 30473,
	30473, -1000, 30473, 688, 83611, 2834, 30473, 301, 296, -1000,
	-1000, -1000, 2818, -1000, -1000, -1000, 83611, 30473, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 295, -1000, 195, -1000, -1000,
	-1000, 76477, -1000, 30473, 294, 291, -1000, -1000, -1000, 290,
	281, 6183, 6752, 79611, 79568, 79279, 83611, 2288, 83611, -1000,
	-1000, 864, 864, 1164, 1164, 1164, 1164, 2786, 543, 1183,
	378, 532, 532, 532, 609, 814, 814, 532, 532, 532,
	2269, 2024, 508, 858, -1000, -1000, 83611, 83611, 278, -1000,
	-1000, -1000, -199, 265, 2169, 2665, 83611, -1000, 36726, 2169,
	2169, -1000, -1000, 1514, 72207, 83611, 36726, -1000, 2217, -1000,
	11248, -1000, 15666, -1000, -1000, -1000, -1000, 2807, -1000, 39783,
	-1000, 505, -1000, 10, -1000, -1000, 685, 2862, 702, 260,
	-1000, -1000, -1000, -41, 83611, 72207, 72207, 72207, 2435, -1000,
	1820, -1000, 78990, -112, -1000, 81431, 30473, 72207, -1000, 1472,
	2074, 985, -1000, 2631, 72207, -1000, 72207, -1000, -1000, 72207,
	72207, 59716, 2421, -113, 83611, -45, -1000, 763, -1000, 1158,
	-1000, 12134, 59716, 59716, 2420, -115, 15666, -54, -1000, -1000,
	-1000, -1000, 2115, -1000, 62284, 1754, 100, -1000, 63148, 2857,
	504, -1000, 1755, -1000, 683, 1699, 100, 59716, -1000, -1000,
	-1000, 502, 72207, 1833, 500, 15666, 2010, 749, 50232, -1000,
	1133, 2086, -1000, -61, -1000, 464, 100, 1749, -1000, -156,
	83611, -1000, 758, -1000, -120, -1000, -1000, 259, -1000, 2578,
	2577, -1000, -1000, 30473, 499, 496, 72207, 2573, -1000, -1000,
	-125, -1000, 1953, -1000, -1000, -1000, -1000, -1000, 15666, 1362,
	-1000, 495, 492, -1000, -1000, -1000, -1000, 2630, 7770, 7770,
	30473, 30473, 30473, 7770, 5086, -128, -1000, 7770, 7770, -199,
	-1000, -1000, 82027, -1000, -1000, -1000, 83611, -1000, 11693, 1595,
	-1000, 78947, -1000, -1000, -1000, -1000, 30473, 30473, -1000, -1000,
	-1000, -1000, -1000, 33209, 2261, 490, 84311, -1000, -1000, 893,
	30473, 30473, 2031, 893, 893, -1000, -131, -1000, -1000, -1000,
	2807, 10, -1000, -1000, 2855, 15666, 701, -1000, 2854, -1000,
	-1000, -1000, -1000, 72207, -1000, 72207, -1000, 15666, 72207, 2184,
	1913, -1000, -1000, 2029, 480, 33209, 59716, 729, 2208, 1491,
	30473, 1885, -133, -134, 1892, -1000, -1000, 1890, 30473, -1000,
	84311, 475, 1791, 1791, -136, -139, -1000, 30473, 1026, 72207,
	21665, -1000, 2853, 2619, -1000, -1000, 30473, 1018, -1000, 1588,
	2132, -1000, -1000, -1000, -1000, 2025, -1000, -1000, 72207, 2018,
	860, -141, -1000, 757, 753, -1000, 51086, 856, 835, -1000,
	-1000, -1000, 447, 30473, -1000, 59716, 30473, 1831, -1000, 749,
	50232, -1000, 2542, 1410, -1000, 2548, 72207, 2607, -1000, 2086,
	474, -1000, 850, 473, 469, -142, 30473, 30473, -144, 461,
	850, -172, -1000, 710, 466, -1000, -1000, 59716, 59716, 30473,
	30473, -1000, 7770, 7770, 7770, -1000, 257, -1000, -1000, 1749,
	2664, -1000, 78658, 78369, 3787, 33209, 84311, -149, -1000, 72207,
	83611, -199, -1000, -1000, -1000, 679, -1000, 2851, -1000, -1000,
	1370, -1000, -1000, -1000, 72207, 1919, -1000, 937, 30473, 858,
	459, 30473, -1000, -1000, 2105, 2230, 2115, 458, -1000, -1000,
	-1000, -1000, 931, 1434, -1000, -1000, 83611, 2645, 30473, -1000,
	-1000, 457, 456, 83611, 455, 748, 2257, -1000, -1000, -1000,
	83611, 454, 856, -1000, 1626, 1754, 453, -1000, -1000, -1000,
	2067, -1000, 63148, 34106, 34106, 255, 2713, 835, -1000, 2799,
	-1000, 2702, -150, 936, -151, 59716, 50232, -1000, 1991, -1000,
	1132, -157, 72207, 1410, -1000, -1000, 48943, 48943, 931, -160,
	-162, -1000, 48943, -1000, 1953, -1000, 72207, -1000, 72207, -1000,
	-1000, -165, -170, -1000, 1594, 30473, -1000, -1000, 3787, -171,
	-1000, -194, -1000, 2697, -1000, -1000, -1000, -1000, 2431, 2151,
	78326, 1968, 72207, 78037, 2224, -1000, -1000, 1588, 72207, 2115,
	2148, 59716, 932, 15666, -173, 1590, 1590, 30473, 21209, 1605,
	30473, -1000, 59716, 72207, -1000, 2572, -1000, -1000, -1000, 2115,
	100, -1000, -1000, 100, 931, 452, 1491, 449, -1000, 2010,
	1238, -1000, 895, -1000, -1000, -176, -181, 1491, 931, -1000,
	-184, -1000, -187, -189, -1000, -1000, 253, 31385, 31385, 31385,
	-199, -1000, 72207, 448, 2410, 863, -1000, 1814, 1700, 135,
	955, -1000, -1000, 2208, -192, -1000, 862, 447, -1000, 30473,
	-1000, 931, -198, -1000, 916, -200, -1000, 915, -205, -1000,
	2236, -1000, -206, 444, -208, -1000, -1000, -1000, 1588, 860,
	-1000, 1491, 30473, 2115, 30473, -1000, 42373, -1000, 850, 850,
	2115, 1491, 850, -1000, -1000, -1000, 2482, -1000, 34547, 1718,
	1347, 81142, 2482, 2482, -1000, -1000, 72207, 2679, -1000, 1829,
	1828, 1275, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2674, 1968, 83611, 2115, -1000, 1590, 2129, -1000, 1590, 2206,
	-1000, 1601, -1000, 72207, -1000, 72207, 856, -1000, 2115, -211,
	1588, -214, -197, -1000, -1000, 1588, 2115, -1000, -1000, 1731,
	2726, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 741,
	-1000, 2554, -1000, 973, 1779, 1779, 740, 1814, -1000, -1000,
	441, -1000, 439, -1000, -219, -1000, -1000, 1588, 931, 866,
	1491, -1000, -1000, 1588, 1333, -1000, -1000, 1714, 30929, 30473,
	-1000, 2773, -1000, -1000, 2040, -1000, 30473, 2208, 30473, 30473,
	1735, 866, 1491, -1000, 2849, 2115, -1000, -1000, -1000, -1000,
	83611, -1000, -1000, -1000, 83611, -1000, -220, -221, -1000, -1000,
	-1000, -1000, 2115, -1000, 1588, 1588, 1012, 1588, 866, -1000,
	388, 866, -1000, 30473, -1000, -222, 1588, -1000,
}
var sqlPgo = [...]int{

	0, 3481, 3479, 3478, 3469, 3468, 3467, 3466, 3462, 3460,
	3459, 3457, 3456, 3453, 3445, 3444, 3443, 3442, 3441, 3440,
	3437, 3436, 3435, 3434, 3433, 3432, 3431, 3430, 3429, 3423,
	3421, 3420, 3419, 3416, 3415, 3413, 3412, 3409, 3406, 3405,
	3402, 3401, 3400, 3399, 3395, 3394, 3392, 3387, 30, 3384,
	3383, 3381, 3379, 3378, 3377, 3376, 3375, 3374, 3373, 3370,
	3365, 3357, 3355, 3350, 3349, 3348, 36, 3346, 231, 3345,
	3344, 3343, 3342, 3340, 3338, 3337, 3336, 3335, 3334, 229,
	3333, 122, 3331, 3330, 3329, 3328, 3327, 228, 3325, 3322,
	3318, 3314, 3313, 3312, 3311, 3306, 155, 203, 3304, 194,
	3303, 3301, 3295, 3291, 3285, 3282, 3275, 3274, 3272, 3270,
	201, 3269, 227, 3268, 3267, 3266, 3265, 3264, 3261, 3260,
	3258, 3256, 3254, 3251, 3249, 3248, 3247, 3246, 3240, 3238,
	3236, 3235, 3234, 3231, 3230, 3228, 3220, 3219, 3217, 3215,
	3213, 225, 147, 3212, 3206, 224, 213, 3205, 125, 94,
	88, 66, 3204, 89, 38, 3203, 11, 137, 210, 6521,
	198, 3202, 3201, 3200, 191, 146, 3196, 190, 3194, 3193,
	3192, 3191, 69, 61, 136, 141, 131, 132, 177, 3190,
	3189, 70, 55, 34, 25, 3188, 3186, 3184, 2592, 95,
	3180, 3178, 219, 193, 124, 3176, 3174, 1508, 3171, 243,
	96, 92, 114, 90, 3170, 108, 21, 3168, 126, 29,
	3165, 120, 62, 28, 5902, 161, 3161, 118, 230, 99,
	192, 174, 160, 180, 164, 134, 128, 3153, 196, 3152,
	65, 153, 3151, 3147, 3144, 56, 152, 75, 3143, 18,
	3, 218, 14, 85, 13, 3135, 12, 3131, 3130, 3129,
	3128, 27, 127, 3126, 107, 72, 3125, 50, 3123, 188,
	168, 3119, 183, 98, 3118, 3116, 212, 151, 173, 3114,
	110, 185, 3113, 3112, 3111, 3110, 3109, 100, 23, 101,
	3107, 3106, 106, 189, 156, 3105, 32, 3103, 129, 71,
	102, 223, 93, 175, 77, 172, 142, 186, 3102, 3101,
	3100, 150, 3099, 3095, 166, 130, 3093, 3092, 232, 35,
	52, 187, 54, 145, 121, 3091, 158, 3090, 3089, 3088,
	235, 139, 163, 5, 4, 74, 91, 24, 9, 184,
	111, 208, 87, 3087, 2598, 1596, 1249, 63, 105, 86,
	40, 79, 115, 221, 64, 3086, 3085, 1971, 3084, 3082,
	3081, 3080, 138, 3079, 3078, 3077, 112, 119, 149, 3075,
	116, 68, 10, 83, 202, 222, 80, 170, 148, 209,
	3074, 143, 3072, 37, 109, 3070, 157, 207, 97, 3069,
	181, 133, 3068, 165, 3067, 3066, 3064, 3063, 3062, 3061,
	3059, 169, 3058, 117, 3057, 3056, 217, 144, 3055, 216,
	123, 226, 81, 43, 3054, 73, 325, 3053, 176, 53,
	3051, 386, 33, 0, 6831, 5081, 6193, 3050, 5312, 3049,
	159, 104, 3048, 3047, 3046, 76, 3045, 58, 3044, 3043,
	49, 3042, 15, 7, 8, 19, 16, 1078, 757, 3037,
	3036, 84, 103, 205, 3035, 233, 182, 3034, 3032, 3029,
	59, 3028, 26, 3027, 22, 3023, 3021, 31, 2, 17,
	3020, 3019, 195, 3018, 197, 3015, 3012, 2743, 113, 3008,
	3007, 215, 67, 3003, 204, 3001, 135, 162, 3000, 2998,
	2994, 2993, 211, 2992, 2714, 2991, 20, 6, 2990, 2988,
	154, 1, 2564, 2983, 2982, 57, 2979, 2977, 140,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 12, 12, 7, 7, 8, 8,
	8, 36, 36, 9, 9, 9, 11, 11, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 15, 15, 26,
	26, 16, 16, 28, 28, 17, 17, 29, 29, 471,
	471, 20, 31, 21, 32, 14, 472, 472, 472, 472,
	25, 22, 33, 23, 23, 23, 23, 23, 152, 152,
	152, 152, 19, 19, 27, 27, 175, 175, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	470, 470, 177, 177, 176, 171, 171, 473, 473, 178,
	178, 178, 180, 180, 37, 37, 37, 95, 95, 95,
	96, 96, 97, 97, 153, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 83, 83, 411, 411, 412, 412,
	148, 148, 149, 149, 149, 149, 150, 150, 151, 151,
	151, 51, 39, 39, 39, 39, 39, 39, 39, 40,
	40, 40, 40, 41, 41, 41, 41, 41, 41, 42,
	42, 42, 42, 42, 42, 49, 49, 49, 49, 142,
	142, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 480, 480, 481, 481, 482, 482, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 63, 63, 253, 253, 229, 229, 64, 64,
	64, 65, 65, 66, 66, 53, 53, 464, 464, 267,
	267, 375, 375, 68, 68, 287, 287, 69, 69, 69,
	69, 69, 69, 70, 70, 70, 70, 70, 70, 70,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	77, 77, 77, 78, 78, 78, 75, 75, 75, 73,
	73, 73, 72, 72, 72, 76, 76, 76, 74, 74,
	74, 268, 268, 79, 79, 79, 79, 79, 79, 79,
	79, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 377, 377, 80, 80,
	80, 345, 345, 84, 84, 84, 302, 302, 85, 85,
	85, 85, 85, 86, 86, 86, 86, 98, 98, 98,
	98, 467, 467, 260, 260, 192, 192, 192, 192, 91,
	91, 91, 91, 92, 92, 92, 93, 93, 147, 147,
	104, 104, 104, 104, 104, 103, 103, 103, 103, 103,
	103, 43, 43, 43, 44, 44, 45, 45, 46, 46,
	47, 47, 48, 48, 48, 48, 48, 106, 106, 476,
	476, 108, 105, 105, 105, 107, 107, 107, 107, 109,
	110, 110, 110, 110, 110, 110, 110, 110, 111, 111,
	405, 405, 276, 276, 403, 403, 419, 419, 404, 404,
	233, 233, 233, 233, 233, 234, 234, 234, 410, 410,
	410, 410, 410, 410, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 131, 131,
	131, 141, 141, 141, 141, 141, 141, 141, 134, 134,
	134, 121, 121, 113, 113, 113, 113, 113, 117, 117,
	117, 117, 117, 117, 117, 117, 114, 114, 123, 123,
	123, 123, 123, 118, 118, 120, 120, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 115, 115, 115, 115,
	125, 125, 125, 125, 308, 308, 308, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 137, 137, 137,
	137, 137, 137, 359, 359, 132, 132, 132, 132, 136,
	136, 136, 136, 292, 292, 129, 129, 129, 130, 130,
	130, 135, 135, 133, 133, 138, 138, 138, 138, 116,
	116, 116, 485, 485, 485, 139, 139, 128, 128, 140,
	140, 140, 140, 140, 140, 140, 140, 127, 127, 127,
	126, 126, 126, 126, 119, 465, 465, 462, 462, 462,
	462, 462, 462, 462, 463, 463, 466, 466, 89, 89,
	89, 58, 58, 156, 156, 156, 156, 154, 154, 155,
	155, 59, 59, 486, 486, 486, 474, 474, 474, 475,
	475, 475, 475, 475, 475, 235, 235, 236, 236, 326,
	326, 326, 326, 326, 239, 239, 179, 179, 179, 242,
	243, 243, 240, 240, 241, 241, 241, 245, 245, 244,
	247, 247, 246, 325, 426, 426, 428, 428, 428, 428,
	428, 428, 428, 430, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 430, 424, 424, 424, 425, 420, 420,
	421, 421, 421, 421, 237, 237, 238, 238, 238, 238,
	422, 423, 258, 258, 362, 427, 427, 429, 429, 431,
	487, 487, 487, 487, 487, 487, 488, 488, 324, 324,
	323, 323, 251, 251, 432, 432, 432, 432, 433, 433,
	433, 433, 433, 436, 435, 434, 434, 434, 434, 434,
	62, 62, 62, 289, 289, 288, 288, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 144, 144, 195, 195, 60, 60, 60, 57,
	57, 57, 10, 10, 10, 13, 13, 13, 484, 484,
	61, 61, 61, 61, 194, 194, 194, 469, 469, 468,
	468, 490, 490, 67, 67, 67, 67, 67, 67, 56,
	56, 56, 56, 56, 491, 491, 309, 309, 307, 307,
	257, 257, 361, 198, 198, 172, 172, 172, 24, 18,
	18, 34, 34, 35, 35, 30, 30, 477, 477, 478,
	478, 90, 90, 94, 94, 94, 102, 102, 143, 143,
	143, 143, 143, 143, 143, 38, 38, 38, 38, 50,
	50, 50, 50, 100, 493, 493, 493, 101, 101, 492,
	492, 191, 191, 191, 191, 193, 193, 320, 320, 321,
	321, 494, 494, 322, 322, 322, 322, 186, 185, 187,
	187, 55, 55, 55, 181, 181, 182, 182, 183, 183,
	184, 184, 495, 495, 87, 87, 87, 146, 146, 228,
	228, 228, 316, 316, 316, 252, 252, 203, 203, 319,
	319, 317, 317, 317, 317, 286, 286, 286, 145, 145,
	265, 265, 278, 278, 279, 279, 372, 372, 280, 99,
	99, 159, 159, 157, 157, 157, 157, 157, 157, 157,
	157, 164, 164, 165, 165, 166, 166, 167, 168, 168,
	168, 168, 269, 269, 169, 169, 169, 158, 158, 158,
	160, 160, 160, 160, 160, 160, 160, 163, 163, 163,
	163, 170, 170, 170, 162, 162, 443, 443, 443, 445,
	445, 446, 442, 442, 444, 444, 489, 489, 291, 291,
	291, 249, 250, 248, 248, 255, 255, 254, 256, 256,
	360, 360, 360, 173, 173, 173, 283, 283, 283, 283,
	284, 284, 312, 312, 310, 310, 310, 310, 311, 311,
	313, 313, 313, 314, 314, 315, 315, 282, 282, 341,
	341, 161, 161, 161, 262, 262, 262, 263, 263, 332,
	332, 332, 332, 332, 332, 333, 333, 331, 331, 331,
	331, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	364, 365, 365, 264, 264, 366, 318, 318, 460, 460,
	460, 461, 461, 358, 358, 367, 367, 367, 367, 367,
	367, 356, 356, 357, 357, 373, 374, 374, 295, 295,
	295, 295, 293, 293, 296, 296, 296, 296, 294, 294,
	368, 368, 368, 368, 285, 285, 369, 369, 369, 369,
	370, 327, 328, 328, 378, 378, 378, 378, 393, 261,
	261, 261, 261, 261, 496, 496, 379, 379, 379, 379,
	379, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 383, 383, 383, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 392, 392, 392, 392, 392, 384,
	384, 389, 389, 390, 390, 390, 385, 386, 391, 391,
	391, 391, 497, 497, 395, 395, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 381, 381, 381, 388, 388,
	388, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 303, 303, 305, 305, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 335, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 335, 335, 335, 335,
	335, 335, 335, 336, 336, 336, 336, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 437, 437, 437, 437, 437, 437, 437, 437,
	440, 440, 441, 441, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 447, 447, 448, 448, 450, 450, 451,
	451, 452, 453, 453, 453, 454, 455, 455, 449, 449,
	456, 456, 456, 456, 457, 457, 458, 458, 458, 458,
	458, 459, 459, 459, 459, 459, 347, 347, 348, 348,
	354, 354, 354, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 196,
	196, 196, 196, 196, 274, 274, 272, 272, 272, 275,
	275, 273, 273, 271, 271, 270, 270, 344, 344, 342,
	342, 346, 346, 297, 297, 394, 394, 394, 394, 394,
	394, 394, 394, 298, 298, 298, 306, 299, 299, 300,
	300, 300, 300, 300, 338, 339, 301, 301, 301, 340,
	340, 349, 353, 353, 352, 351, 351, 350, 350, 329,
	329, 330, 330, 281, 281, 498, 498, 277, 277, 371,
	371, 371, 371, 231, 231, 266, 266, 230, 230, 223,
	223, 224, 224, 224, 224, 259, 259, 355, 355, 396,
	396, 397, 397, 398, 398, 399, 399, 400, 401, 402,
	343, 343, 213, 212, 200, 201, 211, 210, 209, 199,
	202, 206, 207, 208, 204, 205, 219, 218, 217, 215,
	216, 376, 225, 225, 226, 226, 226, 227, 227, 227,
	227, 197, 197, 220, 220, 221, 222, 222, 214, 214,
	214, 188, 188, 188, 189, 189, 190, 190, 409, 409,
	407, 407, 407, 408, 408, 408, 408, 406, 406, 406,
	406, 406, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 415,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 418,
	418,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 0, 1, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 3, 1, 1,
	3, 4, 6, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 5, 5, 6, 6, 4, 4, 4, 4, 3,
	4, 4, 4, 7, 7, 9, 8, 9, 5, 3,
	5, 7, 4, 12, 4, 12, 1, 3, 5, 5,
	2, 5, 3, 6, 4, 6, 5, 6, 6, 4,
	8, 3, 4, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 6, 7, 2, 5, 6, 2,
	1, 3, 1, 3, 1, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 6, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	3, 3, 4, 3, 4, 7, 4, 4, 4, 3,
	5, 7, 4, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 9, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 3, 4, 6, 3, 4, 6, 3, 4,
	6, 3, 4, 6, 3, 3, 5, 3, 3, 5,
	3, 1, 3, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 2, 6, 4, 7,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 2, 6, 3, 3, 4, 4, 3,
	1, 3, 2, 3, 3, 1, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 1, 1, 1, 1, 1, 2, 2, 5, 7,
	3, 3, 3, 4, 5, 5, 5, 3, 4, 4,
	3, 4, 4, 3, 4, 4, 5, 3, 5, 5,
	5, 7, 3, 3, 3, 4, 3, 5, 3, 6,
	5, 6, 3, 5, 6, 3, 4, 3, 4, 3,
	3, 4, 4, 5, 0, 1, 1, 3, 2, 4,
	3, 3, 5, 4, 3, 5, 3, 5, 4, 6,
	4, 6, 4, 1, 0, 3, 4, 4, 5, 7,
	5, 3, 3, 2, 0, 4, 2, 3, 4, 2,
	3, 3, 3, 3, 3, 4, 3, 3, 3, 3,
	4, 3, 1, 1, 1, 2, 3, 2, 3, 6,
	6, 7, 9, 7, 9, 3, 4, 10, 10, 3,
	5, 5, 5, 3, 5, 2, 0, 1, 1, 1,
	1, 3, 2, 2, 2, 1, 2, 0, 3, 3,
	2, 10, 13, 0, 2, 4, 3, 3, 3, 1,
	3, 9, 12, 0, 2, 3, 1, 1, 0, 1,
	2, 2, 2, 2, 1, 1, 0, 1, 3, 1,
	1, 1, 1, 3, 8, 0, 1, 1, 0, 2,
	1, 0, 1, 0, 9, 9, 3, 1, 3, 7,
	1, 3, 11, 3, 2, 0, 3, 1, 2, 2,
	3, 2, 6, 2, 1, 1, 2, 8, 4, 2,
	5, 5, 5, 2, 9, 10, 6, 5, 3, 1,
	5, 8, 7, 11, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 4, 0,
	6, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 4, 2, 2, 2, 4, 7, 3, 4,
	7, 3, 4, 6, 3, 4, 6, 3, 1, 1,
	8, 11, 7, 5, 1, 1, 1, 1, 2, 2,
	0, 0, 1, 6, 7, 6, 5, 3, 4, 15,
	18, 14, 17, 4, 0, 2, 2, 0, 1, 0,
	1, 3, 3, 2, 0, 1, 1, 0, 6, 6,
	8, 6, 8, 6, 8, 6, 8, 1, 0, 2,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 2, 1,
	0, 1, 3, 2, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 2, 3, 2,
	2, 8, 11, 3, 3, 0, 3, 0, 3, 0,
	3, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 8,
	5, 3, 4, 3, 0, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 6, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 3, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 2,
	0, 4, 2, 5, 3, 2, 0, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 0, 3, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 0, 4, 2,
	1, 2, 2, 4, 1, 3, 1, 2, 3, 2,
	2, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 5, 4, 1, 2, 1, 4, 1, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 2, 5, 1,
	4, 2, 5, 1, 4, 3, 3, 0, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 1, 4, 1, 3,
	3, 3, 5, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 2, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 4, 4, 3, 6, 5, 5, 5, 4, 4,
	3, 4, 3, 5, 0, 5, 0, 2, 0, 1,
	3, 3, 2, 2, 0, 6, 1, 0, 3, 0,
	3, 3, 3, 0, 1, 4, 2, 2, 2, 2,
	2, 3, 2, 2, 3, 0, 4, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 470, -81, -51, -49, -84, -85, -69,
	-86, -80, -98, -102, -90, -104, -143, -3, -37, -39,
	-52, -68, -70, -79, -88, -87, -89, -91, -95, -94,
	-83, -43, -99, -103, -112, -144, -145, -146, 85, 71,
	127, 108, 113, 160, 297, 327, 337, 321, -107, -108,
	356, -38, -50, -101, -100, -4, -13, -10, 27, 41,
	-40, -41, -42, 56, -57, -60, -54, -63, -479, 87,
	-444, -71, -74, -76, -483, 118, 133, 177, 289, -92,
	-93, 323, 325, 134, -45, -44, 128, -157, -159, -105,
	-106, -147, -113, -114, -115, -116, -117, -118, -119, -120,
	-121, -122, -123, -124, -125, -126, -127, -128, -133, -129,
	-130, -131, -132, -134, -135, -136, -137, -138, -139, -140,
	360, 407, 42, 370, 72, 121, 331, 21, -5, -6,
	-7, -8, -9, -11, -12, -53, -55, -56, -58, -59,
	-67, -61, -62, -443, -72, -73, -75, -77, -78, 322,
	-160, -158, 467, 420, -15, -20, -21, -16, -17, -19,
	-22, -18, -26, -31, -32, -28, -29, -27, -30, -33,
	-34, -35, -36, -24, -25, -14, -23, 438, 446, -163,
	-161, -162, -170, 344, 428, 384, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, -215, -220, -221, -222,
	-214, -188, -415, -418, 4, -413, -416, 139, 184, 255,
	21, 22, 23, 24, 25, 27, 38, 40, 39, 41,
	42, 45, 48, 49, 47, 52, 53, 54, 55, 56,
	57, 60, 65, 70, 71, 72, 73, 74, 75, 80,
	77, 78, 79, 82, 84, 85, 86, 88, 90, 91,
	99, 100, 101, 102, 103, 104, 108, 111, 110, 113,
	116, 117, 118, 120, 122, 123, 125, 127, 128, 131,
	129, 390, 130, 132, 133, 134, 135, 145, 146, 147,
	149, 150, 152, 154, 158, 159, 161, 165, 167, 168,
	169, 170, 176, 177, 179, 180, 185, 181, 186, 190,
	193, 192, 194, 195, 196, 187, 201, 205, 206, 207,
	209, 210, 213, 214, 215, 216, 217, 220, 219, 222,
	225, 226, 229, 230, 233, 234, 235, 237, 238, 241,
	239, 242, 240, 243, 246, 244, 245, 248, 249, 253,
	251, 250, 257, 260, 174, 262, 263, 265, 266, 267,
	283, 270, 271, 272, 275, 276, 279, 282, 284, 285,
	286, 287, 288, 289, 290, 292, 293, 295, 297, 299,
	301, 302, 303, 304, 305, 306, 307, 309, 310, 312,
	313, 314, 315, 316, 321, 318, 319, 320, 322, 323,
	324, 325, 327, 329, 330, 331, 332, 334, 336, 357,
	358, 372, 337, 338, 339, 340, 341, 342, 343, 347,
	351, 348, 349, 350, 345, 346, 352, 353, 354, 356,
	359, 360, 362, 363, 365, 366, 368, 369, 370, 371,
	373, 376, 377, 378, 374, 375, 383, 381, 382, 385,
	386, 387, 388, 389, 391, 393, 401, 402, 404, 407,
	408, 409, 399, 411, 412, 415, 416, 417, 418, 419,
	424, 420, 422, 425, 426, 427, 433, 432, 439, 440,
	442, 443, 444, 33, 43, 44, 46, 50, 61, 62,
	63, 66, 105, 106, 126, 136, 137, 148, 162, 164,
	171, 172, 173, 191, 197, 199, 203, 223, 259, 261,
	277, 281, 294, 296, 308, 333, 364, 379, 394, 395,
	396, 397, 403, 405, 428, 429, 430, 434, 441, 268,
	-208, 2, -188, -188, 297, 26, 2, 26, 293, 346,
	386, 388, 2, -467, -260, 2, 26, -192, -188, 87,
	160, 344, -208, 2, -467, -260, 24, 2, -188, 2,
	-193, 2, 337, -188, 470, 82, 230, 65, 333, 353,
	-110, 402, -109, 394, 339, -111, -405, 2, 246, -188,
	470, 470, 470, 470, 470, 2, 384, 286, 432, 345,
	101, 305, 184, 421, -484, 329, 163, 398, -462, 2,
	4, -416, -413, -224, -223, 384, 101, -222, -214, 460,
	-221, 470, 470, 470, 2, 206, 207, 304, 303, 353,
	354, 470, 470, 470, 2, 25, 59, 81, 84, 107,
	135, 155, 158, 273, -480, 238, 283, 302, 339, 352,
	383, 391, 404, -475, 371, 60, -474, 421, -484, 409,
	116, -307, 101, 230, 159, 416, 388, 386, 414, 111,
	190, 419, 418, 470, 470, 25, 59, 68, 84, 116,
	135, 155, 158, -482, 283, 302, 336, 339, 352, 383,
	391, 409, 404, 2, 432, 345, 384, 184, 101, 421,
	-484, 300, -81, 2, 467, 29, 28, 356, -153, 384,
	200, 2, -188, 206, 207, 2, 470, 470, 156, -462,
	2, 206, 207, 2, 200, 2, 60, 341, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 2, -141, 353, 371,
	169, 41, 65, 26, 301, 70, 287, 102, 161, 184,
	185, 214, 81, 82, -308, 40, 207, 206, -359, 385,
	340, 346, 381, 337, 402, 87, 422, 330, 444, 305,
	306, 129, 4, 101, 246, 355, 394, 230, 74, -489,
	2, 384, -492, 2, 402, 402, 2, -492, 2, -492,
	2, -191, 2, 402, 398, -493, 402, 441, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, -158, -160, -159, 470, 470, 470, 470, 470, -141,
	353, 2, 65, 26, -254, -255, 413, 198, 124, 274,
	-157, -159, 2, -443, -403, 2, -334, -419, -336, 458,
	459, 451, 254, 445, -347, 107, 414, 268, -418, -337,
	-349, 126, 333, -275, 8, 9, 5, 6, 7, -197,
	-380, -343, 406, 138, 258, -227, 471, 10, 467, -440,
	-159, -348, 34, 164, 58, -407, -226, -382, -390, -386,
	-387, -496, 48, 54, 53, 391, 245, 347, 348, 365,
	349, 350, 45, 424, 181, 265, 267, 192, 4, 199,
	-225, -214, -437, -438, -413, -414, 191, 197, 193, 364,
	194, 195, 196, 44, 308, 149, 150, 148, 117, 106,
	105, 261, 50, 49, 46, 429, -391, 103, 394, 395,
	396, 397, 209, 210, -188, -415, 68, 93, 94, 92,
	97, 96, 232, 231, 98, 95, 355, 421, 59, 33,
	171, 172, 203, 259, 173, 66, -439, 375, 89, 157,
	189, 175, 202, 204, 208, 224, 227, 247, 252, 256,
	278, 280, 328, 361, -497, 430, 136, 137, 281, 294,
	379, 403, 405, 162, 223, 61, 62, -445, 309, -446,
	-208, -445, 470, 470, 472, 470, -248, -249, -250, 2,
	26, 114, 467, 2, -363, 2, -364, -368, -159, 218,
	-367, 467, -365, 465, -215, 269, -441, 334, -437, -438,
	-197, -214, -226, 4, -251, 467, 469, 101, 384, 69,
	184, -302, 467, -188, 26, 268, 398, 472, -345, 467,
	268, 156, 271, -188, 2, 2, 357, 2, 467, -110,
	63, 402, 39, 353, -321, 2, -322, -185, -186, -187,
	-373, 205, 299, 307, 447, 444, -403, -476, 156, 450,
	398, -403, -276, 469, 2, -368, 171, -215, 2, -212,
	-406, 4, -413, -416, -414, -417, 68, -415, 26, 28,
	29, 30, 32, 34, 35, 36, 37, 51, 58, 59,
	64, 67, 69, 81, 87, 92, 93, 95, 94, 96,
	97, 98, 107, 109, 112, 114, 115, 119, 121, 124,
	138, 140, 153, 155, 156, 160, 163, 166, 178, 188,
	198, 200, 218, 221, 228, 231, 232, 254, 258, 264,
	268, 269, 273, 274, 291, 298, 311, 326, 344, 355,
	367, 380, 384, 392, 398, 400, 406, 413, 414, 421,
	423, 431, 435, 436, 437, 438, -418, 2, -368, 171,
	2, -217, 171, -368, -220, 2, -199, -188, 2, -211,
	-406, 2, -230, 171, -215, -216, -220, -411, 171, 2,
	-409, 10, -408, 5, 4, -413, -416, -414, -411, 171,
	2, -96, -411, 467, 398, 472, -266, -223, -224, -259,
	-188, 469, -334, 2, -99, 2, -334, 171, 2, -99,
	171, 2, -334, 171, 2, -99, 171, 2, 2, 2,
	404, 2, 84, 171, -188, 384, 100, 2, 320, -481,
	336, 408, 432, 2, 2, 2, 2, 2, 2, 2,
	384, -204, 2, -188, 153, 345, -490, 309, -411, 171,
	2, -411, 171, 2, -218, -220, -218, 184, 201, -199,
	171, 2, 388, 386, 388, 386, 156, 2, 200, 2,
	200, 2, -369, 2, -370, -364, -215, 465, 2, 2,
	2, 2, 2, 171, -188, 384, 100, 2, 216, 2,
	2, 2, 2, 2, 2, 2, 2, 2, -268, 171,
	2, -215, -268, 171, 2, -268, 171, 2, -231, 171,
	2, -230, -199, 171, 2, -412, 171, 2, -411, -412,
	171, 2, -377, 2, -376, -408, 428, -81, 467, -81,
	467, 353, 467, -411, -215, -215, -334, -99, -97, -96,
	156, -334, -99, -153, 153, 2, 101, 384, -141, 2,
	153, 423, 2, 8, 2, -411, 340, 306, 145, 2,
	357, 2, 358, 65, -308, 444, 65, 156, 2, 156,
	2, -292, 2, 438, -465, 2, 268, 156, 2, 156,
	2, 156, 2, 156, 2, 156, 2, 303, 354, 207,
	2, -99, 435, -334, 435, 2, 401, 215, 130, 156,
	-292, 2, 156, 2, 156, 2, 5, 2, 372, 2,
	205, 299, 372, 2, -215, -485, 2, 384, 432, 345,
	2, 2, 77, 78, 156, 2, 156, 2, 156, 444,
	2, -285, -368, -320, -321, -320, 398, -193, -254, -255,
	-141, 357, 2, -164, -283, -166, 153, -310, -311, -167,
	228, 140, 264, -168, -291, 26, 114, -291, -291, 52,
	468, 468, 11, 12, 67, 38, 458, 459, 460, 461,
	151, 462, 463, 456, 457, 455, 448, 449, 453, 211,
	212, 83, 452, 450, 76, 236, 335, 141, 142, 143,
	144, 317, 182, 31, 183, 14, 15, 16, 30, 273,
	227, 445, 175, 361, 451, 17, 18, 19, 202, 204,
	256, 43, 178, -196, -232, -334, -334, -334, -334, -334,
	280, 467, -281, -329, 465, -159, 467, 467, 467, 5,
	-402, 8, -159, -334, -347, 468, -273, 467, -159, -347,
	-342, 467, 333, 465, 467, -350, -334, 5, 467, 469,
	-447, 439, -384, 467, 296, -383, 467, -383, -383, 433,
	-381, 467, 446, 440, 467, -381, 467, 467, 153, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 433, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 472, -445, -251, 467, -277, -371,
	-334, 460, -277, -277, 268, -270, -334, 89, -295, 208,
	247, 157, 224, 328, 189, -331, 471, -331, -358, 446,
	-159, -365, -214, -159, -367, 467, -363, -358, -82, -402,
	-68, -79, -87, -99, -112, -145, -146, 460, -215, 467,
	156, 467, 469, 156, -259, -406, -199, -215, -225, -226,
	-230, 113, -270, -462, -259, -192, 35, -344, -378, -379,
	-380, -389, -385, -388, -392, 48, 54, 53, 391, 245,
	347, 348, 365, 349, 350, 45, 424, 181, 265, 267,
	192, 4, 46, 429, -391, 199, 313, 314, 312, 316,
	315, 191, 197, 193, 364, 194, 195, 196, 44, 308,
	149, 150, 148, 117, 106, 105, 261, 50, 49, 103,
	394, 395, 396, 397, 209, 210, 430, 375, 61, 62,
	-462, -259, 153, -405, -270, 35, -321, 2, 107, -409,
	39, -494, 472, 226, -234, 235, 253, 168, 269, 442,
	262, -410, 5, 4, -343, -355, 107, 230, 199, -396,
	-398, 8, -397, 9, -399, 458, 459, -404, -403, 91,
	469, -406, -175, 318, -174, 23, 27, 118, 426, 131,
	-241, 186, 286, 126, 368, 417, -471, -472, 338, 389,
	390, 79, 262, 318, 126, -288, -290, 35, 99, 249,
	282, 55, 179, 240, 241, 370, 434, 126, 318, -472,
	318, -472, -177, 368, 417, -471, -472, 338, 318, -176,
	-241, 126, 471, -468, -442, 438, 126, -468, 126, -374,
	-373, -412, -96, -266, 472, 472, -406, 460, 126, 126,
	126, 126, 2, 2, 254, 2, 2, 2, 158, -474,
	-482, 2, 2, 2, -215, 171, -253, 268, -464, -267,
	384, -215, -217, 171, 2, -220, 432, -468, 254, -468,
	254, 35, 467, 2, -201, 171, 2, -189, -188, 184,
	-442, 254, -369, -228, -215, -364, -228, 356, -208, 35,
	-331, -331, 126, 2, 2, 2, -188, -178, 472, 57,
	324, 126, -178, 126, -178, 126, -178, 472, 126, -178,
	126, 472, 126, 126, 468, 472, -377, -377, -411, -151,
	438, 156, 87, 467, 467, -153, -374, 472, -97, -411,
	-464, -199, 2, -215, 2, 384, 209, -151, -411, -411,
	-411, -405, 26, 358, 2, 303, 354, 78, 358, 2,
	-215, 384, 101, 184, 71, -466, 153, -463, 329, -462,
	-215, 101, -215, 101, -215, 101, -215, -215, 2, 2,
	2, 2, 75, 75, 153, 2, 401, 2, 401, 2,
	-188, -188, -188, 226, -215, 153, 384, 184, 384, 184,
	101, 384, -178, 472, -193, -164, -283, -405, -284, -283,
	-165, -164, -167, 153, 307, 418, 249, 359, 213, -311,
	-310, 26, -334, -315, 147, 248, -334, -313, -336, 458,
	459, -397, -399, -269, 262, -158, -158, -158, -256, -360,
	-334, 298, 184, -393, -378, -378, -213, -406, 394, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, 227, 175, 361, 43, 178, -334,
	398, -334, -334, -334, -334, 244, 254, 258, 406, 138,
	415, 114, 262, -498, 380, 37, -340, -159, -274, 467,
	-354, 32, 367, 26, -347, 467, 2, -329, -334, -330,
	-271, -270, -270, 468, 431, 26, 114, 460, 2, 468,
	472, 35, 468, -334, -271, -346, -342, -270, -353, -352,
	435, -303, -304, 443, 243, 104, 170, 242, -305, 343,
	-400, 8, -406, 460, -448, 146, 163, 8, -400, -400,
	394, 394, -400, -400, -400, 467, 468, 2, 468, 2,
	468, -334, 2, 468, -334, 2, 468, -334, 2, 468,
	-334, 2, 468, 2, -334, -334, -334, -334, -334, -334,
	-334, -270, -297, 2, -394, -270, 4, 443, 243, 104,
	170, 242, 343, 5, -297, 2, -298, 2, -334, -270,
	-299, -335, -336, 458, 459, 451, -347, -300, 2, -334,
	-271, -334, 51, 221, 400, -301, -334, 156, -270, -270,
	2, -270, 2, -446, 35, -270, -262, 472, 156, 35,
	4, -262, -262, 467, 468, 472, -296, 167, 239, 234,
	-296, -363, -295, 208, -293, 278, -293, -293, -358, -200,
	465, 473, -406, -358, -357, -356, 35, -208, 275, -358,
	-358, 469, 468, -357, 466, -460, 467, 470, 470, 470,
	470, 470, -215, 467, -270, -406, 373, 468, 469, 202,
	202, 202, 202, 334, 468, 398, 438, -81, 270, 468,
	472, -261, 34, 465, -395, 433, 467, 467, -304, 467,
	156, -260, -476, 468, 402, -322, -233, 307, 366, 319,
	351, 382, 8, 9, 8, 9, 472, -406, 472, -477,
	81, 398, 69, -325, 171, 69, -420, -202, 81, -421,
	-188, 64, 414, 298, 155, -477, 81, 298, -477, 81,
	81, 356, 371, 52, -368, 38, 38, 26, -99, 222,
	156, 444, 384, 184, 398, -368, -290, -378, 99, 240,
	241, 52, -401, -396, 458, 459, -401, 52, -401, -401,
	-401, 438, -217, -368, 398, 398, 472, 38, 38, 26,
	-99, 222, 156, 398, -230, -200, -469, -194, 88, 250,
	-195, 288, -411, -411, -148, 180, 468, -374, -223, -188,
	469, -334, -99, -334, -99, 126, 2, -490, 216, 467,
	-237, 254, 156, -259, -375, 200, 472, -267, -289, -288,
	254, -219, 171, 2, -215, 126, 126, 467, 122, 305,
	2, 268, 254, -201, 171, -181, 387, 126, -287, 423,
	-316, -99, 467, 107, 35, -316, -278, -279, -372, -280,
	-202, 467, -208, -188, 2, -215, -268, -268, -268, -230,
	-231, -199, -411, -412, -412, -81, -376, 468, 468, 468,
	-150, 272, -149, -188, 5, -153, 423, -236, -326, -325,
	-424, -425, -420, 227, 184, 414, 201, 139, -252, -203,
	-202, 100, -151, -96, -374, -151, -151, -374, -374, -215,
	153, -151, -151, -151, 2, 2, -292, -215, -199, -230,
	-215, -259, -259, -292, -199, -292, -199, -292, -199, -99,
	-334, 353, 153, 153, 469, -292, 305, 101, 384, 286,
	184, -215, -230, -215, -230, -199, -215, -368, -284, -165,
	269, 213, 359, -313, -314, -336, 333, 334, -314, 333,
	334, 8, 9, 8, 9, -169, 363, 257, -268, 472,
	-172, 36, 112, 213, -215, 444, 123, -334, -334, 398,
	-498, 380, -340, 123, -334, 244, 258, 406, 138, 415,
	114, 262, 156, 467, -335, -335, 468, -272, -334, -334,
	466, 475, 468, -255, 472, -254, -334, -270, -270, 468,
	469, -270, -259, 466, 466, 472, 468, -351, -352, 119,
	-334, 398, 398, 398, 398, 467, 468, 469, -453, 279,
	467, 467, 468, 468, 472, 468, 444, 444, 468, 468,
	468, -334, 468, 468, 468, 468, 35, 472, 472, 472,
	468, 472, 472, 472, 468, 468, 156, 468, 468, -306,
	291, 468, 11, 12, 458, 459, 460, 461, 151, 462,
	463, 456, 457, 455, 448, 449, 450, 76, 236, 335,
	14, 15, 16, 202, 178, -335, -335, -335, 468, -338,
	-339, 156, 153, 35, -301, -301, -301, 468, 156, -270,
	468, 468, 467, 468, -328, -327, 436, -371, -263, 2,
	-363, -210, -406, -328, -328, -270, -334, 208, 208, -294,
	423, 268, -296, -363, -357, -402, -333, -332, 154, 36,
	112, 251, 174, -357, -208, -251, -357, -357, -406, -358,
	-358, -356, 468, -461, -402, 468, -264, -366, -441, -255,
	469, -151, -406, -142, 5, 258, -142, -142, -142, -259,
	24, 292, -378, 465, 466, 8, 467, -400, -400, -400,
	-259, 156, -403, -321, 412, 73, 307, 394, -403, -174,
	318, -202, -202, -215, 254, -325, 171, -180, 254, -378,
	-209, -188, 467, 467, 213, 213, -202, -209, 213, 171,
	-202, 171, -209, -209, -470, 307, 263, -334, 229, 305,
	255, -175, 318, -99, -99, -99, 467, -476, 423, 113,
	-215, -230, -215, -219, 318, 252, -225, -401, -401, -288,
	318, -217, -199, -176, -99, -99, -99, 467, -200, -177,
	318, -194, -411, 258, -468, -468, -151, 156, -148, 460,
	-188, 432, -188, -235, -238, -236, -202, -156, 440, 438,
	126, -229, -215, 465, -151, -411, -215, 126, -251, 254,
	-411, -411, 2, 467, 2, -215, 126, 268, 254, -182,
	120, -495, 450, -199, -328, -263, -286, -319, 326, 268,
	-252, 428, -208, -286, -265, 472, 156, 450, 469, -252,
	2, -178, -178, -178, -178, -178, -81, -81, -151, 472,
	467, 450, 450, 467, -411, -411, 468, 472, -215, -201,
	184, 184, -207, -189, 468, 472, 469, 467, -151, 156,
	-46, 438, 384, 471, -292, -292, -292, 353, 353, -188,
	-211, -199, -215, -212, -230, 153, 153, 418, -314, 269,
	233, -360, -173, 260, -215, 471, -334, -334, 123, 123,
	-334, -335, -335, -334, 123, 156, 467, -334, -344, 30,
	30, 468, 472, -330, -334, 468, 431, -255, -255, 468,
	460, -406, 471, 468, -342, 121, -334, 392, 243, 170,
	242, -305, 242, -305, -305, -400, 5, -406, 460, -454,
	-205, 467, -188, 436, -254, -400, -381, -381, 468, -393,
	-378, -334, -334, -334, -334, -334, -334, -338, -334, -393,
	-378, -335, -335, -335, -335, -335, -335, -335, -335, -335,
	-335, -335, -335, -335, -335, -335, -335, -335, -335, -335,
	114, 254, 262, -335, -339, -338, -334, -334, -378, 468,
	468, 468, -270, -81, -282, 163, -334, -374, 472, -282,
	-282, 468, -363, -363, 467, -334, 208, 466, 472, 474,
	450, -251, 469, -356, -357, 466, 468, 472, 468, 472,
	-318, 35, 468, -406, 271, 5, 8, 465, 466, -400,
	468, 468, 468, -259, -334, 398, 398, 126, 254, 425,
	-426, -421, -334, -257, -361, -334, 467, 467, -171, 118,
	356, -478, 2, 423, 126, -178, 126, -178, 442, 467,
	467, 398, 438, -270, -334, -152, 107, -405, -472, 471,
	-472, 471, 398, 398, 438, -270, 398, -412, -151, 2,
	2, 2, 468, 468, 472, -427, 35, 266, 467, 266,
	-215, -64, 438, -373, -402, -217, 35, 126, -468, -468,
	2, -309, 423, -200, -215, 126, -183, 220, -495, -409,
	-442, -255, -286, -277, 255, 80, 468, -328, -279, -263,
	-334, 2, 468, -149, -150, -411, -411, -411, -151, -153,
	-153, -326, 2, 467, -201, -189, 467, -153, -203, 2,
	-412, -99, 272, -215, 460, -292, -243, -242, 286, 262,
	-243, 333, 333, 269, 147, 217, -172, -200, -334, -334,
	123, 30, 30, -334, -334, -344, 468, -334, -334, -270,
	466, 5, -334, 468, 468, 8, -334, 468, 469, -455,
	-188, -334, 468, 468, 468, 468, 472, 472, 468, 468,
	468, 468, -339, 156, 114, 262, 467, 468, 468, -341,
	166, 52, -363, -341, -341, -294, -259, -363, -332, -200,
	465, -406, -402, -366, 467, 469, 466, 2, 465, 468,
	-202, -202, -325, 126, -428, 81, -430, 67, 139, 87,
	254, 258, 414, 298, 64, 107, 311, 35, 468, 468,
	472, -172, -257, -259, 254, 377, 107, 254, 107, 100,
	409, 70, -202, -209, -259, -259, -215, 132, 468, 472,
	450, 2, 460, 460, -219, -217, 132, 468, -200, -239,
	187, -202, -425, -422, -423, 298, -429, -431, 139, 298,
	-99, -155, -154, -188, 5, 2, 467, -237, 272, 466,
	-289, -99, -219, 467, -188, 268, 467, -200, -184, 219,
	-495, -409, -181, -312, -310, -317, 467, 268, -99, -255,
	450, 468, 468, 100, 100, -257, 467, 467, -259, 100,
	468, -47, -48, 184, 81, 290, -212, 384, 184, 467,
	467, -172, -334, -334, -334, 468, -255, -406, 460, -449,
	286, 468, -334, -334, -335, 156, 467, -344, -450, 437,
	-334, -270, -450, -450, 468, -402, 2, 465, 2, -325,
	-209, -213, -206, -188, 139, 171, 258, 213, 467, -335,
	-215, 467, 2, -487, 109, 188, -324, -488, 86, 378,
	-361, -173, 468, 468, 258, 258, -334, -378, 467, -178,
	-178, 468, 468, -334, 398, -405, 85, -403, 2, -472,
	-334, 398, -240, -241, 178, -427, 213, -206, 213, -486,
	438, 468, 472, 450, 450, -235, -156, -65, -66, 399,
	-373, -251, -257, -215, -257, 268, -495, -409, -182, -286,
	115, -259, 81, -312, -340, -151, 467, 467, 468, -257,
	-257, 468, 467, -151, 472, 26, 467, 26, 467, -215,
	-230, -270, -270, 468, -255, 52, 468, 468, -335, -344,
	468, -451, -452, -205, 466, 2, -430, -206, 254, 423,
	-334, -190, 467, -334, 188, 110, 176, -239, 467, -323,
	423, 311, -198, 67, -257, 467, 467, 467, 450, 156,
	467, -156, 284, 467, 100, 249, -154, -337, -337, 468,
	35, -66, 9, 35, 468, -309, 468, -215, -409, -183,
	418, 255, 468, -209, -286, -412, -412, -323, 468, 468,
	-412, -48, -259, -259, 468, 468, -456, 305, 334, 165,
	-270, 468, 472, 35, 126, 167, 468, -432, 237, -188,
	468, 110, 176, -240, -259, -239, 167, -215, -473, 423,
	-213, 468, -245, -244, -242, -247, -246, -242, -270, -403,
	85, 284, -270, -215, -258, -362, -202, 100, -239, -99,
	-99, -323, 467, -324, 467, -184, 356, -327, 468, 468,
	-324, -323, 468, 468, 468, 468, -457, -458, 43, 411,
	91, -334, -457, -457, -452, -454, 139, 438, -433, -436,
	-435, 268, 362, 157, 285, 468, 377, 434, -487, 468,
	438, -251, -334, -323, 468, 472, 428, 468, 472, 428,
	468, 156, 468, 467, 468, 472, -240, -486, -324, -257,
	-239, -257, -278, -151, -151, -239, -324, -151, -459, 125,
	-458, 295, 152, 333, 295, 152, -459, -459, -206, 47,
	-435, 268, -436, 268, 418, 111, 47, -432, -239, -244,
	178, -246, 156, 284, -259, -362, -156, -239, 468, -240,
	468, -328, -240, -239, 91, 163, 393, 249, 30, 450,
	-434, 249, 324, 57, 356, -434, 450, -433, 467, 467,
	468, -240, -323, -491, 436, -324, -240, 333, 276, -458,
	-334, 22, 258, 107, -334, -487, -270, -270, -179, 57,
	324, -491, -324, 2, -239, 468, 468, -239, -240, -240,
	398, -240, -491, 467, -491, -270, 468, -240,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 5, 6, 8, 10,
	12, 14, 16, 18, 20, 22, 23, 371, 372, 374,
	375, 376, 378, 379, 381, 383, 385, 387, 388, 390,
	392, 394, 395, 396, 397, 398, 400, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 462,
	0, 958, 960, 962, 964, 25, 26, 28, 0, 0,
	192, 194, 196, 0, 221, 223, 225, 226, 228, -2,
	0, 323, 324, 326, 328, -2, -2, 0, 0, 449,
	451, 0, 0, 0, 471, 472, 0, 1049, -2, 465,
	467, 469, 534, 536, 538, 540, 542, 544, 546, 547,
	549, 551, 553, 555, 557, 559, 561, 562, 564, 566,
	568, 570, 572, 574, 576, 578, 580, 582, 584, 586,
	-2, -2, -2, 0, -2, -2, -2, 976, 31, 33,
	35, 37, 39, 41, 43, 277, 278, 280, 282, 284,
	287, 288, 290, 1104, 330, 332, 334, 336, 338, 0,
	-2, 1116, 0, 0, 45, 46, 47, 48, 49, 50,
	51, 52, 68, 69, 70, 71, 72, 73, 74, 75,
	56, 58, 59, 63, 64, 66, 54, 0, 0, 1080,
	1082, 1084, 1086, -2, 0, 0, 7, 9, 11, 13,
	15, 17, 19, 21, 373, 377, 380, 382, 384, 386,
	389, 391, 393, 399, 401, 403, 843, 1739, 1753, 1754,
	1755, 1758, 1759, 1760, 1761, 1762, 1763, 2109, 2189, 2190,
	1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791,
	1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801,
	1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811,
	1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821,
	1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831,
	1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841,
	1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861,
	1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871,
	1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881,
	1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891,
	1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901,
	1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911,
	1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921,
	1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931,
	1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941,
	1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951,
	1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961,
	1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971,
	1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981,
	1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991,
	1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,
	2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
	2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,
	2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031,
	2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041,
	2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051,
	2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061,
	2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071,
	2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081,
	2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 0,
	427, 425, 1733, 428, 1940, 430, 432, 317, 318, 319,
	320, 321, 322, 0, 442, 436, 441, 443, 445, 446,
	447, 448, 422, 420, 0, 442, 1785, 440, 956, 957,
	951, 952, 1974, 986, 461, -2, -2, -2, 2077, -2,
	493, -2, 500, 2080, 1976, 505, 0, 507, -2, 510,
	959, 961, 963, 27, 29, 30, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 898, 899, 0, 0, 156,
	-2, -2, -2, -2, 0, 0, 1824, 1701, 1755, 1704,
	1699, 193, 195, 197, 198, 0, 0, 0, 0, 0,
	0, 222, 224, 227, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 754, 746, 747, 928, 0,
	0, 0, 0, 325, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	0, 255, 363, 364, 0, 1105, 1105, 0, 0, 0,
	0, 173, 164, 0, 0, 730, 450, 452, 0, 0,
	159, 0, 0, 955, 0, 175, 0, 0, 466, 468,
	470, 535, 537, 539, 541, 543, 545, 548, 550, 552,
	554, 556, 558, 560, 563, 565, 567, 569, 571, 573,
	575, 577, 579, 581, 583, 585, 587, 588, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 591, 593, 594, 595, 0, 646, 663, 0,
	883, 1106, 988, 966, 979, 988, 968, 969, 970, 971,
	972, 977, 978, 981, 0, 973, 974, 975, 32, 34,
	36, 38, 40, 42, 44, 279, 281, 283, 285, 289,
	291, -2, 1078, 1079, 331, 333, 335, 337, 339, 453,
	0, 455, 0, 592, -2, 0, 1110, 1110, 1110, 0,
	0, 1079, 1077, 0, 458, 459, 514, 515, 1348, 0,
	0, 0, 0, 0, 1598, 1432, 0, 516, -2, 1463,
	1465, 2056, 2077, 1597, 1467, 1468, 1469, 1470, 1471, 0,
	0, 1474, 1475, 1476, 1477, 1478, 0, 1480, 0, 1485,
	1486, 1487, 0, 2061, 1678, 1751, -2, 1251, 1252, 1253,
	1254, 1255, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 2067,
	1747, 0, 1564, 1501, -2, 1772, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1833, -2,
	-2, -2, -2, -2, -2, -2, 1307, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 2091, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 0, 2045,
	2062, 2063, 2068, 2070, 2064, 2053, 1526, -2, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 1308, -2, 2057, 2058, 2073, 2074,
	2079, 2084, 2085, 2060, 2069, -2, -2, 1096, 1949, 1099,
	843, 1097, 1081, 1083, 0, 1085, 0, 0, 0, 1090,
	1113, 1111, 0, 1152, 1094, 1095, 1170, 1170, 1194, 0,
	1175, 0, 1194, 1105, 1220, 0, 1181, 1969, 1502, 1503,
	0, 1755, 1752, -2, 0, 0, 0, 0, 0, 0,
	0, 423, 0, 429, 431, 0, 0, 0, 0, 0,
	0, 0, 0, 985, 463, 464, 0, 488, 0, 492,
	2052, -2, 1790, 1989, -2, 496, 989, 993, 994, 995,
	996, 0, 0, 0, 0, 0, 502, 0, 0, 489,
	490, 508, 511, 0, 53, 0, 2062, 1220, 55, 0,
	1723, 1777, 1778, 1779, 1780, 1781, 2091, 2108, 2110, 2111,
	2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121,
	2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131,
	2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141,
	2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151,
	2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161,
	2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171,
	2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181,
	2182, 2183, 2184, 2185, 2186, 2187, 2188, 57, 0, 2062,
	60, 0, 2062, 0, -2, 65, 0, 1729, 67, 0,
	1726, 76, 0, 2062, 0, 1698, -2, -2, 2062, 894,
	176, 177, 1768, 1769, 1773, 1774, 1775, 1776, -2, 2062,
	897, 1207, 160, 0, 0, 0, 722, 1695, 1700, 723,
	1705, 0, 199, 200, 201, 202, 203, 2062, 205, 206,
	0, 208, 209, 2062, 211, 212, 0, 214, 230, 231,
	0, 233, 0, 2062, 0, 0, 0, 239, -2, 256,
	0, 253, 0, 243, 244, 246, 247, 248, 249, 250,
	0, 295, 293, 1734, 0, 0, 0, 912, -2, 2062,
	888, -2, 2062, 891, 917, 1737, 0, -2, 0, 1103,
	2062, 1003, 750, 751, 752, 753, 0, 314, 0, 1016,
	0, 1018, 0, 1039, 1226, 1170, 1170, 0, 257, 258,
	259, 260, 261, 2062, 0, 0, 0, 266, 0, 268,
	269, 270, 271, 272, 273, 274, 275, 276, 151, 2062,
	342, 361, 151, 2062, 345, 151, 2062, 348, 151, 2062,
	351, 1693, 151, 2062, 354, 355, 2062, 357, 178, 358,
	2062, 360, 0, -2, 416, 1741, -2, 366, 0, 367,
	0, -2, 0, 190, 0, 0, 728, 729, 1207, 162,
	0, 953, 954, 0, 0, 473, 0, 0, 589, 590,
	0, 0, 600, 601, 602, 190, 1977, 1947, 1849, 607,
	0, 610, 613, -2, 0, 0, 0, 0, 617, 0,
	622, 623, 624, 0, 727, 626, 0, 0, 628, 0,
	632, 0, 635, 0, 637, 0, 639, -2, -2, -2,
	650, -2, 0, 654, 0, 656, 0, 0, 0, 0,
	671, 672, 0, 677, 0, 680, 681, 682, 683, 684,
	0, 686, 687, 688, 689, 0, 691, 692, -2, -2,
	696, 698, 0, 705, 0, 709, 0, 713, 0, 596,
	597, 151, 1224, 965, -2, 967, 0, 983, -2, 0,
	454, 0, 457, 1131, 1064, 1061, 0, 1128, 1129, 1065,
	0, 0, 0, 1072, 0, 1108, 1109, 0, 0, 0,
	1051, 1052, 0, 0, 0, 0, 1603, 1604, 1605, 1606,
	1607, 1608, 1611, 1612, 1609, 1610, 1613, 1614, 0, 0,
	0, 0, 0, 1615, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1616, 1617, 1618, 0, 0,
	1620, 0, 1622, 0, 0, 0, 0, 0, 0, 1411,
	1413, 1686, 0, 0, 1619, 1353, 1354, 1355, 1390, 1391,
	0, 0, 1464, 1683, 1682, 1466, 0, 1634, 0, 1473,
	1479, 1719, -2, 0, 1598, 1629, 0, 0, 1488, 1489,
	1490, 0, 0, 1634, 0, 0, 1677, 1345, 0, 0,
	1566, 0, 1287, 0, 1288, 1289, 0, 1290, 1291, 1304,
	1317, 0, 0, 0, 0, 1321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1309, 0, 0, 0, 1658, -2,
	0, 0, 0, 0, 0, 1098, 0, 0, 1156, 1687,
	1691, 1692, 1156, 1156, 0, 0, 1635, 1217, 1217, 0,
	0, 1213, 1213, 1213, 1211, 1194, 0, 1194, 1204, 0,
	1194, 1194, 0, -2, 1175, 0, 0, 1204, 0, 1188,
	404, 406, 408, 410, 411, 412, 414, 1221, 1222, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 1743,
	0, 0, 0, 0, 434, 444, 1105, 0, 1637, 1243,
	1246, 1247, 1248, 1249, 1250, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, -2, 1305, 1307, 1328, 1294, 1295, 1296, 1297,
	1298, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284,
	1285, 1286, 1300, 0, 1275, 1275, 1275, 1292, 1293, 1316,
	1327, 1319, 1327, 1323, 1244, 1245, 1310, 1311, 1312, 1313,
	0, 438, 0, 0, 0, 0, -2, 498, 503, 504,
	0, 0, 991, 0, 997, 525, 526, 527, 999, 1000,
	0, 501, 528, 529, 530, 531, 532, 533, 0, 1707,
	1708, 1709, 1710, 1713, 1714, 0, 0, 499, 518, 506,
	0, 512, 77, 948, 116, 0, 948, 948, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 101, 112, 89,
	90, 0, 0, 0, 0, 61, 865, 0, 868, 0,
	0, 0, 0, 0, 0, 0, 881, 0, 0, 100,
	0, 95, 79, 0, 0, 0, 102, 114, 0, 142,
	144, 0, 0, 892, 0, 1102, 0, 895, 0, 181,
	1206, 0, 1207, 721, 0, 0, 1756, 1703, 0, 0,
	0, 0, 232, 234, 0, 236, 237, 238, 0, 911,
	0, 245, 242, 286, 815, 2062, 0, 0, 312, 307,
	0, 309, 864, 2062, 862, 1738, 0, 886, 0, 889,
	0, 0, 0, 918, 0, 2062, 923, 1725, 1764, 1765,
	1005, 0, 316, 0, 1019, 1021, 0, 0, 1227, 0,
	1229, 1230, 0, 263, 264, 265, 0, 340, 0, 149,
	150, 0, 343, 0, 346, 0, 349, 0, 0, 352,
	0, 0, 0, 0, 1105, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 190, 0, 1207, 190,
	190, 1207, 475, 1207, 477, 0, 0, 603, 190, 190,
	190, 608, 609, 611, 612, -2, -2, 706, 614, 615,
	674, 0, 0, 0, 673, 625, 0, 715, 1965, 725,
	674, 1824, 674, 1824, 674, 1824, 636, 638, 641, 666,
	649, 653, 0, 0, 0, 658, 0, 660, 0, 662,
	674, 675, 678, 685, 690, 0, 0, 0, 0, 0,
	0, 0, 882, 0, 982, 1131, 1064, 456, 1055, 1130,
	1056, 1063, 1066, 0, 0, 1068, 0, 1070, 0, 1126,
	1127, 1134, 1135, 0, 1145, 1146, 1138, 0, -2, 0,
	0, 1141, 1142, 1074, 0, 1091, 1092, 1093, 1117, 1118,
	937, 0, 2189, 1349, 1238, 1350, 1351, 1722, 0, 1356,
	1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, -2,
	-2, -2, -2, -2, -2, -2, -2, 1374, 1375, 1376,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, -2, -2,
	-2, 1388, 1389, -2, 1621, 1623, 0, 1686, 0, -2,
	0, -2, -2, -2, -2, 1408, 0, 1410, 1415, 1417,
	1419, 0, 0, 0, 0, 1685, 1429, 1669, 1670, 0,
	0, 1600, 1601, 1602, 1414, 0, 1433, 1684, 1681, 0,
	0, 1633, 1116, 1492, 0, 0, 0, 0, 1499, 1484,
	1631, 0, 1630, 0, 0, 0, 1641, 0, 1676, 1672,
	0, 1720, 1344, 1331, 1332, 1333, 1334, 1335, 1336, 1346,
	0, 1717, 1744, 1750, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1527, 1528, 1529, 1530,
	1531, 0, 1533, 1534, 0, 1536, 1537, 0, 1539, 1540,
	0, 1542, 1543, 1544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1546, 0, 1644, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 1548, 0, 1550, 1635, 1655,
	0, 0, 1434, 0, 0, 0, 1598, 0, 1553, 1635,
	1663, 0, 0, 0, 0, 0, 1635, 0, 1668, 0,
	1560, 0, 1562, 1100, 0, 0, 1233, 0, 0, 0,
	1690, 1233, 1233, 0, 1151, 0, 0, 1214, 1215, 1216,
	0, 0, 1217, 0, 1208, 1212, 1209, 1210, 1204, 1167,
	0, 0, 1724, 1204, 1173, 1203, 0, 843, 1193, 1204,
	1204, 0, -2, 1177, 1194, 0, 0, 405, 407, 409,
	413, 415, 0, 0, 1116, -2, 190, 842, 0, 0,
	0, 0, 0, 424, 426, 0, 0, 418, 0, 421,
	0, 1234, 1237, 0, 0, -2, 0, 0, 1329, 0,
	0, 0, 0, 491, 0, 990, 998, 0, 522, 0,
	524, 0, 1711, 1715, 1712, 1716, 0, 513, 0, 0,
	0, 0, 947, 120, 2062, 0, 153, 0, 0, 809,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 91, 0,
	0, 0, 0, 0, 0, 0, 866, 867, 869, 876,
	878, 0, 872, 1718, 0, 0, 873, 0, 875, 877,
	879, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	92, 0, 0, 0, 0, 1697, 909, 907, 904, 905,
	906, 0, -2, -2, 190, 0, 161, 181, 1696, 1706,
	0, 204, 207, 210, 213, 0, 240, 0, 0, 756,
	733, 0, 0, 294, 190, 0, 0, 308, 860, 863,
	0, 843, 2062, 903, 1736, 0, 0, 0, 0, 0,
	916, 0, 0, 0, 2062, 1007, 1013, 0, 1233, 0,
	1037, 1022, 0, 0, 0, 1037, 1041, 1042, 1044, 1045,
	0, 0, 1228, 0, 267, 362, 151, 151, 151, 1694,
	151, 151, 179, 356, 359, 365, 417, 1105, 1105, 190,
	188, 1925, 186, 183, 185, 0, 0, 0, 757, 759,
	760, 761, 762, 0, 1765, 0, 1878, 1765, 0, 1025,
	1027, 0, 157, 163, 190, 0, 306, 474, 479, 598,
	0, 604, 605, 606, 643, 668, 616, 618, 619, 620,
	0, 726, 724, 627, 674, 630, 674, 633, 674, 652,
	655, 657, 0, 0, 0, 670, 0, 0, 0, 0,
	0, 0, 0, 710, 711, 712, 714, 1225, 1059, 1060,
	1062, 0, 1071, 0, 0, 1140, -2, -2, 1139, 1143,
	1144, -2, -2, -2, -2, 1067, 0, 1076, 1073, 0,
	1125, 935, 936, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 1430, 0, -2, 1409, 1412, 1416, 1418, 1420,
	0, 0, 0, 0, 0, 0, 1624, 0, 1626, 1431,
	1679, 1682, 1596, 0, 0, 1115, 1116, 1116, 0, 1498,
	0, 1632, 0, 1639, 1640, 0, 1491, 0, 1673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1500, 0,
	0, 0, 1299, 1273, 0, 1327, 1325, 1326, 1320, 1327,
	1324, 0, 1532, 1535, 1538, 1541, 0, 0, 0, 0,
	1521, 0, 0, 0, 1525, 1545, 0, 1547, 1549, 0,
	0, 1551, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1437, 1438, 1439, 1552, 1661,
	1662, 0, 0, 0, 0, 0, 0, 1558, 0, 1667,
	1559, 1561, 1105, 1153, 1148, 1232, 0, 1688, 1207, 1155,
	1157, 1689, 1727, 1148, 1148, 0, 1636, 0, 0, 1198,
	0, 0, 0, 1200, 1171, 0, 0, 1165, 0, 1161,
	1162, 1163, 1164, 1172, 843, 1202, 1174, 1178, 1744, 0,
	1204, 0, 1189, 0, 1191, 1223, 0, 1183, 1186, 0,
	0, 191, 1757, 215, 219, 220, 216, 217, 218, 433,
	0, 0, 1638, 0, 1239, 0, 0, 0, 0, 0,
	437, 0, 487, -2, 520, 521, 523, 0, 519, 117,
	948, 0, 0, 939, 0, 122, 2062, 131, 0, 785,
	0, 1728, 0, 0, 0, 0, 950, 0, 0, 2062,
	151, 2062, 151, 134, 137, 0, 141, 139, 0, 0,
	776, 78, 948, 81, 85, 93, 0, 0, 0, 99,
	0, 0, 0, 941, 0, 870, 871, 874, 880, 62,
	0, 943, 938, 143, 83, 87, 94, 0, 945, 80,
	0, 908, 884, 885, 893, 896, 154, 0, 190, 1702,
	0, 0, 0, 0, 0, 755, 826, 0, 0, 0,
	0, 300, 296, 0, 305, 311, 310, 0, 0, 0,
	-2, -2, 913, 0, 915, 927, 0, 0, 0, 1009,
	1013, 0, 1012, 1103, 1116, 315, 1014, 1037, 0, 0,
	0, 1024, 1020, 1017, 1233, 0, 0, 0, 0, 0,
	262, 341, 344, 347, 350, 353, 368, 369, 165, 0,
	0, 0, 0, 0, 190, 0, 0, 0, 0, 0,
	1765, 1765, 0, 1732, 0, 0, 0, 0, 158, 0,
	476, 0, 0, 0, 629, 631, 634, 659, 661, 674,
	699, 700, 771, 0, 771, 0, 0, 1069, 0, 1137,
	1075, 1119, 1120, 0, 937, 0, 1352, 1393, 0, 0,
	-2, 0, 0, 1397, 0, 0, 0, -2, 0, 0,
	0, 1625, 1627, 0, 1681, 1493, 0, 0, 0, 1497,
	1481, 1482, 0, 1599, 1642, 1671, 1675, 0, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 0, 1721, 1745, 1749, 1572,
	1573, 1577, 1735, 0, 0, 0, 1318, 1322, 1504, 0,
	0, 0, 0, 0, 0, 0, 1643, 1654, 1656, 1435,
	1436, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, -2, -2, -2, 1453, 1454, 1455, -2, -2, -2,
	0, 0, 0, 1657, 1659, 1660, 1664, 1665, 0, 1555,
	1556, 1557, 1666, 0, 1150, 0, 1231, 1154, 0, 1150,
	1150, 1112, 1196, 0, 0, 1219, 0, 1168, 0, 1169,
	0, 1201, 0, 1176, 1179, 1180, 1190, 0, 1182, 0,
	1185, 0, 1493, -2, 435, 419, 0, 0, 1241, 0,
	1302, 1306, 1330, 439, 1205, 0, 0, 0, 0, 152,
	783, 808, 0, 0, 930, 937, 0, 0, 124, 0,
	0, 0, 132, 0, 0, 129, 0, 136, 140, 0,
	0, 0, 0, 0, 96, 97, 98, 0, 103, 0,
	104, 0, 0, 0, 0, 0, 0, 180, 155, 235,
	902, 241, 765, 814, 0, 816, 0, 734, 0, 0,
	815, 292, 0, 299, 0, 864, 0, 0, 887, 890,
	914, 0, 0, 0, 0, 0, 1011, 1013, 0, 1004,
	1005, 1133, 1015, 1035, -2, 1034, 0, 1116, 1043, 1040,
	1046, 1047, 0, 187, 0, 182, 184, 0, 168, 0,
	0, 758, 763, 0, 0, 0, 0, 0, 1026, 1028,
	0, 174, 0, 599, 621, 669, 701, 770, 0, 0,
	703, 0, 0, 1136, 1123, 1124, 1121, 937, 1395, 1399,
	0, 0, 0, 1401, -2, 0, 1423, -2, -2, 1628,
	1680, 1472, 1116, 1494, 1496, 1483, 1674, 1347, 0, 1579,
	1576, 0, 1563, 1274, 1516, 1517, 0, 0, 1520, 1522,
	1523, 1524, 1653, 0, 0, 0, 0, 1554, 1101, 1568,
	0, 0, 1158, 1568, 1568, 1197, 0, 1199, 1166, 1159,
	0, 1745, 1192, 1184, 0, 0, 1235, 1240, 0, 1301,
	118, 119, 121, 0, 784, 0, 787, 0, 0, 0,
	0, 794, 795, 0, 0, 0, 0, 0, 830, 839,
	0, 1125, 0, 0, 0, 126, 146, 0, 0, 949,
	0, 0, 151, 151, 0, 0, 940, 0, 0, 0,
	0, 106, 0, 0, 942, 944, 0, 0, 946, 773,
	0, 826, 818, 819, 820, 0, 825, 827, 0, 0,
	743, 0, 739, 0, 0, 736, 756, 733, 0, 297,
	861, 900, 843, 0, 926, 0, 0, 0, 1001, 1013,
	0, 1006, 1007, 1037, 1132, 0, 0, 0, 1023, 1133,
	0, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	190, 478, 480, 0, 0, 486, 769, 0, 0, 0,
	0, 1122, 1403, -2, -2, 1424, 0, 1746, 1748, 1116,
	0, 1565, 0, 0, -2, 0, 0, 0, 1087, 0,
	1149, 1147, 1088, 1089, 1218, 0, 1187, 0, 1242, 123,
	0, 788, 789, 1731, 791, 0, 793, 796, 0, 799,
	1767, 0, 803, 810, 831, 0, 765, 0, 836, 837,
	931, 932, 841, 0, 125, 127, 145, 934, 0, 128,
	135, 0, 0, 82, 0, 0, 1817, 109, 107, 105,
	84, 0, 733, 772, 0, 817, 0, 828, 829, 741,
	0, 735, 0, 0, 0, 0, 0, 298, 301, 0,
	304, 0, 0, 927, 0, 0, 0, 1008, 1009, 313,
	0, 0, 0, 1037, 1048, 167, 0, 0, 841, 0,
	0, 807, 0, 172, 0, 482, 0, 484, 0, 702,
	704, 0, 0, 1495, 1583, 0, 1518, 1519, -2, 0,
	1461, 1567, 1569, 0, 1160, 1236, 786, 790, 0, 0,
	0, 847, 0, 0, 0, 834, 835, 773, 0, 765,
	0, 0, 148, 0, 0, 0, 0, 0, 0, 0,
	0, 731, 0, 0, 744, 0, 740, 737, 738, 765,
	0, 302, 303, 0, 841, 0, 839, 0, 1010, 1011,
	0, 1030, 1031, 1033, 1038, 0, 0, 839, 841, 806,
	0, 481, 0, 0, 707, 708, 0, 0, 0, 0,
	1578, 1462, 0, 0, 0, 0, 798, 852, 0, 0,
	0, 832, 833, 830, 0, 812, 0, 843, 130, 0,
	933, 841, 0, 777, 0, 0, 780, 0, 0, 110,
	1817, 108, 0, 0, 0, 822, 824, 745, 773, 743,
	901, 839, 0, 765, 0, 1002, 0, 1032, 190, 190,
	765, 839, 190, 483, 485, 1575, 1595, 1584, -2, 2025,
	1821, 0, 1595, 1595, 1570, 1571, 0, 0, 800, 848,
	849, 0, 844, 845, 846, 1766, 801, 802, 811, 838,
	0, 847, 147, 765, 774, 0, 0, 775, 0, 0,
	113, 0, 115, 0, 821, 0, 733, 742, 765, 0,
	773, 0, 1233, 169, 170, 773, 765, 171, 1580, 0,
	0, 1586, 1587, 1588, 1589, 1590, 1581, 1582, 792, 0,
	850, 0, 851, 0, 0, 0, 0, 852, 133, 778,
	0, 781, 0, 111, 0, 823, 732, 773, 841, 924,
	839, 1029, 804, 773, 0, 1592, 1593, 0, 0, 0,
	853, 0, 856, 857, 0, 854, 0, 830, 0, 0,
	768, 924, 839, 921, 0, 765, 805, 1591, 1594, 1585,
	797, 855, 858, 859, 840, 813, 0, 0, 764, 766,
	767, 919, 765, 925, 773, 773, 0, 773, 924, 779,
	0, 924, 922, 0, 920, 0, 773, 782,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 456, 3, 462, 457, 3,
	467, 468, 460, 458, 472, 459, 469, 461, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 475, 3,
	448, 450, 449, 453, 471, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 465, 3, 466, 463, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 473, 455, 474, 451,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 452, 57791, 454, 57792, 464, 57793, 470, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1116
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1121
		{
			return helpWith(sqllex, "")
		}
	case 7:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1125
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1126
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1127
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1128
		{
			return helpWith(sqllex, "GRANT")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1129
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1130
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1131
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1132
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1136
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1145
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1146
		{
			return helpWith(sqllex, "ALTER USER")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1147
		{
			return helpWith(sqllex, "ALTER")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1150
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1151
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1152
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1153
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1154
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1155
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1156
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1210
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1236
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1262
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1266
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 62:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1270
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1284
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1303
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1335
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1339
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 78:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1343
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1349
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1353
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1359
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1368
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1379
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1383
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1389
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1397
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1407
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1411
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1421
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1432
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1439
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1451
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1458
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1466
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1471
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1475
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1480
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1486
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1494
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1505
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 103:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1515
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 104:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1525
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 105:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1534
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1545
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 107:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1551
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1559
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1563
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1567
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 111:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1571
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1577
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1582
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1593
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1597
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1603
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1607
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1614
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1619
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1624
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1629
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1634
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1639
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1644
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1649
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1654
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1659
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1664
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1673
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1685
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.colType(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1695
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1702
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 133:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1706
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1714
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1751
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1760
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1768
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1774
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1786
		{
			sqlVAL.union.val = nil
		}
	case 147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1792
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1796
		{
			sqlVAL.union.val = nil
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1803
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1807
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1817
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1821
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1847
		{
			sqlVAL.union.val = &tree.Backup{DescriptorCoverage: tree.AllDescriptors, To: sqlDollar[3].union.partitionedBackup(), IncrementalFrom: sqlDollar[5].union.exprs(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.Backup{Targets: sqlDollar[2].union.targetList(), To: sqlDollar[4].union.partitionedBackup(), IncrementalFrom: sqlDollar[6].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[7].union.kvOptions()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1854
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1877
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1884
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1888
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1892
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1945
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1954
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1960
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1965
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1970
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1975
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1980
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1984
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2000
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2003
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2007
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2011
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2029
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2033
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2051
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2057
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2061
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2075
		{
			sqlVAL.union.val = nil
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2081
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2095
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2096
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2097
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2098
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2108
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2116
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2118
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2121
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2148
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2154
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2157
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2184
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2193
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2197
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2201
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2205
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2224
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2229
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2241
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2242
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2244
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2245
		{
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2246
		{
			return helpWith(sqllex, "CREATE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2249
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2250
		{
			return unimplemented(sqllex, "create cast")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2251
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2252
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2253
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2254
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2255
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2256
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2257
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2258
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2259
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2260
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2261
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2262
		{
			return unimplemented(sqllex, "create operator")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2263
		{
			return unimplemented(sqllex, "create publication")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2264
		{
			return unimplemented(sqllex, "create rule")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2265
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "create")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2266
		{
			return unimplemented(sqllex, "create server")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2267
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2268
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2269
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2272
		{
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2273
		{
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2276
		{
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2277
		{
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2280
		{
		}
	case 256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2281
		{
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2284
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2285
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2286
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2287
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2288
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2289
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2290
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2291
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2292
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2293
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2294
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2295
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2296
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2297
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2298
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2299
		{
			return unimplemented(sqllex, "drop server")
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2300
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2301
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2302
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "drop type")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2303
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2307
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2308
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2309
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2310
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2312
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2313
		{
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2314
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2333
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2337
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2351
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2360
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2367
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2383
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2394
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2422
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2432
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2457
		{

			sqlVAL.union.val = nil
		}
	case 313:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2481
		{
			return helpWith(sqllex, "DELETE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2484
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2485
		{
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2496
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2497
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2498
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2499
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2500
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2509
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2510
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2511
		{
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2512
		{
			return helpWith(sqllex, "DROP")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2515
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2516
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2517
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2518
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2519
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2527
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2534
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2549
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2564
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[3].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[5].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2587
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2610
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = &tree.DropUser{Names: sqlDollar[3].union.exprs(), IfExists: false}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = &tree.DropUser{Names: sqlDollar[5].union.exprs(), IfExists: true}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2625
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: true}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: true}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2640
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2644
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2649
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = &tree.Explain{Statement: sqlDollar[2].union.stmt()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2675
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.Explain{Options: sqlDollar[3].union.strs(), Statement: sqlDollar[5].union.stmt()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.Explain{Options: []string{"DISTSQL", "ANALYZE"}, Statement: sqlDollar[3].union.stmt()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.Explain{Options: []string{"DISTSQL", "ANALYZE"}, Statement: sqlDollar[3].union.stmt()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.Explain{Options: append(sqlDollar[4].union.strs(), "ANALYZE"), Statement: sqlDollar[6].union.stmt()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = &tree.Explain{Options: append(sqlDollar[4].union.strs(), "ANALYZE"), Statement: sqlDollar[6].union.stmt()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2700
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2704
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2707
		{
			return helpWith(sqllex, "DELETE")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2709
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2710
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2711
		{
			return helpWith(sqllex, "INSERT")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2712
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2714
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2715
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2716
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2724
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2725
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2726
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2731
		{
			return helpWith(sqllex, "DELETE")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2732
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2733
		{
			return helpWith(sqllex, "INSERT")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2735
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2739
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2740
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2744
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2766
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2774
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2778
		{
			sqlVAL.union.val = sqlDollar[2].union.colTypes()
		}
	case 422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = []*types.T(nil)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2792
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2799
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2807
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2840
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2860
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2864
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2868
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2871
		{
			return helpWith(sqllex, "GRANT")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2899
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2902
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2911
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2921
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2939
		{
			return helpWith(sqllex, "RESET")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2940
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2955
		{
			return helpWith(sqllex, "RESET")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2963
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2966
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2977
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2980
		{
			return helpWith(sqllex, "USE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2984
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2985
		{
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2986
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2987
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2991
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2992
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2993
		{
			return helpWith(sqllex, "USE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3009
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3027
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3045
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3053
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3067
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3077
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3093
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3107
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3117
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3137
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3142
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3162
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3164
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3167
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3171
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3190
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3197
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3202
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3207
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3212
		{
			return unimplemented(sqllex, "set from current")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3213
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3221
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3226
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3233
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3237
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3243
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3297
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3301
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3307
		{
			sqlVAL.union.val = tree.Low
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3311
		{
			sqlVAL.union.val = tree.Normal
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = tree.High
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3326
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3343
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3356
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3357
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3358
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3359
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3360
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3361
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3363
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3365
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3366
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3367
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3368
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3372
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3374
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3375
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3376
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3377
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3379
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "SHOW")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3393
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.str = "client_encoding"
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3407
		{
			sqlVAL.str = "timezone"
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3408
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3426
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3430
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3441
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3449
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3457
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3474
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3483
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3501
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3508
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3510
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3513
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3519
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3530
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3533
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3564
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3567
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3580
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3596
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3599
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3612
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3618
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3621
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3629
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3632
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3634
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3637
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3645
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3648
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3653
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3657
		{
			sqlVAL.union.val = true
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = true
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3661
		{
			sqlVAL.union.val = false
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3678
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3679
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3681
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3685
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3688
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3690
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3698
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3706
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3715
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3718
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3723
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3725
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3729
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3732
		{
			sqlVAL.union.val = true
		}
	case 664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3733
		{
			sqlVAL.union.val = false
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3741
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3744
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3746
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3749
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3757
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3767
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3777
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3780
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = true
		}
	case 674:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3784
		{
			sqlVAL.union.val = false
		}
	case 675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3791
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3795
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3798
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3812
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3819
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3830
		{

			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3834
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3842
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3847
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3852
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3864
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3868
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3872
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3885
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3888
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3896
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3899
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3903
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3907
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3911
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3919
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3934
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3941
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3956
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3964
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3970
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3979
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3991
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3995
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4002
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4007
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4131
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4135
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4178
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4183
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4187
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4203
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4207
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4267
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4281
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4297
		{
			sqlVAL.union.val = nil
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4301
		{

			sqlVAL.union.val = nil
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4307
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4312
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4318
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4322
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4332
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 741:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4338
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4350
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
			}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4363
		{
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4364
		{
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4365
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = true
		}
	case 747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4384
		{
			sqlVAL.union.val = true
		}
	case 748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4385
		{
			sqlVAL.union.val = false
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4389
		{
			sqlVAL.union.val = true
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.union.val = true
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4391
		{
			sqlVAL.union.val = true
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = true
		}
	case 754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4393
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4398
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4404
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4408
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4420
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4423
		{
			return unimplementedWithIssue(sqllex, 30840)
		}
	case 764:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4427
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4443
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4448
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 768:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4459
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 771:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4466
		{
			sqlVAL.str = ""
		}
	case 773:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 774:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 779:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4519
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4523
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 782:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4529
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4543
		{
			typ := sqlDollar[2].union.colType()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, isSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 785:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4584
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4588
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4610
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4629
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4637
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4647
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4651
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 804:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4662
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
			}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
				},
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4686
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:     tree.Name(sqlDollar[3].str),
				Columns:  sqlDollar[5].union.idxElems(),
				Inverted: true,
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4696
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4713
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
				},
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4736
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4748
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 815:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4766
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4772
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4782
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4793
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4797
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4810
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4821
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4825
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4837
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 826:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4841
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4851
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4857
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4862
		{
		}
	case 831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4863
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4864
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4865
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4866
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4884
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 840:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4894
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4900
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4906
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4938
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4959
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4987
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4991
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5003
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5022
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5031
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5039
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5043
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5047
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5050
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.colType().SQLString())
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5051
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5053
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5054
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5055
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5065
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5068
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5070
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5072
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5074
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5075
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5078
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5080
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5082
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5090
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5093
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5101
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.CreateUser{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5115
		{
			sqlVAL.union.val = &tree.CreateUser{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5118
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: true}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: true}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5133
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5141
		{
			sqlVAL.union.val = &tree.AlterUser{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5145
		{
			sqlVAL.union.val = &tree.AlterUser{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5148
		{
			return helpWith(sqllex, "ALTER USER")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: true}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5160
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: true}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5163
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5168
		{
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5169
		{
		}
	case 900:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5177
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5188
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5198
		{
			return unimplementedWithIssue(sqllex, 24897)
		}
	case 903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5199
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5214
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5224
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 910:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5228
		{
			sqlVAL.union.val = nil
		}
	case 911:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5233
		{
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5234
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5240
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 914:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5242
		{
			return unimplementedWithIssue(sqllex, 24873)
		}
	case 915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5244
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5246
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5248
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5250
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5266
		{
			table := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[4].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Columns:     sqlDollar[9].union.idxElems(),
				Sharded:     sqlDollar[11].union.shardedIndexDef(),
				Storing:     sqlDollar[12].union.nameList(),
				Interleave:  sqlDollar[13].union.interleave(),
				PartitionBy: sqlDollar[14].union.partitionBy(),
				Inverted:    sqlDollar[7].union.bool(),
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:5281
		{
			table := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[7].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Sharded:     sqlDollar[14].union.shardedIndexDef(),
				Storing:     sqlDollar[15].union.nameList(),
				Interleave:  sqlDollar[16].union.interleave(),
				PartitionBy: sqlDollar[17].union.partitionBy(),
				Inverted:    sqlDollar[10].union.bool(),
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5297
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[5].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				Columns:     sqlDollar[9].union.idxElems(),
				Storing:     sqlDollar[11].union.nameList(),
				Interleave:  sqlDollar[12].union.interleave(),
				PartitionBy: sqlDollar[13].union.partitionBy(),
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:5311
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[8].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Storing:     sqlDollar[14].union.nameList(),
				Interleave:  sqlDollar[15].union.interleave(),
				PartitionBy: sqlDollar[16].union.partitionBy(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5325
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5328
		{
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5329
		{
			return unimplementedWithIssue(sqllex, 9683)
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5333
		{

			switch sqlDollar[2].str {
			case "gin":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "gist", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = false
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5354
		{
			sqlVAL.union.val = true
		}
	case 929:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = false
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5364
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5368
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5377
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5400
		{
			sqlVAL.str = ""
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5404
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = tree.Descending
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 938:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5424
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5430
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5438
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5444
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5452
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5458
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5475
		{
		}
	case 948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5476
		{
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5479
		{
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5480
		{
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5491
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5513
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5521
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5524
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5528
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5529
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5530
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5549
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5551
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5554
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5564
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5567
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5569
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5572
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5581
		{
		}
	case 975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5582
		{
		}
	case 976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5583
		{
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5591
		{
			if sqlDollar[2].str != "" {
				sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
			} else {
				sqlVAL.union.val = &tree.RollbackTransaction{}
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5598
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5601
		{
		}
	case 980:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5602
		{
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.str = ""
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 984:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5618
		{
			sqlVAL.str = ""
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5624
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5628
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5648
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5661
		{
		}
	case 992:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5663
		{
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5667
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5686
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5712
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5722
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5732
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5736
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.str = ""
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5746
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.str = ""
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.str = ""
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5766
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5770
		{
			sqlVAL.str = ""
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5775
		{
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5776
		{
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5788
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5795
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5802
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5813
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5820
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5824
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5833
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5844
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5852
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5882
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5886
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5890
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5896
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5899
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5900
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5902
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5908
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5913
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5917
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5946
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5949
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5978
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5982
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6025
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6058
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6084
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6088
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6092
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6102
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6114
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6118
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6128
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6163
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6164
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6165
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6226
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6263
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6282
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6286
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6307
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6315
		{
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6316
		{
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = nil
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6329
		{
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6330
		{
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = true
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = false
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = false
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = true
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6359
		{
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6360
		{
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6374
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6390
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6411
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6416
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6428
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6436
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6445
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6454
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6478
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6492
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6496
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6533
		{
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6534
		{
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6537
		{
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6538
		{
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6565
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6591
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6593
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6608
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6620
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6626
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6630
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6635
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6640
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6651
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6663
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6682
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6721
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6731
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6762
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6766
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6777
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6801
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6807
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6818
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6840
		{
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6842
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.union.val = nil
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6847
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6851
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = true
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = false
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6885
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6935
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6941
		{
			sqlVAL.str = tree.AstFull
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6949
		{
			sqlVAL.str = tree.AstRight
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6953
		{
			sqlVAL.str = tree.AstInner
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6959
		{
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6960
		{
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.str = tree.AstHash
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.str = ""
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7015
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7017
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7018
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7022
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7027
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7045
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7051
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7057
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7067
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7084
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7096
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.colType()
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7109
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7117
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7118
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7136
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7138
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7146
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7147
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7175
		{
			sqlVAL.union.val = types.Jsonb
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7191
		{
			sqlVAL.union.val = types.String
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = types.Name
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7199
		{
			switch sqllex.(*lexer).nakedIntType.Width() {
			case 32:
				sqlVAL.union.val = &serial4Type
			default:
				sqlVAL.union.val = &serial8Type
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7208
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = &serial4Type
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = types.Uuid
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = types.INet
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7236
		{
			sqlVAL.union.val = types.Oid
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7240
		{
			sqlVAL.union.val = types.OidVector
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = types.Int2Vector
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7248
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else {
				var ok bool
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						sqllex.Error("type does not exist")
						return 1
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7279
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7287
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = nil
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.union.val = types.Int2
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7314
		{
			sqlVAL.union.val = types.Int2
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = types.Int4
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = types.Int
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = types.Int
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = types.Int
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = types.Float4
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = types.Float4
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7342
		{
			sqlVAL.union.val = types.Float
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = types.Float
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7354
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7362
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7370
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = types.Bool
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = types.Bool
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = types.RegProc
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = types.RegProcedure
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.union.val = types.RegClass
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.union.val = types.RegType
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = types.RegNamespace
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7411
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = types.Float
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7430
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7436
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7458
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = types.String
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = true
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = false
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = types.Date
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7507
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7515
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7529
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7538
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7546
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7563
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = true
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = false
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = false
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = types.Interval
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7587
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7630
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7638
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7644
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7662
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7671
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7686
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = nil
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7716
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7753
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7761
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7765
		{

			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7778
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7799
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7807
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7819
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7891
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7951
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7963
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7991
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8022
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8064
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8072
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8076
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8088
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8110
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8134
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8146
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8174
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8178
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8198
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8202
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8218
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8244
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8288
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8292
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8296
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8304
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8309
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8311
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8315
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8323
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8335
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8344
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8359
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8389
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8393
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8397
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8400
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8401
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8403
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8413
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8416
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8427
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8453
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8483
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8497
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8501
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.CastExplicit}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8505
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8517
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8547
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8552
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8558
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8561
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8570
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8579
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8588
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8593
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8598
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8600
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8603
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8608
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8617
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8618
		{
			return unimplemented(sqllex, "treat")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8639
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8644
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8649
		{
			return unimplemented(sqllex, "within group")
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8650
		{
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8685
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8693
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.str = ""
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8738
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8768
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8774
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8787
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8834
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8855
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8877
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8884
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = tree.Any
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = tree.Some
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = tree.All
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8910
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = tree.Div
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = tree.LT
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8920
		{
			sqlVAL.union.val = tree.GT
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = tree.LE
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = tree.GE
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = tree.NE
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = tree.Like
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8964
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8972
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = []*types.T{sqlDollar[1].union.colType()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9024
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colTypes(), sqlDollar[3].union.colType())
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9040
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9077
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9091
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9240
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9245
		{
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9246
		{
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9318
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9326
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.TableName)
			name.TableName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9399
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9415
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9424
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9435
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9444
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9452
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9464
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9629
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9642
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9649
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.str = ""
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
