// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:66

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}

//line sql-gen.y:624
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BLOB = lex.BLOB
const BOOL = lex.BOOL
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const BYTEA = lex.BYTEA
const BYTES = lex.BYTES
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INT2VECTOR = lex.INT2VECTOR
const INT2 = lex.INT2
const INT4 = lex.INT4
const INT8 = lex.INT8
const INT64 = lex.INT64
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIAL = lex.SERIAL
const SERIAL2 = lex.SERIAL2
const SERIAL4 = lex.SERIAL4
const SERIAL8 = lex.SERIAL8
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"BYTEA",
	"BYTES",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXISTS",
	"EXECUTE",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INT2VECTOR",
	"INT2",
	"INT4",
	"INT8",
	"INT64",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIAL",
	"SERIAL2",
	"SERIAL4",
	"SERIAL8",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:10274

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 26,
	-2, 1108,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 71,
	188, 935,
	205, 935,
	220, 249,
	307, 249,
	316, 752,
	343, 249,
	352, 752,
	391, 752,
	415, 249,
	440, 752,
	-2, 0,
	-1, 76,
	220, 253,
	-2, 0,
	-1, 77,
	115, 1108,
	194, 1108,
	425, 1108,
	426, 1108,
	-2, 0,
	-1, 89,
	128, 1082,
	144, 1082,
	157, 1082,
	202, 1082,
	232, 1082,
	270, 1082,
	280, 1082,
	420, 1082,
	-2, 1053,
	-1, 121,
	134, 661,
	219, 661,
	310, 641,
	361, 641,
	408, 661,
	-2, 0,
	-1, 122,
	4, 1110,
	21, 1110,
	22, 1110,
	23, 1110,
	24, 1110,
	25, 1110,
	27, 1110,
	33, 1110,
	38, 1110,
	39, 1110,
	40, 1110,
	41, 1110,
	42, 1110,
	43, 1110,
	44, 1110,
	45, 1110,
	46, 1110,
	47, 1110,
	48, 1110,
	49, 1110,
	50, 1110,
	52, 1110,
	53, 1110,
	54, 1110,
	55, 1110,
	56, 1110,
	57, 1110,
	58, 1110,
	61, 1110,
	62, 1110,
	63, 1110,
	64, 1110,
	66, 1110,
	67, 1110,
	68, 1110,
	72, 1110,
	73, 1110,
	74, 1110,
	75, 1110,
	76, 1110,
	77, 1110,
	80, 1110,
	81, 1110,
	82, 1110,
	83, 1110,
	85, 1110,
	87, 1110,
	88, 1110,
	89, 1110,
	91, 1110,
	93, 1110,
	94, 1110,
	102, 1110,
	103, 1110,
	104, 1110,
	105, 1110,
	106, 1110,
	107, 1110,
	108, 1110,
	109, 1110,
	111, 1110,
	112, 1110,
	114, 1110,
	115, 1110,
	117, 1110,
	120, 1110,
	121, 1110,
	122, 1110,
	124, 1110,
	126, 1110,
	127, 1110,
	129, 1110,
	130, 1110,
	131, 1110,
	132, 1110,
	133, 1110,
	134, 1110,
	135, 1110,
	136, 1110,
	137, 1110,
	138, 1110,
	139, 1110,
	140, 1110,
	141, 1110,
	143, 1110,
	149, 1110,
	150, 1110,
	151, 1110,
	152, 1110,
	153, 1110,
	154, 1110,
	156, 1110,
	158, 1110,
	162, 1110,
	163, 1110,
	165, 1110,
	166, 1110,
	168, 1110,
	169, 1110,
	171, 1110,
	172, 1110,
	173, 1110,
	174, 1110,
	175, 1110,
	176, 1110,
	177, 1110,
	178, 1110,
	180, 1110,
	181, 1110,
	183, 1110,
	184, 1110,
	185, 1110,
	188, 1110,
	189, 1110,
	190, 1110,
	191, 1110,
	194, 1110,
	195, 1110,
	196, 1110,
	197, 1110,
	198, 1110,
	199, 1110,
	200, 1110,
	201, 1110,
	203, 1110,
	205, 1110,
	207, 1110,
	209, 1110,
	210, 1110,
	211, 1110,
	213, 1110,
	214, 1110,
	217, 1110,
	218, 1110,
	219, 1110,
	220, 1110,
	221, 1110,
	223, 1110,
	224, 1110,
	226, 1110,
	227, 1110,
	229, 1110,
	230, 1110,
	233, 1110,
	234, 1110,
	237, 1110,
	238, 1110,
	239, 1110,
	240, 1110,
	242, 1110,
	243, 1110,
	244, 1110,
	245, 1110,
	246, 1110,
	247, 1110,
	248, 1110,
	249, 1110,
	250, 1110,
	251, 1110,
	253, 1110,
	254, 1110,
	255, 1110,
	256, 1110,
	257, 1110,
	259, 1110,
	261, 1110,
	263, 1110,
	265, 1110,
	266, 1110,
	267, 1110,
	268, 1110,
	269, 1110,
	271, 1110,
	272, 1110,
	273, 1110,
	275, 1110,
	276, 1110,
	277, 1110,
	278, 1110,
	281, 1110,
	282, 1110,
	283, 1110,
	285, 1110,
	287, 1110,
	288, 1110,
	289, 1110,
	290, 1110,
	291, 1110,
	292, 1110,
	293, 1110,
	294, 1110,
	295, 1110,
	296, 1110,
	298, 1110,
	299, 1110,
	300, 1110,
	301, 1110,
	302, 1110,
	303, 1110,
	304, 1110,
	306, 1110,
	308, 1110,
	309, 1110,
	310, 1110,
	311, 1110,
	312, 1110,
	313, 1110,
	314, 1110,
	315, 1110,
	316, 1110,
	317, 1110,
	319, 1110,
	320, 1110,
	321, 1110,
	322, 1110,
	323, 1110,
	325, 1110,
	326, 1110,
	327, 1110,
	328, 1110,
	329, 1110,
	330, 1110,
	331, 1110,
	332, 1110,
	334, 1110,
	336, 1110,
	337, 1110,
	338, 1110,
	339, 1110,
	340, 1110,
	341, 1110,
	343, 1110,
	344, 1110,
	345, 1110,
	346, 1110,
	347, 1110,
	348, 1110,
	349, 1110,
	350, 1110,
	352, 1110,
	353, 1110,
	354, 1110,
	355, 1110,
	356, 1110,
	357, 1110,
	358, 1110,
	359, 1110,
	360, 1110,
	361, 1110,
	363, 1110,
	364, 1110,
	365, 1110,
	366, 1110,
	367, 1110,
	369, 1110,
	370, 1110,
	371, 1110,
	372, 1110,
	373, 1110,
	375, 1110,
	376, 1110,
	377, 1110,
	378, 1110,
	379, 1110,
	380, 1110,
	381, 1110,
	382, 1110,
	383, 1110,
	384, 1110,
	385, 1110,
	386, 1110,
	388, 1110,
	389, 1110,
	390, 1110,
	392, 1110,
	393, 1110,
	394, 1110,
	395, 1110,
	396, 1110,
	397, 1110,
	398, 1110,
	400, 1110,
	401, 1110,
	402, 1110,
	403, 1110,
	404, 1110,
	406, 1110,
	408, 1110,
	409, 1110,
	410, 1110,
	411, 1110,
	412, 1110,
	414, 1110,
	415, 1110,
	416, 1110,
	418, 1110,
	419, 1110,
	422, 1110,
	423, 1110,
	424, 1110,
	425, 1110,
	426, 1110,
	427, 1110,
	428, 1110,
	430, 1110,
	432, 1110,
	433, 1110,
	434, 1110,
	435, 1110,
	436, 1110,
	437, 1110,
	438, 1110,
	440, 1110,
	441, 1110,
	442, 1110,
	447, 1110,
	448, 1110,
	449, 1110,
	450, 1110,
	451, 1110,
	452, 1110,
	-2, 0,
	-1, 123,
	1, 987,
	209, 987,
	306, 987,
	314, 987,
	455, 987,
	478, 987,
	-2, 0,
	-1, 125,
	1, 987,
	478, 987,
	-2, 0,
	-1, 126,
	1, 987,
	478, 987,
	-2, 0,
	-1, 127,
	1, 987,
	405, 987,
	478, 987,
	-2, 0,
	-1, 152,
	128, 1081,
	144, 1081,
	157, 1081,
	202, 1081,
	232, 1081,
	270, 1081,
	280, 1081,
	420, 1081,
	-2, 1056,
	-1, 185,
	4, 1117,
	5, 1117,
	6, 1117,
	7, 1117,
	8, 1117,
	9, 1117,
	10, 1117,
	21, 1117,
	22, 1117,
	23, 1117,
	24, 1117,
	25, 1117,
	27, 1117,
	33, 1117,
	34, 1117,
	38, 1117,
	39, 1117,
	40, 1117,
	41, 1117,
	42, 1117,
	43, 1117,
	44, 1117,
	45, 1117,
	46, 1117,
	47, 1117,
	48, 1117,
	49, 1117,
	50, 1117,
	52, 1117,
	53, 1117,
	54, 1117,
	55, 1117,
	56, 1117,
	57, 1117,
	58, 1117,
	59, 1117,
	60, 1117,
	61, 1117,
	62, 1117,
	63, 1117,
	64, 1117,
	66, 1117,
	67, 1117,
	68, 1117,
	70, 1117,
	72, 1117,
	73, 1117,
	74, 1117,
	75, 1117,
	76, 1117,
	77, 1117,
	80, 1117,
	81, 1117,
	82, 1117,
	83, 1117,
	85, 1117,
	87, 1117,
	88, 1117,
	89, 1117,
	91, 1117,
	92, 1117,
	93, 1117,
	94, 1117,
	95, 1117,
	96, 1117,
	97, 1117,
	98, 1117,
	99, 1117,
	100, 1117,
	101, 1117,
	102, 1117,
	103, 1117,
	104, 1117,
	105, 1117,
	106, 1117,
	107, 1117,
	108, 1117,
	109, 1117,
	110, 1117,
	111, 1117,
	112, 1117,
	114, 1117,
	115, 1117,
	117, 1117,
	120, 1117,
	121, 1117,
	122, 1117,
	124, 1117,
	126, 1117,
	127, 1117,
	129, 1117,
	130, 1117,
	131, 1117,
	132, 1117,
	133, 1117,
	134, 1117,
	135, 1117,
	136, 1117,
	137, 1117,
	138, 1117,
	139, 1117,
	140, 1117,
	141, 1117,
	142, 1117,
	143, 1117,
	149, 1117,
	150, 1117,
	151, 1117,
	152, 1117,
	153, 1117,
	154, 1117,
	156, 1117,
	158, 1117,
	161, 1117,
	162, 1117,
	163, 1117,
	165, 1117,
	166, 1117,
	168, 1117,
	169, 1117,
	171, 1117,
	172, 1117,
	173, 1117,
	174, 1117,
	175, 1117,
	176, 1117,
	177, 1117,
	178, 1117,
	179, 1117,
	180, 1117,
	181, 1117,
	183, 1117,
	184, 1117,
	185, 1117,
	188, 1117,
	189, 1117,
	190, 1117,
	191, 1117,
	193, 1117,
	194, 1117,
	195, 1117,
	196, 1117,
	197, 1117,
	198, 1117,
	199, 1117,
	200, 1117,
	201, 1117,
	203, 1117,
	205, 1117,
	206, 1117,
	207, 1117,
	208, 1117,
	209, 1117,
	210, 1117,
	211, 1117,
	212, 1117,
	213, 1117,
	214, 1117,
	217, 1117,
	218, 1117,
	219, 1117,
	220, 1117,
	221, 1117,
	223, 1117,
	224, 1117,
	226, 1117,
	227, 1117,
	228, 1117,
	229, 1117,
	230, 1117,
	231, 1117,
	233, 1117,
	234, 1117,
	235, 1117,
	236, 1117,
	237, 1117,
	238, 1117,
	239, 1117,
	240, 1117,
	242, 1117,
	243, 1117,
	244, 1117,
	245, 1117,
	246, 1117,
	247, 1117,
	248, 1117,
	249, 1117,
	250, 1117,
	251, 1117,
	252, 1117,
	253, 1117,
	254, 1117,
	255, 1117,
	256, 1117,
	257, 1117,
	258, 1117,
	259, 1117,
	260, 1117,
	261, 1117,
	262, 1117,
	263, 1117,
	264, 1117,
	265, 1117,
	266, 1117,
	267, 1117,
	268, 1117,
	269, 1117,
	271, 1117,
	272, 1117,
	273, 1117,
	276, 1117,
	277, 1117,
	278, 1117,
	281, 1117,
	282, 1117,
	283, 1117,
	284, 1117,
	285, 1117,
	286, 1117,
	287, 1117,
	288, 1117,
	289, 1117,
	290, 1117,
	291, 1117,
	292, 1117,
	293, 1117,
	294, 1117,
	295, 1117,
	296, 1117,
	298, 1117,
	299, 1117,
	300, 1117,
	301, 1117,
	302, 1117,
	303, 1117,
	304, 1117,
	306, 1117,
	308, 1117,
	309, 1117,
	310, 1117,
	311, 1117,
	312, 1117,
	313, 1117,
	314, 1117,
	315, 1117,
	316, 1117,
	317, 1117,
	319, 1117,
	320, 1117,
	321, 1117,
	322, 1117,
	323, 1117,
	325, 1117,
	326, 1117,
	327, 1117,
	328, 1117,
	329, 1117,
	330, 1117,
	331, 1117,
	332, 1117,
	334, 1117,
	335, 1117,
	336, 1117,
	337, 1117,
	338, 1117,
	339, 1117,
	340, 1117,
	341, 1117,
	343, 1117,
	344, 1117,
	345, 1117,
	346, 1117,
	347, 1117,
	348, 1117,
	349, 1117,
	350, 1117,
	352, 1117,
	353, 1117,
	354, 1117,
	355, 1117,
	356, 1117,
	357, 1117,
	358, 1117,
	359, 1117,
	360, 1117,
	361, 1117,
	362, 1117,
	363, 1117,
	364, 1117,
	365, 1117,
	366, 1117,
	367, 1117,
	368, 1117,
	369, 1117,
	370, 1117,
	371, 1117,
	372, 1117,
	373, 1117,
	375, 1117,
	376, 1117,
	377, 1117,
	378, 1117,
	379, 1117,
	380, 1117,
	381, 1117,
	382, 1117,
	383, 1117,
	384, 1117,
	385, 1117,
	386, 1117,
	388, 1117,
	389, 1117,
	390, 1117,
	392, 1117,
	393, 1117,
	394, 1117,
	395, 1117,
	396, 1117,
	397, 1117,
	398, 1117,
	400, 1117,
	401, 1117,
	402, 1117,
	403, 1117,
	404, 1117,
	406, 1117,
	408, 1117,
	409, 1117,
	410, 1117,
	411, 1117,
	412, 1117,
	413, 1117,
	414, 1117,
	415, 1117,
	416, 1117,
	418, 1117,
	419, 1117,
	421, 1117,
	422, 1117,
	423, 1117,
	424, 1117,
	425, 1117,
	426, 1117,
	427, 1117,
	428, 1117,
	429, 1117,
	430, 1117,
	432, 1117,
	433, 1117,
	434, 1117,
	435, 1117,
	436, 1117,
	437, 1117,
	438, 1117,
	440, 1117,
	441, 1117,
	442, 1117,
	447, 1117,
	448, 1117,
	449, 1117,
	450, 1117,
	451, 1117,
	452, 1117,
	453, 1117,
	459, 1117,
	466, 1117,
	467, 1117,
	468, 1117,
	475, 1117,
	479, 1117,
	-2, 0,
	-1, 574,
	160, 1822,
	405, 1822,
	458, 1822,
	477, 1822,
	-2, 0,
	-1, 575,
	160, 1903,
	405, 1903,
	458, 1903,
	477, 1903,
	-2, 0,
	-1, 576,
	160, 1811,
	405, 1811,
	458, 1811,
	477, 1811,
	-2, 0,
	-1, 578,
	160, 2000,
	405, 2000,
	458, 2000,
	477, 2000,
	-2, 0,
	-1, 580,
	160, 2030,
	405, 2030,
	458, 2030,
	477, 2030,
	-2, 0,
	-1, 587,
	160, 1915,
	405, 1915,
	458, 1915,
	477, 1915,
	-2, 503,
	-1, 611,
	477, 1766,
	480, 1766,
	-2, 714,
	-1, 612,
	477, 1768,
	480, 1768,
	-2, 715,
	-1, 613,
	477, 1767,
	480, 1767,
	-2, 716,
	-1, 614,
	480, 1703,
	-2, 717,
	-1, 656,
	440, 915,
	-2, 753,
	-1, 695,
	4, 933,
	21, 933,
	22, 933,
	23, 933,
	24, 933,
	25, 933,
	27, 933,
	33, 933,
	38, 933,
	39, 933,
	40, 933,
	41, 933,
	42, 933,
	43, 933,
	44, 933,
	45, 933,
	46, 933,
	47, 933,
	48, 933,
	49, 933,
	50, 933,
	52, 933,
	53, 933,
	54, 933,
	55, 933,
	56, 933,
	57, 933,
	58, 933,
	61, 933,
	62, 933,
	63, 933,
	64, 933,
	66, 933,
	67, 933,
	68, 933,
	72, 933,
	73, 933,
	74, 933,
	75, 933,
	76, 933,
	77, 933,
	80, 933,
	81, 933,
	82, 933,
	83, 933,
	85, 933,
	87, 933,
	88, 933,
	89, 933,
	91, 933,
	93, 933,
	94, 933,
	102, 933,
	103, 933,
	104, 933,
	105, 933,
	106, 933,
	107, 933,
	108, 933,
	109, 933,
	111, 933,
	112, 933,
	114, 933,
	115, 933,
	117, 933,
	120, 933,
	121, 933,
	122, 933,
	124, 933,
	126, 933,
	127, 933,
	129, 933,
	130, 933,
	131, 933,
	132, 933,
	133, 933,
	134, 933,
	135, 933,
	136, 933,
	137, 933,
	138, 933,
	139, 933,
	140, 933,
	141, 933,
	143, 933,
	149, 933,
	150, 933,
	151, 933,
	152, 933,
	153, 933,
	154, 933,
	156, 933,
	158, 933,
	162, 933,
	163, 933,
	165, 933,
	166, 933,
	168, 933,
	169, 933,
	171, 933,
	172, 933,
	173, 933,
	174, 933,
	175, 933,
	176, 933,
	177, 933,
	178, 933,
	180, 933,
	181, 933,
	183, 933,
	184, 933,
	185, 933,
	188, 933,
	189, 933,
	190, 933,
	191, 933,
	194, 933,
	195, 933,
	196, 933,
	197, 933,
	198, 933,
	199, 933,
	200, 933,
	201, 933,
	203, 933,
	205, 933,
	207, 933,
	209, 933,
	210, 933,
	211, 933,
	213, 933,
	214, 933,
	217, 933,
	218, 933,
	219, 933,
	220, 933,
	221, 933,
	223, 933,
	224, 933,
	226, 933,
	227, 933,
	229, 933,
	230, 933,
	233, 933,
	234, 933,
	237, 933,
	238, 933,
	239, 933,
	240, 933,
	242, 933,
	243, 933,
	244, 933,
	245, 933,
	246, 933,
	247, 933,
	248, 933,
	249, 933,
	250, 933,
	251, 933,
	253, 933,
	254, 933,
	255, 933,
	256, 933,
	257, 933,
	259, 933,
	261, 933,
	263, 933,
	265, 933,
	266, 933,
	267, 933,
	268, 933,
	269, 933,
	271, 933,
	272, 933,
	273, 933,
	276, 933,
	277, 933,
	278, 933,
	281, 933,
	282, 933,
	283, 933,
	285, 933,
	287, 933,
	288, 933,
	289, 933,
	290, 933,
	291, 933,
	292, 933,
	293, 933,
	294, 933,
	295, 933,
	296, 933,
	298, 933,
	299, 933,
	300, 933,
	301, 933,
	302, 933,
	303, 933,
	304, 933,
	306, 933,
	308, 933,
	309, 933,
	310, 933,
	311, 933,
	312, 933,
	313, 933,
	314, 933,
	315, 933,
	316, 933,
	317, 933,
	319, 933,
	320, 933,
	321, 933,
	322, 933,
	323, 933,
	325, 933,
	326, 933,
	327, 933,
	328, 933,
	329, 933,
	330, 933,
	331, 933,
	332, 933,
	334, 933,
	336, 933,
	337, 933,
	338, 933,
	339, 933,
	340, 933,
	341, 933,
	343, 933,
	344, 933,
	345, 933,
	346, 933,
	347, 933,
	348, 933,
	349, 933,
	350, 933,
	352, 933,
	353, 933,
	354, 933,
	355, 933,
	356, 933,
	357, 933,
	358, 933,
	359, 933,
	360, 933,
	361, 933,
	363, 933,
	364, 933,
	365, 933,
	366, 933,
	367, 933,
	369, 933,
	370, 933,
	371, 933,
	372, 933,
	373, 933,
	375, 933,
	376, 933,
	377, 933,
	378, 933,
	379, 933,
	380, 933,
	381, 933,
	382, 933,
	383, 933,
	384, 933,
	385, 933,
	386, 933,
	388, 933,
	389, 933,
	390, 933,
	392, 933,
	393, 933,
	394, 933,
	395, 933,
	396, 933,
	397, 933,
	398, 933,
	400, 933,
	401, 933,
	402, 933,
	403, 933,
	404, 933,
	406, 933,
	408, 933,
	409, 933,
	410, 933,
	411, 933,
	412, 933,
	414, 933,
	415, 933,
	416, 933,
	418, 933,
	419, 933,
	422, 933,
	423, 933,
	424, 933,
	425, 933,
	426, 933,
	427, 933,
	428, 933,
	430, 933,
	432, 933,
	433, 933,
	434, 933,
	435, 933,
	436, 933,
	437, 933,
	438, 933,
	440, 933,
	441, 933,
	442, 933,
	447, 933,
	448, 933,
	449, 933,
	450, 933,
	451, 933,
	452, 933,
	-2, 0,
	-1, 759,
	310, 642,
	361, 642,
	-2, 0,
	-1, 760,
	310, 641,
	361, 641,
	-2, 589,
	-1, 764,
	1, 671,
	474, 671,
	476, 671,
	478, 671,
	-2, 0,
	-1, 765,
	1, 713,
	157, 713,
	474, 713,
	476, 713,
	478, 713,
	-2, 0,
	-1, 773,
	1, 645,
	474, 645,
	476, 645,
	478, 645,
	-2, 0,
	-1, 776,
	1, 671,
	474, 671,
	476, 671,
	478, 671,
	-2, 0,
	-1, 777,
	1, 673,
	474, 673,
	476, 673,
	478, 673,
	-2, 0,
	-1, 778,
	1, 676,
	474, 676,
	476, 676,
	478, 676,
	-2, 0,
	-1, 783,
	1, 692,
	474, 692,
	476, 692,
	478, 692,
	-2, 0,
	-1, 784,
	1, 694,
	474, 694,
	476, 694,
	478, 694,
	-2, 0,
	-1, 827,
	144, 1119,
	157, 1119,
	232, 1119,
	270, 1119,
	-2, 1060,
	-1, 840,
	144, 1118,
	157, 1118,
	232, 1118,
	270, 1118,
	-2, 1057,
	-1, 864,
	477, 1765,
	-2, 511,
	-1, 892,
	475, 1757,
	-2, 1748,
	-1, 898,
	5, 1259,
	-2, 1799,
	-1, 899,
	5, 1260,
	-2, 1805,
	-1, 900,
	5, 1261,
	-2, 1804,
	-1, 901,
	5, 1262,
	-2, 2027,
	-1, 902,
	5, 1263,
	-2, 1917,
	-1, 903,
	5, 1264,
	-2, 1992,
	-1, 904,
	5, 1265,
	-2, 1994,
	-1, 905,
	5, 1266,
	-2, 2007,
	-1, 906,
	5, 1267,
	-2, 1995,
	-1, 907,
	5, 1268,
	-2, 1996,
	-1, 908,
	5, 1269,
	-2, 1798,
	-1, 909,
	5, 1270,
	-2, 2044,
	-1, 910,
	5, 1271,
	-2, 1877,
	-1, 911,
	5, 1272,
	-2, 1929,
	-1, 912,
	5, 1273,
	-2, 1931,
	-1, 913,
	5, 1274,
	-2, 1881,
	-1, 914,
	5, 1275,
	475, 1775,
	-2, 1766,
	-1, 920,
	475, 1776,
	-2, 1767,
	-1, 922,
	5, 1279,
	-2, 2077,
	-1, 923,
	5, 1280,
	-2, 2078,
	-1, 924,
	5, 1281,
	-2, 1880,
	-1, 925,
	5, 1282,
	-2, 2090,
	-1, 926,
	5, 1283,
	-2, 1882,
	-1, 927,
	5, 1284,
	-2, 1883,
	-1, 928,
	5, 1285,
	-2, 1884,
	-1, 929,
	5, 1286,
	-2, 2059,
	-1, 930,
	5, 1287,
	-2, 2088,
	-1, 931,
	5, 1288,
	-2, 1860,
	-1, 932,
	5, 1289,
	-2, 1861,
	-1, 933,
	5, 1303,
	-2, 2071,
	-1, 935,
	5, 1278,
	-2, 2067,
	-1, 936,
	5, 1278,
	-2, 2066,
	-1, 937,
	5, 1278,
	-2, 2083,
	-1, 938,
	5, 1295,
	-2, 2061,
	-1, 939,
	5, 1296,
	-2, 1800,
	-1, 940,
	5, 1306,
	-2, 2060,
	-1, 941,
	5, 1308,
	-2, 2099,
	-1, 943,
	5, 1319,
	-2, 1833,
	-1, 944,
	5, 1330,
	-2, 2092,
	-1, 945,
	5, 1322,
	-2, 2093,
	-1, 946,
	5, 1330,
	-2, 2094,
	-1, 947,
	5, 1326,
	-2, 2095,
	-1, 948,
	5, 1247,
	-2, 1890,
	-1, 949,
	5, 1248,
	-2, 1891,
	-1, 950,
	477, 1763,
	-2, 1747,
	-1, 951,
	475, 2120,
	-2, 1764,
	-1, 973,
	5, 1314,
	-2, 2018,
	-1, 991,
	5, 1313,
	-2, 2100,
	-1, 1001,
	5, 1315,
	441, 1315,
	-2, 2062,
	-1, 1002,
	5, 1316,
	441, 1316,
	-2, 2063,
	-1, 1039,
	475, 1775,
	-2, 1766,
	-1, 1067,
	160, 2030,
	405, 2030,
	458, 2030,
	477, 2030,
	-2, 0,
	-1, 1070,
	1, 489,
	478, 489,
	-2, 995,
	-1, 1191,
	325, 1743,
	468, 1743,
	-2, 1741,
	-1, 1203,
	479, 1743,
	-2, 1744,
	-1, 1204,
	1, 912,
	474, 912,
	476, 912,
	478, 912,
	-2, 1106,
	-1, 1252,
	316, 752,
	440, 752,
	-2, 248,
	-1, 1275,
	1, 912,
	474, 912,
	476, 912,
	478, 912,
	-2, 1106,
	-1, 1281,
	4, 933,
	21, 933,
	22, 933,
	23, 933,
	24, 933,
	25, 933,
	27, 933,
	33, 933,
	38, 933,
	39, 933,
	40, 933,
	41, 933,
	42, 933,
	43, 933,
	44, 933,
	45, 933,
	46, 933,
	47, 933,
	48, 933,
	49, 933,
	50, 933,
	52, 933,
	53, 933,
	54, 933,
	55, 933,
	56, 933,
	57, 933,
	58, 933,
	61, 933,
	62, 933,
	63, 933,
	64, 933,
	66, 933,
	67, 933,
	68, 933,
	72, 933,
	73, 933,
	74, 933,
	75, 933,
	76, 933,
	77, 933,
	80, 933,
	81, 933,
	82, 933,
	83, 933,
	85, 933,
	87, 933,
	88, 933,
	89, 933,
	91, 933,
	93, 933,
	94, 933,
	102, 933,
	103, 933,
	104, 933,
	105, 933,
	106, 933,
	107, 933,
	108, 933,
	109, 933,
	111, 933,
	112, 933,
	114, 933,
	115, 933,
	117, 933,
	120, 933,
	121, 933,
	122, 933,
	124, 933,
	126, 933,
	127, 933,
	129, 933,
	130, 933,
	131, 933,
	132, 933,
	133, 933,
	134, 933,
	135, 933,
	136, 933,
	137, 933,
	138, 933,
	139, 933,
	140, 933,
	141, 933,
	149, 933,
	150, 933,
	151, 933,
	152, 933,
	153, 933,
	154, 933,
	156, 933,
	158, 933,
	162, 933,
	163, 933,
	165, 933,
	166, 933,
	168, 933,
	169, 933,
	171, 933,
	172, 933,
	173, 933,
	174, 933,
	175, 933,
	176, 933,
	177, 933,
	178, 933,
	180, 933,
	181, 933,
	183, 933,
	184, 933,
	185, 933,
	189, 933,
	190, 933,
	191, 933,
	194, 933,
	195, 933,
	196, 933,
	197, 933,
	198, 933,
	199, 933,
	200, 933,
	201, 933,
	203, 933,
	205, 933,
	207, 933,
	209, 933,
	210, 933,
	211, 933,
	213, 933,
	214, 933,
	217, 933,
	218, 933,
	219, 933,
	220, 933,
	221, 933,
	223, 933,
	224, 933,
	226, 933,
	227, 933,
	229, 933,
	230, 933,
	233, 933,
	234, 933,
	237, 933,
	238, 933,
	239, 933,
	240, 933,
	242, 933,
	243, 933,
	244, 933,
	245, 933,
	246, 933,
	247, 933,
	248, 933,
	249, 933,
	250, 933,
	251, 933,
	253, 933,
	254, 933,
	255, 933,
	256, 933,
	257, 933,
	259, 933,
	263, 933,
	265, 933,
	266, 933,
	267, 933,
	268, 933,
	269, 933,
	271, 933,
	272, 933,
	273, 933,
	274, 933,
	276, 933,
	277, 933,
	278, 933,
	281, 933,
	282, 933,
	283, 933,
	285, 933,
	287, 933,
	288, 933,
	289, 933,
	290, 933,
	291, 933,
	292, 933,
	293, 933,
	294, 933,
	295, 933,
	296, 933,
	298, 933,
	299, 933,
	300, 933,
	301, 933,
	302, 933,
	303, 933,
	304, 933,
	306, 933,
	308, 933,
	309, 933,
	310, 933,
	311, 933,
	312, 933,
	313, 933,
	314, 933,
	315, 933,
	316, 933,
	317, 933,
	319, 933,
	320, 933,
	321, 933,
	322, 933,
	323, 933,
	325, 933,
	326, 933,
	327, 933,
	328, 933,
	329, 933,
	330, 933,
	331, 933,
	332, 933,
	334, 933,
	336, 933,
	337, 933,
	338, 933,
	339, 933,
	340, 933,
	341, 933,
	343, 933,
	344, 933,
	345, 933,
	346, 933,
	347, 933,
	348, 933,
	349, 933,
	350, 933,
	352, 933,
	353, 933,
	354, 933,
	355, 933,
	356, 933,
	357, 933,
	358, 933,
	359, 933,
	360, 933,
	361, 933,
	363, 933,
	364, 933,
	365, 933,
	366, 933,
	367, 933,
	369, 933,
	370, 933,
	371, 933,
	372, 933,
	373, 933,
	375, 933,
	376, 933,
	377, 933,
	378, 933,
	379, 933,
	380, 933,
	381, 933,
	382, 933,
	383, 933,
	384, 933,
	385, 933,
	386, 933,
	388, 933,
	389, 933,
	390, 933,
	392, 933,
	393, 933,
	394, 933,
	395, 933,
	396, 933,
	397, 933,
	398, 933,
	400, 933,
	401, 933,
	402, 933,
	403, 933,
	404, 933,
	406, 933,
	408, 933,
	409, 933,
	410, 933,
	411, 933,
	412, 933,
	414, 933,
	415, 933,
	416, 933,
	418, 933,
	419, 933,
	422, 933,
	423, 933,
	424, 933,
	425, 933,
	426, 933,
	427, 933,
	428, 933,
	430, 933,
	432, 933,
	433, 933,
	434, 933,
	435, 933,
	436, 933,
	437, 933,
	438, 933,
	440, 933,
	441, 933,
	442, 933,
	447, 933,
	448, 933,
	449, 933,
	450, 933,
	451, 933,
	452, 933,
	-2, 0,
	-1, 1343,
	1, 364,
	474, 364,
	476, 364,
	478, 364,
	-2, 1080,
	-1, 1346,
	4, 2098,
	11, 2098,
	12, 2098,
	14, 2098,
	15, 2098,
	16, 2098,
	17, 2098,
	18, 2098,
	19, 2098,
	21, 2098,
	22, 2098,
	23, 2098,
	24, 2098,
	25, 2098,
	27, 2098,
	30, 2098,
	31, 2098,
	33, 2098,
	35, 2098,
	38, 2098,
	39, 2098,
	40, 2098,
	41, 2098,
	42, 2098,
	43, 2098,
	44, 2098,
	45, 2098,
	46, 2098,
	47, 2098,
	48, 2098,
	49, 2098,
	50, 2098,
	52, 2098,
	53, 2098,
	54, 2098,
	55, 2098,
	56, 2098,
	57, 2098,
	58, 2098,
	61, 2098,
	62, 2098,
	63, 2098,
	64, 2098,
	66, 2098,
	67, 2098,
	68, 2098,
	69, 2098,
	72, 2098,
	73, 2098,
	74, 2098,
	75, 2098,
	76, 2098,
	77, 2098,
	78, 2098,
	80, 2098,
	81, 2098,
	82, 2098,
	83, 2098,
	85, 2098,
	86, 2098,
	87, 2098,
	88, 2098,
	89, 2098,
	91, 2098,
	92, 2098,
	93, 2098,
	94, 2098,
	102, 2098,
	103, 2098,
	104, 2098,
	105, 2098,
	106, 2098,
	107, 2098,
	108, 2098,
	109, 2098,
	111, 2098,
	112, 2098,
	114, 2098,
	115, 2098,
	117, 2098,
	120, 2098,
	121, 2098,
	122, 2098,
	124, 2098,
	126, 2098,
	127, 2098,
	129, 2098,
	130, 2098,
	131, 2098,
	132, 2098,
	133, 2098,
	134, 2098,
	135, 2098,
	136, 2098,
	137, 2098,
	138, 2098,
	139, 2098,
	140, 2098,
	141, 2098,
	145, 2098,
	146, 2098,
	147, 2098,
	148, 2098,
	149, 2098,
	150, 2098,
	151, 2098,
	152, 2098,
	153, 2098,
	154, 2098,
	155, 2098,
	156, 2098,
	158, 2098,
	161, 2098,
	162, 2098,
	163, 2098,
	165, 2098,
	166, 2098,
	168, 2098,
	169, 2098,
	171, 2098,
	172, 2098,
	173, 2098,
	174, 2098,
	175, 2098,
	176, 2098,
	177, 2098,
	178, 2098,
	179, 2098,
	180, 2098,
	181, 2098,
	182, 2098,
	183, 2098,
	184, 2098,
	185, 2098,
	186, 2098,
	187, 2098,
	189, 2098,
	190, 2098,
	191, 2098,
	193, 2098,
	194, 2098,
	195, 2098,
	196, 2098,
	197, 2098,
	198, 2098,
	199, 2098,
	200, 2098,
	201, 2098,
	203, 2098,
	205, 2098,
	206, 2098,
	207, 2098,
	208, 2098,
	209, 2098,
	210, 2098,
	211, 2098,
	212, 2098,
	213, 2098,
	214, 2098,
	215, 2098,
	216, 2098,
	217, 2098,
	218, 2098,
	219, 2098,
	220, 2098,
	221, 2098,
	223, 2098,
	224, 2098,
	226, 2098,
	227, 2098,
	228, 2098,
	229, 2098,
	230, 2098,
	231, 2098,
	233, 2098,
	234, 2098,
	237, 2098,
	238, 2098,
	239, 2098,
	240, 2098,
	241, 2098,
	242, 2098,
	243, 2098,
	244, 2098,
	245, 2098,
	246, 2098,
	247, 2098,
	248, 2098,
	249, 2098,
	250, 2098,
	251, 2098,
	252, 2098,
	253, 2098,
	254, 2098,
	255, 2098,
	256, 2098,
	257, 2098,
	259, 2098,
	262, 2098,
	263, 2098,
	265, 2098,
	266, 2098,
	267, 2098,
	268, 2098,
	269, 2098,
	271, 2098,
	272, 2098,
	273, 2098,
	276, 2098,
	277, 2098,
	278, 2098,
	279, 2098,
	281, 2098,
	282, 2098,
	283, 2098,
	285, 2098,
	287, 2098,
	288, 2098,
	289, 2098,
	290, 2098,
	291, 2098,
	292, 2098,
	293, 2098,
	294, 2098,
	295, 2098,
	296, 2098,
	298, 2098,
	299, 2098,
	300, 2098,
	301, 2098,
	302, 2098,
	303, 2098,
	304, 2098,
	306, 2098,
	308, 2098,
	309, 2098,
	310, 2098,
	311, 2098,
	312, 2098,
	313, 2098,
	314, 2098,
	315, 2098,
	316, 2098,
	317, 2098,
	319, 2098,
	320, 2098,
	321, 2098,
	322, 2098,
	323, 2098,
	324, 2098,
	325, 2098,
	326, 2098,
	327, 2098,
	328, 2098,
	329, 2098,
	330, 2098,
	331, 2098,
	332, 2098,
	334, 2098,
	335, 2098,
	336, 2098,
	337, 2098,
	338, 2098,
	339, 2098,
	340, 2098,
	341, 2098,
	342, 2098,
	343, 2098,
	344, 2098,
	345, 2098,
	346, 2098,
	347, 2098,
	348, 2098,
	349, 2098,
	350, 2098,
	352, 2098,
	353, 2098,
	354, 2098,
	355, 2098,
	356, 2098,
	357, 2098,
	358, 2098,
	359, 2098,
	360, 2098,
	361, 2098,
	363, 2098,
	364, 2098,
	365, 2098,
	366, 2098,
	367, 2098,
	368, 2098,
	369, 2098,
	370, 2098,
	371, 2098,
	372, 2098,
	373, 2098,
	375, 2098,
	376, 2098,
	377, 2098,
	378, 2098,
	379, 2098,
	380, 2098,
	381, 2098,
	382, 2098,
	383, 2098,
	384, 2098,
	385, 2098,
	386, 2098,
	388, 2098,
	389, 2098,
	390, 2098,
	392, 2098,
	393, 2098,
	394, 2098,
	395, 2098,
	396, 2098,
	397, 2098,
	398, 2098,
	400, 2098,
	401, 2098,
	402, 2098,
	403, 2098,
	404, 2098,
	406, 2098,
	408, 2098,
	409, 2098,
	410, 2098,
	411, 2098,
	412, 2098,
	414, 2098,
	415, 2098,
	416, 2098,
	418, 2098,
	419, 2098,
	422, 2098,
	423, 2098,
	424, 2098,
	425, 2098,
	426, 2098,
	427, 2098,
	428, 2098,
	430, 2098,
	432, 2098,
	433, 2098,
	434, 2098,
	435, 2098,
	436, 2098,
	437, 2098,
	438, 2098,
	440, 2098,
	441, 2098,
	442, 2098,
	447, 2098,
	448, 2098,
	449, 2098,
	450, 2098,
	451, 2098,
	452, 2098,
	453, 2098,
	454, 2098,
	456, 2098,
	457, 2098,
	458, 2098,
	459, 2098,
	460, 2098,
	461, 2098,
	463, 2098,
	464, 2098,
	465, 2098,
	466, 2098,
	467, 2098,
	468, 2098,
	469, 2098,
	470, 2098,
	471, 2098,
	473, 2098,
	476, 2098,
	477, 2098,
	479, 2098,
	480, 2098,
	-2, 0,
	-1, 1351,
	160, 2000,
	405, 2000,
	458, 2000,
	477, 2000,
	-2, 0,
	-1, 1383,
	310, 642,
	361, 642,
	-2, 0,
	-1, 1407,
	1, 637,
	474, 637,
	476, 637,
	478, 637,
	-2, 0,
	-1, 1408,
	1, 662,
	474, 662,
	476, 662,
	478, 662,
	-2, 0,
	-1, 1409,
	1, 644,
	474, 644,
	476, 644,
	478, 644,
	-2, 0,
	-1, 1411,
	1, 648,
	474, 648,
	476, 648,
	478, 648,
	-2, 0,
	-1, 1438,
	1, 2051,
	474, 2051,
	476, 2051,
	477, 2051,
	478, 2051,
	-2, 690,
	-1, 1439,
	1, 1997,
	474, 1997,
	476, 1997,
	477, 1997,
	478, 1997,
	-2, 691,
	-1, 1454,
	1, 990,
	478, 990,
	-2, 995,
	-1, 1457,
	144, 1118,
	157, 1118,
	232, 1118,
	270, 1118,
	-2, 1061,
	-1, 1551,
	128, 1082,
	144, 1082,
	157, 1082,
	202, 1082,
	232, 1082,
	270, 1082,
	280, 1082,
	420, 1082,
	-2, 1489,
	-1, 1608,
	476, 1637,
	-2, 0,
	-1, 1642,
	128, 1082,
	144, 1082,
	157, 1082,
	202, 1082,
	232, 1082,
	270, 1082,
	280, 1082,
	420, 1082,
	-2, 1197,
	-1, 1701,
	475, 1318,
	-2, 1306,
	-1, 1745,
	1, 491,
	478, 491,
	-2, 995,
	-1, 1947,
	1, 639,
	474, 639,
	476, 639,
	478, 639,
	-2, 0,
	-1, 1948,
	1, 664,
	474, 664,
	476, 664,
	478, 664,
	-2, 0,
	-1, 2020,
	340, 1143,
	341, 1143,
	-2, 1351,
	-1, 2051,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1369,
	-1, 2052,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1370,
	-1, 2053,
	86, 0,
	215, 0,
	216, 0,
	460, 0,
	461, 0,
	-2, 1371,
	-1, 2054,
	86, 0,
	215, 0,
	216, 0,
	460, 0,
	461, 0,
	-2, 1372,
	-1, 2055,
	86, 0,
	215, 0,
	216, 0,
	460, 0,
	461, 0,
	-2, 1373,
	-1, 2056,
	86, 0,
	215, 0,
	216, 0,
	460, 0,
	461, 0,
	-2, 1374,
	-1, 2057,
	86, 0,
	215, 0,
	216, 0,
	460, 0,
	461, 0,
	-2, 1375,
	-1, 2058,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1376,
	-1, 2070,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1388,
	-1, 2071,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1389,
	-1, 2072,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1390,
	-1, 2075,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	231, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1395,
	-1, 2081,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	231, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1399,
	-1, 2083,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	231, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1407,
	-1, 2084,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	231, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1408,
	-1, 2085,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	231, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1409,
	-1, 2086,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	231, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1410,
	-1, 2188,
	5, 1275,
	160, 1648,
	475, 1775,
	-2, 1766,
	-1, 2189,
	160, 1649,
	-2, 2055,
	-1, 2190,
	160, 1650,
	-2, 1914,
	-1, 2191,
	160, 1651,
	-2, 1834,
	-1, 2192,
	160, 1652,
	-2, 1871,
	-1, 2193,
	160, 1653,
	-2, 1912,
	-1, 2194,
	160, 1654,
	-2, 1991,
	-1, 2195,
	160, 1655,
	-2, 1472,
	-1, 2264,
	1, 1198,
	2, 1198,
	92, 1198,
	128, 1198,
	144, 1198,
	157, 1198,
	161, 1198,
	167, 1198,
	170, 1198,
	193, 1198,
	202, 1198,
	212, 1198,
	228, 1198,
	232, 1198,
	252, 1198,
	270, 1198,
	274, 1198,
	280, 1198,
	333, 1198,
	335, 1198,
	420, 1198,
	431, 1198,
	444, 1198,
	445, 1198,
	446, 1198,
	455, 1198,
	474, 1198,
	476, 1198,
	478, 1198,
	480, 1198,
	-2, 1197,
	-1, 2277,
	475, 1749,
	-2, 1761,
	-1, 2297,
	475, 1317,
	-2, 1307,
	-1, 2398,
	1, 912,
	474, 912,
	476, 912,
	478, 912,
	-2, 1106,
	-1, 2552,
	275, 1146,
	-2, 2089,
	-1, 2553,
	275, 1147,
	-2, 1980,
	-1, 2557,
	340, 1714,
	341, 1714,
	-2, 1470,
	-1, 2558,
	340, 1718,
	341, 1718,
	-2, 1471,
	-1, 2559,
	340, 1715,
	341, 1715,
	-2, 1470,
	-1, 2560,
	340, 1719,
	341, 1719,
	-2, 1471,
	-1, 2573,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	231, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1397,
	-1, 2574,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	231, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1401,
	-1, 2580,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	231, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1403,
	-1, 2769,
	209, 995,
	306, 995,
	314, 995,
	455, 995,
	-2, 488,
	-1, 2867,
	1, 912,
	474, 912,
	476, 912,
	478, 912,
	-2, 1106,
	-1, 2957,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	231, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1405,
	-1, 2964,
	206, 0,
	208, 0,
	262, 0,
	-2, 1424,
	-1, 3028,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1453,
	-1, 3029,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1454,
	-1, 3030,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1455,
	-1, 3034,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1459,
	-1, 3035,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1460,
	-1, 3036,
	14, 0,
	15, 0,
	16, 0,
	456, 0,
	457, 0,
	458, 0,
	-2, 1461,
	-1, 3080,
	475, 1750,
	-2, 1762,
	-1, 3171,
	477, 2203,
	-2, 1039,
	-1, 3222,
	206, 0,
	208, 0,
	262, 0,
	-2, 1425,
	-1, 3225,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	231, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1428,
	-1, 3226,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	231, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1430,
	-1, 3391,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	231, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1429,
	-1, 3392,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	179, 0,
	182, 0,
	231, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 1431,
	-1, 3402,
	206, 0,
	-2, 1462,
	-1, 3517,
	206, 0,
	-2, 1463,
	-1, 3651,
	43, 0,
	179, 0,
	231, 0,
	368, 0,
	453, 0,
	459, 0,
	-2, 2058,
}

const sqlPrivate = 57344

const sqlLast = 85373

var sqlAct = [...]int{

	920, 3434, 3460, 3431, 3553, 3650, 3327, 3661, 3750, 3784,
	3627, 3205, 2700, 3538, 3662, 2853, 3614, 3100, 3663, 3617,
	3704, 2452, 3598, 1223, 1040, 3467, 3420, 2996, 2701, 3521,
	3356, 850, 3351, 2038, 3649, 3163, 3380, 3476, 3340, 1207,
	2882, 217, 3284, 217, 217, 1676, 217, 217, 217, 217,
	217, 2098, 2877, 217, 865, 2875, 1466, 3361, 217, 2849,
	2329, 3144, 1338, 613, 2485, 2424, 585, 2949, 1837, 3101,
	2220, 3406, 1095, 2441, 2743, 2566, 2415, 2387, 1796, 217,
	1911, 2723, 841, 613, 3204, 2427, 2786, 2487, 2715, 2686,
	1032, 2478, 2495, 2484, 2706, 2476, 1188, 705, 3257, 1617,
	2704, 2438, 2453, 2331, 1391, 1833, 1832, 3051, 2685, 1579,
	1648, 2436, 2257, 2035, 4, 1805, 2601, 1559, 2111, 2550,
	3522, 2031, 1909, 1196, 2494, 1268, 1677, 2399, 2389, 2140,
	1083, 2142, 1828, 1821, 916, 1900, 1454, 2217, 88, 2425,
	2256, 2259, 1781, 1783, 2238, 1836, 1618, 2131, 2095, 2851,
	1771, 1322, 2019, 1359, 2749, 2002, 1209, 2000, 1273, 1344,
	1866, 2203, 2446, 1332, 2488, 2134, 3461, 1026, 1072, 1574,
	553, 1921, 614, 2246, 2228, 2112, 2184, 1627, 1005, 1542,
	217, 217, 1467, 211, 539, 849, 145, 2321, 561, 152,
	615, 210, 699, 1468, 2001, 209, 2003, 1193, 609, 569,
	1865, 1358, 579, 1022, 1342, 1886, 1296, 656, 1634, 681,
	942, 153, 1023, 1220, 1795, 2024, 2365, 556, 564, 877,
	1028, 39, 38, 36, 27, 1003, 25, 23, 1473, 754,
	1453, 771, 1278, 2597, 3065, 2364, 3066, 1241, 3802, 1235,
	2702, 1902, 2237, 1902, 2254, 1637, 618, 1902, 3788, 3787,
	845, 3766, 2237, 2237, 621, 3298, 3764, 3760, 3687, 2237,
	3298, 1842, 3688, 145, 3685, 3683, 618, 3680, 2237, 2237,
	840, 3681, 845, 3677, 621, 3672, 2891, 3678, 1052, 1842,
	3593, 716, 1020, 1481, 1482, 3503, 1514, 1515, 1516, 1524,
	1525, 1526, 2892, 846, 3647, 3646, 34, 3645, 1842, 1842,
	3642, 1914, 1517, 1512, 1914, 3641, 3055, 3636, 3634, 1914,
	1484, 3298, 3298, 2658, 2659, 1530, 3612, 892, 1550, 3592,
	3298, 1006, 1006, 2292, 3586, 3585, 3580, 3579, 2237, 2237,
	3298, 3298, 3573, 3519, 3500, 828, 1842, 2292, 1842, 3497,
	3469, 1483, 3450, 3298, 3470, 3449, 1842, 3441, 3440, 1842,
	1503, 1842, 3298, 1053, 2767, 3412, 3393, 827, 1500, 1842,
	2292, 3378, 3369, 3325, 3316, 1914, 2906, 2237, 2237, 3297,
	3224, 3179, 3173, 3298, 2292, 2922, 2922, 1080, 1481, 1482,
	2673, 835, 3142, 3075, 3073, 3058, 3143, 3076, 3074, 2237,
	2980, 2976, 2921, 2913, 1842, 2237, 2922, 2914, 1512, 2699,
	2697, 2229, 3055, 2237, 2237, 1484, 1007, 2696, 2610, 2650,
	1240, 2237, 1234, 2237, 2611, 1080, 1914, 1506, 1507, 1508,
	1509, 2629, 2612, 3317, 2474, 2630, 2237, 1489, 1917, 2473,
	2401, 2305, 2288, 1917, 1914, 2237, 1483, 2291, 2286, 2279,
	1929, 2292, 2237, 1842, 1009, 1842, 1010, 77, 1481, 1482,
	2237, 1521, 2236, 2914, 1531, 2378, 2237, 2664, 1511, 1513,
	2230, 1916, 2658, 2659, 1800, 1917, 1842, 1057, 1512, 2320,
	185, 1751, 2600, 1901, 2906, 1484, 2421, 2565, 1527, 2449,
	1528, 1841, 2318, 2658, 2659, 1613, 1219, 1498, 1499, 3128,
	2952, 1481, 1482, 2930, 1635, 1831, 2273, 2272, 2893, 1393,
	2271, 700, 2270, 1519, 2269, 1038, 1483, 1011, 185, 1008,
	187, 1512, 834, 1504, 1903, 1503, 1903, 2894, 1484, 833,
	1903, 832, 1489, 1500, 831, 830, 61, 703, 702, 826,
	2530, 1550, 825, 824, 1529, 823, 822, 821, 820, 819,
	62, 818, 1410, 2674, 217, 817, 816, 815, 187, 1483,
	814, 1518, 813, 1511, 1513, 186, 66, 752, 751, 750,
	749, 748, 747, 746, 3218, 179, 745, 744, 743, 742,
	2658, 2659, 217, 180, 741, 740, 739, 738, 737, 217,
	736, 735, 1506, 1507, 1508, 1509, 185, 734, 185, 71,
	733, 732, 1489, 186, 154, 731, 1510, 3273, 217, 1098,
	217, 217, 217, 1098, 217, 1212, 2664, 730, 1504, 1212,
	2175, 729, 2891, 728, 1505, 1082, 727, 217, 217, 1087,
	726, 76, 725, 1511, 1513, 714, 187, 2664, 187, 713,
	1229, 87, 154, 672, 633, 1489, 77, 84, 632, 624,
	1522, 217, 2658, 2659, 2675, 623, 876, 622, 595, 1076,
	591, 590, 1498, 1499, 217, 589, 217, 573, 1212, 217,
	217, 185, 217, 2466, 207, 1901, 1511, 1513, 206, 1995,
	205, 186, 217, 186, 1053, 204, 203, 121, 1504, 217,
	78, 179, 202, 179, 1199, 201, 848, 200, 199, 180,
	198, 180, 2674, 217, 217, 217, 197, 217, 1212, 196,
	195, 187, 1212, 194, 193, 217, 1212, 217, 217, 1505,
	154, 192, 154, 2674, 2664, 3236, 1212, 1070, 191, 190,
	185, 1504, 217, 189, 188, 1520, 1481, 1482, 1495, 1496,
	1502, 1523, 1501, 1497, 3069, 1494, 1492, 1493, 1485, 1486,
	1487, 1488, 1490, 1491, 2923, 2746, 186, 2623, 3246, 2658,
	2659, 2606, 3245, 1484, 2405, 2280, 179, 2263, 1779, 1212,
	187, 1510, 1215, 2161, 180, 2669, 2667, 2668, 2660, 2661,
	2662, 2663, 2665, 2666, 2433, 919, 1582, 3365, 1661, 1505,
	2229, 1065, 1581, 217, 1483, 154, 2664, 1053, 2159, 1222,
	1924, 1568, 1225, 2675, 79, 1089, 1191, 217, 1638, 1203,
	618, 1042, 3668, 1585, 3430, 186, 3648, 1221, 621, 3560,
	1091, 3512, 1185, 1190, 2675, 179, 3506, 1347, 1349, 1363,
	1480, 1582, 1505, 180, 1481, 1482, 1561, 1581, 151, 82,
	3504, 83, 1493, 1485, 1486, 1487, 1488, 1490, 1491, 2383,
	846, 3370, 3277, 1096, 2448, 1326, 1329, 1197, 1580, 1561,
	185, 1484, 3256, 3255, 1279, 1279, 3243, 3242, 1345, 1283,
	1923, 3126, 704, 2658, 2659, 3241, 121, 3240, 1076, 3235,
	1489, 1076, 2674, 3232, 3231, 1299, 3148, 3141, 3089, 3088,
	3087, 1420, 1483, 3079, 3048, 3047, 3046, 2972, 145, 145,
	187, 185, 1280, 2664, 1335, 2968, 2741, 1501, 1497, 2693,
	1494, 1492, 1493, 1485, 1486, 1487, 1488, 1490, 1491, 2917,
	1458, 2684, 2657, 122, 2669, 2667, 2668, 2660, 2661, 2662,
	2663, 2665, 2666, 2654, 1228, 2653, 1233, 155, 1239, 2651,
	2351, 187, 2636, 2635, 2634, 186, 2667, 2668, 2660, 2661,
	2662, 2663, 2665, 2666, 1457, 179, 1485, 1486, 1487, 1488,
	1490, 1491, 2631, 180, 2628, 2622, 1566, 2605, 2598, 1562,
	2434, 1560, 1019, 1035, 185, 2475, 2264, 2124, 1489, 1480,
	2137, 1847, 1877, 2675, 701, 3797, 186, 1479, 3364, 185,
	3759, 3758, 3697, 1412, 2107, 1368, 179, 1845, 3695, 3686,
	1041, 2998, 1384, 1549, 180, 3552, 3549, 3546, 2761, 2738,
	3545, 3544, 3537, 3531, 187, 217, 3501, 2664, 1357, 1452,
	3496, 3495, 2101, 3483, 3480, 154, 1362, 3446, 3426, 187,
	3404, 3388, 3387, 846, 3375, 2660, 2661, 2662, 2663, 2665,
	2666, 1615, 217, 1455, 3523, 185, 1463, 2138, 1462, 828,
	3374, 3344, 217, 1098, 217, 217, 217, 217, 3272, 186,
	3254, 3194, 613, 217, 217, 185, 1584, 613, 217, 179,
	3191, 827, 3117, 217, 186, 1663, 1459, 180, 3116, 1212,
	1411, 3104, 1476, 1477, 179, 187, 1673, 3103, 3061, 3147,
	2963, 1740, 180, 3347, 2174, 1481, 1482, 1546, 154, 1624,
	1098, 2924, 2907, 2674, 2869, 187, 2668, 2660, 2661, 2662,
	2663, 2665, 2666, 154, 2833, 1512, 1576, 1577, 1748, 2812,
	2139, 2136, 1484, 1621, 1622, 1777, 2789, 2788, 2762, 1671,
	186, 2698, 1645, 2432, 2627, 2626, 2621, 1669, 2589, 1742,
	179, 2414, 1586, 1481, 1482, 1743, 1076, 1583, 180, 1575,
	186, 1572, 2299, 1483, 2658, 2659, 1006, 2676, 2677, 2678,
	179, 2298, 2275, 2268, 2235, 2157, 1660, 1616, 180, 154,
	1484, 1612, 1611, 3220, 1610, 1609, 846, 1608, 1607, 1606,
	1605, 1604, 1602, 1601, 1600, 1925, 1599, 1598, 1597, 154,
	1667, 1485, 1486, 1487, 1488, 1490, 1491, 1596, 1762, 1761,
	3274, 1483, 1770, 1772, 2675, 1643, 2789, 1595, 1594, 1593,
	1592, 1591, 1590, 1589, 1745, 1588, 2662, 2663, 2665, 2666,
	1563, 2673, 1547, 2141, 1545, 145, 1540, 918, 1212, 1212,
	217, 1064, 1055, 1048, 3228, 3085, 1098, 3072, 3064, 1489,
	1614, 2609, 1636, 2294, 2266, 618, 3415, 2160, 3276, 3084,
	618, 1665, 1203, 621, 2658, 2659, 1640, 1562, 621, 2759,
	1672, 1655, 1654, 1653, 1651, 1739, 1650, 1649, 1789, 3319,
	1511, 1513, 2158, 1656, 217, 3507, 1703, 1543, 217, 2815,
	1084, 1674, 1818, 217, 1646, 1820, 1770, 3429, 1825, 3505,
	1838, 1487, 1488, 1490, 1491, 1770, 3756, 1664, 2664, 1770,
	3749, 217, 3547, 217, 1765, 217, 2878, 1773, 1768, 217,
	3472, 1763, 1086, 1746, 3471, 3368, 2658, 2659, 3318, 2676,
	2677, 2678, 1800, 217, 2135, 1504, 1597, 3067, 2660, 2661,
	2662, 2663, 2665, 2666, 2909, 3219, 1652, 2908, 1804, 1080,
	2369, 3477, 1597, 217, 1780, 3151, 1638, 2633, 2301, 2679,
	2632, 1582, 2137, 1038, 1080, 1038, 1077, 1581, 1450, 1212,
	2571, 1212, 217, 1212, 2353, 1085, 217, 1081, 1757, 3115,
	2855, 1212, 2854, 1668, 1212, 217, 1829, 217, 217, 1870,
	1570, 1421, 1839, 2673, 2674, 811, 1392, 1212, 1212, 1212,
	1080, 217, 1875, 1383, 1922, 3468, 3673, 1767, 217, 1883,
	3660, 1393, 1222, 1834, 3131, 3119, 2928, 613, 217, 1071,
	217, 3407, 217, 618, 217, 1034, 217, 3785, 2702, 2138,
	1221, 621, 1878, 3000, 1824, 812, 1505, 2615, 1766, 3669,
	217, 2132, 2297, 217, 1603, 217, 1567, 1578, 2847, 1874,
	3682, 1256, 3679, 1840, 2887, 1018, 217, 3096, 3539, 3352,
	1891, 3610, 3528, 1078, 3110, 1880, 2482, 1943, 2445, 2840,
	2664, 1079, 3720, 1927, 2944, 3572, 3308, 217, 1372, 3721,
	1856, 217, 1905, 1857, 2760, 1907, 854, 668, 1873, 2333,
	1843, 1912, 1784, 1244, 2306, 2675, 1785, 3670, 2771, 1254,
	3794, 3459, 2139, 2136, 1098, 809, 2010, 846, 2442, 846,
	807, 805, 3452, 875, 1299, 1981, 1888, 1885, 1888, 860,
	1889, 2679, 1979, 803, 1928, 1345, 3133, 1345, 1893, 1894,
	1077, 3130, 2324, 3129, 800, 1086, 3093, 2324, 3092, 2010,
	2620, 2619, 2618, 2008, 2012, 2322, 2617, 1999, 1203, 1419,
	2322, 2575, 2385, 1758, 2377, 1418, 2674, 1494, 1492, 1493,
	1485, 1486, 1487, 1488, 1490, 1491, 669, 1939, 2376, 2356,
	794, 1255, 2287, 1918, 1065, 1919, 2008, 1086, 844, 2082,
	1456, 1218, 1930, 2336, 1933, 1932, 2773, 2153, 1085, 1098,
	3744, 1786, 2152, 2040, 1289, 1797, 1288, 1992, 3386, 1287,
	618, 1286, 797, 2814, 1788, 2141, 2929, 1994, 621, 2670,
	2671, 2672, 1080, 1491, 1993, 1961, 2669, 2667, 2668, 2660,
	2661, 2662, 2663, 2665, 2666, 1793, 1077, 1078, 2036, 2037,
	1085, 2355, 1045, 1370, 217, 1079, 2006, 2113, 2114, 3571,
	1417, 1989, 2023, 1855, 2278, 1937, 1798, 1799, 1263, 1310,
	2313, 2344, 843, 2113, 2129, 2009, 1098, 2675, 217, 1790,
	1250, 2548, 1954, 3745, 2935, 1043, 3436, 217, 3639, 2011,
	1774, 1775, 2533, 1998, 1794, 1997, 1996, 1947, 2004, 217,
	1429, 1991, 1098, 828, 2934, 1365, 828, 828, 2009, 3666,
	2343, 3304, 2295, 2183, 1890, 2187, 2187, 2201, 2527, 2113,
	2128, 1036, 2221, 2223, 846, 2027, 2135, 2227, 2028, 2029,
	3106, 2097, 1703, 1703, 2007, 846, 1784, 1461, 1656, 846,
	1785, 2097, 1679, 1078, 2666, 1951, 2141, 2150, 1948, 2335,
	845, 1079, 2151, 2251, 2373, 2154, 2093, 2155, 2156, 1946,
	1407, 2109, 3733, 2243, 1806, 3320, 1955, 2007, 2039, 1046,
	3747, 2276, 2563, 1381, 2366, 2367, 2536, 2132, 2126, 1645,
	2091, 1791, 217, 2366, 2367, 1810, 1063, 2366, 2367, 3732,
	1212, 2670, 2671, 2672, 2989, 1006, 1080, 3753, 2669, 2667,
	2668, 2660, 2661, 2662, 2663, 2665, 2666, 1366, 1385, 3720,
	3295, 1408, 2242, 2285, 2808, 1274, 1433, 671, 670, 3768,
	1098, 3385, 2196, 846, 2212, 217, 2884, 2265, 3709, 1748,
	2289, 1807, 2225, 217, 2586, 1786, 2233, 2234, 1449, 3667,
	3292, 1035, 3210, 1035, 217, 2248, 2249, 2244, 1788, 1416,
	723, 1272, 1643, 2144, 2354, 1393, 2390, 217, 2584, 1076,
	1393, 3302, 2770, 1252, 1988, 2334, 3209, 2105, 2826, 551,
	2820, 217, 1098, 2103, 1791, 1369, 1212, 789, 1817, 2562,
	2535, 1584, 217, 217, 2885, 3293, 3118, 2087, 1800, 2325,
	842, 2323, 1080, 546, 666, 1802, 665, 2141, 2088, 839,
	2532, 145, 2089, 1790, 1990, 217, 2094, 2836, 217, 3540,
	2300, 1274, 1811, 2304, 2772, 217, 3746, 3665, 698, 2986,
	2250, 217, 2255, 1787, 3780, 2261, 2262, 1371, 2418, 2555,
	2556, 217, 801, 217, 1576, 1577, 217, 801, 801, 1800,
	1902, 1980, 217, 2884, 1573, 217, 2277, 217, 1978, 217,
	802, 2386, 2303, 2374, 217, 1212, 1212, 1309, 1212, 2307,
	2358, 801, 3590, 217, 217, 2581, 217, 217, 1249, 1953,
	1212, 3107, 1044, 2359, 1812, 1813, 2757, 790, 217, 2534,
	2582, 2802, 3437, 1808, 2587, 3303, 1038, 1791, 3206, 2328,
	3729, 2456, 2987, 3751, 217, 217, 217, 2324, 3398, 217,
	950, 217, 1038, 2392, 217, 1791, 217, 3622, 217, 3551,
	2338, 798, 3336, 2337, 2340, 2123, 1539, 1809, 2470, 2079,
	2391, 2393, 2517, 1430, 2518, 2402, 2801, 2496, 3708, 217,
	217, 217, 217, 217, 217, 3288, 217, 2625, 2776, 3289,
	2247, 213, 3769, 541, 542, 2346, 557, 541, 557, 567,
	572, 2090, 1191, 588, 1222, 2412, 2357, 1703, 594, 2396,
	2092, 2481, 2260, 213, 2319, 618, 1203, 217, 2422, 2375,
	3752, 2471, 2403, 621, 2458, 217, 2515, 1428, 845, 709,
	3291, 2577, 3346, 213, 3081, 2465, 2440, 2368, 2370, 2371,
	2372, 2096, 2451, 3294, 1367, 2141, 2462, 2512, 2463, 1460,
	2464, 2309, 3754, 3200, 1058, 3588, 1814, 2519, 1950, 2521,
	2538, 2523, 2540, 2311, 1345, 2483, 2500, 2472, 3211, 2503,
	1431, 2504, 1945, 2499, 791, 2946, 2546, 2531, 3554, 2583,
	3382, 1819, 2350, 1630, 3589, 1380, 1382, 724, 2585, 1395,
	2498, 1626, 145, 2501, 2502, 2312, 3146, 1787, 1062, 1791,
	3690, 2468, 2507, 2508, 2509, 2077, 1471, 3691, 2080, 3664,
	2310, 2382, 2804, 3719, 217, 1633, 547, 789, 1679, 1679,
	3717, 1815, 2578, 3707, 3337, 3568, 3482, 625, 3161, 2554,
	541, 541, 1827, 2407, 2245, 2409, 2871, 2608, 213, 839,
	2806, 1203, 2514, 1432, 2545, 2544, 3290, 3781, 2397, 1864,
	1631, 2520, 1826, 2522, 1623, 2524, 2023, 2076, 2549, 1626,
	1630, 1056, 1051, 1903, 538, 2104, 3207, 3037, 2564, 2026,
	548, 1470, 3252, 2447, 1801, 1203, 2447, 1203, 2603, 2604,
	2541, 2339, 1822, 2607, 3381, 792, 1759, 2599, 1756, 1470,
	2950, 2805, 1633, 2750, 215, 3443, 3442, 3424, 2543, 3527,
	3162, 3774, 1465, 1798, 1799, 3095, 3307, 2872, 2866, 2784,
	549, 1628, 550, 3306, 2780, 2426, 1539, 790, 2576, 2416,
	1884, 1876, 1098, 1869, 793, 1851, 3555, 1631, 1630, 2985,
	846, 1823, 2239, 1034, 3599, 1034, 2709, 2710, 2947, 2658,
	2659, 217, 2676, 2677, 2678, 1985, 217, 2590, 2591, 217,
	2016, 1629, 217, 217, 1098, 2360, 1754, 1632, 217, 1469,
	1633, 2525, 1752, 1470, 3164, 3357, 2413, 3212, 2614, 3466,
	1312, 1098, 3464, 2717, 2731, 1755, 3425, 1469, 217, 1628,
	2695, 2794, 2791, 2790, 1938, 2569, 2547, 3063, 2714, 3689,
	2713, 1409, 3383, 217, 2078, 1631, 2711, 1471, 2284, 2283,
	2241, 2755, 2282, 2281, 720, 2240, 2673, 843, 1281, 3038,
	712, 2420, 217, 217, 217, 1471, 2766, 3039, 217, 1629,
	3533, 217, 3253, 3328, 3432, 1282, 2768, 2918, 217, 217,
	2719, 217, 217, 217, 1632, 626, 627, 3213, 1295, 1882,
	2774, 2400, 2690, 2691, 2692, 217, 217, 217, 3726, 2745,
	864, 1469, 2017, 2721, 217, 3773, 2744, 2681, 2682, 2683,
	3462, 1396, 1293, 3305, 791, 1076, 2703, 217, 217, 2740,
	2737, 722, 2777, 2778, 1553, 2725, 1098, 3556, 1558, 2718,
	3607, 2720, 2781, 2664, 3602, 3534, 2729, 1212, 2792, 3596,
	2730, 2796, 2732, 2733, 1035, 3258, 1098, 3052, 2361, 2362,
	2148, 217, 1632, 3433, 217, 217, 3422, 3728, 217, 2758,
	1035, 1212, 217, 1447, 217, 2793, 1445, 1425, 2798, 2799,
	2763, 2764, 1212, 2765, 3684, 3548, 2817, 2752, 2753, 2754,
	2716, 217, 2819, 2769, 217, 629, 628, 3403, 3423, 217,
	2747, 217, 2865, 1679, 1423, 1406, 2785, 2880, 217, 3251,
	3603, 3535, 2751, 2834, 2775, 2726, 2687, 217, 217, 2962,
	1404, 2926, 1402, 2827, 2843, 2852, 2708, 2652, 1400, 2674,
	1398, 2588, 1212, 1212, 2813, 792, 2417, 1789, 1390, 2807,
	217, 217, 2889, 1388, 217, 630, 631, 2384, 2822, 2352,
	1291, 2302, 1662, 1703, 1049, 2841, 1977, 2724, 2734, 2496,
	2735, 2829, 2736, 1789, 2825, 1659, 1448, 2837, 2496, 1036,
	2835, 1036, 718, 719, 793, 2748, 1360, 2728, 710, 711,
	2844, 217, 1059, 1098, 217, 217, 1098, 217, 2688, 588,
	1703, 2358, 2943, 2942, 1465, 1829, 2881, 2900, 1038, 2863,
	1294, 1203, 2873, 1829, 2529, 2528, 2506, 2005, 213, 1987,
	213, 213, 1194, 1038, 213, 1958, 1741, 1587, 1364, 1267,
	217, 2842, 1873, 2886, 1292, 2828, 2147, 213, 1224, 3659,
	2675, 1446, 2895, 721, 1444, 1424, 3324, 846, 2903, 2904,
	2901, 2860, 2888, 1038, 3315, 2920, 3595, 3355, 2897, 2898,
	2899, 1248, 2916, 3281, 2902, 2823, 2727, 1098, 2940, 2824,
	3160, 3156, 1422, 1405, 1266, 3113, 1271, 2941, 3111, 213,
	213, 3705, 1194, 3094, 1098, 2931, 217, 2932, 1403, 2933,
	1401, 2864, 213, 2856, 2982, 2965, 1399, 2467, 1397, 1308,
	2443, 2879, 2431, 2423, 2809, 2810, 1389, 2905, 2811, 2410,
	2748, 1387, 1915, 213, 213, 213, 2937, 1194, 1290, 145,
	145, 1976, 1203, 1203, 1913, 588, 1908, 213, 213, 2945,
	1906, 1904, 2925, 1895, 1848, 1846, 2830, 2831, 1835, 1830,
	2832, 1668, 709, 1816, 1803, 2974, 2975, 2948, 1792, 2876,
	1015, 3489, 1474, 799, 2670, 2671, 2672, 1670, 2567, 3721,
	3630, 2669, 2667, 2668, 2660, 2661, 2662, 2663, 2665, 2666,
	3377, 3372, 3371, 2497, 1016, 1778, 2970, 1246, 3491, 2342,
	2324, 2324, 3172, 1800, 1442, 1443, 1949, 1881, 1333, 2981,
	1334, 2938, 1203, 2322, 2341, 1975, 217, 217, 2958, 2959,
	1974, 3003, 3629, 213, 3001, 3004, 2997, 1098, 2988, 2990,
	2991, 1956, 3309, 2992, 3542, 3068, 3006, 213, 1386, 3514,
	3259, 2363, 3002, 1038, 3014, 3049, 2345, 1478, 217, 2036,
	3007, 3722, 3016, 1749, 3715, 3041, 2379, 1197, 2568, 2347,
	1096, 2381, 3594, 604, 1475, 2036, 3017, 3564, 864, 2349,
	1784, 3090, 864, 2380, 1785, 3042, 3561, 552, 1481, 1482,
	1703, 2348, 3748, 1183, 1334, 1334, 1017, 1183, 3059, 3060,
	3155, 3145, 3078, 3050, 2450, 217, 3045, 3056, 3057, 804,
	806, 808, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025,
	3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035,
	3036, 1212, 3040, 2226, 1212, 563, 1034, 1744, 3070, 1675,
	3054, 2978, 2756, 1703, 1703, 657, 1483, 217, 1481, 1482,
	697, 3772, 1034, 2658, 2659, 217, 1481, 1482, 2994, 1703,
	1703, 3563, 217, 2316, 2317, 2314, 2315, 3071, 1212, 1550,
	1374, 3124, 3233, 3120, 145, 1484, 1373, 2143, 3083, 1786,
	3098, 2316, 217, 2314, 3086, 3125, 3127, 2149, 1427, 3229,
	1703, 1426, 1788, 3174, 3132, 3082, 3136, 217, 217, 1212,
	1212, 1212, 2993, 217, 217, 217, 1483, 3166, 217, 217,
	1548, 3791, 217, 217, 3169, 1212, 3152, 3761, 3734, 3165,
	217, 1098, 3112, 3524, 3114, 3456, 3416, 3414, 2020, 1679,
	3343, 2358, 3275, 3197, 3190, 3178, 3158, 3140, 3139, 3138,
	3109, 2896, 2456, 1098, 2870, 2868, 2511, 1790, 2510, 2460,
	2435, 3154, 2411, 3168, 2108, 541, 1973, 1972, 1971, 1970,
	3153, 1898, 1897, 1896, 3157, 1879, 1679, 1859, 1341, 2785,
	1858, 1854, 1853, 2496, 3170, 3167, 213, 3198, 213, 1852,
	1850, 3080, 213, 3176, 3175, 1849, 1441, 1440, 3181, 217,
	1321, 1320, 1224, 3182, 1194, 213, 1035, 213, 3189, 3223,
	3187, 3188, 213, 1224, 557, 3196, 3137, 213, 1224, 3195,
	3193, 1035, 1319, 588, 1318, 1317, 3208, 3214, 1316, 3192,
	3215, 1038, 1038, 1315, 1314, 1313, 1311, 3180, 1306, 2106,
	3227, 3203, 1305, 1304, 1303, 1302, 1262, 1261, 1260, 1259,
	1258, 1035, 1257, 1251, 1245, 1243, 1553, 1242, 1061, 1791,
	1873, 1060, 217, 1703, 990, 897, 1750, 810, 1098, 796,
	1098, 3435, 1435, 75, 2204, 1253, 644, 70, 3108, 652,
	3609, 2800, 2388, 3186, 1957, 3264, 1394, 1959, 2739, 2267,
	3587, 3237, 1782, 217, 217, 217, 2624, 3520, 3397, 2146,
	1569, 72, 885, 972, 3250, 217, 3335, 2208, 3334, 3282,
	3097, 2486, 217, 3332, 217, 3331, 853, 217, 217, 217,
	1101, 3300, 1036, 1760, 891, 1776, 1769, 2296, 3301, 1098,
	217, 217, 2186, 1683, 1098, 894, 1680, 1682, 1036, 896,
	3312, 3313, 895, 1681, 217, 3267, 1571, 3266, 217, 3263,
	3260, 3271, 893, 3278, 3279, 3261, 3262, 217, 3265, 3280,
	1678, 1098, 217, 2419, 2454, 1298, 1212, 2744, 775, 1764,
	2102, 2130, 3310, 2613, 1703, 1564, 866, 887, 3299, 2127,
	213, 1054, 2722, 2883, 3077, 3270, 3363, 2015, 660, 2655,
	2133, 1047, 2209, 2202, 2198, 217, 2444, 1451, 1541, 2455,
	3311, 1787, 1088, 869, 3329, 3359, 2100, 1098, 1555, 3373,
	1038, 3326, 2593, 2025, 2890, 3322, 2742, 3358, 3376, 2293,
	3348, 1035, 3626, 3199, 213, 3362, 3345, 3323, 213, 2030,
	1863, 3330, 1014, 213, 1013, 1012, 1679, 1098, 3353, 3616,
	3613, 3360, 3350, 2850, 1753, 2308, 1533, 1183, 2857, 881,
	1202, 213, 2707, 213, 2919, 213, 1264, 3367, 593, 541,
	3541, 1532, 2395, 2394, 3530, 1075, 1074, 1073, 2783, 3779,
	3105, 184, 2561, 1899, 1098, 1472, 1464, 181, 183, 3384,
	182, 3339, 217, 3122, 217, 18, 1098, 217, 864, 1679,
	1679, 3389, 17, 213, 1183, 217, 92, 37, 16, 120,
	3405, 119, 118, 117, 116, 1679, 1679, 115, 114, 109,
	113, 112, 588, 3394, 3269, 111, 709, 110, 217, 3419,
	108, 107, 106, 105, 104, 213, 1873, 1194, 213, 103,
	3409, 102, 101, 3410, 3411, 100, 1679, 217, 99, 98,
	97, 588, 96, 95, 94, 217, 3417, 93, 213, 584,
	3455, 581, 51, 217, 50, 91, 1098, 213, 213, 1212,
	213, 3474, 213, 3465, 213, 217, 213, 3439, 3438, 90,
	3418, 15, 35, 1038, 13, 3479, 55, 56, 12, 3413,
	1982, 1038, 30, 1983, 3453, 1984, 217, 217, 3490, 31,
	81, 3463, 3498, 3499, 1038, 80, 213, 29, 3486, 14,
	3457, 28, 3488, 26, 3473, 2852, 10, 8, 217, 7,
	3485, 32, 1647, 3402, 11, 3478, 3487, 572, 150, 149,
	3493, 588, 148, 217, 3362, 3492, 74, 147, 146, 73,
	1183, 24, 9, 3484, 142, 3445, 3475, 3150, 69, 144,
	143, 3536, 3338, 141, 140, 139, 3447, 3448, 1034, 3526,
	3518, 1096, 3349, 67, 138, 3427, 137, 68, 3510, 3511,
	136, 3525, 22, 1034, 3543, 1703, 5, 3509, 54, 6,
	3366, 217, 3379, 2927, 85, 86, 3550, 33, 65, 64,
	3513, 3395, 2551, 217, 596, 63, 1212, 21, 53, 1035,
	1035, 20, 217, 1034, 174, 173, 1212, 1212, 3565, 1679,
	172, 3567, 1212, 171, 166, 165, 217, 170, 217, 3557,
	168, 3578, 167, 3562, 169, 2208, 164, 176, 3395, 1703,
	175, 178, 162, 3570, 158, 3569, 3558, 3559, 157, 3583,
	2039, 3584, 217, 3575, 161, 163, 160, 159, 217, 3604,
	3582, 217, 3494, 1098, 3478, 3606, 156, 177, 60, 135,
	3502, 134, 217, 217, 3295, 3624, 3615, 3618, 3576, 3577,
	133, 3605, 2204, 2204, 3581, 3517, 132, 3631, 131, 217,
	130, 129, 59, 19, 541, 2, 3611, 1, 3574, 3620,
	3643, 0, 1203, 1204, 3292, 3591, 601, 1216, 3285, 213,
	0, 0, 0, 3644, 217, 2208, 2208, 0, 541, 3635,
	0, 3638, 3640, 3283, 0, 213, 0, 541, 3671, 3287,
	1679, 0, 0, 3628, 0, 1703, 0, 3619, 0, 213,
	3623, 0, 3658, 3657, 3655, 3656, 3676, 0, 0, 3293,
	0, 0, 0, 3674, 3692, 0, 1275, 0, 3696, 0,
	217, 0, 0, 0, 0, 0, 3702, 0, 3694, 606,
	3701, 0, 0, 0, 0, 0, 0, 3706, 3693, 0,
	217, 3698, 3286, 1034, 0, 0, 0, 0, 1035, 0,
	603, 0, 2204, 2204, 2204, 0, 3712, 3713, 3718, 0,
	0, 3716, 0, 3724, 1353, 0, 3714, 217, 1183, 217,
	3615, 0, 0, 3618, 1216, 3725, 3737, 3723, 3736, 3731,
	2456, 3727, 557, 3739, 3742, 2208, 2208, 2208, 3735, 3743,
	3730, 3741, 0, 3738, 0, 3740, 0, 0, 0, 0,
	0, 0, 0, 0, 1036, 0, 0, 0, 1481, 1482,
	3755, 3757, 0, 0, 0, 0, 0, 1375, 0, 1036,
	3762, 0, 3765, 0, 3763, 2332, 3767, 0, 1512, 3628,
	0, 0, 0, 213, 3770, 1484, 0, 0, 837, 0,
	789, 3776, 0, 0, 213, 0, 3782, 0, 3786, 1036,
	0, 0, 0, 1183, 598, 0, 0, 213, 3783, 3288,
	0, 0, 839, 3289, 0, 3790, 1483, 2039, 0, 0,
	3793, 213, 3789, 3792, 602, 3796, 0, 3795, 3798, 0,
	0, 0, 213, 2404, 0, 3803, 3799, 0, 3801, 0,
	0, 0, 0, 3699, 3700, 0, 0, 3703, 605, 0,
	0, 0, 0, 838, 3291, 1224, 0, 0, 213, 3777,
	3778, 1035, 0, 0, 600, 213, 0, 3294, 0, 1035,
	1183, 2439, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2332, 1035, 541, 0, 0, 2459, 0, 3632, 0,
	790, 3633, 213, 0, 0, 213, 1183, 213, 3800, 213,
	0, 0, 1489, 597, 1194, 0, 0, 0, 0, 0,
	0, 0, 0, 2479, 709, 0, 2332, 2332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	0, 1679, 0, 1511, 1513, 0, 0, 0, 0, 0,
	0, 607, 0, 0, 213, 1194, 213, 0, 0, 1224,
	0, 1224, 599, 0, 1194, 0, 1194, 0, 1194, 0,
	0, 1034, 1034, 0, 0, 0, 0, 0, 0, 1036,
	3290, 0, 0, 0, 0, 0, 0, 0, 0, 213,
	213, 213, 213, 1194, 213, 1679, 213, 0, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1183, 0, 0, 213, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 61, 0, 0, 791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 1183, 0, 0, 0,
	0, 0, 0, 2204, 2204, 0, 0, 0, 0, 0,
	0, 1679, 0, 0, 0, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 71, 0, 0,
	0, 0, 0, 0, 0, 0, 2208, 2208, 0, 1625,
	0, 0, 0, 0, 1224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 76,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 87,
	1034, 0, 0, 0, 77, 84, 836, 0, 792, 0,
	0, 0, 0, 0, 0, 0, 0, 2204, 2204, 2204,
	2204, 2204, 2204, 2204, 2204, 2204, 2204, 2204, 2204, 2204,
	2204, 2204, 2204, 2204, 2204, 2204, 0, 2204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 793, 78, 0,
	2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208,
	2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208, 0,
	2208, 1492, 1493, 1485, 1486, 1487, 1488, 1490, 1491, 0,
	0, 213, 0, 0, 0, 0, 0, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 213, 1036, 1036, 0,
	0, 541, 0, 0, 0, 0, 541, 0, 0, 541,
	0, 0, 541, 541, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 852, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1224, 0,
	0, 0, 0, 2290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1224, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 1034, 0, 0, 0, 0, 0, 0,
	0, 1034, 2332, 2332, 213, 0, 0, 0, 2332, 0,
	0, 2787, 0, 0, 1034, 0, 0, 0, 2332, 2787,
	0, 2332, 2787, 2787, 0, 0, 151, 82, 0, 83,
	0, 0, 0, 0, 0, 213, 213, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 61,
	0, 1920, 0, 0, 0, 0, 0, 213, 1194, 1216,
	704, 0, 1931, 62, 121, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1940, 1941, 1942, 0, 66,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 2846, 0, 0, 2848, 2332, 0, 0, 213, 0,
	0, 0, 213, 0, 1271, 0, 1036, 0, 0, 0,
	0, 122, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 2439, 0, 0, 1194, 155, 213, 0, 0, 2332,
	0, 541, 0, 186, 0, 0, 0, 0, 2332, 0,
	0, 0, 0, 179, 76, 0, 0, 213, 213, 0,
	0, 180, 0, 0, 87, 0, 1183, 0, 0, 77,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	213, 2439, 154, 0, 2439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 78, 0, 1183, 0, 0, 0, 0,
	0, 2936, 128, 0, 1194, 213, 0, 213, 61, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 864,
	0, 0, 62, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 864, 0, 0, 0, 0, 66, 0,
	213, 0, 0, 0, 0, 0, 0, 57, 2658, 2659,
	0, 2676, 2677, 2678, 41, 125, 0, 0, 0, 1036,
	0, 0, 0, 0, 0, 0, 0, 1036, 0, 40,
	0, 71, 0, 0, 0, 0, 0, 0, 0, 0,
	1036, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 43, 58, 0, 0, 2999, 0, 44, 0,
	1183, 0, 0, 76, 0, 0, 126, 79, 0, 0,
	0, 0, 42, 87, 0, 2673, 0, 0, 77, 84,
	1183, 0, 0, 0, 0, 0, 61, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 151, 82, 0, 83, 45, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 66, 0, 0, 0,
	0, 0, 78, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 852, 0, 704, 0, 852, 0, 121,
	0, 0, 0, 0, 213, 213, 0, 0, 0, 71,
	0, 0, 2664, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 541, 541, 0, 0,
	0, 0, 0, 0, 0, 0, 1226, 0, 1230, 2680,
	1236, 76, 0, 0, 0, 0, 122, 0, 2204, 0,
	0, 87, 0, 0, 0, 0, 77, 84, 1224, 0,
	155, 0, 0, 2679, 0, 0, 0, 1183, 186, 0,
	1183, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 2208, 0, 0, 0, 0, 180, 0, 0, 0,
	2204, 0, 0, 0, 0, 0, 79, 0, 2674, 0,
	78, 0, 0, 0, 46, 588, 0, 154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1356, 0, 0, 2208, 0, 0, 0, 0, 1361, 49,
	151, 82, 0, 83, 0, 47, 0, 0, 0, 127,
	0, 1183, 0, 0, 2398, 48, 0, 213, 0, 0,
	0, 0, 185, 0, 0, 213, 0, 0, 1183, 0,
	0, 0, 213, 0, 52, 0, 0, 0, 121, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 2332, 213, 1413, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 2479, 2479, 2675,
	2204, 0, 0, 709, 709, 2332, 0, 0, 2439, 2439,
	0, 0, 709, 2332, 79, 122, 0, 0, 0, 0,
	213, 0, 0, 2469, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 2208, 0, 0, 0, 186, 1216, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 151, 82,
	0, 83, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1534, 1535, 1536, 1537, 1538,
	185, 0, 0, 0, 0, 0, 154, 0, 0, 3,
	0, 1183, 704, 0, 0, 0, 121, 0, 0, 3238,
	0, 0, 0, 0, 1552, 0, 0, 0, 0, 0,
	1565, 2208, 2208, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 2670, 2671, 2672, 0, 0, 0, 0,
	2669, 2667, 2668, 2660, 2661, 2662, 2663, 2665, 2666, 0,
	0, 0, 0, 122, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 213, 155, 0, 0,
	0, 0, 1224, 0, 213, 186, 61, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 213, 0, 0,
	62, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2332, 2332, 2332, 66, 0, 0, 0,
	0, 0, 0, 0, 1350, 1224, 0, 0, 0, 0,
	0, 0, 2332, 0, 2787, 0, 0, 1224, 1224, 213,
	0, 0, 0, 0, 0, 1481, 1482, 0, 0, 71,
	213, 213, 1619, 1619, 1619, 0, 0, 0, 0, 0,
	0, 951, 0, 0, 2332, 1512, 0, 0, 3341, 0,
	0, 0, 1484, 0, 0, 0, 0, 213, 0, 0,
	0, 76, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 1183, 77, 84, 0, 0,
	0, 0, 214, 1483, 0, 0, 0, 0, 0, 0,
	0, 0, 1503, 0, 0, 1224, 0, 1183, 1030, 0,
	1500, 0, 0, 852, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 1481, 1482, 0, 0, 0, 0, 0,
	78, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 1512, 0, 0, 0, 0, 0, 208,
	1484, 2961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	1507, 1508, 1509, 0, 0, 0, 0, 0, 0, 1489,
	0, 1483, 0, 0, 0, 0, 0, 0, 0, 0,
	1503, 0, 2332, 0, 2787, 0, 0, 3421, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 0, 0,
	1511, 1513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1183, 0, 1183, 0, 2658, 2659, 588, 2676,
	2677, 2678, 0, 0, 0, 0, 0, 0, 0, 1498,
	1499, 0, 0, 0, 79, 2967, 0, 3421, 0, 0,
	0, 0, 0, 0, 0, 2332, 0, 1506, 1507, 1508,
	1509, 0, 0, 3481, 0, 1504, 0, 1489, 0, 0,
	0, 0, 0, 0, 0, 1224, 0, 0, 151, 82,
	0, 83, 0, 1183, 0, 0, 0, 0, 1183, 0,
	0, 0, 0, 2673, 0, 0, 213, 213, 1511, 1513,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 704, 0, 0, 1183, 121, 0, 2999, 0,
	0, 0, 0, 0, 0, 2838, 0, 0, 0, 0,
	0, 0, 0, 3421, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 1510, 2861,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	2867, 1183, 0, 122, 0, 0, 1505, 0, 0, 0,
	2664, 0, 0, 0, 0, 0, 0, 155, 0, 0,
	0, 3341, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 1183, 0, 213, 0, 179, 0, 0, 0, 0,
	0, 0, 2787, 180, 0, 0, 0, 0, 0, 0,
	2911, 2912, 0, 0, 0, 0, 1224, 0, 1224, 0,
	0, 2679, 0, 0, 1348, 0, 0, 0, 1183, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 0,
	1183, 0, 3600, 0, 0, 0, 0, 0, 1224, 0,
	0, 213, 0, 0, 1505, 0, 2674, 0, 0, 0,
	0, 0, 213, 2332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 864, 0, 0, 0, 0, 0, 213,
	0, 0, 0, 0, 1501, 1497, 0, 1494, 1492, 1493,
	1485, 1486, 1487, 1488, 1490, 1491, 0, 0, 0, 2014,
	0, 2018, 0, 0, 2999, 0, 0, 0, 2032, 0,
	1183, 0, 0, 0, 0, 2041, 2042, 2043, 2044, 2045,
	2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055,
	2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065,
	2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075,
	2332, 2081, 0, 2083, 2084, 2085, 2086, 2675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3421, 0, 0, 2110, 0, 1494, 1492, 1493, 1485, 1486,
	1487, 1488, 1490, 1491, 0, 0, 1552, 0, 0, 0,
	2125, 0, 0, 0, 0, 0, 0, 1224, 0, 2332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2163, 2166, 2169, 2172, 0, 2176, 2177, 2178, 2179, 2180,
	2181, 2182, 0, 0, 0, 0, 2200, 0, 2211, 2213,
	2218, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	1103, 214, 214, 0, 1103, 214, 1103, 0, 0, 0,
	1103, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 2670, 2671, 2672, 0, 0, 0, 0, 2669, 2667,
	2668, 2660, 2661, 2662, 2663, 2665, 2666, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1183, 0, 0,
	0, 0, 864, 0, 0, 0, 1093, 0, 0, 1103,
	214, 214, 1201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 214, 214, 0, 0, 1103,
	0, 0, 0, 1103, 0, 0, 0, 1103, 214, 214,
	0, 0, 0, 0, 0, 0, 0, 1103, 0, 3134,
	0, 0, 0, 0, 0, 0, 0, 0, 1481, 1482,
	1300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1512, 0,
	0, 1325, 1325, 1325, 0, 1484, 0, 0, 0, 0,
	1103, 0, 0, 0, 0, 1354, 1355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2658, 2659,
	0, 2676, 2677, 2678, 214, 0, 1483, 3183, 3184, 3185,
	0, 0, 0, 0, 0, 1503, 0, 2966, 214, 0,
	0, 1481, 1482, 1500, 1514, 1515, 1516, 1524, 1525, 1526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1517, 1512, 0, 0, 0, 2406, 0, 2408, 1484, 0,
	0, 0, 0, 1530, 0, 0, 0, 0, 0, 0,
	0, 1434, 0, 0, 2956, 2673, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1483,
	0, 0, 1506, 1507, 1508, 1509, 0, 0, 1503, 0,
	0, 0, 1489, 0, 0, 0, 1500, 0, 0, 0,
	0, 0, 0, 2658, 2659, 0, 2676, 2677, 2678, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1511, 1513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2664, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1498, 1499, 0, 1506, 1507, 1508, 1509, 0,
	0, 0, 0, 0, 0, 1489, 0, 0, 0, 0,
	2673, 0, 0, 0, 0, 2526, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 1531, 2679, 0, 0, 1511, 1513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1527, 0, 1528, 0,
	0, 1534, 1535, 0, 0, 1498, 1499, 0, 2674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1519, 0, 0, 0, 0, 0, 2664, 0, 0,
	0, 1504, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 1510, 0, 0, 1103, 0, 214, 214, 214, 0,
	0, 0, 1529, 214, 0, 0, 2573, 2574, 214, 1505,
	0, 0, 2580, 0, 0, 0, 0, 0, 0, 1518,
	1103, 0, 0, 0, 0, 0, 0, 0, 2679, 0,
	0, 2594, 2595, 0, 0, 0, 0, 2125, 0, 0,
	1657, 1103, 0, 0, 0, 0, 2602, 0, 0, 0,
	0, 0, 0, 1666, 0, 1201, 0, 0, 0, 2675,
	0, 0, 2616, 2674, 1510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1505, 0, 0, 0, 0, 2637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1501, 1497, 0,
	1494, 1492, 1493, 1485, 1486, 1487, 1488, 1490, 1491, 0,
	0, 0, 0, 0, 2218, 2218, 2218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1619,
	0, 0, 0, 0, 2675, 0, 0, 2712, 0, 1103,
	1103, 214, 0, 2670, 2671, 2672, 0, 1103, 0, 0,
	2669, 2667, 2668, 2660, 2661, 2662, 2663, 2665, 2666, 0,
	0, 0, 0, 1520, 0, 0, 1495, 1496, 1502, 1523,
	1501, 1497, 0, 1494, 1492, 1493, 1485, 1486, 1487, 1488,
	1490, 1491, 0, 0, 0, 214, 2646, 0, 0, 214,
	2647, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 852, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 214, 0, 214, 0, 852, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1861, 0, 2803, 0, 1868, 0, 2670, 2671,
	2672, 0, 0, 0, 214, 2669, 2667, 2668, 2660, 2661,
	2662, 2663, 2665, 2666, 0, 0, 0, 0, 0, 1300,
	1103, 1887, 1103, 1887, 1103, 0, 0, 0, 0, 0,
	0, 0, 1103, 0, 0, 1103, 214, 0, 0, 214,
	691, 0, 0, 0, 0, 0, 0, 0, 1103, 1103,
	1103, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 1201, 0, 673, 0, 0, 0, 0, 214, 214,
	0, 214, 0, 214, 0, 214, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	917, 0, 0, 1868, 0, 0, 1935, 0, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 675, 0,
	0, 0, 0, 0, 0, 0, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 676, 1962, 0, 1964, 0,
	1966, 212, 1968, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 696, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 619, 0, 1103, 0, 0, 677, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 0, 619, 0, 0, 0, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 679, 0, 0,
	680, 0, 0, 0, 0, 606, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2032, 0, 0, 0, 0,
	0, 2953, 2954, 0, 0, 2957, 695, 0, 0, 2960,
	0, 0, 0, 0, 0, 0, 0, 0, 2964, 0,
	1103, 0, 0, 0, 0, 0, 0, 2971, 0, 0,
	2712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1037, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3008, 3009, 0, 3010, 3011, 3012,
	0, 0, 3013, 0, 0, 0, 3015, 1103, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 682, 0, 0,
	214, 0, 0, 1103, 0, 0, 0, 3043, 3044, 0,
	0, 886, 89, 0, 0, 698, 0, 683, 0, 0,
	0, 0, 3053, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3062, 0, 0,
	0, 0, 0, 0, 605, 0, 0, 0, 0, 0,
	0, 684, 0, 0, 685, 0, 0, 2274, 0, 0,
	693, 0, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 1103, 0, 3091, 0, 0, 0, 0, 687, 694,
	0, 0, 0, 0, 0, 0, 688, 0, 3099, 3102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 690,
	0, 1103, 0, 0, 689, 0, 0, 0, 0, 0,
	0, 0, 0, 3121, 214, 0, 0, 607, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 692, 0,
	0, 0, 0, 0, 0, 0, 0, 829, 214, 0,
	0, 0, 0, 0, 0, 0, 847, 0, 0, 0,
	0, 0, 214, 1103, 0, 0, 0, 1103, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1024,
	0, 0, 0, 0, 1619, 0, 0, 0, 0, 214,
	0, 0, 0, 3177, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 214, 0, 214, 0,
	214, 0, 0, 0, 0, 0, 1103, 1103, 0, 1103,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 1103, 0, 2430, 0, 3216, 3217, 0, 0, 214,
	0, 3221, 3222, 0, 0, 0, 3225, 3226, 0, 0,
	0, 0, 0, 3230, 0, 214, 0, 214, 0, 0,
	2461, 0, 0, 1325, 3234, 1325, 0, 1325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	214, 214, 214, 214, 0, 214, 2505, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2513, 0, 2516, 0, 0, 0, 212, 0,
	212, 212, 0, 0, 212, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 214, 619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2537, 1201, 2539,
	1201, 0, 2542, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	212, 0, 0, 3102, 0, 1325, 0, 0, 0, 0,
	0, 0, 212, 2570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 212, 212, 0, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3390, 3391,
	3392, 0, 0, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 0,
	0, 0, 0, 0, 3400, 3401, 0, 0, 0, 0,
	0, 0, 0, 1103, 0, 0, 0, 0, 3408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3102, 0,
	0, 0, 1103, 0, 0, 0, 3444, 0, 0, 0,
	0, 0, 0, 0, 0, 3451, 0, 0, 852, 89,
	0, 89, 0, 89, 3458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3102, 3102, 214, 214, 214, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 847, 89, 89, 0, 0, 214, 0,
	0, 0, 2779, 89, 0, 0, 0, 1103, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 0, 1103, 0,
	0, 0, 0, 0, 0, 0, 3529, 1103, 0, 3532,
	0, 0, 0, 2816, 2818, 2430, 0, 0, 0, 214,
	0, 0, 1103, 214, 0, 0, 3102, 0, 0, 0,
	0, 0, 0, 1103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 1641, 0, 1037, 0,
	0, 0, 212, 0, 0, 0, 0, 0, 0, 0,
	3102, 0, 0, 3102, 0, 212, 1641, 212, 214, 214,
	0, 0, 619, 0, 0, 0, 2858, 619, 0, 0,
	2862, 0, 0, 1103, 1103, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 829, 0, 0, 0, 1201, 1201, 852, 0, 0,
	0, 0, 0, 0, 1103, 0, 214, 1103, 214, 1544,
	0, 0, 0, 0, 0, 0, 1481, 1482, 2915, 0,
	0, 0, 921, 0, 0, 0, 1551, 0, 0, 0,
	1557, 0, 0, 0, 0, 0, 1512, 0, 3654, 3654,
	3654, 214, 0, 1484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3675, 0, 0, 2939, 0, 1201, 0, 0, 0, 0,
	0, 0, 0, 0, 1483, 0, 0, 0, 1103, 0,
	0, 0, 0, 1503, 0, 0, 0, 0, 0, 0,
	0, 1500, 0, 0, 0, 1103, 0, 0, 2951, 0,
	0, 3654, 0, 0, 0, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1099, 0, 0, 0, 1099, 0, 1213,
	0, 0, 2955, 1213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3102, 0, 3102, 0, 0,
	1506, 1507, 1508, 1509, 212, 0, 0, 0, 212, 0,
	1489, 0, 0, 212, 0, 0, 0, 1639, 0, 1642,
	0, 89, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 212, 1213, 212, 0, 212, 0, 0, 0, 0,
	0, 1511, 1513, 0, 0, 0, 0, 0, 3654, 3771,
	635, 0, 0, 0, 0, 0, 3775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1103, 0,
	1498, 1499, 1213, 212, 0, 0, 1213, 0, 0, 0,
	1213, 0, 0, 0, 0, 636, 654, 0, 0, 0,
	1213, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 0, 0, 0, 212, 0, 0, 212, 637,
	0, 0, 638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 661,
	0, 0, 0, 1213, 0, 639, 0, 619, 212, 0,
	212, 0, 212, 0, 212, 659, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1103, 0, 640, 1103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 214, 1510,
	0, 0, 0, 0, 641, 0, 214, 642, 663, 0,
	0, 0, 606, 214, 0, 0, 0, 1505, 0, 1103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1103, 1103, 1103, 0, 0, 3149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1103, 0, 0, 0,
	3159, 214, 1103, 0, 0, 0, 0, 0, 0, 662,
	0, 0, 0, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 0, 1103, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 3201, 0,
	0, 0, 0, 0, 646, 1501, 1497, 0, 1494, 1492,
	1493, 1485, 1486, 1487, 1488, 1490, 1491, 0, 0, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 0,
	847, 0, 847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 605, 0, 0, 0, 0, 0, 0, 0, 1037,
	0, 655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 648, 1037, 0, 0, 0, 1103,
	0, 1103, 0, 0, 0, 0, 0, 0, 0, 212,
	0, 0, 0, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 649, 0, 1099, 666, 0,
	665, 0, 0, 650, 0, 0, 612, 0, 0, 0,
	0, 612, 0, 0, 0, 0, 651, 0, 0, 0,
	214, 658, 0, 1213, 0, 0, 667, 0, 664, 0,
	1103, 214, 214, 0, 607, 1103, 0, 0, 0, 0,
	0, 0, 0, 0, 1099, 829, 0, 0, 829, 829,
	0, 1100, 0, 0, 0, 1100, 0, 1214, 214, 0,
	0, 1214, 1103, 214, 0, 0, 0, 1103, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2430, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2099, 0, 0, 0, 0, 1103, 0,
	1214, 0, 0, 212, 0, 2430, 0, 847, 0, 0,
	3354, 0, 0, 0, 212, 0, 0, 0, 1551, 0,
	0, 0, 1551, 0, 0, 0, 0, 212, 1103, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1214, 212, 0, 0, 1214, 0, 0, 0, 1214, 0,
	0, 0, 619, 0, 0, 0, 0, 0, 1214, 0,
	0, 0, 1213, 1213, 0, 1103, 0, 0, 0, 0,
	1099, 0, 0, 0, 0, 0, 0, 1103, 212, 0,
	0, 0, 0, 0, 0, 212, 214, 0, 0, 0,
	1024, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1214, 0, 0, 0, 0, 1642, 0, 0, 0,
	0, 0, 212, 0, 0, 212, 0, 212, 0, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	0, 0, 0, 3428, 0, 0, 0, 1103, 212, 0,
	1103, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1481,
	1482, 0, 0, 1213, 0, 1213, 0, 1213, 0, 212,
	212, 212, 212, 0, 212, 1213, 212, 0, 1213, 1512,
	0, 0, 0, 0, 0, 0, 1484, 0, 0, 0,
	0, 1213, 1213, 1213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3508, 1201, 0, 212, 0, 0,
	0, 612, 0, 0, 0, 212, 0, 1483, 0, 0,
	0, 0, 0, 0, 0, 0, 1503, 89, 0, 0,
	0, 0, 0, 0, 1500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 1103, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 1103, 1103, 0,
	0, 0, 0, 1103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2579, 0, 0, 89, 0,
	89, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 1507, 1508, 1509, 0, 1099, 0,
	0, 3566, 214, 1489, 1103, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 89, 0,
	0, 89, 0, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 1511, 1513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 0, 1100, 0, 0, 0, 3608,
	0, 0, 0, 1498, 1499, 0, 0, 0, 0, 0,
	3625, 1481, 1482, 0, 1514, 1515, 1516, 1524, 1525, 1526,
	0, 1214, 0, 1099, 0, 0, 0, 3637, 0, 1504,
	1517, 1512, 0, 0, 0, 0, 0, 0, 1484, 0,
	0, 0, 1100, 1530, 0, 0, 89, 0, 0, 0,
	0, 1037, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1037, 0, 0, 1483,
	0, 0, 0, 0, 0, 0, 0, 0, 1503, 0,
	0, 0, 0, 0, 0, 0, 1500, 0, 0, 0,
	1099, 0, 0, 0, 0, 0, 1641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 0, 0, 0, 1099, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 1506, 1507, 1508, 1509, 0,
	0, 0, 2099, 0, 0, 1489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1214, 1214, 0, 1551, 0, 212, 212, 212, 1100, 1521,
	0, 0, 1531, 0, 1641, 0, 1511, 1513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 0,
	0, 0, 1481, 1482, 1213, 0, 1527, 0, 1528, 0,
	0, 0, 0, 0, 0, 1498, 1499, 0, 0, 0,
	0, 0, 1512, 0, 0, 0, 0, 0, 0, 1484,
	0, 1519, 0, 0, 1099, 0, 0, 0, 212, 0,
	0, 1504, 212, 0, 0, 0, 0, 0, 1501, 1497,
	0, 1494, 1492, 1493, 1485, 1486, 1487, 1488, 1490, 1491,
	1483, 0, 1529, 0, 0, 0, 1037, 0, 0, 1503,
	0, 0, 0, 0, 0, 0, 0, 1500, 0, 1518,
	0, 0, 0, 0, 0, 0, 1099, 212, 212, 0,
	1213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1214, 1024, 1214, 0, 1214, 0, 0, 0, 0,
	212, 0, 0, 1214, 0, 0, 1214, 1024, 2572, 0,
	0, 0, 0, 0, 1510, 0, 0, 0, 0, 1214,
	1214, 1214, 0, 0, 0, 0, 1506, 1507, 1508, 1509,
	0, 0, 1505, 0, 0, 0, 1489, 0, 0, 0,
	0, 0, 0, 0, 0, 212, 0, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 1213,
	1213, 0, 1213, 0, 0, 0, 0, 1511, 1513, 0,
	0, 0, 0, 0, 1213, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1498, 1499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	89, 0, 0, 89, 0, 0, 0, 0, 0, 0,
	0, 0, 1504, 0, 0, 0, 1100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 89, 1520, 0, 89, 1495, 1496, 1502, 1523,
	1501, 1497, 0, 1494, 1492, 1493, 1485, 1486, 1487, 1488,
	1490, 1491, 0, 0, 0, 0, 2121, 0, 0, 0,
	2122, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 0, 1024, 0, 0,
	847, 1100, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1505, 1037, 1037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 89, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1481, 1482, 0, 1514, 1515, 1516, 1524, 1525, 1526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1100, 1517,
	1512, 0, 0, 0, 0, 0, 0, 1484, 0, 0,
	0, 0, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1483, 0,
	0, 0, 0, 0, 0, 0, 0, 1503, 0, 0,
	0, 0, 0, 0, 0, 1500, 0, 0, 0, 0,
	0, 1501, 1497, 0, 1494, 1492, 1493, 1485, 1486, 1487,
	1488, 1490, 1491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 0,
	0, 0, 0, 0, 0, 212, 1099, 0, 0, 0,
	0, 0, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1214, 0, 1506, 1507, 1508, 1509, 0, 0,
	0, 0, 0, 1037, 1489, 0, 0, 0, 1099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1100, 0, 0, 1099, 0, 0, 1521, 0,
	0, 1531, 0, 0, 0, 1511, 1513, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1527, 0, 1528, 0, 0,
	89, 0, 0, 0, 1498, 1499, 0, 0, 0, 0,
	0, 0, 0, 0, 1100, 1024, 1024, 0, 1214, 0,
	1519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 0,
	1099, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1213, 0, 0, 0, 0, 0, 0, 0, 0,
	1099, 0, 0, 0, 0, 0, 0, 1214, 1214, 0,
	1214, 0, 0, 0, 0, 1213, 1037, 0, 0, 0,
	0, 0, 1214, 1510, 1037, 0, 1213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1641, 0, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 0, 0,
	0, 0, 0, 0, 0, 0, 1213, 1213, 0, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1024, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 0,
	0, 0, 212, 0, 0, 0, 0, 1099, 0, 0,
	1099, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1520, 0, 0, 1495, 1496, 1502, 1523, 1501,
	1497, 0, 1494, 1492, 1493, 1485, 1486, 1487, 1488, 1490,
	1491, 0, 0, 0, 0, 0, 0, 0, 0, 3244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1099, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1099, 0,
	0, 0, 0, 0, 1481, 1482, 0, 1514, 1515, 1516,
	1524, 1525, 1526, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1517, 1512, 0, 0, 0, 0, 0,
	0, 1484, 0, 0, 0, 212, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1024, 0, 0,
	0, 0, 0, 0, 0, 1024, 0, 0, 0, 0,
	0, 0, 1483, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 0, 0, 0, 0, 0, 0, 0, 1500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1099, 0, 0, 0, 0, 212, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 1100, 89, 1506, 1507,
	1508, 1509, 0, 0, 0, 0, 0, 89, 1489, 0,
	0, 0, 0, 1100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 0, 1521, 0, 0, 1531, 0, 0, 0, 1511,
	1513, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1527,
	0, 1528, 0, 0, 0, 0, 0, 0, 1498, 1499,
	0, 0, 0, 0, 0, 1213, 0, 0, 1213, 0,
	0, 0, 0, 212, 1519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1213, 0, 0, 1529, 0, 0, 1100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1214,
	0, 0, 1518, 0, 0, 0, 0, 0, 1100, 0,
	0, 212, 0, 1213, 1213, 1213, 0, 0, 0, 0,
	0, 0, 212, 1214, 0, 0, 0, 0, 0, 1213,
	0, 0, 0, 0, 1214, 1099, 0, 0, 0, 212,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1099, 0, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1214, 1214, 0, 0, 0, 0,
	2099, 1522, 0, 1481, 1482, 0, 1514, 1515, 1516, 1524,
	1525, 1526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1517, 1512, 0, 0, 0, 0, 0, 0,
	1484, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1100, 0, 0, 1100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1483, 0, 0, 0, 0, 0, 0, 0, 0,
	1503, 0, 0, 0, 0, 0, 0, 0, 1500, 0,
	0, 0, 1099, 0, 1099, 0, 1520, 0, 0, 1495,
	1496, 1502, 1523, 1501, 1497, 0, 1494, 1492, 1493, 1485,
	1486, 1487, 1488, 1490, 1491, 0, 0, 0, 0, 0,
	0, 0, 0, 2969, 0, 0, 0, 0, 0, 1100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1100, 1506, 1507, 1508,
	1509, 0, 0, 1099, 0, 0, 0, 1489, 1099, 0,
	0, 0, 0, 0, 0, 0, 0, 1481, 1482, 0,
	1514, 1515, 1516, 1524, 1525, 1526, 0, 0, 0, 0,
	0, 1521, 0, 0, 1531, 1099, 1517, 1512, 1511, 1513,
	1213, 0, 0, 0, 1484, 0, 0, 0, 0, 1530,
	0, 0, 0, 89, 0, 0, 89, 0, 1527, 0,
	1528, 0, 0, 0, 0, 0, 0, 1498, 1499, 0,
	0, 0, 0, 0, 0, 1483, 0, 0, 0, 0,
	0, 1099, 0, 1519, 1503, 0, 0, 0, 0, 0,
	0, 0, 1500, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1099, 0, 0, 1529, 0, 0, 0, 0, 1100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1099, 0,
	0, 1506, 1507, 1508, 1509, 0, 0, 0, 0, 0,
	1099, 1489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 0, 0, 1531, 0,
	0, 0, 1511, 1513, 1505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1527, 1214, 1528, 0, 1214, 0, 0, 0,
	1522, 1498, 1499, 0, 0, 0, 0, 0, 0, 0,
	1099, 0, 0, 1213, 0, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1504, 0, 0,
	1214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1214, 1214, 1214, 0, 1518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1214, 0, 0,
	0, 0, 0, 1100, 0, 1520, 0, 0, 1495, 1496,
	1502, 1523, 1501, 1497, 0, 1494, 1492, 1493, 1485, 1486,
	1487, 1488, 1490, 1491, 0, 1100, 0, 0, 0, 0,
	1510, 0, 2649, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1481, 1482, 1505, 1514,
	1515, 1516, 1524, 1525, 1526, 0, 0, 0, 0, 0,
	1213, 0, 0, 0, 0, 1517, 1512, 0, 0, 0,
	1213, 1213, 0, 1484, 1522, 0, 1213, 0, 1530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1483, 0, 0, 0, 0, 0,
	0, 0, 0, 1503, 0, 0, 0, 1099, 0, 0,
	0, 1500, 0, 0, 0, 0, 0, 1481, 1482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1100, 0, 1100, 0, 0, 0, 0, 1512, 0, 0,
	0, 0, 0, 0, 1484, 0, 0, 0, 0, 1520,
	0, 0, 1495, 1496, 1502, 1523, 1501, 1497, 0, 1494,
	1492, 1493, 1485, 1486, 1487, 1488, 1490, 1491, 0, 0,
	1506, 1507, 1508, 1509, 0, 1483, 2648, 0, 0, 0,
	1489, 0, 0, 0, 1503, 0, 0, 0, 0, 0,
	0, 1100, 1500, 0, 0, 0, 1100, 0, 0, 0,
	0, 0, 0, 0, 1521, 0, 0, 1531, 0, 0,
	0, 1511, 1513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1100, 0, 0, 0, 0, 1214, 0,
	0, 1527, 0, 1528, 0, 0, 0, 0, 0, 0,
	1498, 1499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 1507, 1508, 1509, 0, 1519, 0, 0, 0,
	0, 1489, 0, 0, 0, 0, 1504, 0, 0, 1100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1529, 0, 0,
	0, 0, 1511, 1513, 0, 0, 0, 0, 0, 1100,
	0, 0, 0, 0, 1518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1498, 1499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1504, 1100, 1510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1100, 0,
	0, 1214, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1520, 0,
	0, 1495, 1496, 1502, 1523, 1501, 1497, 0, 1494, 1492,
	1493, 1485, 1486, 1487, 1488, 1490, 1491, 0, 0, 0,
	0, 0, 0, 0, 0, 2645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1214, 1214,
	0, 0, 0, 0, 1214, 0, 1501, 1497, 0, 1494,
	1492, 1493, 1485, 1486, 1487, 1488, 1490, 1491, 1097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 223, 224, 225, 226,
	1104, 227, 1105, 1106, 1107, 1100, 1108, 492, 1109, 1110,
	1111, 1112, 228, 230, 229, 231, 232, 493, 494, 233,
	495, 236, 234, 235, 496, 1113, 237, 238, 239, 240,
	241, 242, 243, 1114, 1115, 244, 497, 498, 499, 1116,
	245, 246, 500, 1117, 1102, 1118, 247, 248, 249, 250,
	251, 252, 0, 1119, 254, 255, 256, 253, 1120, 257,
	0, 258, 259, 260, 1121, 261, 974, 262, 263, 1122,
	1123, 1125, 1124, 1126, 1127, 1128, 264, 265, 266, 267,
	268, 269, 501, 502, 1129, 270, 271, 1130, 273, 272,
	1131, 274, 1132, 1133, 275, 276, 277, 1134, 278, 1135,
	279, 280, 1136, 281, 503, 282, 283, 285, 287, 284,
	288, 289, 290, 291, 504, 505, 1137, 219, 1138, 0,
	0, 0, 0, 292, 293, 294, 506, 295, 296, 0,
	297, 1139, 298, 1140, 1141, 975, 299, 300, 1142, 301,
	507, 1143, 508, 302, 1144, 303, 304, 305, 306, 509,
	510, 511, 361, 977, 307, 308, 1145, 309, 310, 312,
	0, 0, 220, 311, 313, 320, 1146, 976, 314, 512,
	316, 315, 317, 318, 319, 513, 1147, 514, 1148, 321,
	978, 515, 979, 322, 323, 324, 980, 325, 326, 0,
	0, 327, 328, 329, 330, 331, 1149, 333, 332, 1150,
	334, 516, 981, 335, 336, 982, 1151, 337, 338, 1152,
	1153, 339, 340, 341, 342, 0, 343, 344, 346, 348,
	345, 347, 349, 351, 352, 350, 983, 353, 354, 357,
	358, 356, 984, 355, 1154, 221, 985, 359, 1155, 517,
	360, 518, 362, 363, 1156, 364, 365, 366, 1157, 1158,
	368, 369, 370, 1159, 1160, 371, 372, 519, 986, 373,
	987, 520, 374, 367, 375, 376, 377, 378, 379, 380,
	381, 1161, 382, 383, 521, 384, 522, 385, 386, 1162,
	387, 0, 388, 389, 390, 391, 392, 393, 394, 523,
	395, 396, 1163, 397, 398, 399, 400, 401, 0, 403,
	404, 405, 402, 406, 407, 408, 409, 1164, 410, 988,
	411, 412, 413, 414, 524, 415, 0, 416, 420, 421,
	422, 423, 424, 425, 426, 1165, 432, 433, 427, 429,
	430, 431, 428, 434, 435, 436, 1166, 437, 417, 418,
	438, 439, 989, 440, 441, 525, 442, 443, 1167, 444,
	445, 446, 447, 419, 448, 452, 453, 449, 450, 451,
	526, 1168, 455, 456, 454, 1169, 457, 458, 459, 460,
	461, 286, 462, 1170, 463, 527, 528, 529, 530, 1171,
	470, 1172, 464, 465, 531, 466, 532, 1173, 467, 468,
	469, 0, 471, 472, 1174, 1175, 473, 474, 475, 477,
	478, 476, 480, 1176, 481, 1177, 479, 482, 483, 484,
	533, 534, 535, 1178, 486, 485, 536, 1179, 1180, 1181,
	1182, 487, 488, 537, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1097,
	0, 0, 0, 0, 0, 0, 0, 2252, 0, 0,
	0, 0, 0, 0, 0, 2253, 222, 223, 224, 225,
	226, 1104, 227, 1105, 1106, 1107, 0, 1108, 492, 1109,
	1110, 1111, 1112, 228, 230, 229, 231, 232, 493, 494,
	233, 495, 236, 234, 235, 496, 1113, 237, 238, 239,
	240, 241, 242, 243, 1114, 1115, 244, 497, 498, 499,
	1116, 245, 246, 500, 1117, 1102, 1118, 247, 248, 249,
	250, 251, 252, 0, 1119, 254, 255, 256, 253, 1120,
	257, 0, 258, 259, 260, 1121, 261, 974, 262, 263,
	1122, 1123, 1125, 1124, 1126, 1127, 1128, 264, 265, 266,
	267, 268, 269, 501, 502, 1129, 270, 271, 1130, 273,
	272, 1131, 274, 1132, 1133, 275, 276, 277, 1134, 278,
	1135, 279, 280, 1136, 281, 503, 282, 283, 285, 287,
	284, 288, 289, 290, 291, 504, 505, 1137, 219, 1138,
	0, 0, 0, 0, 292, 293, 294, 506, 295, 296,
	0, 297, 1139, 298, 1140, 1141, 975, 299, 300, 1142,
	301, 507, 1143, 508, 302, 1144, 303, 304, 305, 306,
	509, 510, 511, 361, 977, 307, 308, 1145, 309, 310,
	312, 0, 0, 220, 311, 313, 320, 1146, 976, 314,
	512, 316, 315, 317, 318, 319, 513, 1147, 514, 1148,
	321, 978, 515, 979, 322, 323, 324, 980, 325, 326,
	0, 0, 327, 328, 329, 330, 331, 1149, 333, 332,
	1150, 334, 516, 981, 335, 336, 982, 1151, 337, 338,
	1152, 1153, 339, 340, 341, 342, 0, 343, 344, 346,
	348, 345, 347, 349, 351, 352, 350, 983, 353, 354,
	357, 358, 356, 984, 355, 1154, 221, 985, 359, 1155,
	517, 360, 518, 362, 363, 1156, 364, 365, 366, 1157,
	1158, 368, 369, 370, 1159, 1160, 371, 372, 519, 986,
	373, 987, 520, 374, 367, 375, 376, 377, 378, 379,
	380, 381, 1161, 382, 383, 521, 384, 522, 385, 386,
	1162, 387, 0, 388, 389, 390, 391, 392, 393, 394,
	523, 395, 396, 1163, 397, 398, 399, 400, 401, 0,
	403, 404, 405, 402, 406, 407, 408, 409, 1164, 410,
	988, 411, 412, 413, 414, 524, 415, 0, 416, 420,
	421, 422, 423, 424, 425, 426, 1165, 432, 433, 427,
	429, 430, 431, 428, 434, 435, 436, 1166, 437, 417,
	418, 438, 439, 989, 440, 441, 525, 442, 443, 1167,
	444, 445, 446, 447, 419, 448, 452, 453, 449, 450,
	451, 526, 1168, 455, 456, 454, 1169, 457, 458, 459,
	460, 461, 286, 462, 1170, 463, 527, 528, 529, 530,
	1171, 470, 1172, 464, 465, 531, 466, 532, 1173, 467,
	468, 469, 0, 471, 472, 1174, 1175, 473, 474, 475,
	477, 478, 476, 480, 1176, 481, 1177, 479, 482, 483,
	484, 533, 534, 535, 1178, 486, 485, 536, 1179, 1180,
	1181, 1182, 487, 488, 537, 489, 490, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1097, 0,
	0, 0, 0, 2977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2979, 222, 223, 224, 225, 226,
	1104, 227, 1105, 1106, 1107, 0, 1108, 492, 1109, 1110,
	1111, 1112, 228, 230, 229, 231, 232, 493, 494, 233,
	495, 236, 234, 235, 496, 1113, 237, 238, 239, 240,
	241, 242, 243, 1114, 1115, 244, 497, 498, 499, 1116,
	245, 246, 500, 1117, 1102, 1118, 247, 248, 249, 250,
	251, 252, 0, 1119, 254, 255, 256, 253, 1120, 257,
	0, 258, 259, 260, 1121, 261, 974, 262, 263, 1122,
	1123, 1125, 1124, 1126, 1127, 1128, 264, 265, 266, 267,
	268, 269, 501, 502, 1129, 270, 271, 1130, 273, 272,
	1131, 274, 1132, 1133, 275, 276, 277, 1134, 278, 1135,
	279, 280, 1136, 281, 503, 282, 283, 285, 287, 284,
	288, 289, 290, 291, 504, 505, 1137, 219, 1138, 0,
	0, 0, 0, 292, 293, 294, 506, 295, 296, 0,
	297, 1139, 298, 1140, 1141, 975, 299, 300, 1142, 301,
	507, 1143, 508, 302, 1144, 303, 304, 305, 306, 509,
	510, 511, 361, 977, 307, 308, 1145, 309, 310, 312,
	0, 0, 220, 311, 313, 320, 1146, 976, 314, 512,
	316, 315, 317, 318, 319, 513, 1147, 514, 1148, 321,
	978, 515, 979, 322, 323, 324, 980, 325, 326, 0,
	0, 327, 328, 329, 330, 331, 1149, 333, 332, 1150,
	334, 516, 981, 335, 336, 982, 1151, 337, 338, 1152,
	1153, 339, 340, 341, 342, 0, 343, 344, 346, 348,
	345, 347, 349, 351, 352, 350, 983, 353, 354, 357,
	358, 356, 984, 355, 1154, 221, 985, 359, 1155, 517,
	360, 518, 362, 363, 1156, 364, 365, 366, 1157, 1158,
	368, 369, 370, 1159, 1160, 371, 372, 519, 986, 373,
	987, 520, 374, 367, 375, 376, 377, 378, 379, 380,
	381, 1161, 382, 383, 521, 384, 522, 385, 386, 1162,
	387, 0, 388, 389, 390, 391, 392, 393, 394, 523,
	395, 396, 1163, 397, 398, 399, 400, 401, 0, 403,
	404, 405, 402, 406, 407, 408, 409, 1164, 410, 988,
	411, 412, 413, 414, 524, 415, 0, 416, 420, 421,
	422, 423, 424, 425, 426, 1165, 432, 433, 427, 429,
	430, 431, 428, 434, 435, 436, 1166, 437, 417, 418,
	438, 439, 989, 440, 441, 525, 442, 443, 1167, 444,
	445, 446, 447, 419, 448, 452, 453, 449, 450, 451,
	526, 1168, 455, 456, 454, 1169, 457, 458, 459, 460,
	461, 286, 462, 1170, 463, 527, 528, 529, 530, 1171,
	470, 1172, 464, 465, 531, 466, 532, 1173, 467, 468,
	469, 0, 471, 472, 1174, 1175, 473, 474, 475, 477,
	478, 476, 480, 1176, 481, 1177, 479, 482, 483, 484,
	533, 534, 535, 1178, 486, 485, 536, 1179, 1180, 1181,
	1182, 487, 488, 537, 489, 490, 491, 0, 0, 0,
	0, 1097, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3268, 222, 223,
	224, 225, 226, 1104, 227, 1105, 1106, 1107, 0, 1108,
	492, 1109, 1110, 1111, 1112, 228, 230, 229, 231, 232,
	493, 494, 233, 495, 236, 234, 235, 496, 1113, 237,
	238, 239, 240, 241, 242, 243, 1114, 1115, 244, 497,
	498, 499, 1116, 245, 246, 500, 1117, 1102, 1118, 247,
	248, 249, 250, 251, 252, 0, 1119, 254, 255, 256,
	253, 1120, 257, 0, 258, 259, 260, 1121, 261, 974,
	262, 263, 1122, 1123, 1125, 1124, 1126, 1127, 1128, 264,
	265, 266, 267, 268, 269, 501, 502, 1129, 270, 271,
	1130, 273, 272, 1131, 274, 1132, 1133, 275, 276, 277,
	1134, 278, 1135, 279, 280, 1136, 281, 503, 282, 283,
	285, 287, 284, 288, 289, 290, 291, 504, 505, 1137,
	219, 1138, 0, 0, 0, 0, 292, 293, 294, 506,
	295, 296, 0, 297, 1139, 298, 1140, 1141, 975, 299,
	300, 1142, 301, 507, 1143, 508, 302, 1144, 303, 304,
	305, 306, 509, 510, 511, 361, 977, 307, 308, 1145,
	309, 310, 312, 0, 0, 220, 311, 313, 320, 1146,
	976, 314, 512, 316, 315, 317, 318, 319, 513, 1147,
	514, 1148, 321, 978, 515, 979, 322, 323, 324, 980,
	325, 326, 0, 0, 327, 328, 329, 330, 331, 1149,
	333, 332, 1150, 334, 516, 981, 335, 336, 982, 1151,
	337, 338, 1152, 1153, 339, 340, 341, 342, 0, 343,
	344, 346, 348, 345, 347, 349, 351, 352, 350, 983,
	353, 354, 357, 358, 356, 984, 355, 1154, 221, 985,
	359, 1155, 517, 360, 518, 362, 363, 1156, 364, 365,
	366, 1157, 1158, 368, 369, 370, 1159, 1160, 371, 372,
	519, 986, 373, 987, 520, 374, 367, 375, 376, 377,
	378, 379, 380, 381, 1161, 382, 383, 521, 384, 522,
	385, 386, 1162, 387, 0, 388, 389, 390, 391, 392,
	393, 394, 523, 395, 396, 1163, 397, 398, 399, 400,
	401, 0, 403, 404, 405, 402, 406, 407, 408, 409,
	1164, 410, 988, 411, 412, 413, 414, 524, 415, 0,
	416, 420, 421, 422, 423, 424, 425, 426, 1165, 432,
	433, 427, 429, 430, 431, 428, 434, 435, 436, 1166,
	437, 417, 418, 438, 439, 989, 440, 441, 525, 442,
	443, 1167, 444, 445, 446, 447, 419, 448, 452, 453,
	449, 450, 451, 526, 1168, 455, 456, 454, 1169, 457,
	458, 459, 460, 461, 286, 462, 1170, 463, 527, 528,
	529, 530, 1171, 470, 1172, 464, 465, 531, 466, 532,
	1173, 467, 468, 469, 0, 471, 472, 1174, 1175, 473,
	474, 475, 477, 478, 476, 480, 1176, 481, 1177, 479,
	482, 483, 484, 533, 534, 535, 1178, 486, 485, 536,
	1179, 1180, 1181, 1182, 487, 488, 537, 489, 490, 491,
	1097, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3396, 0, 222, 223, 224,
	225, 226, 1104, 227, 1105, 1106, 1107, 0, 1108, 492,
	1109, 1110, 1111, 1112, 228, 230, 229, 231, 232, 493,
	494, 233, 495, 236, 234, 235, 496, 1113, 237, 238,
	239, 240, 241, 242, 243, 1114, 1115, 244, 497, 498,
	499, 1116, 245, 246, 500, 1117, 1102, 1118, 247, 248,
	249, 250, 251, 252, 0, 1119, 254, 255, 256, 253,
	1120, 257, 0, 258, 259, 260, 1121, 261, 974, 262,
	263, 1122, 1123, 1125, 1124, 1126, 1127, 1128, 264, 265,
	266, 267, 268, 269, 501, 502, 1129, 270, 271, 1130,
	273, 272, 1131, 274, 1132, 1133, 275, 276, 277, 1134,
	278, 1135, 279, 280, 1136, 281, 503, 282, 283, 285,
	287, 284, 288, 289, 290, 291, 504, 505, 1137, 219,
	1138, 0, 0, 0, 0, 292, 293, 294, 506, 295,
	296, 0, 297, 1139, 298, 1140, 1141, 975, 299, 300,
	1142, 301, 507, 1143, 508, 302, 1144, 303, 304, 305,
	306, 509, 510, 511, 361, 977, 307, 308, 1145, 309,
	310, 312, 0, 0, 220, 311, 313, 320, 1146, 976,
	314, 512, 316, 315, 317, 318, 319, 513, 1147, 514,
	1148, 321, 978, 515, 979, 322, 323, 324, 980, 325,
	326, 0, 0, 327, 328, 329, 330, 331, 1149, 333,
	332, 1150, 334, 516, 981, 335, 336, 982, 1151, 337,
	338, 1152, 1153, 339, 340, 341, 342, 0, 343, 344,
	346, 348, 345, 347, 349, 351, 352, 350, 983, 353,
	354, 357, 358, 356, 984, 355, 1154, 221, 985, 359,
	1155, 517, 360, 518, 362, 363, 1156, 364, 365, 366,
	1157, 1158, 368, 369, 370, 1159, 1160, 371, 372, 519,
	986, 373, 987, 520, 374, 367, 375, 376, 377, 378,
	379, 380, 381, 1161, 382, 383, 521, 384, 522, 385,
	386, 1162, 387, 0, 388, 389, 390, 391, 392, 393,
	394, 523, 395, 396, 1163, 397, 398, 399, 400, 401,
	0, 403, 404, 405, 402, 406, 407, 408, 409, 1164,
	410, 988, 411, 412, 413, 414, 524, 415, 0, 416,
	420, 421, 422, 423, 424, 425, 426, 1165, 432, 433,
	427, 429, 430, 431, 428, 434, 435, 436, 1166, 437,
	417, 418, 438, 439, 989, 440, 441, 525, 442, 443,
	1167, 444, 445, 446, 447, 419, 448, 452, 453, 449,
	450, 451, 526, 1168, 455, 456, 454, 1169, 457, 458,
	459, 460, 461, 286, 462, 1170, 463, 527, 528, 529,
	530, 1171, 470, 1172, 464, 465, 531, 466, 532, 1173,
	467, 468, 469, 0, 471, 472, 1174, 1175, 473, 474,
	475, 477, 478, 476, 480, 1176, 481, 1177, 479, 482,
	483, 484, 533, 534, 535, 1178, 486, 485, 536, 1179,
	1180, 1181, 1182, 487, 488, 537, 489, 490, 491, 1097,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3321, 0, 222, 223, 224, 225,
	226, 1104, 227, 1105, 1106, 1107, 0, 1108, 492, 1109,
	1110, 1111, 1112, 228, 230, 229, 231, 232, 493, 494,
	233, 495, 236, 234, 235, 496, 1113, 237, 238, 239,
	240, 241, 242, 243, 1114, 1115, 244, 497, 498, 499,
	1116, 245, 246, 500, 1117, 1102, 1118, 247, 248, 249,
	250, 251, 252, 0, 1119, 254, 255, 256, 253, 1120,
	257, 0, 258, 259, 260, 1121, 261, 974, 262, 263,
	1122, 1123, 1125, 1124, 1126, 1127, 1128, 264, 265, 266,
	267, 268, 269, 501, 502, 1129, 270, 271, 1130, 273,
	272, 1131, 274, 1132, 1133, 275, 276, 277, 1134, 278,
	1135, 279, 280, 1136, 281, 503, 282, 283, 285, 287,
	284, 288, 289, 290, 291, 504, 505, 1137, 219, 1138,
	0, 0, 0, 0, 292, 293, 294, 506, 295, 296,
	0, 297, 1139, 298, 1140, 1141, 975, 299, 300, 1142,
	301, 507, 1143, 508, 302, 1144, 303, 304, 305, 306,
	509, 510, 511, 361, 977, 307, 308, 1145, 309, 310,
	312, 0, 0, 220, 311, 313, 320, 1146, 976, 314,
	512, 316, 315, 317, 318, 319, 513, 1147, 514, 1148,
	321, 978, 515, 979, 322, 323, 324, 980, 325, 326,
	0, 0, 327, 328, 329, 330, 331, 1149, 333, 332,
	1150, 334, 516, 981, 335, 336, 982, 1151, 337, 338,
	1152, 1153, 339, 340, 341, 342, 0, 343, 344, 346,
	348, 345, 347, 349, 351, 352, 350, 983, 353, 354,
	357, 358, 356, 984, 355, 1154, 221, 985, 359, 1155,
	517, 360, 518, 362, 363, 1156, 364, 365, 366, 1157,
	1158, 368, 369, 370, 1159, 1160, 371, 372, 519, 986,
	373, 987, 520, 374, 367, 375, 376, 377, 378, 379,
	380, 381, 1161, 382, 383, 521, 384, 522, 385, 386,
	1162, 387, 0, 388, 389, 390, 391, 392, 393, 394,
	523, 395, 396, 1163, 397, 398, 399, 400, 401, 0,
	403, 404, 405, 402, 406, 407, 408, 409, 1164, 410,
	988, 411, 412, 413, 414, 524, 415, 0, 416, 420,
	421, 422, 423, 424, 425, 426, 1165, 432, 433, 427,
	429, 430, 431, 428, 434, 435, 436, 1166, 437, 417,
	418, 438, 439, 989, 440, 441, 525, 442, 443, 1167,
	444, 445, 446, 447, 419, 448, 452, 453, 449, 450,
	451, 526, 1168, 455, 456, 454, 1169, 457, 458, 459,
	460, 461, 286, 462, 1170, 463, 527, 528, 529, 530,
	1171, 470, 1172, 464, 465, 531, 466, 532, 1173, 467,
	468, 469, 0, 471, 472, 1174, 1175, 473, 474, 475,
	477, 478, 476, 480, 1176, 481, 1177, 479, 482, 483,
	484, 533, 534, 535, 1178, 486, 485, 536, 1179, 1180,
	1181, 1182, 487, 488, 537, 489, 490, 491, 1097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3202, 0, 222, 223, 224, 225, 226,
	1104, 227, 1105, 1106, 1107, 0, 1108, 492, 1109, 1110,
	1111, 1112, 228, 230, 229, 231, 232, 493, 494, 233,
	495, 236, 234, 235, 496, 1113, 237, 238, 239, 240,
	241, 242, 243, 1114, 1115, 244, 497, 498, 499, 1116,
	245, 246, 500, 1117, 1102, 1118, 247, 248, 249, 250,
	251, 252, 0, 1119, 254, 255, 256, 253, 1120, 257,
	0, 258, 259, 260, 1121, 261, 974, 262, 263, 1122,
	1123, 1125, 1124, 1126, 1127, 1128, 264, 265, 266, 267,
	268, 269, 501, 502, 1129, 270, 271, 1130, 273, 272,
	1131, 274, 1132, 1133, 275, 276, 277, 1134, 278, 1135,
	279, 280, 1136, 281, 503, 282, 283, 285, 287, 284,
	288, 289, 290, 291, 504, 505, 1137, 219, 1138, 0,
	0, 0, 0, 292, 293, 294, 506, 295, 296, 0,
	297, 1139, 298, 1140, 1141, 975, 299, 300, 1142, 301,
	507, 1143, 508, 302, 1144, 303, 304, 305, 306, 509,
	510, 511, 361, 977, 307, 308, 1145, 309, 310, 312,
	0, 0, 220, 311, 313, 320, 1146, 976, 314, 512,
	316, 315, 317, 318, 319, 513, 1147, 514, 1148, 321,
	978, 515, 979, 322, 323, 324, 980, 325, 326, 0,
	0, 327, 328, 329, 330, 331, 1149, 333, 332, 1150,
	334, 516, 981, 335, 336, 982, 1151, 337, 338, 1152,
	1153, 339, 340, 341, 342, 0, 343, 344, 346, 348,
	345, 347, 349, 351, 352, 350, 983, 353, 354, 357,
	358, 356, 984, 355, 1154, 221, 985, 359, 1155, 517,
	360, 518, 362, 363, 1156, 364, 365, 366, 1157, 1158,
	368, 369, 370, 1159, 1160, 371, 372, 519, 986, 373,
	987, 520, 374, 367, 375, 376, 377, 378, 379, 380,
	381, 1161, 382, 383, 521, 384, 522, 385, 386, 1162,
	387, 0, 388, 389, 390, 391, 392, 393, 394, 523,
	395, 396, 1163, 397, 398, 399, 400, 401, 0, 403,
	404, 405, 402, 406, 407, 408, 409, 1164, 410, 988,
	411, 412, 413, 414, 524, 415, 0, 416, 420, 421,
	422, 423, 424, 425, 426, 1165, 432, 433, 427, 429,
	430, 431, 428, 434, 435, 436, 1166, 437, 417, 418,
	438, 439, 989, 440, 441, 525, 442, 443, 1167, 444,
	445, 446, 447, 419, 448, 452, 453, 449, 450, 451,
	526, 1168, 455, 456, 454, 1169, 457, 458, 459, 460,
	461, 286, 462, 1170, 463, 527, 528, 529, 530, 1171,
	470, 1172, 464, 465, 531, 466, 532, 1173, 467, 468,
	469, 0, 471, 472, 1174, 1175, 473, 474, 475, 477,
	478, 476, 480, 1176, 481, 1177, 479, 482, 483, 484,
	533, 534, 535, 1178, 486, 485, 536, 1179, 1180, 1181,
	1182, 487, 488, 537, 489, 490, 491, 1097, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2995, 0, 222, 223, 224, 225, 226, 1104,
	227, 1105, 1106, 1107, 0, 1108, 492, 1109, 1110, 1111,
	1112, 228, 230, 229, 231, 232, 493, 494, 233, 495,
	236, 234, 235, 496, 1113, 237, 238, 239, 240, 241,
	242, 243, 1114, 1115, 244, 497, 498, 499, 1116, 245,
	246, 500, 1117, 1102, 1118, 247, 248, 249, 250, 251,
	252, 0, 1119, 254, 255, 256, 253, 1120, 257, 0,
	258, 259, 260, 1121, 261, 974, 262, 263, 1122, 1123,
	1125, 1124, 1126, 1127, 1128, 264, 265, 266, 267, 268,
	269, 501, 502, 1129, 270, 271, 1130, 273, 272, 1131,
	274, 1132, 1133, 275, 276, 277, 1134, 278, 1135, 279,
	280, 1136, 281, 503, 282, 283, 285, 287, 284, 288,
	289, 290, 291, 504, 505, 1137, 219, 1138, 0, 0,
	0, 0, 292, 293, 294, 506, 295, 296, 0, 297,
	1139, 298, 1140, 1141, 975, 299, 300, 1142, 301, 507,
	1143, 508, 302, 1144, 303, 304, 305, 306, 509, 510,
	511, 361, 977, 307, 308, 1145, 309, 310, 312, 0,
	0, 220, 311, 313, 320, 1146, 976, 314, 512, 316,
	315, 317, 318, 319, 513, 1147, 514, 1148, 321, 978,
	515, 979, 322, 323, 324, 980, 325, 326, 0, 0,
	327, 328, 329, 330, 331, 1149, 333, 332, 1150, 334,
	516, 981, 335, 336, 982, 1151, 337, 338, 1152, 1153,
	339, 340, 341, 342, 0, 343, 344, 346, 348, 345,
	347, 349, 351, 352, 350, 983, 353, 354, 357, 358,
	356, 984, 355, 1154, 221, 985, 359, 1155, 517, 360,
	518, 362, 363, 1156, 364, 365, 366, 1157, 1158, 368,
	369, 370, 1159, 1160, 371, 372, 519, 986, 373, 987,
	520, 374, 367, 375, 376, 377, 378, 379, 380, 381,
	1161, 382, 383, 521, 384, 522, 385, 386, 1162, 387,
	0, 388, 389, 390, 391, 392, 393, 394, 523, 395,
	396, 1163, 397, 398, 399, 400, 401, 0, 403, 404,
	405, 402, 406, 407, 408, 409, 1164, 410, 988, 411,
	412, 413, 414, 524, 415, 0, 416, 420, 421, 422,
	423, 424, 425, 426, 1165, 432, 433, 427, 429, 430,
	431, 428, 434, 435, 436, 1166, 437, 417, 418, 438,
	439, 989, 440, 441, 525, 442, 443, 1167, 444, 445,
	446, 447, 419, 448, 452, 453, 449, 450, 451, 526,
	1168, 455, 456, 454, 1169, 457, 458, 459, 460, 461,
	286, 462, 1170, 463, 527, 528, 529, 530, 1171, 470,
	1172, 464, 465, 531, 466, 532, 1173, 467, 468, 469,
	0, 471, 472, 1174, 1175, 473, 474, 475, 477, 478,
	476, 480, 1176, 481, 1177, 479, 482, 483, 484, 533,
	534, 535, 1178, 486, 485, 536, 1179, 1180, 1181, 1182,
	487, 488, 537, 489, 490, 491, 1097, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2845, 0, 222, 223, 224, 225, 226, 1104, 227,
	1105, 1106, 1107, 0, 1108, 492, 1109, 1110, 1111, 1112,
	228, 230, 229, 231, 232, 493, 494, 233, 495, 236,
	234, 235, 496, 1113, 237, 238, 239, 240, 241, 242,
	243, 1114, 1115, 244, 497, 498, 499, 1116, 245, 246,
	500, 1117, 1102, 1118, 247, 248, 249, 250, 251, 252,
	0, 1119, 254, 255, 256, 253, 1120, 257, 0, 258,
	259, 260, 1121, 261, 974, 262, 263, 1122, 1123, 1125,
	1124, 1126, 1127, 1128, 264, 265, 266, 267, 268, 269,
	501, 502, 1129, 270, 271, 1130, 273, 272, 1131, 274,
	1132, 1133, 275, 276, 277, 1134, 278, 1135, 279, 280,
	1136, 281, 503, 282, 283, 285, 287, 284, 288, 289,
	290, 291, 504, 505, 1137, 219, 1138, 0, 0, 0,
	0, 292, 293, 294, 506, 295, 296, 0, 297, 1139,
	298, 1140, 1141, 975, 299, 300, 1142, 301, 507, 1143,
	508, 302, 1144, 303, 304, 305, 306, 509, 510, 511,
	361, 977, 307, 308, 1145, 309, 310, 312, 0, 0,
	220, 311, 313, 320, 1146, 976, 314, 512, 316, 315,
	317, 318, 319, 513, 1147, 514, 1148, 321, 978, 515,
	979, 322, 323, 324, 980, 325, 326, 0, 0, 327,
	328, 329, 330, 331, 1149, 333, 332, 1150, 334, 516,
	981, 335, 336, 982, 1151, 337, 338, 1152, 1153, 339,
	340, 341, 342, 0, 343, 344, 346, 348, 345, 347,
	349, 351, 352, 350, 983, 353, 354, 357, 358, 356,
	984, 355, 1154, 221, 985, 359, 1155, 517, 360, 518,
	362, 363, 1156, 364, 365, 366, 1157, 1158, 368, 369,
	370, 1159, 1160, 371, 372, 519, 986, 373, 987, 520,
	374, 367, 375, 376, 377, 378, 379, 380, 381, 1161,
	382, 383, 521, 384, 522, 385, 386, 1162, 387, 0,
	388, 389, 390, 391, 392, 393, 394, 523, 395, 396,
	1163, 397, 398, 399, 400, 401, 0, 403, 404, 405,
	402, 406, 407, 408, 409, 1164, 410, 988, 411, 412,
	413, 414, 524, 415, 0, 416, 420, 421, 422, 423,
	424, 425, 426, 1165, 432, 433, 427, 429, 430, 431,
	428, 434, 435, 436, 1166, 437, 417, 418, 438, 439,
	989, 440, 441, 525, 442, 443, 1167, 444, 445, 446,
	447, 419, 448, 452, 453, 449, 450, 451, 526, 1168,
	455, 456, 454, 1169, 457, 458, 459, 460, 461, 286,
	462, 1170, 463, 527, 528, 529, 530, 1171, 470, 1172,
	464, 465, 531, 466, 532, 1173, 467, 468, 469, 0,
	471, 472, 1174, 1175, 473, 474, 475, 477, 478, 476,
	480, 1176, 481, 1177, 479, 482, 483, 484, 533, 534,
	535, 1178, 486, 485, 536, 1179, 1180, 1181, 1182, 487,
	488, 537, 489, 490, 491, 1097, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2145, 0, 222, 223, 224, 225, 226, 1104, 227, 1105,
	1106, 1107, 0, 1108, 492, 1109, 1110, 1111, 1112, 228,
	230, 229, 231, 232, 493, 494, 233, 495, 236, 234,
	235, 496, 1113, 237, 238, 239, 240, 241, 242, 243,
	1114, 1115, 244, 497, 498, 499, 1116, 245, 246, 500,
	1117, 1102, 1118, 247, 248, 249, 250, 251, 252, 0,
	1119, 254, 255, 256, 253, 1120, 257, 0, 258, 259,
	260, 1121, 261, 974, 262, 263, 1122, 1123, 1125, 1124,
	1126, 1127, 1128, 264, 265, 266, 267, 268, 269, 501,
	502, 1129, 270, 271, 1130, 273, 272, 1131, 274, 1132,
	1133, 275, 276, 277, 1134, 278, 1135, 279, 280, 1136,
	281, 503, 282, 283, 285, 287, 284, 288, 289, 290,
	291, 504, 505, 1137, 219, 1138, 0, 0, 0, 0,
	292, 293, 294, 506, 295, 296, 0, 297, 1139, 298,
	1140, 1141, 975, 299, 300, 1142, 301, 507, 1143, 508,
	302, 1144, 303, 304, 305, 306, 509, 510, 511, 361,
	977, 307, 308, 1145, 309, 310, 312, 0, 0, 220,
	311, 313, 320, 1146, 976, 314, 512, 316, 315, 317,
	318, 319, 513, 1147, 514, 1148, 321, 978, 515, 979,
	322, 323, 324, 980, 325, 326, 0, 0, 327, 328,
	329, 330, 331, 1149, 333, 332, 1150, 334, 516, 981,
	335, 336, 982, 1151, 337, 338, 1152, 1153, 339, 340,
	341, 342, 0, 343, 344, 346, 348, 345, 347, 349,
	351, 352, 350, 983, 353, 354, 357, 358, 356, 984,
	355, 1154, 221, 985, 359, 1155, 517, 360, 518, 362,
	363, 1156, 364, 365, 366, 1157, 1158, 368, 369, 370,
	1159, 1160, 371, 372, 519, 986, 373, 987, 520, 374,
	367, 375, 376, 377, 378, 379, 380, 381, 1161, 382,
	383, 521, 384, 522, 385, 386, 1162, 387, 0, 388,
	389, 390, 391, 392, 393, 394, 523, 395, 396, 1163,
	397, 398, 399, 400, 401, 0, 403, 404, 405, 402,
	406, 407, 408, 409, 1164, 410, 988, 411, 412, 413,
	414, 524, 415, 0, 416, 420, 421, 422, 423, 424,
	425, 426, 1165, 432, 433, 427, 429, 430, 431, 428,
	434, 435, 436, 1166, 437, 417, 418, 438, 439, 989,
	440, 441, 525, 442, 443, 1167, 444, 445, 446, 447,
	419, 448, 452, 453, 449, 450, 451, 526, 1168, 455,
	456, 454, 1169, 457, 458, 459, 460, 461, 286, 462,
	1170, 463, 527, 528, 529, 530, 1171, 470, 1172, 464,
	465, 531, 466, 532, 1173, 467, 468, 469, 0, 471,
	472, 1174, 1175, 473, 474, 475, 477, 478, 476, 480,
	1176, 481, 1177, 479, 482, 483, 484, 533, 534, 535,
	1178, 486, 485, 536, 1179, 1180, 1181, 1182, 487, 488,
	537, 489, 490, 491, 1195, 0, 1097, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	0, 0, 0, 222, 223, 224, 225, 226, 1104, 227,
	1105, 1106, 1107, 0, 1108, 492, 1109, 1110, 1111, 1112,
	228, 230, 229, 231, 232, 493, 494, 233, 495, 236,
	234, 235, 496, 1113, 237, 238, 239, 240, 241, 242,
	243, 1114, 1115, 244, 497, 498, 499, 1116, 245, 246,
	500, 1117, 1102, 1118, 247, 248, 249, 250, 251, 252,
	0, 1119, 254, 255, 256, 253, 1120, 257, 0, 258,
	259, 260, 1121, 261, 974, 262, 263, 1122, 1123, 1125,
	1124, 1126, 1127, 1128, 264, 265, 266, 267, 268, 269,
	501, 502, 1129, 270, 271, 1130, 273, 272, 1131, 274,
	1132, 1133, 275, 276, 277, 1134, 278, 1135, 279, 280,
	1136, 281, 503, 282, 283, 285, 287, 284, 288, 289,
	290, 291, 504, 505, 1137, 219, 1138, 0, 0, 0,
	0, 292, 293, 294, 506, 295, 296, 0, 297, 1139,
	298, 1140, 1141, 975, 299, 300, 1142, 301, 507, 1143,
	508, 302, 1144, 303, 304, 305, 306, 509, 510, 511,
	361, 977, 307, 308, 1145, 309, 310, 312, 0, 0,
	220, 311, 313, 320, 1146, 976, 314, 512, 316, 315,
	317, 318, 319, 513, 1147, 514, 1148, 321, 978, 515,
	979, 322, 323, 324, 980, 325, 326, 0, 0, 327,
	328, 329, 330, 331, 1149, 333, 332, 1150, 334, 516,
	981, 335, 336, 982, 1151, 337, 338, 1152, 1153, 339,
	340, 341, 342, 0, 343, 344, 346, 348, 345, 347,
	349, 351, 352, 350, 983, 353, 354, 357, 358, 356,
	984, 355, 1154, 221, 985, 359, 1155, 517, 360, 518,
	362, 363, 1156, 364, 365, 366, 1157, 1158, 368, 369,
	370, 1159, 1160, 371, 372, 519, 986, 373, 987, 520,
	374, 367, 375, 376, 377, 378, 379, 380, 381, 1161,
	382, 383, 521, 384, 522, 385, 386, 1162, 387, 0,
	388, 389, 390, 391, 392, 393, 394, 523, 395, 396,
	1163, 397, 398, 399, 400, 401, 0, 403, 404, 405,
	402, 406, 407, 408, 409, 1164, 410, 988, 411, 412,
	413, 414, 524, 415, 0, 416, 420, 421, 422, 423,
	424, 425, 426, 1165, 432, 433, 427, 429, 430, 431,
	428, 434, 435, 436, 1166, 437, 417, 418, 438, 439,
	989, 440, 441, 525, 442, 443, 1167, 444, 445, 446,
	447, 419, 448, 452, 453, 449, 450, 451, 526, 1168,
	455, 456, 454, 1169, 457, 458, 459, 460, 461, 286,
	462, 1170, 463, 527, 528, 529, 530, 1171, 470, 1172,
	464, 465, 531, 466, 532, 1173, 467, 468, 469, 0,
	471, 472, 1174, 1175, 473, 474, 475, 477, 478, 476,
	480, 1176, 481, 1177, 479, 482, 483, 484, 533, 534,
	535, 1178, 486, 485, 536, 1179, 1180, 1181, 1182, 487,
	488, 537, 489, 490, 491, 1094, 0, 1097, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 223, 224, 225, 226, 1104,
	227, 1105, 1106, 1107, 0, 1108, 492, 1109, 1110, 1111,
	1112, 228, 230, 229, 231, 232, 493, 494, 233, 495,
	236, 234, 235, 496, 1113, 237, 238, 239, 240, 241,
	242, 243, 1114, 1115, 244, 497, 498, 499, 1116, 245,
	246, 500, 1117, 1102, 1118, 247, 248, 249, 250, 251,
	252, 0, 1119, 254, 255, 256, 253, 1120, 257, 0,
	258, 259, 260, 1121, 261, 974, 262, 263, 1122, 1123,
	1125, 1124, 1126, 1127, 1128, 264, 265, 266, 267, 268,
	269, 501, 502, 1129, 270, 271, 1130, 273, 272, 1131,
	274, 1132, 1133, 275, 276, 277, 1134, 278, 1135, 279,
	280, 1136, 281, 503, 282, 283, 285, 287, 284, 288,
	289, 290, 291, 504, 505, 1137, 219, 1138, 0, 0,
	0, 0, 292, 293, 294, 506, 295, 296, 0, 297,
	1139, 298, 1140, 1141, 975, 299, 300, 1142, 301, 507,
	1143, 508, 302, 1144, 303, 304, 305, 306, 509, 510,
	511, 361, 977, 307, 308, 1145, 309, 310, 312, 0,
	0, 220, 311, 313, 320, 1146, 976, 314, 512, 316,
	315, 317, 318, 319, 513, 1147, 514, 1148, 321, 978,
	515, 979, 322, 323, 324, 980, 325, 326, 0, 0,
	327, 328, 329, 330, 331, 1149, 333, 332, 1150, 334,
	516, 981, 335, 336, 982, 1151, 337, 338, 1152, 1153,
	339, 340, 341, 342, 0, 343, 344, 346, 348, 345,
	347, 349, 351, 352, 350, 983, 353, 354, 357, 358,
	356, 984, 355, 1154, 221, 985, 359, 1155, 517, 360,
	518, 362, 363, 1156, 364, 365, 366, 1157, 1158, 368,
	369, 370, 1159, 1160, 371, 372, 519, 986, 373, 987,
	520, 374, 367, 375, 376, 377, 378, 379, 380, 381,
	1161, 382, 383, 521, 384, 522, 385, 386, 1162, 387,
	0, 388, 389, 390, 391, 392, 393, 394, 523, 395,
	396, 1163, 397, 398, 399, 400, 401, 0, 403, 404,
	405, 402, 406, 407, 408, 409, 1164, 410, 988, 411,
	412, 413, 414, 524, 415, 0, 416, 420, 421, 422,
	423, 424, 425, 426, 1165, 432, 433, 427, 429, 430,
	431, 428, 434, 435, 436, 1166, 437, 417, 418, 438,
	439, 989, 440, 441, 525, 442, 443, 1167, 444, 445,
	446, 447, 419, 448, 452, 453, 449, 450, 451, 526,
	1168, 455, 456, 454, 1169, 457, 458, 459, 460, 461,
	286, 462, 1170, 463, 527, 528, 529, 530, 1171, 470,
	1172, 464, 465, 531, 466, 532, 1173, 467, 468, 469,
	0, 471, 472, 1174, 1175, 473, 474, 475, 477, 478,
	476, 480, 1176, 481, 1177, 479, 482, 483, 484, 533,
	534, 535, 1178, 486, 485, 536, 1179, 1180, 1181, 1182,
	487, 488, 537, 489, 490, 491, 1097, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 223, 224, 225, 226, 1104, 227,
	1105, 1106, 1107, 0, 1108, 492, 1109, 1110, 1111, 1112,
	228, 230, 229, 231, 232, 493, 494, 233, 495, 236,
	234, 235, 496, 1113, 237, 238, 239, 240, 241, 242,
	243, 1114, 1115, 244, 497, 498, 499, 1116, 245, 246,
	500, 1117, 1102, 1118, 247, 248, 249, 250, 251, 252,
	0, 1119, 254, 255, 256, 253, 1120, 257, 0, 258,
	259, 260, 1121, 261, 974, 262, 263, 1122, 1123, 1125,
	1124, 1126, 1127, 1128, 264, 265, 266, 267, 268, 269,
	501, 502, 1129, 270, 271, 1130, 273, 272, 1131, 274,
	1132, 1133, 275, 276, 277, 1134, 278, 1135, 279, 280,
	1136, 281, 503, 282, 283, 285, 287, 284, 288, 289,
	290, 291, 504, 505, 1137, 219, 1138, 0, 0, 0,
	0, 292, 293, 294, 506, 295, 296, 0, 297, 1139,
	298, 1140, 1141, 975, 299, 300, 1142, 301, 507, 1143,
	508, 302, 1144, 303, 304, 305, 306, 509, 510, 511,
	361, 977, 307, 308, 1145, 309, 310, 312, 0, 0,
	220, 311, 313, 320, 1146, 976, 314, 512, 316, 315,
	317, 318, 319, 513, 1147, 514, 1148, 321, 978, 515,
	979, 322, 323, 324, 980, 325, 326, 0, 0, 327,
	328, 329, 330, 331, 1149, 333, 332, 1150, 334, 516,
	981, 335, 336, 982, 1151, 337, 338, 1152, 1153, 339,
	340, 341, 342, 0, 343, 344, 346, 348, 345, 347,
	349, 351, 352, 350, 983, 353, 354, 357, 358, 356,
	984, 355, 1154, 221, 985, 359, 1155, 517, 360, 518,
	362, 363, 1156, 364, 365, 366, 1157, 1158, 368, 369,
	370, 1159, 1160, 371, 372, 519, 986, 373, 987, 520,
	374, 367, 375, 376, 377, 378, 379, 380, 381, 1161,
	382, 383, 521, 384, 522, 385, 386, 1162, 387, 0,
	388, 389, 390, 391, 392, 393, 394, 523, 395, 396,
	1163, 397, 398, 399, 400, 401, 0, 403, 404, 405,
	402, 406, 407, 408, 409, 1164, 410, 988, 411, 412,
	413, 414, 524, 415, 0, 416, 420, 421, 422, 423,
	424, 425, 426, 1165, 432, 433, 427, 429, 430, 431,
	428, 434, 435, 436, 1166, 437, 417, 418, 438, 439,
	989, 440, 441, 525, 442, 443, 1167, 444, 445, 446,
	447, 419, 448, 452, 453, 449, 450, 451, 526, 1168,
	455, 456, 454, 1169, 457, 458, 459, 460, 461, 286,
	462, 1170, 463, 527, 528, 529, 530, 1171, 470, 1172,
	464, 465, 531, 466, 532, 1173, 467, 468, 469, 0,
	471, 472, 1174, 1175, 473, 474, 475, 477, 478, 476,
	480, 1176, 481, 1177, 479, 482, 483, 484, 533, 534,
	535, 1178, 486, 485, 536, 1179, 1180, 1181, 1182, 487,
	488, 537, 489, 490, 491, 2120, 0, 914, 872, 873,
	874, 870, 871, 883, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 223, 224, 225, 226, 2117,
	227, 0, 0, 0, 0, 0, 965, 888, 0, 0,
	0, 228, 230, 229, 231, 232, 493, 929, 908, 940,
	236, 898, 939, 938, 0, 237, 238, 900, 899, 241,
	242, 243, 890, 964, 244, 1001, 1002, 499, 0, 245,
	246, 971, 0, 952, 0, 247, 248, 249, 250, 251,
	252, 0, 0, 254, 255, 256, 253, 0, 257, 0,
	258, 259, 260, 0, 261, 974, 262, 263, 955, 953,
	954, 961, 957, 956, 960, 264, 265, 266, 267, 943,
	269, 936, 935, 861, 270, 271, 0, 273, 272, 0,
	274, 2118, 0, 275, 934, 277, 0, 278, 0, 279,
	280, 0, 281, 867, 282, 283, 285, 287, 284, 288,
	289, 290, 291, 992, 993, 879, 219, 0, 0, 0,
	0, 0, 292, 293, 294, 933, 931, 932, 0, 297,
	0, 298, 0, 0, 975, 299, 300, 0, 301, 999,
	0, 889, 302, 0, 303, 304, 305, 306, 966, 967,
	970, 361, 977, 307, 308, 0, 309, 310, 910, 0,
	0, 220, 311, 313, 320, 0, 976, 314, 922, 913,
	924, 926, 927, 928, 923, 0, 915, 0, 321, 978,
	968, 979, 322, 323, 324, 980, 948, 949, 0, 0,
	327, 328, 329, 330, 331, 0, 333, 332, 0, 334,
	1000, 981, 335, 336, 982, 0, 337, 338, 959, 958,
	339, 340, 341, 342, 0, 343, 344, 346, 348, 345,
	347, 349, 351, 902, 350, 983, 353, 354, 357, 358,
	356, 984, 355, 858, 221, 985, 359, 880, 969, 360,
	937, 362, 363, 0, 911, 365, 912, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 519, 986, 373, 987,
	994, 374, 367, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 383, 995, 384, 522, 385, 386, 0, 387,
	0, 388, 389, 390, 391, 392, 393, 394, 930, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 403, 404,
	405, 402, 406, 407, 408, 409, 0, 410, 988, 411,
	412, 413, 414, 868, 415, 0, 416, 420, 421, 422,
	423, 424, 425, 426, 0, 432, 433, 903, 904, 906,
	907, 428, 434, 435, 436, 962, 437, 417, 418, 438,
	439, 989, 440, 441, 925, 905, 443, 0, 444, 445,
	446, 447, 419, 448, 452, 973, 449, 450, 451, 996,
	0, 455, 456, 454, 0, 457, 458, 459, 460, 461,
	286, 901, 0, 463, 944, 945, 946, 947, 0, 470,
	0, 464, 465, 997, 466, 998, 878, 467, 468, 469,
	0, 471, 472, 0, 862, 473, 474, 475, 477, 478,
	476, 480, 963, 481, 0, 909, 482, 483, 484, 533,
	941, 991, 2116, 486, 485, 536, 0, 0, 0, 0,
	487, 488, 537, 489, 490, 491, 859, 0, 0, 0,
	0, 0, 857, 0, 0, 0, 0, 0, 0, 855,
	856, 2119, 0, 0, 0, 0, 0, 0, 884, 2115,
	0, 848, 882, 914, 872, 873, 874, 870, 871, 883,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 223, 224, 225, 226, 0, 227, 0, 0, 0,
	0, 0, 965, 888, 0, 0, 0, 228, 230, 229,
	231, 232, 493, 929, 908, 940, 236, 898, 939, 938,
	0, 237, 238, 900, 899, 241, 242, 243, 890, 964,
	244, 1001, 1002, 499, 0, 245, 246, 971, 0, 952,
	0, 247, 248, 249, 250, 251, 252, 0, 0, 254,
	255, 256, 253, 0, 257, 0, 258, 259, 260, 0,
	261, 974, 262, 263, 955, 953, 954, 961, 957, 956,
	960, 264, 265, 266, 267, 943, 269, 936, 935, 861,
	270, 271, 0, 273, 272, 0, 274, 0, 0, 275,
	934, 277, 0, 278, 0, 279, 280, 0, 281, 867,
	282, 283, 285, 287, 284, 288, 289, 290, 291, 992,
	993, 879, 219, 0, 0, 0, 0, 0, 292, 293,
	294, 933, 931, 932, 0, 297, 0, 298, 0, 0,
	975, 299, 300, 0, 301, 999, 0, 889, 302, 0,
	303, 304, 305, 306, 966, 967, 970, 361, 977, 307,
	308, 0, 309, 310, 910, 0, 0, 220, 311, 313,
	320, 0, 976, 314, 922, 913, 924, 926, 927, 928,
	923, 0, 915, 0, 321, 978, 968, 979, 322, 323,
	324, 980, 948, 949, 0, 0, 327, 328, 329, 330,
	331, 0, 333, 332, 0, 334, 1000, 981, 335, 336,
	982, 0, 337, 338, 959, 958, 339, 340, 341, 342,
	0, 343, 344, 346, 348, 345, 347, 349, 351, 902,
	350, 983, 353, 354, 357, 358, 356, 984, 355, 858,
	221, 985, 359, 880, 969, 360, 937, 362, 363, 0,
	911, 365, 912, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 519, 986, 373, 987, 994, 374, 367, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 383, 995,
	384, 522, 385, 386, 0, 387, 0, 388, 389, 390,
	391, 392, 393, 394, 930, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 403, 404, 405, 402, 406, 407,
	408, 409, 0, 410, 988, 411, 412, 413, 414, 868,
	415, 0, 416, 420, 421, 422, 423, 424, 425, 426,
	185, 432, 433, 903, 904, 906, 907, 428, 434, 435,
	436, 962, 437, 417, 418, 438, 439, 989, 440, 441,
	925, 905, 443, 0, 444, 445, 446, 447, 419, 448,
	452, 973, 449, 450, 451, 996, 0, 455, 456, 454,
	187, 457, 458, 459, 460, 461, 286, 901, 0, 463,
	944, 945, 946, 947, 0, 470, 0, 464, 465, 997,
	466, 998, 878, 467, 468, 469, 0, 471, 472, 0,
	862, 473, 474, 475, 477, 478, 476, 480, 963, 481,
	0, 909, 482, 483, 484, 1346, 941, 991, 0, 486,
	485, 536, 0, 0, 0, 179, 487, 488, 537, 489,
	490, 491, 859, 180, 0, 0, 0, 0, 857, 0,
	0, 0, 0, 0, 0, 855, 856, 914, 872, 873,
	874, 870, 871, 883, 1556, 1554, 0, 0, 882, 0,
	0, 0, 0, 0, 222, 223, 224, 225, 226, 0,
	227, 0, 0, 0, 0, 0, 965, 888, 0, 0,
	0, 228, 230, 229, 231, 232, 493, 929, 908, 940,
	236, 898, 939, 938, 0, 237, 238, 900, 899, 241,
	242, 243, 890, 964, 244, 1001, 1002, 499, 0, 245,
	246, 971, 0, 952, 0, 247, 248, 249, 250, 251,
	252, 0, 0, 254, 255, 256, 253, 0, 257, 0,
	258, 259, 260, 0, 261, 974, 262, 263, 955, 953,
	954, 961, 957, 956, 960, 264, 265, 266, 267, 943,
	269, 936, 935, 861, 270, 271, 0, 273, 272, 0,
	274, 0, 0, 275, 934, 277, 0, 278, 0, 279,
	280, 0, 281, 867, 282, 283, 285, 287, 284, 288,
	289, 290, 291, 992, 993, 879, 219, 0, 0, 0,
	0, 0, 292, 293, 294, 933, 931, 932, 0, 297,
	0, 298, 0, 0, 975, 299, 300, 0, 301, 999,
	0, 889, 302, 0, 303, 304, 305, 306, 966, 967,
	970, 361, 977, 307, 308, 0, 309, 310, 910, 0,
	0, 220, 311, 313, 320, 0, 976, 314, 922, 913,
	924, 926, 927, 928, 923, 0, 915, 0, 321, 978,
	968, 979, 322, 323, 324, 980, 948, 949, 0, 0,
	327, 328, 329, 330, 331, 0, 333, 332, 0, 334,
	1000, 981, 335, 336, 982, 0, 337, 338, 959, 958,
	339, 340, 341, 342, 0, 343, 344, 346, 348, 345,
	347, 349, 351, 902, 350, 983, 353, 354, 357, 358,
	356, 984, 355, 858, 221, 985, 359, 880, 969, 360,
	937, 362, 363, 0, 911, 365, 912, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 519, 986, 373, 987,
	994, 374, 367, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 383, 995, 384, 522, 385, 386, 0, 387,
	0, 388, 389, 390, 391, 392, 393, 394, 930, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 403, 404,
	405, 402, 406, 407, 408, 409, 0, 410, 988, 411,
	412, 413, 414, 868, 415, 0, 416, 420, 421, 422,
	423, 424, 425, 426, 185, 432, 433, 903, 904, 906,
	907, 428, 434, 435, 436, 962, 437, 417, 418, 438,
	439, 989, 440, 441, 925, 905, 443, 0, 444, 445,
	446, 447, 419, 448, 452, 973, 449, 450, 451, 996,
	0, 455, 456, 454, 187, 457, 458, 459, 460, 461,
	286, 901, 0, 463, 944, 945, 946, 947, 0, 470,
	0, 464, 465, 997, 466, 998, 878, 467, 468, 469,
	0, 471, 472, 0, 862, 473, 474, 475, 477, 478,
	476, 480, 963, 481, 0, 909, 482, 483, 484, 1346,
	941, 991, 0, 486, 485, 536, 0, 0, 0, 179,
	487, 488, 537, 489, 490, 491, 859, 180, 0, 0,
	0, 0, 857, 0, 0, 0, 0, 0, 0, 855,
	856, 914, 872, 873, 874, 870, 871, 883, 1556, 2592,
	0, 0, 882, 0, 0, 0, 0, 0, 222, 223,
	224, 225, 226, 0, 227, 0, 0, 0, 0, 0,
	965, 888, 0, 0, 0, 228, 230, 229, 231, 232,
	493, 929, 908, 940, 236, 898, 939, 938, 0, 237,
	238, 900, 899, 241, 242, 243, 890, 964, 244, 1001,
	1002, 499, 0, 245, 246, 971, 0, 952, 0, 247,
	248, 249, 250, 251, 252, 0, 0, 254, 255, 256,
	253, 0, 257, 0, 258, 259, 260, 0, 261, 974,
	262, 263, 955, 953, 954, 961, 957, 956, 960, 264,
	265, 266, 267, 943, 269, 936, 935, 861, 270, 271,
	0, 273, 272, 0, 274, 0, 0, 275, 934, 277,
	0, 278, 0, 279, 280, 0, 281, 867, 282, 283,
	285, 287, 284, 288, 289, 290, 291, 992, 993, 879,
	219, 0, 0, 0, 0, 0, 292, 293, 294, 933,
	931, 932, 0, 297, 0, 298, 0, 0, 975, 299,
	300, 0, 301, 999, 0, 889, 302, 0, 303, 304,
	305, 306, 966, 967, 970, 361, 977, 307, 308, 0,
	309, 310, 910, 0, 0, 220, 311, 313, 320, 0,
	976, 314, 922, 913, 924, 926, 927, 928, 923, 0,
	915, 0, 321, 978, 968, 979, 322, 323, 324, 980,
	948, 949, 0, 0, 327, 328, 329, 330, 331, 0,
	333, 332, 0, 334, 1000, 981, 335, 336, 982, 0,
	337, 338, 959, 958, 339, 340, 341, 342, 0, 343,
	344, 346, 348, 345, 347, 349, 351, 902, 350, 983,
	353, 354, 357, 358, 356, 984, 355, 858, 221, 985,
	359, 880, 969, 360, 937, 362, 363, 0, 911, 365,
	912, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	519, 986, 373, 987, 994, 374, 367, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 383, 995, 384, 522,
	385, 386, 0, 387, 0, 388, 389, 390, 391, 392,
	393, 394, 930, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 403, 404, 405, 402, 406, 407, 408, 409,
	0, 410, 988, 411, 412, 413, 414, 868, 415, 0,
	416, 420, 421, 422, 423, 424, 425, 426, 185, 432,
	433, 903, 904, 906, 907, 428, 434, 435, 436, 962,
	437, 417, 418, 438, 439, 989, 440, 441, 925, 905,
	443, 0, 444, 445, 446, 447, 419, 448, 452, 973,
	449, 450, 451, 996, 0, 455, 456, 454, 187, 457,
	458, 459, 460, 461, 286, 901, 0, 463, 944, 945,
	946, 947, 0, 470, 0, 464, 465, 997, 466, 998,
	878, 467, 468, 469, 0, 471, 472, 0, 862, 473,
	474, 475, 477, 478, 476, 480, 963, 481, 0, 909,
	482, 483, 484, 1346, 941, 991, 0, 486, 485, 536,
	0, 0, 0, 179, 487, 488, 537, 489, 490, 491,
	859, 180, 0, 0, 0, 0, 857, 0, 0, 0,
	0, 0, 0, 855, 856, 914, 872, 873, 874, 870,
	871, 883, 1556, 1554, 0, 0, 882, 0, 0, 0,
	0, 0, 222, 223, 224, 225, 226, 0, 227, 0,
	0, 0, 0, 0, 965, 888, 0, 0, 0, 228,
	230, 229, 231, 232, 493, 929, 908, 940, 236, 898,
	939, 938, 2214, 237, 238, 900, 899, 241, 242, 243,
	890, 964, 244, 1001, 1002, 499, 0, 245, 246, 971,
	0, 952, 0, 247, 248, 249, 250, 251, 252, 0,
	0, 254, 255, 256, 253, 0, 257, 0, 258, 259,
	260, 0, 261, 974, 262, 263, 955, 953, 954, 961,
	957, 956, 960, 264, 265, 266, 267, 943, 269, 936,
	935, 861, 270, 271, 0, 273, 272, 0, 274, 0,
	0, 275, 934, 277, 0, 278, 0, 279, 280, 0,
	281, 867, 282, 283, 285, 287, 284, 288, 289, 290,
	291, 992, 993, 879, 219, 0, 0, 0, 0, 0,
	292, 293, 294, 933, 931, 932, 0, 297, 0, 298,
	0, 2219, 975, 299, 300, 0, 301, 999, 0, 889,
	302, 0, 303, 304, 305, 306, 966, 967, 970, 361,
	977, 307, 308, 0, 309, 310, 910, 0, 0, 220,
	311, 313, 320, 0, 976, 314, 922, 913, 924, 926,
	927, 928, 923, 0, 915, 0, 321, 978, 968, 979,
	322, 323, 324, 980, 948, 949, 0, 0, 327, 328,
	329, 330, 331, 0, 333, 332, 2215, 334, 1000, 981,
	335, 336, 982, 0, 337, 338, 959, 958, 339, 340,
	341, 342, 0, 343, 344, 346, 348, 345, 347, 349,
	351, 902, 350, 983, 353, 354, 357, 358, 356, 984,
	355, 858, 221, 985, 359, 880, 969, 360, 937, 362,
	363, 0, 911, 365, 912, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 519, 986, 373, 987, 994, 374,
	367, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	383, 995, 384, 522, 385, 386, 0, 387, 0, 388,
	389, 390, 391, 392, 393, 394, 930, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 403, 404, 405, 402,
	406, 407, 408, 409, 0, 410, 988, 411, 412, 413,
	414, 868, 415, 0, 416, 420, 421, 422, 423, 424,
	425, 426, 0, 432, 433, 903, 904, 906, 907, 428,
	434, 435, 436, 962, 437, 417, 418, 438, 439, 989,
	440, 441, 925, 905, 443, 0, 444, 445, 446, 447,
	419, 448, 452, 973, 449, 450, 451, 996, 0, 455,
	456, 454, 0, 457, 458, 459, 460, 461, 286, 901,
	0, 463, 944, 945, 946, 947, 0, 470, 2216, 464,
	465, 997, 466, 998, 878, 467, 468, 469, 0, 471,
	472, 0, 862, 473, 474, 475, 477, 478, 476, 480,
	963, 481, 0, 909, 482, 483, 484, 533, 941, 991,
	0, 486, 485, 536, 0, 0, 0, 0, 487, 488,
	537, 489, 490, 491, 859, 0, 0, 0, 0, 0,
	857, 0, 0, 0, 0, 0, 0, 855, 856, 0,
	0, 0, 0, 0, 0, 0, 884, 0, 0, 2173,
	882, 914, 872, 873, 874, 870, 871, 883, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 223,
	224, 225, 226, 0, 227, 0, 0, 0, 0, 0,
	965, 888, 0, 0, 0, 228, 230, 229, 231, 232,
	493, 929, 908, 940, 236, 898, 939, 938, 0, 237,
	238, 900, 899, 241, 242, 243, 890, 964, 244, 1001,
	1002, 499, 0, 245, 246, 971, 0, 952, 0, 247,
	248, 249, 250, 251, 252, 0, 0, 254, 255, 256,
	253, 0, 257, 0, 258, 259, 260, 0, 261, 974,
	262, 263, 955, 953, 954, 961, 957, 956, 960, 264,
	265, 266, 267, 943, 269, 936, 935, 861, 270, 271,
	0, 273, 272, 0, 274, 0, 0, 275, 934, 277,
	0, 278, 0, 279, 280, 0, 281, 867, 282, 283,
	285, 287, 284, 288, 289, 290, 291, 992, 993, 879,
	219, 0, 0, 0, 0, 0, 292, 293, 294, 933,
	931, 932, 0, 297, 0, 298, 0, 0, 975, 299,
	300, 0, 301, 999, 0, 889, 302, 0, 303, 304,
	305, 306, 966, 967, 970, 361, 977, 307, 308, 0,
	309, 310, 910, 0, 0, 220, 311, 313, 320, 0,
	976, 314, 922, 913, 924, 926, 927, 928, 923, 0,
	915, 0, 321, 978, 968, 979, 322, 323, 324, 980,
	948, 949, 0, 0, 327, 328, 329, 330, 331, 0,
	333, 332, 0, 334, 1000, 981, 335, 336, 982, 0,
	337, 338, 959, 958, 339, 340, 341, 342, 0, 343,
	344, 346, 348, 345, 347, 349, 351, 902, 350, 983,
	353, 354, 357, 358, 356, 984, 355, 858, 221, 985,
	359, 880, 969, 360, 937, 362, 363, 0, 911, 365,
	912, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	519, 986, 373, 987, 994, 374, 367, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 383, 995, 384, 522,
	385, 386, 0, 387, 0, 388, 389, 390, 391, 392,
	393, 394, 930, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 403, 404, 405, 402, 406, 407, 408, 409,
	0, 410, 988, 411, 412, 413, 414, 868, 415, 0,
	416, 420, 421, 422, 423, 424, 425, 426, 0, 432,
	433, 903, 904, 906, 907, 428, 434, 435, 436, 962,
	437, 417, 418, 438, 439, 989, 440, 441, 925, 905,
	443, 0, 444, 445, 446, 447, 419, 448, 452, 973,
	449, 450, 451, 996, 0, 455, 456, 454, 0, 457,
	458, 459, 460, 461, 286, 901, 0, 463, 944, 945,
	946, 947, 0, 470, 0, 464, 465, 997, 466, 998,
	878, 467, 468, 469, 0, 471, 472, 0, 862, 473,
	474, 475, 477, 478, 476, 480, 963, 481, 0, 909,
	482, 483, 484, 533, 941, 991, 0, 486, 485, 536,
	0, 0, 0, 0, 487, 488, 537, 489, 490, 491,
	859, 0, 0, 0, 0, 0, 857, 0, 0, 0,
	0, 0, 0, 855, 856, 0, 0, 0, 0, 0,
	0, 0, 884, 2171, 0, 2170, 882, 914, 872, 873,
	874, 870, 871, 883, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 223, 224, 225, 226, 0,
	227, 0, 0, 0, 0, 0, 965, 888, 0, 0,
	0, 228, 230, 229, 231, 232, 493, 929, 908, 940,
	236, 898, 939, 938, 0, 237, 238, 900, 899, 241,
	242, 243, 890, 964, 244, 1001, 1002, 499, 0, 245,
	246, 971, 0, 952, 0, 247, 248, 249, 250, 251,
	252, 0, 0, 254, 255, 256, 253, 0, 257, 0,
	258, 259, 260, 0, 261, 974, 262, 263, 955, 953,
	954, 961, 957, 956, 960, 264, 265, 266, 267, 943,
	269, 936, 935, 861, 270, 271, 0, 273, 272, 0,
	274, 0, 0, 275, 934, 277, 0, 278, 0, 279,
	280, 0, 281, 867, 282, 283, 285, 287, 284, 288,
	289, 290, 291, 992, 993, 879, 219, 0, 0, 0,
	0, 0, 292, 293, 294, 933, 931, 932, 0, 297,
	0, 298, 0, 0, 975, 299, 300, 0, 301, 999,
	0, 889, 302, 0, 303, 304, 305, 306, 966, 967,
	970, 361, 977, 307, 308, 0, 309, 310, 910, 0,
	0, 220, 311, 313, 320, 0, 976, 314, 922, 913,
	924, 926, 927, 928, 923, 0, 915, 0, 321, 978,
	968, 979, 322, 323, 324, 980, 948, 949, 0, 0,
	327, 328, 329, 330, 331, 0, 333, 332, 0, 334,
	1000, 981, 335, 336, 982, 0, 337, 338, 959, 958,
	339, 340, 341, 342, 0, 343, 344, 346, 348, 345,
	347, 349, 351, 902, 350, 983, 353, 354, 357, 358,
	356, 984, 355, 858, 221, 985, 359, 880, 969, 360,
	937, 362, 363, 0, 911, 365, 912, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 519, 986, 373, 987,
	994, 374, 367, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 383, 995, 384, 522, 385, 386, 0, 387,
	0, 388, 389, 390, 391, 392, 393, 394, 930, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 403, 404,
	405, 402, 406, 407, 408, 409, 0, 410, 988, 411,
	412, 413, 414, 868, 415, 0, 416, 420, 421, 422,
	423, 424, 425, 426, 0, 432, 433, 903, 904, 906,
	907, 428, 434, 435, 436, 962, 437, 417, 418, 438,
	439, 989, 440, 441, 925, 905, 443, 0, 444, 445,
	446, 447, 419, 448, 452, 973, 449, 450, 451, 996,
	0, 455, 456, 454, 0, 457, 458, 459, 460, 461,
	286, 901, 0, 463, 944, 945, 946, 947, 0, 470,
	0, 464, 465, 997, 466, 998, 878, 467, 468, 469,
	0, 471, 472, 0, 862, 473, 474, 475, 477, 478,
	476, 480, 963, 481, 0, 909, 482, 483, 484, 533,
	941, 991, 0, 486, 485, 536, 0, 0, 0, 0,
	487, 488, 537, 489, 490, 491, 859, 0, 0, 0,
	0, 0, 857, 0, 0, 0, 0, 0, 0, 855,
	856, 0, 0, 0, 0, 0, 0, 0, 884, 2168,
	0, 2167, 882, 914, 872, 873, 874, 870, 871, 883,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 223, 224, 225, 226, 0, 227, 0, 0, 0,
	0, 0, 965, 888, 0, 0, 0, 228, 230, 229,
	231, 232, 493, 929, 908, 940, 236, 898, 939, 938,
	0, 237, 238, 900, 899, 241, 242, 243, 890, 964,
	244, 1001, 1002, 499, 0, 245, 246, 971, 0, 952,
	0, 247, 248, 249, 250, 251, 252, 0, 0, 254,
	255, 256, 253, 0, 257, 0, 258, 259, 260, 0,
	261, 974, 262, 263, 955, 953, 954, 961, 957, 956,
	960, 264, 265, 266, 267, 943, 269, 936, 935, 861,
	270, 271, 0, 273, 272, 0, 274, 0, 0, 275,
	934, 277, 0, 278, 0, 279, 280, 0, 281, 867,
	282, 283, 285, 287, 284, 288, 289, 290, 291, 992,
	993, 879, 219, 0, 0, 0, 0, 0, 292, 293,
	294, 933, 931, 932, 0, 297, 0, 298, 0, 0,
	975, 299, 300, 0, 301, 999, 0, 889, 302, 0,
	303, 304, 305, 306, 966, 967, 970, 361, 977, 307,
	308, 0, 309, 310, 910, 0, 0, 220, 311, 313,
	320, 0, 976, 314, 922, 913, 924, 926, 927, 928,
	923, 0, 915, 0, 321, 978, 968, 979, 322, 323,
	324, 980, 948, 949, 0, 0, 327, 328, 329, 330,
	331, 0, 333, 332, 0, 334, 1000, 981, 335, 336,
	982, 0, 337, 338, 959, 958, 339, 340, 341, 342,
	0, 343, 344, 346, 348, 345, 347, 349, 351, 902,
	350, 983, 353, 354, 357, 358, 356, 984, 355, 858,
	221, 985, 359, 880, 969, 360, 937, 362, 363, 0,
	911, 365, 912, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 519, 986, 373, 987, 994, 374, 367, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 383, 995,
	384, 522, 385, 386, 0, 387, 0, 388, 389, 390,
	391, 392, 393, 394, 930, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 403, 404, 405, 402, 406, 407,
	408, 409, 0, 410, 988, 411, 412, 413, 414, 868,
	415, 0, 416, 420, 421, 422, 423, 424, 425, 426,
	0, 432, 433, 903, 904, 906, 907, 428, 434, 435,
	436, 962, 437, 417, 418, 438, 439, 989, 440, 441,
	925, 905, 443, 0, 444, 445, 446, 447, 419, 448,
	452, 973, 449, 450, 451, 996, 0, 455, 456, 454,
	0, 457, 458, 459, 460, 461, 286, 901, 0, 463,
	944, 945, 946, 947, 0, 470, 0, 464, 465, 997,
	466, 998, 878, 467, 468, 469, 0, 471, 472, 0,
	862, 473, 474, 475, 477, 478, 476, 480, 963, 481,
	0, 909, 482, 483, 484, 533, 941, 991, 0, 486,
	485, 536, 0, 0, 0, 0, 487, 488, 537, 489,
	490, 491, 859, 0, 0, 0, 0, 0, 857, 0,
	0, 0, 0, 0, 0, 855, 856, 0, 0, 0,
	0, 0, 0, 0, 884, 2165, 0, 2164, 882, 914,
	872, 873, 874, 870, 871, 883, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 223, 224, 225,
	226, 0, 227, 0, 0, 0, 0, 0, 965, 888,
	0, 0, 0, 228, 230, 229, 231, 232, 493, 929,
	908, 940, 236, 898, 939, 938, 0, 237, 238, 900,
	899, 241, 242, 243, 890, 964, 244, 1001, 1002, 499,
	0, 245, 246, 971, 0, 952, 0, 247, 248, 249,
	250, 251, 252, 0, 0, 254, 255, 256, 253, 0,
	257, 0, 258, 259, 260, 0, 261, 974, 262, 263,
	955, 953, 954, 961, 957, 956, 960, 264, 265, 266,
	267, 943, 269, 936, 935, 861, 270, 271, 0, 273,
	272, 0, 274, 0, 0, 275, 934, 277, 0, 278,
	0, 279, 280, 0, 281, 867, 282, 283, 285, 287,
	284, 288, 289, 290, 291, 992, 993, 879, 219, 0,
	0, 0, 0, 0, 292, 293, 294, 933, 931, 932,
	0, 297, 0, 298, 0, 0, 975, 299, 300, 0,
	301, 999, 0, 889, 302, 0, 303, 304, 305, 306,
	966, 967, 970, 361, 977, 307, 308, 0, 309, 310,
	910, 0, 0, 220, 311, 313, 320, 0, 976, 314,
	922, 913, 924, 926, 927, 928, 923, 0, 915, 0,
	321, 978, 968, 979, 322, 323, 324, 980, 948, 949,
	0, 0, 327, 328, 329, 330, 331, 0, 333, 332,
	0, 334, 1000, 981, 335, 336, 982, 0, 337, 338,
	959, 958, 339, 340, 341, 342, 0, 343, 344, 346,
	348, 345, 347, 349, 351, 902, 350, 983, 353, 354,
	357, 358, 356, 984, 355, 858, 221, 985, 359, 880,
	969, 360, 937, 362, 363, 0, 911, 365, 912, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 519, 986,
	373, 987, 994, 374, 367, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 383, 995, 384, 522, 385, 386,
	0, 387, 0, 388, 389, 390, 391, 392, 393, 394,
	930, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	403, 404, 405, 402, 406, 407, 408, 409, 0, 410,
	988, 411, 412, 413, 414, 868, 415, 0, 416, 420,
	421, 422, 423, 424, 425, 426, 0, 432, 433, 903,
	904, 906, 907, 428, 434, 435, 436, 962, 437, 417,
	418, 438, 439, 989, 440, 441, 925, 905, 443, 0,
	444, 445, 446, 447, 419, 448, 452, 973, 449, 450,
	451, 996, 0, 455, 456, 454, 0, 457, 458, 459,
	460, 461, 286, 901, 0, 463, 944, 945, 946, 947,
	0, 470, 0, 464, 465, 997, 466, 998, 878, 467,
	468, 469, 0, 471, 472, 0, 862, 473, 474, 475,
	477, 478, 476, 480, 963, 481, 0, 909, 482, 483,
	484, 533, 941, 991, 0, 486, 485, 536, 0, 0,
	0, 0, 487, 488, 537, 489, 490, 491, 859, 0,
	0, 0, 0, 0, 857, 0, 0, 0, 0, 0,
	0, 855, 856, 0, 0, 0, 0, 0, 0, 0,
	884, 2162, 0, 1415, 882, 914, 872, 873, 874, 870,
	871, 883, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 223, 224, 225, 226, 0, 227, 0,
	0, 0, 0, 0, 965, 888, 0, 0, 0, 228,
	230, 229, 231, 232, 493, 929, 908, 940, 236, 898,
	939, 938, 0, 237, 238, 900, 899, 241, 242, 243,
	890, 964, 244, 1001, 1002, 499, 0, 245, 246, 971,
	0, 952, 0, 247, 248, 249, 250, 251, 252, 0,
	0, 254, 255, 256, 253, 0, 257, 0, 258, 259,
	260, 0, 261, 974, 262, 263, 955, 953, 954, 961,
	957, 956, 960, 264, 265, 266, 267, 943, 269, 936,
	935, 861, 270, 271, 0, 273, 272, 0, 274, 0,
	0, 275, 934, 277, 0, 278, 0, 279, 280, 0,
	281, 867, 282, 283, 285, 287, 284, 288, 289, 290,
	291, 992, 993, 879, 219, 0, 0, 0, 0, 0,
	292, 293, 294, 933, 931, 932, 0, 297, 0, 298,
	0, 0, 975, 299, 300, 0, 301, 999, 0, 889,
	302, 0, 303, 304, 305, 306, 966, 967, 970, 361,
	977, 307, 308, 0, 309, 310, 910, 0, 0, 220,
	311, 313, 320, 0, 976, 314, 922, 913, 924, 926,
	927, 928, 923, 0, 915, 0, 321, 978, 968, 979,
	322, 323, 324, 980, 948, 949, 0, 0, 327, 328,
	329, 330, 331, 0, 333, 332, 0, 334, 1000, 981,
	335, 336, 982, 0, 337, 338, 959, 958, 339, 340,
	341, 342, 0, 343, 344, 346, 348, 345, 347, 349,
	351, 902, 350, 983, 353, 354, 357, 358, 356, 984,
	355, 858, 221, 985, 359, 880, 969, 360, 937, 362,
	363, 0, 911, 365, 912, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 519, 986, 373, 987, 994, 374,
	367, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	383, 995, 384, 522, 385, 386, 0, 387, 0, 388,
	389, 390, 391, 392, 393, 394, 930, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 403, 404, 405, 402,
	406, 407, 408, 409, 0, 410, 988, 411, 412, 413,
	414, 868, 415, 0, 416, 420, 421, 422, 423, 424,
	425, 426, 0, 432, 433, 903, 904, 906, 907, 428,
	434, 435, 436, 962, 437, 417, 418, 438, 439, 989,
	440, 441, 925, 905, 443, 0, 444, 445, 446, 447,
	419, 448, 452, 973, 449, 450, 451, 996, 0, 455,
	456, 454, 0, 457, 458, 459, 460, 461, 286, 901,
	0, 463, 944, 945, 946, 947, 0, 470, 0, 464,
	465, 997, 466, 998, 878, 467, 468, 469, 0, 471,
	472, 0, 862, 473, 474, 475, 477, 478, 476, 480,
	963, 481, 0, 909, 482, 483, 484, 533, 941, 991,
	0, 486, 485, 536, 1414, 0, 0, 0, 487, 488,
	537, 489, 490, 491, 859, 0, 0, 0, 0, 0,
	857, 0, 0, 0, 0, 0, 0, 855, 856, 0,
	0, 0, 0, 0, 0, 0, 884, 0, 0, 851,
	882, 914, 872, 873, 874, 870, 871, 883, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 223,
	224, 225, 226, 0, 227, 0, 0, 0, 0, 0,
	965, 888, 0, 0, 0, 228, 230, 229, 231, 232,
	493, 929, 908, 940, 236, 898, 939, 938, 0, 237,
	238, 900, 899, 241, 242, 243, 890, 964, 244, 1001,
	1002, 499, 0, 245, 246, 971, 0, 952, 0, 247,
	248, 249, 250, 251, 252, 0, 0, 254, 255, 256,
	253, 0, 257, 0, 258, 259, 260, 0, 261, 974,
	262, 263, 955, 953, 954, 961, 957, 956, 960, 264,
	265, 266, 267, 943, 269, 936, 935, 861, 270, 271,
	0, 273, 272, 0, 274, 0, 0, 275, 934, 277,
	0, 278, 0, 279, 280, 0, 281, 867, 282, 283,
	285, 287, 284, 288, 289, 290, 291, 992, 993, 879,
	219, 0, 0, 0, 0, 0, 292, 293, 294, 933,
	931, 932, 0, 297, 0, 298, 0, 0, 975, 299,
	300, 0, 301, 999, 0, 889, 302, 0, 303, 304,
	305, 306, 966, 967, 970, 361, 977, 307, 308, 0,
	309, 310, 910, 0, 0, 220, 311, 313, 320, 0,
	976, 314, 922, 913, 924, 926, 927, 928, 923, 0,
	915, 0, 321, 978, 968, 979, 322, 323, 324, 980,
	948, 949, 0, 0, 327, 328, 329, 330, 331, 0,
	333, 332, 0, 334, 1000, 981, 335, 336, 982, 0,
	337, 338, 959, 958, 339, 340, 341, 342, 0, 343,
	344, 346, 348, 345, 347, 349, 351, 902, 350, 983,
	353, 354, 357, 358, 356, 984, 355, 858, 221, 985,
	359, 880, 969, 360, 937, 362, 363, 0, 911, 365,
	912, 863, 0, 368, 369, 370, 0, 0, 371, 372,
	519, 986, 373, 987, 994, 374, 367, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 383, 995, 384, 522,
	385, 386, 0, 387, 0, 388, 389, 390, 391, 392,
	393, 394, 930, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 403, 404, 405, 402, 406, 407, 408, 409,
	0, 410, 988, 411, 412, 413, 414, 868, 415, 0,
	416, 420, 421, 422, 423, 424, 425, 426, 0, 432,
	433, 903, 904, 906, 907, 428, 434, 435, 436, 962,
	437, 417, 418, 438, 439, 989, 440, 441, 925, 905,
	443, 0, 444, 445, 446, 447, 419, 448, 452, 973,
	449, 450, 451, 996, 0, 455, 456, 454, 0, 457,
	458, 459, 460, 461, 286, 901, 0, 463, 944, 945,
	946, 947, 0, 470, 0, 464, 465, 997, 466, 998,
	878, 467, 468, 469, 0, 471, 472, 0, 862, 473,
	474, 475, 477, 478, 476, 480, 963, 481, 0, 909,
	482, 483, 484, 533, 941, 991, 0, 486, 485, 536,
	0, 0, 0, 0, 487, 488, 537, 489, 490, 491,
	859, 0, 0, 0, 0, 0, 857, 0, 0, 0,
	0, 0, 0, 855, 856, 914, 872, 873, 874, 870,
	871, 883, 884, 0, 0, 0, 882, 0, 0, 0,
	0, 0, 222, 223, 224, 225, 226, 0, 227, 0,
	0, 0, 0, 0, 965, 888, 0, 0, 0, 228,
	230, 229, 231, 232, 493, 929, 908, 940, 236, 898,
	939, 938, 0, 237, 238, 900, 899, 241, 242, 243,
	890, 964, 244, 1001, 1002, 499, 0, 245, 246, 971,
	0, 952, 0, 247, 248, 249, 250, 251, 252, 0,
	0, 254, 255, 256, 253, 0, 257, 0, 258, 3621,
	260, 0, 261, 974, 262, 263, 955, 953, 954, 961,
	957, 956, 960, 264, 265, 266, 267, 943, 269, 936,
	935, 861, 270, 271, 0, 273, 272, 0, 274, 0,
	0, 275, 934, 277, 0, 278, 0, 279, 280, 0,
	281, 867, 282, 283, 285, 287, 284, 288, 289, 290,
	291, 992, 993, 879, 219, 0, 0, 0, 0, 0,
	292, 293, 294, 933, 931, 932, 0, 297, 0, 298,
	0, 0, 975, 299, 300, 0, 301, 999, 0, 889,
	302, 0, 303, 304, 305, 306, 966, 967, 970, 361,
	977, 307, 308, 0, 309, 310, 910, 0, 0, 220,
	311, 313, 320, 0, 976, 314, 922, 913, 924, 926,
	927, 928, 923, 0, 915, 0, 321, 978, 968, 979,
	322, 323, 324, 980, 948, 949, 0, 0, 327, 328,
	329, 330, 331, 0, 333, 332, 0, 334, 1000, 981,
	335, 336, 982, 0, 337, 338, 959, 958, 339, 340,
	341, 342, 0, 343, 344, 346, 348, 345, 347, 349,
	351, 902, 350, 983, 353, 354, 357, 358, 356, 984,
	355, 858, 221, 985, 359, 880, 969, 360, 937, 362,
	363, 0, 911, 365, 912, 863, 0, 368, 369, 370,
	0, 0, 371, 372, 519, 986, 373, 987, 994, 374,
	367, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	383, 995, 384, 522, 385, 386, 0, 387, 0, 388,
	389, 390, 391, 392, 393, 394, 930, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 403, 404, 405, 402,
	406, 407, 408, 409, 0, 410, 988, 411, 412, 413,
	414, 868, 415, 0, 416, 420, 421, 422, 423, 424,
	425, 426, 0, 432, 433, 903, 904, 906, 907, 428,
	434, 435, 436, 962, 437, 417, 418, 438, 439, 989,
	440, 441, 925, 905, 443, 0, 444, 445, 446, 447,
	419, 448, 452, 973, 449, 450, 451, 996, 0, 455,
	456, 454, 0, 457, 458, 459, 460, 461, 286, 901,
	0, 463, 944, 945, 946, 947, 0, 470, 0, 464,
	465, 997, 466, 998, 878, 467, 468, 469, 0, 471,
	472, 0, 862, 473, 474, 475, 477, 478, 476, 480,
	963, 481, 0, 909, 482, 483, 484, 533, 941, 991,
	0, 486, 485, 536, 0, 0, 0, 0, 487, 488,
	537, 489, 490, 491, 859, 0, 0, 0, 0, 0,
	857, 0, 0, 0, 0, 0, 0, 855, 856, 914,
	872, 873, 874, 870, 871, 883, 884, 0, 0, 0,
	882, 0, 0, 0, 0, 0, 222, 223, 224, 225,
	226, 0, 227, 0, 0, 0, 0, 0, 965, 888,
	0, 0, 0, 228, 230, 229, 231, 232, 493, 929,
	908, 940, 236, 898, 939, 938, 0, 237, 238, 900,
	899, 241, 242, 243, 890, 964, 244, 1001, 1002, 499,
	0, 245, 246, 971, 0, 952, 0, 247, 248, 249,
	250, 251, 252, 0, 0, 254, 255, 256, 253, 0,
	257, 0, 258, 3454, 260, 0, 261, 974, 262, 263,
	955, 953, 954, 961, 957, 956, 960, 264, 265, 266,
	267, 943, 269, 936, 935, 861, 270, 271, 0, 273,
	272, 0, 274, 0, 0, 275, 934, 277, 0, 278,
	0, 279, 280, 0, 281, 867, 282, 283, 285, 287,
	284, 288, 289, 290, 291, 992, 993, 879, 219, 0,
	0, 0, 0, 0, 292, 293, 294, 933, 931, 932,
	0, 297, 0, 298, 0, 0, 975, 299, 300, 0,
	301, 999, 0, 889, 302, 0, 303, 304, 305, 306,
	966, 967, 970, 361, 977, 307, 308, 0, 309, 310,
	910, 0, 0, 220, 311, 313, 320, 0, 976, 314,
	922, 913, 924, 926, 927, 928, 923, 0, 915, 0,
	321, 978, 968, 979, 322, 323, 324, 980, 948, 949,
	0, 0, 327, 328, 329, 330, 331, 0, 333, 332,
	0, 334, 1000, 981, 335, 336, 982, 0, 337, 338,
	959, 958, 339, 340, 341, 342, 0, 343, 344, 346,
	348, 345, 347, 349, 351, 902, 350, 983, 353, 354,
	357, 358, 356, 984, 355, 858, 221, 985, 359, 880,
	969, 360, 937, 362, 363, 0, 911, 365, 912, 863,
	0, 368, 369, 370, 0, 0, 371, 372, 519, 986,
	373, 987, 994, 374, 367, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 383, 995, 384, 522, 385, 386,
	0, 387, 0, 388, 389, 390, 391, 392, 393, 394,
	930, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	403, 404, 405, 402, 406, 407, 408, 409, 0, 410,
	988, 411, 412, 413, 414, 868, 415, 0, 416, 420,
	421, 422, 423, 424, 425, 426, 0, 432, 433, 903,
	904, 906, 907, 428, 434, 435, 436, 962, 437, 417,
	418, 438, 439, 989, 440, 441, 925, 905, 443, 0,
	444, 445, 446, 447, 419, 448, 452, 973, 449, 450,
	451, 996, 0, 455, 456, 454, 0, 457, 458, 459,
	460, 461, 286, 901, 0, 463, 944, 945, 946, 947,
	0, 470, 0, 464, 465, 997, 466, 998, 878, 467,
	468, 469, 0, 471, 472, 0, 862, 473, 474, 475,
	477, 478, 476, 480, 963, 481, 0, 909, 482, 483,
	484, 533, 941, 991, 0, 486, 485, 536, 0, 0,
	0, 0, 487, 488, 537, 489, 490, 491, 859, 0,
	0, 0, 0, 0, 857, 0, 0, 0, 0, 0,
	0, 855, 856, 914, 872, 873, 874, 870, 871, 883,
	884, 0, 0, 0, 882, 0, 0, 0, 0, 0,
	222, 223, 224, 225, 226, 0, 227, 0, 0, 0,
	0, 0, 965, 888, 0, 0, 0, 228, 230, 229,
	231, 232, 493, 929, 908, 940, 236, 898, 939, 938,
	0, 237, 238, 900, 899, 241, 242, 243, 890, 964,
	244, 1001, 1002, 499, 0, 245, 246, 971, 0, 952,
	0, 247, 248, 249, 250, 251, 252, 0, 0, 254,
	255, 256, 253, 0, 257, 0, 258, 259, 260, 0,
	261, 974, 262, 263, 955, 953, 954, 961, 957, 956,
	960, 264, 265, 266, 267, 943, 269, 936, 935, 861,
	270, 271, 0, 273, 272, 0, 274, 0, 0, 275,
	934, 277, 0, 278, 0, 279, 280, 0, 281, 867,
	282, 283, 285, 287, 284, 288, 289, 290, 291, 992,
	993, 879, 219, 0, 0, 0, 0, 0, 292, 293,
	294, 933, 931, 932, 0, 297, 0, 298, 0, 0,
	975, 299, 300, 0, 301, 999, 0, 889, 302, 0,
	303, 304, 305, 306, 966, 967, 970, 361, 977, 307,
	308, 0, 309, 310, 910, 0, 0, 220, 311, 313,
	320, 0, 976, 314, 922, 913, 924, 926, 927, 928,
	923, 0, 915, 0, 321, 978, 968, 979, 322, 323,
	324, 980, 948, 949, 0, 0, 327, 328, 329, 330,
	331, 0, 333, 332, 0, 334, 1000, 981, 335, 336,
	982, 0, 337, 338, 959, 958, 339, 340, 341, 342,
	0, 343, 344, 346, 348, 345, 347, 349, 351, 902,
	350, 983, 353, 354, 357, 358, 356, 984, 355, 858,
	3171, 985, 359, 880, 969, 360, 937, 362, 363, 0,
	911, 365, 912, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 519, 986, 373, 987, 994, 374, 367, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 383, 995,
	384, 522, 385, 386, 0, 387, 0, 388, 389, 390,
	391, 392, 393, 394, 930, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 403, 404, 405, 402, 406, 407,
	408, 409, 0, 410, 988, 411, 412, 413, 414, 868,
	415, 0, 416, 420, 421, 422, 423, 424, 425, 426,
	0, 432, 433, 903, 904, 906, 907, 428, 434, 435,
	436, 962, 437, 417, 418, 438, 439, 989, 440, 441,
	925, 905, 443, 0, 444, 445, 446, 447, 419, 448,
	452, 973, 449, 450, 451, 996, 0, 455, 456, 454,
	0, 457, 458, 459, 460, 461, 286, 901, 0, 463,
	944, 945, 946, 947, 0, 470, 0, 464, 465, 997,
	466, 998, 878, 467, 468, 469, 0, 471, 472, 0,
	862, 473, 474, 475, 477, 478, 476, 480, 963, 481,
	0, 909, 482, 483, 484, 533, 941, 991, 0, 486,
	485, 536, 0, 0, 0, 0, 487, 488, 537, 489,
	490, 491, 859, 0, 0, 0, 0, 0, 857, 0,
	0, 0, 0, 0, 0, 855, 856, 1620, 0, 0,
	0, 0, 0, 0, 884, 0, 0, 0, 882, 914,
	872, 873, 874, 870, 871, 883, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 223, 224, 225,
	226, 0, 227, 0, 0, 0, 0, 0, 965, 888,
	0, 0, 0, 228, 230, 229, 231, 232, 493, 929,
	908, 940, 236, 898, 939, 938, 0, 237, 238, 900,
	899, 241, 242, 243, 890, 964, 244, 1001, 1002, 499,
	0, 245, 246, 971, 0, 952, 0, 247, 248, 249,
	250, 251, 252, 0, 0, 254, 255, 256, 253, 0,
	257, 0, 258, 259, 260, 0, 261, 974, 262, 263,
	955, 953, 954, 961, 957, 956, 960, 264, 265, 266,
	267, 943, 269, 936, 935, 861, 270, 271, 0, 273,
	272, 0, 274, 0, 0, 275, 934, 277, 0, 278,
	0, 279, 280, 0, 281, 867, 282, 283, 285, 287,
	284, 288, 289, 290, 291, 992, 993, 879, 219, 0,
	0, 0, 0, 0, 292, 293, 294, 933, 931, 932,
	0, 297, 0, 298, 0, 0, 975, 299, 300, 0,
	301, 999, 0, 889, 302, 0, 303, 304, 305, 306,
	966, 967, 970, 361, 977, 307, 308, 0, 309, 310,
	910, 0, 0, 220, 311, 313, 320, 0, 976, 314,
	922, 913, 924, 926, 927, 928, 923, 0, 915, 0,
	321, 978, 968, 979, 322, 323, 324, 980, 948, 949,
	0, 0, 327, 328, 329, 330, 331, 0, 333, 332,
	0, 334, 1000, 981, 335, 336, 982, 0, 337, 338,
	959, 958, 339, 340, 341, 342, 0, 343, 344, 346,
	348, 345, 347, 349, 351, 902, 350, 983, 353, 354,
	357, 358, 356, 984, 355, 858, 221, 985, 359, 880,
	969, 360, 937, 362, 363, 0, 911, 365, 912, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 519, 986,
	373, 987, 994, 374, 367, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 383, 995, 384, 522, 385, 386,
	0, 387, 0, 388, 389, 390, 391, 392, 393, 394,
	930, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	403, 404, 405, 402, 406, 407, 408, 409, 0, 410,
	988, 411, 412, 413, 414, 868, 415, 0, 416, 420,
	421, 422, 423, 424, 425, 426, 0, 432, 433, 903,
	904, 906, 907, 428, 434, 435, 436, 962, 437, 417,
	418, 438, 439, 989, 440, 441, 925, 905, 443, 0,
	444, 445, 446, 447, 419, 448, 452, 973, 449, 450,
	451, 996, 0, 455, 456, 454, 0, 457, 458, 459,
	460, 461, 286, 901, 0, 463, 944, 945, 946, 947,
	0, 470, 0, 464, 465, 997, 466, 998, 878, 467,
	468, 469, 0, 471, 472, 0, 862, 473, 474, 475,
	477, 478, 476, 480, 963, 481, 0, 909, 482, 483,
	484, 533, 941, 991, 2973, 486, 485, 536, 0, 0,
	0, 0, 487, 488, 537, 489, 490, 491, 859, 0,
	0, 0, 0, 0, 857, 0, 0, 0, 0, 0,
	0, 855, 856, 914, 872, 873, 874, 870, 871, 883,
	884, 0, 0, 0, 882, 0, 0, 0, 0, 0,
	222, 223, 224, 225, 226, 0, 227, 0, 0, 0,
	0, 0, 965, 888, 0, 0, 0, 228, 230, 229,
	231, 232, 493, 929, 908, 940, 236, 898, 939, 938,
	0, 237, 238, 900, 899, 241, 242, 243, 890, 964,
	244, 1001, 1002, 499, 0, 245, 246, 971, 0, 952,
	0, 247, 248, 249, 250, 251, 252, 0, 0, 254,
	255, 256, 253, 0, 257, 0, 258, 259, 260, 0,
	261, 974, 262, 263, 955, 953, 954, 961, 957, 956,
	960, 264, 265, 266, 267, 943, 269, 936, 935, 861,
	270, 271, 0, 273, 272, 0, 274, 0, 0, 275,
	934, 277, 0, 278, 0, 279, 280, 0, 281, 867,
	282, 283, 285, 287, 284, 288, 289, 290, 291, 992,
	993, 879, 219, 0, 0, 0, 0, 0, 292, 293,
	294, 933, 931, 932, 0, 297, 0, 298, 0, 0,
	975, 299, 300, 0, 301, 999, 0, 889, 302, 0,
	303, 304, 305, 306, 966, 967, 970, 361, 977, 307,
	308, 0, 309, 310, 910, 0, 0, 2034, 311, 313,
	320, 0, 976, 314, 922, 913, 924, 926, 927, 928,
	923, 0, 915, 0, 321, 978, 968, 979, 322, 323,
	324, 980, 948, 949, 0, 0, 327, 328, 329, 330,
	331, 0, 333, 332, 0, 334, 1000, 981, 335, 336,
	982, 0, 337, 338, 959, 958, 339, 340, 341, 342,
	0, 343, 344, 346, 348, 345, 347, 349, 351, 902,
	350, 983, 353, 354, 357, 358, 356, 984, 355, 858,
	221, 985, 359, 880, 969, 360, 937, 362, 363, 0,
	911, 365, 912, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 519, 986, 373, 987, 994, 374, 367, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 383, 995,
	384, 522, 385, 386, 2033, 387, 0, 388, 389, 390,
	391, 392, 393, 394, 930, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 403, 404, 405, 402, 406, 407,
	408, 409, 0, 410, 988, 411, 412, 413, 414, 868,
	415, 0, 416, 420, 421, 422, 423, 424, 425, 426,
	0, 432, 433, 903, 904, 906, 907, 428, 434, 435,
	436, 962, 437, 417, 418, 438, 439, 989, 440, 441,
	925, 905, 443, 0, 444, 445, 446, 447, 419, 448,
	452, 973, 449, 450, 451, 996, 0, 455, 456, 454,
	0, 457, 458, 459, 460, 461, 286, 901, 0, 463,
	944, 945, 946, 947, 0, 470, 0, 464, 465, 997,
	466, 998, 878, 467, 468, 469, 0, 471, 472, 0,
	862, 473, 474, 475, 477, 478, 476, 480, 963, 481,
	0, 909, 482, 483, 484, 533, 941, 991, 0, 486,
	485, 536, 0, 0, 0, 0, 487, 488, 537, 489,
	490, 491, 859, 0, 0, 0, 0, 0, 857, 0,
	0, 0, 0, 0, 0, 855, 856, 914, 872, 873,
	874, 870, 871, 883, 884, 0, 0, 0, 882, 0,
	0, 0, 0, 0, 222, 223, 224, 225, 226, 0,
	227, 0, 0, 0, 0, 0, 965, 888, 0, 0,
	0, 228, 230, 229, 231, 232, 493, 929, 908, 940,
	236, 898, 939, 938, 0, 237, 238, 900, 899, 241,
	242, 243, 890, 964, 244, 1001, 1002, 499, 0, 245,
	246, 971, 0, 952, 0, 247, 248, 249, 250, 251,
	252, 0, 0, 254, 255, 256, 253, 0, 257, 0,
	258, 259, 260, 0, 261, 974, 262, 263, 955, 953,
	954, 961, 957, 956, 960, 264, 265, 266, 267, 943,
	269, 936, 935, 861, 270, 271, 0, 273, 272, 0,
	274, 0, 0, 275, 934, 277, 0, 278, 0, 279,
	280, 0, 281, 867, 282, 283, 285, 287, 284, 288,
	289, 290, 291, 992, 993, 879, 219, 0, 0, 0,
	0, 0, 292, 293, 294, 933, 931, 932, 0, 297,
	0, 298, 0, 0, 975, 299, 300, 0, 301, 999,
	0, 889, 302, 0, 303, 304, 305, 306, 966, 967,
	970, 361, 977, 307, 308, 0, 309, 310, 910, 0,
	0, 220, 311, 313, 320, 0, 976, 314, 922, 913,
	924, 926, 927, 928, 923, 0, 915, 0, 321, 978,
	968, 979, 322, 323, 324, 980, 948, 949, 0, 0,
	327, 328, 329, 330, 331, 0, 333, 332, 0, 334,
	1000, 981, 335, 336, 982, 0, 337, 338, 959, 958,
	339, 340, 341, 342, 0, 343, 344, 346, 348, 345,
	347, 349, 351, 902, 350, 983, 353, 354, 357, 358,
	356, 984, 355, 858, 221, 985, 359, 880, 969, 360,
	937, 362, 363, 0, 911, 365, 912, 863, 0, 368,
	369, 370, 0, 0, 371, 372, 519, 986, 373, 987,
	994, 374, 367, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 383, 995, 384, 522, 385, 386, 0, 387,
	0, 388, 389, 390, 391, 392, 393, 394, 930, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 403, 404,
	405, 402, 406, 407, 408, 409, 0, 410, 988, 411,
	412, 413, 414, 868, 415, 0, 416, 420, 421, 422,
	423, 424, 425, 426, 0, 432, 433, 903, 904, 906,
	907, 428, 434, 435, 436, 962, 437, 417, 418, 438,
	439, 989, 440, 441, 925, 905, 443, 0, 444, 445,
	446, 447, 419, 448, 452, 973, 449, 450, 451, 996,
	0, 455, 456, 454, 0, 457, 458, 459, 460, 461,
	286, 901, 0, 463, 944, 945, 946, 947, 0, 470,
	0, 464, 465, 997, 466, 998, 878, 467, 468, 469,
	0, 471, 472, 0, 862, 473, 474, 475, 477, 478,
	476, 480, 963, 481, 0, 909, 482, 483, 484, 533,
	941, 991, 0, 486, 485, 536, 0, 0, 0, 0,
	487, 488, 537, 489, 490, 491, 859, 0, 0, 0,
	0, 0, 857, 0, 0, 0, 0, 0, 0, 855,
	856, 914, 872, 873, 874, 870, 871, 883, 884, 0,
	0, 0, 882, 0, 0, 0, 0, 0, 222, 223,
	224, 225, 226, 0, 227, 0, 0, 0, 0, 0,
	965, 888, 0, 0, 0, 228, 230, 229, 231, 232,
	493, 929, 908, 940, 236, 898, 939, 938, 0, 237,
	238, 900, 899, 241, 242, 243, 890, 964, 244, 1001,
	1002, 499, 0, 245, 246, 971, 0, 952, 0, 247,
	248, 249, 250, 251, 252, 0, 0, 254, 255, 256,
	253, 0, 257, 0, 258, 259, 260, 0, 261, 974,
	262, 263, 955, 953, 954, 961, 957, 956, 960, 264,
	265, 266, 267, 943, 269, 936, 935, 861, 270, 271,
	0, 273, 272, 0, 274, 0, 0, 275, 934, 277,
	0, 278, 0, 279, 280, 0, 281, 867, 282, 283,
	285, 287, 284, 288, 289, 290, 291, 992, 993, 879,
	219, 0, 0, 0, 0, 0, 292, 293, 294, 933,
	931, 932, 0, 297, 0, 298, 0, 0, 975, 299,
	300, 0, 301, 999, 0, 889, 302, 0, 303, 304,
	305, 306, 966, 967, 970, 361, 977, 307, 308, 0,
	309, 310, 910, 0, 0, 220, 311, 313, 320, 0,
	976, 314, 922, 913, 924, 926, 927, 928, 923, 0,
	915, 0, 321, 978, 968, 979, 322, 323, 324, 980,
	948, 949, 0, 0, 327, 328, 329, 330, 331, 0,
	333, 332, 0, 334, 1000, 981, 335, 336, 982, 0,
	337, 338, 959, 958, 339, 340, 341, 342, 0, 343,
	344, 346, 348, 345, 347, 349, 351, 902, 350, 983,
	353, 354, 357, 358, 356, 984, 355, 858, 221, 985,
	359, 880, 969, 360, 937, 362, 363, 0, 911, 365,
	912, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	519, 986, 373, 987, 994, 374, 367, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 383, 995, 384, 522,
	385, 386, 0, 387, 0, 388, 389, 390, 391, 392,
	393, 394, 930, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 403, 404, 405, 402, 406, 407, 408, 409,
	0, 410, 988, 411, 412, 413, 414, 868, 415, 0,
	416, 420, 421, 422, 423, 424, 425, 426, 0, 432,
	433, 903, 904, 906, 907, 428, 434, 435, 436, 962,
	437, 417, 418, 438, 439, 989, 440, 441, 925, 905,
	443, 0, 444, 445, 446, 447, 419, 448, 452, 973,
	449, 450, 451, 996, 0, 455, 456, 454, 0, 457,
	458, 459, 460, 461, 286, 901, 0, 463, 944, 945,
	946, 947, 0, 470, 0, 464, 465, 997, 466, 998,
	878, 467, 468, 469, 0, 471, 472, 0, 862, 473,
	474, 475, 477, 478, 476, 480, 963, 481, 0, 909,
	482, 483, 484, 533, 941, 991, 0, 486, 485, 536,
	0, 0, 0, 0, 487, 488, 537, 489, 490, 491,
	859, 0, 0, 0, 0, 0, 857, 0, 0, 0,
	0, 0, 0, 855, 856, 1620, 0, 0, 0, 0,
	0, 0, 884, 0, 0, 0, 882, 914, 872, 873,
	874, 870, 871, 883, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 223, 224, 225, 226, 0,
	227, 0, 0, 0, 0, 0, 965, 888, 0, 0,
	0, 228, 230, 229, 231, 232, 493, 929, 908, 940,
	236, 898, 939, 938, 0, 237, 238, 900, 899, 241,
	242, 243, 890, 964, 244, 1001, 1002, 499, 0, 245,
	246, 971, 0, 952, 0, 247, 248, 249, 250, 251,
	252, 0, 0, 254, 255, 256, 253, 0, 257, 0,
	258, 259, 260, 0, 261, 974, 262, 263, 955, 953,
	954, 961, 957, 956, 960, 264, 265, 266, 267, 943,
	269, 936, 935, 861, 270, 271, 0, 273, 272, 0,
	274, 0, 0, 275, 934, 277, 0, 278, 0, 279,
	280, 0, 281, 867, 282, 283, 285, 287, 284, 288,
	289, 290, 291, 992, 993, 879, 219, 0, 0, 0,
	0, 0, 292, 293, 294, 933, 931, 932, 0, 297,
	0, 298, 0, 2219, 975, 299, 300, 0, 301, 999,
	0, 889, 302, 0, 303, 304, 305, 306, 966, 967,
	970, 361, 977, 307, 308, 0, 309, 310, 910, 0,
	0, 220, 311, 313, 320, 0, 976, 314, 922, 913,
	924, 926, 927, 928, 923, 0, 915, 0, 321, 978,
	968, 979, 322, 323, 324, 980, 948, 949, 0, 0,
	327, 328, 329, 330, 331, 0, 333, 332, 0, 334,
	1000, 981, 335, 336, 982, 0, 337, 338, 959, 958,
	339, 340, 341, 342, 0, 343, 344, 346, 348, 345,
	347, 349, 351, 902, 350, 983, 353, 354, 357, 358,
	356, 984, 355, 858, 221, 985, 359, 880, 969, 360,
	937, 362, 363, 0, 911, 365, 912, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 519, 986, 373, 987,
	994, 374, 367, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 383, 995, 384, 522, 385, 386, 0, 387,
	0, 388, 389, 390, 391, 392, 393, 394, 930, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 403, 404,
	405, 402, 406, 407, 408, 409, 0, 410, 988, 411,
	412, 413, 414, 868, 415, 0, 416, 420, 421, 422,
	423, 424, 425, 426, 0, 432, 433, 903, 904, 906,
	907, 428, 434, 435, 436, 962, 437, 417, 418, 438,
	439, 989, 440, 441, 925, 905, 443, 0, 444, 445,
	446, 447, 419, 448, 452, 973, 449, 450, 451, 996,
	0, 455, 456, 454, 0, 457, 458, 459, 460, 461,
	286, 901, 0, 463, 944, 945, 946, 947, 0, 470,
	0, 464, 465, 997, 466, 998, 878, 467, 468, 469,
	0, 471, 472, 0, 862, 473, 474, 475, 477, 478,
	476, 480, 963, 481, 0, 909, 482, 483, 484, 533,
	941, 991, 0, 486, 485, 536, 0, 0, 0, 0,
	487, 488, 537, 489, 490, 491, 859, 0, 0, 0,
	0, 0, 857, 0, 0, 0, 0, 0, 0, 855,
	856, 914, 872, 873, 874, 870, 871, 883, 884, 0,
	0, 0, 882, 0, 0, 0, 0, 0, 222, 223,
	224, 225, 226, 0, 227, 0, 0, 0, 0, 0,
	965, 888, 0, 0, 0, 228, 230, 229, 231, 232,
	493, 929, 908, 940, 236, 898, 939, 938, 0, 237,
	238, 900, 899, 241, 242, 243, 890, 964, 244, 1001,
	1002, 499, 0, 245, 246, 971, 0, 952, 0, 247,
	248, 249, 250, 251, 252, 0, 0, 254, 255, 256,
	253, 0, 257, 0, 258, 259, 260, 0, 261, 974,
	262, 263, 955, 953, 954, 961, 957, 956, 960, 264,
	265, 266, 267, 943, 269, 936, 935, 861, 270, 271,
	0, 273, 272, 0, 274, 0, 0, 275, 934, 277,
	0, 278, 0, 279, 280, 0, 281, 867, 282, 283,
	285, 287, 284, 288, 289, 290, 291, 992, 993, 879,
	219, 0, 0, 0, 0, 0, 292, 293, 294, 933,
	931, 932, 0, 297, 0, 298, 0, 0, 975, 299,
	300, 0, 301, 999, 0, 889, 302, 0, 303, 304,
	305, 306, 966, 967, 970, 361, 977, 307, 308, 0,
	309, 310, 910, 0, 0, 220, 311, 313, 320, 0,
	976, 314, 922, 913, 924, 926, 927, 928, 923, 0,
	915, 0, 321, 978, 968, 979, 322, 323, 324, 980,
	948, 949, 0, 0, 327, 328, 329, 330, 331, 0,
	333, 332, 0, 334, 1000, 981, 335, 336, 982, 0,
	337, 338, 959, 958, 339, 340, 341, 342, 0, 343,
	344, 346, 348, 345, 347, 349, 351, 902, 350, 983,
	353, 354, 357, 358, 356, 984, 355, 858, 221, 985,
	359, 880, 969, 360, 937, 362, 363, 0, 911, 365,
	912, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	519, 986, 373, 987, 994, 374, 367, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 383, 995, 384, 522,
	385, 386, 0, 387, 0, 388, 389, 390, 391, 392,
	393, 394, 930, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 403, 404, 405, 402, 406, 407, 408, 409,
	0, 410, 988, 411, 412, 413, 414, 868, 415, 0,
	416, 420, 421, 422, 423, 424, 425, 426, 0, 432,
	433, 903, 904, 906, 907, 428, 434, 435, 436, 962,
	437, 417, 418, 438, 439, 989, 440, 441, 925, 905,
	443, 0, 444, 445, 446, 447, 419, 448, 452, 973,
	449, 450, 451, 996, 0, 455, 456, 454, 0, 457,
	458, 459, 460, 461, 286, 901, 0, 463, 944, 945,
	946, 947, 0, 470, 0, 464, 465, 997, 466, 998,
	878, 467, 468, 469, 0, 471, 472, 0, 862, 473,
	474, 475, 477, 478, 476, 480, 963, 481, 0, 909,
	482, 483, 484, 533, 941, 991, 0, 486, 485, 536,
	0, 0, 0, 0, 487, 488, 537, 489, 490, 491,
	859, 0, 0, 0, 0, 0, 857, 0, 0, 0,
	0, 0, 0, 855, 856, 0, 0, 0, 0, 0,
	0, 0, 884, 1554, 0, 2224, 882, 914, 872, 873,
	874, 870, 871, 883, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 223, 224, 225, 226, 0,
	227, 0, 0, 0, 0, 0, 965, 888, 0, 0,
	0, 228, 230, 229, 231, 232, 493, 929, 908, 940,
	236, 898, 939, 938, 0, 237, 238, 900, 899, 241,
	242, 243, 890, 964, 244, 1001, 1002, 499, 0, 245,
	246, 971, 0, 952, 0, 247, 248, 249, 250, 251,
	252, 0, 0, 254, 255, 256, 253, 0, 257, 0,
	258, 259, 260, 0, 261, 974, 262, 263, 955, 953,
	954, 961, 957, 956, 960, 264, 265, 266, 267, 943,
	269, 936, 935, 861, 270, 271, 0, 273, 272, 0,
	274, 0, 0, 275, 934, 277, 0, 278, 0, 279,
	280, 0, 281, 867, 282, 283, 285, 287, 284, 288,
	289, 290, 291, 992, 993, 879, 219, 0, 0, 0,
	0, 0, 292, 293, 294, 933, 931, 932, 0, 297,
	0, 298, 0, 0, 975, 299, 300, 0, 301, 999,
	0, 889, 302, 0, 303, 304, 305, 306, 966, 967,
	970, 361, 977, 307, 308, 0, 309, 310, 910, 0,
	0, 220, 311, 313, 320, 0, 976, 314, 922, 913,
	924, 926, 927, 928, 923, 0, 915, 0, 321, 978,
	968, 979, 322, 323, 324, 980, 948, 949, 0, 0,
	327, 328, 329, 330, 331, 0, 333, 332, 0, 334,
	1000, 981, 335, 336, 982, 0, 337, 338, 959, 958,
	339, 340, 341, 342, 0, 343, 344, 346, 348, 345,
	347, 349, 351, 902, 350, 983, 353, 354, 357, 358,
	356, 984, 355, 858, 221, 985, 359, 880, 969, 360,
	937, 362, 363, 0, 911, 365, 912, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 519, 986, 373, 987,
	994, 374, 367, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 383, 995, 384, 522, 385, 386, 0, 387,
	0, 388, 389, 390, 391, 392, 393, 394, 930, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 403, 404,
	405, 402, 406, 407, 408, 409, 0, 410, 988, 411,
	412, 413, 414, 868, 415, 0, 416, 420, 421, 422,
	423, 424, 425, 426, 0, 432, 433, 903, 904, 906,
	907, 428, 434, 435, 436, 962, 437, 417, 418, 438,
	439, 989, 440, 441, 925, 905, 443, 0, 444, 445,
	446, 447, 419, 448, 452, 973, 449, 450, 451, 996,
	0, 455, 456, 454, 0, 457, 458, 459, 460, 461,
	286, 901, 0, 463, 944, 945, 946, 947, 0, 470,
	0, 464, 465, 997, 466, 998, 878, 467, 468, 469,
	0, 471, 472, 0, 862, 473, 474, 475, 477, 478,
	476, 480, 963, 481, 0, 909, 482, 483, 484, 533,
	941, 991, 0, 486, 485, 536, 0, 0, 0, 0,
	487, 488, 537, 489, 490, 491, 859, 0, 0, 0,
	0, 0, 857, 0, 0, 0, 0, 0, 0, 855,
	856, 0, 0, 0, 0, 0, 0, 0, 884, 0,
	0, 2222, 882, 914, 872, 873, 874, 870, 871, 883,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 223, 224, 225, 226, 0, 227, 0, 0, 0,
	0, 0, 965, 888, 0, 0, 0, 228, 230, 229,
	231, 232, 493, 929, 908, 940, 236, 898, 939, 938,
	0, 237, 238, 900, 899, 241, 242, 243, 890, 964,
	244, 1001, 1002, 499, 0, 245, 246, 971, 0, 952,
	0, 247, 248, 249, 250, 251, 252, 0, 0, 254,
	255, 256, 253, 0, 257, 0, 258, 259, 260, 0,
	261, 974, 262, 263, 955, 953, 954, 961, 957, 956,
	960, 264, 265, 266, 267, 943, 269, 936, 935, 861,
	270, 271, 0, 273, 272, 0, 274, 0, 0, 275,
	934, 277, 0, 278, 0, 279, 280, 0, 281, 867,
	282, 283, 285, 287, 284, 288, 289, 290, 291, 992,
	993, 879, 219, 0, 0, 0, 0, 0, 292, 293,
	294, 933, 931, 932, 0, 297, 0, 298, 0, 0,
	975, 299, 300, 0, 301, 999, 0, 889, 302, 0,
	303, 304, 305, 306, 966, 967, 970, 361, 977, 307,
	308, 0, 309, 310, 910, 0, 0, 220, 311, 313,
	320, 0, 976, 314, 922, 913, 924, 926, 927, 928,
	923, 0, 915, 0, 321, 978, 968, 979, 322, 323,
	324, 980, 948, 949, 0, 0, 327, 328, 329, 330,
	331, 0, 333, 332, 0, 334, 1000, 981, 335, 336,
	982, 0, 337, 338, 959, 958, 339, 340, 341, 342,
	0, 343, 344, 346, 348, 345, 347, 349, 351, 902,
	350, 983, 353, 354, 357, 358, 356, 984, 355, 858,
	221, 985, 359, 880, 969, 360, 937, 362, 363, 0,
	911, 365, 912, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 519, 986, 373, 987, 994, 374, 367, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 383, 995,
	384, 522, 385, 386, 0, 387, 0, 388, 389, 390,
	391, 392, 393, 394, 930, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 403, 404, 405, 402, 406, 407,
	408, 409, 0, 410, 988, 411, 412, 413, 414, 868,
	415, 0, 416, 420, 421, 422, 423, 424, 425, 426,
	0, 432, 433, 903, 904, 906, 907, 428, 434, 435,
	436, 962, 437, 417, 418, 438, 439, 989, 440, 441,
	925, 905, 443, 0, 444, 445, 446, 447, 419, 448,
	452, 973, 449, 450, 451, 996, 0, 455, 456, 454,
	0, 457, 458, 459, 460, 461, 286, 901, 0, 463,
	944, 945, 946, 947, 0, 470, 0, 464, 465, 997,
	466, 998, 878, 467, 468, 469, 0, 471, 472, 0,
	862, 473, 474, 475, 477, 478, 476, 480, 963, 481,
	0, 909, 482, 483, 484, 533, 941, 991, 0, 486,
	485, 536, 0, 0, 0, 0, 487, 488, 537, 489,
	490, 491, 859, 0, 0, 0, 0, 0, 857, 0,
	0, 0, 0, 0, 0, 855, 856, 0, 0, 0,
	0, 0, 0, 0, 884, 0, 0, 2210, 882, 914,
	872, 873, 874, 870, 871, 883, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 223, 224, 225,
	226, 0, 227, 0, 0, 0, 0, 0, 965, 888,
	0, 0, 0, 228, 230, 229, 231, 232, 493, 929,
	908, 940, 236, 898, 939, 938, 0, 237, 238, 900,
	899, 241, 242, 243, 890, 964, 244, 1001, 1002, 499,
	0, 245, 246, 971, 0, 952, 0, 247, 248, 249,
	250, 251, 252, 0, 0, 254, 255, 256, 253, 0,
	257, 0, 258, 259, 260, 0, 261, 974, 262, 263,
	955, 953, 954, 961, 957, 956, 960, 264, 265, 266,
	267, 943, 269, 936, 935, 861, 270, 271, 0, 273,
	272, 0, 274, 0, 0, 275, 934, 277, 0, 278,
	0, 279, 280, 0, 281, 867, 282, 283, 285, 287,
	284, 288, 289, 290, 291, 992, 993, 879, 219, 0,
	0, 0, 0, 0, 292, 293, 294, 933, 931, 932,
	0, 297, 0, 298, 0, 0, 975, 299, 300, 0,
	301, 999, 0, 889, 302, 0, 303, 304, 305, 306,
	966, 967, 970, 361, 977, 307, 308, 0, 309, 310,
	910, 0, 0, 220, 311, 313, 320, 0, 976, 314,
	922, 913, 924, 926, 927, 928, 923, 0, 915, 0,
	321, 978, 968, 979, 322, 323, 324, 980, 948, 949,
	0, 0, 327, 328, 329, 330, 331, 0, 333, 332,
	0, 334, 1000, 981, 335, 336, 982, 0, 337, 338,
	959, 958, 339, 340, 341, 342, 0, 343, 344, 346,
	348, 345, 347, 349, 351, 902, 350, 983, 353, 354,
	357, 358, 356, 984, 355, 858, 221, 985, 359, 880,
	969, 360, 937, 362, 363, 0, 911, 365, 912, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 519, 986,
	373, 987, 994, 374, 367, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 383, 995, 384, 522, 385, 386,
	0, 387, 0, 388, 389, 390, 391, 392, 393, 394,
	930, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	403, 404, 405, 402, 406, 407, 408, 409, 0, 410,
	988, 411, 412, 413, 414, 868, 415, 0, 416, 420,
	421, 422, 423, 424, 425, 426, 0, 432, 433, 903,
	904, 906, 907, 428, 434, 435, 436, 962, 437, 417,
	418, 438, 439, 989, 440, 441, 925, 905, 443, 0,
	444, 445, 446, 447, 419, 448, 452, 973, 449, 450,
	451, 996, 0, 455, 456, 454, 0, 457, 458, 459,
	460, 461, 286, 901, 0, 463, 944, 945, 946, 947,
	0, 470, 0, 464, 465, 997, 466, 998, 878, 467,
	468, 469, 0, 471, 472, 0, 862, 473, 474, 475,
	477, 478, 476, 480, 963, 481, 0, 909, 482, 483,
	484, 533, 941, 991, 0, 486, 485, 536, 0, 0,
	0, 0, 487, 488, 537, 489, 490, 491, 859, 0,
	0, 0, 0, 0, 857, 0, 0, 0, 0, 0,
	0, 855, 856, 0, 0, 0, 0, 0, 0, 0,
	884, 0, 0, 2199, 882, 914, 872, 873, 874, 870,
	871, 883, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 223, 224, 225, 226, 0, 227, 0,
	0, 0, 0, 0, 965, 888, 0, 0, 0, 228,
	230, 229, 231, 232, 493, 929, 908, 940, 236, 898,
	939, 938, 0, 237, 238, 900, 899, 241, 242, 243,
	890, 964, 244, 1001, 1002, 499, 0, 245, 246, 971,
	0, 952, 0, 247, 248, 249, 250, 251, 252, 0,
	0, 254, 255, 256, 253, 0, 257, 0, 258, 259,
	260, 0, 261, 974, 262, 263, 955, 953, 954, 961,
	957, 956, 960, 264, 265, 266, 267, 943, 269, 936,
	935, 861, 270, 271, 0, 273, 272, 0, 274, 0,
	0, 275, 934, 277, 0, 278, 0, 279, 280, 0,
	281, 867, 282, 283, 285, 287, 284, 288, 289, 290,
	291, 992, 993, 879, 219, 0, 0, 0, 0, 0,
	292, 293, 294, 933, 931, 932, 0, 297, 0, 298,
	0, 0, 975, 299, 300, 0, 301, 999, 0, 889,
	302, 0, 303, 304, 305, 306, 966, 967, 970, 361,
	977, 307, 308, 0, 309, 310, 910, 0, 0, 220,
	311, 313, 320, 0, 976, 314, 922, 913, 924, 926,
	927, 928, 923, 0, 915, 0, 321, 978, 968, 979,
	322, 323, 324, 980, 948, 949, 0, 0, 327, 328,
	329, 330, 331, 0, 333, 332, 0, 334, 1000, 981,
	335, 336, 982, 0, 337, 338, 959, 958, 339, 340,
	341, 342, 0, 343, 344, 346, 348, 345, 347, 349,
	351, 902, 350, 983, 353, 354, 357, 358, 356, 984,
	355, 858, 221, 985, 359, 880, 969, 360, 937, 362,
	363, 0, 911, 365, 912, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 519, 986, 373, 987, 994, 374,
	367, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	383, 995, 384, 522, 385, 386, 0, 387, 0, 388,
	389, 390, 391, 392, 393, 394, 930, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 403, 404, 405, 402,
	406, 407, 408, 409, 0, 410, 988, 411, 412, 413,
	414, 868, 415, 0, 416, 420, 421, 422, 423, 424,
	425, 426, 0, 432, 433, 903, 904, 906, 907, 428,
	434, 435, 436, 962, 437, 417, 418, 438, 439, 989,
	440, 441, 925, 905, 443, 0, 444, 445, 446, 447,
	419, 448, 452, 973, 449, 450, 451, 996, 0, 455,
	456, 454, 0, 457, 458, 459, 460, 461, 286, 901,
	0, 463, 944, 945, 946, 947, 0, 470, 0, 464,
	465, 997, 466, 998, 878, 467, 468, 469, 0, 471,
	472, 0, 862, 473, 474, 475, 477, 478, 476, 480,
	963, 481, 0, 909, 482, 483, 484, 533, 941, 991,
	0, 486, 485, 536, 0, 0, 0, 0, 487, 488,
	537, 489, 490, 491, 859, 0, 0, 0, 0, 0,
	857, 0, 0, 0, 0, 0, 0, 855, 856, 0,
	0, 0, 0, 0, 0, 0, 884, 0, 0, 2197,
	882, 2188, 2195, 873, 874, 870, 871, 883, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 223,
	224, 225, 226, 0, 227, 0, 0, 0, 0, 0,
	965, 888, 0, 0, 0, 228, 230, 229, 231, 232,
	493, 929, 908, 940, 236, 898, 939, 938, 0, 237,
	238, 900, 899, 241, 242, 243, 890, 964, 244, 1001,
	1002, 499, 0, 245, 246, 971, 0, 952, 0, 247,
	248, 249, 250, 251, 252, 0, 0, 254, 255, 256,
	253, 0, 257, 0, 258, 259, 260, 0, 261, 974,
	262, 263, 955, 953, 954, 961, 957, 956, 960, 264,
	265, 266, 267, 943, 2191, 936, 935, 861, 270, 271,
	0, 273, 272, 0, 274, 0, 0, 275, 934, 277,
	0, 278, 0, 279, 280, 0, 281, 867, 282, 283,
	285, 287, 284, 288, 289, 290, 291, 992, 993, 879,
	219, 0, 0, 0, 0, 0, 292, 293, 294, 933,
	931, 932, 0, 297, 0, 298, 0, 0, 975, 299,
	300, 0, 301, 999, 0, 889, 302, 0, 303, 304,
	305, 2192, 966, 967, 970, 361, 977, 307, 308, 0,
	309, 310, 910, 0, 0, 220, 311, 313, 320, 0,
	976, 314, 922, 913, 924, 926, 927, 928, 923, 0,
	915, 0, 321, 978, 968, 979, 322, 323, 324, 980,
	948, 949, 0, 0, 327, 328, 329, 330, 331, 0,
	333, 332, 0, 334, 1000, 981, 335, 336, 982, 0,
	337, 338, 959, 958, 339, 340, 341, 342, 0, 343,
	344, 346, 348, 345, 2193, 2190, 351, 902, 350, 983,
	353, 354, 357, 358, 356, 984, 355, 858, 221, 985,
	359, 880, 969, 360, 937, 362, 363, 0, 911, 365,
	912, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	519, 986, 373, 987, 994, 374, 367, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 383, 995, 384, 522,
	385, 386, 0, 387, 0, 388, 389, 390, 391, 392,
	393, 394, 930, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 403, 404, 405, 402, 406, 407, 408, 409,
	0, 410, 988, 411, 412, 413, 414, 868, 415, 0,
	416, 420, 421, 422, 423, 424, 425, 2194, 0, 432,
	433, 903, 904, 906, 907, 428, 434, 435, 436, 962,
	437, 417, 418, 438, 439, 989, 440, 441, 925, 905,
	443, 0, 444, 445, 446, 447, 419, 448, 452, 973,
	449, 450, 451, 996, 0, 455, 456, 454, 0, 457,
	458, 459, 460, 461, 286, 901, 0, 463, 944, 945,
	946, 947, 0, 470, 0, 464, 465, 997, 466, 998,
	878, 467, 468, 469, 0, 471, 472, 0, 862, 473,
	474, 475, 477, 478, 476, 480, 963, 481, 0, 909,
	482, 483, 484, 533, 941, 991, 0, 486, 485, 536,
	0, 0, 0, 0, 487, 488, 537, 489, 2189, 491,
	859, 0, 0, 0, 0, 0, 857, 0, 0, 0,
	0, 0, 0, 855, 856, 0, 0, 0, 0, 0,
	0, 0, 884, 0, 0, 2185, 882, 2188, 2195, 873,
	874, 870, 871, 883, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 223, 224, 225, 226, 0,
	227, 0, 0, 0, 0, 0, 965, 888, 0, 0,
	0, 228, 230, 229, 231, 232, 493, 929, 908, 940,
	236, 898, 939, 938, 0, 237, 238, 900, 899, 241,
	242, 243, 890, 964, 244, 1001, 1002, 499, 0, 245,
	246, 971, 0, 952, 0, 247, 248, 249, 250, 251,
	252, 0, 0, 254, 255, 256, 253, 0, 257, 0,
	258, 259, 260, 0, 261, 974, 262, 263, 955, 953,
	954, 961, 957, 956, 960, 264, 265, 266, 267, 943,
	2191, 936, 935, 861, 270, 271, 0, 273, 272, 0,
	274, 0, 0, 275, 934, 277, 0, 278, 0, 279,
	280, 0, 281, 867, 282, 283, 285, 287, 284, 288,
	289, 290, 291, 992, 993, 879, 219, 0, 0, 0,
	0, 0, 292, 293, 294, 933, 931, 932, 0, 297,
	0, 298, 0, 0, 975, 299, 300, 0, 301, 999,
	0, 889, 302, 0, 303, 304, 305, 2192, 966, 967,
	970, 361, 977, 307, 308, 0, 309, 310, 910, 0,
	0, 220, 311, 313, 320, 0, 976, 314, 922, 913,
	924, 926, 927, 928, 923, 0, 915, 0, 321, 978,
	968, 979, 322, 323, 324, 980, 948, 949, 0, 0,
	327, 328, 329, 330, 331, 0, 333, 332, 0, 334,
	1000, 981, 335, 336, 982, 0, 337, 338, 959, 958,
	339, 340, 341, 342, 0, 343, 344, 346, 348, 345,
	2193, 2190, 351, 902, 350, 983, 353, 354, 357, 358,
	356, 984, 355, 858, 221, 985, 359, 880, 969, 360,
	937, 362, 363, 0, 911, 365, 912, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 519, 986, 373, 987,
	994, 374, 367, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 383, 995, 384, 522, 385, 386, 0, 387,
	0, 388, 389, 390, 391, 392, 393, 394, 930, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 403, 404,
	405, 402, 406, 407, 408, 409, 0, 410, 988, 411,
	412, 413, 414, 868, 415, 0, 416, 420, 421, 422,
	423, 424, 425, 2194, 0, 432, 433, 903, 904, 906,
	907, 428, 434, 435, 436, 962, 437, 417, 418, 438,
	439, 989, 440, 441, 925, 905, 443, 0, 444, 445,
	446, 447, 419, 448, 452, 973, 449, 450, 451, 996,
	0, 455, 456, 454, 0, 457, 458, 459, 460, 461,
	286, 901, 0, 463, 944, 945, 946, 947, 0, 470,
	0, 464, 465, 997, 466, 998, 878, 467, 468, 469,
	0, 471, 472, 0, 862, 473, 474, 475, 477, 478,
	476, 480, 963, 481, 0, 909, 482, 483, 484, 533,
	941, 991, 0, 486, 485, 536, 0, 0, 0, 0,
	487, 488, 537, 489, 2189, 491, 859, 0, 0, 0,
	0, 0, 857, 0, 0, 0, 0, 0, 0, 855,
	856, 914, 872, 873, 874, 870, 871, 883, 884, 0,
	0, 0, 882, 0, 0, 0, 0, 0, 222, 223,
	224, 225, 226, 0, 227, 0, 0, 0, 0, 0,
	965, 888, 0, 0, 0, 228, 230, 229, 231, 232,
	493, 929, 908, 940, 236, 898, 939, 938, 0, 237,
	238, 900, 899, 241, 242, 243, 890, 964, 244, 1001,
	1002, 499, 0, 245, 246, 971, 0, 952, 0, 247,
	248, 249, 250, 251, 252, 0, 0, 254, 255, 256,
	253, 0, 257, 0, 258, 259, 260, 0, 261, 974,
	262, 263, 955, 953, 954, 961, 957, 956, 960, 264,
	265, 266, 267, 943, 269, 936, 935, 861, 270, 271,
	0, 273, 272, 0, 274, 0, 0, 275, 934, 277,
	0, 278, 0, 279, 280, 0, 281, 867, 282, 283,
	285, 287, 284, 288, 289, 290, 291, 992, 993, 879,
	219, 0, 0, 0, 0, 0, 292, 293, 294, 933,
	931, 932, 0, 297, 0, 298, 0, 0, 975, 299,
	300, 0, 301, 999, 0, 889, 302, 0, 303, 304,
	305, 306, 966, 967, 970, 361, 977, 307, 308, 0,
	309, 310, 910, 0, 0, 220, 311, 313, 320, 0,
	976, 314, 922, 913, 924, 926, 927, 928, 923, 0,
	915, 0, 321, 978, 968, 979, 322, 323, 324, 980,
	948, 949, 0, 0, 327, 328, 329, 330, 331, 0,
	333, 332, 0, 334, 1000, 981, 335, 336, 982, 0,
	337, 338, 959, 958, 339, 340, 341, 342, 0, 343,
	344, 346, 348, 345, 347, 349, 351, 902, 350, 983,
	353, 354, 357, 358, 356, 984, 355, 858, 221, 985,
	359, 880, 969, 360, 937, 362, 363, 0, 911, 365,
	912, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	519, 986, 373, 987, 994, 374, 367, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 383, 995, 384, 522,
	385, 386, 0, 387, 0, 388, 389, 390, 391, 392,
	393, 394, 930, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 403, 404, 405, 402, 406, 407, 408, 409,
	0, 410, 988, 411, 412, 413, 414, 868, 415, 0,
	416, 420, 421, 422, 423, 424, 425, 426, 0, 432,
	433, 903, 904, 906, 907, 428, 434, 435, 436, 962,
	437, 417, 418, 438, 439, 989, 440, 441, 925, 905,
	443, 0, 444, 445, 446, 447, 419, 448, 452, 973,
	449, 450, 451, 996, 0, 455, 456, 454, 0, 457,
	458, 459, 460, 461, 286, 901, 0, 463, 944, 945,
	946, 947, 0, 470, 0, 464, 465, 997, 466, 998,
	878, 467, 468, 469, 0, 471, 472, 0, 862, 473,
	474, 475, 477, 478, 476, 480, 963, 481, 0, 909,
	482, 483, 484, 533, 941, 991, 0, 486, 485, 536,
	0, 0, 0, 0, 487, 488, 537, 489, 490, 491,
	859, 0, 0, 0, 0, 0, 857, 0, 0, 0,
	0, 0, 0, 855, 856, 0, 0, 0, 0, 0,
	1562, 0, 884, 0, 0, 0, 882, 914, 872, 873,
	874, 870, 871, 883, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 223, 224, 225, 226, 2013,
	227, 0, 0, 0, 0, 0, 965, 888, 0, 0,
	0, 228, 230, 229, 231, 232, 493, 929, 908, 940,
	236, 898, 939, 938, 0, 237, 238, 900, 899, 241,
	242, 243, 890, 964, 244, 1001, 1002, 499, 0, 245,
	246, 971, 0, 952, 0, 247, 248, 249, 250, 251,
	252, 0, 0, 254, 255, 256, 253, 0, 257, 0,
	258, 259, 260, 0, 261, 974, 262, 263, 955, 953,
	954, 961, 957, 956, 960, 264, 265, 266, 267, 943,
	269, 936, 935, 861, 270, 271, 0, 273, 272, 0,
	274, 0, 0, 275, 934, 277, 0, 278, 0, 279,
	280, 0, 281, 867, 282, 283, 285, 287, 284, 288,
	289, 290, 291, 992, 993, 879, 219, 0, 0, 0,
	0, 0, 292, 293, 294, 933, 931, 932, 0, 297,
	0, 298, 0, 0, 975, 299, 300, 0, 301, 999,
	0, 889, 302, 0, 303, 304, 305, 306, 966, 967,
	970, 361, 977, 307, 308, 0, 309, 310, 910, 0,
	0, 220, 311, 313, 320, 0, 976, 314, 922, 913,
	924, 926, 927, 928, 923, 0, 915, 0, 321, 978,
	968, 979, 322, 323, 324, 980, 948, 949, 0, 0,
	327, 328, 329, 330, 331, 0, 333, 332, 0, 334,
	1000, 981, 335, 336, 982, 0, 337, 338, 959, 958,
	339, 340, 341, 342, 0, 343, 344, 346, 348, 345,
	347, 349, 351, 902, 350, 983, 353, 354, 357, 358,
	356, 984, 355, 858, 221, 985, 359, 880, 969, 360,
	937, 362, 363, 0, 911, 365, 912, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 519, 986, 373, 987,
	994, 374, 367, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 383, 995, 384, 522, 385, 386, 0, 387,
	0, 388, 389, 390, 391, 392, 393, 394, 930, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 403, 404,
	405, 402, 406, 407, 408, 409, 0, 410, 988, 411,
	412, 413, 414, 868, 415, 0, 416, 420, 421, 422,
	423, 424, 425, 426, 0, 432, 433, 903, 904, 906,
	907, 428, 434, 435, 436, 962, 437, 417, 418, 438,
	439, 989, 440, 441, 925, 905, 443, 0, 444, 445,
	446, 447, 419, 448, 452, 973, 449, 450, 451, 996,
	0, 455, 456, 454, 0, 457, 458, 459, 460, 461,
	286, 901, 0, 463, 944, 945, 946, 947, 0, 470,
	0, 464, 465, 997, 466, 998, 878, 467, 468, 469,
	0, 471, 472, 0, 862, 473, 474, 475, 477, 478,
	476, 480, 963, 481, 0, 909, 482, 483, 484, 533,
	941, 991, 0, 486, 485, 536, 0, 0, 0, 0,
	487, 488, 537, 489, 490, 491, 859, 0, 0, 0,
	0, 0, 857, 0, 0, 0, 0, 0, 0, 855,
	856, 0, 0, 0, 0, 0, 0, 0, 884, 0,
	0, 1238, 882, 914, 872, 873, 874, 870, 871, 883,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 223, 224, 225, 226, 0, 227, 0, 0, 0,
	0, 0, 965, 888, 0, 0, 0, 228, 230, 229,
	231, 232, 493, 929, 908, 940, 236, 898, 939, 938,
	0, 237, 238, 900, 899, 241, 242, 243, 890, 964,
	244, 1001, 1002, 499, 0, 245, 246, 971, 0, 952,
	0, 247, 248, 249, 250, 251, 252, 0, 0, 254,
	255, 256, 253, 0, 257, 0, 258, 259, 260, 0,
	261, 974, 262, 263, 955, 953, 954, 961, 957, 956,
	960, 264, 265, 266, 267, 943, 269, 936, 935, 861,
	270, 271, 0, 273, 272, 0, 274, 0, 0, 275,
	934, 277, 0, 278, 0, 279, 280, 0, 281, 867,
	282, 283, 285, 287, 284, 288, 289, 290, 291, 992,
	993, 879, 219, 0, 0, 0, 0, 0, 292, 293,
	294, 933, 931, 932, 0, 297, 0, 298, 0, 0,
	975, 299, 300, 0, 301, 999, 0, 889, 302, 0,
	303, 304, 305, 306, 1237, 967, 970, 361, 977, 307,
	308, 0, 309, 310, 910, 0, 0, 220, 311, 313,
	320, 0, 976, 314, 922, 913, 924, 926, 927, 928,
	923, 0, 915, 0, 321, 978, 968, 979, 322, 323,
	324, 980, 948, 949, 0, 0, 327, 328, 329, 330,
	331, 0, 333, 332, 0, 334, 1000, 981, 335, 336,
	982, 0, 337, 338, 959, 958, 339, 340, 341, 342,
	0, 343, 344, 346, 348, 345, 347, 349, 351, 902,
	350, 983, 353, 354, 357, 358, 356, 984, 355, 858,
	221, 985, 359, 880, 969, 360, 937, 362, 363, 0,
	911, 365, 912, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 519, 986, 373, 987, 994, 374, 367, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 383, 995,
	384, 522, 385, 386, 0, 387, 0, 388, 389, 390,
	391, 392, 393, 394, 930, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 403, 404, 405, 402, 406, 407,
	408, 409, 0, 410, 988, 411, 412, 413, 414, 868,
	415, 0, 416, 420, 421, 422, 423, 424, 425, 426,
	0, 432, 433, 903, 904, 906, 907, 428, 434, 435,
	436, 962, 437, 417, 418, 438, 439, 989, 440, 441,
	925, 905, 443, 0, 444, 445, 446, 447, 419, 448,
	452, 973, 449, 450, 451, 996, 0, 455, 456, 454,
	0, 457, 458, 459, 460, 461, 286, 901, 0, 463,
	944, 945, 946, 947, 0, 470, 0, 464, 465, 997,
	466, 998, 878, 467, 468, 469, 0, 471, 472, 0,
	862, 473, 474, 475, 477, 478, 476, 480, 963, 481,
	0, 909, 482, 483, 484, 533, 941, 991, 0, 486,
	485, 536, 0, 0, 0, 0, 487, 488, 537, 489,
	490, 491, 859, 0, 0, 0, 0, 0, 857, 0,
	0, 0, 0, 0, 0, 855, 856, 0, 0, 0,
	0, 0, 0, 0, 884, 0, 0, 1232, 882, 914,
	872, 873, 874, 870, 871, 883, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 223, 224, 225,
	226, 0, 227, 0, 0, 0, 0, 0, 965, 888,
	0, 0, 0, 228, 230, 229, 231, 232, 493, 929,
	908, 940, 236, 898, 939, 938, 0, 237, 238, 900,
	899, 241, 242, 243, 890, 964, 244, 1001, 1002, 499,
	0, 245, 246, 971, 0, 952, 0, 247, 248, 249,
	250, 251, 252, 0, 0, 254, 255, 256, 253, 0,
	257, 0, 258, 259, 260, 0, 261, 974, 262, 263,
	955, 953, 954, 961, 957, 956, 960, 264, 265, 266,
	267, 943, 269, 936, 935, 861, 270, 271, 0, 273,
	272, 0, 274, 0, 0, 275, 934, 277, 0, 278,
	0, 279, 280, 0, 281, 867, 282, 283, 285, 287,
	284, 288, 289, 290, 291, 992, 993, 879, 219, 0,
	0, 0, 0, 0, 292, 293, 294, 933, 931, 932,
	0, 297, 0, 298, 0, 0, 975, 299, 300, 0,
	301, 999, 0, 889, 302, 0, 303, 304, 305, 306,
	1231, 967, 970, 361, 977, 307, 308, 0, 309, 310,
	910, 0, 0, 220, 311, 313, 320, 0, 976, 314,
	922, 913, 924, 926, 927, 928, 923, 0, 915, 0,
	321, 978, 968, 979, 322, 323, 324, 980, 948, 949,
	0, 0, 327, 328, 329, 330, 331, 0, 333, 332,
	0, 334, 1000, 981, 335, 336, 982, 0, 337, 338,
	959, 958, 339, 340, 341, 342, 0, 343, 344, 346,
	348, 345, 347, 349, 351, 902, 350, 983, 353, 354,
	357, 358, 356, 984, 355, 858, 221, 985, 359, 880,
	969, 360, 937, 362, 363, 0, 911, 365, 912, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 519, 986,
	373, 987, 994, 374, 367, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 383, 995, 384, 522, 385, 386,
	0, 387, 0, 388, 389, 390, 391, 392, 393, 394,
	930, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	403, 404, 405, 402, 406, 407, 408, 409, 0, 410,
	988, 411, 412, 413, 414, 868, 415, 0, 416, 420,
	421, 422, 423, 424, 425, 426, 0, 432, 433, 903,
	904, 906, 907, 428, 434, 435, 436, 962, 437, 417,
	418, 438, 439, 989, 440, 441, 925, 905, 443, 0,
	444, 445, 446, 447, 419, 448, 452, 973, 449, 450,
	451, 996, 0, 455, 456, 454, 0, 457, 458, 459,
	460, 461, 286, 901, 0, 463, 944, 945, 946, 947,
	0, 470, 0, 464, 465, 997, 466, 998, 878, 467,
	468, 469, 0, 471, 472, 0, 862, 473, 474, 475,
	477, 478, 476, 480, 963, 481, 0, 909, 482, 483,
	484, 533, 941, 991, 0, 486, 485, 536, 0, 0,
	0, 0, 487, 488, 537, 489, 490, 491, 859, 0,
	0, 0, 0, 0, 857, 0, 0, 0, 0, 0,
	0, 855, 856, 0, 0, 0, 0, 0, 0, 0,
	884, 0, 0, 1227, 882, 914, 872, 873, 874, 870,
	871, 883, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 223, 224, 225, 226, 0, 227, 0,
	0, 0, 0, 0, 965, 888, 0, 0, 0, 228,
	230, 229, 231, 232, 493, 929, 908, 940, 236, 898,
	939, 938, 0, 237, 238, 900, 899, 241, 242, 243,
	890, 964, 244, 1001, 1002, 499, 0, 245, 246, 971,
	0, 952, 0, 247, 248, 249, 250, 251, 252, 0,
	0, 254, 255, 256, 253, 0, 257, 0, 258, 259,
	260, 0, 261, 974, 262, 263, 955, 953, 954, 961,
	957, 956, 960, 264, 265, 266, 267, 943, 269, 936,
	935, 861, 270, 271, 0, 273, 272, 0, 274, 0,
	0, 275, 934, 277, 0, 278, 0, 279, 280, 0,
	281, 867, 282, 283, 285, 287, 284, 288, 289, 290,
	291, 992, 993, 879, 219, 0, 0, 0, 0, 0,
	292, 293, 294, 933, 931, 932, 0, 297, 0, 298,
	0, 0, 975, 299, 300, 0, 301, 999, 0, 889,
	302, 0, 303, 304, 305, 306, 966, 967, 970, 361,
	977, 307, 308, 0, 309, 310, 910, 0, 0, 220,
	311, 313, 320, 0, 976, 314, 922, 913, 924, 926,
	927, 928, 923, 0, 915, 0, 321, 978, 968, 979,
	322, 323, 324, 980, 948, 949, 0, 0, 327, 328,
	329, 330, 331, 0, 333, 332, 0, 334, 1000, 981,
	335, 336, 982, 0, 337, 338, 959, 958, 339, 340,
	341, 342, 0, 343, 344, 346, 348, 345, 347, 349,
	351, 902, 350, 983, 353, 354, 357, 358, 356, 984,
	355, 858, 221, 985, 359, 880, 969, 360, 937, 362,
	363, 0, 911, 365, 912, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 519, 986, 373, 987, 994, 374,
	367, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	383, 995, 384, 522, 385, 386, 0, 387, 0, 388,
	389, 390, 391, 392, 393, 394, 930, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 403, 404, 405, 402,
	406, 407, 408, 409, 0, 410, 988, 411, 412, 413,
	414, 868, 415, 0, 416, 420, 421, 422, 423, 424,
	425, 426, 0, 432, 433, 903, 904, 906, 907, 428,
	434, 435, 436, 962, 437, 417, 418, 438, 439, 989,
	440, 441, 925, 905, 443, 0, 444, 445, 446, 447,
	419, 448, 452, 973, 449, 450, 451, 996, 0, 455,
	456, 454, 0, 457, 458, 459, 460, 461, 286, 901,
	0, 463, 944, 945, 946, 947, 0, 470, 0, 464,
	465, 997, 466, 998, 878, 467, 468, 469, 0, 471,
	472, 0, 862, 473, 474, 475, 477, 478, 476, 480,
	963, 481, 0, 909, 482, 483, 484, 533, 941, 991,
	0, 486, 485, 536, 0, 0, 0, 0, 487, 488,
	537, 489, 490, 491, 859, 0, 0, 0, 0, 0,
	857, 0, 0, 0, 0, 0, 0, 855, 856, 914,
	872, 873, 874, 870, 871, 883, 884, 0, 0, 0,
	882, 0, 0, 0, 0, 0, 222, 223, 224, 225,
	226, 0, 227, 0, 0, 0, 0, 0, 965, 888,
	0, 0, 0, 228, 230, 229, 231, 232, 493, 929,
	908, 940, 236, 898, 939, 938, 0, 237, 238, 900,
	899, 241, 242, 243, 890, 964, 244, 1001, 1002, 499,
	0, 245, 246, 971, 0, 952, 0, 247, 248, 249,
	250, 251, 252, 0, 0, 254, 255, 256, 253, 0,
	257, 0, 258, 259, 260, 0, 261, 974, 262, 263,
	955, 953, 954, 961, 957, 956, 960, 264, 265, 266,
	267, 943, 269, 936, 935, 861, 270, 271, 0, 273,
	272, 0, 274, 0, 0, 275, 934, 277, 0, 278,
	0, 279, 280, 0, 281, 867, 282, 283, 285, 287,
	284, 288, 289, 290, 291, 992, 993, 879, 219, 0,
	0, 0, 0, 0, 292, 293, 294, 933, 931, 932,
	0, 297, 0, 298, 0, 0, 975, 299, 300, 0,
	301, 999, 0, 889, 302, 0, 303, 304, 305, 306,
	966, 967, 970, 361, 977, 307, 308, 0, 309, 310,
	910, 0, 0, 220, 311, 313, 320, 0, 976, 314,
	922, 913, 924, 926, 927, 928, 923, 0, 915, 0,
	321, 978, 968, 979, 322, 323, 324, 980, 948, 949,
	0, 0, 327, 328, 329, 330, 331, 0, 333, 332,
	0, 334, 1000, 981, 335, 336, 982, 0, 337, 338,
	959, 958, 339, 340, 341, 342, 0, 343, 344, 346,
	348, 345, 347, 349, 351, 902, 350, 983, 353, 354,
	357, 358, 356, 984, 355, 858, 221, 985, 359, 880,
	969, 360, 937, 362, 363, 0, 911, 365, 912, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 519, 986,
	373, 987, 994, 374, 367, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 383, 995, 384, 522, 385, 386,
	0, 387, 0, 388, 389, 390, 391, 392, 393, 394,
	930, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	403, 404, 405, 402, 406, 407, 408, 409, 0, 410,
	988, 411, 412, 413, 414, 868, 415, 0, 416, 420,
	421, 422, 423, 424, 425, 426, 0, 432, 433, 903,
	904, 906, 907, 428, 434, 435, 436, 962, 437, 417,
	418, 438, 439, 989, 440, 441, 925, 905, 443, 0,
	444, 445, 446, 447, 419, 448, 452, 973, 449, 450,
	451, 996, 0, 455, 456, 454, 0, 457, 458, 459,
	460, 461, 286, 901, 0, 463, 944, 945, 946, 947,
	0, 470, 0, 464, 465, 997, 466, 998, 878, 467,
	468, 469, 0, 471, 472, 0, 862, 473, 474, 475,
	477, 478, 476, 480, 963, 481, 0, 909, 482, 483,
	484, 533, 941, 991, 0, 486, 485, 536, 0, 0,
	0, 0, 487, 488, 537, 489, 490, 491, 859, 0,
	0, 0, 0, 0, 857, 0, 0, 0, 0, 0,
	0, 855, 856, 914, 872, 873, 874, 870, 871, 883,
	884, 0, 0, 0, 882, 0, 0, 0, 0, 0,
	222, 223, 224, 225, 226, 0, 227, 0, 0, 0,
	0, 0, 965, 888, 0, 0, 0, 228, 230, 229,
	231, 232, 493, 929, 908, 940, 236, 898, 939, 938,
	0, 237, 238, 900, 899, 241, 242, 243, 890, 964,
	244, 1001, 1002, 499, 0, 245, 246, 971, 0, 952,
	0, 247, 248, 249, 250, 251, 252, 0, 0, 254,
	255, 256, 253, 0, 257, 0, 258, 259, 260, 0,
	261, 974, 262, 3653, 955, 953, 954, 961, 957, 956,
	960, 264, 265, 266, 267, 943, 269, 936, 935, 861,
	270, 271, 0, 273, 272, 0, 274, 0, 0, 275,
	934, 277, 0, 278, 0, 279, 280, 0, 281, 867,
	282, 283, 285, 287, 284, 288, 289, 290, 291, 992,
	993, 879, 219, 0, 0, 0, 0, 0, 292, 293,
	294, 933, 931, 932, 0, 297, 0, 298, 0, 0,
	975, 299, 300, 0, 301, 999, 0, 889, 302, 0,
	303, 304, 305, 306, 966, 967, 970, 361, 977, 307,
	308, 0, 309, 310, 910, 0, 0, 220, 311, 313,
	320, 0, 976, 314, 922, 913, 924, 926, 927, 928,
	923, 0, 915, 0, 321, 978, 968, 979, 322, 323,
	324, 980, 948, 949, 0, 0, 327, 328, 329, 330,
	331, 0, 333, 332, 0, 334, 1000, 981, 335, 336,
	982, 0, 337, 338, 959, 958, 339, 340, 341, 342,
	0, 343, 344, 346, 348, 345, 347, 349, 351, 902,
	350, 983, 353, 354, 357, 358, 356, 984, 355, 858,
	221, 985, 359, 880, 969, 360, 937, 362, 363, 0,
	911, 365, 912, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 519, 986, 373, 987, 994, 374, 367, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 383, 995,
	384, 522, 385, 386, 0, 387, 0, 388, 389, 390,
	391, 392, 393, 394, 930, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 403, 404, 405, 402, 406, 407,
	408, 409, 0, 410, 988, 411, 412, 413, 414, 868,
	415, 0, 416, 420, 421, 422, 423, 424, 425, 426,
	0, 432, 433, 903, 904, 906, 907, 428, 434, 435,
	436, 962, 437, 417, 418, 438, 439, 989, 440, 441,
	925, 905, 443, 0, 444, 445, 446, 447, 419, 448,
	452, 973, 449, 450, 451, 996, 0, 455, 456, 454,
	0, 457, 458, 459, 460, 461, 286, 901, 0, 463,
	944, 945, 946, 947, 0, 470, 0, 464, 465, 997,
	466, 998, 878, 467, 468, 469, 0, 3652, 472, 0,
	862, 473, 474, 475, 477, 478, 476, 480, 963, 481,
	0, 909, 482, 483, 484, 533, 941, 991, 0, 486,
	485, 536, 0, 0, 0, 0, 487, 488, 537, 489,
	490, 491, 859, 0, 0, 0, 0, 0, 857, 0,
	0, 0, 0, 0, 0, 855, 856, 914, 872, 873,
	874, 870, 871, 883, 884, 0, 0, 0, 882, 0,
	0, 0, 0, 0, 222, 223, 224, 225, 226, 0,
	227, 0, 0, 0, 0, 0, 965, 888, 0, 0,
	0, 228, 230, 229, 231, 232, 3651, 929, 908, 940,
	236, 898, 939, 938, 0, 237, 238, 900, 899, 241,
	242, 243, 890, 964, 244, 1001, 1002, 499, 0, 245,
	246, 971, 0, 952, 0, 247, 248, 249, 250, 251,
	252, 0, 0, 254, 255, 256, 253, 0, 257, 0,
	258, 259, 260, 0, 261, 974, 262, 3653, 955, 953,
	954, 961, 957, 956, 960, 264, 265, 266, 267, 943,
	269, 936, 935, 861, 270, 271, 0, 273, 272, 0,
	274, 0, 0, 275, 934, 277, 0, 278, 0, 279,
	280, 0, 281, 867, 282, 283, 285, 287, 284, 288,
	289, 290, 291, 992, 993, 879, 219, 0, 0, 0,
	0, 0, 292, 293, 294, 933, 931, 932, 0, 297,
	0, 298, 0, 0, 975, 299, 300, 0, 301, 999,
	0, 889, 302, 0, 303, 304, 305, 306, 966, 967,
	970, 361, 977, 307, 308, 0, 309, 310, 910, 0,
	0, 220, 311, 313, 320, 0, 976, 314, 922, 913,
	924, 926, 927, 928, 923, 0, 915, 0, 321, 978,
	968, 979, 322, 323, 324, 980, 948, 949, 0, 0,
	327, 328, 329, 330, 331, 0, 333, 332, 0, 334,
	1000, 981, 335, 336, 982, 0, 337, 338, 959, 958,
	339, 340, 341, 342, 0, 343, 344, 346, 348, 345,
	347, 349, 351, 902, 350, 983, 353, 354, 357, 358,
	356, 984, 355, 858, 221, 985, 359, 880, 969, 360,
	937, 362, 363, 0, 911, 365, 912, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 519, 986, 373, 987,
	994, 374, 367, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 383, 995, 384, 522, 385, 386, 0, 387,
	0, 388, 389, 390, 391, 392, 393, 394, 930, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 403, 404,
	405, 402, 406, 407, 408, 409, 0, 410, 988, 411,
	412, 413, 414, 868, 415, 0, 416, 420, 421, 422,
	423, 424, 425, 426, 0, 432, 433, 903, 904, 906,
	907, 428, 434, 435, 436, 962, 437, 417, 418, 438,
	439, 989, 440, 441, 925, 905, 443, 0, 444, 445,
	446, 447, 419, 448, 452, 973, 449, 450, 451, 996,
	0, 455, 456, 454, 0, 457, 458, 459, 460, 461,
	286, 901, 0, 463, 944, 945, 946, 947, 0, 470,
	0, 464, 465, 997, 466, 998, 878, 467, 468, 469,
	0, 3652, 472, 0, 862, 473, 474, 475, 477, 478,
	476, 480, 963, 481, 0, 909, 482, 483, 484, 533,
	941, 991, 0, 486, 485, 536, 0, 0, 0, 0,
	487, 488, 537, 489, 490, 491, 859, 0, 0, 0,
	0, 0, 857, 0, 0, 0, 0, 0, 0, 855,
	856, 914, 872, 873, 874, 2559, 2560, 883, 884, 0,
	0, 0, 882, 0, 0, 0, 0, 0, 222, 223,
	224, 225, 226, 0, 227, 0, 0, 0, 0, 0,
	965, 888, 0, 0, 0, 228, 230, 229, 231, 232,
	493, 929, 908, 940, 236, 898, 939, 938, 0, 237,
	238, 900, 899, 241, 242, 243, 890, 964, 244, 1001,
	1002, 499, 0, 245, 246, 971, 0, 952, 0, 247,
	248, 249, 250, 251, 252, 0, 0, 254, 255, 256,
	253, 0, 257, 0, 258, 259, 260, 0, 261, 974,
	262, 263, 955, 953, 954, 961, 957, 956, 960, 264,
	265, 266, 267, 943, 269, 936, 935, 861, 270, 271,
	0, 273, 272, 0, 274, 0, 0, 275, 934, 277,
	0, 278, 0, 279, 280, 0, 281, 867, 282, 283,
	285, 287, 284, 288, 289, 290, 291, 992, 993, 879,
	219, 0, 0, 0, 0, 0, 292, 293, 294, 933,
	931, 932, 0, 297, 0, 298, 0, 0, 975, 299,
	300, 0, 301, 999, 0, 889, 302, 0, 303, 304,
	305, 306, 966, 967, 970, 361, 977, 307, 308, 0,
	309, 310, 910, 0, 0, 220, 311, 313, 320, 0,
	976, 314, 922, 913, 924, 926, 927, 928, 923, 0,
	915, 0, 321, 978, 968, 979, 322, 323, 324, 980,
	948, 949, 0, 0, 327, 328, 329, 330, 331, 0,
	333, 332, 0, 334, 1000, 981, 335, 336, 982, 0,
	337, 338, 959, 958, 339, 340, 341, 342, 0, 343,
	344, 346, 348, 345, 347, 349, 351, 902, 350, 983,
	353, 354, 357, 358, 356, 984, 355, 858, 221, 985,
	359, 880, 969, 360, 937, 362, 363, 0, 911, 365,
	912, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	519, 986, 373, 987, 994, 374, 367, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 383, 995, 384, 522,
	385, 386, 0, 387, 0, 388, 389, 390, 391, 392,
	393, 394, 930, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 403, 404, 405, 402, 406, 407, 408, 409,
	0, 410, 988, 411, 412, 413, 414, 868, 415, 0,
	416, 420, 421, 422, 423, 424, 425, 426, 0, 432,
	433, 903, 904, 906, 907, 428, 434, 435, 436, 962,
	437, 417, 418, 438, 439, 989, 440, 441, 925, 905,
	443, 0, 444, 445, 446, 447, 419, 448, 452, 973,
	449, 450, 451, 996, 0, 455, 456, 454, 0, 457,
	458, 459, 460, 461, 286, 901, 0, 463, 944, 945,
	946, 947, 0, 470, 0, 464, 465, 997, 466, 998,
	878, 467, 468, 469, 0, 471, 472, 0, 862, 473,
	474, 475, 477, 478, 476, 480, 963, 481, 0, 909,
	482, 483, 484, 533, 941, 991, 0, 486, 485, 536,
	0, 0, 0, 0, 487, 488, 537, 489, 490, 491,
	859, 0, 0, 0, 0, 0, 857, 0, 0, 0,
	0, 0, 0, 855, 856, 914, 872, 873, 874, 2557,
	2558, 883, 884, 0, 0, 0, 882, 0, 0, 0,
	0, 0, 222, 223, 224, 225, 226, 0, 227, 0,
	0, 0, 0, 0, 965, 888, 0, 0, 0, 228,
	230, 229, 231, 232, 493, 929, 908, 940, 236, 898,
	939, 938, 0, 237, 238, 900, 899, 241, 242, 243,
	890, 964, 244, 1001, 1002, 499, 0, 245, 246, 971,
	0, 952, 0, 247, 248, 249, 250, 251, 252, 0,
	0, 254, 255, 256, 253, 0, 257, 0, 258, 259,
	260, 0, 261, 974, 262, 263, 955, 953, 954, 961,
	957, 956, 960, 264, 265, 266, 267, 943, 269, 936,
	935, 861, 270, 271, 0, 273, 272, 0, 274, 0,
	0, 275, 934, 277, 0, 278, 0, 279, 280, 0,
	281, 867, 282, 283, 285, 287, 284, 288, 289, 290,
	291, 992, 993, 879, 219, 0, 0, 0, 0, 0,
	292, 293, 294, 933, 931, 932, 0, 297, 0, 298,
	0, 0, 975, 299, 300, 0, 301, 999, 0, 889,
	302, 0, 303, 304, 305, 306, 966, 967, 970, 361,
	977, 307, 308, 0, 309, 310, 910, 0, 0, 220,
	311, 313, 320, 0, 976, 314, 922, 913, 924, 926,
	927, 928, 923, 0, 915, 0, 321, 978, 968, 979,
	322, 323, 324, 980, 948, 949, 0, 0, 327, 328,
	329, 330, 331, 0, 333, 332, 0, 334, 1000, 981,
	335, 336, 982, 0, 337, 338, 959, 958, 339, 340,
	341, 342, 0, 343, 344, 346, 348, 345, 347, 349,
	351, 902, 350, 983, 353, 354, 357, 358, 356, 984,
	355, 858, 221, 985, 359, 880, 969, 360, 937, 362,
	363, 0, 911, 365, 912, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 519, 986, 373, 987, 994, 374,
	367, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	383, 995, 384, 522, 385, 386, 0, 387, 0, 388,
	389, 390, 391, 392, 393, 394, 930, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 403, 404, 405, 402,
	406, 407, 408, 409, 0, 410, 988, 411, 412, 413,
	414, 868, 415, 0, 416, 420, 421, 422, 423, 424,
	425, 426, 0, 432, 433, 903, 904, 906, 907, 428,
	434, 435, 436, 962, 437, 417, 418, 438, 439, 989,
	440, 441, 925, 905, 443, 0, 444, 445, 446, 447,
	419, 448, 452, 973, 449, 450, 451, 996, 0, 455,
	456, 454, 0, 457, 458, 459, 460, 461, 286, 901,
	0, 463, 944, 945, 946, 947, 0, 470, 0, 464,
	465, 997, 466, 998, 878, 467, 468, 469, 0, 471,
	472, 0, 862, 473, 474, 475, 477, 478, 476, 480,
	963, 481, 0, 909, 482, 483, 484, 533, 941, 991,
	0, 486, 485, 536, 0, 0, 0, 0, 487, 488,
	537, 489, 490, 491, 859, 0, 0, 0, 0, 0,
	857, 0, 0, 0, 0, 0, 0, 855, 856, 914,
	872, 873, 874, 870, 871, 883, 884, 0, 0, 0,
	882, 0, 0, 0, 0, 0, 222, 223, 224, 225,
	226, 0, 227, 0, 0, 0, 0, 0, 965, 888,
	0, 0, 0, 228, 230, 229, 231, 232, 493, 929,
	908, 940, 236, 898, 939, 938, 0, 237, 238, 900,
	899, 241, 242, 243, 890, 964, 244, 1001, 1002, 499,
	0, 245, 246, 971, 0, 952, 0, 247, 248, 249,
	250, 251, 252, 0, 0, 254, 255, 256, 253, 0,
	257, 0, 258, 259, 260, 0, 261, 974, 262, 263,
	955, 953, 954, 961, 957, 956, 960, 264, 265, 266,
	267, 943, 269, 936, 935, 861, 270, 271, 0, 273,
	272, 0, 274, 0, 0, 275, 934, 277, 0, 278,
	0, 279, 280, 0, 281, 867, 282, 283, 285, 287,
	284, 288, 289, 290, 291, 992, 993, 879, 219, 0,
	0, 0, 0, 0, 292, 293, 294, 933, 931, 932,
	0, 297, 0, 298, 0, 0, 975, 299, 300, 0,
	301, 999, 0, 889, 302, 0, 303, 304, 305, 306,
	966, 967, 970, 361, 977, 307, 308, 0, 309, 310,
	910, 0, 0, 220, 311, 313, 320, 0, 976, 314,
	922, 913, 924, 926, 927, 928, 923, 0, 915, 0,
	321, 978, 968, 979, 322, 323, 324, 980, 948, 949,
	0, 0, 327, 328, 329, 330, 331, 0, 333, 332,
	0, 334, 1000, 981, 335, 336, 982, 0, 337, 338,
	959, 958, 339, 340, 341, 342, 0, 343, 344, 346,
	348, 345, 347, 349, 351, 902, 350, 983, 353, 354,
	357, 358, 356, 984, 355, 858, 221, 985, 359, 880,
	969, 360, 937, 362, 363, 0, 911, 365, 912, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 519, 986,
	373, 987, 994, 374, 367, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 383, 995, 384, 522, 385, 386,
	0, 387, 0, 388, 389, 390, 391, 392, 393, 394,
	930, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	403, 404, 405, 402, 406, 407, 408, 409, 0, 410,
	988, 411, 412, 413, 414, 868, 415, 0, 416, 420,
	421, 422, 423, 424, 425, 426, 0, 432, 433, 903,
	904, 906, 907, 428, 434, 435, 436, 962, 437, 417,
	418, 438, 439, 989, 440, 441, 925, 905, 443, 0,
	444, 445, 446, 447, 419, 448, 452, 973, 449, 450,
	451, 996, 0, 455, 456, 454, 0, 457, 458, 459,
	460, 461, 286, 901, 0, 463, 944, 945, 946, 947,
	0, 470, 0, 464, 465, 997, 466, 998, 878, 467,
	468, 469, 0, 471, 472, 0, 862, 473, 474, 475,
	477, 478, 476, 480, 963, 481, 0, 909, 482, 483,
	484, 533, 941, 991, 0, 486, 485, 536, 0, 0,
	0, 0, 487, 488, 537, 489, 490, 491, 859, 0,
	0, 0, 0, 0, 857, 0, 0, 0, 0, 0,
	0, 2021, 2022, 914, 872, 873, 874, 870, 871, 883,
	884, 0, 0, 0, 882, 0, 0, 0, 0, 0,
	222, 223, 224, 225, 226, 0, 227, 0, 0, 0,
	0, 0, 965, 888, 0, 0, 0, 228, 230, 229,
	231, 232, 493, 929, 908, 940, 236, 898, 939, 938,
	0, 237, 238, 900, 899, 241, 242, 243, 890, 964,
	244, 1001, 1002, 499, 0, 245, 246, 971, 0, 952,
	0, 247, 248, 249, 250, 251, 252, 0, 0, 254,
	255, 256, 253, 0, 257, 0, 258, 259, 260, 0,
	261, 974, 262, 263, 955, 953, 954, 961, 957, 956,
	960, 264, 265, 266, 267, 943, 269, 936, 935, 0,
	270, 271, 0, 273, 272, 0, 274, 0, 0, 275,
	934, 277, 0, 278, 0, 279, 280, 0, 281, 867,
	282, 283, 285, 287, 284, 288, 289, 290, 291, 992,
	993, 879, 219, 0, 0, 0, 0, 0, 292, 293,
	294, 933, 931, 932, 0, 297, 0, 298, 0, 0,
	975, 299, 300, 0, 301, 999, 0, 889, 302, 0,
	303, 304, 305, 306, 966, 967, 970, 361, 977, 307,
	308, 0, 309, 310, 910, 0, 0, 220, 311, 313,
	320, 0, 976, 314, 922, 913, 924, 926, 927, 928,
	923, 0, 915, 0, 321, 978, 968, 979, 322, 323,
	324, 980, 948, 949, 0, 0, 327, 328, 329, 330,
	331, 0, 333, 332, 0, 334, 1000, 981, 335, 336,
	982, 0, 337, 338, 959, 958, 339, 340, 341, 342,
	0, 343, 344, 346, 348, 345, 347, 349, 351, 902,
	350, 983, 353, 354, 357, 358, 356, 984, 355, 0,
	221, 985, 359, 880, 969, 360, 937, 362, 363, 0,
	911, 365, 912, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 519, 986, 373, 987, 994, 374, 367, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 383, 995,
	384, 522, 385, 386, 0, 387, 0, 388, 389, 390,
	391, 392, 393, 394, 930, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 403, 404, 405, 402, 406, 407,
	408, 409, 0, 410, 988, 411, 412, 413, 414, 868,
	415, 0, 416, 420, 421, 422, 423, 424, 425, 426,
	0, 432, 433, 903, 904, 906, 907, 428, 434, 435,
	436, 962, 437, 417, 418, 438, 439, 989, 440, 441,
	925, 905, 443, 0, 444, 445, 446, 447, 419, 448,
	452, 973, 449, 450, 451, 996, 0, 455, 456, 454,
	0, 457, 458, 459, 460, 461, 286, 901, 0, 463,
	944, 945, 946, 947, 0, 470, 0, 464, 465, 997,
	466, 998, 878, 467, 468, 469, 0, 471, 472, 0,
	0, 473, 474, 475, 477, 478, 476, 480, 963, 481,
	0, 909, 482, 483, 484, 533, 941, 991, 0, 486,
	485, 536, 0, 0, 0, 0, 487, 488, 537, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 2207, 0,
	0, 0, 0, 0, 0, 2205, 2206, 914, 872, 873,
	874, 870, 871, 883, 884, 0, 0, 0, 882, 0,
	0, 0, 0, 0, 222, 223, 224, 225, 226, 0,
	227, 0, 0, 0, 0, 0, 965, 888, 0, 0,
	0, 228, 230, 229, 231, 232, 493, 929, 908, 940,
	236, 898, 939, 938, 0, 237, 238, 900, 899, 241,
	242, 243, 890, 964, 244, 1001, 1002, 499, 0, 245,
	246, 971, 0, 952, 0, 247, 248, 249, 250, 251,
	252, 0, 0, 254, 255, 256, 253, 0, 257, 0,
	258, 259, 260, 0, 261, 974, 262, 263, 955, 953,
	954, 961, 957, 956, 960, 264, 265, 266, 267, 943,
	269, 936, 935, 0, 270, 271, 0, 273, 272, 0,
	274, 0, 0, 275, 934, 277, 0, 278, 0, 279,
	280, 0, 281, 867, 282, 283, 285, 287, 284, 288,
	289, 290, 291, 992, 993, 879, 219, 0, 0, 0,
	0, 0, 292, 293, 294, 933, 931, 932, 0, 297,
	0, 298, 0, 0, 975, 299, 300, 0, 301, 999,
	0, 889, 302, 0, 303, 304, 305, 306, 966, 967,
	970, 361, 977, 307, 308, 0, 309, 310, 910, 0,
	0, 220, 311, 313, 320, 0, 976, 314, 922, 913,
	924, 926, 927, 928, 923, 0, 915, 0, 321, 978,
	968, 979, 322, 323, 324, 980, 948, 949, 0, 0,
	327, 328, 329, 330, 331, 0, 333, 332, 0, 334,
	1000, 981, 335, 336, 982, 0, 337, 338, 959, 958,
	339, 340, 341, 342, 0, 343, 344, 346, 348, 345,
	347, 349, 351, 902, 350, 983, 353, 354, 357, 358,
	356, 984, 355, 0, 221, 985, 359, 880, 969, 360,
	937, 362, 363, 0, 911, 365, 912, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 519, 986, 373, 987,
	994, 374, 367, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 383, 995, 384, 522, 385, 386, 0, 387,
	0, 388, 389, 390, 391, 392, 393, 394, 930, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 403, 404,
	405, 402, 406, 407, 408, 409, 0, 410, 988, 411,
	412, 413, 414, 2552, 2553, 0, 416, 420, 421, 422,
	423, 424, 425, 426, 0, 432, 433, 903, 904, 906,
	907, 428, 434, 435, 436, 962, 437, 417, 418, 438,
	439, 989, 440, 441, 925, 905, 443, 0, 444, 445,
	446, 447, 419, 448, 452, 973, 449, 450, 451, 996,
	0, 455, 456, 454, 0, 457, 458, 459, 460, 461,
	286, 901, 0, 463, 944, 945, 946, 947, 0, 470,
	0, 464, 465, 997, 466, 998, 878, 467, 468, 469,
	0, 471, 472, 0, 0, 473, 474, 475, 477, 478,
	476, 480, 963, 481, 0, 909, 482, 483, 484, 533,
	941, 991, 0, 486, 485, 536, 0, 0, 0, 0,
	487, 488, 537, 489, 490, 491, 914, 872, 873, 874,
	870, 871, 883, 0, 0, 0, 0, 0, 0, 1774,
	1775, 0, 0, 222, 223, 224, 225, 226, 884, 227,
	0, 0, 882, 0, 0, 965, 888, 0, 0, 0,
	228, 230, 229, 231, 232, 493, 929, 908, 940, 236,
	898, 939, 938, 0, 237, 238, 900, 899, 241, 242,
	243, 0, 964, 244, 1001, 1002, 499, 0, 245, 246,
	971, 0, 952, 0, 247, 248, 249, 250, 251, 252,
	0, 0, 254, 255, 256, 253, 0, 257, 0, 258,
	259, 260, 0, 261, 974, 262, 263, 955, 953, 954,
	961, 957, 956, 960, 264, 265, 266, 267, 943, 269,
	936, 935, 0, 270, 271, 0, 273, 272, 0, 274,
	0, 0, 275, 934, 277, 0, 278, 0, 279, 280,
	0, 281, 503, 282, 283, 285, 287, 284, 288, 289,
	290, 291, 992, 993, 879, 219, 0, 0, 0, 0,
	0, 292, 293, 294, 933, 931, 932, 0, 297, 0,
	298, 0, 0, 975, 299, 300, 0, 301, 999, 0,
	889, 302, 0, 303, 304, 305, 306, 966, 967, 970,
	361, 977, 307, 308, 0, 309, 310, 910, 0, 0,
	220, 311, 313, 320, 0, 976, 314, 922, 913, 924,
	926, 927, 928, 923, 0, 915, 0, 321, 978, 968,
	979, 322, 323, 324, 980, 948, 949, 0, 0, 327,
	328, 329, 330, 331, 0, 333, 332, 0, 334, 1000,
	981, 335, 336, 982, 0, 337, 338, 959, 958, 339,
	340, 341, 342, 0, 343, 344, 346, 348, 345, 347,
	349, 351, 902, 350, 983, 353, 354, 357, 358, 356,
	984, 355, 0, 221, 985, 359, 880, 969, 360, 937,
	362, 363, 0, 911, 365, 912, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 519, 986, 373, 987, 994,
	374, 367, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 383, 995, 384, 522, 385, 386, 0, 387, 0,
	388, 389, 390, 391, 392, 393, 394, 930, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 403, 404, 405,
	402, 406, 407, 408, 409, 0, 410, 988, 411, 412,
	413, 414, 868, 415, 0, 416, 420, 421, 422, 423,
	424, 425, 426, 0, 432, 433, 903, 904, 906, 907,
	428, 434, 435, 436, 962, 437, 417, 418, 438, 439,
	989, 440, 441, 925, 905, 443, 0, 444, 445, 446,
	447, 419, 448, 452, 973, 449, 450, 451, 996, 0,
	455, 456, 454, 0, 457, 458, 459, 460, 461, 286,
	901, 0, 463, 944, 945, 946, 947, 0, 470, 0,
	464, 465, 997, 466, 998, 878, 467, 468, 469, 0,
	471, 472, 0, 0, 473, 474, 475, 477, 478, 476,
	480, 963, 481, 0, 909, 482, 483, 484, 533, 941,
	991, 0, 486, 485, 536, 0, 0, 0, 0, 487,
	488, 537, 489, 490, 491, 914, 872, 873, 874, 870,
	871, 883, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 223, 224, 225, 226, 884, 227, 0,
	0, 882, 0, 0, 965, 888, 0, 0, 0, 228,
	230, 229, 231, 232, 0, 929, 908, 940, 236, 898,
	939, 938, 0, 237, 238, 900, 899, 241, 242, 243,
	890, 964, 244, 1001, 1002, 499, 0, 245, 246, 971,
	0, 952, 0, 247, 248, 249, 250, 251, 252, 0,
	0, 254, 255, 256, 253, 0, 257, 0, 258, 259,
	260, 0, 261, 974, 262, 3653, 955, 953, 954, 961,
	957, 956, 960, 264, 265, 266, 267, 943, 269, 936,
	935, 861, 270, 271, 0, 273, 272, 0, 274, 0,
	0, 275, 934, 277, 0, 278, 0, 279, 280, 0,
	281, 867, 282, 283, 285, 287, 284, 288, 289, 290,
	291, 992, 993, 879, 219, 0, 0, 0, 0, 0,
	292, 293, 294, 933, 931, 932, 0, 297, 0, 298,
	0, 0, 975, 299, 300, 0, 301, 999, 0, 889,
	302, 0, 303, 304, 305, 306, 966, 967, 970, 361,
	0, 307, 308, 0, 309, 310, 910, 0, 0, 220,
	311, 313, 320, 0, 976, 314, 922, 913, 924, 926,
	927, 928, 923, 0, 915, 0, 321, 0, 968, 0,
	322, 323, 324, 980, 948, 949, 0, 0, 327, 328,
	329, 330, 331, 0, 333, 332, 0, 334, 1000, 981,
	335, 336, 0, 0, 337, 338, 959, 958, 339, 340,
	341, 342, 0, 343, 344, 346, 348, 345, 347, 349,
	351, 902, 350, 983, 353, 354, 357, 358, 356, 984,
	355, 858, 221, 0, 359, 880, 969, 360, 937, 362,
	363, 0, 911, 365, 912, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 519, 986, 373, 987, 994, 374,
	367, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	383, 995, 384, 522, 385, 386, 0, 387, 0, 388,
	389, 390, 391, 392, 393, 394, 930, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 403, 404, 405, 402,
	406, 407, 408, 409, 0, 410, 988, 411, 412, 413,
	414, 868, 415, 0, 416, 420, 421, 422, 423, 424,
	425, 426, 0, 432, 433, 903, 904, 906, 907, 428,
	434, 435, 436, 962, 437, 417, 418, 438, 439, 0,
	440, 441, 925, 905, 443, 0, 444, 445, 446, 447,
	419, 448, 452, 973, 449, 450, 451, 996, 0, 455,
	456, 454, 0, 457, 458, 459, 460, 461, 286, 901,
	0, 463, 944, 945, 946, 947, 0, 470, 0, 464,
	465, 997, 466, 998, 878, 467, 468, 469, 0, 3652,
	472, 0, 862, 473, 474, 475, 477, 478, 476, 480,
	963, 481, 0, 909, 482, 483, 484, 533, 941, 991,
	0, 486, 485, 536, 0, 0, 0, 0, 487, 488,
	537, 489, 490, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 848, 0, 1039, 0, 0, 855, 856, 0,
	0, 0, 0, 0, 0, 0, 884, 0, 0, 0,
	882, 222, 223, 224, 225, 226, 0, 227, 0, 0,
	0, 0, 0, 965, 0, 0, 0, 0, 228, 230,
	229, 231, 232, 493, 494, 233, 495, 236, 234, 235,
	496, 0, 237, 238, 239, 240, 241, 242, 243, 0,
	964, 244, 497, 498, 499, 0, 245, 246, 971, 0,
	952, 0, 247, 248, 249, 250, 251, 252, 0, 0,
	254, 255, 256, 253, 0, 257, 0, 258, 259, 260,
	0, 261, 974, 262, 263, 955, 953, 954, 961, 957,
	956, 960, 264, 265, 266, 267, 268, 269, 501, 502,
	0, 270, 271, 0, 273, 272, 0, 274, 0, 0,
	275, 276, 277, 0, 278, 0, 279, 280, 0, 281,
	503, 282, 283, 285, 287, 284, 288, 289, 290, 291,
	992, 993, 0, 219, 0, 0, 0, 0, 0, 292,
	293, 294, 506, 295, 296, 0, 297, 0, 298, 0,
	0, 975, 299, 300, 0, 301, 999, 0, 508, 302,
	0, 303, 304, 305, 306, 966, 967, 970, 361, 977,
	307, 308, 0, 309, 310, 312, 0, 0, 220, 311,
	313, 320, 0, 976, 314, 512, 316, 315, 317, 318,
	319, 513, 0, 514, 0, 321, 978, 968, 979, 322,
	323, 324, 980, 325, 326, 0, 0, 327, 328, 329,
	330, 331, 1025, 333, 332, 0, 334, 1000, 981, 335,
	336, 982, 0, 337, 338, 959, 958, 339, 340, 341,
	342, 0, 343, 344, 346, 348, 345, 347, 349, 351,
	352, 350, 983, 353, 354, 357, 358, 356, 984, 355,
	0, 221, 985, 359, 0, 969, 360, 518, 362, 363,
	0, 364, 365, 366, 0, 1031, 368, 369, 370, 0,
	0, 371, 372, 519, 986, 373, 987, 994, 374, 367,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 383,
	995, 384, 522, 385, 386, 0, 387, 0, 388, 389,
	390, 391, 392, 393, 394, 523, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 403, 404, 405, 402, 406,
	407, 408, 409, 0, 410, 988, 411, 412, 413, 414,
	524, 1033, 0, 416, 420, 421, 422, 423, 424, 425,
	426, 185, 432, 433, 427, 429, 430, 431, 428, 434,
	435, 436, 962, 437, 417, 418, 438, 439, 989, 440,
	441, 525, 442, 443, 0, 444, 445, 446, 447, 419,
	448, 452, 453, 449, 450, 451, 996, 0, 455, 456,
	454, 187, 457, 458, 459, 460, 461, 286, 462, 0,
	463, 527, 528, 529, 530, 0, 470, 0, 464, 465,
	997, 466, 998, 0, 467, 468, 469, 0, 471, 472,
	0, 0, 473, 474, 475, 477, 478, 476, 480, 963,
	481, 0, 479, 482, 483, 484, 1346, 534, 535, 0,
	486, 485, 536, 1039, 0, 0, 179, 487, 488, 537,
	489, 490, 491, 0, 180, 0, 0, 0, 0, 0,
	222, 223, 224, 225, 226, 0, 227, 0, 0, 0,
	0, 0, 965, 1029, 0, 1644, 0, 228, 230, 229,
	231, 232, 493, 494, 233, 495, 236, 234, 235, 496,
	0, 237, 238, 239, 240, 241, 242, 243, 0, 964,
	244, 497, 498, 499, 0, 245, 246, 971, 0, 952,
	0, 247, 248, 249, 250, 251, 252, 0, 0, 254,
	255, 256, 253, 0, 257, 0, 258, 259, 260, 0,
	261, 974, 262, 263, 955, 953, 954, 961, 957, 956,
	960, 264, 265, 266, 267, 268, 269, 501, 502, 0,
	270, 271, 0, 273, 272, 0, 274, 0, 0, 275,
	276, 277, 0, 278, 0, 279, 280, 0, 281, 503,
	282, 283, 285, 287, 284, 288, 289, 290, 291, 992,
	993, 0, 219, 0, 0, 0, 0, 0, 292, 293,
	294, 506, 295, 296, 0, 297, 0, 298, 0, 0,
	975, 299, 300, 0, 301, 999, 0, 508, 302, 0,
	303, 304, 305, 306, 966, 967, 970, 361, 977, 307,
	308, 0, 309, 310, 312, 0, 0, 220, 311, 313,
	320, 0, 976, 314, 512, 316, 315, 317, 318, 319,
	513, 0, 514, 0, 321, 978, 968, 979, 322, 323,
	324, 980, 325, 326, 0, 0, 327, 328, 329, 330,
	331, 1025, 333, 332, 0, 334, 1000, 981, 335, 336,
	982, 0, 337, 338, 959, 958, 339, 340, 341, 342,
	0, 343, 344, 346, 348, 345, 347, 349, 351, 352,
	350, 983, 353, 354, 357, 358, 356, 984, 355, 0,
	221, 985, 359, 0, 969, 360, 518, 362, 363, 0,
	364, 365, 366, 0, 1031, 368, 369, 370, 0, 0,
	371, 372, 519, 986, 373, 987, 994, 374, 367, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 383, 995,
	384, 522, 385, 386, 0, 387, 0, 388, 389, 390,
	391, 392, 393, 394, 523, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 403, 404, 405, 402, 406, 407,
	408, 409, 0, 410, 988, 411, 412, 413, 414, 524,
	1033, 0, 416, 420, 421, 422, 423, 424, 425, 426,
	185, 432, 433, 427, 429, 430, 431, 428, 434, 435,
	436, 962, 437, 417, 418, 438, 439, 989, 440, 441,
	525, 442, 443, 0, 444, 445, 446, 447, 419, 448,
	452, 453, 449, 450, 451, 996, 0, 455, 456, 454,
	187, 457, 458, 459, 460, 461, 286, 462, 0, 463,
	527, 528, 529, 530, 0, 470, 0, 464, 465, 997,
	466, 998, 0, 467, 468, 469, 0, 471, 472, 0,
	0, 473, 474, 475, 477, 478, 476, 480, 963, 481,
	0, 479, 482, 483, 484, 1346, 534, 535, 0, 486,
	485, 536, 2705, 0, 1039, 179, 487, 488, 537, 489,
	490, 491, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 222, 223, 224, 225, 226, 0, 227, 0, 0,
	0, 0, 1029, 965, 1644, 0, 0, 0, 228, 230,
	229, 231, 232, 493, 494, 233, 495, 236, 234, 235,
	496, 0, 237, 238, 239, 240, 241, 242, 243, 0,
	964, 244, 497, 498, 499, 0, 245, 246, 971, 0,
	952, 0, 247, 248, 249, 250, 251, 252, 0, 0,
	254, 255, 256, 253, 0, 257, 0, 258, 259, 260,
	0, 261, 974, 262, 263, 955, 953, 954, 961, 957,
	956, 960, 264, 265, 266, 267, 268, 269, 501, 502,
	0, 270, 271, 0, 273, 272, 0, 274, 0, 0,
	275, 276, 277, 0, 278, 0, 279, 280, 0, 281,
	503, 282, 283, 285, 287, 284, 288, 289, 290, 291,
	992, 993, 0, 219, 0, 0, 0, 0, 0, 292,
	293, 294, 506, 295, 296, 0, 297, 0, 298, 0,
	0, 975, 299, 300, 0, 301, 999, 0, 508, 302,
	0, 303, 304, 305, 306, 966, 967, 970, 361, 977,
	307, 308, 0, 309, 310, 312, 0, 0, 220, 311,
	313, 320, 0, 976, 314, 512, 316, 315, 317, 318,
	319, 513, 0, 514, 0, 321, 978, 968, 979, 322,
	323, 324, 980, 325, 326, 0, 0, 327, 328, 329,
	330, 331, 1025, 333, 332, 0, 334, 1000, 981, 335,
	336, 982, 0, 337, 338, 959, 958, 339, 340, 341,
	342, 0, 343, 344, 346, 348, 345, 347, 349, 351,
	352, 350, 983, 353, 354, 357, 358, 356, 984, 355,
	0, 221, 985, 359, 0, 969, 360, 518, 362, 363,
	0, 364, 365, 366, 0, 1031, 368, 369, 370, 0,
	0, 371, 372, 519, 986, 373, 987, 994, 374, 367,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 383,
	995, 384, 522, 385, 386, 0, 387, 0, 388, 389,
	390, 391, 392, 393, 394, 523, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 403, 404, 405, 402, 406,
	407, 408, 409, 0, 410, 988, 411, 412, 413, 414,
	524, 1033, 0, 416, 420, 421, 422, 423, 424, 425,
	426, 0, 432, 433, 427, 429, 430, 431, 428, 434,
	435, 436, 962, 437, 417, 418, 438, 439, 989, 440,
	441, 525, 442, 443, 0, 444, 445, 446, 447, 419,
	448, 452, 453, 449, 450, 451, 996, 0, 455, 456,
	454, 0, 457, 458, 459, 460, 461, 286, 462, 0,
	463, 527, 528, 529, 530, 0, 470, 0, 464, 465,
	997, 466, 998, 0, 467, 468, 469, 0, 471, 472,
	0, 0, 473, 474, 475, 477, 478, 476, 480, 963,
	481, 0, 479, 482, 483, 484, 533, 534, 535, 0,
	486, 485, 536, 1021, 0, 1039, 0, 487, 488, 537,
	489, 490, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 223, 224, 225, 226, 0, 227, 0,
	0, 0, 0, 1029, 965, 1027, 0, 0, 0, 228,
	230, 229, 231, 232, 493, 494, 233, 495, 236, 234,
	235, 496, 0, 237, 238, 239, 240, 241, 242, 243,
	0, 964, 244, 497, 498, 499, 0, 245, 246, 971,
	0, 952, 0, 247, 248, 249, 250, 251, 252, 0,
	0, 254, 255, 256, 253, 0, 257, 0, 258, 259,
	260, 0, 261, 974, 262, 263, 955, 953, 954, 961,
	957, 956, 960, 264, 265, 266, 267, 268, 269, 501,
	502, 0, 270, 271, 0, 273, 272, 0, 274, 0,
	0, 275, 276, 277, 0, 278, 0, 279, 280, 0,
	281, 503, 282, 283, 285, 287, 284, 288, 289, 290,
	291, 992, 993, 0, 219, 0, 0, 0, 0, 0,
	292, 293, 294, 506, 295, 296, 0, 297, 0, 298,
	0, 0, 975, 299, 300, 0, 301, 999, 0, 508,
	302, 0, 303, 304, 305, 306, 966, 967, 970, 361,
	977, 307, 308, 0, 309, 310, 312, 0, 0, 220,
	311, 313, 320, 0, 976, 314, 512, 316, 315, 317,
	318, 319, 513, 0, 514, 0, 321, 978, 968, 979,
	322, 323, 324, 980, 325, 326, 0, 0, 327, 328,
	329, 330, 331, 1025, 333, 332, 0, 334, 1000, 981,
	335, 336, 982, 0, 337, 338, 959, 958, 339, 340,
	341, 342, 0, 343, 344, 346, 348, 345, 347, 349,
	351, 352, 350, 983, 353, 354, 357, 358, 356, 984,
	355, 0, 221, 985, 359, 0, 969, 360, 518, 362,
	363, 0, 364, 365, 366, 0, 1031, 368, 369, 370,
	0, 0, 371, 372, 519, 986, 373, 987, 994, 374,
	367, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	383, 995, 384, 522, 385, 386, 0, 387, 0, 388,
	389, 390, 391, 392, 393, 394, 523, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 403, 404, 405, 402,
	406, 407, 408, 409, 0, 410, 988, 411, 412, 413,
	414, 524, 1033, 0, 416, 420, 421, 422, 423, 424,
	425, 426, 0, 432, 433, 427, 429, 430, 431, 428,
	434, 435, 436, 962, 437, 417, 418, 438, 439, 989,
	440, 441, 525, 442, 443, 0, 444, 445, 446, 447,
	419, 448, 452, 453, 449, 450, 451, 996, 0, 455,
	456, 454, 0, 457, 458, 459, 460, 461, 286, 462,
	0, 463, 527, 528, 529, 530, 0, 470, 0, 464,
	465, 997, 466, 998, 0, 467, 468, 469, 0, 471,
	472, 0, 0, 473, 474, 475, 477, 478, 476, 480,
	963, 481, 0, 479, 482, 483, 484, 533, 534, 535,
	0, 486, 485, 536, 1039, 0, 0, 0, 487, 488,
	537, 489, 490, 491, 0, 0, 0, 0, 0, 0,
	0, 222, 223, 224, 225, 226, 0, 227, 0, 0,
	0, 0, 0, 965, 1029, 0, 1027, 0, 228, 230,
	229, 231, 232, 493, 494, 233, 495, 236, 234, 235,
	496, 0, 237, 238, 239, 240, 241, 242, 243, 0,
	964, 244, 497, 498, 499, 0, 245, 246, 971, 0,
	952, 0, 247, 248, 249, 250, 251, 252, 0, 0,
	254, 255, 256, 253, 0, 257, 0, 258, 259, 260,
	0, 261, 974, 262, 263, 955, 953, 954, 961, 957,
	956, 960, 264, 265, 266, 267, 268, 269, 501, 502,
	0, 270, 271, 0, 273, 272, 0, 274, 0, 0,
	275, 276, 277, 0, 278, 0, 279, 280, 0, 281,
	503, 282, 283, 285, 287, 284, 288, 289, 290, 291,
	992, 993, 0, 219, 0, 0, 0, 0, 0, 292,
	293, 294, 506, 295, 296, 0, 297, 0, 298, 0,
	0, 975, 299, 300, 0, 301, 999, 0, 508, 302,
	0, 303, 304, 305, 306, 966, 967, 970, 361, 977,
	307, 308, 0, 309, 310, 312, 0, 0, 220, 311,
	313, 320, 0, 976, 314, 512, 316, 315, 317, 318,
	319, 513, 0, 514, 0, 321, 978, 968, 979, 322,
	323, 324, 980, 325, 326, 0, 0, 327, 328, 329,
	330, 331, 1025, 333, 332, 0, 334, 1000, 981, 335,
	336, 982, 0, 337, 338, 959, 958, 339, 340, 341,
	342, 0, 343, 344, 346, 348, 345, 347, 349, 351,
	352, 350, 983, 353, 354, 357, 358, 356, 984, 355,
	0, 221, 985, 359, 0, 969, 360, 518, 362, 363,
	0, 364, 365, 366, 0, 1031, 368, 369, 370, 0,
	0, 371, 372, 519, 986, 373, 987, 994, 374, 367,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 383,
	995, 384, 522, 385, 386, 0, 387, 0, 388, 389,
	390, 391, 392, 393, 394, 523, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 403, 404, 405, 402, 406,
	407, 408, 409, 0, 410, 988, 411, 412, 413, 414,
	524, 1033, 0, 416, 420, 421, 422, 423, 424, 425,
	426, 0, 432, 433, 427, 429, 430, 431, 428, 434,
	435, 436, 962, 437, 417, 418, 438, 439, 989, 440,
	441, 525, 442, 443, 0, 444, 445, 446, 447, 419,
	448, 452, 453, 449, 450, 451, 996, 0, 455, 456,
	454, 0, 457, 458, 459, 460, 461, 286, 462, 0,
	463, 527, 528, 529, 530, 0, 470, 0, 464, 465,
	997, 466, 998, 0, 467, 468, 469, 0, 471, 472,
	0, 0, 473, 474, 475, 477, 478, 476, 480, 963,
	481, 0, 479, 482, 483, 484, 533, 534, 535, 0,
	486, 485, 536, 1039, 0, 0, 0, 487, 488, 537,
	489, 490, 491, 0, 0, 0, 0, 0, 0, 0,
	222, 223, 224, 225, 226, 0, 227, 0, 0, 0,
	0, 0, 965, 1029, 0, 1027, 0, 228, 230, 229,
	231, 232, 493, 494, 233, 495, 236, 234, 235, 496,
	0, 237, 238, 239, 240, 241, 242, 243, 0, 964,
	244, 497, 498, 499, 0, 245, 246, 971, 0, 952,
	0, 247, 248, 249, 250, 251, 252, 0, 0, 254,
	255, 256, 253, 0, 257, 0, 258, 259, 260, 0,
	261, 974, 262, 263, 955, 953, 954, 961, 957, 956,
	960, 264, 265, 266, 267, 268, 269, 501, 502, 0,
	270, 271, 0, 273, 272, 0, 274, 0, 0, 275,
	276, 277, 0, 278, 0, 279, 280, 0, 281, 503,
	282, 283, 285, 287, 284, 288, 289, 290, 291, 992,
	993, 0, 219, 0, 0, 0, 0, 0, 292, 293,
	294, 506, 295, 296, 0, 297, 0, 298, 0, 0,
	975, 299, 300, 0, 301, 999, 0, 508, 302, 0,
	303, 304, 305, 306, 966, 967, 970, 361, 977, 307,
	308, 0, 309, 310, 312, 0, 0, 220, 311, 313,
	320, 0, 976, 314, 512, 316, 315, 317, 318, 319,
	513, 0, 514, 0, 321, 978, 968, 979, 322, 323,
	324, 980, 325, 326, 0, 0, 327, 328, 329, 330,
	331, 0, 333, 332, 0, 334, 1000, 981, 335, 336,
	982, 0, 337, 338, 959, 958, 339, 340, 341, 342,
	0, 343, 344, 346, 348, 345, 347, 349, 351, 352,
	350, 983, 353, 354, 357, 358, 356, 984, 355, 0,
	221, 985, 359, 0, 969, 360, 518, 362, 363, 0,
	364, 365, 366, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 519, 986, 373, 987, 994, 374, 367, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 383, 995,
	384, 522, 385, 386, 0, 387, 0, 388, 389, 390,
	391, 392, 393, 394, 523, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 403, 404, 405, 402, 406, 407,
	408, 409, 0, 410, 988, 411, 412, 413, 414, 524,
	1033, 0, 416, 420, 421, 422, 423, 424, 425, 426,
	0, 432, 433, 427, 429, 430, 431, 428, 434, 435,
	436, 962, 437, 417, 418, 438, 439, 989, 440, 441,
	525, 442, 443, 0, 444, 445, 446, 447, 419, 448,
	452, 453, 449, 450, 451, 996, 0, 455, 456, 454,
	0, 457, 458, 459, 460, 461, 286, 462, 0, 463,
	527, 528, 529, 530, 0, 470, 0, 464, 465, 997,
	466, 998, 0, 467, 468, 469, 0, 471, 472, 0,
	0, 473, 474, 475, 477, 478, 476, 480, 963, 481,
	0, 479, 482, 483, 484, 533, 534, 535, 0, 486,
	485, 536, 848, 0, 1211, 0, 487, 488, 537, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 223, 224, 225, 226, 0, 227, 0, 0,
	0, 0, 0, 492, 1545, 0, 0, 0, 228, 230,
	229, 231, 232, 493, 494, 233, 495, 236, 234, 235,
	496, 0, 237, 238, 239, 240, 241, 242, 243, 0,
	0, 244, 497, 498, 499, 0, 245, 246, 500, 0,
	1102, 0, 247, 248, 249, 250, 251, 252, 0, 0,
	254, 255, 256, 253, 0, 257, 0, 258, 259, 260,
	0, 261, 974, 262, 263, 0, 0, 0, 0, 0,
	0, 0, 264, 265, 266, 267, 268, 269, 501, 502,
	0, 270, 271, 0, 273, 272, 0, 274, 0, 0,
	275, 276, 277, 0, 278, 0, 279, 280, 0, 281,
	503, 282, 283, 285, 287, 284, 288, 289, 290, 291,
	504, 505, 0, 219, 0, 0, 0, 0, 0, 292,
	293, 294, 506, 295, 296, 0, 297, 0, 298, 0,
	0, 975, 299, 300, 0, 301, 507, 0, 508, 302,
	0, 303, 304, 305, 306, 509, 510, 511, 361, 977,
	307, 308, 0, 309, 310, 312, 0, 0, 0, 311,
	313, 320, 0, 976, 314, 512, 316, 315, 317, 318,
	319, 513, 0, 514, 0, 321, 978, 515, 979, 322,
	323, 324, 980, 325, 326, 0, 0, 327, 328, 329,
	330, 331, 0, 333, 332, 0, 334, 516, 981, 335,
	336, 982, 0, 337, 338, 0, 0, 339, 340, 341,
	342, 0, 343, 344, 346, 348, 345, 347, 349, 351,
	352, 350, 983, 353, 354, 357, 358, 356, 984, 355,
	0, 0, 985, 359, 0, 517, 360, 518, 362, 363,
	0, 364, 365, 366, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 519, 986, 373, 987, 520, 374, 367,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 383,
	521, 384, 522, 385, 386, 0, 387, 0, 388, 389,
	390, 391, 392, 393, 394, 523, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 403, 404, 405, 402, 406,
	407, 408, 409, 0, 410, 988, 411, 412, 413, 414,
	524, 415, 0, 416, 420, 421, 422, 423, 424, 425,
	426, 185, 432, 433, 427, 429, 430, 431, 428, 434,
	435, 436, 0, 437, 417, 418, 438, 439, 989, 440,
	441, 525, 442, 443, 0, 444, 445, 446, 447, 419,
	448, 452, 453, 449, 450, 451, 526, 0, 455, 456,
	454, 187, 457, 458, 459, 460, 461, 286, 462, 0,
	463, 527, 528, 529, 530, 0, 470, 0, 464, 465,
	531, 466, 532, 0, 467, 468, 469, 0, 471, 472,
	0, 0, 473, 474, 475, 477, 478, 476, 480, 0,
	481, 0, 479, 482, 483, 484, 1346, 534, 535, 0,
	486, 485, 536, 1343, 0, 1211, 179, 487, 488, 537,
	489, 490, 491, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 222, 223, 224, 225, 226, 0, 227, 0,
	0, 0, 0, 0, 492, 154, 0, 0, 0, 228,
	230, 229, 231, 232, 493, 494, 233, 495, 236, 234,
	235, 496, 0, 237, 238, 239, 240, 241, 242, 243,
	0, 0, 244, 497, 498, 499, 0, 245, 246, 500,
	0, 1102, 0, 247, 248, 249, 250, 251, 252, 0,
	0, 254, 255, 256, 253, 0, 257, 0, 258, 259,
	260, 0, 261, 974, 262, 263, 0, 0, 0, 0,
	0, 0, 0, 264, 265, 266, 267, 268, 269, 501,
	502, 0, 270, 271, 0, 273, 272, 0, 274, 0,
	0, 275, 276, 277, 0, 278, 0, 279, 280, 0,
	281, 503, 282, 283, 285, 287, 284, 288, 289, 290,
	291, 504, 505, 0, 219, 0, 0, 0, 0, 0,
	292, 293, 294, 506, 295, 296, 0, 297, 0, 298,
	0, 0, 975, 299, 300, 0, 301, 507, 0, 508,
	302, 0, 303, 304, 305, 306, 509, 510, 511, 361,
	977, 307, 308, 0, 309, 310, 312, 0, 0, 0,
	311, 313, 320, 0, 976, 314, 512, 316, 315, 317,
	318, 319, 513, 0, 514, 0, 321, 978, 515, 979,
	322, 323, 324, 980, 325, 326, 0, 0, 327, 328,
	329, 330, 331, 0, 333, 332, 0, 334, 516, 981,
	335, 336, 982, 0, 337, 338, 0, 0, 339, 340,
	341, 342, 0, 343, 344, 346, 348, 345, 347, 349,
	351, 352, 350, 983, 353, 354, 357, 358, 356, 984,
	355, 0, 0, 985, 359, 0, 517, 360, 518, 362,
	363, 0, 364, 365, 366, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 519, 986, 373, 987, 520, 374,
	367, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	383, 521, 384, 522, 385, 386, 0, 387, 0, 388,
	389, 390, 391, 392, 393, 394, 523, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 403, 404, 405, 402,
	406, 407, 408, 409, 0, 410, 988, 411, 412, 413,
	414, 524, 415, 0, 416, 420, 421, 422, 423, 424,
	425, 426, 185, 432, 433, 427, 429, 430, 431, 428,
	434, 435, 436, 0, 437, 417, 418, 438, 439, 989,
	440, 441, 525, 442, 443, 0, 444, 445, 446, 447,
	419, 448, 452, 453, 449, 450, 451, 526, 0, 455,
	456, 454, 187, 457, 458, 459, 460, 461, 286, 462,
	0, 463, 527, 528, 529, 530, 0, 470, 0, 464,
	465, 531, 466, 532, 0, 467, 468, 469, 0, 471,
	472, 0, 0, 473, 474, 475, 477, 478, 476, 480,
	0, 481, 0, 479, 482, 483, 484, 1346, 534, 535,
	0, 486, 485, 536, 0, 0, 0, 179, 487, 488,
	537, 489, 490, 491, 0, 180, 0, 0, 0, 0,
	1211, 1210, 0, 0, 0, 0, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 222, 223, 224,
	225, 226, 0, 227, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 228, 230, 229, 231, 232, 493,
	494, 233, 495, 236, 234, 235, 496, 0, 237, 238,
	239, 240, 241, 242, 243, 0, 0, 244, 497, 498,
	499, 0, 245, 246, 500, 0, 1102, 0, 247, 248,
	249, 250, 251, 252, 0, 0, 254, 255, 256, 253,
	0, 257, 0, 258, 259, 260, 0, 261, 974, 262,
	263, 0, 0, 0, 0, 0, 0, 0, 264, 265,
	266, 267, 268, 269, 501, 502, 0, 270, 271, 0,
	273, 272, 0, 274, 0, 0, 275, 276, 277, 0,
	278, 0, 279, 280, 0, 281, 503, 282, 283, 285,
	287, 284, 288, 289, 290, 291, 504, 505, 0, 219,
	0, 0, 0, 0, 0, 292, 293, 294, 506, 295,
	296, 0, 297, 0, 298, 0, 0, 975, 299, 300,
	0, 301, 507, 0, 508, 302, 0, 303, 304, 305,
	306, 509, 510, 511, 361, 977, 307, 308, 0, 309,
	310, 312, 0, 0, 0, 311, 313, 320, 0, 976,
	314, 512, 316, 315, 317, 318, 319, 513, 0, 514,
	0, 321, 978, 515, 979, 322, 323, 324, 980, 325,
	326, 0, 0, 327, 328, 329, 330, 331, 0, 333,
	332, 0, 334, 516, 981, 335, 336, 982, 0, 337,
	338, 0, 0, 339, 340, 341, 342, 0, 343, 344,
	346, 348, 345, 347, 349, 351, 352, 350, 983, 353,
	354, 357, 358, 356, 984, 355, 0, 0, 985, 359,
	0, 517, 360, 518, 362, 363, 0, 364, 365, 366,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 519,
	986, 373, 987, 520, 374, 367, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 383, 521, 384, 522, 385,
	386, 0, 387, 0, 388, 389, 390, 391, 392, 393,
	394, 523, 395, 396, 0, 397, 398, 399, 400, 401,
	0, 403, 404, 405, 402, 406, 407, 408, 409, 0,
	410, 988, 411, 412, 413, 414, 524, 415, 0, 416,
	420, 421, 422, 423, 424, 425, 426, 0, 432, 433,
	427, 429, 430, 431, 428, 434, 435, 436, 0, 437,
	417, 418, 438, 439, 989, 440, 441, 525, 442, 443,
	0, 444, 445, 446, 447, 419, 448, 452, 453, 449,
	450, 451, 526, 0, 455, 456, 454, 0, 457, 458,
	459, 460, 461, 286, 462, 0, 463, 527, 528, 529,
	530, 0, 470, 0, 464, 465, 531, 466, 532, 0,
	467, 468, 469, 0, 471, 472, 0, 0, 473, 474,
	475, 477, 478, 476, 480, 0, 481, 0, 479, 482,
	483, 484, 533, 534, 535, 0, 486, 485, 536, 0,
	0, 0, 0, 487, 488, 537, 489, 490, 491, 1211,
	1210, 0, 0, 0, 0, 1208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 223, 224, 225,
	226, 2910, 227, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 228, 230, 229, 231, 232, 493, 494,
	233, 495, 236, 234, 235, 496, 0, 237, 238, 239,
	240, 241, 242, 243, 0, 0, 244, 497, 498, 499,
	0, 245, 246, 500, 0, 1102, 0, 247, 248, 249,
	250, 251, 252, 0, 0, 254, 255, 256, 253, 0,
	257, 0, 258, 259, 260, 0, 261, 974, 262, 263,
	0, 0, 0, 0, 0, 0, 0, 264, 265, 266,
	267, 268, 269, 501, 502, 0, 270, 271, 0, 273,
	272, 0, 274, 0, 0, 275, 276, 277, 0, 278,
	0, 279, 280, 0, 281, 503, 282, 283, 285, 287,
	284, 288, 289, 290, 291, 504, 505, 0, 219, 0,
	0, 0, 0, 0, 292, 293, 294, 506, 295, 296,
	0, 297, 0, 298, 0, 0, 975, 299, 300, 0,
	301, 507, 0, 508, 302, 0, 303, 304, 305, 306,
	509, 510, 511, 361, 977, 307, 308, 0, 309, 310,
	312, 0, 0, 0, 311, 313, 320, 0, 976, 314,
	512, 316, 315, 317, 318, 319, 513, 0, 514, 0,
	321, 978, 515, 979, 322, 323, 324, 980, 325, 326,
	0, 0, 327, 328, 329, 330, 331, 0, 333, 332,
	0, 334, 516, 981, 335, 336, 982, 0, 337, 338,
	0, 0, 339, 340, 341, 342, 0, 343, 344, 346,
	348, 345, 347, 349, 351, 352, 350, 983, 353, 354,
	357, 358, 356, 984, 355, 0, 0, 985, 359, 0,
	517, 360, 518, 362, 363, 0, 364, 365, 366, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 519, 986,
	373, 987, 520, 374, 367, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 383, 521, 384, 522, 385, 386,
	0, 387, 0, 388, 389, 390, 391, 392, 393, 394,
	523, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	403, 404, 405, 402, 406, 407, 408, 409, 0, 410,
	988, 411, 412, 413, 414, 524, 415, 0, 416, 420,
	421, 422, 423, 424, 425, 426, 0, 432, 433, 427,
	429, 430, 431, 428, 434, 435, 436, 0, 437, 417,
	418, 438, 439, 989, 440, 441, 525, 442, 443, 0,
	444, 445, 446, 447, 419, 448, 452, 453, 449, 450,
	451, 526, 0, 455, 456, 454, 0, 457, 458, 459,
	460, 461, 286, 462, 0, 463, 527, 528, 529, 530,
	0, 470, 0, 464, 465, 531, 466, 532, 0, 467,
	468, 469, 0, 471, 472, 0, 0, 473, 474, 475,
	477, 478, 476, 480, 0, 481, 0, 479, 482, 483,
	484, 533, 534, 535, 0, 486, 485, 536, 0, 0,
	0, 0, 487, 488, 537, 489, 490, 491, 1211, 1210,
	0, 0, 0, 0, 1208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 223, 224, 225, 226,
	1217, 227, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 228, 230, 229, 231, 232, 493, 494, 233,
	495, 236, 234, 235, 496, 0, 237, 238, 239, 240,
	241, 242, 243, 0, 0, 244, 497, 498, 499, 0,
	245, 246, 500, 0, 1102, 0, 247, 248, 249, 250,
	251, 252, 0, 0, 254, 255, 256, 253, 0, 257,
	0, 258, 259, 260, 0, 261, 974, 262, 263, 0,
	0, 0, 0, 0, 0, 0, 264, 265, 266, 267,
	268, 269, 501, 502, 0, 270, 271, 0, 273, 272,
	0, 274, 0, 0, 275, 276, 277, 0, 278, 0,
	279, 280, 0, 281, 503, 282, 283, 285, 287, 284,
	288, 289, 290, 291, 504, 505, 0, 219, 0, 0,
	0, 0, 0, 292, 293, 294, 506, 295, 296, 0,
	297, 0, 298, 0, 0, 975, 299, 300, 0, 301,
	507, 0, 508, 302, 0, 303, 304, 305, 306, 509,
	510, 511, 361, 977, 307, 308, 0, 309, 310, 312,
	0, 0, 0, 311, 313, 320, 0, 976, 314, 512,
	316, 315, 317, 318, 319, 513, 0, 514, 0, 321,
	978, 515, 979, 322, 323, 324, 980, 325, 326, 0,
	0, 327, 328, 329, 330, 331, 0, 333, 332, 0,
	334, 516, 981, 335, 336, 982, 0, 337, 338, 0,
	0, 339, 340, 341, 342, 0, 343, 344, 346, 348,
	345, 347, 349, 351, 352, 350, 983, 353, 354, 357,
	358, 356, 984, 355, 0, 0, 985, 359, 0, 517,
	360, 518, 362, 363, 0, 364, 365, 366, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 519, 986, 373,
	987, 520, 374, 367, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 383, 521, 384, 522, 385, 386, 0,
	387, 0, 388, 389, 390, 391, 392, 393, 394, 523,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 403,
	404, 405, 402, 406, 407, 408, 409, 0, 410, 988,
	411, 412, 413, 414, 524, 415, 0, 416, 420, 421,
	422, 423, 424, 425, 426, 0, 432, 433, 427, 429,
	430, 431, 428, 434, 435, 436, 0, 437, 417, 418,
	438, 439, 989, 440, 441, 525, 442, 443, 0, 444,
	445, 446, 447, 419, 448, 452, 453, 449, 450, 451,
	526, 0, 455, 456, 454, 0, 457, 458, 459, 460,
	461, 286, 462, 0, 463, 527, 528, 529, 530, 0,
	470, 0, 464, 465, 531, 466, 532, 0, 467, 468,
	469, 0, 471, 472, 0, 0, 473, 474, 475, 477,
	478, 476, 480, 0, 481, 0, 479, 482, 483, 484,
	533, 534, 535, 0, 486, 485, 536, 1039, 0, 0,
	0, 487, 488, 537, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 222, 223, 224, 225, 226, 0,
	227, 0, 0, 0, 0, 0, 965, 0, 0, 1352,
	0, 228, 230, 229, 231, 232, 493, 494, 233, 495,
	236, 234, 235, 496, 0, 237, 238, 239, 240, 241,
	242, 243, 0, 964, 244, 497, 498, 499, 0, 245,
	246, 971, 0, 952, 0, 247, 248, 249, 250, 251,
	252, 0, 0, 254, 255, 256, 253, 0, 257, 0,
	258, 259, 260, 0, 261, 974, 262, 263, 955, 953,
	954, 961, 957, 956, 960, 264, 265, 266, 267, 268,
	269, 501, 502, 0, 270, 271, 0, 273, 272, 0,
	274, 0, 0, 275, 276, 277, 0, 278, 0, 279,
	280, 0, 281, 503, 282, 283, 285, 287, 284, 288,
	289, 290, 291, 992, 993, 0, 219, 0, 0, 0,
	0, 0, 292, 293, 294, 506, 295, 296, 0, 297,
	0, 298, 0, 0, 975, 299, 300, 0, 301, 999,
	0, 508, 302, 0, 303, 304, 305, 306, 966, 967,
	970, 361, 977, 307, 308, 0, 309, 310, 312, 0,
	0, 220, 311, 313, 320, 0, 976, 314, 512, 316,
	315, 317, 318, 319, 513, 0, 514, 0, 321, 978,
	968, 979, 322, 323, 324, 980, 325, 326, 0, 0,
	327, 328, 329, 330, 331, 0, 333, 332, 0, 334,
	1000, 981, 335, 336, 982, 0, 337, 338, 959, 958,
	339, 340, 341, 342, 0, 343, 344, 346, 348, 345,
	347, 349, 351, 352, 350, 983, 353, 354, 357, 358,
	356, 984, 355, 0, 221, 985, 359, 0, 969, 360,
	518, 362, 363, 0, 364, 365, 366, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 519, 986, 373, 987,
	994, 374, 367, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 383, 995, 384, 522, 385, 386, 0, 387,
	0, 388, 389, 390, 391, 392, 393, 394, 523, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 403, 404,
	405, 402, 406, 407, 408, 409, 0, 410, 988, 411,
	412, 413, 414, 524, 415, 0, 416, 420, 421, 422,
	423, 424, 425, 426, 0, 432, 433, 427, 429, 430,
	431, 428, 434, 435, 436, 962, 437, 417, 418, 438,
	439, 989, 440, 441, 525, 442, 443, 0, 444, 445,
	446, 447, 419, 448, 452, 453, 449, 450, 451, 996,
	0, 455, 456, 454, 0, 457, 458, 459, 460, 461,
	286, 462, 0, 463, 527, 528, 529, 530, 0, 470,
	0, 464, 465, 997, 466, 998, 0, 467, 468, 469,
	0, 471, 472, 0, 0, 473, 474, 475, 477, 478,
	476, 480, 963, 481, 0, 479, 482, 483, 484, 533,
	534, 535, 0, 486, 485, 536, 848, 0, 216, 0,
	487, 488, 537, 489, 490, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 223, 224, 225, 226,
	0, 227, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 228, 230, 229, 231, 232, 493, 494, 233,
	495, 236, 234, 235, 496, 0, 237, 238, 239, 240,
	241, 242, 243, 0, 0, 244, 497, 498, 499, 0,
	245, 246, 500, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 0, 254, 255, 256, 253, 0, 257,
	0, 258, 259, 260, 0, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 0, 0, 264, 265, 266, 267,
	268, 269, 501, 502, 0, 270, 271, 0, 273, 272,
	0, 274, 0, 0, 275, 276, 277, 0, 278, 0,
	279, 280, 0, 281, 503, 282, 283, 285, 287, 284,
	288, 289, 290, 291, 504, 505, 0, 0, 0, 0,
	0, 0, 0, 292, 293, 294, 506, 295, 296, 0,
	297, 0, 298, 0, 0, 0, 299, 300, 0, 301,
	507, 0, 508, 302, 0, 303, 304, 305, 306, 509,
	510, 511, 361, 0, 307, 308, 0, 309, 310, 312,
	0, 0, 0, 311, 313, 320, 0, 0, 314, 512,
	316, 315, 317, 318, 319, 513, 0, 514, 0, 321,
	0, 515, 0, 322, 323, 324, 0, 325, 326, 0,
	0, 327, 328, 329, 330, 331, 0, 333, 332, 0,
	334, 516, 0, 335, 336, 0, 0, 337, 338, 0,
	0, 339, 340, 341, 342, 0, 343, 344, 346, 348,
	345, 347, 349, 351, 352, 350, 0, 353, 354, 357,
	358, 356, 0, 355, 0, 0, 0, 359, 0, 517,
	360, 518, 362, 363, 0, 364, 365, 366, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 519, 0, 373,
	0, 520, 374, 367, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 383, 521, 384, 522, 385, 386, 0,
	387, 0, 388, 389, 390, 391, 392, 393, 394, 523,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 403,
	404, 405, 402, 406, 407, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 524, 415, 0, 416, 420, 421,
	422, 423, 424, 425, 426, 185, 432, 433, 427, 429,
	430, 431, 428, 434, 435, 436, 0, 437, 417, 418,
	438, 439, 0, 440, 441, 525, 442, 443, 0, 444,
	445, 446, 447, 419, 448, 452, 453, 449, 450, 451,
	526, 0, 455, 456, 454, 187, 457, 458, 459, 460,
	461, 286, 462, 0, 463, 527, 528, 529, 530, 0,
	470, 0, 464, 465, 531, 466, 532, 0, 467, 468,
	469, 0, 471, 472, 0, 0, 473, 474, 475, 477,
	478, 476, 480, 0, 481, 0, 479, 482, 483, 484,
	1346, 534, 535, 0, 486, 485, 536, 216, 0, 0,
	179, 487, 488, 537, 489, 490, 491, 0, 180, 0,
	0, 0, 0, 0, 222, 223, 224, 225, 226, 0,
	227, 0, 0, 0, 0, 0, 492, 0, 0, 154,
	0, 228, 230, 229, 231, 232, 493, 494, 233, 495,
	236, 234, 235, 496, 0, 237, 238, 239, 240, 241,
	242, 243, 0, 0, 244, 497, 498, 499, 0, 245,
	246, 500, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 0, 254, 255, 256, 253, 0, 257, 0,
	258, 259, 260, 0, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 0, 0, 264, 265, 266, 267, 268,
	269, 501, 502, 0, 270, 271, 0, 273, 272, 0,
	274, 0, 0, 275, 276, 277, 0, 278, 0, 279,
	280, 0, 281, 503, 282, 283, 285, 287, 284, 288,
	289, 290, 291, 504, 505, 0, 219, 0, 0, 0,
	0, 0, 292, 293, 294, 506, 295, 296, 0, 297,
	0, 298, 0, 0, 0, 299, 300, 0, 301, 507,
	0, 508, 302, 0, 303, 304, 305, 306, 509, 510,
	511, 361, 0, 307, 308, 0, 309, 310, 312, 0,
	0, 220, 311, 313, 320, 0, 0, 314, 512, 316,
	315, 317, 318, 319, 513, 0, 514, 0, 321, 0,
	515, 0, 322, 323, 324, 0, 325, 326, 0, 0,
	327, 328, 329, 330, 331, 0, 333, 332, 0, 334,
	516, 0, 335, 336, 0, 0, 337, 338, 0, 0,
	339, 340, 341, 342, 0, 343, 344, 346, 348, 345,
	347, 349, 351, 352, 350, 0, 353, 354, 357, 358,
	356, 0, 355, 0, 221, 0, 359, 0, 517, 360,
	518, 362, 363, 0, 364, 365, 366, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 519, 0, 373, 0,
	520, 374, 367, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 383, 521, 384, 522, 385, 386, 0, 387,
	0, 388, 389, 390, 391, 392, 393, 394, 523, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 403, 404,
	405, 402, 406, 407, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 524, 415, 0, 416, 420, 421, 422,
	423, 424, 425, 426, 0, 432, 433, 427, 429, 430,
	431, 428, 434, 435, 436, 0, 437, 417, 418, 438,
	439, 0, 440, 441, 525, 442, 443, 0, 444, 445,
	446, 447, 419, 448, 452, 453, 449, 450, 451, 526,
	0, 455, 456, 454, 0, 457, 458, 459, 460, 461,
	286, 462, 0, 463, 527, 528, 529, 530, 0, 470,
	0, 464, 465, 531, 466, 532, 0, 467, 468, 469,
	0, 471, 472, 0, 0, 473, 474, 475, 477, 478,
	476, 480, 0, 481, 0, 479, 482, 483, 484, 533,
	534, 535, 0, 486, 485, 536, 1297, 0, 216, 0,
	487, 488, 537, 489, 490, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 223, 224, 225, 226,
	0, 227, 0, 0, 0, 0, 0, 492, 1658, 0,
	0, 0, 228, 230, 229, 231, 232, 493, 494, 233,
	495, 236, 234, 235, 496, 0, 237, 238, 239, 240,
	241, 242, 243, 0, 0, 244, 497, 498, 499, 0,
	245, 246, 500, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 0, 254, 255, 256, 253, 0, 257,
	0, 258, 259, 260, 0, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 0, 0, 264, 265, 266, 267,
	268, 269, 501, 502, 0, 270, 271, 0, 273, 272,
	0, 274, 0, 0, 275, 276, 277, 0, 278, 0,
	279, 280, 0, 281, 503, 282, 283, 285, 287, 284,
	288, 289, 290, 291, 504, 505, 0, 219, 0, 0,
	0, 0, 0, 292, 293, 294, 506, 295, 296, 0,
	297, 0, 298, 0, 0, 0, 299, 300, 0, 301,
	507, 0, 508, 302, 0, 303, 304, 305, 306, 509,
	510, 511, 361, 0, 307, 308, 0, 309, 310, 312,
	0, 0, 220, 311, 313, 320, 0, 0, 314, 512,
	316, 315, 317, 318, 319, 513, 0, 514, 0, 321,
	0, 515, 0, 322, 323, 324, 0, 325, 326, 0,
	0, 327, 328, 329, 330, 331, 0, 333, 332, 0,
	334, 516, 0, 335, 336, 0, 0, 337, 338, 0,
	0, 339, 340, 341, 342, 0, 343, 344, 346, 348,
	345, 347, 349, 351, 352, 350, 0, 353, 354, 357,
	358, 356, 0, 355, 0, 221, 0, 359, 0, 517,
	360, 518, 362, 363, 0, 364, 365, 366, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 519, 0, 373,
	0, 520, 374, 367, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 383, 521, 384, 522, 385, 386, 0,
	387, 0, 388, 389, 390, 391, 392, 393, 394, 523,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 403,
	404, 405, 402, 406, 407, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 524, 415, 0, 416, 420, 421,
	422, 423, 424, 425, 426, 0, 432, 433, 427, 429,
	430, 431, 428, 434, 435, 436, 0, 437, 417, 418,
	438, 439, 0, 440, 441, 525, 442, 443, 0, 444,
	445, 446, 447, 419, 448, 452, 453, 449, 450, 451,
	526, 0, 455, 456, 454, 0, 457, 458, 459, 460,
	461, 286, 462, 0, 463, 527, 528, 529, 530, 0,
	470, 0, 464, 465, 531, 466, 532, 0, 467, 468,
	469, 0, 471, 472, 0, 0, 473, 474, 475, 477,
	478, 476, 480, 0, 481, 0, 479, 482, 483, 484,
	533, 534, 535, 0, 486, 485, 536, 216, 0, 0,
	0, 487, 488, 537, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 222, 223, 224, 225, 226, 0,
	227, 0, 0, 0, 0, 0, 492, 1301, 0, 0,
	0, 228, 230, 229, 231, 232, 493, 494, 233, 495,
	236, 234, 235, 496, 0, 237, 238, 239, 240, 241,
	242, 243, 0, 0, 244, 497, 498, 499, 0, 245,
	246, 500, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 0, 254, 255, 256, 253, 0, 257, 0,
	258, 259, 260, 0, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 0, 0, 264, 265, 266, 267, 268,
	269, 501, 502, 0, 270, 271, 0, 273, 272, 0,
	274, 0, 0, 275, 276, 277, 0, 278, 0, 279,
	280, 0, 281, 503, 282, 283, 285, 287, 284, 288,
	289, 290, 291, 504, 505, 0, 219, 0, 0, 0,
	0, 0, 292, 293, 294, 506, 295, 296, 0, 297,
	0, 298, 0, 0, 0, 299, 300, 0, 301, 507,
	0, 508, 302, 0, 303, 304, 305, 306, 509, 510,
	511, 361, 0, 307, 308, 0, 309, 310, 312, 0,
	0, 220, 311, 313, 320, 0, 0, 314, 512, 316,
	315, 317, 318, 319, 513, 0, 514, 0, 321, 0,
	515, 0, 322, 323, 324, 0, 325, 326, 0, 0,
	327, 328, 329, 330, 331, 0, 333, 332, 0, 334,
	516, 0, 335, 336, 0, 0, 337, 338, 0, 0,
	339, 340, 341, 342, 0, 343, 344, 346, 348, 345,
	347, 349, 351, 352, 350, 0, 353, 354, 357, 358,
	356, 0, 355, 0, 221, 0, 359, 0, 517, 360,
	518, 362, 363, 0, 364, 365, 366, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 519, 0, 373, 0,
	520, 374, 367, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 383, 521, 384, 522, 385, 386, 0, 387,
	0, 388, 389, 390, 391, 392, 393, 394, 523, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 403, 404,
	405, 402, 406, 407, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 524, 415, 0, 416, 420, 421, 422,
	423, 424, 425, 426, 0, 432, 433, 427, 429, 430,
	431, 428, 434, 435, 436, 0, 437, 417, 418, 438,
	439, 0, 440, 441, 525, 442, 443, 0, 444, 445,
	446, 447, 419, 448, 452, 453, 449, 450, 451, 526,
	0, 455, 456, 454, 0, 457, 458, 459, 460, 461,
	286, 462, 0, 463, 527, 528, 529, 530, 0, 470,
	0, 464, 465, 531, 466, 532, 0, 467, 468, 469,
	0, 471, 472, 0, 0, 473, 474, 475, 477, 478,
	476, 480, 0, 481, 0, 479, 482, 483, 484, 533,
	534, 535, 0, 486, 485, 536, 216, 0, 0, 0,
	487, 488, 537, 489, 490, 491, 0, 0, 0, 0,
	0, 0, 0, 222, 223, 224, 225, 226, 0, 227,
	0, 0, 0, 0, 0, 492, 2859, 0, 0, 0,
	228, 230, 229, 231, 232, 493, 494, 233, 495, 236,
	234, 235, 496, 0, 237, 238, 239, 240, 241, 242,
	243, 0, 0, 244, 497, 498, 499, 0, 245, 246,
	500, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 0, 254, 255, 256, 253, 0, 257, 0, 258,
	259, 260, 0, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 0, 0, 264, 265, 266, 267, 268, 269,
	501, 502, 0, 270, 271, 0, 273, 272, 0, 274,
	0, 0, 275, 276, 277, 0, 278, 0, 279, 280,
	0, 281, 503, 282, 283, 285, 287, 284, 288, 289,
	290, 291, 504, 505, 0, 219, 0, 0, 0, 0,
	0, 292, 293, 294, 506, 295, 296, 0, 297, 0,
	298, 0, 0, 0, 299, 300, 0, 301, 507, 0,
	508, 302, 0, 303, 304, 305, 306, 509, 510, 511,
	361, 0, 307, 308, 0, 309, 310, 312, 0, 0,
	220, 311, 313, 320, 0, 0, 314, 512, 316, 315,
	317, 318, 319, 513, 0, 514, 0, 321, 0, 515,
	0, 322, 323, 324, 0, 325, 326, 0, 0, 327,
	328, 329, 330, 331, 0, 333, 332, 0, 334, 516,
	0, 335, 336, 0, 0, 337, 338, 0, 0, 339,
	340, 341, 342, 0, 343, 344, 346, 348, 345, 347,
	349, 351, 352, 350, 0, 353, 354, 357, 358, 356,
	0, 355, 0, 221, 0, 359, 0, 517, 360, 518,
	362, 363, 0, 364, 365, 366, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 519, 0, 373, 0, 520,
	374, 367, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 383, 521, 384, 522, 385, 386, 0, 387, 0,
	388, 389, 390, 391, 392, 393, 394, 523, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 403, 404, 405,
	402, 406, 407, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 524, 415, 0, 416, 420, 421, 422, 423,
	424, 425, 426, 0, 432, 433, 427, 429, 430, 431,
	428, 434, 435, 436, 0, 437, 417, 418, 438, 439,
	0, 440, 441, 525, 442, 443, 0, 444, 445, 446,
	447, 419, 448, 452, 453, 449, 450, 451, 526, 0,
	455, 456, 454, 0, 457, 458, 459, 460, 461, 286,
	462, 0, 463, 527, 528, 529, 530, 0, 470, 0,
	464, 465, 531, 466, 532, 0, 467, 468, 469, 0,
	471, 472, 0, 0, 473, 474, 475, 477, 478, 476,
	480, 0, 481, 0, 479, 482, 483, 484, 533, 534,
	535, 0, 486, 485, 536, 216, 0, 0, 0, 487,
	488, 537, 489, 490, 491, 0, 0, 0, 0, 0,
	0, 0, 222, 223, 224, 225, 226, 0, 227, 0,
	0, 0, 0, 0, 492, 1301, 0, 0, 0, 228,
	230, 229, 231, 232, 493, 494, 233, 495, 236, 234,
	235, 496, 0, 237, 238, 239, 240, 241, 242, 243,
	0, 0, 244, 497, 498, 499, 0, 245, 246, 500,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	0, 254, 255, 256, 253, 0, 257, 0, 258, 259,
	260, 0, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 0, 0, 264, 265, 266, 267, 268, 269, 501,
	502, 0, 270, 271, 0, 273, 272, 0, 274, 0,
	0, 275, 276, 277, 0, 278, 0, 279, 280, 0,
	281, 503, 282, 283, 285, 287, 284, 288, 289, 290,
	291, 504, 505, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 506, 295, 296, 0, 297, 0, 298,
	0, 0, 0, 299, 300, 0, 301, 507, 0, 508,
	302, 0, 303, 304, 305, 306, 509, 510, 511, 361,
	0, 307, 308, 0, 309, 310, 312, 0, 0, 0,
	311, 313, 320, 0, 0, 314, 512, 316, 315, 317,
	318, 319, 513, 0, 514, 0, 321, 0, 515, 0,
	322, 323, 324, 0, 325, 326, 0, 0, 327, 328,
	329, 330, 331, 0, 333, 332, 0, 334, 516, 0,
	335, 336, 0, 0, 337, 338, 0, 0, 339, 340,
	341, 342, 0, 343, 344, 346, 348, 345, 347, 349,
	351, 352, 350, 0, 353, 354, 357, 358, 356, 0,
	355, 0, 0, 0, 359, 0, 517, 360, 518, 362,
	363, 0, 364, 365, 366, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 519, 0, 373, 0, 520, 374,
	367, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	383, 521, 384, 522, 385, 386, 0, 387, 0, 388,
	389, 390, 391, 392, 393, 394, 523, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 403, 404, 405, 402,
	406, 407, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 524, 415, 0, 416, 420, 421, 422, 423, 424,
	425, 426, 0, 432, 433, 427, 429, 430, 431, 428,
	434, 435, 436, 0, 437, 417, 418, 438, 439, 0,
	440, 441, 525, 442, 443, 0, 444, 445, 446, 447,
	419, 448, 452, 453, 449, 450, 451, 526, 0, 455,
	456, 454, 0, 457, 458, 459, 460, 461, 286, 462,
	0, 463, 527, 528, 529, 530, 0, 470, 0, 464,
	465, 531, 466, 532, 0, 467, 468, 469, 0, 471,
	472, 0, 0, 473, 474, 475, 477, 478, 476, 480,
	0, 481, 0, 479, 482, 483, 484, 533, 534, 535,
	0, 486, 485, 536, 216, 0, 0, 0, 487, 488,
	537, 489, 490, 491, 0, 0, 0, 0, 0, 0,
	0, 222, 223, 224, 225, 226, 0, 227, 0, 0,
	0, 0, 0, 492, 0, 0, 2457, 0, 228, 230,
	229, 231, 232, 493, 494, 233, 495, 236, 234, 235,
	496, 0, 237, 238, 239, 240, 241, 242, 243, 0,
	0, 244, 497, 498, 499, 0, 245, 246, 500, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 0,
	254, 255, 256, 253, 0, 257, 0, 258, 259, 260,
	0, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	0, 0, 264, 265, 266, 267, 268, 269, 501, 502,
	0, 270, 271, 0, 273, 272, 0, 274, 0, 0,
	275, 276, 277, 0, 278, 0, 279, 280, 0, 281,
	503, 282, 283, 285, 287, 284, 288, 289, 290, 291,
	504, 505, 0, 0, 0, 0, 0, 0, 0, 292,
	293, 294, 506, 295, 296, 0, 297, 0, 298, 0,
	0, 0, 299, 300, 0, 301, 507, 0, 508, 302,
	0, 303, 304, 305, 306, 509, 510, 511, 361, 0,
	307, 308, 0, 309, 310, 312, 0, 0, 0, 311,
	313, 320, 0, 0, 314, 512, 316, 315, 317, 318,
	319, 513, 0, 514, 0, 321, 0, 515, 0, 322,
	323, 324, 0, 325, 326, 0, 0, 327, 328, 329,
	330, 331, 0, 333, 332, 0, 334, 516, 0, 335,
	336, 0, 0, 337, 338, 0, 0, 339, 340, 341,
	342, 0, 343, 344, 346, 348, 345, 347, 349, 351,
	352, 350, 0, 353, 354, 357, 358, 356, 0, 355,
	0, 0, 0, 359, 0, 517, 360, 518, 362, 363,
	0, 364, 365, 366, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 519, 0, 373, 0, 520, 374, 367,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 383,
	521, 384, 522, 385, 386, 0, 387, 0, 388, 389,
	390, 391, 392, 393, 394, 523, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 403, 404, 405, 402, 406,
	407, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	524, 415, 0, 416, 420, 421, 422, 423, 424, 425,
	426, 0, 432, 433, 427, 429, 430, 431, 428, 434,
	435, 436, 0, 437, 417, 418, 438, 439, 0, 440,
	441, 525, 442, 443, 0, 444, 445, 446, 447, 419,
	448, 452, 453, 449, 450, 451, 526, 0, 455, 456,
	454, 0, 457, 458, 459, 460, 461, 286, 462, 0,
	463, 527, 528, 529, 530, 0, 470, 0, 464, 465,
	531, 466, 532, 0, 467, 468, 469, 0, 471, 472,
	0, 0, 473, 474, 475, 477, 478, 476, 480, 0,
	481, 0, 479, 482, 483, 484, 533, 534, 535, 0,
	486, 485, 536, 216, 0, 0, 0, 487, 488, 537,
	489, 490, 491, 0, 0, 0, 0, 0, 0, 0,
	222, 223, 224, 225, 226, 0, 227, 0, 0, 0,
	0, 0, 492, 0, 0, 2998, 0, 228, 230, 229,
	231, 232, 493, 494, 233, 495, 236, 234, 235, 496,
	0, 237, 238, 239, 240, 241, 242, 243, 0, 0,
	244, 497, 498, 499, 0, 245, 246, 500, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 0, 254,
	255, 256, 253, 0, 257, 0, 258, 259, 260, 0,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 0,
	0, 264, 265, 266, 267, 268, 269, 501, 502, 0,
	270, 271, 0, 273, 272, 0, 274, 0, 0, 275,
	276, 277, 0, 278, 0, 279, 280, 0, 281, 503,
	282, 283, 285, 287, 284, 288, 289, 290, 291, 504,
	505, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	294, 506, 295, 296, 0, 297, 0, 298, 0, 0,
	0, 299, 300, 0, 301, 507, 0, 508, 302, 0,
	303, 304, 305, 306, 509, 510, 511, 361, 0, 307,
	308, 0, 309, 310, 312, 0, 0, 0, 311, 313,
	320, 0, 0, 314, 512, 316, 315, 317, 318, 319,
	513, 0, 514, 0, 321, 0, 515, 0, 322, 323,
	324, 0, 325, 326, 0, 0, 327, 328, 329, 330,
	331, 0, 333, 332, 0, 334, 516, 0, 335, 336,
	0, 0, 337, 338, 0, 0, 339, 340, 341, 342,
	0, 343, 344, 346, 348, 345, 347, 349, 351, 352,
	350, 0, 353, 354, 357, 358, 356, 0, 355, 0,
	0, 0, 359, 0, 517, 360, 518, 362, 363, 0,
	364, 365, 366, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 519, 0, 373, 0, 520, 374, 367, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 383, 521,
	384, 522, 385, 386, 0, 387, 0, 388, 389, 390,
	391, 392, 393, 394, 523, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 403, 404, 405, 402, 406, 407,
	408, 409, 0, 410, 0, 411, 412, 413, 414, 524,
	415, 0, 416, 420, 421, 422, 423, 424, 425, 426,
	0, 432, 433, 427, 429, 430, 431, 428, 434, 435,
	436, 0, 437, 417, 418, 438, 439, 0, 440, 441,
	525, 442, 443, 0, 444, 445, 446, 447, 419, 448,
	452, 453, 449, 450, 451, 526, 0, 455, 456, 454,
	0, 457, 458, 459, 460, 461, 286, 462, 0, 463,
	527, 528, 529, 530, 0, 470, 0, 464, 465, 531,
	466, 532, 0, 467, 468, 469, 0, 471, 472, 0,
	0, 473, 474, 475, 477, 478, 476, 480, 0, 481,
	0, 479, 482, 483, 484, 533, 534, 535, 0, 486,
	485, 536, 717, 0, 611, 0, 487, 488, 537, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 223, 224, 225, 226, 0, 227, 0, 0,
	0, 0, 0, 492, 1926, 0, 0, 0, 228, 230,
	229, 231, 232, 493, 494, 233, 495, 236, 234, 235,
	496, 0, 237, 238, 239, 240, 241, 242, 243, 0,
	0, 244, 497, 498, 499, 0, 245, 246, 500, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 0,
	254, 255, 256, 253, 0, 257, 0, 258, 259, 260,
	0, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	0, 0, 264, 265, 617, 267, 268, 269, 501, 502,
	0, 270, 271, 0, 273, 272, 0, 274, 0, 0,
	275, 276, 277, 0, 278, 0, 279, 280, 0, 281,
	503, 282, 283, 285, 287, 284, 288, 289, 290, 291,
	504, 505, 0, 219, 0, 0, 0, 0, 0, 292,
	293, 294, 506, 295, 296, 0, 297, 0, 298, 0,
	715, 0, 299, 300, 0, 301, 507, 0, 508, 302,
	0, 303, 304, 305, 306, 509, 510, 511, 361, 0,
	307, 308, 0, 309, 310, 312, 0, 0, 220, 311,
	313, 320, 0, 0, 314, 512, 316, 315, 317, 318,
	319, 513, 0, 514, 0, 321, 0, 515, 0, 322,
	323, 324, 0, 325, 326, 0, 0, 327, 328, 329,
	330, 331, 0, 333, 332, 0, 334, 516, 0, 335,
	336, 0, 0, 337, 338, 0, 0, 339, 340, 341,
	342, 0, 343, 344, 346, 348, 345, 347, 349, 351,
	352, 350, 0, 353, 354, 357, 358, 356, 0, 355,
	0, 221, 0, 359, 0, 517, 360, 518, 362, 363,
	0, 364, 365, 366, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 519, 0, 373, 0, 520, 374, 367,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 383,
	521, 384, 522, 385, 386, 0, 387, 0, 388, 389,
	390, 391, 392, 393, 394, 523, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 403, 404, 405, 402, 406,
	407, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	524, 415, 0, 416, 420, 421, 422, 423, 424, 425,
	426, 0, 432, 433, 427, 429, 430, 431, 428, 434,
	435, 436, 0, 437, 417, 418, 438, 439, 0, 440,
	441, 525, 442, 443, 0, 444, 445, 446, 447, 419,
	448, 452, 453, 449, 450, 451, 526, 0, 455, 456,
	454, 616, 457, 458, 459, 460, 461, 286, 462, 0,
	463, 527, 528, 529, 530, 0, 470, 0, 464, 465,
	531, 466, 532, 0, 467, 468, 469, 0, 471, 472,
	0, 0, 473, 474, 475, 477, 478, 476, 480, 0,
	481, 0, 479, 482, 483, 484, 533, 534, 535, 0,
	486, 485, 536, 0, 610, 0, 611, 487, 488, 537,
	489, 490, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 223, 224, 225, 226, 620, 227,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	228, 230, 229, 231, 232, 493, 494, 233, 495, 236,
	234, 235, 496, 0, 237, 238, 239, 240, 241, 242,
	243, 0, 0, 244, 497, 498, 499, 0, 245, 246,
	500, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 0, 254, 255, 256, 253, 0, 257, 0, 258,
	259, 260, 0, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 0, 0, 264, 265, 617, 267, 268, 269,
	501, 502, 0, 270, 271, 0, 273, 272, 0, 274,
	0, 0, 275, 276, 277, 0, 278, 0, 279, 280,
	0, 281, 503, 282, 283, 285, 287, 284, 288, 289,
	290, 291, 504, 505, 0, 219, 0, 0, 0, 0,
	0, 292, 293, 294, 506, 295, 296, 0, 297, 0,
	298, 0, 0, 0, 299, 300, 0, 301, 507, 0,
	508, 302, 0, 303, 304, 305, 306, 509, 510, 511,
	361, 0, 307, 308, 0, 309, 310, 312, 0, 0,
	220, 311, 313, 320, 0, 0, 314, 512, 316, 315,
	317, 318, 319, 513, 0, 514, 0, 321, 0, 515,
	0, 322, 323, 324, 0, 325, 326, 0, 0, 327,
	328, 329, 330, 331, 0, 333, 332, 0, 334, 516,
	0, 335, 336, 0, 0, 337, 338, 0, 0, 339,
	340, 341, 342, 0, 343, 344, 346, 348, 345, 347,
	349, 351, 352, 350, 0, 353, 354, 357, 358, 356,
	0, 355, 0, 221, 0, 359, 0, 517, 360, 518,
	362, 363, 0, 364, 365, 366, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 519, 0, 373, 0, 520,
	374, 367, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 383, 521, 384, 522, 385, 386, 0, 387, 0,
	388, 389, 390, 391, 392, 393, 394, 523, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 403, 404, 405,
	402, 406, 407, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 524, 415, 0, 416, 420, 421, 422, 423,
	424, 425, 426, 0, 432, 433, 427, 429, 430, 431,
	428, 434, 435, 436, 0, 437, 417, 418, 438, 439,
	0, 440, 441, 525, 442, 443, 0, 444, 445, 446,
	447, 419, 448, 452, 453, 449, 450, 451, 526, 0,
	455, 456, 454, 616, 457, 458, 459, 460, 461, 286,
	462, 0, 463, 527, 528, 529, 530, 608, 470, 0,
	464, 465, 531, 466, 532, 0, 467, 468, 469, 0,
	471, 472, 0, 0, 473, 474, 475, 477, 478, 476,
	480, 0, 481, 0, 479, 482, 483, 484, 533, 534,
	535, 0, 486, 485, 536, 0, 0, 0, 0, 487,
	488, 537, 489, 490, 491, 1211, 1210, 0, 0, 0,
	0, 1208, 0, 0, 0, 0, 0, 0, 0, 0,
	620, 0, 222, 223, 224, 225, 226, 0, 227, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 228,
	230, 229, 231, 232, 493, 494, 233, 495, 236, 234,
	235, 496, 0, 237, 238, 239, 240, 241, 242, 243,
	0, 0, 244, 497, 498, 499, 0, 245, 246, 500,
	0, 1102, 0, 247, 248, 249, 250, 251, 252, 0,
	0, 254, 255, 256, 253, 0, 257, 0, 258, 259,
	260, 0, 261, 974, 262, 263, 0, 0, 0, 0,
	0, 0, 0, 264, 265, 266, 267, 268, 269, 501,
	502, 0, 270, 271, 0, 273, 272, 0, 274, 0,
	0, 275, 276, 277, 0, 278, 0, 279, 280, 0,
	281, 503, 282, 283, 285, 287, 284, 288, 289, 290,
	291, 504, 505, 0, 219, 0, 0, 0, 0, 0,
	292, 293, 294, 506, 295, 296, 0, 297, 0, 298,
	0, 0, 975, 299, 300, 0, 301, 507, 0, 508,
	302, 0, 303, 304, 305, 306, 509, 510, 511, 361,
	977, 307, 308, 0, 309, 310, 312, 0, 0, 0,
	311, 313, 320, 0, 976, 314, 512, 316, 315, 317,
	318, 319, 513, 0, 514, 0, 321, 978, 515, 979,
	322, 323, 324, 980, 325, 326, 0, 0, 327, 328,
	329, 330, 331, 0, 333, 332, 0, 334, 516, 981,
	335, 336, 982, 0, 337, 338, 0, 0, 339, 340,
	341, 342, 0, 343, 344, 346, 348, 345, 347, 349,
	351, 352, 350, 983, 353, 354, 357, 358, 356, 984,
	355, 0, 0, 985, 359, 3135, 517, 360, 518, 362,
	363, 0, 364, 365, 366, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 519, 986, 373, 987, 520, 374,
	367, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	383, 521, 384, 522, 385, 386, 0, 387, 0, 388,
	389, 390, 391, 392, 393, 394, 523, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 403, 404, 405, 402,
	406, 407, 408, 409, 0, 410, 988, 411, 412, 413,
	414, 524, 415, 0, 416, 420, 421, 422, 423, 424,
	425, 426, 0, 432, 433, 427, 429, 430, 431, 428,
	434, 435, 436, 0, 437, 417, 418, 438, 439, 989,
	440, 441, 525, 442, 443, 0, 444, 445, 446, 447,
	419, 448, 452, 453, 449, 450, 451, 526, 0, 455,
	456, 454, 0, 457, 458, 459, 460, 461, 286, 462,
	0, 463, 527, 528, 529, 530, 0, 470, 0, 464,
	465, 531, 466, 532, 0, 467, 468, 469, 0, 471,
	472, 0, 0, 473, 474, 475, 477, 478, 476, 480,
	0, 481, 0, 479, 482, 483, 484, 533, 534, 535,
	0, 486, 485, 536, 0, 0, 0, 0, 487, 488,
	537, 489, 490, 491, 1211, 1210, 0, 0, 0, 0,
	1208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 223, 224, 225, 226, 0, 227, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 228, 230,
	229, 231, 232, 493, 494, 233, 495, 236, 234, 235,
	496, 0, 237, 238, 239, 240, 241, 242, 243, 0,
	0, 244, 497, 498, 499, 0, 245, 246, 500, 0,
	1102, 0, 247, 248, 249, 250, 251, 252, 0, 0,
	254, 255, 256, 253, 0, 257, 0, 258, 259, 260,
	0, 261, 974, 262, 263, 0, 0, 0, 0, 0,
	0, 0, 264, 265, 266, 267, 268, 269, 501, 502,
	0, 270, 271, 0, 273, 272, 0, 274, 0, 0,
	275, 276, 277, 0, 278, 0, 279, 280, 0, 281,
	503, 282, 283, 285, 287, 284, 288, 289, 290, 291,
	504, 505, 0, 219, 0, 0, 0, 0, 0, 292,
	293, 294, 506, 295, 296, 0, 297, 0, 298, 0,
	0, 975, 299, 300, 0, 301, 507, 0, 508, 302,
	0, 303, 304, 305, 306, 509, 510, 511, 361, 977,
	307, 308, 0, 309, 310, 312, 0, 0, 0, 311,
	313, 320, 0, 976, 314, 512, 316, 315, 317, 318,
	319, 513, 0, 514, 0, 321, 978, 515, 979, 322,
	323, 324, 980, 325, 326, 0, 0, 327, 328, 329,
	330, 331, 0, 333, 332, 0, 334, 516, 981, 335,
	336, 982, 0, 337, 338, 0, 0, 339, 340, 341,
	342, 0, 343, 344, 346, 348, 345, 347, 349, 351,
	352, 350, 983, 353, 354, 357, 358, 356, 984, 355,
	0, 0, 985, 359, 2839, 517, 360, 518, 362, 363,
	0, 364, 365, 366, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 519, 986, 373, 987, 520, 374, 367,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 383,
	521, 384, 522, 385, 386, 0, 387, 0, 388, 389,
	390, 391, 392, 393, 394, 523, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 403, 404, 405, 402, 406,
	407, 408, 409, 0, 410, 988, 411, 412, 413, 414,
	524, 415, 0, 416, 420, 421, 422, 423, 424, 425,
	426, 0, 432, 433, 427, 429, 430, 431, 428, 434,
	435, 436, 0, 437, 417, 418, 438, 439, 989, 440,
	441, 525, 442, 443, 0, 444, 445, 446, 447, 419,
	448, 452, 453, 449, 450, 451, 526, 0, 455, 456,
	454, 0, 457, 458, 459, 460, 461, 286, 462, 0,
	463, 527, 528, 529, 530, 0, 470, 0, 464, 465,
	531, 466, 532, 0, 467, 468, 469, 0, 471, 472,
	0, 0, 473, 474, 475, 477, 478, 476, 480, 0,
	481, 0, 479, 482, 483, 484, 533, 534, 535, 611,
	486, 485, 536, 0, 0, 0, 0, 487, 488, 537,
	489, 490, 491, 0, 0, 0, 222, 223, 224, 225,
	226, 0, 227, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 228, 230, 229, 231, 232, 493, 494,
	233, 495, 236, 234, 235, 496, 0, 237, 238, 239,
	240, 241, 242, 243, 0, 0, 244, 497, 498, 499,
	0, 245, 246, 500, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 0, 254, 255, 256, 253, 0,
	257, 0, 258, 259, 260, 0, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 0, 0, 264, 265, 617,
	267, 268, 269, 501, 502, 0, 270, 271, 0, 273,
	272, 0, 274, 0, 0, 275, 276, 277, 0, 278,
	0, 279, 280, 0, 281, 503, 282, 283, 285, 287,
	284, 288, 289, 290, 291, 504, 505, 0, 219, 0,
	0, 0, 0, 0, 292, 293, 294, 506, 295, 296,
	0, 297, 0, 298, 0, 0, 0, 299, 300, 0,
	301, 507, 0, 508, 302, 0, 303, 304, 305, 306,
	509, 510, 511, 361, 0, 307, 308, 0, 309, 310,
	312, 0, 0, 220, 311, 313, 320, 0, 0, 314,
	512, 316, 315, 317, 318, 319, 513, 0, 514, 0,
	321, 0, 515, 0, 322, 323, 324, 0, 325, 326,
	0, 0, 327, 328, 329, 330, 331, 0, 333, 332,
	0, 334, 516, 0, 335, 336, 0, 0, 337, 338,
	0, 0, 339, 340, 341, 342, 0, 343, 344, 346,
	348, 345, 347, 349, 351, 352, 350, 0, 353, 354,
	357, 358, 356, 0, 355, 0, 221, 0, 359, 0,
	517, 360, 518, 362, 363, 0, 364, 365, 366, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 519, 0,
	373, 0, 520, 374, 367, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 383, 521, 384, 522, 385, 386,
	0, 387, 0, 388, 389, 390, 391, 392, 393, 394,
	523, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	403, 404, 405, 402, 406, 407, 408, 409, 0, 410,
	0, 1960, 412, 413, 414, 524, 415, 0, 416, 420,
	421, 422, 423, 424, 425, 426, 0, 432, 433, 427,
	429, 430, 431, 428, 434, 435, 436, 0, 437, 417,
	418, 438, 439, 0, 440, 441, 525, 442, 443, 0,
	444, 445, 446, 447, 419, 448, 452, 453, 449, 450,
	451, 526, 0, 455, 456, 454, 616, 457, 458, 459,
	460, 461, 286, 462, 0, 463, 527, 528, 529, 530,
	0, 470, 0, 464, 465, 531, 466, 532, 0, 467,
	468, 469, 0, 471, 472, 0, 0, 473, 474, 475,
	477, 478, 476, 480, 0, 481, 0, 479, 482, 483,
	484, 533, 534, 535, 0, 486, 485, 536, 611, 0,
	0, 0, 487, 488, 537, 489, 490, 491, 0, 0,
	0, 0, 0, 0, 0, 222, 223, 224, 225, 226,
	0, 227, 0, 620, 0, 0, 0, 492, 0, 0,
	0, 0, 228, 230, 229, 231, 232, 493, 494, 233,
	495, 236, 234, 235, 496, 0, 237, 238, 239, 240,
	241, 242, 243, 0, 0, 244, 497, 498, 499, 0,
	245, 246, 500, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 0, 254, 255, 256, 253, 0, 257,
	0, 258, 259, 260, 0, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 0, 0, 264, 265, 617, 267,
	268, 269, 501, 502, 0, 270, 271, 0, 273, 272,
	0, 274, 0, 0, 275, 276, 277, 0, 278, 0,
	279, 280, 0, 281, 503, 282, 283, 285, 287, 284,
	288, 289, 290, 291, 504, 505, 0, 219, 0, 0,
	0, 0, 0, 292, 293, 294, 506, 295, 296, 0,
	297, 0, 298, 0, 0, 0, 299, 300, 0, 301,
	507, 0, 508, 302, 0, 303, 304, 305, 306, 509,
	510, 511, 361, 0, 307, 308, 0, 309, 310, 312,
	0, 0, 220, 311, 313, 320, 0, 0, 314, 512,
	316, 315, 317, 318, 319, 513, 0, 514, 0, 321,
	0, 515, 0, 322, 323, 324, 0, 325, 326, 0,
	0, 327, 328, 329, 330, 331, 0, 333, 332, 0,
	334, 516, 0, 335, 336, 0, 0, 337, 338, 0,
	0, 339, 340, 341, 342, 0, 343, 344, 346, 348,
	345, 347, 349, 351, 352, 350, 0, 353, 354, 357,
	358, 356, 0, 355, 0, 221, 0, 359, 0, 517,
	360, 518, 362, 363, 0, 364, 365, 366, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 519, 0, 373,
	0, 520, 374, 367, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 383, 521, 384, 522, 385, 386, 0,
	387, 0, 388, 389, 390, 391, 392, 393, 394, 523,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 403,
	404, 405, 402, 406, 407, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 524, 415, 0, 416, 420, 421,
	422, 423, 424, 425, 426, 0, 432, 433, 427, 429,
	430, 431, 428, 434, 435, 436, 0, 437, 417, 418,
	438, 439, 0, 440, 441, 525, 442, 443, 0, 444,
	445, 446, 447, 419, 448, 452, 453, 449, 450, 451,
	526, 0, 455, 456, 454, 616, 457, 458, 459, 460,
	461, 286, 462, 0, 463, 527, 528, 529, 530, 0,
	470, 0, 464, 465, 531, 466, 532, 0, 467, 468,
	469, 0, 471, 472, 0, 0, 473, 474, 475, 477,
	478, 476, 480, 0, 481, 0, 479, 482, 483, 484,
	533, 534, 535, 0, 486, 485, 536, 0, 0, 0,
	0, 487, 488, 537, 489, 490, 491, 1379, 0, 1211,
	1210, 0, 0, 0, 0, 1208, 0, 0, 0, 0,
	0, 0, 620, 0, 0, 0, 222, 223, 224, 225,
	226, 0, 227, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 228, 230, 229, 231, 232, 493, 494,
	233, 495, 236, 234, 235, 496, 0, 237, 238, 239,
	240, 241, 242, 243, 0, 0, 244, 497, 498, 499,
	0, 245, 246, 500, 0, 1102, 0, 247, 248, 249,
	250, 251, 252, 0, 0, 254, 255, 256, 253, 0,
	257, 0, 258, 259, 260, 0, 261, 974, 262, 263,
	0, 0, 0, 0, 0, 0, 0, 264, 265, 266,
	267, 268, 269, 501, 502, 0, 270, 271, 0, 273,
	272, 0, 274, 0, 0, 275, 276, 277, 0, 278,
	0, 279, 280, 0, 281, 503, 282, 283, 285, 287,
	284, 288, 289, 290, 291, 504, 505, 0, 219, 0,
	0, 0, 0, 0, 1378, 293, 294, 506, 295, 296,
	0, 297, 0, 298, 0, 0, 975, 299, 300, 0,
	301, 507, 0, 508, 302, 0, 303, 304, 305, 306,
	509, 510, 511, 361, 977, 307, 308, 0, 309, 310,
	312, 0, 0, 0, 311, 313, 320, 0, 976, 314,
	512, 316, 315, 317, 318, 319, 513, 0, 514, 0,
	321, 978, 515, 979, 322, 323, 324, 980, 325, 326,
	0, 0, 327, 328, 329, 330, 331, 0, 333, 332,
	0, 334, 516, 981, 335, 336, 982, 0, 337, 338,
	0, 0, 339, 340, 341, 342, 0, 343, 344, 346,
	348, 345, 347, 349, 351, 352, 350, 983, 353, 354,
	357, 358, 356, 984, 355, 0, 0, 985, 359, 0,
	517, 360, 518, 362, 363, 0, 364, 365, 366, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 519, 986,
	373, 987, 520, 374, 367, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 383, 521, 384, 522, 385, 386,
	0, 387, 0, 388, 389, 390, 391, 392, 1377, 394,
	523, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	403, 404, 405, 402, 406, 407, 408, 409, 0, 410,
	988, 411, 412, 413, 414, 524, 415, 0, 416, 420,
	421, 422, 1376, 424, 425, 426, 0, 432, 433, 427,
	429, 430, 431, 428, 434, 435, 436, 0, 437, 417,
	418, 438, 439, 989, 440, 441, 525, 442, 443, 0,
	444, 445, 446, 447, 419, 448, 452, 453, 449, 450,
	451, 526, 0, 455, 456, 454, 0, 457, 458, 459,
	460, 461, 286, 462, 0, 463, 527, 528, 529, 530,
	0, 470, 0, 464, 465, 531, 466, 532, 0, 467,
	468, 469, 0, 471, 472, 0, 0, 473, 474, 475,
	477, 478, 476, 480, 0, 481, 0, 479, 482, 483,
	484, 533, 534, 535, 0, 486, 485, 536, 0, 0,
	0, 0, 487, 488, 537, 489, 490, 491, 1340, 0,
	1211, 1210, 0, 0, 0, 0, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 223, 224,
	225, 226, 0, 227, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 228, 230, 229, 231, 232, 493,
	494, 233, 495, 236, 234, 235, 496, 0, 237, 238,
	239, 240, 241, 242, 243, 0, 0, 244, 497, 498,
	499, 0, 245, 246, 500, 0, 1102, 0, 247, 248,
	249, 250, 251, 252, 0, 0, 254, 255, 256, 253,
	0, 257, 0, 258, 259, 260, 0, 261, 974, 262,
	263, 0, 0, 0, 0, 0, 0, 0, 264, 265,
	266, 267, 268, 269, 501, 502, 0, 270, 271, 0,
	273, 272, 0, 274, 0, 0, 275, 276, 277, 0,
	278, 0, 279, 280, 0, 281, 503, 282, 283, 285,
	287, 284, 288, 289, 290, 291, 504, 505, 0, 219,
	0, 0, 0, 0, 0, 292, 293, 294, 506, 295,
	296, 0, 297, 0, 298, 0, 0, 975, 299, 300,
	0, 301, 507, 0, 508, 302, 0, 303, 304, 305,
	306, 1339, 510, 511, 361, 977, 307, 308, 0, 309,
	310, 312, 0, 0, 0, 311, 313, 320, 0, 976,
	314, 512, 316, 315, 317, 318, 319, 513, 0, 514,
	0, 321, 978, 515, 979, 322, 323, 324, 980, 325,
	326, 0, 0, 327, 328, 329, 330, 331, 0, 333,
	332, 0, 334, 516, 981, 335, 336, 982, 0, 337,
	338, 0, 0, 339, 340, 341, 342, 0, 343, 344,
	346, 348, 345, 347, 349, 351, 352, 350, 983, 353,
	354, 357, 358, 356, 984, 355, 0, 0, 985, 359,
	0, 517, 360, 518, 362, 363, 0, 364, 365, 366,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 519,
	986, 373, 987, 520, 374, 367, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 383, 521, 384, 522, 385,
	386, 0, 387, 0, 388, 389, 390, 391, 392, 393,
	394, 523, 395, 396, 0, 397, 398, 399, 400, 401,
	0, 403, 404, 405, 402, 406, 407, 408, 409, 0,
	410, 988, 411, 412, 413, 414, 524, 415, 0, 416,
	420, 421, 422, 423, 424, 425, 426, 0, 432, 433,
	427, 429, 430, 431, 428, 434, 435, 436, 0, 437,
	417, 418, 438, 439, 989, 440, 441, 525, 442, 443,
	0, 444, 445, 446, 447, 419, 448, 452, 453, 449,
	450, 451, 526, 0, 455, 456, 454, 0, 457, 458,
	459, 460, 461, 286, 462, 0, 463, 527, 528, 529,
	530, 0, 470, 0, 464, 465, 531, 466, 532, 0,
	467, 468, 469, 0, 471, 472, 0, 0, 473, 474,
	475, 477, 478, 476, 480, 0, 481, 0, 479, 482,
	483, 484, 533, 534, 535, 0, 486, 485, 536, 0,
	0, 0, 0, 487, 488, 537, 489, 490, 491, 1277,
	0, 1211, 1210, 0, 0, 0, 0, 1208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 223,
	224, 225, 226, 0, 227, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 228, 230, 229, 231, 232,
	493, 494, 233, 495, 236, 234, 235, 496, 0, 237,
	238, 239, 240, 241, 242, 243, 0, 0, 244, 497,
	498, 499, 0, 245, 246, 500, 0, 1102, 0, 247,
	248, 249, 250, 251, 252, 0, 0, 254, 255, 256,
	253, 0, 257, 0, 258, 259, 260, 0, 261, 974,
	262, 263, 0, 0, 0, 0, 0, 0, 0, 264,
	265, 266, 267, 268, 269, 501, 502, 0, 270, 271,
	0, 273, 272, 0, 274, 0, 0, 275, 276, 277,
	0, 278, 0, 279, 280, 0, 281, 503, 282, 283,
	285, 287, 284, 288, 289, 290, 291, 504, 505, 0,
	219, 0, 0, 0, 0, 0, 292, 293, 294, 506,
	295, 296, 0, 297, 0, 298, 0, 0, 975, 299,
	300, 0, 301, 507, 0, 508, 302, 0, 303, 304,
	305, 306, 1276, 510, 511, 361, 977, 307, 308, 0,
	309, 310, 312, 0, 0, 0, 311, 313, 320, 0,
	976, 314, 512, 316, 315, 317, 318, 319, 513, 0,
	514, 0, 321, 978, 515, 979, 322, 323, 324, 980,
	325, 326, 0, 0, 327, 328, 329, 330, 331, 0,
	333, 332, 0, 334, 516, 981, 335, 336, 982, 0,
	337, 338, 0, 0, 339, 340, 341, 342, 0, 343,
	344, 346, 348, 345, 347, 349, 351, 352, 350, 983,
	353, 354, 357, 358, 356, 984, 355, 0, 0, 985,
	359, 0, 517, 360, 518, 362, 363, 0, 364, 365,
	366, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	519, 986, 373, 987, 520, 374, 367, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 383, 521, 384, 522,
	385, 386, 0, 387, 0, 388, 389, 390, 391, 392,
	393, 394, 523, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 403, 404, 405, 402, 406, 407, 408, 409,
	0, 410, 988, 411, 412, 413, 414, 524, 415, 0,
	416, 420, 421, 422, 423, 424, 425, 426, 0, 432,
	433, 427, 429, 430, 431, 428, 434, 435, 436, 0,
	437, 417, 418, 438, 439, 989, 440, 441, 525, 442,
	443, 0, 444, 445, 446, 447, 419, 448, 452, 453,
	449, 450, 451, 526, 0, 455, 456, 454, 0, 457,
	458, 459, 460, 461, 286, 462, 0, 463, 527, 528,
	529, 530, 0, 470, 0, 464, 465, 531, 466, 532,
	0, 467, 468, 469, 0, 471, 472, 0, 0, 473,
	474, 475, 477, 478, 476, 480, 0, 481, 0, 479,
	482, 483, 484, 533, 534, 535, 0, 486, 485, 536,
	0, 0, 0, 0, 487, 488, 537, 489, 490, 491,
	1206, 0, 1211, 1210, 0, 0, 0, 0, 1208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	223, 224, 225, 226, 0, 227, 0, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 228, 230, 229, 231,
	232, 493, 494, 233, 495, 236, 234, 235, 496, 0,
	237, 238, 239, 240, 241, 242, 243, 0, 0, 244,
	497, 498, 499, 0, 245, 246, 500, 0, 1102, 0,
	247, 248, 249, 250, 251, 252, 0, 0, 254, 255,
	256, 253, 0, 257, 0, 258, 259, 260, 0, 261,
	974, 262, 263, 0, 0, 0, 0, 0, 0, 0,
	264, 265, 266, 267, 268, 269, 501, 502, 0, 270,
	271, 0, 273, 272, 0, 274, 0, 0, 275, 276,
	277, 0, 278, 0, 279, 280, 0, 281, 503, 282,
	283, 285, 287, 284, 288, 289, 290, 291, 504, 505,
	0, 219, 0, 0, 0, 0, 0, 292, 293, 294,
	506, 295, 296, 0, 297, 0, 298, 0, 0, 975,
	299, 300, 0, 301, 507, 0, 508, 302, 0, 303,
	304, 305, 306, 1205, 510, 511, 361, 977, 307, 308,
	0, 309, 310, 312, 0, 0, 0, 311, 313, 320,
	0, 976, 314, 512, 316, 315, 317, 318, 319, 513,
	0, 514, 0, 321, 978, 515, 979, 322, 323, 324,
	980, 325, 326, 0, 0, 327, 328, 329, 330, 331,
	0, 333, 332, 0, 334, 516, 981, 335, 336, 982,
	0, 337, 338, 0, 0, 339, 340, 341, 342, 0,
	343, 344, 346, 348, 345, 347, 349, 351, 352, 350,
	983, 353, 354, 357, 358, 356, 984, 355, 0, 0,
	985, 359, 0, 517, 360, 518, 362, 363, 0, 364,
	365, 366, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 519, 986, 373, 987, 520, 374, 367, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 383, 521, 384,
	522, 385, 386, 0, 387, 0, 388, 389, 390, 391,
	392, 393, 394, 523, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 403, 404, 405, 402, 406, 407, 408,
	409, 0, 410, 988, 411, 412, 413, 414, 524, 415,
	0, 416, 420, 421, 422, 423, 424, 425, 426, 0,
	432, 433, 427, 429, 430, 431, 428, 434, 435, 436,
	0, 437, 417, 418, 438, 439, 989, 440, 441, 525,
	442, 443, 0, 444, 445, 446, 447, 419, 448, 452,
	453, 449, 450, 451, 526, 0, 455, 456, 454, 0,
	457, 458, 459, 460, 461, 286, 462, 0, 463, 527,
	528, 529, 530, 0, 470, 0, 464, 465, 531, 466,
	532, 0, 467, 468, 469, 0, 471, 472, 0, 0,
	473, 474, 475, 477, 478, 476, 480, 0, 481, 0,
	479, 482, 483, 484, 533, 534, 535, 0, 486, 485,
	536, 0, 0, 0, 0, 487, 488, 537, 489, 490,
	491, 1211, 1210, 0, 0, 0, 0, 1208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 223,
	224, 225, 226, 0, 227, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 228, 230, 229, 231, 232,
	493, 494, 233, 495, 236, 234, 235, 496, 0, 237,
	238, 239, 240, 241, 242, 243, 0, 0, 244, 497,
	498, 499, 0, 245, 246, 500, 0, 1102, 0, 247,
	248, 249, 250, 251, 252, 0, 0, 254, 255, 256,
	253, 0, 257, 0, 258, 259, 260, 0, 261, 974,
	262, 263, 0, 0, 0, 0, 0, 0, 0, 264,
	265, 266, 267, 268, 269, 501, 502, 0, 270, 271,
	0, 273, 272, 0, 274, 0, 0, 275, 276, 277,
	0, 278, 0, 279, 280, 0, 281, 503, 282, 283,
	285, 287, 284, 288, 289, 290, 291, 504, 505, 0,
	219, 0, 0, 0, 0, 0, 292, 293, 294, 506,
	295, 296, 0, 297, 0, 298, 0, 0, 975, 299,
	300, 0, 301, 507, 0, 508, 302, 0, 303, 304,
	305, 306, 509, 510, 511, 361, 977, 307, 308, 0,
	309, 310, 312, 0, 0, 0, 311, 313, 320, 0,
	976, 314, 512, 316, 315, 317, 318, 319, 513, 0,
	514, 0, 321, 978, 515, 979, 322, 323, 324, 980,
	325, 326, 0, 0, 327, 328, 329, 330, 331, 0,
	333, 332, 0, 334, 516, 981, 335, 336, 982, 0,
	337, 338, 0, 0, 339, 340, 341, 342, 0, 343,
	344, 346, 348, 345, 347, 349, 351, 352, 350, 983,
	353, 354, 357, 358, 356, 984, 355, 0, 0, 985,
	359, 0, 517, 360, 518, 362, 363, 0, 364, 365,
	366, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	519, 986, 373, 987, 520, 374, 367, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 383, 521, 384, 522,
	385, 386, 0, 387, 0, 388, 389, 390, 391, 392,
	393, 394, 523, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 403, 404, 405, 402, 406, 407, 408, 409,
	0, 410, 988, 411, 412, 413, 414, 524, 415, 0,
	416, 420, 421, 422, 423, 424, 425, 426, 0, 432,
	433, 427, 429, 430, 431, 428, 434, 435, 436, 0,
	437, 417, 418, 438, 439, 989, 440, 441, 525, 442,
	443, 0, 444, 445, 446, 447, 419, 448, 452, 453,
	449, 450, 451, 526, 0, 455, 456, 454, 0, 457,
	458, 459, 460, 461, 286, 462, 0, 463, 527, 528,
	529, 530, 0, 470, 0, 464, 465, 531, 466, 532,
	0, 467, 468, 469, 0, 471, 472, 0, 0, 473,
	474, 475, 477, 478, 476, 480, 0, 481, 0, 479,
	482, 483, 484, 533, 534, 535, 216, 486, 485, 536,
	0, 0, 0, 0, 487, 488, 537, 489, 490, 491,
	0, 0, 0, 222, 223, 224, 225, 226, 0, 227,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	228, 230, 229, 231, 232, 493, 494, 233, 495, 236,
	234, 235, 496, 0, 237, 238, 239, 240, 241, 242,
	243, 0, 0, 244, 497, 498, 499, 0, 245, 246,
	500, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 0, 254, 255, 256, 253, 0, 257, 0, 258,
	259, 260, 0, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 0, 0, 264, 265, 266, 267, 268, 269,
	501, 502, 0, 270, 271, 0, 273, 272, 0, 274,
	0, 0, 275, 276, 277, 0, 278, 0, 279, 280,
	0, 281, 503, 282, 283, 285, 287, 284, 288, 289,
	290, 291, 504, 505, 0, 219, 0, 0, 0, 0,
	0, 292, 293, 294, 506, 295, 296, 0, 297, 0,
	298, 0, 0, 0, 299, 300, 0, 301, 507, 0,
	508, 302, 0, 303, 304, 305, 306, 509, 510, 511,
	361, 0, 307, 308, 0, 309, 310, 312, 0, 0,
	220, 311, 313, 320, 0, 0, 314, 512, 316, 315,
	317, 318, 319, 513, 0, 514, 0, 321, 0, 515,
	0, 322, 323, 324, 0, 325, 326, 0, 0, 327,
	328, 329, 330, 331, 0, 333, 332, 0, 334, 516,
	0, 335, 336, 0, 0, 337, 338, 0, 0, 339,
	340, 341, 342, 0, 343, 344, 346, 348, 345, 347,
	349, 351, 352, 350, 0, 353, 354, 357, 358, 356,
	0, 355, 0, 221, 0, 359, 0, 517, 360, 518,
	362, 363, 0, 364, 365, 366, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 519, 0, 373, 0, 520,
	374, 367, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 383, 521, 384, 522, 385, 386, 0, 387, 0,
	388, 389, 390, 391, 392, 393, 394, 523, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 403, 404, 405,
	402, 406, 407, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 524, 415, 0, 416, 420, 421, 422, 423,
	424, 425, 426, 0, 432, 433, 427, 429, 430, 431,
	428, 434, 435, 436, 0, 437, 417, 418, 438, 439,
	0, 440, 441, 525, 442, 443, 0, 444, 445, 446,
	447, 419, 448, 452, 453, 449, 450, 451, 526, 0,
	455, 456, 454, 0, 457, 458, 459, 460, 461, 286,
	462, 0, 463, 527, 528, 529, 530, 0, 470, 0,
	464, 465, 531, 466, 532, 0, 467, 468, 469, 0,
	471, 472, 0, 0, 473, 474, 475, 477, 478, 476,
	480, 0, 481, 0, 479, 482, 483, 484, 533, 534,
	535, 0, 486, 485, 536, 1211, 1210, 0, 0, 487,
	488, 537, 489, 490, 491, 0, 0, 0, 0, 0,
	0, 0, 222, 223, 224, 225, 226, 0, 227, 0,
	620, 0, 0, 0, 492, 0, 0, 0, 0, 228,
	230, 229, 231, 232, 493, 494, 233, 495, 236, 234,
	235, 496, 0, 237, 238, 239, 240, 241, 242, 243,
	0, 0, 244, 497, 498, 499, 0, 245, 246, 500,
	0, 1102, 0, 247, 248, 249, 250, 251, 252, 0,
	0, 254, 255, 256, 253, 0, 257, 0, 258, 259,
	260, 0, 261, 974, 262, 263, 0, 0, 0, 0,
	0, 0, 0, 264, 265, 266, 267, 268, 269, 501,
	502, 1747, 270, 271, 0, 273, 272, 0, 274, 0,
	0, 275, 276, 277, 0, 278, 0, 279, 280, 0,
	281, 503, 282, 283, 285, 287, 284, 288, 289, 290,
	291, 504, 505, 0, 219, 0, 0, 0, 0, 0,
	292, 293, 294, 506, 295, 296, 0, 297, 0, 298,
	0, 0, 975, 299, 300, 0, 301, 507, 0, 508,
	302, 0, 303, 304, 305, 306, 509, 510, 511, 361,
	977, 307, 308, 0, 309, 310, 312, 0, 0, 0,
	311, 313, 320, 0, 976, 314, 512, 316, 315, 317,
	318, 319, 513, 0, 514, 0, 321, 978, 515, 979,
	322, 323, 324, 980, 325, 326, 0, 0, 327, 328,
	329, 330, 331, 0, 333, 332, 0, 334, 516, 981,
	335, 336, 982, 0, 337, 338, 0, 0, 339, 340,
	341, 342, 0, 343, 344, 346, 348, 345, 347, 349,
	351, 352, 350, 983, 353, 354, 357, 358, 356, 984,
	355, 0, 0, 985, 359, 0, 517, 360, 518, 362,
	363, 0, 364, 365, 366, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 519, 986, 373, 987, 520, 374,
	367, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	383, 521, 384, 522, 385, 386, 0, 387, 0, 388,
	389, 390, 391, 392, 393, 394, 523, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 403, 404, 405, 402,
	406, 407, 408, 409, 0, 410, 988, 411, 412, 413,
	414, 524, 415, 0, 416, 420, 421, 422, 423, 424,
	425, 426, 0, 432, 433, 427, 429, 430, 431, 428,
	434, 435, 436, 0, 437, 417, 418, 438, 439, 989,
	440, 441, 525, 442, 443, 0, 444, 445, 446, 447,
	419, 448, 452, 453, 449, 450, 451, 526, 0, 455,
	456, 454, 0, 457, 458, 459, 460, 461, 286, 462,
	0, 463, 527, 528, 529, 530, 0, 470, 0, 464,
	465, 531, 466, 532, 0, 467, 468, 469, 0, 471,
	472, 0, 0, 473, 474, 475, 477, 478, 476, 480,
	0, 481, 0, 479, 482, 483, 484, 533, 534, 535,
	0, 486, 485, 536, 1211, 1210, 0, 0, 487, 488,
	537, 489, 490, 491, 0, 0, 0, 0, 0, 0,
	0, 222, 223, 224, 225, 226, 0, 227, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 228, 230,
	229, 231, 232, 493, 494, 233, 495, 236, 234, 235,
	496, 0, 237, 238, 239, 240, 241, 242, 243, 0,
	0, 244, 497, 498, 499, 0, 245, 246, 500, 0,
	1102, 0, 247, 248, 249, 250, 251, 252, 0, 0,
	254, 255, 256, 253, 0, 257, 0, 258, 259, 260,
	0, 261, 974, 262, 263, 0, 0, 0, 0, 0,
	0, 0, 264, 265, 266, 267, 268, 269, 501, 502,
	0, 270, 271, 0, 273, 272, 0, 274, 0, 0,
	275, 276, 277, 0, 278, 0, 279, 280, 0, 281,
	503, 282, 283, 285, 287, 284, 288, 289, 290, 291,
	504, 505, 0, 219, 0, 0, 0, 0, 0, 292,
	293, 294, 506, 295, 296, 0, 297, 0, 298, 0,
	0, 975, 299, 300, 0, 301, 507, 0, 508, 302,
	0, 303, 304, 305, 306, 509, 510, 511, 361, 977,
	307, 308, 0, 309, 310, 312, 0, 0, 0, 311,
	313, 320, 0, 976, 314, 512, 316, 315, 317, 318,
	319, 513, 0, 514, 0, 321, 978, 515, 979, 322,
	323, 324, 980, 325, 326, 0, 0, 327, 328, 329,
	330, 331, 0, 333, 332, 0, 334, 516, 981, 335,
	336, 982, 0, 337, 338, 0, 0, 339, 340, 341,
	342, 0, 343, 344, 346, 348, 345, 347, 349, 351,
	352, 350, 983, 353, 354, 357, 358, 356, 984, 355,
	0, 0, 985, 359, 0, 517, 360, 518, 362, 363,
	0, 364, 365, 366, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 519, 986, 373, 987, 520, 374, 367,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 383,
	521, 384, 522, 385, 386, 0, 387, 0, 388, 389,
	390, 391, 392, 393, 394, 523, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 403, 404, 405, 402, 406,
	407, 408, 409, 0, 410, 988, 411, 412, 413, 414,
	524, 415, 0, 416, 420, 421, 422, 423, 424, 425,
	426, 0, 432, 433, 427, 429, 430, 431, 428, 434,
	435, 436, 0, 437, 417, 418, 438, 439, 989, 440,
	441, 525, 442, 443, 0, 444, 445, 446, 447, 419,
	448, 452, 453, 449, 450, 451, 526, 0, 455, 456,
	454, 0, 457, 458, 459, 460, 461, 286, 462, 0,
	463, 527, 528, 529, 530, 0, 470, 0, 464, 465,
	531, 466, 532, 0, 467, 468, 469, 0, 471, 472,
	0, 0, 473, 474, 475, 477, 478, 476, 480, 0,
	481, 0, 479, 482, 483, 484, 533, 534, 535, 1211,
	486, 485, 536, 0, 0, 0, 0, 487, 488, 537,
	489, 490, 491, 0, 0, 0, 222, 223, 224, 225,
	226, 0, 227, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 228, 230, 229, 231, 232, 493, 494,
	233, 495, 236, 234, 235, 496, 0, 237, 238, 239,
	240, 241, 242, 243, 0, 0, 244, 497, 498, 499,
	0, 245, 246, 500, 0, 1102, 0, 247, 248, 249,
	250, 251, 252, 0, 0, 254, 255, 256, 253, 0,
	257, 0, 258, 259, 260, 0, 261, 974, 262, 263,
	0, 0, 0, 0, 0, 0, 0, 264, 265, 266,
	267, 268, 269, 501, 502, 0, 270, 271, 0, 273,
	272, 0, 274, 0, 0, 275, 276, 277, 0, 278,
	0, 279, 280, 0, 281, 503, 282, 283, 285, 287,
	284, 288, 289, 290, 291, 504, 505, 0, 219, 0,
	0, 0, 0, 0, 292, 293, 294, 506, 295, 296,
	0, 297, 0, 298, 0, 0, 975, 299, 300, 0,
	301, 507, 0, 508, 302, 0, 303, 304, 305, 306,
	509, 510, 511, 361, 977, 307, 308, 0, 309, 310,
	312, 0, 0, 0, 311, 313, 320, 0, 976, 314,
	512, 316, 315, 317, 318, 319, 513, 0, 514, 0,
	321, 978, 515, 979, 322, 323, 324, 980, 325, 326,
	0, 0, 327, 328, 329, 330, 331, 0, 333, 332,
	0, 334, 516, 981, 335, 336, 982, 0, 337, 338,
	0, 0, 339, 340, 341, 342, 0, 343, 344, 346,
	348, 345, 347, 349, 351, 352, 350, 983, 353, 354,
	357, 358, 356, 984, 355, 0, 0, 985, 359, 0,
	517, 360, 518, 362, 363, 0, 364, 365, 366, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 519, 986,
	373, 987, 520, 374, 367, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 383, 521, 384, 522, 385, 386,
	0, 387, 0, 388, 389, 390, 391, 392, 393, 394,
	523, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	403, 404, 405, 402, 406, 407, 408, 409, 0, 410,
	988, 411, 412, 413, 414, 524, 415, 0, 416, 420,
	421, 422, 423, 424, 425, 426, 0, 432, 433, 427,
	429, 430, 431, 428, 434, 435, 436, 0, 437, 417,
	418, 438, 439, 989, 440, 441, 525, 442, 443, 0,
	444, 445, 446, 447, 419, 448, 452, 453, 449, 450,
	451, 526, 0, 455, 456, 454, 0, 457, 458, 459,
	460, 461, 286, 462, 0, 463, 527, 528, 529, 530,
	0, 470, 0, 464, 465, 531, 466, 532, 0, 467,
	468, 469, 0, 471, 472, 0, 0, 473, 474, 475,
	477, 478, 476, 480, 0, 481, 0, 479, 482, 483,
	484, 533, 534, 535, 216, 486, 485, 536, 0, 0,
	0, 0, 487, 488, 537, 489, 490, 491, 0, 0,
	0, 222, 223, 224, 225, 226, 0, 227, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 228, 230,
	229, 231, 232, 493, 494, 233, 495, 236, 234, 235,
	496, 0, 237, 238, 239, 240, 241, 242, 243, 0,
	0, 244, 497, 498, 499, 2333, 245, 246, 500, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 0,
	254, 255, 256, 253, 2330, 257, 0, 258, 259, 260,
	0, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	0, 0, 264, 265, 266, 267, 268, 269, 501, 502,
	0, 270, 271, 0, 273, 272, 0, 274, 0, 0,
	275, 276, 277, 0, 278, 0, 279, 280, 0, 281,
	503, 282, 283, 285, 287, 284, 288, 289, 290, 291,
	504, 505, 0, 2493, 0, 0, 0, 0, 0, 292,
	293, 294, 506, 295, 296, 0, 297, 0, 298, 2336,
	0, 0, 299, 300, 0, 301, 507, 0, 508, 302,
	0, 303, 304, 305, 306, 509, 510, 511, 361, 0,
	307, 308, 0, 309, 310, 312, 0, 0, 2490, 311,
	313, 320, 0, 0, 314, 512, 316, 315, 317, 318,
	319, 513, 0, 514, 0, 2492, 0, 515, 0, 322,
	323, 324, 0, 325, 326, 0, 0, 327, 328, 329,
	330, 331, 0, 333, 332, 0, 334, 516, 0, 335,
	336, 2489, 0, 337, 338, 0, 0, 339, 340, 341,
	342, 0, 343, 344, 346, 348, 345, 347, 349, 351,
	352, 350, 0, 353, 354, 357, 358, 356, 0, 355,
	0, 0, 0, 359, 0, 517, 360, 518, 362, 363,
	0, 364, 365, 366, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 519, 0, 373, 0, 520, 374, 367,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 383,
	521, 384, 522, 385, 386, 2335, 387, 0, 388, 389,
	390, 391, 392, 393, 394, 523, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 403, 404, 405, 402, 406,
	407, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	524, 415, 0, 416, 420, 421, 422, 423, 424, 425,
	426, 0, 432, 433, 427, 429, 430, 431, 428, 434,
	435, 436, 0, 437, 417, 418, 438, 439, 0, 440,
	441, 525, 442, 443, 0, 444, 445, 446, 447, 419,
	448, 452, 453, 449, 450, 451, 526, 0, 455, 456,
	454, 0, 457, 458, 459, 460, 461, 286, 462, 0,
	463, 527, 528, 529, 530, 0, 470, 0, 464, 465,
	531, 466, 532, 0, 467, 468, 469, 0, 471, 472,
	0, 2491, 473, 474, 475, 477, 478, 476, 480, 0,
	481, 0, 479, 482, 483, 484, 533, 534, 535, 216,
	486, 485, 536, 0, 0, 0, 0, 487, 488, 537,
	489, 490, 491, 0, 0, 0, 222, 223, 224, 225,
	226, 0, 227, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 228, 230, 229, 231, 232, 493, 494,
	233, 495, 236, 234, 235, 496, 0, 237, 238, 239,
	240, 241, 242, 243, 0, 0, 244, 497, 498, 499,
	2333, 245, 246, 500, 0, 0, 2327, 247, 248, 249,
	250, 251, 252, 0, 0, 254, 255, 256, 253, 2330,
	257, 0, 258, 259, 260, 0, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 0, 0, 264, 265, 266,
	267, 268, 269, 501, 502, 0, 270, 271, 0, 273,
	272, 0, 274, 0, 0, 275, 276, 277, 0, 278,
	0, 279, 280, 0, 281, 503, 282, 283, 285, 287,
	284, 288, 289, 290, 291, 504, 505, 0, 0, 0,
	0, 0, 0, 0, 292, 293, 294, 506, 295, 296,
	0, 297, 0, 298, 2336, 0, 0, 299, 300, 0,
	301, 507, 0, 508, 302, 0, 303, 304, 305, 306,
	2326, 510, 511, 361, 0, 307, 308, 0, 309, 310,
	312, 0, 0, 0, 311, 313, 320, 0, 0, 314,
	512, 316, 315, 317, 318, 319, 513, 0, 514, 0,
	321, 0, 515, 0, 322, 323, 324, 0, 325, 326,
	0, 0, 327, 328, 329, 330, 331, 0, 333, 332,
	0, 334, 516, 0, 335, 336, 0, 0, 337, 338,
	0, 0, 339, 340, 341, 342, 0, 343, 344, 346,
	348, 345, 347, 349, 351, 352, 350, 0, 353, 354,
	357, 358, 356, 0, 355, 0, 0, 0, 359, 0,
	517, 360, 518, 362, 363, 0, 364, 365, 366, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 519, 0,
	373, 0, 520, 374, 367, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 383, 521, 384, 522, 385, 386,
	2335, 387, 0, 388, 389, 390, 391, 392, 393, 394,
	523, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	403, 404, 405, 402, 406, 407, 408, 409, 0, 410,
	0, 411, 412, 413, 414, 524, 415, 0, 416, 420,
	421, 422, 423, 424, 425, 426, 0, 432, 433, 427,
	429, 430, 431, 428, 434, 435, 436, 0, 437, 417,
	418, 438, 439, 0, 440, 441, 525, 442, 443, 0,
	444, 445, 446, 447, 419, 448, 452, 453, 449, 450,
	451, 526, 0, 455, 456, 454, 0, 457, 458, 459,
	460, 461, 286, 462, 0, 463, 527, 528, 529, 530,
	0, 470, 0, 464, 465, 531, 466, 532, 0, 467,
	468, 469, 0, 471, 472, 0, 2334, 473, 474, 475,
	477, 478, 476, 480, 0, 481, 0, 479, 482, 483,
	484, 533, 534, 535, 0, 486, 485, 536, 1436, 0,
	216, 0, 487, 488, 537, 489, 490, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 223, 224,
	225, 226, 0, 227, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 228, 230, 229, 231, 232, 493,
	494, 233, 495, 236, 234, 235, 496, 0, 237, 238,
	239, 240, 241, 242, 243, 0, 0, 244, 497, 498,
	499, 0, 245, 246, 500, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 0, 254, 255, 256, 253,
	0, 257, 0, 258, 259, 260, 0, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 0, 0, 264, 265,
	266, 267, 268, 269, 501, 502, 0, 270, 271, 0,
	273, 272, 0, 274, 0, 0, 275, 276, 277, 0,
	278, 0, 279, 280, 0, 281, 503, 282, 283, 285,
	287, 284, 288, 289, 290, 291, 504, 505, 0, 219,
	0, 0, 0, 0, 0, 292, 293, 294, 506, 295,
	296, 0, 297, 0, 298, 0, 0, 0, 299, 300,
	0, 301, 507, 0, 508, 302, 0, 303, 304, 305,
	306, 509, 510, 511, 361, 0, 307, 308, 0, 309,
	310, 312, 0, 0, 220, 311, 313, 320, 0, 0,
	314, 512, 316, 315, 317, 318, 319, 513, 0, 514,
	0, 321, 0, 515, 0, 322, 323, 324, 0, 325,
	326, 0, 0, 327, 328, 329, 330, 331, 0, 333,
	332, 0, 334, 516, 0, 335, 336, 0, 0, 337,
	338, 0, 0, 339, 340, 341, 342, 0, 343, 344,
	346, 348, 345, 347, 349, 351, 352, 350, 0, 353,
	354, 357, 358, 356, 0, 355, 0, 221, 0, 359,
	0, 517, 360, 518, 362, 363, 0, 364, 365, 366,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 519,
	0, 373, 0, 520, 374, 367, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 383, 521, 384, 522, 385,
	386, 0, 387, 0, 388, 389, 390, 391, 392, 393,
	394, 523, 395, 396, 0, 397, 398, 399, 400, 401,
	0, 403, 404, 405, 402, 406, 407, 408, 409, 0,
	410, 0, 411, 412, 413, 414, 524, 415, 0, 416,
	420, 421, 422, 423, 424, 425, 426, 0, 1439, 433,
	427, 429, 430, 431, 428, 434, 435, 436, 0, 437,
	417, 418, 438, 439, 0, 440, 441, 525, 442, 443,
	0, 444, 445, 446, 447, 419, 448, 452, 453, 449,
	450, 451, 526, 0, 455, 456, 454, 1437, 457, 458,
	459, 460, 461, 286, 462, 0, 463, 527, 528, 529,
	530, 0, 470, 0, 464, 465, 531, 466, 532, 0,
	467, 468, 469, 0, 471, 472, 0, 0, 473, 474,
	475, 477, 478, 476, 480, 0, 481, 0, 479, 482,
	483, 484, 533, 534, 535, 0, 1438, 485, 536, 1187,
	0, 216, 0, 487, 488, 537, 489, 490, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 223,
	224, 225, 226, 0, 227, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 228, 230, 229, 231, 232,
	493, 494, 233, 495, 236, 234, 235, 496, 0, 237,
	238, 239, 240, 241, 242, 243, 0, 0, 244, 497,
	498, 499, 0, 245, 246, 500, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 0, 254, 255, 256,
	253, 0, 257, 0, 258, 259, 260, 0, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 0, 0, 264,
	265, 266, 267, 268, 269, 501, 502, 0, 270, 271,
	0, 273, 272, 0, 274, 0, 0, 275, 276, 277,
	0, 278, 0, 279, 280, 0, 281, 503, 282, 283,
	285, 287, 284, 288, 289, 290, 291, 504, 505, 0,
	219, 0, 0, 0, 0, 0, 292, 293, 294, 506,
	295, 296, 0, 297, 0, 298, 0, 0, 0, 299,
	300, 0, 301, 507, 0, 508, 302, 0, 303, 304,
	305, 306, 1189, 510, 511, 361, 0, 307, 308, 0,
	309, 310, 312, 0, 0, 220, 311, 313, 320, 0,
	0, 314, 512, 316, 315, 317, 318, 319, 513, 0,
	514, 0, 321, 0, 515, 0, 322, 323, 324, 0,
	325, 326, 0, 0, 327, 328, 329, 330, 331, 0,
	333, 332, 0, 334, 516, 0, 335, 336, 0, 0,
	337, 338, 0, 0, 339, 340, 341, 342, 0, 343,
	344, 346, 348, 345, 347, 349, 351, 352, 350, 0,
	353, 354, 357, 358, 356, 0, 355, 0, 221, 0,
	359, 0, 517, 360, 518, 362, 363, 0, 364, 365,
	366, 0, 1031, 368, 369, 370, 0, 0, 371, 372,
	519, 0, 373, 0, 520, 374, 367, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 383, 521, 384, 522,
	385, 386, 0, 387, 0, 388, 389, 390, 391, 392,
	393, 394, 523, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 403, 404, 405, 402, 406, 407, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 524, 415, 0,
	416, 420, 421, 422, 423, 424, 425, 426, 0, 432,
	433, 427, 429, 430, 431, 428, 434, 435, 436, 0,
	437, 417, 418, 438, 439, 0, 440, 441, 525, 442,
	443, 0, 444, 445, 446, 447, 419, 448, 452, 453,
	449, 450, 451, 526, 0, 455, 456, 454, 0, 457,
	458, 459, 460, 461, 286, 462, 0, 463, 527, 528,
	529, 530, 0, 470, 0, 464, 465, 531, 466, 532,
	0, 467, 468, 469, 0, 471, 472, 0, 0, 473,
	474, 475, 477, 478, 476, 480, 0, 481, 0, 479,
	482, 483, 484, 533, 534, 535, 0, 486, 485, 536,
	1184, 0, 216, 0, 487, 488, 537, 489, 490, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	223, 224, 225, 226, 0, 227, 0, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 228, 230, 229, 231,
	232, 493, 494, 233, 495, 236, 234, 235, 496, 0,
	237, 238, 239, 240, 241, 242, 243, 0, 0, 244,
	497, 498, 499, 0, 245, 246, 500, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 0, 254, 255,
	256, 253, 0, 257, 0, 258, 259, 260, 0, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 0, 0,
	264, 265, 266, 267, 268, 269, 501, 502, 0, 270,
	271, 0, 273, 272, 0, 274, 0, 0, 275, 276,
	277, 0, 278, 0, 279, 280, 0, 281, 503, 282,
	283, 285, 287, 284, 288, 289, 290, 291, 504, 505,
	0, 219, 0, 0, 0, 0, 0, 292, 293, 294,
	506, 295, 296, 0, 297, 0, 298, 0, 0, 0,
	299, 300, 0, 301, 507, 0, 508, 302, 0, 303,
	304, 305, 306, 1186, 510, 511, 361, 0, 307, 308,
	0, 309, 310, 312, 0, 0, 220, 311, 313, 320,
	0, 0, 314, 512, 316, 315, 317, 318, 319, 513,
	0, 514, 0, 321, 0, 515, 0, 322, 323, 324,
	0, 325, 326, 0, 0, 327, 328, 329, 330, 331,
	0, 333, 332, 0, 334, 516, 0, 335, 336, 0,
	0, 337, 338, 0, 0, 339, 340, 341, 342, 0,
	343, 344, 346, 348, 345, 347, 349, 351, 352, 350,
	0, 353, 354, 357, 358, 356, 0, 355, 0, 221,
	0, 359, 0, 517, 360, 518, 362, 363, 0, 364,
	365, 366, 0, 1031, 368, 369, 370, 0, 0, 371,
	372, 519, 0, 373, 0, 520, 374, 367, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 383, 521, 384,
	522, 385, 386, 0, 387, 0, 388, 389, 390, 391,
	392, 393, 394, 523, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 403, 404, 405, 402, 406, 407, 408,
	409, 0, 410, 0, 411, 412, 413, 414, 524, 415,
	0, 416, 420, 421, 422, 423, 424, 425, 426, 0,
	432, 433, 427, 429, 430, 431, 428, 434, 435, 436,
	0, 437, 417, 418, 438, 439, 0, 440, 441, 525,
	442, 443, 0, 444, 445, 446, 447, 419, 448, 452,
	453, 449, 450, 451, 526, 0, 455, 456, 454, 0,
	457, 458, 459, 460, 461, 286, 462, 0, 463, 527,
	528, 529, 530, 0, 470, 0, 464, 465, 531, 466,
	532, 0, 467, 468, 469, 0, 471, 472, 0, 0,
	473, 474, 475, 477, 478, 476, 480, 0, 481, 0,
	479, 482, 483, 484, 533, 534, 535, 0, 486, 485,
	536, 1090, 0, 216, 0, 487, 488, 537, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 223, 224, 225, 226, 0, 227, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 228, 230, 229,
	231, 232, 493, 494, 233, 495, 236, 234, 235, 496,
	0, 237, 238, 239, 240, 241, 242, 243, 0, 0,
	244, 497, 498, 499, 0, 245, 246, 500, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 0, 254,
	255, 256, 253, 0, 257, 0, 258, 259, 260, 0,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 0,
	0, 264, 265, 266, 267, 268, 269, 501, 502, 0,
	270, 271, 0, 273, 272, 0, 274, 0, 0, 275,
	276, 277, 0, 278, 0, 279, 280, 0, 281, 503,
	282, 283, 285, 287, 284, 288, 289, 290, 291, 504,
	505, 0, 219, 0, 0, 0, 0, 0, 292, 293,
	294, 506, 295, 296, 0, 297, 0, 298, 0, 0,
	0, 299, 300, 0, 301, 507, 0, 508, 302, 0,
	303, 304, 305, 306, 1092, 510, 511, 361, 0, 307,
	308, 0, 309, 310, 312, 0, 0, 220, 311, 313,
	320, 0, 0, 314, 512, 316, 315, 317, 318, 319,
	513, 0, 514, 0, 321, 0, 515, 0, 322, 323,
	324, 0, 325, 326, 0, 0, 327, 328, 329, 330,
	331, 0, 333, 332, 0, 334, 516, 0, 335, 336,
	0, 0, 337, 338, 0, 0, 339, 340, 341, 342,
	0, 343, 344, 346, 348, 345, 347, 349, 351, 352,
	350, 0, 353, 354, 357, 358, 356, 0, 355, 0,
	221, 0, 359, 0, 517, 360, 518, 362, 363, 0,
	364, 365, 366, 0, 1031, 368, 369, 370, 0, 0,
	371, 372, 519, 0, 373, 0, 520, 374, 367, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 383, 521,
	384, 522, 385, 386, 0, 387, 0, 388, 389, 390,
	391, 392, 393, 394, 523, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 403, 404, 405, 402, 406, 407,
	408, 409, 0, 410, 0, 411, 412, 413, 414, 524,
	415, 0, 416, 420, 421, 422, 423, 424, 425, 426,
	0, 432, 433, 427, 429, 430, 431, 428, 434, 435,
	436, 0, 437, 417, 418, 438, 439, 0, 440, 441,
	525, 442, 443, 0, 444, 445, 446, 447, 419, 448,
	452, 453, 449, 450, 451, 526, 0, 455, 456, 454,
	0, 457, 458, 459, 460, 461, 286, 462, 0, 463,
	527, 528, 529, 530, 0, 470, 0, 464, 465, 531,
	466, 532, 0, 467, 468, 469, 0, 471, 472, 0,
	0, 473, 474, 475, 477, 478, 476, 480, 0, 481,
	0, 479, 482, 483, 484, 533, 534, 535, 0, 486,
	485, 536, 566, 0, 216, 0, 487, 488, 537, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 223, 224, 565, 226, 555, 227, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 228, 230,
	229, 231, 232, 493, 494, 233, 495, 236, 234, 235,
	496, 0, 237, 238, 239, 240, 241, 242, 243, 0,
	0, 244, 497, 498, 499, 0, 245, 246, 500, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 0,
	254, 255, 256, 253, 0, 257, 0, 258, 259, 260,
	558, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	0, 0, 264, 265, 266, 267, 268, 269, 501, 502,
	0, 270, 271, 0, 273, 272, 0, 274, 0, 0,
	275, 276, 277, 0, 278, 0, 279, 280, 0, 281,
	503, 282, 283, 285, 287, 284, 288, 289, 290, 291,
	504, 505, 0, 0, 0, 0, 0, 0, 0, 292,
	293, 294, 506, 295, 296, 0, 297, 0, 298, 0,
	0, 0, 299, 300, 559, 301, 507, 0, 508, 302,
	0, 303, 304, 305, 306, 509, 510, 511, 361, 0,
	307, 308, 0, 309, 310, 312, 0, 0, 0, 311,
	313, 320, 0, 0, 314, 512, 316, 315, 317, 318,
	319, 513, 0, 514, 0, 321, 0, 515, 0, 322,
	323, 324, 0, 325, 326, 0, 0, 327, 328, 329,
	330, 331, 0, 333, 332, 0, 334, 516, 0, 335,
	336, 0, 0, 337, 338, 0, 0, 339, 340, 341,
	342, 0, 343, 344, 346, 348, 345, 347, 349, 351,
	352, 350, 0, 353, 354, 357, 358, 356, 0, 355,
	0, 0, 0, 359, 0, 517, 360, 518, 362, 363,
	0, 364, 365, 366, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 519, 0, 373, 0, 520, 374, 367,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 383,
	521, 384, 522, 385, 386, 0, 387, 0, 388, 389,
	390, 391, 392, 393, 394, 523, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 403, 404, 405, 402, 406,
	407, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	524, 415, 0, 416, 420, 421, 422, 423, 424, 425,
	426, 560, 432, 433, 427, 429, 430, 431, 428, 434,
	435, 436, 0, 437, 417, 418, 438, 439, 0, 440,
	441, 525, 442, 443, 0, 444, 445, 446, 447, 419,
	448, 452, 453, 449, 450, 451, 526, 0, 455, 456,
	454, 0, 457, 458, 459, 460, 461, 286, 462, 0,
	463, 527, 528, 529, 530, 0, 470, 0, 464, 465,
	531, 466, 532, 0, 467, 468, 469, 0, 471, 472,
	0, 0, 473, 474, 475, 477, 478, 476, 480, 0,
	481, 0, 479, 482, 483, 484, 533, 534, 535, 0,
	486, 485, 536, 554, 0, 216, 0, 487, 488, 537,
	489, 490, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 223, 224, 225, 226, 555, 227, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 228,
	230, 229, 231, 232, 493, 494, 233, 495, 236, 234,
	235, 496, 0, 237, 238, 239, 240, 241, 242, 243,
	0, 0, 244, 497, 498, 499, 0, 245, 246, 500,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	0, 254, 255, 256, 253, 0, 257, 0, 258, 259,
	260, 558, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 0, 0, 264, 265, 266, 267, 268, 269, 501,
	502, 0, 270, 271, 0, 273, 272, 0, 274, 0,
	0, 275, 276, 277, 0, 278, 0, 279, 280, 0,
	281, 503, 282, 283, 285, 287, 284, 288, 289, 290,
	291, 504, 505, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 506, 295, 296, 0, 297, 0, 298,
	0, 0, 0, 299, 300, 559, 301, 507, 0, 508,
	302, 0, 303, 304, 305, 306, 509, 510, 511, 361,
	0, 307, 308, 0, 309, 310, 312, 0, 0, 0,
	311, 313, 320, 0, 0, 314, 512, 316, 315, 317,
	318, 319, 513, 0, 514, 0, 321, 0, 515, 0,
	322, 323, 324, 0, 325, 326, 0, 0, 327, 328,
	329, 330, 331, 0, 333, 332, 0, 334, 516, 0,
	335, 336, 0, 0, 337, 338, 0, 0, 339, 340,
	341, 342, 0, 343, 344, 346, 348, 345, 347, 349,
	351, 352, 350, 0, 353, 354, 357, 358, 356, 0,
	355, 0, 0, 0, 359, 0, 517, 360, 518, 362,
	363, 0, 364, 365, 366, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 519, 0, 373, 0, 520, 374,
	367, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	383, 521, 384, 522, 385, 386, 0, 387, 0, 388,
	389, 390, 391, 392, 393, 394, 523, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 403, 404, 405, 402,
	406, 407, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 524, 415, 0, 416, 420, 421, 422, 423, 424,
	425, 426, 560, 432, 433, 427, 429, 430, 431, 428,
	434, 435, 436, 0, 437, 417, 418, 438, 439, 0,
	440, 441, 525, 442, 443, 0, 444, 445, 446, 447,
	419, 448, 452, 453, 449, 450, 451, 526, 0, 455,
	456, 454, 0, 457, 458, 459, 460, 461, 286, 462,
	0, 463, 527, 528, 529, 530, 0, 470, 0, 464,
	465, 531, 466, 532, 0, 467, 468, 469, 0, 471,
	472, 0, 0, 473, 474, 475, 477, 478, 476, 480,
	0, 481, 0, 479, 482, 483, 484, 533, 534, 535,
	216, 486, 485, 536, 0, 0, 0, 0, 487, 488,
	537, 489, 490, 491, 0, 0, 0, 222, 223, 224,
	225, 226, 0, 227, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 228, 230, 229, 231, 232, 493,
	494, 233, 495, 236, 234, 235, 496, 0, 237, 238,
	239, 240, 241, 242, 243, 0, 0, 244, 497, 498,
	499, 0, 245, 246, 500, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 0, 254, 255, 256, 253,
	0, 257, 0, 258, 259, 260, 0, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 0, 0, 264, 265,
	266, 267, 268, 269, 501, 502, 0, 270, 271, 0,
	273, 272, 0, 274, 0, 0, 275, 276, 277, 0,
	278, 0, 279, 280, 0, 281, 503, 282, 283, 285,
	287, 284, 288, 289, 290, 291, 504, 505, 0, 219,
	0, 0, 0, 0, 0, 292, 293, 294, 506, 295,
	296, 0, 297, 0, 298, 0, 0, 0, 299, 300,
	0, 301, 507, 0, 508, 302, 0, 303, 304, 305,
	306, 509, 510, 511, 361, 0, 307, 308, 0, 309,
	310, 312, 0, 0, 220, 311, 313, 320, 0, 0,
	314, 512, 316, 315, 317, 318, 319, 513, 0, 514,
	0, 321, 0, 515, 0, 322, 323, 324, 0, 325,
	326, 0, 0, 327, 328, 329, 330, 331, 0, 333,
	332, 0, 334, 516, 0, 335, 336, 0, 0, 337,
	338, 0, 0, 339, 340, 341, 342, 0, 343, 344,
	346, 348, 345, 347, 349, 351, 352, 350, 0, 353,
	354, 357, 358, 356, 2821, 355, 0, 221, 0, 359,
	0, 517, 360, 518, 362, 363, 0, 364, 365, 366,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 519,
	0, 373, 0, 520, 374, 367, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 383, 521, 384, 522, 385,
	386, 0, 387, 0, 388, 389, 390, 391, 392, 393,
	394, 523, 395, 396, 0, 397, 398, 399, 400, 401,
	0, 403, 404, 405, 402, 406, 407, 408, 409, 0,
	410, 0, 411, 412, 413, 414, 524, 415, 0, 416,
	420, 421, 422, 423, 424, 425, 426, 0, 432, 433,
	427, 429, 430, 431, 428, 434, 435, 436, 0, 437,
	417, 418, 438, 439, 0, 440, 441, 525, 442, 443,
	0, 444, 445, 446, 447, 419, 448, 452, 453, 449,
	450, 451, 526, 0, 455, 456, 454, 0, 457, 458,
	459, 460, 461, 286, 462, 0, 463, 527, 528, 529,
	530, 0, 470, 0, 464, 465, 531, 466, 532, 0,
	467, 468, 469, 0, 471, 472, 0, 0, 473, 474,
	475, 477, 478, 476, 480, 0, 481, 0, 479, 482,
	483, 484, 533, 534, 535, 216, 486, 485, 536, 0,
	0, 0, 0, 487, 488, 537, 489, 490, 491, 0,
	0, 0, 222, 223, 224, 225, 226, 0, 227, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 228,
	230, 229, 231, 232, 493, 494, 233, 495, 236, 234,
	235, 496, 0, 237, 238, 239, 240, 241, 242, 243,
	0, 0, 244, 497, 498, 499, 0, 245, 246, 500,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	0, 254, 255, 256, 253, 0, 257, 0, 258, 259,
	260, 0, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 0, 0, 264, 265, 266, 267, 268, 269, 501,
	502, 0, 270, 271, 0, 273, 272, 0, 274, 0,
	0, 275, 276, 277, 0, 278, 0, 279, 280, 0,
	281, 503, 282, 283, 285, 287, 284, 288, 289, 290,
	291, 504, 505, 0, 219, 0, 0, 0, 0, 0,
	292, 293, 294, 506, 295, 296, 0, 297, 0, 298,
	0, 0, 0, 299, 300, 0, 301, 507, 0, 508,
	302, 0, 303, 304, 305, 306, 509, 510, 511, 361,
	0, 307, 308, 0, 309, 310, 312, 0, 0, 220,
	311, 313, 320, 0, 0, 314, 512, 316, 315, 317,
	318, 319, 513, 0, 514, 0, 321, 0, 515, 0,
	322, 323, 324, 0, 325, 326, 0, 0, 327, 328,
	329, 330, 331, 0, 333, 332, 0, 334, 516, 0,
	335, 336, 0, 0, 337, 338, 0, 0, 339, 340,
	341, 342, 0, 343, 344, 346, 348, 345, 347, 349,
	351, 352, 350, 0, 353, 354, 357, 358, 356, 0,
	355, 0, 221, 0, 359, 0, 517, 360, 518, 362,
	363, 0, 364, 365, 366, 0, 1031, 368, 369, 370,
	0, 0, 371, 372, 519, 0, 373, 0, 520, 374,
	367, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	383, 521, 384, 522, 385, 386, 0, 387, 0, 388,
	389, 390, 391, 392, 393, 394, 523, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 403, 404, 405, 402,
	406, 407, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 524, 415, 0, 416, 420, 421, 422, 423, 424,
	425, 426, 0, 432, 433, 427, 429, 430, 431, 428,
	434, 435, 436, 0, 437, 417, 418, 438, 439, 0,
	440, 441, 525, 442, 443, 0, 444, 445, 446, 447,
	419, 448, 452, 453, 449, 450, 451, 526, 0, 455,
	456, 454, 0, 457, 458, 459, 460, 461, 286, 462,
	0, 463, 527, 528, 529, 530, 0, 470, 0, 464,
	465, 531, 466, 532, 0, 467, 468, 469, 0, 471,
	472, 0, 0, 473, 474, 475, 477, 478, 476, 480,
	0, 481, 0, 479, 482, 483, 484, 533, 534, 535,
	0, 486, 485, 536, 2429, 0, 216, 0, 487, 488,
	537, 489, 490, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 223, 224, 225, 226, 0, 227,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	228, 230, 229, 231, 232, 493, 494, 233, 495, 236,
	234, 235, 496, 0, 237, 238, 239, 240, 241, 242,
	243, 0, 0, 244, 497, 498, 499, 0, 245, 246,
	500, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 0, 254, 255, 256, 253, 0, 257, 0, 258,
	259, 260, 0, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 0, 0, 264, 265, 266, 267, 268, 269,
	501, 502, 0, 270, 271, 0, 273, 272, 0, 274,
	0, 0, 275, 276, 277, 0, 278, 0, 279, 280,
	0, 281, 503, 282, 283, 285, 287, 284, 288, 289,
	290, 291, 504, 505, 0, 219, 0, 0, 0, 0,
	0, 292, 293, 294, 506, 295, 296, 0, 297, 0,
	298, 0, 0, 0, 299, 300, 0, 301, 507, 0,
	508, 302, 0, 303, 304, 305, 306, 2428, 510, 511,
	361, 0, 307, 308, 0, 309, 310, 312, 0, 0,
	220, 311, 313, 320, 0, 0, 314, 512, 316, 315,
	317, 318, 319, 513, 0, 514, 0, 321, 0, 515,
	0, 322, 323, 324, 0, 325, 326, 0, 0, 327,
	328, 329, 330, 331, 0, 333, 332, 0, 334, 516,
	0, 335, 336, 0, 0, 337, 338, 0, 0, 339,
	340, 341, 342, 0, 343, 344, 346, 348, 345, 347,
	349, 351, 352, 350, 0, 353, 354, 357, 358, 356,
	0, 355, 0, 221, 0, 359, 0, 517, 360, 518,
	362, 363, 0, 364, 365, 366, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 519, 0, 373, 0, 520,
	374, 367, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 383, 521, 384, 522, 385, 386, 0, 387, 0,
	388, 389, 390, 391, 392, 393, 394, 523, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 403, 404, 405,
	402, 406, 407, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 524, 415, 0, 416, 420, 421, 422, 423,
	424, 425, 426, 0, 432, 433, 427, 429, 430, 431,
	428, 434, 435, 436, 0, 437, 417, 418, 438, 439,
	0, 440, 441, 525, 442, 443, 0, 444, 445, 446,
	447, 419, 448, 452, 453, 449, 450, 451, 526, 0,
	455, 456, 454, 0, 457, 458, 459, 460, 461, 286,
	462, 0, 463, 527, 528, 529, 530, 0, 470, 0,
	464, 465, 531, 466, 532, 0, 467, 468, 469, 0,
	471, 472, 0, 0, 473, 474, 475, 477, 478, 476,
	480, 0, 481, 0, 479, 482, 483, 484, 533, 534,
	535, 0, 486, 485, 536, 1936, 0, 216, 0, 487,
	488, 537, 489, 490, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 223, 224, 225, 226, 0,
	227, 0, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 228, 230, 229, 231, 232, 493, 494, 233, 495,
	236, 234, 235, 496, 0, 237, 238, 239, 240, 241,
	242, 243, 0, 0, 244, 497, 498, 499, 0, 245,
	246, 500, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 0, 254, 255, 256, 253, 0, 257, 0,
	258, 259, 260, 0, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 0, 0, 264, 265, 266, 267, 268,
	269, 501, 502, 0, 270, 271, 0, 273, 272, 0,
	274, 0, 0, 275, 276, 277, 0, 278, 0, 279,
	280, 0, 281, 503, 282, 283, 285, 287, 284, 288,
	289, 290, 291, 504, 505, 0, 219, 0, 0, 0,
	0, 0, 292, 293, 294, 506, 295, 296, 0, 297,
	0, 298, 0, 0, 0, 299, 300, 0, 301, 507,
	0, 508, 302, 0, 303, 304, 305, 306, 509, 510,
	511, 361, 0, 307, 308, 0, 309, 310, 312, 0,
	0, 220, 311, 313, 320, 0, 0, 314, 512, 316,
	315, 317, 318, 319, 513, 0, 514, 0, 321, 0,
	515, 0, 322, 323, 324, 0, 325, 326, 0, 0,
	327, 328, 329, 330, 331, 0, 333, 332, 0, 334,
	516, 0, 335, 336, 0, 0, 337, 338, 0, 0,
	339, 340, 341, 342, 0, 343, 344, 346, 348, 345,
	347, 349, 351, 352, 350, 0, 353, 354, 357, 358,
	356, 0, 355, 0, 221, 0, 359, 0, 517, 360,
	518, 362, 363, 0, 364, 365, 366, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 519, 0, 373, 0,
	520, 374, 367, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 383, 521, 384, 522, 385, 386, 0, 387,
	0, 388, 389, 390, 391, 392, 393, 394, 523, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 403, 404,
	405, 402, 406, 407, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 524, 415, 0, 416, 420, 421, 422,
	423, 424, 425, 426, 0, 432, 433, 427, 429, 430,
	431, 428, 434, 435, 436, 0, 437, 417, 418, 438,
	439, 0, 440, 441, 525, 442, 443, 0, 444, 445,
	446, 447, 419, 448, 452, 453, 449, 450, 451, 526,
	0, 455, 456, 454, 0, 457, 458, 459, 460, 461,
	286, 462, 0, 463, 527, 528, 529, 530, 0, 470,
	0, 464, 465, 531, 466, 532, 0, 467, 468, 469,
	0, 471, 472, 0, 0, 473, 474, 475, 477, 478,
	476, 480, 0, 481, 0, 479, 482, 483, 484, 533,
	534, 535, 216, 486, 485, 536, 0, 0, 0, 0,
	487, 488, 537, 489, 490, 491, 0, 0, 0, 222,
	223, 224, 225, 226, 0, 227, 0, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 228, 230, 229, 231,
	232, 493, 494, 233, 495, 236, 234, 235, 496, 0,
	237, 238, 239, 240, 241, 242, 243, 0, 0, 244,
	497, 498, 499, 0, 245, 246, 500, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 0, 254, 255,
	256, 253, 0, 257, 0, 258, 259, 260, 0, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 0, 0,
	264, 265, 266, 267, 268, 269, 501, 502, 0, 270,
	271, 0, 273, 272, 0, 274, 0, 0, 275, 276,
	277, 0, 278, 0, 279, 280, 0, 281, 503, 282,
	283, 285, 287, 284, 288, 289, 290, 291, 504, 505,
	0, 219, 0, 0, 0, 0, 0, 292, 293, 294,
	506, 295, 296, 0, 297, 0, 298, 0, 0, 0,
	299, 300, 0, 301, 507, 0, 508, 302, 0, 303,
	304, 305, 306, 509, 510, 511, 361, 0, 307, 308,
	0, 309, 310, 312, 0, 0, 220, 311, 313, 320,
	0, 0, 314, 512, 316, 315, 317, 318, 319, 513,
	0, 514, 0, 321, 0, 515, 0, 322, 323, 324,
	0, 325, 326, 0, 0, 327, 328, 329, 330, 331,
	0, 333, 332, 0, 334, 516, 0, 335, 336, 0,
	0, 337, 338, 0, 0, 339, 340, 341, 342, 0,
	343, 344, 346, 348, 345, 347, 349, 351, 352, 350,
	0, 353, 354, 357, 358, 356, 0, 355, 0, 221,
	0, 359, 0, 517, 360, 518, 362, 363, 0, 364,
	365, 366, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 519, 0, 373, 0, 520, 374, 367, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 383, 521, 384,
	522, 385, 386, 0, 387, 0, 388, 389, 390, 391,
	392, 393, 394, 523, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 403, 404, 405, 402, 406, 407, 408,
	409, 0, 410, 0, 411, 412, 413, 414, 524, 415,
	0, 416, 420, 421, 422, 423, 424, 425, 426, 0,
	432, 433, 427, 429, 430, 431, 428, 434, 435, 436,
	0, 437, 417, 418, 438, 439, 0, 440, 441, 525,
	442, 443, 0, 444, 445, 446, 447, 419, 448, 452,
	453, 449, 450, 451, 526, 0, 455, 456, 454, 1867,
	457, 458, 459, 460, 461, 286, 462, 0, 463, 527,
	528, 529, 530, 0, 470, 0, 464, 465, 531, 466,
	532, 0, 467, 468, 469, 0, 471, 472, 0, 0,
	473, 474, 475, 477, 478, 476, 480, 0, 481, 0,
	479, 482, 483, 484, 533, 534, 535, 0, 486, 485,
	536, 1872, 0, 216, 0, 487, 488, 537, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 223, 224, 225, 226, 0, 227, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 228, 230, 229,
	231, 232, 493, 494, 233, 495, 236, 234, 235, 496,
	0, 237, 238, 239, 240, 241, 242, 243, 0, 0,
	244, 497, 498, 499, 0, 245, 246, 500, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 0, 254,
	255, 256, 253, 0, 257, 0, 258, 259, 260, 0,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 0,
	0, 264, 265, 266, 267, 268, 269, 501, 502, 0,
	270, 271, 0, 273, 272, 0, 274, 0, 0, 275,
	276, 277, 0, 278, 0, 279, 280, 0, 281, 503,
	282, 283, 285, 287, 284, 288, 289, 290, 291, 504,
	505, 0, 219, 0, 0, 0, 0, 0, 292, 293,
	294, 506, 295, 296, 0, 297, 0, 298, 0, 0,
	0, 299, 300, 0, 301, 507, 0, 508, 302, 0,
	303, 304, 305, 306, 1871, 510, 511, 361, 0, 307,
	308, 0, 309, 310, 312, 0, 0, 220, 311, 313,
	320, 0, 0, 314, 512, 316, 315, 317, 318, 319,
	513, 0, 514, 0, 321, 0, 515, 0, 322, 323,
	324, 0, 325, 326, 0, 0, 327, 328, 329, 330,
	331, 0, 333, 332, 0, 334, 516, 0, 335, 336,
	0, 0, 337, 338, 0, 0, 339, 340, 341, 342,
	0, 343, 344, 346, 348, 345, 347, 349, 351, 352,
	350, 0, 353, 354, 357, 358, 356, 0, 355, 0,
	221, 0, 359, 0, 517, 360, 518, 362, 363, 0,
	364, 365, 366, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 519, 0, 373, 0, 520, 374, 367, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 383, 521,
	384, 522, 385, 386, 0, 387, 0, 388, 389, 390,
	391, 392, 393, 394, 523, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 403, 404, 405, 402, 406, 407,
	408, 409, 0, 410, 0, 411, 412, 413, 414, 524,
	415, 0, 416, 420, 421, 422, 423, 424, 425, 426,
	0, 432, 433, 427, 429, 430, 431, 428, 434, 435,
	436, 0, 437, 417, 418, 438, 439, 0, 440, 441,
	525, 442, 443, 0, 444, 445, 446, 447, 419, 448,
	452, 453, 449, 450, 451, 526, 0, 455, 456, 454,
	0, 457, 458, 459, 460, 461, 286, 462, 0, 463,
	527, 528, 529, 530, 0, 470, 0, 464, 465, 531,
	466, 532, 0, 467, 468, 469, 0, 471, 472, 0,
	0, 473, 474, 475, 477, 478, 476, 480, 0, 481,
	0, 479, 482, 483, 484, 533, 534, 535, 0, 486,
	485, 536, 1860, 0, 216, 0, 487, 488, 537, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 223, 224, 225, 226, 0, 227, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 228, 230,
	229, 231, 232, 493, 494, 233, 495, 236, 234, 235,
	496, 0, 237, 238, 239, 240, 241, 242, 243, 0,
	0, 244, 497, 498, 499, 0, 245, 246, 500, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 0,
	254, 255, 256, 253, 0, 257, 0, 258, 259, 260,
	0, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	0, 0, 264, 265, 266, 267, 268, 269, 501, 502,
	0, 270, 271, 0, 273, 272, 0, 274, 0, 0,
	275, 276, 277, 0, 278, 0, 279, 280, 0, 281,
	503, 282, 283, 285, 287, 284, 288, 289, 290, 291,
	504, 505, 0, 219, 0, 0, 0, 0, 0, 292,
	293, 294, 506, 295, 296, 0, 297, 0, 298, 0,
	0, 0, 299, 300, 0, 301, 507, 0, 508, 302,
	0, 303, 304, 305, 306, 1862, 510, 511, 361, 0,
	307, 308, 0, 309, 310, 312, 0, 0, 220, 311,
	313, 320, 0, 0, 314, 512, 316, 315, 317, 318,
	319, 513, 0, 514, 0, 321, 0, 515, 0, 322,
	323, 324, 0, 325, 326, 0, 0, 327, 328, 329,
	330, 331, 0, 333, 332, 0, 334, 516, 0, 335,
	336, 0, 0, 337, 338, 0, 0, 339, 340, 341,
	342, 0, 343, 344, 346, 348, 345, 347, 349, 351,
	352, 350, 0, 353, 354, 357, 358, 356, 0, 355,
	0, 221, 0, 359, 0, 517, 360, 518, 362, 363,
	0, 364, 365, 366, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 519, 0, 373, 0, 520, 374, 367,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 383,
	521, 384, 522, 385, 386, 0, 387, 0, 388, 389,
	390, 391, 392, 393, 394, 523, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 403, 404, 405, 402, 406,
	407, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	524, 415, 0, 416, 420, 421, 422, 423, 424, 425,
	426, 0, 432, 433, 427, 429, 430, 431, 428, 434,
	435, 436, 0, 437, 417, 418, 438, 439, 0, 440,
	441, 525, 442, 443, 0, 444, 445, 446, 447, 419,
	448, 452, 453, 449, 450, 451, 526, 0, 455, 456,
	454, 0, 457, 458, 459, 460, 461, 286, 462, 0,
	463, 527, 528, 529, 530, 0, 470, 0, 464, 465,
	531, 466, 532, 0, 467, 468, 469, 0, 471, 472,
	0, 0, 473, 474, 475, 477, 478, 476, 480, 0,
	481, 0, 479, 482, 483, 484, 533, 534, 535, 0,
	486, 485, 536, 1331, 0, 216, 0, 487, 488, 537,
	489, 490, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 223, 224, 225, 226, 0, 227, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 228,
	230, 229, 231, 232, 493, 494, 233, 495, 236, 234,
	235, 496, 0, 237, 238, 239, 240, 241, 242, 243,
	0, 0, 244, 497, 498, 499, 0, 245, 246, 500,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	0, 254, 255, 256, 253, 0, 257, 0, 258, 259,
	260, 0, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 0, 0, 264, 265, 266, 267, 268, 269, 501,
	502, 0, 270, 271, 0, 273, 272, 0, 274, 0,
	0, 275, 276, 277, 0, 278, 0, 279, 280, 0,
	281, 503, 282, 283, 285, 287, 284, 288, 289, 290,
	291, 504, 505, 0, 219, 0, 0, 0, 0, 0,
	292, 293, 294, 506, 295, 296, 0, 297, 0, 298,
	0, 0, 0, 299, 300, 0, 301, 507, 0, 508,
	302, 0, 303, 304, 305, 306, 1330, 510, 511, 361,
	0, 307, 308, 0, 309, 310, 312, 0, 0, 220,
	311, 313, 320, 0, 0, 314, 512, 316, 315, 317,
	318, 319, 513, 0, 514, 0, 321, 0, 515, 0,
	322, 323, 324, 0, 325, 326, 0, 0, 327, 328,
	329, 330, 331, 0, 333, 332, 0, 334, 516, 0,
	335, 336, 0, 0, 337, 338, 0, 0, 339, 340,
	341, 342, 0, 343, 344, 346, 348, 345, 347, 349,
	351, 352, 350, 0, 353, 354, 357, 358, 356, 0,
	355, 0, 221, 0, 359, 0, 517, 360, 518, 362,
	363, 0, 364, 365, 366, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 519, 0, 373, 0, 520, 374,
	367, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	383, 521, 384, 522, 385, 386, 0, 387, 0, 388,
	389, 390, 391, 392, 393, 394, 523, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 403, 404, 405, 402,
	406, 407, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 524, 415, 0, 416, 420, 421, 422, 423, 424,
	425, 426, 0, 432, 433, 427, 429, 430, 431, 428,
	434, 435, 436, 0, 437, 417, 418, 438, 439, 0,
	440, 441, 525, 442, 443, 0, 444, 445, 446, 447,
	419, 448, 452, 453, 449, 450, 451, 526, 0, 455,
	456, 454, 0, 457, 458, 459, 460, 461, 286, 462,
	0, 463, 527, 528, 529, 530, 0, 470, 0, 464,
	465, 531, 466, 532, 0, 467, 468, 469, 0, 471,
	472, 0, 0, 473, 474, 475, 477, 478, 476, 480,
	0, 481, 0, 479, 482, 483, 484, 533, 534, 535,
	0, 486, 485, 536, 1328, 0, 216, 0, 487, 488,
	537, 489, 490, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 223, 224, 225, 226, 0, 227,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	228, 230, 229, 231, 232, 493, 494, 233, 495, 236,
	234, 235, 496, 0, 237, 238, 239, 240, 241, 242,
	243, 0, 0, 244, 497, 498, 499, 0, 245, 246,
	500, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 0, 254, 255, 256, 253, 0, 257, 0, 258,
	259, 260, 0, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 0, 0, 264, 265, 266, 267, 268, 269,
	501, 502, 0, 270, 271, 0, 273, 272, 0, 274,
	0, 0, 275, 276, 277, 0, 278, 0, 279, 280,
	0, 281, 503, 282, 283, 285, 287, 284, 288, 289,
	290, 291, 504, 505, 0, 219, 0, 0, 0, 0,
	0, 292, 293, 294, 506, 295, 296, 0, 297, 0,
	298, 0, 0, 0, 299, 300, 0, 301, 507, 0,
	508, 302, 0, 303, 304, 305, 306, 1327, 510, 511,
	361, 0, 307, 308, 0, 309, 310, 312, 0, 0,
	220, 311, 313, 320, 0, 0, 314, 512, 316, 315,
	317, 318, 319, 513, 0, 514, 0, 321, 0, 515,
	0, 322, 323, 324, 0, 325, 326, 0, 0, 327,
	328, 329, 330, 331, 0, 333, 332, 0, 334, 516,
	0, 335, 336, 0, 0, 337, 338, 0, 0, 339,
	340, 341, 342, 0, 343, 344, 346, 348, 345, 347,
	349, 351, 352, 350, 0, 353, 354, 357, 358, 356,
	0, 355, 0, 221, 0, 359, 0, 517, 360, 518,
	362, 363, 0, 364, 365, 366, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 519, 0, 373, 0, 520,
	374, 367, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 383, 521, 384, 522, 385, 386, 0, 387, 0,
	388, 389, 390, 391, 392, 393, 394, 523, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 403, 404, 405,
	402, 406, 407, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 524, 415, 0, 416, 420, 421, 422, 423,
	424, 425, 426, 0, 432, 433, 427, 429, 430, 431,
	428, 434, 435, 436, 0, 437, 417, 418, 438, 439,
	0, 440, 441, 525, 442, 443, 0, 444, 445, 446,
	447, 419, 448, 452, 453, 449, 450, 451, 526, 0,
	455, 456, 454, 0, 457, 458, 459, 460, 461, 286,
	462, 0, 463, 527, 528, 529, 530, 0, 470, 0,
	464, 465, 531, 466, 532, 0, 467, 468, 469, 0,
	471, 472, 0, 0, 473, 474, 475, 477, 478, 476,
	480, 0, 481, 0, 479, 482, 483, 484, 533, 534,
	535, 0, 486, 485, 536, 1324, 0, 216, 0, 487,
	488, 537, 489, 490, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 223, 224, 225, 226, 0,
	227, 0, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 228, 230, 229, 231, 232, 493, 494, 233, 495,
	236, 234, 235, 496, 0, 237, 238, 239, 240, 241,
	242, 243, 0, 0, 244, 497, 498, 499, 0, 245,
	246, 500, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 0, 254, 255, 256, 253, 0, 257, 0,
	258, 259, 260, 0, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 0, 0, 264, 265, 266, 267, 268,
	269, 501, 502, 0, 270, 271, 0, 273, 272, 0,
	274, 0, 0, 275, 276, 277, 0, 278, 0, 279,
	280, 0, 281, 503, 282, 283, 285, 287, 284, 288,
	289, 290, 291, 504, 505, 0, 219, 0, 0, 0,
	0, 0, 292, 293, 294, 506, 295, 296, 0, 297,
	0, 298, 0, 0, 0, 299, 300, 0, 301, 507,
	0, 508, 302, 0, 303, 304, 305, 306, 1323, 510,
	511, 361, 0, 307, 308, 0, 309, 310, 312, 0,
	0, 220, 311, 313, 320, 0, 0, 314, 512, 316,
	315, 317, 318, 319, 513, 0, 514, 0, 321, 0,
	515, 0, 322, 323, 324, 0, 325, 326, 0, 0,
	327, 328, 329, 330, 331, 0, 333, 332, 0, 334,
	516, 0, 335, 336, 0, 0, 337, 338, 0, 0,
	339, 340, 341, 342, 0, 343, 344, 346, 348, 345,
	347, 349, 351, 352, 350, 0, 353, 354, 357, 358,
	356, 0, 355, 0, 221, 0, 359, 0, 517, 360,
	518, 362, 363, 0, 364, 365, 366, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 519, 0, 373, 0,
	520, 374, 367, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 383, 521, 384, 522, 385, 386, 0, 387,
	0, 388, 389, 390, 391, 392, 393, 394, 523, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 403, 404,
	405, 402, 406, 407, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 524, 415, 0, 416, 420, 421, 422,
	423, 424, 425, 426, 0, 432, 433, 427, 429, 430,
	431, 428, 434, 435, 436, 0, 437, 417, 418, 438,
	439, 0, 440, 441, 525, 442, 443, 0, 444, 445,
	446, 447, 419, 448, 452, 453, 449, 450, 451, 526,
	0, 455, 456, 454, 0, 457, 458, 459, 460, 461,
	286, 462, 0, 463, 527, 528, 529, 530, 0, 470,
	0, 464, 465, 531, 466, 532, 0, 467, 468, 469,
	0, 471, 472, 0, 0, 473, 474, 475, 477, 478,
	476, 480, 0, 481, 0, 479, 482, 483, 484, 533,
	534, 535, 0, 486, 485, 536, 1198, 0, 216, 0,
	487, 488, 537, 489, 490, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 223, 224, 225, 226,
	0, 227, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 228, 230, 229, 231, 232, 493, 494, 233,
	495, 236, 234, 235, 496, 0, 237, 238, 239, 240,
	241, 242, 243, 0, 0, 244, 497, 498, 499, 0,
	245, 246, 500, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 0, 254, 255, 256, 253, 0, 257,
	0, 258, 259, 260, 0, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 0, 0, 264, 265, 266, 267,
	268, 269, 501, 502, 0, 270, 271, 0, 273, 272,
	0, 274, 0, 0, 275, 276, 277, 0, 278, 0,
	279, 280, 0, 281, 503, 282, 283, 285, 287, 284,
	288, 289, 290, 291, 504, 505, 0, 219, 0, 0,
	0, 0, 0, 292, 293, 294, 506, 295, 296, 0,
	297, 0, 298, 0, 0, 0, 299, 300, 0, 301,
	507, 0, 508, 302, 0, 303, 304, 305, 306, 1200,
	510, 511, 361, 0, 307, 308, 0, 309, 310, 312,
	0, 0, 220, 311, 313, 320, 0, 0, 314, 512,
	316, 315, 317, 318, 319, 513, 0, 514, 0, 321,
	0, 515, 0, 322, 323, 324, 0, 325, 326, 0,
	0, 327, 328, 329, 330, 331, 0, 333, 332, 0,
	334, 516, 0, 335, 336, 0, 0, 337, 338, 0,
	0, 339, 340, 341, 342, 0, 343, 344, 346, 348,
	345, 347, 349, 351, 352, 350, 0, 353, 354, 357,
	358, 356, 0, 355, 0, 221, 0, 359, 0, 517,
	360, 518, 362, 363, 0, 364, 365, 366, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 519, 0, 373,
	0, 520, 374, 367, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 383, 521, 384, 522, 385, 386, 0,
	387, 0, 388, 389, 390, 391, 392, 393, 394, 523,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 403,
	404, 405, 402, 406, 407, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 524, 415, 0, 416, 420, 421,
	422, 423, 424, 425, 426, 0, 432, 433, 427, 429,
	430, 431, 428, 434, 435, 436, 0, 437, 417, 418,
	438, 439, 0, 440, 441, 525, 442, 443, 0, 444,
	445, 446, 447, 419, 448, 452, 453, 449, 450, 451,
	526, 0, 455, 456, 454, 0, 457, 458, 459, 460,
	461, 286, 462, 0, 463, 527, 528, 529, 530, 0,
	470, 0, 464, 465, 531, 466, 532, 0, 467, 468,
	469, 0, 471, 472, 0, 0, 473, 474, 475, 477,
	478, 476, 480, 0, 481, 0, 479, 482, 483, 484,
	533, 534, 535, 216, 486, 485, 536, 0, 0, 0,
	0, 487, 488, 537, 489, 490, 491, 0, 0, 0,
	222, 223, 224, 225, 226, 0, 227, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 228, 230, 229,
	231, 232, 493, 494, 233, 495, 236, 234, 235, 496,
	0, 237, 238, 239, 240, 241, 242, 243, 0, 0,
	244, 497, 498, 499, 0, 245, 246, 500, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 0, 254,
	255, 256, 253, 0, 257, 0, 258, 259, 260, 0,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 0,
	0, 264, 265, 266, 267, 268, 269, 501, 502, 0,
	270, 271, 0, 273, 272, 0, 274, 0, 0, 275,
	276, 277, 0, 278, 0, 279, 280, 0, 281, 503,
	282, 283, 285, 287, 284, 288, 289, 290, 291, 504,
	505, 0, 219, 0, 0, 0, 0, 0, 292, 293,
	294, 506, 295, 296, 0, 297, 0, 298, 0, 0,
	0, 299, 300, 0, 301, 507, 0, 508, 302, 0,
	303, 304, 305, 306, 509, 510, 511, 361, 0, 307,
	308, 0, 309, 310, 312, 0, 0, 220, 311, 313,
	320, 0, 0, 314, 512, 316, 315, 317, 318, 319,
	513, 0, 514, 0, 321, 0, 515, 0, 322, 323,
	324, 0, 325, 326, 0, 0, 327, 328, 329, 330,
	331, 0, 333, 332, 0, 334, 516, 0, 335, 336,
	0, 0, 337, 338, 0, 0, 339, 340, 341, 342,
	0, 343, 344, 346, 348, 345, 347, 349, 351, 352,
	350, 0, 353, 354, 357, 358, 356, 0, 355, 0,
	221, 0, 359, 0, 517, 360, 518, 362, 363, 0,
	364, 365, 366, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 519, 0, 373, 0, 520, 374, 367, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 383, 521,
	384, 522, 385, 386, 0, 387, 0, 388, 389, 390,
	391, 392, 393, 394, 523, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 403, 404, 405, 402, 406, 407,
	408, 409, 0, 410, 0, 411, 412, 413, 414, 524,
	415, 0, 416, 420, 421, 422, 423, 424, 425, 426,
	0, 432, 433, 427, 429, 430, 431, 428, 434, 435,
	436, 0, 437, 417, 418, 438, 439, 0, 440, 441,
	525, 442, 443, 0, 444, 445, 446, 447, 419, 448,
	452, 453, 449, 450, 451, 526, 0, 455, 456, 454,
	0, 457, 458, 459, 460, 461, 286, 462, 0, 463,
	527, 528, 529, 530, 0, 470, 0, 464, 465, 531,
	466, 532, 0, 467, 468, 469, 0, 471, 472, 0,
	0, 473, 474, 475, 477, 478, 476, 480, 0, 481,
	0, 479, 482, 483, 484, 533, 534, 535, 216, 486,
	485, 536, 0, 0, 0, 0, 487, 488, 537, 489,
	490, 491, 0, 0, 0, 222, 223, 224, 225, 226,
	0, 227, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 228, 230, 229, 231, 232, 493, 494, 233,
	495, 236, 234, 235, 496, 0, 237, 238, 239, 240,
	241, 242, 243, 0, 0, 244, 497, 498, 499, 0,
	245, 246, 500, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 0, 254, 255, 256, 253, 0, 257,
	0, 258, 259, 260, 558, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 0, 0, 264, 265, 266, 267,
	268, 269, 501, 502, 0, 270, 271, 0, 273, 272,
	0, 274, 0, 0, 275, 276, 277, 0, 278, 0,
	279, 280, 0, 281, 503, 282, 283, 285, 287, 284,
	288, 289, 290, 291, 504, 505, 0, 0, 0, 0,
	0, 0, 0, 292, 293, 294, 506, 295, 296, 0,
	297, 0, 298, 0, 0, 0, 299, 300, 559, 301,
	507, 0, 508, 302, 0, 303, 304, 305, 306, 509,
	510, 511, 361, 0, 307, 308, 0, 309, 310, 312,
	0, 0, 0, 311, 313, 320, 0, 0, 314, 512,
	316, 315, 317, 318, 319, 513, 0, 514, 0, 321,
	0, 515, 0, 322, 323, 324, 0, 325, 326, 0,
	0, 327, 328, 329, 330, 331, 0, 333, 332, 0,
	334, 516, 0, 335, 336, 0, 0, 337, 338, 0,
	0, 339, 340, 341, 342, 0, 343, 344, 346, 348,
	345, 347, 349, 351, 352, 350, 0, 353, 354, 357,
	358, 356, 0, 355, 0, 0, 0, 359, 0, 517,
	360, 518, 362, 363, 0, 364, 365, 366, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 519, 0, 373,
	0, 520, 374, 367, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 383, 521, 384, 522, 385, 386, 0,
	387, 0, 388, 389, 390, 391, 392, 393, 394, 523,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 403,
	404, 405, 402, 406, 407, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 524, 415, 0, 416, 420, 421,
	422, 423, 424, 425, 426, 560, 432, 433, 427, 429,
	430, 431, 428, 434, 435, 436, 0, 437, 417, 418,
	438, 439, 0, 440, 441, 525, 442, 443, 0, 444,
	445, 446, 447, 419, 448, 452, 453, 449, 450, 451,
	526, 0, 455, 456, 454, 0, 457, 458, 459, 460,
	461, 286, 462, 0, 463, 527, 528, 529, 530, 0,
	470, 0, 464, 465, 531, 466, 532, 0, 467, 468,
	469, 0, 471, 472, 0, 0, 473, 474, 475, 477,
	478, 476, 480, 0, 481, 0, 479, 482, 483, 484,
	533, 534, 535, 216, 486, 485, 536, 0, 0, 0,
	0, 487, 488, 537, 489, 490, 491, 0, 0, 0,
	222, 223, 224, 225, 226, 0, 227, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 228, 230, 229,
	231, 232, 493, 494, 233, 495, 236, 234, 235, 496,
	0, 237, 238, 239, 240, 241, 242, 243, 0, 0,
	244, 497, 498, 499, 0, 245, 246, 500, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 0, 254,
	255, 256, 253, 0, 257, 0, 258, 259, 260, 0,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 0,
	0, 264, 265, 1967, 267, 268, 269, 501, 502, 0,
	270, 271, 0, 273, 272, 0, 274, 0, 0, 275,
	276, 277, 0, 278, 0, 279, 280, 0, 281, 503,
	282, 283, 285, 287, 284, 288, 289, 290, 291, 504,
	505, 0, 219, 0, 0, 0, 0, 0, 292, 293,
	294, 506, 295, 296, 0, 297, 0, 298, 0, 0,
	0, 299, 300, 0, 301, 507, 0, 508, 302, 0,
	303, 304, 305, 306, 509, 510, 511, 361, 0, 307,
	308, 0, 309, 310, 312, 0, 0, 220, 311, 313,
	320, 0, 0, 314, 512, 316, 315, 317, 318, 319,
	513, 0, 514, 0, 321, 0, 515, 0, 322, 323,
	324, 0, 325, 326, 0, 0, 327, 328, 329, 330,
	331, 0, 333, 332, 0, 334, 516, 0, 335, 336,
	0, 0, 337, 338, 0, 0, 339, 340, 341, 342,
	0, 343, 344, 346, 348, 345, 347, 349, 351, 352,
	350, 0, 353, 354, 357, 358, 356, 0, 355, 0,
	221, 0, 359, 0, 517, 360, 518, 362, 363, 0,
	364, 365, 366, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 519, 0, 373, 0, 520, 374, 367, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 383, 521,
	384, 522, 385, 386, 0, 387, 0, 388, 389, 390,
	391, 392, 393, 394, 523, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 403, 404, 405, 402, 406, 407,
	408, 409, 0, 410, 0, 411, 412, 413, 414, 524,
	415, 0, 416, 420, 421, 422, 423, 424, 425, 426,
	0, 432, 433, 427, 429, 430, 431, 428, 434, 435,
	436, 0, 437, 417, 418, 438, 439, 0, 440, 441,
	525, 442, 443, 0, 444, 445, 446, 447, 419, 448,
	452, 453, 449, 450, 451, 526, 0, 455, 456, 454,
	0, 457, 458, 459, 460, 461, 286, 462, 0, 463,
	527, 528, 529, 530, 0, 470, 0, 464, 465, 531,
	466, 532, 0, 467, 468, 469, 0, 471, 472, 0,
	0, 473, 474, 475, 477, 478, 476, 480, 0, 481,
	0, 479, 482, 483, 484, 533, 534, 535, 216, 486,
	485, 536, 0, 0, 0, 0, 487, 488, 537, 489,
	490, 491, 0, 0, 0, 222, 223, 224, 225, 226,
	0, 227, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 228, 230, 229, 231, 232, 493, 494, 233,
	495, 236, 234, 235, 496, 0, 237, 238, 239, 240,
	241, 242, 243, 0, 0, 244, 497, 498, 499, 0,
	245, 246, 500, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 0, 254, 255, 256, 253, 0, 257,
	0, 258, 259, 260, 0, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 0, 0, 264, 265, 1965, 267,
	268, 269, 501, 502, 0, 270, 271, 0, 273, 272,
	0, 274, 0, 0, 275, 276, 277, 0, 278, 0,
	279, 280, 0, 281, 503, 282, 283, 285, 287, 284,
	288, 289, 290, 291, 504, 505, 0, 219, 0, 0,
	0, 0, 0, 292, 293, 294, 506, 295, 296, 0,
	297, 0, 298, 0, 0, 0, 299, 300, 0, 301,
	507, 0, 508, 302, 0, 303, 304, 305, 306, 509,
	510, 511, 361, 0, 307, 308, 0, 309, 310, 312,
	0, 0, 220, 311, 313, 320, 0, 0, 314, 512,
	316, 315, 317, 318, 319, 513, 0, 514, 0, 321,
	0, 515, 0, 322, 323, 324, 0, 325, 326, 0,
	0, 327, 328, 329, 330, 331, 0, 333, 332, 0,
	334, 516, 0, 335, 336, 0, 0, 337, 338, 0,
	0, 339, 340, 341, 342, 0, 343, 344, 346, 348,
	345, 347, 349, 351, 352, 350, 0, 353, 354, 357,
	358, 356, 0, 355, 0, 221, 0, 359, 0, 517,
	360, 518, 362, 363, 0, 364, 365, 366, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 519, 0, 373,
	0, 520, 374, 367, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 383, 521, 384, 522, 385, 386, 0,
	387, 0, 388, 389, 390, 391, 392, 393, 394, 523,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 403,
	404, 405, 402, 406, 407, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 524, 415, 0, 416, 420, 421,
	422, 423, 424, 425, 426, 0, 432, 433, 427, 429,
	430, 431, 428, 434, 435, 436, 0, 437, 417, 418,
	438, 439, 0, 440, 441, 525, 442, 443, 0, 444,
	445, 446, 447, 419, 448, 452, 453, 449, 450, 451,
	526, 0, 455, 456, 454, 0, 457, 458, 459, 460,
	461, 286, 462, 0, 463, 527, 528, 529, 530, 0,
	470, 0, 464, 465, 531, 466, 532, 0, 467, 468,
	469, 0, 471, 472, 0, 0, 473, 474, 475, 477,
	478, 476, 480, 0, 481, 0, 479, 482, 483, 484,
	533, 534, 535, 216, 486, 485, 536, 0, 0, 0,
	0, 487, 488, 537, 489, 490, 491, 0, 0, 0,
	222, 223, 224, 225, 226, 0, 227, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 228, 230, 229,
	231, 232, 493, 494, 233, 495, 236, 234, 235, 496,
	0, 237, 238, 239, 240, 241, 242, 243, 0, 0,
	244, 497, 498, 499, 0, 245, 246, 500, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 0, 254,
	255, 256, 253, 0, 257, 0, 258, 259, 260, 0,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 0,
	0, 264, 265, 1963, 267, 268, 269, 501, 502, 0,
	270, 271, 0, 273, 272, 0, 274, 0, 0, 275,
	276, 277, 0, 278, 0, 279, 280, 0, 281, 503,
	282, 283, 285, 287, 284, 288, 289, 290, 291, 504,
	505, 0, 219, 0, 0, 0, 0, 0, 292, 293,
	294, 506, 295, 296, 0, 297, 0, 298, 0, 0,
	0, 299, 300, 0, 301, 507, 0, 508, 302, 0,
	303, 304, 305, 306, 509, 510, 511, 361, 0, 307,
	308, 0, 309, 310, 312, 0, 0, 220, 311, 313,
	320, 0, 0, 314, 512, 316, 315, 317, 318, 319,
	513, 0, 514, 0, 321, 0, 515, 0, 322, 323,
	324, 0, 325, 326, 0, 0, 327, 328, 329, 330,
	331, 0, 333, 332, 0, 334, 516, 0, 335, 336,
	0, 0, 337, 338, 0, 0, 339, 340, 341, 342,
	0, 343, 344, 346, 348, 345, 347, 349, 351, 352,
	350, 0, 353, 354, 357, 358, 356, 0, 355, 0,
	221, 0, 359, 0, 517, 360, 518, 362, 363, 0,
	364, 365, 366, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 519, 0, 373, 0, 520, 374, 367, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 383, 521,
	384, 522, 385, 386, 0, 387, 0, 388, 389, 390,
	391, 392, 393, 394, 523, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 403, 404, 405, 402, 406, 407,
	408, 409, 0, 410, 0, 411, 412, 413, 414, 524,
	415, 0, 416, 420, 421, 422, 423, 424, 425, 426,
	0, 432, 433, 427, 429, 430, 431, 428, 434, 435,
	436, 0, 437, 417, 418, 438, 439, 0, 440, 441,
	525, 442, 443, 0, 444, 445, 446, 447, 419, 448,
	452, 453, 449, 450, 451, 526, 0, 455, 456, 454,
	0, 457, 458, 459, 460, 461, 286, 462, 0, 463,
	527, 528, 529, 530, 0, 470, 0, 464, 465, 531,
	466, 532, 0, 467, 468, 469, 0, 471, 472, 0,
	0, 473, 474, 475, 477, 478, 476, 480, 0, 481,
	0, 479, 482, 483, 484, 533, 534, 535, 216, 486,
	485, 536, 0, 0, 0, 0, 487, 488, 537, 489,
	490, 491, 0, 0, 0, 222, 223, 224, 225, 226,
	0, 227, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 228, 230, 229, 231, 232, 493, 494, 233,
	495, 236, 234, 235, 496, 0, 237, 238, 239, 240,
	241, 242, 243, 0, 0, 244, 497, 498, 499, 0,
	245, 246, 500, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 0, 254, 255, 256, 253, 0, 257,
	0, 258, 259, 260, 0, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 0, 0, 264, 265, 266, 267,
	268, 269, 501, 502, 0, 270, 271, 0, 273, 272,
	0, 274, 0, 0, 275, 276, 277, 0, 278, 0,
	279, 280, 0, 281, 503, 282, 283, 285, 287, 284,
	288, 289, 290, 291, 504, 505, 0, 219, 0, 0,
	0, 0, 0, 292, 293, 294, 506, 295, 296, 0,
	297, 0, 298, 0, 0, 0, 299, 300, 0, 301,
	507, 0, 508, 302, 0, 303, 304, 305, 306, 1910,
	510, 511, 361, 0, 307, 308, 0, 309, 310, 312,
	0, 0, 220, 311, 313, 320, 0, 0, 314, 512,
	316, 315, 317, 318, 319, 513, 0, 514, 0, 321,
	0, 515, 0, 322, 323, 324, 0, 325, 326, 0,
	0, 327, 328, 329, 330, 331, 0, 333, 332, 0,
	334, 516, 0, 335, 336, 0, 0, 337, 338, 0,
	0, 339, 340, 341, 342, 0, 343, 344, 346, 348,
	345, 347, 349, 351, 352, 350, 0, 353, 354, 357,
	358, 356, 0, 355, 0, 221, 0, 359, 0, 517,
	360, 518, 362, 363, 0, 364, 365, 366, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 519, 0, 373,
	0, 520, 374, 367, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 383, 521, 384, 522, 385, 386, 0,
	387, 0, 388, 389, 390, 391, 392, 393, 394, 523,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 403,
	404, 405, 402, 406, 407, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 524, 415, 0, 416, 420, 421,
	422, 423, 424, 425, 426, 0, 432, 433, 427, 429,
	430, 431, 428, 434, 435, 436, 0, 437, 417, 418,
	438, 439, 0, 440, 441, 525, 442, 443, 0, 444,
	445, 446, 447, 419, 448, 452, 453, 449, 450, 451,
	526, 0, 455, 456, 454, 0, 457, 458, 459, 460,
	461, 286, 462, 0, 463, 527, 528, 529, 530, 0,
	470, 0, 464, 465, 531, 466, 532, 0, 467, 468,
	469, 0, 471, 472, 0, 0, 473, 474, 475, 477,
	478, 476, 480, 0, 481, 0, 479, 482, 483, 484,
	533, 534, 535, 0, 486, 485, 536, 708, 0, 216,
	0, 487, 488, 537, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 223, 224, 225,
	226, 0, 227, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 228, 230, 229, 231, 232, 493, 494,
	233, 495, 236, 234, 235, 496, 0, 237, 238, 239,
	240, 241, 242, 243, 0, 0, 244, 497, 498, 499,
	0, 245, 246, 500, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 0, 254, 255, 256, 253, 0,
	257, 0, 258, 259, 260, 0, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 0, 0, 264, 265, 266,
	267, 268, 269, 501, 502, 0, 270, 271, 0, 273,
	272, 0, 274, 0, 0, 275, 276, 277, 0, 278,
	0, 279, 280, 0, 281, 503, 282, 283, 285, 287,
	284, 288, 289, 290, 291, 504, 505, 0, 0, 0,
	0, 0, 0, 0, 292, 293, 294, 506, 295, 296,
	0, 297, 0, 298, 0, 0, 0, 299, 300, 0,
	301, 507, 0, 508, 302, 0, 303, 304, 305, 306,
	509, 510, 511, 361, 0, 307, 308, 0, 309, 310,
	312, 0, 0, 0, 311, 313, 320, 0, 0, 314,
	512, 316, 315, 317, 318, 319, 513, 0, 514, 707,
	321, 0, 515, 0, 322, 323, 324, 0, 325, 326,
	0, 0, 327, 328, 329, 330, 331, 0, 333, 332,
	0, 334, 516, 0, 335, 336, 0, 0, 337, 338,
	0, 0, 339, 340, 341, 342, 0, 343, 344, 346,
	348, 345, 347, 349, 351, 352, 350, 0, 353, 354,
	357, 358, 356, 0, 355, 0, 0, 0, 359, 0,
	517, 360, 518, 362, 363, 0, 364, 365, 366, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 519, 0,
	373, 0, 520, 374, 367, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 383, 521, 384, 522, 385, 386,
	0, 387, 0, 388, 389, 390, 391, 392, 393, 394,
	523, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	403, 404, 405, 402, 406, 407, 408, 409, 0, 410,
	0, 411, 412, 413, 414, 524, 415, 0, 416, 420,
	421, 422, 423, 424, 425, 426, 0, 432, 433, 427,
	429, 430, 431, 428, 434, 435, 436, 0, 437, 417,
	418, 438, 439, 0, 440, 441, 525, 442, 443, 0,
	444, 445, 446, 447, 419, 448, 452, 453, 449, 450,
	451, 526, 0, 455, 456, 454, 706, 457, 458, 459,
	460, 461, 286, 462, 0, 463, 527, 528, 529, 530,
	0, 470, 0, 464, 465, 531, 466, 532, 0, 467,
	468, 469, 0, 471, 472, 0, 0, 473, 474, 475,
	477, 478, 476, 480, 0, 481, 0, 479, 482, 483,
	484, 533, 534, 535, 216, 486, 485, 536, 0, 0,
	0, 0, 487, 488, 537, 489, 490, 491, 0, 0,
	0, 222, 223, 224, 225, 226, 0, 227, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 228, 230,
	229, 231, 232, 493, 494, 233, 495, 236, 234, 235,
	496, 0, 237, 238, 239, 240, 241, 242, 243, 0,
	0, 244, 497, 498, 499, 0, 245, 246, 500, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 0,
	254, 255, 256, 253, 0, 257, 0, 258, 259, 260,
	0, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	0, 0, 264, 265, 266, 267, 268, 269, 501, 502,
	0, 270, 271, 0, 273, 272, 0, 274, 0, 0,
	275, 276, 277, 0, 278, 0, 279, 280, 0, 281,
	503, 282, 283, 285, 287, 284, 288, 289, 290, 291,
	504, 505, 0, 2493, 0, 0, 0, 0, 0, 292,
	293, 294, 506, 295, 296, 0, 297, 0, 298, 0,
	0, 0, 299, 300, 0, 301, 507, 0, 508, 302,
	0, 303, 304, 305, 306, 509, 510, 511, 361, 0,
	307, 308, 0, 309, 310, 312, 0, 0, 0, 311,
	313, 320, 0, 0, 314, 512, 316, 315, 317, 318,
	319, 513, 0, 514, 0, 321, 0, 515, 0, 322,
	323, 324, 0, 325, 326, 0, 0, 327, 328, 329,
	330, 331, 0, 333, 332, 0, 334, 516, 0, 335,
	336, 0, 0, 337, 338, 0, 0, 339, 340, 341,
	342, 0, 343, 344, 346, 348, 345, 347, 349, 351,
	352, 350, 0, 353, 354, 357, 358, 356, 0, 355,
	0, 0, 0, 359, 0, 517, 360, 518, 362, 363,
	0, 364, 365, 366, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 519, 0, 373, 0, 520, 374, 367,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 383,
	521, 384, 522, 385, 386, 3333, 387, 0, 388, 389,
	390, 391, 392, 393, 394, 523, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 403, 404, 405, 402, 406,
	407, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	524, 415, 0, 416, 420, 421, 422, 423, 424, 425,
	426, 0, 432, 433, 427, 429, 430, 431, 428, 434,
	435, 436, 0, 437, 417, 418, 438, 439, 0, 440,
	441, 525, 442, 443, 0, 444, 445, 446, 447, 419,
	448, 452, 453, 449, 450, 451, 526, 0, 455, 456,
	454, 0, 457, 458, 459, 460, 461, 286, 462, 0,
	463, 527, 528, 529, 530, 0, 470, 0, 464, 465,
	531, 466, 532, 0, 467, 468, 469, 0, 471, 472,
	0, 0, 473, 474, 475, 477, 478, 476, 480, 0,
	481, 0, 479, 482, 483, 484, 533, 534, 535, 0,
	486, 485, 536, 545, 0, 216, 0, 487, 488, 537,
	489, 490, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 223, 224, 225, 226, 544, 227, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 228,
	230, 229, 231, 232, 493, 494, 233, 495, 236, 234,
	235, 496, 0, 237, 238, 239, 240, 241, 242, 243,
	0, 0, 244, 497, 498, 499, 0, 245, 246, 500,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	0, 254, 255, 256, 253, 0, 257, 0, 258, 259,
	260, 0, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 0, 0, 264, 265, 266, 267, 268, 269, 501,
	502, 0, 270, 271, 0, 273, 272, 0, 274, 0,
	0, 275, 276, 277, 0, 278, 0, 279, 280, 0,
	281, 503, 282, 283, 285, 287, 284, 288, 289, 290,
	291, 504, 505, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 506, 295, 296, 0, 297, 0, 298,
	0, 0, 0, 299, 300, 0, 301, 507, 0, 508,
	302, 0, 303, 304, 305, 306, 509, 510, 511, 361,
	0, 307, 308, 0, 309, 310, 312, 0, 0, 0,
	311, 313, 320, 0, 0, 314, 512, 316, 315, 317,
	318, 319, 513, 0, 514, 0, 321, 0, 515, 0,
	322, 323, 324, 0, 325, 326, 0, 0, 327, 328,
	329, 330, 331, 0, 333, 332, 0, 334, 516, 0,
	335, 336, 0, 0, 337, 338, 0, 0, 339, 340,
	341, 342, 0, 343, 344, 346, 348, 345, 347, 349,
	351, 352, 350, 0, 353, 354, 357, 358, 356, 0,
	355, 0, 0, 0, 359, 0, 517, 360, 518, 362,
	363, 0, 364, 365, 366, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 519, 0, 373, 0, 520, 374,
	367, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	383, 521, 384, 522, 543, 386, 0, 387, 0, 388,
	389, 390, 391, 392, 393, 394, 523, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 403, 404, 405, 402,
	406, 407, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 524, 415, 0, 416, 420, 421, 422, 423, 424,
	425, 426, 0, 432, 433, 427, 429, 430, 431, 428,
	434, 435, 436, 0, 437, 417, 418, 438, 439, 0,
	440, 441, 525, 442, 443, 0, 444, 445, 446, 447,
	419, 448, 452, 453, 449, 450, 451, 526, 0, 455,
	456, 454, 0, 457, 458, 459, 460, 461, 286, 462,
	0, 463, 527, 528, 529, 530, 0, 470, 0, 464,
	465, 531, 466, 532, 0, 467, 468, 469, 0, 471,
	472, 0, 0, 473, 474, 475, 477, 478, 476, 480,
	0, 481, 0, 479, 482, 483, 484, 533, 534, 535,
	0, 486, 485, 536, 216, 3342, 0, 0, 487, 488,
	537, 489, 490, 491, 0, 0, 0, 0, 0, 0,
	0, 222, 223, 224, 225, 226, 0, 227, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 228, 230,
	229, 231, 232, 493, 494, 233, 495, 236, 234, 235,
	496, 0, 237, 238, 239, 240, 241, 242, 243, 0,
	0, 244, 497, 498, 499, 0, 245, 246, 500, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 0,
	254, 255, 256, 253, 0, 257, 0, 258, 259, 260,
	0, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	0, 0, 264, 265, 266, 267, 268, 269, 501, 502,
	0, 270, 271, 0, 273, 272, 0, 274, 0, 0,
	275, 276, 277, 0, 278, 0, 279, 280, 0, 281,
	503, 282, 283, 285, 287, 284, 288, 289, 290, 291,
	504, 505, 0, 0, 0, 0, 0, 0, 0, 292,
	293, 294, 506, 295, 296, 0, 297, 0, 298, 0,
	0, 0, 299, 300, 0, 301, 507, 0, 508, 302,
	0, 303, 304, 305, 306, 509, 510, 511, 361, 0,
	307, 308, 0, 309, 310, 312, 0, 0, 0, 311,
	313, 320, 0, 0, 314, 512, 316, 315, 317, 318,
	319, 513, 0, 514, 0, 321, 0, 515, 0, 322,
	323, 324, 0, 325, 326, 0, 0, 327, 328, 329,
	330, 331, 0, 333, 332, 0, 334, 516, 0, 335,
	336, 0, 0, 337, 338, 0, 0, 339, 340, 341,
	342, 0, 343, 344, 346, 348, 345, 347, 349, 351,
	352, 350, 0, 353, 354, 357, 358, 356, 0, 355,
	0, 0, 0, 359, 0, 517, 360, 518, 362, 363,
	0, 364, 365, 366, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 519, 0, 373, 0, 520, 374, 367,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 383,
	521, 384, 522, 385, 386, 0, 387, 0, 388, 389,
	390, 391, 392, 393, 394, 523, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 403, 404, 405, 402, 406,
	407, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	524, 415, 0, 416, 420, 421, 422, 423, 424, 425,
	426, 0, 432, 433, 427, 429, 430, 431, 428, 434,
	435, 436, 0, 437, 417, 418, 438, 439, 0, 440,
	441, 525, 442, 443, 0, 444, 445, 446, 447, 419,
	448, 452, 453, 449, 450, 451, 526, 0, 455, 456,
	454, 0, 457, 458, 459, 460, 461, 286, 462, 0,
	463, 527, 528, 529, 530, 0, 470, 0, 464, 465,
	531, 466, 532, 0, 467, 468, 469, 0, 471, 472,
	0, 0, 473, 474, 475, 477, 478, 476, 480, 0,
	481, 0, 479, 482, 483, 484, 533, 534, 535, 0,
	486, 485, 536, 216, 2480, 0, 0, 487, 488, 537,
	489, 490, 491, 0, 0, 0, 0, 0, 0, 0,
	222, 223, 224, 225, 226, 0, 227, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 228, 230, 229,
	231, 232, 493, 494, 233, 495, 236, 234, 235, 496,
	0, 237, 238, 239, 240, 241, 242, 243, 0, 0,
	244, 497, 498, 499, 0, 245, 246, 500, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 0, 254,
	255, 256, 253, 0, 257, 0, 258, 259, 260, 0,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 0,
	0, 264, 265, 266, 267, 268, 269, 501, 502, 0,
	270, 271, 0, 273, 272, 0, 274, 0, 0, 275,
	276, 277, 0, 278, 0, 279, 280, 0, 281, 503,
	282, 283, 285, 287, 284, 288, 289, 290, 291, 504,
	505, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	294, 506, 295, 296, 0, 297, 0, 298, 0, 0,
	0, 299, 300, 0, 301, 507, 0, 508, 302, 0,
	303, 304, 305, 306, 509, 510, 511, 361, 0, 307,
	308, 0, 309, 310, 312, 0, 0, 0, 311, 313,
	320, 0, 0, 314, 512, 316, 315, 317, 318, 319,
	513, 0, 514, 0, 321, 0, 515, 0, 322, 323,
	324, 0, 325, 326, 0, 0, 327, 328, 329, 330,
	331, 0, 333, 332, 0, 334, 516, 0, 335, 336,
	0, 0, 337, 338, 0, 0, 339, 340, 341, 342,
	0, 343, 344, 346, 348, 345, 347, 349, 351, 352,
	350, 0, 353, 354, 357, 358, 356, 0, 355, 0,
	0, 0, 359, 0, 517, 360, 518, 362, 363, 0,
	364, 365, 366, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 519, 0, 373, 0, 520, 374, 367, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 383, 521,
	384, 522, 385, 386, 0, 387, 0, 388, 389, 390,
	391, 392, 393, 394, 523, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 403, 404, 405, 402, 406, 407,
	408, 409, 0, 410, 0, 411, 412, 413, 414, 524,
	415, 0, 416, 420, 421, 422, 423, 424, 425, 426,
	0, 432, 433, 427, 429, 430, 431, 428, 434, 435,
	436, 0, 437, 417, 418, 438, 439, 0, 440, 441,
	525, 442, 443, 0, 444, 445, 446, 447, 419, 448,
	452, 453, 449, 450, 451, 526, 0, 455, 456, 454,
	0, 457, 458, 459, 460, 461, 286, 462, 0, 463,
	527, 528, 529, 530, 0, 470, 0, 464, 465, 531,
	466, 532, 0, 467, 468, 469, 0, 471, 472, 0,
	0, 473, 474, 475, 477, 478, 476, 480, 0, 481,
	0, 479, 482, 483, 484, 533, 534, 535, 216, 486,
	485, 536, 0, 0, 0, 0, 487, 488, 537, 489,
	490, 491, 0, 0, 0, 222, 223, 224, 225, 226,
	0, 227, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 228, 230, 229, 231, 232, 493, 494, 233,
	495, 236, 234, 235, 496, 0, 237, 238, 239, 240,
	241, 242, 243, 0, 0, 244, 497, 498, 499, 0,
	245, 246, 500, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 0, 254, 255, 256, 253, 0, 257,
	0, 258, 259, 260, 0, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 0, 0, 264, 265, 266, 267,
	268, 269, 501, 502, 3123, 270, 271, 0, 273, 272,
	0, 274, 0, 0, 275, 276, 277, 0, 278, 0,
	279, 280, 0, 281, 503, 282, 283, 285, 287, 284,
	288, 289, 290, 291, 504, 505, 0, 0, 0, 0,
	0, 0, 0, 292, 293, 294, 506, 295, 296, 0,
	297, 0, 298, 0, 0, 0, 299, 300, 0, 301,
	507, 0, 508, 302, 0, 303, 304, 305, 306, 509,
	510, 511, 361, 0, 307, 308, 0, 309, 310, 312,
	0, 0, 0, 311, 313, 320, 0, 0, 314, 512,
	316, 315, 317, 318, 319, 513, 0, 514, 0, 321,
	0, 515, 0, 322, 323, 324, 0, 325, 326, 0,
	0, 327, 328, 329, 330, 331, 0, 333, 332, 0,
	334, 516, 0, 335, 336, 0, 0, 337, 338, 0,
	0, 339, 340, 341, 342, 0, 343, 344, 346, 348,
	345, 347, 349, 351, 352, 350, 0, 353, 354, 357,
	358, 356, 0, 355, 0, 0, 0, 359, 0, 517,
	360, 518, 362, 363, 0, 364, 365, 366, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 519, 0, 373,
	0, 520, 374, 367, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 383, 521, 384, 522, 385, 386, 0,
	387, 0, 388, 389, 390, 391, 392, 393, 394, 523,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 403,
	404, 405, 402, 406, 407, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 524, 415, 0, 416, 420, 421,
	422, 423, 424, 425, 426, 0, 432, 433, 427, 429,
	430, 431, 428, 434, 435, 436, 0, 437, 417, 418,
	438, 439, 0, 440, 441, 525, 442, 443, 0, 444,
	445, 446, 447, 419, 448, 452, 453, 449, 450, 451,
	526, 0, 455, 456, 454, 0, 457, 458, 459, 460,
	461, 286, 462, 0, 463, 527, 528, 529, 530, 0,
	470, 0, 464, 465, 531, 466, 532, 0, 467, 468,
	469, 0, 471, 472, 0, 0, 473, 474, 475, 477,
	478, 476, 480, 0, 481, 0, 479, 482, 483, 484,
	533, 534, 535, 216, 486, 485, 536, 0, 0, 0,
	0, 487, 488, 537, 489, 490, 491, 0, 0, 0,
	222, 223, 224, 225, 226, 0, 227, 0, 0, 0,
	0, 0, 492, 0, 2258, 0, 0, 228, 230, 229,
	231, 232, 493, 494, 233, 495, 236, 234, 235, 496,
	0, 237, 238, 239, 240, 241, 242, 243, 0, 0,
	244, 497, 498, 499, 0, 245, 246, 500, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 0, 254,
	255, 256, 253, 0, 257, 0, 258, 259, 260, 0,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 0,
	0, 264, 265, 266, 267, 268, 269, 501, 502, 0,
	270, 271, 0, 273, 272, 0, 274, 0, 0, 275,
	276, 277, 0, 278, 0, 279, 280, 0, 281, 503,
	282, 283, 285, 287, 284, 288, 289, 290, 291, 504,
	505, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	294, 506, 295, 296, 0, 297, 0, 298, 0, 0,
	0, 299, 300, 0, 301, 507, 0, 508, 302, 0,
	303, 304, 305, 306, 509, 510, 511, 361, 0, 307,
	308, 0, 309, 310, 312, 0, 0, 0, 311, 313,
	320, 0, 0, 314, 512, 316, 315, 317, 318, 319,
	513, 0, 514, 0, 321, 0, 515, 0, 322, 323,
	324, 0, 325, 326, 0, 0, 327, 328, 329, 330,
	331, 0, 333, 332, 0, 334, 516, 0, 335, 336,
	0, 0, 337, 338, 0, 0, 339, 340, 341, 342,
	0, 343, 344, 346, 348, 345, 347, 349, 351, 352,
	350, 0, 353, 354, 357, 358, 356, 0, 355, 0,
	0, 0, 359, 0, 517, 360, 518, 362, 363, 0,
	364, 365, 366, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 519, 0, 373, 0, 520, 374, 367, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 383, 521,
	384, 522, 385, 386, 0, 387, 0, 388, 389, 390,
	391, 392, 393, 394, 523, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 403, 404, 405, 402, 406, 407,
	408, 409, 0, 410, 0, 411, 412, 413, 414, 524,
	415, 0, 416, 420, 421, 422, 423, 424, 425, 426,
	0, 432, 433, 427, 429, 430, 431, 428, 434, 435,
	436, 0, 437, 417, 418, 438, 439, 0, 440, 441,
	525, 442, 443, 0, 444, 445, 446, 447, 419, 448,
	452, 453, 449, 450, 451, 526, 0, 455, 456, 454,
	0, 457, 458, 459, 460, 461, 286, 462, 0, 463,
	527, 528, 529, 530, 0, 470, 0, 464, 465, 531,
	466, 532, 0, 467, 468, 469, 0, 471, 472, 0,
	0, 473, 474, 475, 477, 478, 476, 480, 0, 481,
	0, 479, 482, 483, 484, 533, 534, 535, 0, 486,
	485, 536, 216, 2480, 0, 0, 487, 488, 537, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 222,
	223, 224, 225, 226, 0, 227, 0, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 228, 230, 229, 231,
	232, 493, 494, 233, 495, 236, 234, 235, 496, 0,
	237, 238, 239, 240, 241, 242, 243, 0, 0, 244,
	497, 498, 499, 0, 245, 246, 500, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 0, 254, 255,
	256, 253, 0, 257, 0, 258, 259, 260, 0, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 0, 0,
	264, 265, 266, 267, 268, 269, 501, 502, 0, 270,
	271, 0, 273, 272, 0, 274, 0, 0, 275, 276,
	277, 0, 278, 0, 279, 280, 0, 281, 503, 282,
	283, 285, 287, 284, 288, 289, 290, 291, 504, 505,
	0, 0, 0, 0, 0, 0, 0, 292, 293, 294,
	506, 295, 296, 0, 297, 0, 298, 0, 0, 0,
	299, 300, 0, 301, 507, 0, 508, 302, 0, 303,
	304, 305, 306, 509, 510, 511, 361, 0, 307, 308,
	0, 309, 310, 312, 0, 0, 0, 311, 313, 320,
	0, 0, 314, 512, 316, 315, 317, 318, 319, 513,
	0, 514, 0, 321, 0, 515, 0, 322, 323, 324,
	0, 325, 326, 0, 0, 327, 328, 329, 330, 331,
	0, 333, 332, 0, 334, 516, 0, 335, 336, 0,
	0, 337, 338, 0, 0, 339, 340, 341, 342, 0,
	343, 344, 346, 348, 345, 347, 349, 351, 352, 350,
	0, 353, 354, 357, 358, 356, 0, 355, 0, 0,
	0, 359, 0, 517, 360, 518, 362, 363, 0, 364,
	365, 366, 0, 0, 368, 369, 2477, 0, 0, 371,
	372, 519, 0, 373, 0, 520, 374, 367, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 383, 521, 384,
	522, 385, 386, 0, 387, 0, 388, 389, 390, 391,
	392, 393, 394, 523, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 403, 404, 405, 402, 406, 407, 408,
	409, 0, 410, 0, 411, 412, 413, 414, 524, 415,
	0, 416, 420, 421, 422, 423, 424, 425, 426, 0,
	432, 433, 427, 429, 430, 431, 428, 434, 435, 436,
	0, 437, 417, 418, 438, 439, 0, 440, 441, 525,
	442, 443, 0, 444, 445, 446, 447, 419, 448, 452,
	453, 449, 450, 451, 526, 0, 455, 456, 454, 0,
	457, 458, 459, 460, 461, 286, 462, 0, 463, 527,
	528, 529, 530, 0, 470, 0, 464, 465, 531, 466,
	532, 0, 467, 468, 469, 0, 471, 472, 0, 0,
	473, 474, 475, 477, 478, 476, 480, 0, 481, 0,
	479, 482, 483, 484, 533, 534, 535, 216, 486, 485,
	536, 0, 0, 0, 0, 487, 488, 537, 489, 490,
	491, 0, 0, 0, 222, 223, 224, 225, 226, 1944,
	227, 0, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 228, 230, 229, 231, 232, 493, 494, 233, 495,
	236, 234, 235, 496, 0, 237, 238, 239, 240, 241,
	242, 243, 0, 0, 244, 497, 498, 499, 0, 245,
	246, 500, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 0, 254, 255, 256, 253, 0, 257, 0,
	258, 259, 260, 0, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 0, 0, 264, 265, 266, 267, 268,
	269, 501, 502, 0, 270, 271, 0, 273, 272, 0,
	274, 0, 0, 275, 276, 277, 0, 278, 0, 279,
	280, 0, 281, 503, 282, 283, 285, 287, 284, 288,
	289, 290, 291, 504, 505, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 506, 295, 296, 0, 297,
	0, 298, 0, 0, 0, 299, 300, 0, 301, 507,
	0, 508, 302, 0, 303, 304, 305, 306, 509, 510,
	511, 361, 0, 307, 308, 0, 309, 310, 312, 0,
	0, 0, 311, 313, 320, 0, 0, 314, 512, 316,
	315, 317, 318, 319, 513, 0, 514, 0, 321, 0,
	515, 0, 322, 323, 324, 0, 325, 326, 0, 0,
	327, 328, 329, 330, 331, 0, 333, 332, 0, 334,
	516, 0, 335, 336, 0, 0, 337, 338, 0, 0,
	339, 340, 341, 342, 0, 343, 344, 346, 348, 345,
	347, 349, 351, 352, 350, 0, 353, 354, 357, 358,
	356, 0, 355, 0, 0, 0, 359, 0, 517, 360,
	518, 362, 363, 0, 364, 365, 366, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 519, 0, 373, 0,
	520, 374, 367, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 383, 521, 384, 522, 385, 386, 0, 387,
	0, 388, 389, 390, 391, 392, 393, 394, 523, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 403, 404,
	405, 402, 406, 407, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 524, 415, 0, 416, 420, 421, 422,
	423, 424, 425, 426, 0, 432, 433, 427, 429, 430,
	431, 428, 434, 435, 436, 0, 437, 417, 418, 438,
	439, 0, 440, 441, 525, 442, 443, 0, 444, 445,
	446, 447, 419, 448, 452, 453, 449, 450, 451, 526,
	0, 455, 456, 454, 0, 457, 458, 459, 460, 461,
	286, 462, 0, 463, 527, 528, 529, 530, 0, 470,
	0, 464, 465, 531, 466, 532, 0, 467, 468, 469,
	0, 471, 472, 0, 0, 473, 474, 475, 477, 478,
	476, 480, 0, 481, 0, 479, 482, 483, 484, 533,
	534, 535, 0, 486, 485, 536, 1934, 0, 216, 0,
	487, 488, 537, 489, 490, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 223, 224, 225, 226,
	0, 227, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 228, 230, 229, 231, 232, 493, 494, 233,
	495, 236, 234, 235, 496, 0, 237, 238, 239, 240,
	241, 242, 243, 0, 0, 244, 497, 498, 499, 0,
	245, 246, 500, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 0, 254, 255, 256, 253, 0, 257,
	0, 258, 259, 260, 0, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 0, 0, 264, 265, 266, 267,
	268, 269, 501, 502, 0, 270, 271, 0, 273, 272,
	0, 274, 0, 0, 275, 276, 277, 0, 278, 0,
	279, 280, 0, 281, 503, 282, 283, 285, 287, 284,
	288, 289, 290, 291, 504, 505, 0, 0, 0, 0,
	0, 0, 0, 292, 293, 294, 506, 295, 296, 0,
	297, 0, 298, 0, 0, 0, 299, 300, 0, 301,
	507, 0, 508, 302, 0, 303, 304, 305, 306, 509,
	510, 511, 361, 0, 307, 308, 0, 309, 310, 312,
	0, 0, 0, 311, 313, 320, 0, 0, 314, 512,
	316, 315, 317, 318, 319, 513, 0, 514, 0, 321,
	0, 515, 0, 322, 323, 324, 0, 325, 326, 0,
	0, 327, 328, 329, 330, 331, 0, 333, 332, 0,
	334, 516, 0, 335, 336, 0, 0, 337, 338, 0,
	0, 339, 340, 341, 342, 0, 343, 344, 346, 348,
	345, 347, 349, 351, 352, 350, 0, 353, 354, 357,
	358, 356, 0, 355, 0, 0, 0, 359, 0, 517,
	360, 518, 362, 363, 0, 364, 365, 366, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 519, 0, 373,
	0, 520, 374, 367, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 383, 521, 384, 522, 385, 386, 0,
	387, 0, 388, 389, 390, 391, 392, 393, 394, 523,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 403,
	404, 405, 402, 406, 407, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 524, 415, 0, 416, 420, 421,
	422, 423, 424, 425, 426, 0, 432, 433, 427, 429,
	430, 431, 428, 434, 435, 436, 0, 437, 417, 418,
	438, 439, 0, 440, 441, 525, 442, 443, 0, 444,
	445, 446, 447, 419, 448, 452, 453, 449, 450, 451,
	526, 0, 455, 456, 454, 0, 457, 458, 459, 460,
	461, 286, 462, 0, 463, 527, 528, 529, 530, 0,
	470, 0, 464, 465, 531, 466, 532, 0, 467, 468,
	469, 0, 471, 472, 0, 0, 473, 474, 475, 477,
	478, 476, 480, 0, 481, 0, 479, 482, 483, 484,
	533, 534, 535, 0, 486, 485, 536, 586, 0, 216,
	0, 487, 488, 537, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 223, 224, 225,
	226, 0, 227, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 228, 1068, 229, 231, 232, 493, 494,
	233, 495, 236, 234, 235, 496, 0, 237, 238, 239,
	240, 241, 242, 243, 0, 0, 244, 497, 498, 1066,
	0, 245, 246, 500, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 0, 254, 255, 256, 253, 0,
	257, 0, 258, 259, 260, 0, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 0, 0, 264, 265, 266,
	267, 268, 269, 501, 502, 0, 270, 271, 0, 273,
	272, 0, 274, 0, 0, 275, 276, 277, 0, 278,
	0, 279, 280, 0, 281, 503, 282, 283, 285, 287,
	284, 288, 289, 290, 291, 504, 505, 0, 0, 0,
	0, 0, 0, 0, 292, 293, 294, 506, 295, 296,
	0, 297, 0, 298, 0, 0, 0, 299, 300, 0,
	301, 507, 0, 508, 302, 0, 303, 304, 305, 306,
	509, 510, 511, 361, 0, 307, 308, 0, 309, 310,
	312, 0, 0, 0, 311, 313, 320, 0, 0, 314,
	512, 316, 315, 317, 318, 319, 513, 0, 514, 0,
	321, 0, 515, 0, 322, 323, 324, 0, 325, 326,
	0, 0, 327, 328, 329, 330, 331, 0, 333, 332,
	0, 334, 516, 0, 335, 336, 0, 0, 337, 338,
	0, 0, 339, 340, 341, 342, 0, 343, 344, 346,
	348, 345, 347, 349, 351, 352, 587, 0, 353, 354,
	357, 358, 356, 0, 355, 0, 0, 0, 359, 0,
	517, 360, 518, 362, 363, 0, 364, 365, 366, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 519, 0,
	373, 0, 520, 374, 367, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 383, 521, 384, 522, 385, 386,
	0, 387, 0, 388, 389, 390, 391, 392, 393, 394,
	523, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	403, 404, 405, 402, 406, 407, 408, 409, 0, 410,
	0, 411, 412, 413, 414, 524, 415, 0, 416, 420,
	421, 583, 423, 424, 425, 426, 0, 432, 433, 427,
	429, 430, 431, 428, 434, 1069, 436, 0, 437, 417,
	418, 438, 439, 0, 440, 441, 525, 442, 443, 0,
	444, 445, 446, 447, 419, 448, 452, 453, 449, 450,
	451, 526, 0, 455, 456, 454, 0, 457, 458, 459,
	460, 461, 286, 462, 0, 463, 582, 528, 529, 530,
	0, 470, 0, 464, 465, 531, 466, 532, 0, 467,
	468, 469, 0, 471, 472, 0, 0, 473, 474, 475,
	477, 478, 476, 480, 0, 481, 0, 479, 482, 483,
	484, 533, 534, 535, 0, 486, 485, 536, 586, 0,
	216, 0, 487, 488, 537, 489, 490, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 223, 224,
	225, 226, 0, 227, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 228, 230, 229, 231, 232, 493,
	494, 233, 495, 236, 234, 235, 496, 0, 237, 238,
	239, 240, 241, 242, 243, 0, 0, 244, 497, 498,
	499, 0, 245, 576, 500, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 0, 254, 255, 256, 253,
	0, 257, 0, 258, 259, 260, 0, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 0, 0, 264, 265,
	266, 267, 268, 269, 501, 502, 0, 270, 271, 0,
	273, 272, 0, 274, 0, 0, 275, 276, 277, 0,
	278, 0, 279, 280, 0, 281, 503, 282, 283, 285,
	287, 284, 288, 289, 290, 291, 504, 505, 0, 0,
	0, 0, 0, 0, 0, 292, 293, 294, 506, 295,
	296, 0, 297, 0, 298, 0, 0, 0, 299, 300,
	0, 301, 507, 0, 508, 302, 0, 303, 304, 305,
	306, 509, 510, 511, 361, 0, 307, 308, 0, 309,
	310, 312, 0, 0, 0, 311, 313, 320, 0, 0,
	314, 512, 316, 315, 317, 318, 319, 513, 0, 514,
	0, 321, 0, 515, 0, 322, 323, 324, 0, 325,
	326, 0, 0, 327, 328, 329, 330, 331, 0, 333,
	332, 0, 334, 516, 0, 335, 336, 0, 0, 337,
	338, 0, 0, 339, 340, 341, 342, 0, 343, 344,
	346, 348, 345, 347, 349, 351, 352, 587, 0, 353,
	354, 357, 358, 356, 0, 355, 0, 0, 0, 359,
	0, 517, 360, 518, 362, 363, 0, 364, 365, 366,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 519,
	0, 373, 0, 520, 374, 367, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 383, 521, 384, 522, 385,
	386, 0, 387, 0, 388, 389, 390, 391, 392, 393,
	394, 523, 395, 396, 0, 397, 398, 399, 400, 401,
	0, 403, 404, 405, 402, 406, 407, 408, 409, 0,
	410, 0, 411, 412, 413, 414, 524, 415, 0, 416,
	420, 421, 583, 423, 424, 425, 426, 0, 432, 433,
	427, 429, 430, 431, 428, 434, 1351, 436, 0, 437,
	417, 418, 438, 439, 0, 440, 441, 525, 442, 443,
	0, 444, 445, 446, 447, 419, 448, 452, 453, 449,
	450, 451, 526, 0, 455, 456, 454, 0, 457, 458,
	459, 460, 461, 286, 462, 0, 463, 582, 528, 529,
	530, 0, 470, 0, 464, 465, 531, 466, 532, 0,
	467, 468, 469, 0, 471, 472, 0, 0, 473, 474,
	475, 477, 478, 476, 480, 0, 481, 0, 479, 482,
	483, 484, 533, 534, 535, 0, 486, 485, 536, 1337,
	0, 216, 0, 487, 488, 537, 489, 490, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 223,
	224, 225, 226, 0, 227, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 228, 230, 229, 231, 232,
	493, 494, 233, 495, 236, 234, 235, 496, 0, 237,
	238, 239, 240, 241, 242, 243, 0, 0, 244, 497,
	498, 499, 0, 245, 246, 500, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 0, 254, 255, 256,
	253, 0, 257, 0, 258, 259, 260, 0, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 0, 0, 264,
	265, 266, 267, 268, 269, 501, 502, 0, 270, 271,
	0, 273, 272, 0, 274, 0, 0, 275, 276, 277,
	0, 278, 0, 279, 280, 0, 281, 503, 282, 283,
	285, 287, 284, 288, 289, 290, 291, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 506,
	295, 296, 0, 297, 0, 298, 0, 0, 0, 299,
	300, 0, 301, 507, 0, 508, 302, 0, 303, 304,
	305, 306, 1336, 510, 511, 361, 0, 307, 308, 0,
	309, 310, 312, 0, 0, 0, 311, 313, 320, 0,
	0, 314, 512, 316, 315, 317, 318, 319, 513, 0,
	514, 0, 321, 0, 515, 0, 322, 323, 324, 0,
	325, 326, 0, 0, 327, 328, 329, 330, 331, 0,
	333, 332, 0, 334, 516, 0, 335, 336, 0, 0,
	337, 338, 0, 0, 339, 340, 341, 342, 0, 343,
	344, 346, 348, 345, 347, 349, 351, 352, 350, 0,
	353, 354, 357, 358, 356, 0, 355, 0, 0, 0,
	359, 0, 517, 360, 518, 362, 363, 0, 364, 365,
	366, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	519, 0, 373, 0, 520, 374, 367, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 383, 521, 384, 522,
	385, 386, 0, 387, 0, 388, 389, 390, 391, 392,
	393, 394, 523, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 403, 404, 405, 402, 406, 407, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 524, 415, 0,
	416, 420, 421, 422, 423, 424, 425, 426, 0, 432,
	433, 427, 429, 430, 431, 428, 434, 435, 436, 0,
	437, 417, 418, 438, 439, 0, 440, 441, 525, 442,
	443, 0, 444, 445, 446, 447, 419, 448, 452, 453,
	449, 450, 451, 526, 0, 455, 456, 454, 0, 457,
	458, 459, 460, 461, 286, 462, 0, 463, 527, 528,
	529, 530, 0, 470, 0, 464, 465, 531, 466, 532,
	0, 467, 468, 469, 0, 471, 472, 0, 0, 473,
	474, 475, 477, 478, 476, 480, 0, 481, 0, 479,
	482, 483, 484, 533, 534, 535, 0, 486, 485, 536,
	1285, 0, 216, 0, 487, 488, 537, 489, 490, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	223, 224, 225, 226, 0, 227, 0, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 228, 230, 229, 231,
	232, 493, 494, 233, 495, 236, 234, 235, 496, 0,
	237, 238, 239, 240, 241, 242, 243, 0, 0, 244,
	497, 498, 499, 0, 245, 246, 500, 0, 0, 0,
	247, 248, 249, 250, 251, 252, 0, 0, 254, 255,
	256, 253, 0, 257, 0, 258, 259, 260, 0, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 0, 0,
	264, 265, 266, 267, 268, 269, 501, 502, 0, 270,
	271, 0, 273, 272, 0, 274, 0, 0, 275, 276,
	277, 0, 278, 0, 279, 280, 0, 281, 503, 282,
	283, 285, 287, 284, 288, 289, 290, 291, 504, 505,
	0, 0, 0, 0, 0, 0, 0, 292, 293, 294,
	506, 295, 296, 0, 297, 0, 298, 0, 0, 0,
	299, 300, 0, 301, 507, 0, 508, 302, 0, 303,
	304, 305, 306, 1284, 510, 511, 361, 0, 307, 308,
	0, 309, 310, 312, 0, 0, 0, 311, 313, 320,
	0, 0, 314, 512, 316, 315, 317, 318, 319, 513,
	0, 514, 0, 321, 0, 515, 0, 322, 323, 324,
	0, 325, 326, 0, 0, 327, 328, 329, 330, 331,
	0, 333, 332, 0, 334, 516, 0, 335, 336, 0,
	0, 337, 338, 0, 0, 339, 340, 341, 342, 0,
	343, 344, 346, 348, 345, 347, 349, 351, 352, 350,
	0, 353, 354, 357, 358, 356, 0, 355, 0, 0,
	0, 359, 0, 517, 360, 518, 362, 363, 0, 364,
	365, 366, 0, 0, 368, 369, 370, 0, 0, 371,
	372, 519, 0, 373, 0, 520, 374, 367, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 383, 521, 384,
	522, 385, 386, 0, 387, 0, 388, 389, 390, 391,
	392, 393, 394, 523, 395, 396, 0, 397, 398, 399,
	400, 401, 0, 403, 404, 405, 402, 406, 407, 408,
	409, 0, 410, 0, 411, 412, 413, 414, 524, 415,
	0, 416, 420, 421, 422, 423, 424, 425, 426, 0,
	432, 433, 427, 429, 430, 431, 428, 434, 435, 436,
	0, 437, 417, 418, 438, 439, 0, 440, 441, 525,
	442, 443, 0, 444, 445, 446, 447, 419, 448, 452,
	453, 449, 450, 451, 526, 0, 455, 456, 454, 0,
	457, 458, 459, 460, 461, 286, 462, 0, 463, 527,
	528, 529, 530, 0, 470, 0, 464, 465, 531, 466,
	532, 0, 467, 468, 469, 0, 471, 472, 0, 0,
	473, 474, 475, 477, 478, 476, 480, 0, 481, 0,
	479, 482, 483, 484, 533, 534, 535, 0, 486, 485,
	536, 1270, 0, 216, 0, 487, 488, 537, 489, 490,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 223, 224, 225, 226, 0, 227, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 228, 230, 229,
	231, 232, 493, 494, 233, 495, 236, 234, 235, 496,
	0, 237, 238, 239, 240, 241, 242, 243, 0, 0,
	244, 497, 498, 499, 0, 245, 246, 500, 0, 0,
	0, 247, 248, 249, 250, 251, 252, 0, 0, 254,
	255, 256, 253, 0, 257, 0, 258, 259, 260, 0,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 0,
	0, 264, 265, 266, 267, 268, 269, 501, 502, 0,
	270, 271, 0, 273, 272, 0, 274, 0, 0, 275,
	276, 277, 0, 278, 0, 279, 280, 0, 281, 503,
	282, 283, 285, 287, 284, 288, 289, 290, 291, 504,
	505, 0, 0, 0, 0, 0, 0, 0, 292, 293,
	294, 506, 295, 296, 0, 297, 0, 298, 0, 0,
	0, 299, 300, 0, 301, 507, 0, 508, 302, 0,
	303, 304, 305, 306, 1269, 510, 511, 361, 0, 307,
	308, 0, 309, 310, 312, 0, 0, 0, 311, 313,
	320, 0, 0, 314, 512, 316, 315, 317, 318, 319,
	513, 0, 514, 0, 321, 0, 515, 0, 322, 323,
	324, 0, 325, 326, 0, 0, 327, 328, 329, 330,
	331, 0, 333, 332, 0, 334, 516, 0, 335, 336,
	0, 0, 337, 338, 0, 0, 339, 340, 341, 342,
	0, 343, 344, 346, 348, 345, 347, 349, 351, 352,
	350, 0, 353, 354, 357, 358, 356, 0, 355, 0,
	0, 0, 359, 0, 517, 360, 518, 362, 363, 0,
	364, 365, 366, 0, 0, 368, 369, 370, 0, 0,
	371, 372, 519, 0, 373, 0, 520, 374, 367, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 383, 521,
	384, 522, 385, 386, 0, 387, 0, 388, 389, 390,
	391, 392, 393, 394, 523, 395, 396, 0, 397, 398,
	399, 400, 401, 0, 403, 404, 405, 402, 406, 407,
	408, 409, 0, 410, 0, 411, 412, 413, 414, 524,
	415, 0, 416, 420, 421, 422, 423, 424, 425, 426,
	0, 432, 433, 427, 429, 430, 431, 428, 434, 435,
	436, 0, 437, 417, 418, 438, 439, 0, 440, 441,
	525, 442, 443, 0, 444, 445, 446, 447, 419, 448,
	452, 453, 449, 450, 451, 526, 0, 455, 456, 454,
	0, 457, 458, 459, 460, 461, 286, 462, 0, 463,
	527, 528, 529, 530, 0, 470, 0, 464, 465, 531,
	466, 532, 0, 467, 468, 469, 0, 471, 472, 0,
	0, 473, 474, 475, 477, 478, 476, 480, 0, 481,
	0, 479, 482, 483, 484, 533, 534, 535, 0, 486,
	485, 536, 1265, 0, 216, 0, 487, 488, 537, 489,
	490, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 223, 224, 225, 226, 0, 227, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 228, 230,
	229, 231, 232, 493, 494, 233, 495, 236, 234, 235,
	496, 0, 237, 238, 239, 240, 241, 242, 243, 0,
	0, 244, 497, 498, 499, 0, 245, 246, 500, 0,
	0, 0, 247, 248, 249, 250, 251, 252, 0, 0,
	254, 255, 256, 253, 0, 257, 0, 258, 259, 260,
	0, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	0, 0, 264, 265, 266, 267, 268, 269, 501, 502,
	0, 270, 271, 0, 273, 272, 0, 274, 0, 0,
	275, 276, 277, 0, 278, 0, 279, 280, 0, 281,
	503, 282, 283, 285, 287, 284, 288, 289, 290, 291,
	504, 505, 0, 0, 0, 0, 0, 0, 0, 292,
	293, 294, 506, 295, 296, 0, 297, 0, 298, 0,
	0, 0, 299, 300, 0, 301, 507, 0, 508, 302,
	0, 303, 304, 305, 306, 509, 510, 511, 361, 0,
	307, 308, 0, 309, 310, 312, 0, 0, 0, 311,
	313, 320, 0, 0, 314, 512, 316, 315, 317, 318,
	319, 513, 0, 514, 0, 321, 0, 515, 0, 322,
	323, 324, 0, 325, 326, 0, 0, 327, 328, 329,
	330, 331, 0, 333, 332, 0, 334, 516, 0, 335,
	336, 0, 0, 337, 338, 0, 0, 339, 340, 341,
	342, 0, 343, 344, 346, 348, 345, 347, 349, 351,
	352, 350, 0, 353, 354, 357, 358, 356, 0, 355,
	0, 0, 0, 359, 0, 517, 360, 518, 362, 363,
	0, 364, 365, 366, 0, 0, 368, 369, 370, 0,
	0, 371, 372, 519, 0, 373, 0, 520, 374, 367,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 383,
	521, 384, 522, 385, 386, 0, 387, 0, 388, 389,
	390, 391, 392, 393, 394, 523, 395, 396, 0, 397,
	398, 399, 400, 401, 0, 403, 404, 405, 402, 406,
	407, 408, 409, 0, 410, 0, 411, 412, 413, 414,
	524, 415, 0, 416, 420, 421, 422, 423, 424, 425,
	426, 0, 432, 433, 427, 429, 430, 431, 428, 434,
	435, 436, 0, 437, 417, 418, 438, 439, 0, 440,
	441, 525, 442, 443, 0, 444, 445, 446, 447, 419,
	448, 452, 453, 449, 450, 451, 526, 0, 455, 456,
	454, 0, 457, 458, 459, 460, 461, 286, 462, 0,
	463, 527, 528, 529, 530, 0, 470, 0, 464, 465,
	531, 466, 532, 0, 467, 468, 469, 0, 471, 472,
	0, 0, 473, 474, 475, 477, 478, 476, 480, 0,
	481, 0, 479, 482, 483, 484, 533, 534, 535, 0,
	486, 485, 536, 1192, 0, 216, 0, 487, 488, 537,
	489, 490, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 223, 224, 225, 226, 0, 227, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 228,
	230, 229, 231, 232, 493, 494, 233, 495, 236, 234,
	235, 496, 0, 237, 238, 239, 240, 241, 242, 243,
	0, 0, 244, 497, 498, 499, 0, 245, 246, 500,
	0, 0, 0, 247, 248, 249, 250, 251, 252, 0,
	0, 254, 255, 256, 253, 0, 257, 0, 258, 259,
	260, 0, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 0, 0, 264, 265, 266, 267, 268, 269, 501,
	502, 0, 270, 271, 0, 273, 272, 0, 274, 0,
	0, 275, 276, 277, 0, 278, 0, 279, 280, 0,
	281, 503, 282, 283, 285, 287, 284, 288, 289, 290,
	291, 504, 505, 0, 0, 0, 0, 0, 0, 0,
	292, 293, 294, 506, 295, 296, 0, 297, 0, 298,
	0, 0, 0, 299, 300, 0, 301, 507, 0, 508,
	302, 0, 303, 304, 305, 306, 509, 510, 511, 361,
	0, 307, 308, 0, 309, 310, 312, 0, 0, 0,
	311, 313, 320, 0, 0, 314, 512, 316, 315, 317,
	318, 319, 513, 0, 514, 0, 321, 0, 515, 0,
	322, 323, 324, 0, 325, 326, 0, 0, 327, 328,
	329, 330, 331, 0, 333, 332, 0, 334, 516, 0,
	335, 336, 0, 0, 337, 338, 0, 0, 339, 340,
	341, 342, 0, 343, 344, 346, 348, 345, 347, 349,
	351, 352, 350, 0, 353, 354, 357, 358, 356, 0,
	355, 0, 0, 0, 359, 0, 517, 360, 518, 362,
	363, 0, 364, 365, 366, 0, 0, 368, 369, 370,
	0, 0, 371, 372, 519, 0, 373, 0, 520, 374,
	367, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	383, 521, 384, 522, 385, 386, 0, 387, 0, 388,
	389, 390, 391, 392, 393, 394, 523, 395, 396, 0,
	397, 398, 399, 400, 401, 0, 403, 404, 405, 402,
	406, 407, 408, 409, 0, 410, 0, 411, 412, 413,
	414, 524, 415, 0, 416, 420, 421, 422, 423, 424,
	425, 426, 0, 432, 433, 427, 429, 430, 431, 428,
	434, 435, 436, 0, 437, 417, 418, 438, 439, 0,
	440, 441, 525, 442, 443, 0, 444, 445, 446, 447,
	419, 448, 452, 453, 449, 450, 451, 526, 0, 455,
	456, 454, 0, 457, 458, 459, 460, 461, 286, 462,
	0, 463, 527, 528, 529, 530, 0, 470, 0, 464,
	465, 531, 466, 532, 0, 467, 468, 469, 0, 471,
	472, 0, 0, 473, 474, 475, 477, 478, 476, 480,
	0, 481, 0, 479, 482, 483, 484, 533, 534, 535,
	0, 486, 485, 536, 586, 0, 216, 0, 487, 488,
	537, 489, 490, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 223, 224, 225, 226, 0, 227,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	228, 1068, 229, 231, 232, 493, 494, 233, 495, 236,
	234, 235, 496, 0, 237, 238, 239, 240, 241, 242,
	243, 0, 0, 244, 497, 498, 1066, 0, 245, 246,
	500, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 0, 254, 255, 256, 253, 0, 257, 0, 258,
	259, 260, 0, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 0, 0, 264, 265, 266, 267, 268, 269,
	501, 502, 0, 270, 271, 0, 273, 272, 0, 274,
	0, 0, 275, 276, 277, 0, 278, 0, 279, 280,
	0, 281, 503, 282, 283, 285, 287, 284, 288, 289,
	290, 291, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 292, 293, 294, 506, 295, 296, 0, 297, 0,
	298, 0, 0, 0, 299, 300, 0, 301, 507, 0,
	508, 302, 0, 303, 304, 305, 306, 509, 510, 511,
	361, 0, 307, 308, 0, 309, 310, 312, 0, 0,
	0, 311, 313, 320, 0, 0, 314, 512, 316, 315,
	317, 318, 319, 513, 0, 514, 0, 321, 0, 515,
	0, 322, 323, 324, 0, 325, 326, 0, 0, 327,
	328, 329, 330, 331, 0, 333, 332, 0, 334, 516,
	0, 335, 336, 0, 0, 337, 338, 0, 0, 339,
	340, 341, 342, 0, 343, 344, 346, 348, 345, 347,
	349, 351, 352, 587, 0, 353, 354, 357, 358, 356,
	0, 355, 0, 0, 0, 359, 0, 517, 360, 518,
	362, 363, 0, 364, 365, 366, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 519, 0, 373, 0, 520,
	374, 367, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 383, 521, 384, 522, 385, 386, 0, 387, 0,
	388, 389, 390, 391, 392, 393, 394, 523, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 403, 404, 405,
	402, 406, 407, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 524, 415, 0, 416, 420, 421, 583, 423,
	424, 425, 426, 0, 432, 433, 427, 429, 430, 431,
	428, 434, 1069, 436, 0, 437, 417, 418, 438, 439,
	0, 440, 441, 525, 442, 443, 0, 444, 445, 446,
	447, 419, 448, 452, 453, 449, 450, 451, 526, 0,
	455, 456, 454, 0, 457, 458, 459, 460, 461, 286,
	462, 0, 463, 582, 528, 529, 530, 0, 470, 0,
	464, 1067, 531, 466, 532, 0, 467, 468, 469, 0,
	471, 472, 0, 0, 473, 474, 475, 477, 478, 476,
	480, 0, 481, 0, 479, 482, 483, 484, 533, 534,
	535, 216, 486, 485, 536, 0, 0, 0, 0, 487,
	488, 537, 489, 490, 491, 0, 0, 0, 222, 223,
	224, 225, 226, 1050, 227, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 228, 230, 229, 231, 232,
	493, 494, 233, 495, 236, 234, 235, 496, 0, 237,
	238, 239, 240, 241, 242, 243, 0, 0, 244, 497,
	498, 499, 0, 245, 246, 500, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 0, 254, 255, 256,
	253, 0, 257, 0, 258, 259, 260, 0, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 0, 0, 264,
	265, 266, 267, 268, 269, 501, 502, 0, 270, 271,
	0, 273, 272, 0, 274, 0, 0, 275, 276, 277,
	0, 278, 0, 279, 280, 0, 281, 503, 282, 283,
	285, 287, 284, 288, 289, 290, 291, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 506,
	295, 296, 0, 297, 0, 298, 0, 0, 0, 299,
	300, 0, 301, 507, 0, 508, 302, 0, 303, 304,
	305, 306, 509, 510, 511, 361, 0, 307, 308, 0,
	309, 310, 312, 0, 0, 0, 311, 313, 320, 0,
	0, 314, 512, 316, 315, 317, 318, 319, 513, 0,
	514, 0, 321, 0, 515, 0, 322, 323, 324, 0,
	325, 326, 0, 0, 327, 328, 329, 330, 331, 0,
	333, 332, 0, 334, 516, 0, 335, 336, 0, 0,
	337, 338, 0, 0, 339, 340, 341, 342, 0, 343,
	344, 346, 348, 345, 347, 349, 351, 352, 350, 0,
	353, 354, 357, 358, 356, 0, 355, 0, 0, 0,
	359, 0, 517, 360, 518, 362, 363, 0, 364, 365,
	366, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	519, 0, 373, 0, 520, 374, 367, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 383, 521, 384, 522,
	385, 386, 0, 387, 0, 388, 389, 390, 391, 392,
	393, 394, 523, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 403, 404, 405, 402, 406, 407, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 524, 415, 0,
	416, 420, 421, 422, 423, 424, 425, 426, 0, 432,
	433, 427, 429, 430, 431, 428, 434, 435, 436, 0,
	437, 417, 418, 438, 439, 0, 440, 441, 525, 442,
	443, 0, 444, 445, 446, 447, 419, 448, 452, 453,
	449, 450, 451, 526, 0, 455, 456, 454, 0, 457,
	458, 459, 460, 461, 286, 462, 0, 463, 527, 528,
	529, 530, 0, 470, 0, 464, 465, 531, 466, 532,
	0, 467, 468, 469, 0, 471, 472, 0, 0, 473,
	474, 475, 477, 478, 476, 480, 0, 481, 0, 479,
	482, 483, 484, 533, 534, 535, 216, 486, 485, 536,
	0, 0, 0, 0, 487, 488, 537, 489, 490, 491,
	0, 0, 0, 222, 223, 224, 225, 226, 592, 227,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	228, 230, 229, 231, 232, 493, 494, 233, 495, 236,
	234, 235, 496, 0, 237, 238, 239, 240, 241, 242,
	243, 0, 0, 244, 497, 498, 499, 0, 245, 246,
	500, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 0, 254, 255, 256, 253, 0, 257, 0, 258,
	259, 260, 0, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 0, 0, 264, 265, 266, 267, 268, 269,
	501, 502, 0, 270, 271, 0, 273, 272, 0, 274,
	0, 0, 275, 276, 277, 0, 278, 0, 279, 280,
	0, 281, 503, 282, 283, 285, 287, 284, 288, 289,
	290, 291, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 292, 293, 294, 506, 295, 296, 0, 297, 0,
	298, 0, 0, 0, 299, 300, 0, 301, 507, 0,
	508, 302, 0, 303, 304, 305, 306, 509, 510, 511,
	361, 0, 307, 308, 0, 309, 310, 312, 0, 0,
	0, 311, 313, 320, 0, 0, 314, 512, 316, 315,
	317, 318, 319, 513, 0, 514, 0, 321, 0, 515,
	0, 322, 323, 324, 0, 325, 326, 0, 0, 327,
	328, 329, 330, 331, 0, 333, 332, 0, 334, 516,
	0, 335, 336, 0, 0, 337, 338, 0, 0, 339,
	340, 341, 342, 0, 343, 344, 346, 348, 345, 347,
	349, 351, 352, 350, 0, 353, 354, 357, 358, 356,
	0, 355, 0, 0, 0, 359, 0, 517, 360, 518,
	362, 363, 0, 364, 365, 366, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 519, 0, 373, 0, 520,
	374, 367, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 383, 521, 384, 522, 385, 386, 0, 387, 0,
	388, 389, 390, 391, 392, 393, 394, 523, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 403, 404, 405,
	402, 406, 407, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 524, 415, 0, 416, 420, 421, 422, 423,
	424, 425, 426, 0, 432, 433, 427, 429, 430, 431,
	428, 434, 435, 436, 0, 437, 417, 418, 438, 439,
	0, 440, 441, 525, 442, 443, 0, 444, 445, 446,
	447, 419, 448, 452, 453, 449, 450, 451, 526, 0,
	455, 456, 454, 0, 457, 458, 459, 460, 461, 286,
	462, 0, 463, 527, 528, 529, 530, 0, 470, 0,
	464, 465, 531, 466, 532, 0, 467, 468, 469, 0,
	471, 472, 0, 0, 473, 474, 475, 477, 478, 476,
	480, 0, 481, 0, 479, 482, 483, 484, 533, 534,
	535, 0, 486, 485, 536, 586, 0, 216, 0, 487,
	488, 537, 489, 490, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 223, 224, 225, 226, 0,
	227, 0, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 228, 230, 229, 231, 232, 493, 494, 233, 495,
	236, 234, 235, 496, 0, 237, 238, 239, 240, 241,
	242, 243, 0, 0, 244, 497, 498, 499, 0, 245,
	576, 500, 0, 0, 0, 247, 248, 249, 250, 251,
	252, 0, 0, 254, 255, 256, 253, 0, 574, 0,
	258, 259, 260, 0, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 0, 0, 264, 265, 266, 267, 268,
	269, 501, 502, 0, 270, 271, 0, 273, 272, 0,
	274, 0, 0, 275, 276, 277, 0, 278, 0, 279,
	280, 0, 281, 503, 282, 283, 285, 287, 284, 288,
	289, 290, 291, 504, 505, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 294, 506, 295, 296, 0, 297,
	0, 298, 0, 0, 0, 299, 300, 0, 301, 507,
	0, 508, 302, 0, 303, 304, 305, 306, 509, 510,
	511, 361, 0, 307, 308, 0, 309, 310, 312, 0,
	0, 0, 311, 313, 320, 0, 0, 314, 512, 316,
	315, 317, 318, 319, 513, 0, 514, 0, 321, 0,
	515, 0, 322, 323, 324, 0, 325, 326, 0, 0,
	327, 328, 329, 330, 331, 0, 333, 332, 0, 334,
	516, 0, 335, 336, 0, 0, 337, 575, 0, 0,
	339, 340, 341, 342, 0, 343, 344, 346, 348, 345,
	347, 349, 351, 352, 587, 0, 353, 354, 357, 358,
	356, 0, 355, 0, 0, 0, 359, 0, 517, 360,
	518, 362, 363, 0, 364, 365, 366, 0, 0, 368,
	369, 370, 0, 0, 371, 372, 519, 0, 373, 0,
	520, 374, 367, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 383, 521, 384, 522, 385, 386, 0, 387,
	0, 388, 389, 390, 391, 392, 393, 394, 523, 395,
	396, 0, 397, 398, 399, 400, 401, 0, 403, 404,
	405, 402, 406, 407, 408, 409, 0, 410, 0, 411,
	412, 413, 414, 577, 415, 0, 416, 420, 421, 583,
	423, 424, 425, 426, 0, 432, 433, 427, 429, 430,
	431, 428, 434, 578, 436, 0, 437, 417, 418, 438,
	439, 0, 440, 441, 525, 442, 443, 0, 444, 445,
	446, 447, 419, 448, 452, 453, 449, 450, 451, 526,
	0, 455, 456, 454, 0, 457, 458, 459, 460, 461,
	286, 462, 0, 463, 582, 528, 529, 530, 0, 470,
	0, 464, 580, 531, 466, 532, 0, 467, 468, 469,
	0, 471, 472, 0, 0, 473, 474, 475, 477, 478,
	476, 480, 0, 481, 0, 479, 482, 483, 484, 533,
	534, 535, 0, 486, 485, 536, 570, 0, 216, 0,
	487, 488, 537, 489, 490, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 223, 224, 225, 226,
	0, 227, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 228, 230, 229, 231, 232, 493, 494, 233,
	495, 236, 234, 235, 496, 0, 237, 238, 239, 240,
	241, 242, 243, 0, 0, 244, 497, 498, 499, 0,
	245, 246, 500, 0, 0, 0, 247, 248, 249, 250,
	251, 252, 0, 0, 254, 255, 256, 253, 0, 257,
	0, 258, 259, 260, 0, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 0, 0, 264, 265, 266, 267,
	268, 269, 501, 502, 0, 270, 271, 0, 273, 272,
	0, 274, 0, 0, 275, 276, 277, 0, 278, 0,
	279, 280, 0, 281, 503, 282, 283, 285, 287, 284,
	288, 289, 290, 291, 504, 505, 0, 0, 0, 0,
	0, 0, 0, 292, 293, 294, 506, 295, 296, 0,
	297, 0, 298, 0, 0, 0, 299, 300, 0, 301,
	507, 0, 508, 302, 0, 303, 304, 305, 306, 509,
	510, 511, 361, 0, 307, 308, 0, 309, 310, 312,
	0, 0, 0, 311, 313, 320, 0, 0, 314, 512,
	316, 315, 317, 318, 319, 513, 0, 514, 0, 321,
	0, 515, 0, 322, 323, 324, 0, 325, 326, 0,
	0, 327, 328, 329, 330, 331, 0, 333, 332, 0,
	334, 516, 0, 335, 336, 0, 0, 337, 338, 0,
	0, 339, 340, 341, 342, 0, 343, 344, 346, 348,
	345, 347, 349, 351, 352, 350, 0, 353, 354, 357,
	358, 356, 0, 355, 0, 0, 0, 359, 0, 517,
	360, 518, 362, 363, 0, 364, 365, 366, 0, 0,
	368, 369, 370, 0, 0, 371, 372, 519, 0, 373,
	0, 520, 374, 367, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 383, 521, 384, 522, 385, 386, 0,
	387, 0, 388, 389, 390, 391, 392, 393, 394, 523,
	395, 396, 0, 397, 398, 399, 400, 401, 0, 403,
	404, 405, 402, 406, 407, 408, 409, 0, 410, 0,
	411, 412, 413, 414, 524, 415, 0, 416, 571, 421,
	422, 423, 424, 425, 426, 0, 432, 433, 427, 429,
	430, 431, 428, 434, 435, 436, 0, 437, 417, 418,
	438, 439, 0, 440, 441, 525, 442, 443, 0, 444,
	445, 446, 447, 419, 448, 452, 453, 449, 450, 451,
	526, 0, 455, 456, 454, 0, 457, 458, 459, 460,
	461, 286, 462, 0, 463, 527, 528, 529, 530, 0,
	470, 0, 464, 465, 531, 466, 532, 0, 467, 468,
	469, 0, 471, 472, 0, 0, 473, 474, 475, 477,
	478, 476, 480, 0, 481, 0, 479, 482, 483, 484,
	533, 534, 535, 0, 486, 485, 536, 568, 0, 216,
	0, 487, 488, 537, 489, 490, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 223, 224, 225,
	226, 0, 227, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 228, 230, 229, 231, 232, 493, 494,
	233, 495, 236, 234, 235, 496, 0, 237, 238, 239,
	240, 241, 242, 243, 0, 0, 244, 497, 498, 499,
	0, 245, 246, 500, 0, 0, 0, 247, 248, 249,
	250, 251, 252, 0, 0, 254, 255, 256, 253, 0,
	257, 0, 258, 259, 260, 0, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 0, 0, 264, 265, 266,
	267, 268, 269, 501, 502, 0, 270, 271, 0, 273,
	272, 0, 274, 0, 0, 275, 276, 277, 0, 278,
	0, 279, 280, 0, 281, 503, 282, 283, 285, 287,
	284, 288, 289, 290, 291, 504, 505, 0, 0, 0,
	0, 0, 0, 0, 292, 293, 294, 506, 295, 296,
	0, 297, 0, 298, 0, 0, 0, 299, 300, 0,
	301, 507, 0, 508, 302, 0, 303, 304, 305, 306,
	509, 510, 511, 361, 0, 307, 308, 0, 309, 310,
	312, 0, 0, 0, 311, 313, 320, 0, 0, 314,
	512, 316, 315, 317, 318, 319, 513, 0, 514, 0,
	321, 0, 515, 0, 322, 323, 324, 0, 325, 326,
	0, 0, 327, 328, 329, 330, 331, 0, 333, 332,
	0, 334, 516, 0, 335, 336, 0, 0, 337, 338,
	0, 0, 339, 340, 341, 342, 0, 343, 344, 346,
	348, 345, 347, 349, 351, 352, 350, 0, 353, 354,
	357, 358, 356, 0, 355, 0, 0, 0, 359, 0,
	517, 360, 518, 362, 363, 0, 364, 365, 366, 0,
	0, 368, 369, 370, 0, 0, 371, 372, 519, 0,
	373, 0, 520, 374, 367, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 383, 521, 384, 522, 385, 386,
	0, 387, 0, 388, 389, 390, 391, 392, 393, 394,
	523, 395, 396, 0, 397, 398, 399, 400, 401, 0,
	403, 404, 405, 402, 406, 407, 408, 409, 0, 410,
	0, 411, 412, 413, 414, 524, 415, 0, 416, 420,
	421, 422, 423, 424, 425, 426, 0, 432, 433, 427,
	429, 430, 431, 428, 434, 435, 436, 0, 437, 417,
	418, 438, 439, 0, 440, 441, 525, 442, 443, 0,
	444, 445, 446, 447, 419, 448, 452, 453, 449, 450,
	451, 526, 0, 455, 456, 454, 0, 457, 458, 459,
	460, 461, 286, 462, 0, 463, 527, 528, 529, 530,
	0, 470, 0, 464, 465, 531, 466, 532, 0, 467,
	468, 469, 0, 471, 472, 0, 0, 473, 474, 475,
	477, 478, 476, 480, 0, 481, 0, 479, 482, 483,
	484, 533, 534, 535, 0, 486, 485, 536, 562, 0,
	216, 0, 487, 488, 537, 489, 490, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 223, 224,
	225, 226, 0, 227, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 228, 230, 229, 231, 232, 493,
	494, 233, 495, 236, 234, 235, 496, 0, 237, 238,
	239, 240, 241, 242, 243, 0, 0, 244, 497, 498,
	499, 0, 245, 246, 500, 0, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 0, 254, 255, 256, 253,
	0, 257, 0, 258, 259, 260, 0, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 0, 0, 264, 265,
	266, 267, 268, 269, 501, 502, 0, 270, 271, 0,
	273, 272, 0, 274, 0, 0, 275, 276, 277, 0,
	278, 0, 279, 280, 0, 281, 503, 282, 283, 285,
	287, 284, 288, 289, 290, 291, 504, 505, 0, 0,
	0, 0, 0, 0, 0, 292, 293, 294, 506, 295,
	296, 0, 297, 0, 298, 0, 0, 0, 299, 300,
	0, 301, 507, 0, 508, 302, 0, 303, 304, 305,
	306, 509, 510, 511, 361, 0, 307, 308, 0, 309,
	310, 312, 0, 0, 0, 311, 313, 320, 0, 0,
	314, 512, 316, 315, 317, 318, 319, 513, 0, 514,
	0, 321, 0, 515, 0, 322, 323, 324, 0, 325,
	326, 0, 0, 327, 328, 329, 330, 331, 0, 333,
	332, 0, 334, 516, 0, 335, 336, 0, 0, 337,
	338, 0, 0, 339, 340, 341, 342, 0, 343, 344,
	346, 348, 345, 347, 349, 351, 352, 350, 0, 353,
	354, 357, 358, 356, 0, 355, 0, 0, 0, 359,
	0, 517, 360, 518, 362, 363, 0, 364, 365, 366,
	0, 0, 368, 369, 370, 0, 0, 371, 372, 519,
	0, 373, 0, 520, 374, 367, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 383, 521, 384, 522, 385,
	386, 0, 387, 0, 388, 389, 390, 391, 392, 393,
	394, 523, 395, 396, 0, 397, 398, 399, 400, 401,
	0, 403, 404, 405, 402, 406, 407, 408, 409, 0,
	410, 0, 411, 412, 413, 414, 524, 415, 0, 416,
	420, 421, 422, 423, 424, 425, 426, 0, 432, 433,
	427, 429, 430, 431, 428, 434, 435, 436, 0, 437,
	417, 418, 438, 439, 0, 440, 441, 525, 442, 443,
	0, 444, 445, 446, 447, 419, 448, 452, 453, 449,
	450, 451, 526, 0, 455, 456, 454, 0, 457, 458,
	459, 460, 461, 286, 462, 0, 463, 527, 528, 529,
	530, 0, 470, 0, 464, 465, 531, 466, 532, 0,
	467, 468, 469, 0, 471, 472, 0, 0, 473, 474,
	475, 477, 478, 476, 480, 0, 481, 0, 479, 482,
	483, 484, 533, 534, 535, 0, 486, 485, 536, 540,
	0, 216, 0, 487, 488, 537, 489, 490, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 223,
	224, 225, 226, 0, 227, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 228, 230, 229, 231, 232,
	493, 494, 233, 495, 236, 234, 235, 496, 0, 237,
	238, 239, 240, 241, 242, 243, 0, 0, 244, 497,
	498, 499, 0, 245, 246, 500, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 0, 254, 255, 256,
	253, 0, 257, 0, 258, 259, 260, 0, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 0, 0, 264,
	265, 266, 267, 268, 269, 501, 502, 0, 270, 271,
	0, 273, 272, 0, 274, 0, 0, 275, 276, 277,
	0, 278, 0, 279, 280, 0, 281, 503, 282, 283,
	285, 287, 284, 288, 289, 290, 291, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 506,
	295, 296, 0, 297, 0, 298, 0, 0, 0, 299,
	300, 0, 301, 507, 0, 508, 302, 0, 303, 304,
	305, 306, 509, 510, 511, 361, 0, 307, 308, 0,
	309, 310, 312, 0, 0, 0, 311, 313, 320, 0,
	0, 314, 512, 316, 315, 317, 318, 319, 513, 0,
	514, 0, 321, 0, 515, 0, 322, 323, 324, 0,
	325, 326, 0, 0, 327, 328, 329, 330, 331, 0,
	333, 332, 0, 334, 516, 0, 335, 336, 0, 0,
	337, 338, 0, 0, 339, 340, 341, 342, 0, 343,
	344, 346, 348, 345, 347, 349, 351, 352, 350, 0,
	353, 354, 357, 358, 356, 0, 355, 0, 0, 0,
	359, 0, 517, 360, 518, 362, 363, 0, 364, 365,
	366, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	519, 0, 373, 0, 520, 374, 367, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 383, 521, 384, 522,
	385, 386, 0, 387, 0, 388, 389, 390, 391, 392,
	393, 394, 523, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 403, 404, 405, 402, 406, 407, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 524, 415, 0,
	416, 420, 421, 422, 423, 424, 425, 426, 0, 432,
	433, 427, 429, 430, 431, 428, 434, 435, 436, 0,
	437, 417, 418, 438, 439, 0, 440, 441, 525, 442,
	443, 0, 444, 445, 446, 447, 419, 448, 452, 453,
	449, 450, 451, 526, 0, 455, 456, 454, 0, 457,
	458, 459, 460, 461, 286, 462, 0, 463, 527, 528,
	529, 530, 0, 470, 0, 464, 465, 531, 466, 532,
	0, 467, 468, 469, 0, 471, 472, 0, 0, 473,
	474, 475, 477, 478, 476, 480, 0, 481, 0, 479,
	482, 483, 484, 533, 534, 535, 216, 486, 485, 536,
	0, 0, 0, 0, 487, 488, 537, 489, 490, 491,
	0, 0, 0, 222, 223, 224, 225, 226, 0, 227,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	228, 230, 229, 231, 232, 493, 494, 233, 495, 236,
	234, 235, 496, 0, 237, 238, 239, 240, 241, 242,
	243, 0, 0, 244, 497, 498, 499, 0, 245, 246,
	500, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 0, 254, 255, 256, 253, 0, 257, 0, 258,
	259, 260, 0, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 0, 0, 264, 265, 266, 267, 268, 269,
	501, 502, 0, 270, 271, 0, 273, 272, 0, 274,
	0, 0, 275, 276, 277, 0, 278, 0, 279, 280,
	0, 281, 503, 282, 283, 285, 287, 284, 288, 289,
	290, 291, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 292, 293, 294, 506, 295, 296, 0, 297, 0,
	298, 0, 0, 0, 299, 300, 0, 301, 507, 0,
	508, 302, 0, 303, 304, 305, 306, 509, 510, 511,
	361, 0, 307, 308, 0, 309, 310, 312, 0, 0,
	0, 311, 313, 320, 0, 0, 314, 512, 316, 315,
	317, 318, 319, 513, 0, 514, 0, 321, 0, 515,
	0, 322, 323, 324, 0, 325, 326, 0, 0, 327,
	328, 329, 330, 331, 0, 333, 332, 0, 334, 516,
	0, 335, 336, 0, 0, 337, 338, 0, 0, 339,
	340, 341, 342, 0, 343, 344, 346, 348, 345, 347,
	349, 351, 352, 350, 0, 353, 354, 357, 358, 356,
	0, 355, 0, 0, 0, 359, 0, 517, 360, 518,
	362, 363, 0, 364, 365, 366, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 519, 0, 373, 0, 520,
	374, 367, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 383, 521, 384, 522, 385, 386, 0, 387, 0,
	388, 389, 390, 391, 392, 393, 394, 523, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 403, 404, 405,
	402, 406, 407, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 524, 415, 0, 416, 420, 421, 422, 423,
	424, 425, 426, 0, 432, 433, 427, 429, 430, 431,
	428, 434, 435, 436, 0, 437, 417, 418, 438, 439,
	0, 440, 441, 525, 442, 443, 0, 444, 445, 446,
	447, 419, 448, 452, 453, 449, 450, 451, 526, 0,
	455, 456, 454, 0, 457, 458, 459, 460, 461, 286,
	462, 0, 463, 527, 528, 529, 530, 0, 470, 0,
	464, 465, 531, 466, 532, 0, 467, 468, 469, 0,
	471, 472, 0, 0, 473, 474, 475, 477, 478, 476,
	480, 0, 481, 0, 479, 482, 483, 484, 533, 534,
	535, 216, 486, 485, 536, 0, 0, 0, 0, 487,
	488, 537, 489, 490, 491, 0, 0, 0, 222, 223,
	224, 225, 226, 0, 227, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 228, 230, 229, 231, 232,
	493, 494, 233, 495, 236, 234, 235, 496, 0, 237,
	238, 239, 240, 241, 242, 243, 0, 0, 244, 497,
	498, 499, 0, 245, 246, 500, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 0, 254, 255, 256,
	253, 0, 257, 0, 258, 259, 260, 0, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 0, 0, 264,
	265, 266, 267, 268, 269, 501, 502, 0, 270, 271,
	0, 273, 272, 0, 274, 0, 0, 275, 276, 277,
	0, 278, 0, 279, 280, 0, 281, 503, 282, 283,
	285, 287, 284, 288, 289, 290, 291, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 506,
	295, 296, 0, 297, 0, 298, 0, 0, 0, 299,
	300, 0, 301, 507, 0, 508, 302, 0, 303, 304,
	305, 306, 2874, 510, 511, 361, 0, 307, 308, 0,
	309, 310, 312, 0, 0, 0, 311, 313, 320, 0,
	0, 314, 512, 316, 315, 317, 318, 319, 513, 0,
	514, 0, 321, 0, 515, 0, 322, 323, 324, 0,
	325, 326, 0, 0, 327, 328, 329, 330, 331, 0,
	333, 332, 0, 334, 516, 0, 335, 336, 0, 0,
	337, 338, 0, 0, 339, 340, 341, 342, 0, 343,
	344, 346, 348, 345, 347, 349, 351, 352, 350, 0,
	353, 354, 357, 358, 356, 0, 355, 0, 0, 0,
	359, 0, 517, 360, 518, 362, 363, 0, 364, 365,
	366, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	519, 0, 373, 0, 520, 374, 367, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 383, 521, 384, 522,
	385, 386, 0, 387, 0, 388, 389, 390, 391, 392,
	393, 394, 523, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 403, 404, 405, 402, 406, 407, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 524, 415, 0,
	416, 420, 421, 422, 423, 424, 425, 426, 0, 432,
	433, 427, 429, 430, 431, 428, 434, 435, 436, 0,
	437, 417, 418, 438, 439, 0, 440, 441, 525, 442,
	443, 0, 444, 445, 446, 447, 419, 448, 452, 453,
	449, 450, 451, 526, 0, 455, 456, 454, 0, 457,
	458, 459, 460, 461, 286, 462, 0, 463, 527, 528,
	529, 530, 0, 470, 0, 464, 465, 531, 466, 532,
	0, 467, 468, 469, 0, 471, 472, 0, 0, 473,
	474, 475, 477, 478, 476, 480, 0, 481, 0, 479,
	482, 483, 484, 533, 534, 535, 216, 486, 485, 536,
	0, 0, 0, 0, 487, 488, 537, 489, 490, 491,
	0, 0, 0, 222, 223, 224, 225, 226, 0, 227,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	228, 230, 229, 231, 232, 493, 494, 233, 495, 236,
	234, 235, 496, 0, 237, 238, 239, 240, 241, 242,
	243, 0, 0, 244, 497, 498, 499, 0, 245, 246,
	500, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 0, 254, 255, 256, 253, 0, 257, 0, 258,
	259, 260, 0, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 0, 0, 264, 265, 266, 267, 268, 269,
	501, 502, 0, 270, 271, 0, 273, 272, 0, 274,
	0, 0, 275, 276, 277, 0, 278, 0, 279, 280,
	0, 281, 503, 282, 283, 285, 287, 284, 288, 289,
	290, 291, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 292, 293, 294, 506, 295, 296, 0, 297, 0,
	298, 0, 0, 0, 299, 300, 0, 301, 507, 0,
	508, 302, 0, 303, 304, 305, 306, 2797, 510, 511,
	361, 0, 307, 308, 0, 309, 310, 312, 0, 0,
	0, 311, 313, 320, 0, 0, 314, 512, 316, 315,
	317, 318, 319, 513, 0, 514, 0, 321, 0, 515,
	0, 322, 323, 324, 0, 325, 326, 0, 0, 327,
	328, 329, 330, 331, 0, 333, 332, 0, 334, 516,
	0, 335, 336, 0, 0, 337, 338, 0, 0, 339,
	340, 341, 342, 0, 343, 344, 346, 348, 345, 347,
	349, 351, 352, 350, 0, 353, 354, 357, 358, 356,
	0, 355, 0, 0, 0, 359, 0, 517, 360, 518,
	362, 363, 0, 364, 365, 366, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 519, 0, 373, 0, 520,
	374, 367, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 383, 521, 384, 522, 385, 386, 0, 387, 0,
	388, 389, 390, 391, 392, 393, 394, 523, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 403, 404, 405,
	402, 406, 407, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 524, 415, 0, 416, 420, 421, 422, 423,
	424, 425, 426, 0, 432, 433, 427, 429, 430, 431,
	428, 434, 435, 436, 0, 437, 417, 418, 438, 439,
	0, 440, 441, 525, 442, 443, 0, 444, 445, 446,
	447, 419, 448, 452, 453, 449, 450, 451, 526, 0,
	455, 456, 454, 0, 457, 458, 459, 460, 461, 286,
	462, 0, 463, 527, 528, 529, 530, 0, 470, 0,
	464, 465, 531, 466, 532, 0, 467, 468, 469, 0,
	471, 472, 0, 0, 473, 474, 475, 477, 478, 476,
	480, 0, 481, 0, 479, 482, 483, 484, 533, 534,
	535, 216, 486, 485, 536, 0, 0, 0, 0, 487,
	488, 537, 489, 490, 491, 0, 0, 0, 222, 223,
	224, 225, 226, 0, 227, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 228, 230, 229, 231, 232,
	493, 494, 233, 495, 236, 234, 235, 496, 0, 237,
	238, 239, 240, 241, 242, 243, 0, 0, 244, 497,
	498, 499, 0, 245, 246, 500, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 0, 254, 255, 256,
	253, 0, 257, 0, 258, 259, 260, 0, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 0, 0, 264,
	265, 266, 267, 268, 269, 501, 502, 0, 270, 271,
	0, 273, 272, 0, 274, 0, 0, 275, 276, 277,
	0, 278, 0, 279, 280, 0, 281, 503, 282, 283,
	285, 287, 284, 288, 289, 290, 291, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 506,
	295, 296, 0, 297, 0, 298, 0, 0, 0, 299,
	300, 0, 301, 507, 0, 508, 302, 0, 303, 304,
	305, 306, 2795, 510, 511, 361, 0, 307, 308, 0,
	309, 310, 312, 0, 0, 0, 311, 313, 320, 0,
	0, 314, 512, 316, 315, 317, 318, 319, 513, 0,
	514, 0, 321, 0, 515, 0, 322, 323, 324, 0,
	325, 326, 0, 0, 327, 328, 329, 330, 331, 0,
	333, 332, 0, 334, 516, 0, 335, 336, 0, 0,
	337, 338, 0, 0, 339, 340, 341, 342, 0, 343,
	344, 346, 348, 345, 347, 349, 351, 352, 350, 0,
	353, 354, 357, 358, 356, 0, 355, 0, 0, 0,
	359, 0, 517, 360, 518, 362, 363, 0, 364, 365,
	366, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	519, 0, 373, 0, 520, 374, 367, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 383, 521, 384, 522,
	385, 386, 0, 387, 0, 388, 389, 390, 391, 392,
	393, 394, 523, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 403, 404, 405, 402, 406, 407, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 524, 415, 0,
	416, 420, 421, 422, 423, 424, 425, 426, 0, 432,
	433, 427, 429, 430, 431, 428, 434, 435, 436, 0,
	437, 417, 418, 438, 439, 0, 440, 441, 525, 442,
	443, 0, 444, 445, 446, 447, 419, 448, 452, 453,
	449, 450, 451, 526, 0, 455, 456, 454, 0, 457,
	458, 459, 460, 461, 286, 462, 0, 463, 527, 528,
	529, 530, 0, 470, 0, 464, 465, 531, 466, 532,
	0, 467, 468, 469, 0, 471, 472, 0, 0, 473,
	474, 475, 477, 478, 476, 480, 0, 481, 0, 479,
	482, 483, 484, 533, 534, 535, 216, 486, 485, 536,
	0, 0, 0, 0, 487, 488, 537, 489, 490, 491,
	0, 0, 0, 222, 223, 224, 225, 226, 0, 227,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	228, 230, 229, 231, 232, 493, 494, 233, 495, 236,
	234, 235, 496, 0, 237, 238, 239, 240, 241, 242,
	243, 0, 0, 244, 497, 498, 499, 0, 245, 246,
	500, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 0, 254, 255, 256, 253, 0, 257, 0, 258,
	259, 260, 0, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 0, 0, 264, 265, 266, 267, 268, 269,
	501, 502, 0, 270, 271, 0, 273, 272, 0, 274,
	0, 0, 275, 276, 277, 0, 278, 0, 279, 280,
	0, 281, 503, 282, 283, 285, 287, 284, 288, 289,
	290, 291, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 292, 293, 294, 506, 295, 296, 0, 297, 0,
	298, 0, 0, 0, 299, 300, 0, 301, 507, 0,
	508, 302, 0, 303, 304, 305, 306, 2782, 510, 511,
	361, 0, 307, 308, 0, 309, 310, 312, 0, 0,
	0, 311, 313, 320, 0, 0, 314, 512, 316, 315,
	317, 318, 319, 513, 0, 514, 0, 321, 0, 515,
	0, 322, 323, 324, 0, 325, 326, 0, 0, 327,
	328, 329, 330, 331, 0, 333, 332, 0, 334, 516,
	0, 335, 336, 0, 0, 337, 338, 0, 0, 339,
	340, 341, 342, 0, 343, 344, 346, 348, 345, 347,
	349, 351, 352, 350, 0, 353, 354, 357, 358, 356,
	0, 355, 0, 0, 0, 359, 0, 517, 360, 518,
	362, 363, 0, 364, 365, 366, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 519, 0, 373, 0, 520,
	374, 367, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 383, 521, 384, 522, 385, 386, 0, 387, 0,
	388, 389, 390, 391, 392, 393, 394, 523, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 403, 404, 405,
	402, 406, 407, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 524, 415, 0, 416, 420, 421, 422, 423,
	424, 425, 426, 0, 432, 433, 427, 429, 430, 431,
	428, 434, 435, 436, 0, 437, 417, 418, 438, 439,
	0, 440, 441, 525, 442, 443, 0, 444, 445, 446,
	447, 419, 448, 452, 453, 449, 450, 451, 526, 0,
	455, 456, 454, 0, 457, 458, 459, 460, 461, 286,
	462, 0, 463, 527, 528, 529, 530, 0, 470, 0,
	464, 465, 531, 466, 532, 0, 467, 468, 469, 0,
	471, 472, 0, 0, 473, 474, 475, 477, 478, 476,
	480, 0, 481, 0, 479, 482, 483, 484, 533, 534,
	535, 216, 486, 485, 536, 0, 0, 0, 0, 487,
	488, 537, 489, 490, 491, 0, 0, 0, 222, 223,
	224, 225, 226, 0, 227, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 228, 230, 229, 231, 232,
	493, 494, 233, 495, 236, 234, 235, 496, 0, 237,
	238, 239, 240, 241, 242, 243, 0, 0, 244, 497,
	498, 499, 0, 245, 246, 500, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 0, 254, 255, 256,
	253, 0, 257, 0, 258, 259, 260, 0, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 0, 0, 264,
	265, 266, 267, 268, 269, 501, 502, 0, 270, 271,
	0, 273, 272, 0, 274, 0, 0, 275, 276, 277,
	0, 278, 0, 279, 280, 0, 281, 503, 282, 283,
	285, 287, 284, 288, 289, 290, 291, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 506,
	295, 296, 0, 297, 0, 298, 0, 0, 0, 299,
	300, 0, 301, 507, 0, 508, 302, 0, 303, 304,
	305, 306, 2437, 510, 511, 361, 0, 307, 308, 0,
	309, 310, 312, 0, 0, 0, 311, 313, 320, 0,
	0, 314, 512, 316, 315, 317, 318, 319, 513, 0,
	514, 0, 321, 0, 515, 0, 322, 323, 324, 0,
	325, 326, 0, 0, 327, 328, 329, 330, 331, 0,
	333, 332, 0, 334, 516, 0, 335, 336, 0, 0,
	337, 338, 0, 0, 339, 340, 341, 342, 0, 343,
	344, 346, 348, 345, 347, 349, 351, 352, 350, 0,
	353, 354, 357, 358, 356, 0, 355, 0, 0, 0,
	359, 0, 517, 360, 518, 362, 363, 0, 364, 365,
	366, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	519, 0, 373, 0, 520, 374, 367, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 383, 521, 384, 522,
	385, 386, 0, 387, 0, 388, 389, 390, 391, 392,
	393, 394, 523, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 403, 404, 405, 402, 406, 407, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 524, 415, 0,
	416, 420, 421, 422, 423, 424, 425, 426, 0, 432,
	433, 427, 429, 430, 431, 428, 434, 435, 436, 0,
	437, 417, 418, 438, 439, 0, 440, 441, 525, 442,
	443, 0, 444, 445, 446, 447, 419, 448, 452, 453,
	449, 450, 451, 526, 0, 455, 456, 454, 0, 457,
	458, 459, 460, 461, 286, 462, 0, 463, 527, 528,
	529, 530, 0, 470, 0, 464, 465, 531, 466, 532,
	0, 467, 468, 469, 0, 471, 472, 0, 0, 473,
	474, 475, 477, 478, 476, 480, 0, 481, 0, 479,
	482, 483, 484, 533, 534, 535, 216, 486, 485, 536,
	0, 0, 0, 0, 487, 488, 537, 489, 490, 491,
	0, 0, 0, 222, 223, 224, 225, 226, 0, 227,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	228, 230, 229, 231, 232, 493, 494, 233, 495, 236,
	234, 235, 496, 0, 237, 238, 239, 240, 241, 242,
	243, 0, 0, 244, 497, 498, 499, 0, 245, 246,
	500, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 0, 254, 255, 256, 253, 0, 257, 0, 258,
	259, 260, 0, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 0, 0, 264, 265, 266, 267, 268, 269,
	501, 502, 0, 270, 271, 0, 273, 272, 0, 274,
	0, 0, 275, 276, 277, 0, 278, 0, 279, 280,
	0, 281, 503, 282, 283, 285, 287, 284, 288, 289,
	290, 291, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 292, 293, 294, 506, 295, 296, 0, 297, 0,
	298, 0, 0, 0, 299, 300, 0, 301, 507, 0,
	508, 302, 0, 303, 304, 305, 306, 509, 510, 511,
	361, 0, 307, 308, 0, 309, 310, 312, 0, 0,
	0, 311, 313, 320, 0, 0, 314, 512, 316, 315,
	317, 318, 319, 513, 0, 514, 0, 321, 0, 515,
	0, 322, 323, 324, 0, 325, 326, 0, 0, 327,
	328, 329, 330, 331, 0, 333, 332, 0, 334, 516,
	0, 335, 336, 0, 0, 337, 338, 0, 0, 339,
	340, 341, 342, 0, 343, 344, 346, 348, 345, 347,
	349, 351, 352, 350, 0, 353, 354, 357, 358, 356,
	0, 355, 0, 0, 0, 359, 0, 517, 360, 518,
	362, 363, 0, 364, 365, 366, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 519, 0, 373, 0, 520,
	374, 367, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 383, 521, 384, 522, 385, 386, 0, 387, 0,
	388, 389, 390, 391, 392, 393, 394, 523, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 403, 404, 405,
	402, 406, 407, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 524, 415, 0, 416, 571, 421, 422, 423,
	424, 425, 426, 0, 432, 433, 427, 429, 430, 431,
	428, 434, 435, 436, 0, 437, 417, 418, 438, 439,
	0, 440, 441, 525, 442, 443, 0, 444, 445, 446,
	447, 419, 448, 452, 453, 449, 450, 451, 526, 0,
	455, 456, 454, 0, 457, 458, 459, 460, 461, 286,
	462, 0, 463, 527, 528, 529, 530, 0, 470, 0,
	464, 465, 531, 466, 532, 0, 467, 468, 469, 0,
	471, 472, 0, 0, 473, 474, 475, 477, 478, 476,
	480, 0, 481, 0, 479, 482, 483, 484, 533, 534,
	535, 216, 486, 485, 536, 0, 0, 0, 0, 487,
	488, 537, 489, 490, 491, 0, 0, 0, 222, 223,
	224, 225, 226, 0, 227, 0, 0, 0, 0, 0,
	492, 0, 1892, 0, 0, 228, 230, 229, 231, 232,
	493, 494, 233, 495, 236, 234, 235, 496, 0, 237,
	238, 239, 240, 241, 242, 243, 0, 0, 244, 497,
	498, 499, 0, 245, 246, 500, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 0, 254, 255, 256,
	253, 0, 257, 0, 258, 259, 260, 0, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 0, 0, 264,
	265, 266, 267, 268, 269, 501, 502, 0, 270, 271,
	0, 273, 272, 0, 274, 0, 0, 275, 276, 277,
	0, 278, 0, 279, 280, 0, 281, 503, 282, 283,
	285, 287, 284, 288, 289, 290, 291, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 506,
	295, 296, 0, 297, 0, 298, 0, 0, 0, 299,
	300, 0, 301, 507, 0, 508, 302, 0, 303, 304,
	305, 306, 509, 510, 511, 361, 0, 307, 308, 0,
	309, 310, 312, 0, 0, 0, 311, 313, 320, 0,
	0, 314, 512, 316, 315, 317, 318, 319, 513, 0,
	514, 0, 321, 0, 515, 0, 322, 323, 324, 0,
	325, 326, 0, 0, 327, 328, 329, 330, 331, 0,
	333, 332, 0, 334, 516, 0, 335, 336, 0, 0,
	337, 338, 0, 0, 339, 340, 341, 342, 0, 343,
	344, 346, 348, 345, 347, 349, 351, 352, 350, 0,
	353, 354, 357, 358, 356, 0, 355, 0, 0, 0,
	359, 0, 517, 360, 518, 362, 363, 0, 364, 365,
	366, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	519, 0, 373, 0, 520, 374, 367, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 383, 521, 384, 522,
	385, 386, 0, 387, 0, 388, 389, 390, 391, 392,
	393, 394, 523, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 403, 404, 405, 402, 406, 407, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 524, 415, 0,
	416, 420, 421, 422, 423, 424, 425, 426, 0, 432,
	433, 427, 429, 430, 431, 428, 434, 435, 436, 0,
	0, 417, 418, 438, 439, 0, 440, 441, 525, 442,
	443, 0, 444, 445, 446, 447, 419, 448, 452, 453,
	449, 450, 451, 526, 0, 455, 456, 454, 0, 457,
	458, 459, 460, 461, 286, 462, 0, 463, 527, 528,
	529, 530, 0, 470, 0, 464, 465, 531, 466, 532,
	0, 467, 468, 469, 0, 471, 472, 0, 0, 473,
	474, 475, 477, 478, 476, 480, 0, 481, 0, 479,
	482, 483, 484, 533, 534, 535, 216, 486, 485, 536,
	0, 0, 0, 0, 487, 488, 537, 489, 490, 491,
	0, 0, 0, 222, 223, 224, 225, 226, 0, 227,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	228, 230, 229, 231, 232, 493, 494, 233, 495, 236,
	234, 235, 496, 0, 237, 238, 239, 240, 241, 242,
	243, 0, 0, 244, 497, 498, 499, 0, 245, 246,
	500, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 0, 254, 255, 256, 253, 0, 257, 0, 258,
	259, 260, 0, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 0, 0, 264, 265, 266, 267, 268, 269,
	501, 502, 0, 270, 271, 0, 273, 272, 0, 274,
	0, 0, 275, 276, 277, 0, 278, 0, 279, 280,
	0, 281, 503, 282, 283, 285, 287, 284, 288, 289,
	290, 291, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 292, 293, 294, 506, 295, 296, 0, 297, 0,
	298, 0, 0, 0, 299, 300, 0, 301, 507, 0,
	508, 302, 0, 303, 304, 305, 306, 1307, 510, 511,
	361, 0, 307, 308, 0, 309, 310, 312, 0, 0,
	0, 311, 313, 320, 0, 0, 314, 512, 316, 315,
	317, 318, 319, 513, 0, 514, 0, 321, 0, 515,
	0, 322, 323, 324, 0, 325, 326, 0, 0, 327,
	328, 329, 330, 331, 0, 333, 332, 0, 334, 516,
	0, 335, 336, 0, 0, 337, 338, 0, 0, 339,
	340, 341, 342, 0, 343, 344, 346, 348, 345, 347,
	349, 351, 352, 350, 0, 353, 354, 357, 358, 356,
	0, 355, 0, 0, 0, 359, 0, 517, 360, 518,
	362, 363, 0, 364, 365, 366, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 519, 0, 373, 0, 520,
	374, 367, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 383, 521, 384, 522, 385, 386, 0, 387, 0,
	388, 389, 390, 391, 392, 393, 394, 523, 395, 396,
	0, 397, 398, 399, 400, 401, 0, 403, 404, 405,
	402, 406, 407, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 524, 415, 0, 416, 420, 421, 422, 423,
	424, 425, 426, 0, 432, 433, 427, 429, 430, 431,
	428, 434, 435, 436, 0, 437, 417, 418, 438, 439,
	0, 440, 441, 525, 442, 443, 0, 444, 445, 446,
	447, 419, 448, 452, 453, 449, 450, 451, 526, 0,
	455, 456, 454, 0, 457, 458, 459, 460, 461, 286,
	462, 0, 463, 527, 528, 529, 530, 0, 470, 0,
	464, 465, 531, 466, 532, 0, 467, 468, 469, 0,
	471, 472, 0, 0, 473, 474, 475, 477, 478, 476,
	480, 0, 481, 0, 479, 482, 483, 484, 533, 534,
	535, 216, 486, 485, 536, 0, 0, 0, 0, 487,
	488, 537, 489, 490, 491, 0, 0, 0, 222, 223,
	224, 225, 226, 0, 227, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 228, 230, 229, 231, 232,
	493, 494, 233, 495, 236, 234, 235, 496, 0, 237,
	238, 239, 240, 241, 242, 243, 0, 0, 244, 497,
	498, 499, 0, 245, 246, 500, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 0, 254, 255, 256,
	253, 0, 257, 0, 258, 259, 260, 0, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 0, 0, 264,
	265, 266, 267, 268, 269, 501, 502, 0, 270, 271,
	0, 273, 272, 0, 274, 0, 0, 275, 276, 277,
	0, 278, 0, 279, 280, 0, 281, 503, 282, 283,
	285, 287, 284, 288, 289, 290, 291, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 506,
	295, 296, 0, 297, 0, 298, 0, 0, 0, 299,
	300, 0, 301, 507, 0, 508, 302, 0, 303, 304,
	305, 306, 1247, 510, 511, 361, 0, 307, 308, 0,
	309, 310, 312, 0, 0, 0, 311, 313, 320, 0,
	0, 314, 512, 316, 315, 317, 318, 319, 513, 0,
	514, 0, 321, 0, 515, 0, 322, 323, 324, 0,
	325, 326, 0, 0, 327, 328, 329, 330, 331, 0,
	333, 332, 0, 334, 516, 0, 335, 336, 0, 0,
	337, 338, 0, 0, 339, 340, 341, 342, 0, 343,
	344, 346, 348, 345, 347, 349, 351, 352, 350, 0,
	353, 354, 357, 358, 356, 0, 355, 0, 0, 0,
	359, 0, 517, 360, 518, 362, 363, 0, 364, 365,
	366, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	519, 0, 373, 0, 520, 374, 367, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 383, 521, 384, 522,
	385, 386, 0, 387, 0, 388, 389, 390, 391, 392,
	393, 394, 523, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 403, 404, 405, 402, 406, 407, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 524, 415, 0,
	416, 420, 421, 422, 423, 424, 425, 426, 0, 432,
	433, 427, 429, 430, 431, 428, 434, 435, 436, 0,
	437, 417, 418, 438, 439, 0, 440, 441, 525, 442,
	443, 0, 444, 445, 446, 447, 419, 448, 452, 453,
	449, 450, 451, 526, 0, 455, 456, 454, 0, 457,
	458, 459, 460, 461, 286, 462, 0, 463, 527, 528,
	529, 530, 0, 470, 0, 464, 465, 531, 466, 532,
	0, 467, 468, 469, 0, 471, 472, 0, 0, 473,
	474, 475, 477, 478, 476, 480, 0, 481, 0, 479,
	482, 483, 484, 533, 534, 535, 216, 486, 485, 536,
	0, 0, 0, 0, 487, 488, 537, 489, 490, 491,
	0, 0, 0, 222, 223, 224, 225, 226, 0, 227,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	228, 230, 229, 231, 232, 493, 494, 233, 495, 236,
	234, 235, 496, 0, 237, 238, 239, 240, 241, 242,
	243, 0, 0, 244, 497, 498, 499, 0, 245, 246,
	500, 0, 0, 0, 247, 248, 249, 250, 251, 252,
	0, 0, 254, 255, 256, 253, 0, 257, 0, 258,
	259, 260, 0, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 0, 0, 264, 265, 266, 267, 268, 269,
	501, 502, 0, 270, 271, 0, 273, 272, 0, 274,
	0, 0, 275, 276, 277, 0, 278, 0, 279, 280,
	0, 281, 503, 282, 283, 285, 287, 284, 288, 289,
	290, 291, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 292, 293, 294, 506, 295, 296, 0, 297, 0,
	298, 0, 0, 0, 299, 300, 0, 301, 507, 0,
	508, 302, 0, 303, 304, 305, 306, 509, 510, 511,
	361, 0, 307, 308, 0, 309, 310, 312, 0, 0,
	0, 311, 313, 320, 0, 0, 314, 512, 316, 315,
	317, 318, 319, 513, 0, 514, 0, 321, 0, 515,
	0, 322, 323, 324, 0, 325, 326, 0, 0, 327,
	328, 329, 330, 331, 0, 333, 332, 0, 334, 516,
	0, 335, 336, 0, 0, 337, 338, 0, 0, 339,
	340, 341, 342, 0, 343, 344, 346, 348, 345, 347,
	349, 351, 352, 350, 0, 353, 354, 357, 358, 356,
	0, 355, 0, 0, 0, 359, 0, 517, 360, 518,
	362, 363, 0, 364, 365, 366, 0, 0, 368, 369,
	370, 0, 0, 371, 372, 519, 0, 373, 0, 520,
	374, 367, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 383, 521, 384, 522, 385, 386, 0, 387, 0,
	388, 389, 390, 391, 392, 393, 394, 523, 1004, 396,
	0, 397, 398, 399, 400, 401, 0, 403, 404, 405,
	402, 406, 407, 408, 409, 0, 410, 0, 411, 412,
	413, 414, 524, 415, 0, 416, 420, 421, 422, 423,
	424, 425, 426, 0, 432, 433, 427, 429, 430, 431,
	428, 434, 435, 436, 0, 437, 417, 418, 438, 439,
	0, 440, 441, 525, 442, 443, 0, 444, 445, 446,
	447, 419, 448, 452, 453, 449, 450, 451, 526, 0,
	455, 456, 454, 0, 457, 458, 459, 460, 461, 286,
	462, 0, 463, 527, 528, 529, 530, 0, 470, 0,
	464, 465, 531, 466, 532, 0, 467, 468, 469, 0,
	471, 472, 0, 0, 473, 474, 475, 477, 478, 476,
	480, 0, 481, 0, 479, 482, 483, 484, 533, 534,
	535, 216, 486, 485, 536, 0, 0, 0, 0, 487,
	488, 537, 489, 490, 491, 0, 0, 0, 222, 223,
	224, 225, 226, 0, 227, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 228, 230, 229, 231, 232,
	493, 494, 233, 495, 236, 234, 235, 496, 0, 237,
	238, 239, 240, 241, 242, 243, 0, 0, 244, 497,
	498, 499, 0, 245, 246, 500, 0, 0, 0, 247,
	248, 249, 250, 251, 252, 0, 0, 254, 255, 256,
	253, 0, 257, 0, 258, 259, 260, 0, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 0, 0, 264,
	265, 266, 267, 268, 269, 501, 502, 0, 270, 271,
	0, 273, 272, 0, 274, 0, 0, 275, 276, 277,
	0, 278, 0, 279, 280, 0, 281, 503, 282, 283,
	285, 287, 284, 288, 289, 290, 291, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 292, 293, 294, 506,
	295, 296, 0, 297, 0, 298, 0, 0, 0, 299,
	300, 0, 301, 507, 0, 508, 0, 0, 303, 304,
	305, 306, 509, 510, 511, 361, 0, 307, 308, 0,
	309, 310, 312, 0, 0, 0, 311, 313, 320, 0,
	0, 314, 512, 316, 315, 317, 318, 319, 513, 0,
	514, 0, 321, 0, 515, 0, 322, 323, 324, 0,
	325, 326, 0, 0, 327, 328, 329, 330, 331, 0,
	333, 332, 0, 334, 516, 0, 335, 336, 0, 0,
	337, 338, 0, 0, 339, 340, 341, 342, 0, 343,
	344, 346, 348, 345, 347, 349, 351, 352, 350, 0,
	353, 354, 357, 358, 356, 0, 355, 0, 0, 0,
	359, 0, 517, 360, 518, 362, 363, 0, 364, 365,
	366, 0, 0, 368, 369, 370, 0, 0, 371, 372,
	519, 0, 373, 0, 520, 374, 367, 375, 376, 0,
	378, 379, 380, 381, 0, 382, 383, 521, 384, 522,
	385, 386, 0, 387, 0, 388, 389, 390, 391, 0,
	393, 394, 523, 395, 396, 0, 397, 398, 399, 400,
	401, 0, 403, 404, 405, 402, 406, 407, 408, 409,
	0, 410, 0, 411, 412, 413, 414, 524, 0, 0,
	416, 420, 421, 422, 423, 424, 425, 426, 0, 432,
	433, 427, 429, 430, 431, 428, 434, 435, 436, 0,
	437, 417, 418, 438, 439, 0, 440, 441, 525, 442,
	443, 0, 444, 445, 446, 447, 419, 448, 452, 453,
	449, 450, 451, 526, 0, 455, 456, 454, 0, 457,
	458, 459, 460, 461, 286, 462, 0, 463, 527, 528,
	529, 530, 0, 470, 0, 464, 465, 531, 466, 532,
	0, 467, 468, 469, 0, 471, 472, 0, 0, 473,
	474, 475, 477, 478, 476, 480, 0, 481, 0, 479,
	482, 483, 484, 533, 534, 535, 0, 486, 485, 536,
	0, 0, 0, 0, 487, 488, 537, 489, 490, 491,
	1481, 1482, 0, 1514, 1515, 1516, 1524, 1525, 1526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1517,
	1512, 0, 0, 0, 0, 0, 0, 1484, 0, 0,
	0, 0, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1483, 0,
	0, 0, 0, 0, 0, 1481, 1482, 1503, 1514, 1515,
	1516, 1524, 1525, 1526, 0, 1500, 0, 0, 0, 0,
	0, 0, 0, 0, 1517, 1512, 0, 0, 0, 0,
	0, 0, 1484, 0, 0, 0, 0, 1530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1483, 0, 0, 0, 0, 0, 0,
	0, 0, 1503, 0, 1506, 1507, 1508, 1509, 0, 0,
	1500, 0, 0, 0, 1489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1521, 0,
	0, 1531, 0, 0, 0, 1511, 1513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1527, 0, 1528, 0, 1506,
	1507, 1508, 1509, 0, 1498, 1499, 0, 0, 0, 1489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 1521, 0, 0, 1531, 0, 0, 0,
	1511, 1513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1529, 0, 0, 0, 0, 0, 0, 0, 0,
	1527, 0, 1528, 0, 0, 0, 0, 0, 1518, 1498,
	1499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 0, 0, 1529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1505, 0, 1518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 0, 0,
	1481, 1482, 0, 1514, 1515, 1516, 1524, 1525, 1526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 1517,
	1512, 0, 0, 0, 0, 0, 0, 1484, 0, 0,
	0, 0, 1530, 0, 0, 0, 1505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1483, 0,
	0, 0, 1522, 0, 0, 0, 0, 1503, 0, 0,
	0, 0, 0, 0, 0, 1500, 0, 0, 0, 0,
	0, 0, 1520, 0, 0, 1495, 1496, 1502, 1523, 1501,
	1497, 0, 1494, 1492, 1493, 1485, 1486, 1487, 1488, 1490,
	1491, 0, 0, 0, 0, 0, 0, 0, 0, 2644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 1507, 1508, 1509, 0, 0,
	0, 0, 0, 0, 1489, 0, 0, 1520, 0, 0,
	1495, 1496, 1502, 1523, 1501, 1497, 0, 1494, 1492, 1493,
	1485, 1486, 1487, 1488, 1490, 1491, 0, 0, 1521, 0,
	0, 1531, 0, 0, 2643, 1511, 1513, 0, 0, 0,
	0, 0, 0, 1481, 1482, 0, 1514, 1515, 1516, 1524,
	1525, 1526, 0, 0, 0, 1527, 0, 1528, 0, 0,
	0, 0, 1517, 1512, 1498, 1499, 0, 0, 0, 0,
	1484, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	1519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1483, 0, 0, 0, 0, 0, 0, 0, 0,
	1503, 1529, 0, 0, 0, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 0, 0, 0, 1506, 1507, 1508,
	1509, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1481, 1482, 0, 1514, 1515, 1516, 1524, 1525, 1526,
	0, 1521, 0, 0, 1531, 0, 0, 1522, 1511, 1513,
	1517, 1512, 0, 0, 0, 0, 0, 0, 1484, 0,
	0, 0, 0, 1530, 0, 0, 0, 0, 1527, 0,
	1528, 0, 0, 0, 0, 0, 0, 1498, 1499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1483,
	0, 0, 0, 1519, 0, 0, 0, 0, 1503, 0,
	0, 0, 0, 1504, 0, 0, 1500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1529, 0, 0, 0, 0, 0,
	0, 0, 1520, 0, 0, 1495, 1496, 1502, 1523, 1501,
	1497, 1518, 1494, 1492, 1493, 1485, 1486, 1487, 1488, 1490,
	1491, 0, 0, 0, 0, 0, 0, 0, 0, 2122,
	0, 0, 0, 0, 0, 1506, 1507, 1508, 1509, 0,
	0, 0, 0, 0, 0, 1489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 1531, 0, 1505, 0, 1511, 1513, 0, 0,
	0, 0, 0, 0, 1481, 1482, 0, 1514, 1515, 1516,
	1524, 1525, 1526, 0, 0, 0, 1527, 0, 1528, 0,
	1522, 0, 0, 1517, 1512, 1498, 1499, 0, 0, 0,
	0, 1484, 0, 0, 0, 0, 1530, 0, 0, 0,
	0, 1519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1483, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 1529, 0, 0, 0, 0, 0, 0, 1500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1520, 0, 0, 1495, 1496,
	1502, 1523, 1501, 1497, 0, 1494, 1492, 1493, 1485, 1486,
	1487, 1488, 1490, 1491, 0, 0, 0, 0, 3601, 0,
	0, 0, 0, 0, 1510, 0, 0, 0, 1506, 1507,
	1508, 1509, 0, 0, 0, 0, 0, 0, 1489, 0,
	0, 0, 1505, 0, 1481, 1482, 0, 1514, 1515, 1516,
	1524, 1525, 1526, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1521, 1517, 1512, 1531, 0, 0, 1522, 1511,
	1513, 1484, 0, 0, 0, 0, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1527,
	0, 1528, 0, 0, 0, 0, 0, 0, 1498, 1499,
	0, 0, 1483, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 0, 0, 1519, 0, 0, 0, 0, 1500,
	0, 0, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1529, 0, 0, 0, 0,
	0, 0, 0, 1520, 0, 0, 1495, 1496, 1502, 1523,
	1501, 1497, 1518, 1494, 1492, 1493, 1485, 1486, 1487, 1488,
	1490, 1491, 0, 0, 0, 0, 3597, 0, 1506, 1507,
	1508, 1509, 0, 0, 0, 0, 0, 0, 1489, 0,
	0, 0, 0, 0, 1481, 1482, 0, 1514, 1515, 1516,
	1524, 1525, 1526, 0, 0, 0, 0, 1510, 0, 0,
	0, 0, 1521, 1517, 1512, 1531, 0, 0, 0, 1511,
	1513, 1484, 0, 0, 0, 1505, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1527,
	0, 1528, 0, 0, 0, 0, 0, 0, 1498, 1499,
	0, 1522, 1483, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 0, 0, 1519, 0, 0, 0, 0, 1500,
	0, 0, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 1507,
	1508, 1509, 0, 0, 0, 0, 1520, 0, 1489, 1495,
	1496, 1502, 1523, 1501, 1497, 0, 1494, 1492, 1493, 1485,
	1486, 1487, 1488, 1490, 1491, 0, 0, 1510, 0, 3516,
	0, 0, 1521, 0, 0, 1531, 0, 0, 0, 1511,
	1513, 0, 0, 0, 0, 1505, 0, 1481, 1482, 0,
	1514, 1515, 1516, 1524, 1525, 1526, 0, 0, 0, 1527,
	0, 1528, 0, 0, 0, 0, 1517, 1512, 1498, 1499,
	0, 1522, 0, 0, 1484, 0, 0, 0, 0, 1530,
	0, 0, 0, 0, 1519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1483, 0, 0, 0, 0,
	0, 0, 0, 0, 1503, 1529, 0, 0, 0, 0,
	0, 0, 1500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1520, 0, 0, 1495,
	1496, 1502, 1523, 1501, 1497, 0, 1494, 1492, 1493, 1485,
	1486, 1487, 1488, 1490, 1491, 0, 0, 1510, 0, 3515,
	0, 1506, 1507, 1508, 1509, 0, 0, 0, 0, 0,
	0, 1489, 0, 0, 0, 1505, 0, 1481, 1482, 0,
	1514, 1515, 1516, 1524, 1525, 1526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 1517, 1512, 1531, 0,
	0, 1522, 1511, 1513, 1484, 0, 0, 0, 0, 1530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1527, 0, 1528, 0, 0, 0, 0, 0,
	0, 1498, 1499, 0, 0, 1483, 0, 0, 0, 0,
	0, 0, 0, 0, 1503, 0, 0, 1519, 0, 0,
	0, 0, 1500, 0, 0, 0, 0, 1504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1529, 0,
	0, 0, 0, 0, 0, 0, 1520, 0, 0, 1495,
	1496, 1502, 1523, 1501, 1497, 1518, 1494, 1492, 1493, 1485,
	1486, 1487, 1488, 1490, 1491, 0, 0, 0, 0, 3399,
	0, 1506, 1507, 1508, 1509, 0, 0, 0, 0, 0,
	0, 1489, 0, 0, 0, 0, 0, 1481, 1482, 0,
	1514, 1515, 1516, 1524, 1525, 1526, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 1521, 1517, 1512, 1531, 0,
	0, 0, 1511, 1513, 1484, 0, 0, 0, 1505, 1530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1527, 0, 1528, 0, 0, 0, 0, 0,
	0, 1498, 1499, 0, 1522, 1483, 0, 0, 0, 0,
	0, 0, 0, 0, 1503, 0, 0, 1519, 0, 0,
	0, 0, 1500, 0, 0, 0, 0, 1504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 1507, 1508, 1509, 0, 0, 0, 0, 1520,
	0, 1489, 1495, 1496, 1502, 1523, 1501, 1497, 0, 1494,
	1492, 1493, 1485, 1486, 1487, 1488, 1490, 1491, 0, 0,
	1510, 0, 3296, 0, 0, 1521, 0, 0, 1531, 0,
	0, 0, 1511, 1513, 0, 0, 0, 0, 1505, 0,
	1481, 1482, 0, 1514, 1515, 1516, 1524, 1525, 1526, 0,
	0, 0, 1527, 0, 1528, 0, 0, 0, 0, 1517,
	1512, 1498, 1499, 0, 1522, 0, 0, 1484, 0, 0,
	0, 0, 1530, 0, 0, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1483, 0,
	0, 0, 0, 0, 0, 0, 0, 1503, 1529, 0,
	0, 0, 0, 0, 0, 1500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1520,
	0, 0, 1495, 1496, 1502, 1523, 1501, 1497, 0, 1494,
	1492, 1493, 1485, 1486, 1487, 1488, 1490, 1491, 0, 0,
	1510, 0, 3249, 0, 1506, 1507, 1508, 1509, 0, 0,
	0, 0, 0, 0, 1489, 0, 0, 0, 1505, 0,
	1481, 1482, 0, 1514, 1515, 1516, 1524, 1525, 1526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1521, 1517,
	1512, 1531, 0, 0, 1522, 1511, 1513, 1484, 0, 0,
	0, 0, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1527, 0, 1528, 0, 0,
	0, 0, 0, 0, 1498, 1499, 0, 0, 1483, 0,
	0, 0, 0, 0, 0, 0, 0, 1503, 0, 0,
	1519, 0, 0, 0, 0, 1500, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1529, 0, 0, 0, 0, 0, 0, 0, 1520,
	0, 0, 1495, 1496, 1502, 1523, 1501, 1497, 1518, 1494,
	1492, 1493, 1485, 1486, 1487, 1488, 1490, 1491, 0, 0,
	0, 0, 3248, 0, 1506, 1507, 1508, 1509, 0, 0,
	0, 0, 0, 0, 1489, 0, 0, 0, 0, 0,
	1481, 1482, 0, 1514, 1515, 1516, 1524, 1525, 1526, 0,
	0, 0, 0, 1510, 0, 0, 0, 0, 1521, 1517,
	1512, 1531, 0, 0, 0, 1511, 1513, 1484, 0, 0,
	0, 1505, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1527, 0, 1528, 0, 0,
	0, 0, 0, 0, 1498, 1499, 0, 1522, 1483, 0,
	0, 0, 0, 0, 0, 0, 0, 1503, 0, 0,
	1519, 0, 0, 0, 0, 1500, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 1507, 1508, 1509, 0, 0,
	0, 0, 1520, 0, 1489, 1495, 1496, 1502, 1523, 1501,
	1497, 0, 1494, 1492, 1493, 1485, 1486, 1487, 1488, 1490,
	1491, 0, 0, 1510, 0, 3247, 0, 0, 1521, 0,
	0, 1531, 0, 0, 0, 1511, 1513, 0, 0, 0,
	0, 1505, 0, 1481, 1482, 0, 1514, 1515, 1516, 1524,
	1525, 1526, 0, 0, 0, 1527, 0, 1528, 0, 0,
	0, 0, 1517, 1512, 1498, 1499, 0, 1522, 0, 0,
	1484, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	1519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1483, 0, 0, 0, 0, 0, 0, 0, 0,
	1503, 1529, 0, 0, 0, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1520, 0, 0, 1495, 1496, 1502, 1523, 1501,
	1497, 0, 1494, 1492, 1493, 1485, 1486, 1487, 1488, 1490,
	1491, 0, 0, 1510, 0, 3005, 0, 1506, 1507, 1508,
	1509, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 1505, 0, 1481, 1482, 0, 1514, 1515, 1516, 1524,
	1525, 1526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1521, 1517, 1512, 1531, 0, 0, 1522, 1511, 1513,
	1484, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1527, 0,
	1528, 0, 0, 0, 0, 0, 0, 1498, 1499, 0,
	0, 1483, 0, 0, 0, 0, 0, 0, 0, 0,
	1503, 0, 0, 1519, 0, 0, 0, 0, 1500, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1529, 0, 0, 0, 0, 0,
	0, 0, 1520, 0, 0, 1495, 1496, 1502, 1523, 1501,
	1497, 1518, 1494, 1492, 1493, 1485, 1486, 1487, 1488, 1490,
	1491, 0, 0, 0, 0, 2641, 0, 1506, 1507, 1508,
	1509, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 0, 0, 1481, 1482, 0, 1514, 1515, 1516, 1524,
	1525, 1526, 0, 0, 0, 0, 1510, 0, 0, 0,
	0, 1521, 1517, 1512, 1531, 0, 0, 0, 1511, 1513,
	1484, 0, 0, 0, 1505, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1527, 0,
	1528, 0, 0, 0, 0, 0, 0, 1498, 1499, 0,
	1522, 1483, 0, 0, 0, 0, 0, 0, 0, 0,
	1503, 0, 0, 1519, 0, 0, 0, 0, 1500, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 1507, 1508,
	1509, 0, 0, 0, 0, 1520, 0, 1489, 1495, 1496,
	1502, 1523, 1501, 1497, 0, 1494, 1492, 1493, 1485, 1486,
	1487, 1488, 1490, 1491, 0, 0, 1510, 0, 2640, 0,
	0, 1521, 0, 0, 1531, 0, 0, 0, 1511, 1513,
	0, 0, 0, 0, 1505, 0, 1481, 1482, 0, 1514,
	1515, 1516, 1524, 1525, 1526, 0, 0, 0, 1527, 0,
	1528, 0, 0, 0, 0, 1517, 1512, 1498, 1499, 0,
	1522, 0, 0, 1484, 0, 0, 0, 0, 1530, 0,
	0, 0, 0, 1519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1483, 0, 0, 0, 0, 0,
	0, 0, 0, 1503, 1529, 0, 0, 0, 0, 0,
	0, 1500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1520, 0, 0, 1495, 1496,
	1502, 1523, 1501, 1497, 0, 1494, 1492, 1493, 1485, 1486,
	1487, 1488, 1490, 1491, 0, 0, 1510, 0, 2639, 0,
	1506, 1507, 1508, 1509, 0, 0, 0, 0, 0, 0,
	1489, 0, 0, 0, 1505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1521, 0, 0, 1531, 0, 0,
	1522, 1511, 1513, 0, 0, 0, 0, 0, 0, 1481,
	1482, 0, 1514, 1515, 1516, 1524, 1525, 1526, 0, 0,
	0, 1527, 0, 1528, 0, 0, 0, 0, 1517, 1512,
	1498, 1499, 0, 0, 0, 0, 1484, 0, 0, 0,
	0, 1530, 0, 0, 0, 0, 1519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1483, 0, 0,
	0, 0, 0, 0, 0, 0, 1503, 1529, 0, 0,
	0, 0, 0, 0, 1500, 1520, 0, 0, 1495, 1496,
	1502, 1523, 1501, 1497, 1518, 1494, 1492, 1493, 1485, 1486,
	1487, 1488, 1490, 1491, 0, 0, 0, 0, 2638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	0, 0, 0, 1506, 1507, 1508, 1509, 0, 0, 0,
	0, 0, 0, 1489, 3711, 0, 0, 1505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 0, 0,
	1531, 0, 0, 1522, 1511, 1513, 0, 0, 0, 0,
	0, 0, 1481, 1482, 0, 1514, 1515, 1516, 1524, 1525,
	1526, 0, 0, 0, 1527, 0, 1528, 0, 0, 0,
	0, 1517, 1512, 1498, 1499, 0, 0, 2567, 0, 1484,
	0, 0, 0, 0, 1530, 0, 0, 0, 0, 1519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1483, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	1529, 0, 0, 0, 0, 0, 0, 1500, 1520, 0,
	0, 1495, 1496, 1502, 1523, 1501, 1497, 1518, 1494, 1492,
	1493, 1485, 1486, 1487, 1488, 1490, 1491, 0, 0, 2596,
	0, 0, 0, 0, 0, 0, 0, 2568, 0, 3710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 0, 0, 0, 1506, 1507, 1508, 1509,
	0, 0, 0, 0, 0, 0, 1489, 0, 0, 0,
	1505, 0, 1481, 1482, 0, 1514, 1515, 1516, 1524, 1525,
	1526, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1521, 1517, 1512, 1531, 0, 0, 1522, 1511, 1513, 1484,
	0, 0, 0, 0, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 1528,
	0, 0, 0, 0, 0, 0, 1498, 1499, 0, 0,
	1483, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 0, 1519, 0, 0, 0, 0, 1500, 0, 0,
	0, 0, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1529, 0, 0, 0, 0, 0, 0,
	0, 1520, 0, 0, 1495, 1496, 1502, 1523, 1501, 1497,
	1518, 1494, 1492, 1493, 1485, 1486, 1487, 1488, 1490, 1491,
	0, 0, 0, 0, 0, 0, 1506, 1507, 1508, 1509,
	0, 0, 0, 0, 0, 2232, 1489, 0, 2688, 0,
	0, 2687, 1481, 1482, 0, 1514, 1515, 1516, 1524, 1525,
	1526, 0, 0, 0, 0, 1510, 0, 0, 0, 0,
	1521, 1517, 1512, 1531, 0, 0, 2231, 1511, 1513, 1484,
	0, 0, 0, 1505, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 1528,
	0, 0, 0, 0, 0, 0, 1498, 1499, 0, 1522,
	1483, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 0, 1519, 0, 0, 0, 0, 1500, 0, 0,
	0, 0, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 1507, 1508, 1509,
	0, 0, 0, 0, 1520, 0, 1489, 1495, 1496, 1502,
	1523, 1501, 1497, 0, 1494, 1492, 1493, 1485, 1486, 1487,
	1488, 1490, 1491, 0, 0, 1510, 0, 0, 0, 0,
	1521, 0, 0, 1531, 0, 0, 0, 1511, 1513, 0,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 1528,
	0, 0, 0, 0, 0, 0, 1498, 1499, 0, 1522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1520, 0, 0, 1495, 1496, 1502,
	1523, 1501, 1497, 0, 1494, 1492, 1493, 1485, 1486, 1487,
	1488, 1490, 1491, 0, 0, 1510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1481, 1482, 1505, 1514, 1515, 1516, 1524, 1525, 1526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1517, 1512, 0, 0, 0, 0, 0, 0, 1484, 1522,
	0, 0, 0, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1483,
	0, 0, 0, 0, 0, 0, 0, 0, 1503, 0,
	0, 0, 0, 0, 0, 0, 1500, 0, 0, 0,
	0, 0, 0, 1481, 1482, 0, 1514, 1515, 1516, 1524,
	1525, 1526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1517, 1512, 0, 0, 0, 0, 0, 0,
	1484, 0, 0, 0, 1520, 1530, 0, 1495, 1496, 1502,
	1523, 1501, 1497, 0, 1494, 1492, 1493, 1485, 1486, 1487,
	1488, 1490, 1491, 0, 0, 1506, 1507, 1508, 1509, 0,
	0, 1483, 0, 0, 0, 1489, 0, 0, 0, 0,
	1503, 0, 0, 0, 0, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 1531, 0, 0, 0, 1511, 1513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1527, 0, 1528, 0,
	0, 0, 0, 0, 0, 1498, 1499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 1507, 1508,
	1509, 1519, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1521, 1529, 0, 1531, 0, 0, 0, 1511, 1513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	845, 0, 0, 0, 0, 0, 0, 0, 1527, 0,
	1528, 0, 0, 0, 0, 0, 0, 1498, 1499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 1510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1505, 0, 1529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1481, 1482, 1505, 1514, 1515, 1516, 1524, 1525,
	1526, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1517, 1512, 0, 0, 0, 0, 0, 0, 1484,
	1522, 0, 0, 1520, 1530, 0, 1495, 1496, 1502, 1523,
	1501, 1497, 0, 1494, 1492, 1493, 1485, 1486, 1487, 1488,
	1490, 1491, 0, 0, 0, 0, 0, 0, 0, 0,
	1483, 2984, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 0, 0, 0, 0, 0, 0, 1500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1520, 0, 0, 1495, 1496,
	1502, 1523, 1501, 1497, 0, 1494, 1492, 1493, 1485, 1486,
	1487, 1488, 1490, 1491, 0, 0, 1506, 1507, 1508, 1509,
	0, 0, 0, 0, 0, 0, 1489, 0, 0, 0,
	0, 2694, 1481, 1482, 0, 1514, 1515, 1516, 1524, 1525,
	1526, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1521, 1517, 1512, 1531, 0, 0, 2689, 1511, 1513, 1484,
	0, 0, 0, 0, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 1528,
	0, 0, 0, 0, 0, 0, 1498, 1499, 0, 0,
	1483, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 0, 1519, 0, 0, 0, 0, 1500, 0, 0,
	0, 0, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 1507, 1508, 1509,
	0, 0, 0, 0, 0, 0, 1489, 0, 0, 0,
	0, 0, 1481, 1482, 0, 1514, 1515, 1516, 1524, 1525,
	1526, 0, 0, 0, 0, 1510, 0, 0, 0, 0,
	1521, 1517, 1512, 1531, 0, 0, 0, 1511, 1513, 1484,
	0, 0, 0, 1505, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 1528,
	0, 0, 0, 0, 0, 0, 1498, 1499, 0, 1522,
	1483, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 0, 1519, 0, 0, 0, 0, 1500, 0, 0,
	0, 0, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 1507, 1508, 1509,
	0, 0, 0, 0, 1520, 0, 1489, 1495, 1496, 1502,
	1523, 1501, 1497, 0, 1494, 1492, 1493, 1485, 1486, 1487,
	1488, 1490, 1491, 0, 0, 1510, 0, 0, 0, 0,
	1521, 0, 0, 1531, 0, 0, 0, 1511, 1513, 0,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 1528,
	0, 0, 0, 0, 0, 0, 1498, 1499, 0, 1522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2656, 0,
	0, 0, 0, 0, 1520, 0, 0, 1495, 1496, 1502,
	1523, 1501, 1497, 0, 1494, 1492, 1493, 1485, 1486, 1487,
	1488, 1490, 1491, 0, 0, 1510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1481, 1482, 1505, 1514, 1515, 1516, 1524, 1525, 1526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1517, 1512, 0, 0, 0, 2642, 0, 0, 1484, 1522,
	0, 0, 0, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1483,
	0, 0, 0, 0, 0, 0, 0, 0, 1503, 0,
	0, 0, 0, 0, 0, 0, 1500, 0, 0, 0,
	0, 0, 0, 1481, 1482, 0, 1514, 1515, 1516, 1524,
	1525, 1526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1517, 1512, 0, 0, 0, 0, 0, 0,
	1484, 0, 0, 0, 1520, 1530, 0, 1495, 1496, 1502,
	1523, 1501, 1497, 0, 1494, 1492, 1493, 1485, 1486, 1487,
	1488, 1490, 1491, 0, 0, 1506, 1507, 1508, 1509, 0,
	0, 1483, 0, 0, 0, 1489, 0, 0, 0, 0,
	1503, 0, 0, 0, 0, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 1531, 0, 0, 0, 1511, 1513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1527, 0, 1528, 0,
	0, 0, 0, 0, 0, 1498, 1499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 1507, 1508,
	1509, 1519, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1521, 1529, 0, 1531, 0, 0, 0, 1511, 1513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	0, 0, 0, 0, 0, 0, 0, 0, 1527, 0,
	1528, 0, 0, 0, 0, 0, 0, 1498, 1499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 1510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1505, 0, 1529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1481, 1482, 1505, 1514, 1515, 1516, 1524, 1525,
	1526, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1517, 1512, 0, 0, 0, 0, 0, 0, 1484,
	1522, 0, 0, 1520, 1530, 0, 1495, 1496, 1502, 1523,
	1501, 1497, 0, 1494, 1492, 1493, 1485, 1486, 1487, 1488,
	1490, 1491, 0, 0, 0, 0, 0, 0, 0, 0,
	1483, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 0, 0, 0, 0, 0, 0, 1500, 0, 0,
	0, 0, 0, 0, 1481, 1482, 0, 1514, 1515, 1516,
	1524, 1525, 1526, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1512, 0, 0, 0, 0, 0,
	0, 1484, 0, 0, 0, 1520, 1530, 0, 1495, 1496,
	1502, 1523, 1501, 1497, 0, 1494, 1492, 1493, 1485, 1486,
	1487, 1488, 1490, 1491, 0, 0, 1506, 1507, 1508, 1509,
	0, 0, 1483, 0, 0, 0, 1489, 0, 0, 0,
	0, 1503, 0, 0, 0, 0, 0, 0, 0, 1500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1521, 0, 0, 1531, 0, 0, 0, 1511, 1513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 1528,
	0, 0, 0, 0, 0, 0, 1498, 1499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 1507,
	1508, 1509, 1519, 0, 0, 0, 0, 0, 1489, 0,
	0, 0, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1521, 1529, 0, 1531, 0, 0, 0, 1511,
	1513, 0, 0, 0, 1481, 1482, 0, 1514, 1515, 1516,
	1524, 1525, 1526, 0, 0, 0, 0, 0, 0, 1527,
	0, 1528, 0, 0, 1512, 0, 0, 0, 1498, 1499,
	0, 1484, 0, 0, 0, 0, 1530, 0, 0, 0,
	0, 0, 0, 0, 1519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1504, 1510, 0, 0, 0, 0,
	0, 0, 1483, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 0, 1505, 0, 1529, 0, 0, 0, 1500,
	0, 0, 0, 0, 1481, 1482, 0, 0, 0, 0,
	1524, 1525, 1526, 0, 0, 0, 0, 0, 0, 1522,
	0, 0, 0, 0, 1512, 0, 0, 0, 0, 0,
	0, 1484, 0, 0, 0, 0, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 1506, 1507,
	1508, 1509, 1483, 0, 0, 0, 0, 0, 1489, 0,
	0, 1503, 0, 0, 0, 1505, 0, 0, 0, 1500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1521, 0, 0, 1531, 0, 0, 0, 1511,
	1513, 1522, 0, 0, 1520, 0, 0, 1495, 1496, 1502,
	1523, 1501, 1497, 0, 1494, 1492, 1493, 1485, 1486, 1487,
	1488, 1490, 1491, 0, 0, 0, 0, 0, 1498, 1499,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 1507,
	1508, 1509, 0, 0, 1519, 0, 0, 0, 1489, 0,
	0, 0, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1521, 0, 0, 1531, 0, 0, 0, 1511,
	1513, 0, 0, 0, 0, 0, 1520, 0, 0, 1495,
	1496, 1502, 1523, 1501, 1497, 0, 1494, 1492, 1493, 1485,
	1486, 1487, 1488, 1490, 1491, 0, 0, 0, 1498, 1499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1504, 0, 0, 1510, 1700, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1717, 1694,
	1701, 1522, 1684, 1727, 1726, 0, 0, 0, 1686, 1685,
	0, 0, 0, 0, 0, 0, 1737, 1738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	1728, 0, 1724, 1723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1722, 0, 0, 0, 0,
	0, 1522, 0, 0, 0, 0, 1520, 0, 0, 1495,
	1496, 1502, 1523, 1501, 1497, 0, 1494, 1492, 1493, 1485,
	1486, 1487, 1488, 1490, 1491, 0, 1721, 1719, 1720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 753, 0, 789, 0, 0, 0, 0, 1696,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1710,
	1699, 1712, 1714, 1715, 1716, 1711, 760, 1704, 0, 0,
	0, 0, 0, 0, 0, 0, 1520, 1733, 1734, 0,
	772, 758, 1523, 1501, 1497, 0, 1494, 1492, 1493, 1485,
	1486, 1487, 1488, 1490, 1491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 759, 0, 0,
	0, 0, 762, 0, 1688, 0, 795, 0, 0, 0,
	0, 0, 0, 0, 769, 770, 0, 0, 0, 0,
	782, 1725, 0, 0, 0, 1697, 0, 1698, 0, 0,
	0, 0, 0, 0, 790, 764, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 788, 0, 0, 0, 0, 0, 1718,
	0, 0, 0, 1707, 1705, 1706, 1709, 1708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 765, 0, 0, 0, 0,
	0, 0, 0, 757, 0, 0, 0, 0, 1689, 1690,
	1692, 1693, 0, 0, 0, 0, 0, 0, 766, 767,
	0, 0, 0, 0, 0, 1713, 1691, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	774, 773, 0, 0, 0, 0, 0, 0, 768, 0,
	0, 0, 1687, 0, 0, 1729, 1730, 1731, 1732, 0,
	0, 0, 0, 0, 794, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 791, 0, 0, 0, 0, 1695, 0, 0, 0,
	0, 1702, 1735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 761, 0,
	0, 0, 786, 787, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 784, 0, 0,
	0, 0, 0, 0, 780, 0, 0, 777, 0, 0,
	0, 0, 0, 778, 0, 0, 0, 0, 0, 0,
	755, 0, 792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 779, 0,
	0, 0, 776, 0, 0, 0, 0, 0, 0, 0,
	0, 793, 0, 0, 0, 0, 0, 0, 0, 781,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 785,
}
var sqlPact = [...]int{

	4471, -1000, -1000, -1000, -1000, -1000, -1000, 246, 245, 241,
	240, 233, 226, 225, 222, -1000, -1000, -1000, -1000, -1000,
	221, -1000, -1000, 218, -1000, 212, 210, 209, 207, -1000,
	204, 198, 197, -1000, -1000, -1000, -1000, 192, 190, 186,
	60079, 1900, 73237, 63571, 1827, 54811, 72796, 54370, 72355, 71914,
	179, -1000, 71473, 177, 173, 172, -1000, 71032, -1000, -1000,
	170, 3482, 45522, 169, 167, 161, 2135, 160, -1000, 156,
	-1000, 7805, 1352, -1000, 155, -1000, 6468, 499, 62695, 2318,
	151, 147, 45080, 2312, 2379, -1000, -1000, 1749, -1000, -1000,
	144, 142, 138, 135, 133, 129, 117, 113, 112, -1000,
	109, 103, 102, 100, 99, 98, 97, -1000, 96, 91,
	90, 89, 88, 85, 84, 83, 82, 81, 80, 79,
	-1000, 84920, 1580, 1512, 1501, 1489, 1488, 1483, 966, 74,
	72, 69, 68, 67, 63, 61, -1000, 60, 59, 58,
	57, 55, -1000, 54, 51, 157, 47, 46, 43, 41,
	34, 3756, -1000, 1430, 684, 21757, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 78022,
	73672, 31, -34, 29, -1000, 2688, 960, 37571, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 515, -1000,
	-1000, -1000, 324, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1541, 748,
	-1000, -1000, -1000, 70597, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1898, -127, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 747, -1000, 1897, 307, 1787, -1000, -1000, -1000, -1000,
	-1000, 73672, -1000, -1000, 3059, 3056, 1744, 746, 70162, -1000,
	1397, -1000, 905, 24553, -1000, 1110, -1000, 24553, 318, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 53929, 16133, 53488,
	53047, 69721, 15682, 59644, 49098, -1000, -1000, -1000, 40235, 1156,
	-1000, -1000, -1000, -1000, -1000, 6, 49982, 73672, -1000, 315,
	-1000, -1000, -1000, -1000, -1000, -1000, 31181, 628, 30705, 237,
	30229, 235, -1000, -1000, -1000, 3055, 3053, 1062, 3052, 2630,
	77587, 1537, 3051, 1496, 1136, 991, 3050, 3048, 3047, 3046,
	3045, 3044, 1237, 69280, 2412, 68839, 1459, 48647, 60079, 60079,
	2130, 68398, 1186, 1181, -1000, -1000, -1000, -1000, 2498, 2370,
	2346, 42444, -1000, 3043, 3042, 3041, 3040, 3036, 77152, 1526,
	3034, 2060, 3033, 3032, 3031, 3026, 3023, 3022, 3020, 2999,
	2998, -1000, 59203, 58762, 58321, 2726, 67957, 48196, -1000, -1000,
	-1000, 39331, 4999, 4589, 67516, 40684, 60079, 60079, -1000, -1000,
	31645, 119, -1000, -1000, -1000, 40235, 2366, -1000, 31645, 119,
	-1000, 73672, -1000, 2411, 1663, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1833, 1456, 2878, 47745, 1731,
	1316, 2691, 2491, 2486, 1374, 2097, 2478, 2476, 2470, 2468,
	2453, 1410, 2090, 540, 21281, 1401, 1369, 2452, 2425, 2896,
	1658, 1774, 52606, 2995, 2994, 2644, 2424, 2421, 2356, -1000,
	-1000, -1000, -1000, 1346, -1000, -1000, 55681, -1000, -1000, 1137,
	-1000, -1000, 1137, -1000, -1000, -1000, -1000, -1000, 1155, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1430, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2123, -1000, 1695, -1000,
	-1000, 2055, 2666, 2666, 2666, 2714, 501, 493, -1000, 157,
	-1000, -1000, 83832, -1000, -1000, 31645, 31645, 31645, 31645, 31645,
	1690, -1000, 741, -1000, -1000, 794, -1000, 739, 612, -1000,
	-1000, -1000, -1000, -1000, -1000, 737, 2915, -1000, -1000, -1000,
	-1000, -1000, 2871, -1000, 18437, -1000, -1000, -1000, 486, 735,
	31645, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 951, -1000, 314, 923, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 666, 1602, 664, 664, 664, -1000, -1000,
	986, -1000, -1000, -1000, 373, 662, 328, 657, -1000, -1000,
	-1000, -1000, 2410, 730, 728, -1000, 727, 726, 725, 724,
	723, -1000, -1000, -1000, 722, 712, 703, 702, 701, 699,
	698, 697, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	983, -1000, 696, 695, 694, 693, 692, 690, 689, 687,
	686, -1000, -1000, 5, 73672, -1000, 515, 5, -1000, -1000,
	682, -1000, 25017, 25017, 25017, -1000, -1000, 1890, 31645, -1000,
	2077, -1000, 15, 15, 882, 38449, -1000, 36689, 882, 310,
	795, 42003, -1000, 2355, -1000, -1000, 681, 301, -1000, -1000,
	2342, 73672, 16582, 73672, 60079, 60079, 60079, 2580, 31645, -1000,
	-1000, 47294, 73672, 60514, 2814, 84744, 47294, 73672, 2409, -1000,
	-1000, -1000, 73672, -1000, 31645, -1000, 2812, 1301, 50421, 2734,
	-9, -1000, -1000, -1000, -1000, -1000, -1000, 2042, 2026, 1083,
	1928, 1184, -1000, 24553, 2621, -1000, -1000, -1000, 281, 16582,
	-1000, 2767, 2558, 1230, -1000, 1916, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1530, 2554, -1000, 1689, 2553,
	1513, -1000, -1000, 1766, -1000, -1000, 2641, -1000, -1000, 1817,
	2549, 16, -1000, -1000, 947, 2548, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 874, -1000, 49547, 40235, 49982,
	1, -1000, -1000, -35, -1000, 15231, 83832, -1000, -1000, -1000,
	83832, 857, -1000, -1000, 2545, -1000, 83832, 841, -1000, -1000,
	2544, -1000, -1000, -1000, 2993, -1000, 2988, 1975, 2987, 2980,
	2979, -1000, 1461, 1571, 2978, -1000, 2975, -1000, -1000, -1000,
	-1000, -1000, -1000, 57880, 1885, -1000, -1000, 56998, -1000, 1973,
	-1000, -1000, 57439, 989, -1000, 947, 1971, -1000, 937, -1000,
	2973, 2725, 2161, 947, 1970, -1000, -1000, -1000, -1000, -1000,
	43322, -1000, 43322, -1000, 43322, -1000, 1311, -1000, 76717, 15,
	15, 2871, -1000, -1000, -1000, -1000, -1000, 2543, 2971, 2970,
	2969, -1000, 73672, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 185, 2541, -1000, -1000, 185, 2540, -1000, 185,
	2536, -1000, 62254, -1000, -1000, 1842, 2534, -1000, -64, 2522,
	-1000, -1000, -15, -1000, -1000, -1000, 960, -1000, 38890, -1000,
	38890, 67075, 49547, 938, 700, 44639, 83832, -1000, -40, -1000,
	40235, 83832, -1000, 49547, 56998, -1000, 66634, 56563, -1000, -1000,
	1234, 2081, -1000, -1000, -1000, 938, 49547, 49547, 49547, -1000,
	66193, -1000, -1000, 1717, 1347, 2645, 1703, 60079, -1000, 1538,
	-1000, -1000, -1000, 2678, 2408, -1000, 46855, 61819, -1000, 61384,
	-1000, 60949, -1000, 60079, -1000, 60079, -1000, 2967, 2966, 2965,
	-1000, 2964, 2663, 83832, 2658, -1000, 2504, 1500, 1493, 73672,
	-1000, -1000, 73672, -1000, 73672, -1000, -1000, -1000, -1000, -1000,
	2025, -1000, -1000, -1000, -1000, 60079, -1000, -1000, -1000, -1000,
	-1000, -1000, 2402, -1000, 1433, -1000, 1473, -1000, 1203, -1000,
	-1000, 189, -1000, -1000, -9, -1000, 76282, -1000, 2055, -1000,
	73672, -1000, 2037, 2387, 2400, 1302, 1846, 2129, -1000, 29753,
	2109, 33965, 1911, 157, -1000, -1000, 157, 157, 24089, -1000,
	-1000, 84744, 84744, 16582, 1172, 31645, 31645, 31645, 31645, 31645,
	31645, 31645, 31645, 31645, 31645, 31645, 31645, 31645, 31645, 31645,
	31645, 31645, 31645, 31645, 31645, 31645, 31645, 31645, 31645, 31645,
	31645, 31645, 31645, 31645, 31645, 31645, 31645, 31645, 31645, 31645,
	1936, 31645, 1154, 31645, 31645, 31645, 31645, 1598, -1000, -1000,
	1664, 537, 1801, -1000, 2855, 2855, 2855, 84243, 84243, 509,
	2962, 794, -1000, 31645, -1000, 119, 31645, 17033, -1000, -1000,
	-1000, 493, 8700, 1940, -1000, 491, 17509, -1000, -1000, -1000,
	18437, 612, 29277, 31645, 978, 83832, 1235, 2879, 14782, 2426,
	2243, -1000, 2889, -1000, -1000, 2879, -1000, -1000, -1000, -1000,
	2879, 1171, 1166, 2879, -1000, 2879, 2879, 680, 786, 761,
	20805, 20329, 19853, 19377, 608, 31645, 31645, 31645, 31645, 31645,
	31645, 31645, 31645, -1000, 28813, 28337, 27861, 34429, 27385, 31645,
	18901, 26909, 26433, 73672, 5, 2808, 31645, 300, -1000, 82381,
	-1000, 300, 300, 679, -24, 83832, 2071, 2071, 38010, 1932,
	1716, 1716, 1716, -1000, 882, 11164, 882, 65319, 1741, 882,
	882, 280, 344, 490, 36250, 2077, 65319, 760, 678, 26,
	24, 22, -1000, -1000, 19, 18, -1000, -1000, 60079, 677,
	17033, 16582, 1244, -37, 278, 2107, 2106, 2103, -1000, 2102,
	1432, -38, 1147, -14, -1000, 3977, -39, -1000, 1199, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 981, 676, 667, 863, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 666, 1602, 664, 664, 664, -1000, -1000, -1000, 373,
	662, 328, 657, -1000, -1000, -1000, -1000, -1000, -1000, 2341,
	-35, 60514, 897, -45, 1065, -9, -1000, -1000, -1000, 50421,
	1137, -1000, 1747, -1000, -1000, -1000, -1000, -1000, -1000, 1241,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 951, -1000, -1000,
	-1000, -1000, -1000, -1000, 2867, 2865, 2, -1000, -1000, 16582,
	-1000, -11, 1446, -1000, 52165, 1886, 2650, 2635, 1307, -1000,
	1253, 2713, 55681, 2741, 2763, 704, -1000, 2339, -1000, -1000,
	902, 1423, 1144, 55681, 1689, -1000, 84744, -1000, 2163, 2708,
	1281, 1277, 1281, 1281, 1268, -1000, 55681, 1143, -1000, 1129,
	-1000, -25, 2738, 2755, 613, -1000, 2337, 1127, -1000, -1000,
	60079, 16582, -1000, 1725, -1000, 49547, 2167, -1000, -46, 874,
	1, 49982, 73672, 277, -1000, 31645, 119, 31645, 119, -1000,
	-1000, 2519, -1000, -1000, -1000, 2960, 1555, 2056, -1000, -1000,
	-1000, 656, 1969, 2326, 73672, 2117, -4, 60079, -1000, 2513,
	1689, 1965, -1000, -1000, 56122, -1000, 2512, 648, 2958, -1000,
	75847, -1000, 2651, 1094, 2510, 1017, 369, 2779, -1000, 369,
	43761, -1000, 73672, -1000, -1000, 73672, -1000, -1000, -1000, 2957,
	-1000, 60079, -1000, -1000, 60079, -1000, 60079, -1000, 60079, 183,
	2507, -1000, -1000, 73672, 49547, 49547, 4302, 51295, -47, -52,
	489, -1000, 65758, 73672, 1015, 51730, 73672, 2610, 938, 40235,
	-40, 938, 938, 874, -1000, 874, -1000, 60079, 2399, -1000,
	938, 938, 938, -1000, -1000, -1000, -1000, 2956, 2954, -1000,
	-1000, -1000, 945, 60079, 73672, 60079, -1000, -1000, 73672, -1000,
	73672, -1000, 945, 73672, 945, 73672, 945, 73672, -1000, -1000,
	-1000, -1000, -1000, -1000, 119, 31645, 1318, -1000, 2398, -1000,
	2397, -1000, 53, -1000, -1000, -1000, -1000, 1548, 60079, 60079,
	60079, 60079, 73672, 60079, -1000, 55681, -1000, 2037, 2387, -1000,
	-1000, -1000, -1000, -1000, -1000, 1269, 1811, -1000, 2079, -1000,
	1275, -1000, -1000, -1000, 83832, 34893, -1000, -1000, 83832, 1549,
	-1000, 33501, 33037, -1000, -1000, 1469, 60079, 2115, -1000, 2115,
	-3, -1000, 82081, 2078, 60079, -1000, -1000, -1000, -1000, -1000,
	898, 813, 813, 1122, 1122, 1122, 1122, 2847, 367, 480,
	3717, 84503, 84503, 5162, 5162, 5162, 5162, 5162, 84503, 1074,
	715, 715, 1074, 1074, 1074, 1074, 1074, 715, 715, 715,
	84503, 84503, 84503, 84243, 84161, 8891, 31645, 31645, 1126, 1654,
	537, 8488, 31645, 10696, 10696, 10696, 10696, -1000, 1676, -1000,
	-1000, -1000, -1000, 2321, 653, 34429, 34429, -1000, -1000, -1000,
	-1000, 17973, 31645, -1000, -1000, -1000, -1000, 25957, -1000, -1000,
	81715, -250, 482, -221, -8, -1000, 31645, 31645, 31645, 481,
	-1000, 274, 31645, 73672, -1000, 79259, 757, -66, -1000, -54,
	1294, -1000, 31645, -1000, -1000, 1121, -1000, 1117, 1116, 1115,
	-1000, 651, 479, -1000, 270, -1000, 1712, 650, 649, 478,
	-55, 476, 888, 885, 458, 457, 456, 31645, -1000, -1000,
	-1000, -1000, -1000, 81532, -1000, -1000, 81382, -1000, -1000, 81232,
	-1000, -1000, 81049, -1000, -1000, -1000, 83750, 78964, 78899, 10615,
	5890, 10286, 10132, -67, 453, -1000, 2317, -221, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 449, -1000, 447, -1000,
	83421, -221, 436, 4527, -1000, 34429, 34429, 34429, -1000, 435,
	-1000, 82231, -1000, 83271, 25493, 25493, 25493, 423, 83121, 31645,
	-221, -69, -1000, -76, -1000, -1000, 646, -77, 964, 25017,
	37130, 16582, -1000, 964, 964, 31645, -1000, 31645, 2088, -1000,
	-1000, -1000, 2086, 2009, 2071, 38010, -1000, -1000, -1000, -1000,
	65319, -1000, 2871, 2349, -1000, 65319, -1000, -1000, 73672, 515,
	-1000, 65319, 65319, 16582, 882, -1000, 882, 65319, 523, -1000,
	-1000, -1000, -1000, -1000, 420, 41123, -8, 268, 938, -1000,
	16582, 2198, 2198, 2198, 2198, -1000, -1000, 73672, 2828, -1000,
	1638, -1000, 84744, -1000, 776, 990, 643, -1000, 2879, 2879,
	-1000, 2879, 73672, 194, 24553, -1000, 1137, -1000, -1000, 1403,
	-1000, 1560, -1000, 1165, -1000, -1000, -1000, -1000, 24553, -1000,
	1673, 73672, 73672, 60079, -1000, -1000, 1964, 75412, 1959, 84744,
	73672, -1000, -1000, 642, 641, 2076, 2075, 73672, 73672, 2074,
	74977, 74542, 73672, 1672, 31645, 1889, 1449, 119, 119, -1000,
	-1000, 119, 634, 1152, 60079, 60079, 60079, 1505, -1000, -1000,
	-1000, -1000, -1000, 55246, -1000, -1000, 2885, 2883, -1000, 1281,
	-1000, -1000, -1000, 1281, 1689, 1503, 60079, 73672, 1655, 119,
	119, -1000, -1000, 119, 629, 16582, 1542, -1000, 1725, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 46420, 1022, 947, 938,
	2314, -1000, 2167, -1000, -1000, 14333, 83832, -1000, 83832, -1000,
	73672, -1000, 988, 73672, 51730, 914, 2503, 42883, -35, 938,
	49547, 60079, -4, 73672, -1000, 1689, 2501, 515, 1958, -1000,
	-1000, 49547, 2953, 619, 2952, -1000, 1872, 1957, -1000, -1000,
	74107, 2565, 838, 73672, 964, 38010, 1570, -1000, 41564, 998,
	73672, 1453, 132, -1000, -1000, -1000, 40, 73672, -1000, 2949,
	-1000, -1000, 185, 185, 185, -1000, 60079, 60079, 1842, -1000,
	-64, -1000, -1000, 4302, 4302, 938, -6, 617, -1000, 869,
	866, 39786, 49547, -83, -1000, -1000, -1000, -1000, -1000, 60079,
	73672, 721, 2149, 73672, -84, -1000, 267, 616, -1000, -1000,
	938, 2311, -1000, -1000, 950, -1000, 1195, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 14, -35, -35, -1000,
	945, -1000, 945, -1000, 945, -1000, 83832, -1000, 1304, 1284,
	73672, -1000, 16582, 73672, 60079, 16582, 60079, 2386, 2385, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1029, -1000, 1549,
	1810, -1000, 612, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2011, -1000, -7, 24089, 1934, -1000, -1000, 60079,
	11, 31645, 31645, 7635, 5817, 31645, 34429, 34429, -1000, 31645,
	5074, -1000, -1000, -1000, -1000, -1000, 2309, 605, 31645, 84744,
	5867, 5265, -1000, 419, 9773, 1074, -1000, 31645, -1000, 411,
	23625, -1000, 82710, -30, -85, -1000, 11625, -221, -86, -1000,
	-1000, 774, -1000, 2509, -1000, 31645, 82792, 1991, 1705, 1507,
	1356, 2879, 2907, 13884, -1000, 44200, 969, 1758, -1000, -1000,
	2879, 893, -1000, -1000, -1000, 893, -1000, 80899, -1000, -1000,
	-1000, -1000, 84744, 84744, 31645, 31645, -1000, 31645, 31645, 31645,
	-1000, -1000, 31645, -1000, -1000, 2306, 31645, -1000, 84744, 84744,
	34429, 34429, 34429, 34429, 34429, 34429, 34429, 34429, 34429, 34429,
	34429, 34429, 34429, 34429, 34429, 34429, 34429, 34429, 34429, 2059,
	34429, 2852, 2852, 2852, -1000, 2381, 2306, 31645, 31645, 84744,
	410, 409, 408, -1000, 31645, -221, -1000, -1000, 4302, -1000,
	2240, -1000, 31645, -1000, -78, -1000, 2077, -1000, -1000, 2240,
	2240, -91, 83832, 38010, 38010, -1000, 603, 31645, 2085, -1000,
	-1000, 754, -246, -1000, 859, -1000, -1000, -1000, -1000, -1000,
	515, -1000, -1000, -1000, 257, 65319, 65319, 753, -1000, -92,
	-1000, -1000, -93, -1000, 2777, 407, 16582, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -35, 1767, 2900, -1000, 2880,
	766, 751, 2879, 404, 403, 402, -35, 73672, -1000, -9,
	-1000, -1000, -1000, 31645, -1000, -1000, 2649, 1113, 1111, -1000,
	2493, -1000, 1955, -1000, 1004, -1000, 1404, -1000, 31645, 31645,
	602, 596, 1568, 2948, 1013, 2488, 1842, 2485, 1842, -1000,
	-1000, 909, -1000, 83832, 593, 587, -1000, -11, 1441, 949,
	-1000, -1000, 31645, 31645, 64884, -1000, 382, 2641, 10, -1000,
	1108, -1000, -1000, -1000, -1000, 1689, 1106, -1000, -1000, -1000,
	948, -1000, -1000, 31645, -1000, -25, 1101, -1000, -1000, -1000,
	45971, -1000, -1000, 49547, 938, -1000, 2947, 2946, 2945, 401,
	-94, -27, 84744, 2776, 1834, 604, 60079, 889, -1000, 2871,
	-1000, -1000, -1000, -1000, 60079, 2775, 2481, 947, -1000, 2944,
	-1000, 60079, 2480, 1864, 1950, 2050, 838, 50860, -1000, 947,
	1758, -174, -1000, 1453, 23149, 2639, -104, -1000, -1000, -1000,
	964, 43761, 38010, 31645, 2943, -105, -1000, -1000, -1000, -1000,
	-1000, 183, -1000, -1000, -1000, -1000, 64449, 64449, 49547, 49547,
	49547, 938, 73672, 73672, 51730, 2942, 585, 73672, 73672, 576,
	-1000, 73672, 73672, 2941, 49547, -1000, 119, -1000, 1785, 60079,
	13435, -1000, -1000, -1000, -1000, -1000, 945, -1000, -1000, 1656,
	1908, 1656, 1486, 1462, -1000, 1803, -1000, -1000, -1000, -1000,
	2126, 2662, 16582, 2787, 10696, 31645, 31645, 437, 1295, 1133,
	10696, 31645, 31645, 84744, 84423, -106, 31645, 31645, -1000, 31645,
	750, 83832, 2894, 31645, 398, 397, -1000, -1000, -1000, 2874,
	-1000, -1000, -1000, 83832, 31645, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 393, -1000, 238, -1000, -1000, -1000, 78457, -1000,
	31645, 391, 389, -1000, -1000, -1000, 381, 380, 9259, 272,
	80749, 80566, 80416, 83832, 2381, 83832, -1000, -1000, 738, 738,
	1233, 1233, 1233, 1233, 2852, 631, 852, 472, 302, 302,
	302, 451, 559, 559, 302, 302, 302, 2299, 2064, 575,
	5972, -1000, -1000, 83832, 83832, 377, -1000, -1000, -1000, -221,
	376, 2235, 2707, 83832, -1000, 38010, 2235, 2235, -1000, -1000,
	2009, 73672, 83832, 38010, -1000, 2349, -1000, 12084, -1000, 16582,
	-1000, -1000, -1000, -1000, 2871, -1000, 41123, -1000, 573, -1000,
	120, -1000, -1000, 716, 2940, 765, 366, -1000, -1000, -1000,
	-35, 83832, 73672, 73672, 73672, 2473, -1000, 3519, -1000, 80266,
	-107, -1000, 82081, 31645, 73672, -1000, 1561, 2113, 1040, -1000,
	2680, 73672, -1000, 73672, -1000, -1000, 73672, 73672, 60079, 2458,
	-112, 83832, -57, -1000, 850, -1000, 1257, -1000, 12986, 60079,
	60079, 2450, -113, 16582, -1000, -1000, -64, -1000, -1000, -1000,
	-1000, 2142, -1000, 63130, 1829, 119, -1000, 64010, 2938, 566,
	-1000, 1764, -1000, 609, 1689, 119, 60079, -1000, -1000, 1008,
	16582, 60079, 2467, 2052, 838, 50860, -1000, 1094, 2129, -1000,
	-79, -1000, 503, 119, 1758, -1000, -174, 83832, -1000, 847,
	-1000, -1000, -114, -1000, -1000, 365, -1000, 2609, 2608, -1000,
	-1000, 31645, 565, 549, 73672, 2607, -1000, -1000, -115, -1000,
	2006, -1000, -1000, -1000, -1000, -1000, 16582, 1390, -1000, 547,
	546, -1000, -1000, -1000, -1000, 2662, 10696, 10696, 31645, 31645,
	31645, 10696, 84423, -120, -1000, 10696, 10696, -221, -1000, -1000,
	82710, -1000, -1000, -1000, 83832, -1000, 12537, 1666, -1000, 80083,
	-1000, -1000, -1000, -1000, 31645, 31645, -1000, -1000, -1000, -1000,
	-1000, 34429, 2287, 545, 84744, -1000, -1000, 956, 31645, 31645,
	2077, 956, 956, -1000, -121, -1000, -1000, -1000, 2871, 120,
	-1000, -1000, 2935, 16582, 763, -1000, 2934, -1000, -1000, -1000,
	-1000, 73672, -1000, 73672, -1000, 16582, 73672, 2273, 1943, -1000,
	-1000, 2069, 543, 34429, 60079, 802, 2221, 1557, 31645, 1934,
	-128, -129, 1942, -1000, -1000, 1941, 31645, -1000, 84744, 542,
	1842, 1842, -131, -134, -1000, 31645, 1087, 73672, 22685, -1000,
	2933, 2641, -1000, -1000, 31645, 1076, -1000, 1655, 2188, -1000,
	-1000, -1000, -1000, 2065, -1000, -1000, 73672, 2062, 939, -136,
	-1000, 846, 842, -1000, 51730, 914, 925, -1000, -1000, -1000,
	515, 539, 73672, 1862, 538, 16582, -1000, 838, 50860, -1000,
	2565, 1453, -1000, 2572, 73672, 2634, -1000, 2129, 537, -1000,
	938, 536, 535, -137, 31645, 31645, -142, 531, 938, -195,
	-1000, 804, 790, -1000, -1000, 60079, 60079, 31645, 31645, -1000,
	10696, 10696, 10696, -1000, 335, -1000, -1000, 1758, 2706, -1000,
	79933, 79783, 2238, 34429, 84744, -143, -1000, 73672, 83832, -221,
	-1000, -1000, -1000, 560, -1000, 2931, -1000, -1000, 1735, -1000,
	-1000, -1000, 73672, 1949, -1000, 1011, 31645, 5972, 528, 31645,
	-1000, -1000, 2138, 2281, 2142, 527, -1000, -1000, -1000, -1000,
	1007, 1551, -1000, -1000, 83832, 2685, 31645, -1000, -1000, 526,
	525, 83832, 522, 834, 2275, -1000, -1000, -1000, 83832, 521,
	914, -1000, 1679, 1829, 520, -1000, -1000, 1814, 2133, -1000,
	64010, 35342, 35342, 333, 2761, 925, -1000, 2862, -1000, 2752,
	31645, -1000, 60079, 31645, 1861, 50860, -1000, 2050, -1000, 1194,
	-144, 73672, 1453, -1000, -1000, 49547, 49547, 1007, -149, -150,
	-1000, 49547, -1000, 2006, -1000, 73672, -1000, 73672, -1000, -1000,
	-151, -152, -1000, 1753, 31645, -1000, -1000, 2238, -157, -1000,
	-200, -1000, 2747, -1000, -1000, -1000, -1000, 2466, 2228, 79600,
	2002, 73672, 79442, 2280, -1000, -1000, 1655, 73672, 2142, 2219,
	60079, 1010, 16582, -160, 1656, 1656, 31645, 22221, 1677, 31645,
	1814, 60079, 73672, -1000, 2668, -1000, 2597, -1000, -1000, -1000,
	2142, 119, -1000, -1000, 119, -168, 1008, -169, 60079, -1000,
	2052, 1285, -1000, 964, -1000, -1000, -171, -176, 1557, 1007,
	-1000, -179, -1000, -181, -182, -1000, -1000, 330, 32573, 32573,
	32573, -221, -1000, 73672, 516, 2436, 944, -1000, 1845, 1508,
	326, 1035, -1000, -1000, 2221, -201, -1000, 940, 515, -1000,
	31645, -1000, 1007, -203, -1000, 996, -209, -1000, 994, -211,
	-1000, 2274, -1000, -212, -1000, 514, -218, -1000, -1000, 1995,
	-1000, 1655, 939, -1000, 1007, 513, 1557, 507, -1000, 43761,
	-1000, 938, 938, 2142, 1557, 938, -1000, -1000, -1000, 2492,
	-1000, 35791, 1832, 1448, 81898, 2492, 2492, -1000, -1000, 73672,
	2727, -1000, 1856, 1849, 1344, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2724, 2002, 83832, 2142, -1000, 1656, 2176,
	-1000, 1656, 2257, -1000, 1660, -1000, 73672, -1000, 73672, 1408,
	1381, 2926, 914, 1814, 1557, 31645, 2142, 31645, -204, -1000,
	-1000, 1655, 2142, -1000, -1000, 1476, 2772, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 832, -1000, 2584, -1000, 1027,
	1699, 1699, 828, 1845, -1000, -1000, 506, -1000, 505, -1000,
	-219, -1000, -1000, 2925, -1000, 1814, -1000, 2142, -220, 1655,
	-225, -1000, -1000, 1655, 1439, -1000, -1000, 1720, 32109, 31645,
	-1000, 2839, -1000, -1000, 2101, -1000, 31645, 2221, 31645, 31645,
	1826, -1000, -1000, 1655, 1007, 963, 1557, -1000, -1000, -1000,
	-1000, 83832, -1000, -1000, -1000, 83832, -1000, -227, -228, -1000,
	-1000, -1000, 963, 1557, -1000, 2919, 2142, 1655, 1075, -1000,
	2142, -1000, 1655, -1000, 500, 1655, 963, 31645, 963, -1000,
	-238, -1000, 1655, -1000,
}
var sqlPgo = [...]int{

	0, 3577, 3575, 3573, 3572, 3571, 3570, 3568, 3566, 3560,
	3551, 3549, 3548, 3547, 3546, 3537, 3536, 3535, 3534, 3528,
	3524, 3522, 3521, 3520, 3517, 3516, 3514, 3512, 3510, 3507,
	3505, 3504, 3503, 3500, 3495, 3494, 3491, 3488, 3487, 3485,
	3479, 3478, 3477, 3475, 3474, 3473, 3472, 36, 3469, 3468,
	3466, 3462, 3460, 3457, 3456, 3454, 3453, 3445, 3444, 3443,
	3440, 3439, 3438, 3437, 3436, 37, 3434, 227, 3432, 3431,
	3429, 3428, 3427, 3426, 3422, 3419, 3418, 226, 3414, 114,
	3412, 3411, 3409, 3407, 3406, 224, 3403, 3401, 3399, 3397,
	3395, 3390, 3389, 3382, 153, 201, 3378, 296, 3377, 3376,
	3374, 3372, 3371, 3369, 3355, 3354, 3352, 3351, 202, 3349,
	223, 3347, 3344, 3343, 3342, 3340, 3339, 3338, 3335, 3332,
	3331, 3329, 3324, 3323, 3322, 3321, 3320, 3317, 3315, 3311,
	3310, 3309, 3308, 3307, 3304, 3303, 3302, 3301, 3299, 229,
	154, 3298, 3297, 222, 221, 3296, 3292, 3285, 127, 91,
	95, 171, 3283, 97, 38, 3281, 15, 138, 211, 6771,
	189, 3280, 3278, 3277, 196, 155, 3276, 193, 3275, 3272,
	3271, 3270, 75, 67, 143, 142, 132, 133, 135, 3269,
	3268, 73, 55, 35, 30, 3267, 3266, 3265, 1960, 101,
	3264, 217, 199, 128, 3263, 3262, 3261, 1493, 3260, 3258,
	197, 77, 111, 60, 92, 3256, 120, 26, 3254, 141,
	86, 3252, 123, 72, 33, 6520, 5158, 3250, 96, 232,
	85, 195, 191, 183, 125, 190, 172, 134, 317, 3249,
	205, 3248, 80, 122, 3246, 3245, 3244, 59, 149, 76,
	3243, 4, 6, 2, 166, 11, 84, 16, 3240, 19,
	3239, 3235, 3234, 3232, 24, 124, 3230, 116, 82, 3229,
	17, 3222, 23, 170, 3219, 174, 100, 3216, 3214, 213,
	160, 151, 3213, 70, 175, 3212, 3208, 3206, 3203, 3202,
	99, 21, 102, 3199, 3198, 107, 194, 157, 3197, 40,
	3196, 139, 65, 115, 228, 104, 173, 88, 177, 144,
	176, 3194, 3193, 3192, 137, 3191, 3190, 165, 129, 3189,
	3188, 163, 231, 32, 56, 182, 57, 152, 119, 3187,
	162, 3186, 3184, 3183, 230, 136, 168, 13, 1, 64,
	93, 28, 12, 179, 118, 208, 81, 3182, 4079, 161,
	1466, 54, 108, 89, 51, 98, 117, 219, 45, 3181,
	3179, 1499, 3177, 3176, 3175, 3173, 147, 3171, 3170, 3169,
	112, 140, 245, 3168, 121, 69, 10, 94, 203, 220,
	74, 167, 212, 206, 3165, 146, 3164, 68, 145, 3163,
	159, 204, 126, 3160, 646, 109, 3152, 169, 3146, 3143,
	3142, 3139, 3137, 3136, 3135, 210, 3133, 113, 3132, 3127,
	216, 150, 3126, 215, 131, 235, 110, 31, 3125, 66,
	244, 3124, 156, 39, 3123, 2978, 62, 0, 7652, 5101,
	7154, 3120, 2204, 3116, 164, 103, 3115, 3113, 3111, 87,
	3110, 61, 3109, 3108, 42, 3106, 22, 7, 8, 18,
	14, 1217, 775, 3103, 3102, 90, 105, 185, 3101, 225,
	178, 3100, 3099, 3098, 71, 3097, 29, 3096, 27, 3091,
	3090, 34, 5, 20, 3089, 3088, 198, 3087, 200, 3086,
	3084, 2797, 106, 3082, 3081, 214, 78, 3080, 207, 3079,
	2783, 130, 187, 3078, 3077, 3076, 3075, 209, 3073, 3072,
	25, 3, 3071, 3069, 158, 9, 2693, 3067, 3066, 52,
	3065, 3064, 148,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 8, 8,
	8, 35, 35, 9, 9, 9, 10, 10, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 14, 14, 25,
	25, 15, 15, 27, 27, 16, 16, 28, 28, 475,
	475, 19, 30, 20, 31, 13, 476, 476, 476, 476,
	24, 21, 32, 22, 22, 22, 22, 22, 152, 152,
	152, 152, 18, 18, 26, 26, 175, 175, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	474, 474, 177, 177, 176, 171, 171, 477, 477, 178,
	178, 178, 180, 180, 36, 36, 36, 93, 93, 93,
	94, 94, 95, 95, 153, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 81, 81, 415, 415, 416, 416,
	148, 148, 149, 149, 149, 149, 150, 150, 151, 151,
	151, 50, 38, 38, 38, 38, 38, 38, 38, 39,
	39, 39, 39, 40, 40, 40, 40, 40, 40, 41,
	41, 41, 41, 41, 41, 48, 48, 48, 48, 140,
	140, 51, 51, 51, 51, 51, 51, 51, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 485, 485,
	486, 486, 487, 487, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 62, 62, 256, 256, 231, 231, 63, 63, 63,
	64, 64, 65, 65, 52, 52, 468, 468, 270, 270,
	379, 379, 67, 67, 290, 290, 68, 68, 68, 68,
	68, 68, 69, 69, 69, 69, 69, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 75, 75, 75,
	76, 76, 76, 74, 74, 74, 72, 72, 72, 71,
	71, 71, 73, 73, 73, 271, 271, 77, 77, 77,
	77, 77, 77, 77, 77, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	381, 381, 78, 78, 78, 349, 349, 82, 82, 82,
	305, 305, 83, 83, 83, 83, 83, 84, 84, 84,
	84, 96, 96, 96, 96, 471, 471, 263, 263, 191,
	191, 191, 191, 89, 89, 89, 89, 90, 90, 90,
	91, 91, 145, 145, 102, 102, 102, 102, 102, 101,
	101, 101, 101, 101, 101, 42, 42, 42, 43, 43,
	44, 44, 45, 45, 46, 46, 47, 47, 47, 47,
	47, 104, 104, 481, 481, 106, 103, 103, 103, 105,
	105, 105, 105, 107, 108, 108, 108, 108, 108, 108,
	108, 108, 109, 109, 409, 409, 279, 279, 407, 407,
	423, 423, 408, 408, 235, 235, 235, 235, 235, 236,
	236, 236, 414, 414, 414, 414, 414, 414, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 146, 146, 147, 129, 129, 129, 139, 139,
	139, 139, 139, 139, 139, 132, 132, 132, 119, 119,
	111, 111, 111, 111, 111, 115, 115, 115, 115, 115,
	115, 115, 115, 112, 112, 121, 121, 121, 121, 121,
	116, 116, 118, 118, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 113, 113, 113, 113, 123, 123, 123,
	123, 312, 312, 312, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 135, 135, 135, 135, 135, 135,
	363, 363, 130, 130, 130, 130, 134, 134, 134, 134,
	295, 295, 127, 127, 127, 128, 128, 128, 133, 133,
	131, 131, 136, 136, 136, 136, 114, 114, 114, 489,
	489, 489, 137, 137, 126, 126, 138, 138, 138, 138,
	138, 138, 138, 138, 125, 125, 125, 124, 124, 124,
	124, 117, 469, 469, 466, 466, 466, 466, 466, 466,
	466, 467, 467, 470, 470, 87, 87, 87, 57, 57,
	57, 58, 58, 156, 156, 156, 156, 241, 241, 241,
	241, 154, 154, 155, 155, 59, 59, 490, 490, 490,
	478, 478, 478, 479, 479, 479, 479, 479, 479, 237,
	237, 238, 238, 330, 330, 330, 330, 330, 242, 242,
	179, 179, 179, 245, 246, 246, 243, 243, 244, 244,
	244, 248, 248, 247, 250, 250, 249, 329, 430, 430,
	432, 432, 432, 432, 432, 432, 432, 434, 434, 434,
	434, 434, 434, 434, 434, 434, 434, 434, 428, 428,
	428, 429, 424, 424, 425, 425, 425, 425, 239, 239,
	240, 240, 240, 240, 426, 427, 261, 261, 366, 431,
	431, 433, 433, 435, 491, 491, 491, 491, 491, 491,
	492, 492, 328, 328, 327, 327, 254, 254, 436, 436,
	436, 436, 437, 437, 437, 437, 437, 440, 439, 438,
	438, 438, 438, 438, 61, 61, 61, 292, 292, 291,
	291, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 142, 142, 194, 194,
	56, 56, 56, 12, 12, 12, 480, 480, 480, 60,
	60, 60, 60, 193, 193, 193, 193, 193, 193, 473,
	473, 472, 472, 195, 195, 494, 494, 66, 66, 66,
	66, 66, 66, 55, 55, 55, 55, 55, 495, 495,
	313, 313, 311, 311, 310, 310, 260, 260, 365, 198,
	198, 172, 172, 172, 23, 17, 17, 33, 33, 34,
	34, 29, 29, 482, 482, 483, 483, 88, 88, 92,
	92, 92, 100, 100, 141, 141, 141, 141, 141, 141,
	141, 37, 37, 37, 37, 49, 49, 49, 49, 98,
	497, 497, 497, 99, 99, 99, 496, 496, 192, 192,
	324, 324, 325, 325, 498, 498, 326, 326, 326, 326,
	186, 185, 187, 187, 54, 54, 54, 181, 181, 182,
	182, 183, 183, 184, 184, 499, 499, 85, 85, 85,
	144, 144, 230, 230, 230, 320, 320, 320, 255, 255,
	204, 204, 323, 323, 321, 321, 321, 321, 289, 289,
	289, 143, 143, 268, 268, 281, 281, 282, 282, 376,
	376, 283, 97, 97, 159, 159, 157, 157, 157, 157,
	157, 157, 157, 157, 164, 164, 165, 165, 166, 166,
	167, 168, 168, 168, 168, 272, 272, 169, 169, 169,
	158, 158, 158, 160, 160, 160, 160, 160, 160, 160,
	163, 163, 163, 163, 170, 170, 170, 162, 162, 447,
	447, 447, 449, 449, 450, 446, 446, 448, 448, 493,
	493, 294, 294, 294, 252, 253, 251, 251, 258, 258,
	257, 259, 259, 364, 364, 364, 173, 173, 173, 286,
	286, 286, 286, 287, 287, 316, 316, 314, 314, 314,
	314, 315, 315, 317, 317, 317, 318, 318, 319, 319,
	285, 285, 345, 345, 161, 161, 161, 265, 265, 265,
	266, 266, 336, 336, 336, 336, 336, 336, 337, 337,
	335, 335, 335, 335, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 368, 369, 369, 267, 267, 370, 322,
	322, 464, 464, 464, 465, 465, 362, 362, 371, 371,
	371, 371, 371, 371, 360, 360, 361, 361, 377, 378,
	378, 298, 298, 298, 298, 296, 296, 299, 299, 299,
	299, 297, 297, 372, 372, 372, 372, 288, 288, 373,
	373, 373, 373, 374, 331, 332, 332, 382, 382, 382,
	382, 397, 264, 264, 264, 264, 264, 500, 500, 383,
	383, 383, 383, 383, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 387, 387, 387, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 396, 396, 396,
	396, 396, 388, 388, 393, 393, 394, 394, 394, 389,
	390, 395, 395, 395, 395, 501, 501, 399, 399, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 385, 385,
	385, 392, 392, 392, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 306, 306, 308,
	308, 338, 338, 338, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 338, 338, 338, 338, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 340, 340, 340, 340,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 441, 441, 441, 441, 441,
	441, 441, 441, 444, 444, 445, 445, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 451, 451, 452, 452,
	454, 454, 455, 455, 456, 457, 457, 457, 458, 459,
	459, 453, 453, 460, 460, 460, 460, 461, 461, 462,
	462, 462, 462, 462, 463, 463, 463, 463, 463, 351,
	351, 352, 352, 358, 358, 358, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 196, 196, 196, 196, 196, 277, 277, 275,
	275, 275, 278, 278, 276, 276, 274, 274, 273, 273,
	348, 348, 346, 346, 350, 350, 300, 300, 398, 398,
	398, 398, 398, 398, 398, 398, 301, 301, 301, 309,
	302, 302, 303, 303, 303, 303, 303, 342, 343, 304,
	304, 304, 344, 344, 353, 357, 357, 356, 355, 355,
	354, 354, 333, 333, 334, 334, 284, 284, 502, 502,
	280, 280, 375, 375, 375, 375, 233, 233, 269, 269,
	232, 232, 225, 225, 226, 226, 226, 226, 262, 262,
	359, 359, 400, 400, 401, 401, 402, 402, 403, 403,
	404, 405, 406, 347, 347, 214, 213, 201, 202, 212,
	211, 210, 200, 203, 207, 208, 209, 205, 206, 220,
	219, 218, 224, 216, 217, 380, 199, 227, 227, 228,
	228, 228, 229, 229, 229, 229, 197, 197, 221, 221,
	222, 223, 223, 215, 215, 215, 188, 188, 188, 189,
	189, 190, 190, 413, 413, 411, 411, 411, 412, 412,
	412, 412, 410, 410, 410, 410, 410, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 419, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 422, 422,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 0, 1, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 3, 1, 1,
	3, 4, 6, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 5, 5, 6, 6, 4, 4, 4, 4, 3,
	4, 4, 4, 7, 7, 9, 8, 9, 5, 3,
	5, 7, 4, 12, 4, 12, 1, 3, 5, 5,
	2, 5, 3, 6, 4, 6, 5, 6, 6, 4,
	8, 3, 4, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 6, 7, 2, 5, 6, 2,
	1, 3, 1, 3, 1, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 6, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 3, 3,
	4, 3, 4, 7, 4, 4, 4, 3, 5, 7,
	4, 3, 3, 4, 3, 3, 3, 3, 2, 0,
	1, 0, 1, 0, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 1, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 2, 1, 3,
	2, 0, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 3, 5, 3, 1, 3, 2, 2, 5,
	3, 3, 6, 6, 3, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 3, 5, 7, 2, 3, 0, 3, 5, 2,
	3, 0, 2, 3, 2, 3, 2, 6, 4, 7,
	2, 6, 4, 7, 2, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 1, 1, 5, 3, 2, 6, 3,
	3, 4, 4, 3, 1, 3, 2, 3, 3, 1,
	3, 1, 2, 1, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 2, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 2, 2, 1, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 5, 5, 5, 3, 4, 4, 3, 4, 4,
	3, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 4, 3, 4, 3, 3, 4, 4,
	5, 0, 1, 1, 3, 2, 4, 3, 3, 5,
	4, 3, 5, 3, 5, 4, 6, 4, 6, 4,
	1, 0, 3, 4, 4, 5, 7, 5, 3, 3,
	2, 0, 4, 2, 3, 4, 2, 3, 3, 3,
	3, 3, 4, 3, 3, 3, 3, 4, 3, 1,
	1, 1, 2, 3, 2, 3, 6, 6, 7, 9,
	7, 9, 3, 4, 10, 10, 3, 5, 5, 5,
	3, 5, 2, 0, 1, 1, 1, 1, 3, 2,
	2, 2, 1, 2, 0, 3, 3, 2, 3, 6,
	3, 11, 14, 0, 2, 4, 3, 0, 4, 5,
	4, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 1, 3, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 9, 9,
	3, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 1,
	2, 8, 4, 2, 5, 5, 5, 2, 9, 10,
	6, 5, 3, 1, 5, 8, 7, 11, 3, 0,
	2, 4, 3, 3, 1, 5, 1, 3, 1, 2,
	0, 1, 2, 2, 0, 1, 3, 3, 2, 2,
	1, 1, 4, 0, 6, 0, 3, 0, 2, 2,
	2, 0, 1, 1, 2, 2, 0, 3, 3, 2,
	1, 1, 2, 2, 5, 8, 4, 1, 0, 1,
	2, 2, 1, 2, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 4, 2, 2, 2,
	4, 7, 3, 4, 6, 3, 1, 1, 1, 8,
	11, 7, 5, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 6, 7, 6,
	5, 3, 4, 16, 19, 15, 18, 4, 0, 2,
	2, 0, 1, 0, 1, 0, 1, 3, 3, 2,
	0, 1, 1, 0, 6, 6, 8, 6, 8, 6,
	8, 6, 8, 1, 0, 2, 0, 2, 2, 3,
	3, 2, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	2, 3, 2, 2, 8, 11, 3, 3, 0, 3,
	0, 3, 0, 3, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 8, 5, 3, 4, 3, 0, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 6, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	3, 1, 3, 3, 4, 5, 2, 2, 0, 2,
	2, 1, 1, 1, 0, 1, 0, 2, 2, 5,
	4, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 2, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 5, 4, 6, 3,
	5, 4, 6, 4, 6, 5, 7, 3, 3, 3,
	3, 3, 4, 3, 2, 4, 2, 3, 3, 4,
	3, 4, 3, 4, 5, 6, 6, 7, 6, 7,
	6, 7, 3, 4, 4, 1, 3, 1, 3, 3,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 5, 6, 6, 7, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 6, 2, 1, 1, 1,
	1, 1, 2, 1, 5, 5, 6, 3, 1, 1,
	1, 2, 2, 2, 4, 3, 5, 6, 8, 6,
	5, 4, 3, 4, 1, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	6, 8, 8, 6, 4, 6, 6, 6, 4, 1,
	3, 3, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 1,
	2, 3, 2, 3, 2, 3, 1, 0, 1, 3,
	1, 3, 3, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 2,
	3, 0, 3, 3, 2, 2, 1, 2, 2, 3,
	2, 1, 1, 1, 5, 1, 2, 4, 2, 0,
	1, 0, 3, 5, 1, 0, 1, 2, 1, 0,
	1, 3, 3, 2, 1, 1, 1, 3, 1, 3,
	3, 1, 1, 1, 1, 5, 3, 1, 1, 3,
	1, 1, 1, 1, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 478, -79, -50, -48, -82, -83, -68,
	-84, -78, -96, -100, -88, -102, -141, -146, -147, -3,
	-36, -38, -51, -67, -69, -77, -86, -85, -87, -89,
	-93, -92, -81, -42, -97, -101, -110, -142, -143, -144,
	88, 73, 131, 111, 117, 164, 303, 334, 344, 328,
	-105, -106, 363, -37, -49, -99, -98, 66, 112, -4,
	-12, 27, 41, -39, -40, -41, 57, -56, -53, -62,
	-484, 90, -448, -70, -73, -488, 122, 137, 181, 295,
	-90, -91, 330, 332, 138, -44, -43, 132, -157, -159,
	-103, -104, -145, -111, -112, -113, -114, -115, -116, -117,
	-118, -119, -120, -121, -122, -123, -124, -125, -126, -131,
	-127, -128, -129, -130, -132, -133, -134, -135, -136, -137,
	-138, 367, 414, 42, 377, 74, 125, 338, 21, -5,
	-6, -7, -8, -9, -10, -11, -52, -54, -55, -57,
	-58, -59, -66, -60, -61, -447, -71, -72, -74, -75,
	-76, 329, -160, -158, 475, 428, -14, -19, -20, -15,
	-16, -18, -21, -17, -25, -30, -31, -27, -28, -26,
	-29, -32, -33, -34, -35, -23, -24, -13, -22, 446,
	454, -163, -161, -162, -170, 351, 436, 391, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, -216, -221,
	-222, -223, -215, -188, -419, -422, 4, -417, -420, 143,
	188, 261, 21, 22, 23, 24, 25, 27, 38, 40,
	39, 41, 42, 45, 48, 49, 47, 52, 53, 54,
	55, 56, 57, 58, 61, 66, 67, 72, 73, 74,
	75, 76, 77, 83, 80, 81, 82, 85, 87, 88,
	89, 91, 93, 94, 102, 103, 104, 105, 106, 107,
	111, 112, 115, 114, 117, 120, 121, 122, 124, 126,
	127, 129, 131, 132, 135, 133, 397, 134, 136, 137,
	138, 139, 149, 150, 151, 153, 154, 156, 158, 162,
	163, 165, 169, 171, 172, 173, 174, 180, 181, 183,
	184, 189, 185, 190, 194, 197, 196, 198, 199, 200,
	191, 205, 209, 210, 211, 213, 214, 217, 218, 219,
	220, 221, 224, 223, 226, 229, 230, 233, 234, 237,
	238, 239, 240, 242, 243, 246, 244, 247, 245, 248,
	251, 249, 250, 253, 254, 259, 257, 255, 256, 263,
	266, 178, 268, 269, 271, 272, 273, 289, 276, 277,
	278, 281, 282, 285, 288, 290, 291, 292, 293, 294,
	295, 296, 298, 299, 301, 303, 304, 306, 308, 309,
	310, 311, 312, 313, 314, 316, 317, 319, 320, 321,
	322, 323, 328, 325, 326, 327, 329, 330, 331, 332,
	334, 336, 337, 338, 339, 341, 343, 364, 365, 379,
	344, 345, 346, 347, 348, 349, 350, 354, 358, 355,
	356, 357, 352, 353, 359, 360, 361, 363, 366, 367,
	369, 370, 372, 373, 375, 376, 377, 378, 380, 383,
	384, 385, 381, 382, 390, 388, 389, 392, 393, 394,
	395, 396, 398, 400, 408, 409, 411, 414, 415, 416,
	406, 418, 419, 422, 423, 424, 427, 425, 426, 432,
	428, 430, 433, 434, 435, 441, 440, 447, 448, 450,
	451, 452, 33, 43, 44, 46, 50, 62, 63, 64,
	68, 108, 109, 130, 140, 141, 152, 166, 168, 175,
	176, 177, 195, 201, 203, 207, 227, 265, 267, 283,
	287, 300, 302, 315, 340, 371, 386, 401, 402, 403,
	404, 410, 412, 436, 437, 438, 442, 449, 274, -209,
	2, -188, -188, 303, 26, 2, 26, 299, 353, 393,
	395, 2, -471, -263, 2, 26, -191, -188, 90, 164,
	351, -209, 2, -471, -263, 24, 2, -188, 2, -192,
	2, 344, -188, 478, 85, 234, 67, 340, 360, -108,
	409, -107, 401, 346, -109, -409, 2, 251, -188, 478,
	478, 478, 26, -199, -188, 478, 2, 391, 292, 440,
	352, 104, 312, 188, -480, 336, 167, 429, 405, -466,
	2, 4, -420, -417, -226, -225, 391, 104, -223, -215,
	468, -222, 478, 478, 478, 2, 210, 211, 311, 310,
	360, 361, 478, 478, 2, 25, 60, 84, 87, 110,
	139, 159, 162, 279, -485, 243, 289, 309, 359, 390,
	398, 411, -479, 378, 61, 346, -478, -480, 416, 120,
	-310, 104, 234, 163, 423, 395, 393, 421, 115, 194,
	426, 425, 478, 25, 60, 70, 87, 120, 139, 159,
	162, -487, 289, 309, 343, 346, 359, 390, 398, 416,
	411, 2, 440, 352, 391, 188, 104, -480, 307, -79,
	2, 475, 29, 28, 363, -153, 391, 204, 2, -188,
	210, 211, 2, 478, 478, 160, -466, 2, 210, 211,
	2, 204, 2, 61, 348, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 2, -139, 360, 378, 173, 41, 67,
	26, 308, 72, 293, 105, 165, 188, 189, 218, 84,
	85, -312, 40, 211, 210, -363, 392, 347, 353, 388,
	344, 409, 90, 430, 337, 452, 312, 313, 133, 4,
	104, 251, 362, 401, 234, 76, -493, 2, 391, -496,
	2, 409, 409, 2, -496, 2, -496, 2, -496, 2,
	-497, 409, 449, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, -158, -160, -159,
	478, 478, 478, 478, 478, -139, 360, 2, 67, 26,
	-257, -258, 420, 202, 128, 280, -157, -159, 2, -447,
	-407, 2, -338, -423, -340, 466, 467, 459, 260, 453,
	-351, 110, 421, 274, -422, -341, -353, 130, 340, -278,
	8, 9, 5, 6, 7, -197, -384, -347, 413, 142,
	264, -229, 479, 10, 475, -444, -159, -352, 34, 168,
	59, -411, -228, -386, -394, -390, -391, -500, 48, 55,
	54, 398, 250, 354, 355, 372, 356, 357, 45, 432,
	185, 271, 273, 196, 4, 203, -227, -215, -441, -442,
	-417, -418, 195, 201, 197, 371, 198, 199, 200, 44,
	315, 153, 154, 152, 121, 109, 108, 267, 50, 49,
	46, 437, -395, 106, 401, 402, 403, 404, 213, 214,
	-188, -419, 70, 96, 97, 95, 100, 99, 236, 235,
	101, 98, 362, 429, 60, 33, 175, 176, 207, 265,
	177, 68, -443, 382, 92, 161, 193, 179, 206, 208,
	212, 228, 231, 252, 258, 262, 284, 286, 335, 368,
	-501, 438, 140, 141, 287, 300, 386, 410, 412, 166,
	227, 62, 63, -449, 316, -450, -209, -449, 478, 478,
	480, 478, -251, -252, -253, 2, 26, 118, 475, 2,
	-367, 2, -368, -372, -159, 222, -371, 475, -369, 473,
	-216, 275, -445, 341, -441, -442, -197, -215, -228, 4,
	-254, 475, 477, 104, 391, 71, 188, -305, 475, -188,
	26, 274, 405, 480, -349, 475, 274, 160, 277, -188,
	2, 2, 364, 2, 475, -108, 64, 409, 39, 360,
	-325, 2, -326, -185, -186, -187, -377, 209, 306, 314,
	455, 452, -407, -481, 160, 458, 405, -407, -279, 477,
	2, -372, 175, -216, 2, -213, -410, 4, -417, -420,
	-418, -421, 70, -419, 26, 28, 29, 30, 32, 34,
	35, 36, 37, 51, 59, 60, 65, 69, 71, 79,
	84, 90, 95, 96, 98, 97, 99, 100, 101, 110,
	113, 116, 118, 119, 123, 125, 128, 142, 144, 157,
	159, 160, 164, 167, 170, 182, 192, 202, 204, 222,
	225, 232, 235, 236, 260, 264, 270, 274, 275, 279,
	280, 297, 305, 318, 333, 351, 362, 374, 387, 391,
	399, 405, 407, 413, 420, 421, 429, 431, 439, 443,
	444, 445, 446, -422, 2, -372, 175, 2, -218, 175,
	-372, -221, 2, -200, -188, 2, -212, -410, 2, -232,
	175, -216, -217, -221, -415, 175, 2, -413, 10, -412,
	5, 4, -417, -420, -418, -94, -415, 475, 405, 480,
	-269, -225, -226, -262, -188, 477, -338, 2, -97, 2,
	-338, 175, 2, -97, 175, 2, -338, 175, 2, -97,
	175, 2, 2, 2, 411, 2, 87, 175, -188, 391,
	103, 2, 327, -486, 343, 415, 440, 2, 2, 2,
	2, 2, 2, 391, -205, 2, -188, 157, -224, 175,
	2, -188, 352, -494, 316, -415, 175, 2, -219, -221,
	-219, 188, 205, -200, 175, 2, 395, 393, 395, 393,
	160, 2, 204, 2, 204, 2, -373, 2, -374, -368,
	-216, 473, 2, 2, 2, 2, 2, 175, -188, 391,
	103, 2, 220, 2, 2, 2, 2, 2, 2, 2,
	2, 2, -271, 175, 2, -216, -271, 175, 2, -271,
	175, 2, -311, 2, 79, -200, 175, 2, -416, 175,
	2, -415, -381, 2, -380, -412, 436, -79, 475, -79,
	475, 360, 475, -415, -216, -216, -338, -97, -95, -94,
	160, -338, -97, -153, 157, 2, 104, 391, -139, 2,
	157, 431, 2, 8, 2, -415, 347, 313, 149, 2,
	364, 2, 365, 67, -312, 452, 67, 160, 2, 160,
	2, -295, 2, 446, -469, 2, 274, 160, 2, 160,
	2, 160, 2, 160, 2, 160, 2, 310, 361, 211,
	2, -97, 443, -338, 443, 2, 408, 219, 134, 160,
	-295, 2, 160, 2, 160, 2, 5, 2, 379, 2,
	209, 306, 379, 2, -216, -489, 2, 391, 440, 352,
	2, 2, 80, 81, 160, 2, 160, 2, 160, 452,
	2, -288, -372, -324, -325, -324, 405, -257, -258, -139,
	364, 2, -164, -286, -166, 157, -314, -315, -167, 232,
	144, 270, -168, -294, 26, 118, -294, -294, 53, 476,
	476, 11, 12, 69, 38, 466, 467, 468, 469, 155,
	470, 471, 464, 465, 463, 456, 457, 461, 215, 216,
	86, 460, 458, 78, 241, 342, 145, 146, 147, 148,
	324, 186, 31, 187, 14, 15, 16, 30, 279, 231,
	453, 179, 368, 459, 17, 18, 19, 206, 208, 262,
	43, 182, -196, -234, -338, -338, -338, -338, -338, 286,
	475, -284, -333, 473, -159, 475, 475, 475, 5, -406,
	8, -159, -338, -351, 476, -276, 475, -159, -351, -346,
	475, 340, 473, 475, -354, -338, 5, 475, 477, -451,
	447, -388, 475, 302, -387, 475, -387, -387, 441, -385,
	475, 454, 448, 475, -385, 475, 475, 157, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 441, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 480, -449, -254, 475, -280, -375, -338,
	468, -280, -280, 274, -273, -338, 92, -298, 212, 252,
	161, 228, 335, 193, -335, 479, -335, -362, 454, -159,
	-369, -215, -159, -371, 475, -367, -362, -80, -406, -67,
	-77, -85, -97, -110, -143, -144, 468, -216, 475, 160,
	475, 477, 160, -262, -410, -200, -216, -227, -228, -232,
	117, -273, -466, -262, -191, 35, -348, -382, -383, -384,
	-393, -389, -392, -396, 48, 55, 54, 398, 250, 354,
	355, 372, 356, 357, 45, 432, 185, 271, 273, 196,
	4, 46, 437, -395, 203, 320, 321, 319, 323, 322,
	195, 201, 197, 371, 198, 199, 200, 44, 315, 153,
	154, 152, 121, 109, 108, 267, 50, 49, 106, 401,
	402, 403, 404, 213, 214, 438, 382, 62, 63, -466,
	-262, 157, -409, -273, 35, -325, 2, 110, -413, 39,
	-498, 480, 230, -236, 240, 259, 172, 275, 450, 268,
	-414, 5, 4, -347, -359, 110, 234, 203, -400, -402,
	8, -401, 9, -403, 466, 467, -408, -407, 94, 477,
	-410, -175, 325, -174, 23, 27, 122, 434, 135, -244,
	190, 292, 130, 375, 424, -475, -476, 345, 396, 397,
	82, 268, 325, 130, -291, -293, 35, 102, 254, 288,
	56, 183, 245, 246, 377, 442, 130, 325, -476, 325,
	-476, -177, 375, 424, -475, -476, 345, 325, -176, -244,
	130, 479, -472, -446, 446, 130, -378, -377, -416, -94,
	-269, 480, 480, -410, 468, 130, 130, 130, 130, 2,
	2, 260, 2, 2, 2, 162, -478, -487, 2, 2,
	2, -216, 175, -256, 274, -468, -270, 391, -216, 260,
	-218, 175, 2, -221, 440, -472, 260, 35, 475, 2,
	-311, 2, 188, -446, 260, -373, -230, -216, -368, -230,
	363, -209, 35, -335, -335, 130, 2, 2, 2, -188,
	-178, 480, 58, 331, 130, -178, 130, -178, 130, -233,
	175, -232, -178, 130, 480, 130, 476, 480, -381, -381,
	-415, -151, 446, 160, 90, 475, 475, -153, -378, 480,
	-95, -415, -468, -200, 2, -216, 2, 391, 213, -151,
	-415, -415, -415, -409, 26, 365, 2, 310, 361, 81,
	365, 2, -216, 391, 104, 188, 73, -470, 157, -467,
	336, -466, -216, 104, -216, 104, -216, 104, -216, -216,
	2, 2, 2, 2, 77, 77, 157, 2, 408, 2,
	408, 2, -188, -188, -188, 230, -216, 157, 391, 188,
	391, 188, 104, 391, -178, 480, -192, -164, -286, -409,
	-287, -286, -165, -164, -167, 157, 314, 425, 254, 366,
	217, -315, -314, 26, -338, -319, 151, 253, -338, -317,
	-340, 466, 467, -401, -403, -272, 268, -158, -158, -158,
	-259, -364, -338, 305, 188, -397, -382, -382, -214, -410,
	401, -338, -338, -338, -338, -338, -338, -338, -338, -338,
	-338, -338, -338, -338, -338, -338, -338, -338, -338, -338,
	-338, -338, -338, -338, -338, -338, -338, -338, -338, -338,
	-338, -338, -338, -338, -338, -338, 231, 179, 368, 43,
	182, -338, 405, -338, -338, -338, -338, 249, 260, 264,
	413, 142, 422, 118, 268, -502, 387, 37, -344, -159,
	-277, 475, -358, 32, 374, 26, -351, 475, 2, -333,
	-338, -334, -274, -273, -273, 476, 439, 26, 118, 468,
	2, 476, 480, 35, 476, -338, -274, -350, -346, -273,
	-357, -356, 443, -306, -307, 451, 248, 107, 174, 247,
	-308, 350, -404, 8, -410, 468, -452, 150, 167, 8,
	-404, -404, 401, 401, -404, -404, -404, 475, 476, 2,
	476, 2, 476, -338, 2, 476, -338, 2, 476, -338,
	2, 476, -338, 2, 476, 2, -338, -338, -338, -338,
	-338, -338, -338, -273, -300, 2, -398, -273, 4, 451,
	248, 107, 174, 247, 350, 5, -300, 2, -301, 2,
	-338, -273, -302, -339, -340, 466, 467, 459, -351, -303,
	2, -338, -274, -338, 51, 225, 407, -304, -338, 160,
	-273, -273, 2, -273, 2, -450, 35, -273, -265, 480,
	160, 35, 4, -265, -265, 475, 476, 480, -299, 171,
	244, 239, -299, -367, -298, 212, -296, 284, -296, -296,
	-362, -201, 473, 481, -410, -362, -361, -360, 35, -209,
	281, -362, -362, 477, 476, -361, 474, -464, 475, 478,
	478, 478, 478, 478, -216, 475, -273, -410, 380, 476,
	477, 206, 206, 206, 206, 341, 476, 405, 446, -79,
	276, 476, 480, -264, 34, 473, -399, 441, 475, 475,
	-307, 475, 160, -263, -481, 476, 409, -326, -235, 314,
	373, 326, 358, 389, 8, 9, 8, 9, 480, -410,
	480, -482, 84, 405, 71, -329, 175, 71, -424, -203,
	84, -425, -188, 65, 421, 305, 159, -482, 84, 305,
	-482, 84, 84, 363, 378, 53, -372, 38, 38, 26,
	-97, 226, 160, 452, 391, 188, 405, -372, -293, -382,
	102, 245, 246, 53, -405, -400, 466, 467, -405, 53,
	-405, -405, -405, 446, -218, -372, 405, 405, 480, 38,
	38, 26, -97, 226, 160, 405, -232, -201, -473, -193,
	91, 255, 238, 256, -194, -195, 294, 433, -415, -148,
	184, 476, -378, -225, -188, 477, -338, -97, -338, -97,
	130, 2, -494, 220, 475, -239, 260, 160, -262, -379,
	204, 480, -270, 130, -292, -291, 260, -220, 175, 2,
	-216, 130, 475, 126, 312, 2, -202, 175, -189, -188,
	-311, -181, 394, 130, -290, 431, -320, -97, 475, 110,
	35, -320, -281, -282, -376, -283, -203, 475, -209, -188,
	2, -216, -271, -271, -271, -178, 480, 130, -200, -415,
	-416, -79, -380, 476, 476, 476, -150, 278, -149, -188,
	5, -153, 431, -238, -330, -329, -428, -429, -424, 231,
	188, 421, 205, 143, -255, -204, -203, 103, -151, -94,
	-378, -151, -151, -378, -378, -216, 157, -151, -151, -151,
	2, 2, -295, -216, -200, -232, -216, -262, -262, -295,
	-200, -295, -200, -295, -200, -97, -338, 360, 157, 157,
	477, -295, 312, 104, 391, 292, 188, -216, -232, -216,
	-232, -200, -216, -372, -287, -165, 275, 217, 366, -317,
	-318, -340, 340, 341, -318, 340, 341, 8, 9, 8,
	9, -169, 370, 263, -271, 480, -172, 36, 116, 217,
	-216, 452, 127, -338, -338, 405, -502, 387, -344, 127,
	-338, 249, 264, 413, 142, 422, 118, 268, 160, 475,
	-339, -339, 476, -275, -338, -338, 474, 483, 476, -258,
	480, -257, -338, -273, -273, 476, 477, -273, -262, 474,
	474, 480, 476, -355, -356, 123, -338, 405, 405, 405,
	405, 475, 476, 477, -457, 285, 475, 475, 476, 476,
	480, 476, 452, 452, 476, 476, 476, -338, 476, 476,
	476, 476, 35, 480, 480, 480, 476, 480, 480, 480,
	476, 476, 160, 476, 476, -309, 297, 476, 11, 12,
	466, 467, 468, 469, 155, 470, 471, 464, 465, 463,
	456, 457, 458, 78, 241, 342, 14, 15, 16, 206,
	182, -339, -339, -339, 476, -342, -343, 160, 157, 35,
	-304, -304, -304, 476, 160, -273, 476, 476, 475, 476,
	-332, -331, 444, -375, -266, 2, -367, -211, -410, -332,
	-332, -273, -338, 212, 212, -297, 431, 274, -299, -367,
	-361, -406, -337, -336, 158, 36, 116, 257, 178, -361,
	-209, -254, -361, -361, -410, -362, -362, -360, 476, -465,
	-406, 476, -267, -370, -445, -258, 477, -151, -410, -140,
	5, 264, -140, -140, -140, -262, 24, 298, -382, 473,
	474, 8, 475, -404, -404, -404, -262, 160, -407, -325,
	419, 75, 314, 401, -407, -174, 325, -203, -203, -216,
	260, -329, 175, -180, 260, -382, -210, -188, 475, 475,
	217, 217, -203, -210, 217, 175, -203, 175, -210, -210,
	-474, 314, 269, -338, 233, 312, 261, -175, 325, -97,
	-97, -97, 475, -481, 431, 117, -216, -232, -216, -220,
	325, 258, -227, -405, -405, -291, 325, -218, -200, -176,
	-97, -97, -97, 475, -201, -177, 325, -193, -415, 264,
	427, -472, -151, 160, -148, 468, -188, 440, -188, -237,
	-240, -238, -203, -156, 448, 446, 130, -231, -216, 473,
	-151, -415, -216, -224, 130, -254, 260, -415, 2, 475,
	2, 274, 260, -202, 175, -182, 124, -499, 458, -200,
	-332, -266, -289, -323, 333, 274, -255, 436, -209, -289,
	-268, 480, 160, 458, 477, -255, 2, -178, -178, -178,
	-232, -233, -178, -79, -79, -151, 480, 475, 458, 458,
	475, -415, -415, 476, 480, -216, -202, 188, 188, -208,
	-189, 476, 480, 477, 475, -151, 160, -45, 446, 391,
	479, -295, -295, -295, 360, 360, -188, -212, -200, -216,
	-213, -232, 157, 157, 425, -318, 275, 237, -364, -173,
	266, -216, 479, -338, -338, 127, 127, -338, -339, -339,
	-338, 127, 160, 475, -338, -348, 30, 30, 476, 480,
	-334, -338, 476, 439, -258, -258, 476, 468, -410, 479,
	476, -346, 125, -338, 399, 248, 174, 247, -308, 247,
	-308, -308, -404, 5, -410, 468, -458, -206, 475, -188,
	444, -257, -404, -385, -385, 476, -397, -382, -338, -338,
	-338, -338, -338, -338, -342, -338, -397, -382, -339, -339,
	-339, -339, -339, -339, -339, -339, -339, -339, -339, -339,
	-339, -339, -339, -339, -339, -339, -339, 118, 260, 268,
	-339, -343, -342, -338, -338, -382, 476, 476, 476, -273,
	-79, -285, 167, -338, -378, 480, -285, -285, 476, -367,
	-367, 475, -338, 212, 474, 480, 482, 458, -254, 477,
	-360, -361, 474, 476, 480, 476, 480, -322, 35, 476,
	-410, 277, 5, 8, 473, 474, -404, 476, 476, 476,
	-262, -338, 405, 405, 130, 260, 433, -430, -425, -338,
	-260, -365, -338, 475, 475, -171, 122, 363, -483, 2,
	431, 130, -178, 130, -178, 450, 475, 475, 405, 446,
	-273, -338, -152, 110, -409, -476, 479, -476, 479, 405,
	405, 446, -273, 405, -415, 264, -416, -151, 2, 2,
	2, 476, 476, 480, -431, 35, 272, 475, 272, -216,
	-63, 446, -377, -406, -218, 35, 130, -472, 2, -216,
	130, 274, 260, -183, 224, -499, -413, -446, -258, -289,
	-280, 261, 83, 476, -332, -282, -266, -338, 2, 476,
	-178, -149, -150, -415, -415, -415, -151, -153, -153, -330,
	2, 475, -202, -189, 475, -153, -204, 2, -416, -97,
	278, -216, 468, -295, -246, -245, 292, 268, -246, 340,
	340, 275, 151, 221, -172, -201, -338, -338, 127, 30,
	30, -338, -338, -348, 476, -338, -338, -273, 474, 5,
	-338, 476, 476, 8, -338, 476, 477, -459, -188, -338,
	476, 476, 476, 476, 480, 480, 476, 476, 476, 476,
	-343, 160, 118, 268, 475, 476, 476, -345, 170, 53,
	-367, -345, -345, -297, -262, -367, -336, -201, 473, -410,
	-406, -370, 475, 477, 474, 2, 473, 476, -203, -203,
	-329, 130, -432, 84, -434, 69, 143, 90, 260, 264,
	421, 305, 65, 110, 318, 35, 476, 476, 480, -172,
	-260, -262, 260, 384, 110, 260, 110, 103, 416, 72,
	-203, -210, -262, -262, -216, 136, 476, 480, 458, 2,
	468, 468, -220, -218, 136, 476, -201, -242, 191, -203,
	-429, -426, -427, 305, -433, -435, 143, 305, -97, -155,
	-154, -188, 5, 2, 475, -239, 278, 474, -292, -97,
	-220, -313, 431, -201, -216, 130, -184, 223, -499, -413,
	-181, -316, -314, -321, 475, 274, -97, -258, 458, 476,
	476, 103, 103, -260, 475, 475, -262, 103, 476, -46,
	-47, 188, 84, 296, -213, 391, 188, 475, 475, -172,
	-338, -338, -338, 476, -258, -410, 468, -453, 292, 476,
	-338, -338, -339, 160, 475, -348, -454, 445, -338, -273,
	-454, -454, 476, -406, 2, 473, 2, -329, -210, -214,
	-207, -188, 143, 175, 264, 217, 475, -339, -216, 475,
	2, -491, 113, 192, -328, -492, 89, 385, -365, -173,
	476, 476, 264, 264, -338, -382, 475, -178, -178, 476,
	476, -338, 405, -409, 88, -407, 2, -476, -338, 405,
	-243, -244, 182, -431, 217, -207, 217, -490, 446, 476,
	480, 458, 458, -237, -156, -64, -65, 406, -377, -254,
	475, -188, 274, 475, -201, -499, -413, -182, -289, 119,
	-262, 84, -316, -344, -151, 475, 475, 476, -260, -260,
	476, 475, -151, 480, 26, 475, 26, 475, -216, -232,
	-273, -273, 476, -258, 53, 476, 476, -339, -348, 476,
	-455, -456, -206, 474, 2, -434, -207, 260, 431, -338,
	-190, 475, -338, 192, 114, 180, -242, 475, -327, 431,
	318, -198, 69, -260, 475, 475, 475, 458, 160, 475,
	-156, 290, 475, -241, 274, 103, 254, -154, -341, -341,
	476, 35, -65, 9, 35, -260, -216, -260, 274, -413,
	-183, 425, 261, 476, -210, -289, -416, -416, -327, 476,
	476, -416, -47, -262, -262, 476, 476, -460, 312, 341,
	169, -273, 476, 480, 35, 130, 171, 476, -436, 242,
	-188, 476, 114, 180, -243, -262, -242, 171, -216, -477,
	431, -214, 476, -248, -247, -245, -250, -249, -245, -273,
	-407, 88, 290, -273, -241, -216, -261, -366, -203, 74,
	103, -242, -97, -97, 476, -313, 476, -216, -184, 363,
	-331, 476, 476, -328, -327, 476, 476, 476, 476, -461,
	-462, 43, 418, 94, -338, -461, -461, -456, -458, 143,
	446, -437, -440, -439, 274, 369, 161, 291, 476, 384,
	442, -491, 476, 446, -254, -338, -327, 476, 480, 436,
	476, 480, 436, 476, 160, 476, 475, 476, 480, 304,
	115, 122, -243, -490, -327, 475, -328, 475, -281, -151,
	-151, -242, -328, -151, -463, 129, -462, 301, 156, 340,
	301, 156, -463, -463, -207, 47, -439, 274, -440, 274,
	425, 115, 47, -436, -242, -247, 182, -249, 160, 290,
	-262, -366, 341, 341, 2, -156, -241, -328, -260, -242,
	-260, -332, -243, -242, 94, 167, 400, 254, 30, 458,
	-438, 254, 331, 58, 363, -438, 458, -437, 475, 475,
	476, 2, -241, -242, 476, -243, 476, -243, 340, 282,
	-462, -338, 22, 264, 110, -338, -491, -273, -273, -179,
	58, 331, -243, -327, -495, 444, -328, 476, 476, -495,
	-328, 2, -242, -243, 405, -242, -243, 475, -243, -495,
	-273, -495, 476, -243,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 5, 6, 8, 10,
	12, 14, 16, 18, 20, 22, 23, 24, 25, 365,
	366, 368, 369, 370, 372, 373, 375, 377, 379, 381,
	382, 384, 386, 388, 389, 390, 391, 392, 394, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	454, 456, 0, 964, 966, 968, 970, 0, 584, 27,
	28, 0, 0, 192, 194, 196, 0, 221, 223, 224,
	226, -2, 0, 322, 323, 325, -2, -2, 0, 0,
	443, 445, 0, 0, 0, 465, 466, 0, 1052, -2,
	459, 461, 463, 528, 530, 532, 534, 536, 538, 540,
	541, 543, 545, 547, 549, 551, 553, 555, 556, 558,
	560, 562, 564, 566, 568, 570, 572, 574, 576, 578,
	580, -2, -2, -2, 0, -2, -2, -2, 982, 31,
	33, 35, 37, 39, 41, 43, 274, 275, 277, 279,
	281, 283, 286, 287, 289, 1107, 327, 329, 331, 333,
	335, 0, -2, 1119, 0, 0, 45, 46, 47, 48,
	49, 50, 51, 52, 68, 69, 70, 71, 72, 73,
	74, 75, 56, 58, 59, 63, 64, 66, 54, 0,
	0, 1083, 1085, 1087, 1089, -2, 0, 0, 7, 9,
	11, 13, 15, 17, 19, 21, 367, 371, 374, 376,
	378, 380, 383, 385, 387, 393, 395, 397, 847, 1743,
	1758, 1759, 1760, 1763, 1764, 1765, 1766, 1767, 1768, 2121,
	2202, 2203, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
	1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804,
	1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814,
	1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824,
	1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834,
	1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844,
	1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854,
	1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864,
	1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874,
	1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 0, 421,
	419, 1736, 422, 1950, 424, 426, 316, 317, 318, 319,
	320, 321, 0, 436, 430, 435, 437, 439, 440, 441,
	442, 416, 414, 0, 436, 1790, 434, 962, 963, 957,
	958, 1985, 989, 455, -2, -2, -2, 2089, -2, 487,
	-2, 494, 2092, 1987, 499, 0, 501, -2, 504, 965,
	967, 969, 582, 583, 1746, 29, 30, 0, 0, 0,
	0, 0, 0, 0, 0, 896, 897, 898, 0, 0,
	156, -2, -2, -2, -2, 0, 0, 1831, 1704, 1760,
	1707, 1702, 193, 195, 197, 198, 0, 0, 0, 0,
	0, 0, 222, 225, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 758, 750, 751, 934, 0, 0,
	0, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, -2, 0, 0, 252, 357,
	358, 0, 1108, 1108, 0, 0, 0, 0, 173, 164,
	0, 0, 727, 444, 446, 0, 0, 159, 0, 0,
	961, 0, 175, 0, 0, 460, 462, 464, 529, 531,
	533, 535, 537, 539, 542, 544, 546, 548, 550, 552,
	554, 557, 559, 561, 563, 565, 567, 569, 571, 573,
	575, 577, 579, 581, 585, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, -2, -2, -2, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 588,
	590, 591, 592, 0, 643, 660, 0, 887, 1109, 991,
	972, 986, 991, 974, 975, 976, 977, 978, 983, 985,
	979, 980, 981, 32, 34, 36, 38, 40, 42, 44,
	276, 278, 280, 282, 284, 288, 290, -2, 1081, 1082,
	328, 330, 332, 334, 336, 447, 0, 449, 0, 589,
	-2, 0, 1113, 1113, 1113, 0, 0, 1082, 1080, 0,
	452, 453, 508, 509, 1351, 0, 0, 0, 0, 0,
	1601, 1435, 0, 510, -2, 1466, 1468, 2068, 2089, 1600,
	1470, 1471, 1472, 1473, 1474, 0, 0, 1477, 1478, 1479,
	1480, 1481, 0, 1483, 0, 1488, 1489, 1490, 0, 2073,
	1681, 1756, -2, 1254, 1255, 1256, 1257, 1258, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 2079, 1752, 0, 1567, 1504,
	-2, 1777, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1841, -2, -2, -2, -2, -2,
	-2, -2, 1310, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 2103, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 0, 2057, 2074, 2075, 2080, 2082,
	2076, 2065, 1529, -2, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	1311, -2, 2069, 2070, 2085, 2086, 2091, 2096, 2097, 2072,
	2081, -2, -2, 1099, 1960, 1102, 847, 1100, 1084, 1086,
	0, 1088, 0, 0, 0, 1093, 1116, 1114, 0, 1155,
	1097, 1098, 1173, 1173, 1197, 0, 1178, 0, 1197, 1108,
	1223, 0, 1184, 1980, 1505, 1506, 0, 1760, 1757, -2,
	0, 0, 0, 0, 0, 0, 0, 417, 0, 423,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 988,
	457, 458, 0, 482, 0, 486, 2064, -2, 1795, 2000,
	-2, 490, 992, 996, 997, 998, 999, 0, 0, 0,
	0, 0, 496, 0, 0, 483, 484, 502, 505, 0,
	53, 0, 2074, 1223, 55, 0, 1726, 1782, 1783, 1784,
	1785, 1786, 2103, 2120, 2122, 2123, 2124, 2125, 2126, 2127,
	2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137,
	2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147,
	2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157,
	2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167,
	2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177,
	2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187,
	2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197,
	2198, 2199, 2200, 2201, 57, 0, 2074, 60, 0, 2074,
	0, -2, 65, 0, 1732, 67, 0, 1729, 76, 0,
	2074, 0, 1701, -2, -2, 2074, 895, 176, 177, 1773,
	1774, 1778, 1779, 1780, 1781, 1210, 160, 0, 0, 0,
	719, 1698, 1703, 720, 1708, 0, 199, 200, 201, 202,
	203, 2074, 205, 206, 0, 208, 209, 2074, 211, 212,
	0, 214, 228, 229, 0, 231, 0, 2074, 0, 0,
	0, 237, -2, 253, 0, 250, 0, 241, 242, 244,
	245, 246, 247, 0, 294, 292, 1737, 0, 728, 2074,
	730, 1742, 0, 0, 916, -2, 2074, 892, 921, 1740,
	0, -2, 0, 1106, 2074, 1006, 754, 755, 756, 757,
	0, 313, 0, 1019, 0, 1021, 0, 1042, 1229, 1173,
	1173, 0, 254, 255, 256, 257, 258, 2074, 0, 0,
	0, 263, 0, 265, 266, 267, 268, 269, 270, 271,
	272, 273, 151, 2074, 339, 355, 151, 2074, 342, 151,
	2074, 345, 0, 348, 932, 151, 2074, 351, 352, 2074,
	354, 178, 0, -2, 410, 1745, -2, 360, 0, 361,
	0, -2, 0, 190, 0, 0, 725, 726, 1210, 162,
	0, 959, 960, 0, 0, 467, 0, 0, 586, 587,
	0, 0, 597, 598, 599, 190, 1988, 1958, 1857, 604,
	0, 607, 610, -2, 0, 0, 0, 0, 614, 0,
	619, 620, 621, 0, 724, 623, 0, 0, 625, 0,
	629, 0, 632, 0, 634, 0, 636, -2, -2, -2,
	647, -2, 0, 651, 0, 653, 0, 0, 0, 0,
	668, 669, 0, 674, 0, 677, 678, 679, 680, 681,
	0, 683, 684, 685, 686, 0, 688, 689, -2, -2,
	693, 695, 0, 702, 0, 706, 0, 710, 0, 593,
	594, 151, 1227, 971, -2, 973, 0, -2, 0, 448,
	0, 451, 1134, 1067, 1064, 0, 1131, 1132, 1068, 0,
	0, 0, 1075, 0, 1111, 1112, 0, 0, 0, 1054,
	1055, 0, 0, 0, 0, 1606, 1607, 1608, 1609, 1610,
	1611, 1614, 1615, 1612, 1613, 1616, 1617, 0, 0, 0,
	0, 0, 1618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1619, 1620, 1621, 0, 0, 1623,
	0, 1625, 0, 0, 0, 0, 0, 0, 1414, 1416,
	1689, 0, 0, 1622, 1356, 1357, 1358, 1393, 1394, 0,
	0, 1467, 1686, 1685, 1469, 0, 1637, 0, 1476, 1482,
	1722, -2, 0, 1601, 1632, 0, 0, 1491, 1492, 1493,
	0, 0, 1637, 0, 0, 1680, 1348, 0, 0, 1569,
	0, 1290, 0, 1291, 1292, 0, 1293, 1294, 1307, 1320,
	0, 0, 0, 0, 1324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1312, 0, 0, 0, 1661, -2, 0,
	0, 0, 0, 0, 1101, 0, 0, 1159, 1690, 1694,
	1695, 1159, 1159, 0, 0, 1638, 1220, 1220, 0, 0,
	1216, 1216, 1216, 1214, 1197, 0, 1197, 1207, 0, 1197,
	1197, 0, -2, 1178, 0, 0, 1207, 0, 1191, 398,
	400, 402, 404, 405, 406, 408, 1224, 1225, 0, 0,
	0, 0, 0, 0, 1761, 0, 0, 0, 1748, 0,
	0, 0, 0, 428, 438, 1108, 0, 1640, 1246, 1249,
	1250, 1251, 1252, 1253, 1259, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, -2, 1308, 1310, 1331, 1297, 1298, 1299, 1300, 1301,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1303, 0, 1278, 1278, 1278, 1295, 1296, 1319, 1330,
	1322, 1330, 1326, 1247, 1248, 1313, 1314, 1315, 1316, 0,
	432, 0, 0, 0, 0, -2, 492, 497, 498, 0,
	0, 994, 0, 1000, 519, 520, 521, 1002, 1003, 0,
	495, 522, 523, 524, 525, 526, 527, 0, 1710, 1711,
	1712, 1713, 1716, 1717, 0, 0, 493, 512, 500, 0,
	506, 77, 954, 116, 0, 954, 954, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 101, 112, 89, 90,
	0, 0, 0, 0, 61, 869, 0, 872, 0, 0,
	0, 0, 0, 0, 0, 885, 0, 0, 100, 0,
	95, 79, 0, 0, 0, 102, 114, 0, 142, 144,
	0, 0, 893, 0, 1105, 0, 181, 1209, 0, 1210,
	718, 0, 0, 1761, 1706, 0, 0, 0, 0, 230,
	232, 0, 234, 235, 236, 0, 915, 0, 243, 240,
	285, 819, 2074, 0, 0, 311, 306, 0, 308, 0,
	868, 2074, 866, 1741, 0, 890, 0, 0, 0, 922,
	1770, 927, 933, 1008, 0, 315, 0, 1022, 1024, 0,
	0, 1230, 0, 1232, 1233, 0, 260, 261, 262, 0,
	337, 0, 149, 150, 0, 340, 0, 343, 0, 151,
	2074, 1696, 349, 0, 0, 0, 1108, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 190, 0,
	1210, 190, 190, 1210, 469, 1210, 471, 0, 0, 600,
	190, 190, 190, 605, 606, 608, 609, -2, -2, 703,
	611, 612, 671, 0, 0, 0, 670, 622, 0, 712,
	1976, 722, 671, 1831, 671, 1831, 671, 1831, 633, 635,
	638, 663, 646, 650, 0, 0, 0, 655, 0, 657,
	0, 659, 671, 672, 675, 682, 687, 0, 0, 0,
	0, 0, 0, 0, 886, 0, 984, 1134, 1067, 450,
	1058, 1133, 1059, 1066, 1069, 0, 0, 1071, 0, 1073,
	0, 1129, 1130, 1137, 1138, 0, 1148, 1149, 1141, 0,
	-2, 0, 0, 1144, 1145, 1077, 0, 1094, 1095, 1096,
	1120, 1121, 943, 0, 2202, 1352, 1241, 1353, 1354, 1725,
	0, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, -2, -2, -2, -2, -2, -2, -2, -2, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	-2, -2, -2, 1391, 1392, -2, 1624, 1626, 0, 1689,
	0, -2, 0, -2, -2, -2, -2, 1411, 0, 1413,
	1418, 1420, 1422, 0, 0, 0, 0, 1688, 1432, 1672,
	1673, 0, 0, 1603, 1604, 1605, 1417, 0, 1436, 1687,
	1684, 0, 0, 1636, 1119, 1495, 0, 0, 0, 0,
	1502, 1487, 1634, 0, 1633, 0, 0, 0, 1644, 0,
	1679, 1675, 0, 1723, 1347, 1334, 1335, 1336, 1337, 1338,
	1339, 1349, 0, 1720, 1749, 1755, 1577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1530, 1531,
	1532, 1533, 1534, 0, 1536, 1537, 0, 1539, 1540, 0,
	1542, 1543, 0, 1545, 1546, 1547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1549, 0, 1647, -2, -2,
	-2, -2, -2, -2, -2, -2, 0, 1551, 0, 1553,
	1638, 1658, 0, 0, 1437, 0, 0, 0, 1601, 0,
	1556, 1638, 1666, 0, 0, 0, 0, 0, 1638, 0,
	1671, 0, 1563, 0, 1565, 1103, 0, 0, 1236, 0,
	0, 0, 1693, 1236, 1236, 0, 1154, 0, 0, 1217,
	1218, 1219, 0, 0, 1220, 0, 1211, 1215, 1212, 1213,
	1207, 1170, 0, 0, 1727, 1207, 1176, 1206, 0, 847,
	1196, 1207, 1207, 0, -2, 1180, 1197, 0, 0, 399,
	401, 403, 407, 409, 0, 0, 1119, -2, 190, 846,
	0, 0, 0, 0, 0, 418, 420, 0, 0, 412,
	0, 415, 0, 1237, 1240, 0, 0, -2, 0, 0,
	1332, 0, 0, 0, 0, 485, 0, 993, 1001, 0,
	516, 0, 518, 0, 1714, 1718, 1715, 1719, 0, 507,
	0, 0, 0, 0, 953, 120, 2074, 0, 153, 0,
	0, 813, 1733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	91, 0, 0, 0, 0, 0, 0, 0, 870, 871,
	873, 880, 882, 0, 876, 1721, 0, 0, 877, 0,
	879, 881, 883, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 92, 0, 0, 0, 0, 1700, 911, 909,
	903, 904, 905, 906, 907, 908, 0, 0, -2, 190,
	0, 161, 181, 1699, 1709, 0, 204, 207, 210, 213,
	0, 238, 0, 0, 760, 733, 0, 0, 293, 190,
	0, 0, 307, 0, 864, 867, 0, 847, 2074, 902,
	1739, 0, 0, 0, 0, 920, 0, 2074, 1728, 1769,
	1770, 1010, 1016, 0, 1236, 0, 1040, 1025, 0, 0,
	0, 1040, 1044, 1045, 1047, 1048, 0, 0, 1231, 0,
	264, 356, 151, 151, 151, 346, 0, 0, 151, 179,
	353, 359, 411, 1108, 1108, 190, 188, 1935, 186, 183,
	185, 0, 0, 0, 761, 763, 764, 765, 766, 0,
	1770, 0, 1886, 1770, 0, 1028, 1030, 0, 157, 163,
	190, 0, 305, 468, 473, 595, 0, 601, 602, 603,
	640, 665, 613, 615, 616, 617, 0, 723, 721, 624,
	671, 627, 671, 630, 671, 649, 652, 654, 0, 0,
	0, 667, 0, 0, 0, 0, 0, 0, 0, 707,
	708, 709, 711, 1228, 1062, 1063, 1065, 0, 1074, 0,
	0, 1143, -2, -2, 1142, 1146, 1147, -2, -2, -2,
	-2, 1070, 0, 1079, 1076, 0, 1128, 941, 942, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 1433, 0,
	-2, 1412, 1415, 1419, 1421, 1423, 0, 0, 0, 0,
	0, 0, 1627, 0, 1629, 1434, 1682, 1685, 1599, 0,
	0, 1118, 1119, 1119, 0, 1501, 0, 1635, 0, 1642,
	1643, 0, 1494, 0, 1676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1503, 0, 0, 0, 1302, 1276,
	0, 1330, 1328, 1329, 1323, 1330, 1327, 0, 1535, 1538,
	1541, 1544, 0, 0, 0, 0, 1524, 0, 0, 0,
	1528, 1548, 0, 1550, 1552, 0, 0, 1554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1440, 1441, 1442, 1555, 1664, 1665, 0, 0, 0,
	0, 0, 0, 1561, 0, 1670, 1562, 1564, 1108, 1156,
	1151, 1235, 0, 1691, 1210, 1158, 1160, 1692, 1730, 1151,
	1151, 0, 1639, 0, 0, 1201, 0, 0, 0, 1203,
	1174, 0, 0, 1168, 0, 1164, 1165, 1166, 1167, 1175,
	847, 1205, 1177, 1181, 1749, 0, 1207, 0, 1192, 0,
	1194, 1226, 0, 1186, 1189, 0, 0, 191, 1762, 215,
	219, 220, 216, 217, 218, 427, 0, 0, 1641, 0,
	1242, 0, 0, 0, 0, 0, 431, 0, 481, -2,
	514, 515, 517, 0, 513, 117, 954, 0, 0, 945,
	0, 122, 2074, 131, 0, 789, 0, 1731, 0, 0,
	0, 0, 956, 0, 0, 2074, 151, 2074, 151, 134,
	137, 0, 141, 139, 0, 0, 780, 78, 954, 81,
	85, 93, 0, 0, 0, 99, 0, 0, 0, 947,
	0, 874, 875, 878, 884, 62, 0, 949, 944, 143,
	83, 87, 94, 0, 951, 80, 0, 910, 888, 889,
	0, 894, 154, 0, 190, 1705, 0, 0, 0, 0,
	0, 759, 830, 0, 0, 0, 0, 299, 295, 0,
	304, 310, 309, 729, 0, 0, 0, -2, 917, 0,
	919, 0, 0, 0, 2074, 1012, 1016, 0, 1015, 1106,
	1119, 314, 1017, 1040, 0, 0, 0, 1027, 1023, 1020,
	1236, 0, 0, 0, 0, 0, 259, 338, 341, 344,
	1697, 151, 350, 362, 363, 165, 0, 0, 0, 0,
	0, 190, 0, 0, 0, 0, 0, 1770, 1770, 0,
	1735, 0, 0, 0, 0, 158, 0, 470, 0, 0,
	0, 626, 628, 631, 656, 658, 671, 696, 697, 775,
	0, 775, 0, 0, 1072, 0, 1140, 1078, 1122, 1123,
	0, 943, 0, 1355, 1396, 0, 0, -2, 0, 0,
	1400, 0, 0, 0, -2, 0, 0, 0, 1628, 1630,
	0, 1684, 1496, 0, 0, 0, 1500, 1484, 1485, 0,
	1602, 1645, 1674, 1678, 0, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 0, 1724, 1750, 1754, 1575, 1576, 1580, 1738,
	0, 0, 0, 1321, 1325, 1507, 0, 0, 0, 0,
	0, 0, 0, 1646, 1657, 1659, 1438, 1439, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, -2, -2,
	-2, 1456, 1457, 1458, -2, -2, -2, 0, 0, 0,
	1660, 1662, 1663, 1667, 1668, 0, 1558, 1559, 1560, 1669,
	0, 1153, 0, 1234, 1157, 0, 1153, 1153, 1115, 1199,
	0, 0, 1222, 0, 1171, 0, 1172, 0, 1204, 0,
	1179, 1182, 1183, 1193, 0, 1185, 0, 1188, 0, 1496,
	-2, 429, 413, 0, 0, 1244, 0, 1305, 1309, 1333,
	433, 1208, 0, 0, 0, 0, 152, 787, 812, 0,
	0, 936, 943, 0, 0, 124, 0, 0, 0, 132,
	0, 0, 129, 0, 136, 140, 0, 0, 0, 0,
	0, 96, 97, 98, 0, 103, 0, 104, 0, 0,
	0, 0, 0, 0, 913, 914, 180, 155, 233, 901,
	239, 769, 818, 0, 820, 0, 734, 0, 0, 819,
	291, 0, 298, 0, 868, 0, 0, 891, 918, 931,
	0, 0, 0, 1014, 1016, 0, 1007, 1008, 1136, 1018,
	1038, -2, 1037, 0, 1119, 1046, 1043, 1049, 1050, 0,
	347, 187, 0, 182, 184, 0, 168, 0, 0, 762,
	767, 0, 0, 0, 0, 0, 1029, 1031, 0, 174,
	0, 596, 618, 666, 698, 774, 0, 0, 700, 0,
	0, 1139, 1126, 1127, 1124, 943, 1398, 1402, 0, 0,
	0, 1404, -2, 0, 1426, -2, -2, 1631, 1683, 1475,
	1119, 1497, 1499, 1486, 1677, 1350, 0, 1582, 1579, 0,
	1566, 1277, 1519, 1520, 0, 0, 1523, 1525, 1526, 1527,
	1656, 0, 0, 0, 0, 1557, 1104, 1571, 0, 0,
	1161, 1571, 1571, 1200, 0, 1202, 1169, 1162, 0, 1750,
	1195, 1187, 0, 0, 1238, 1243, 0, 1304, 118, 119,
	121, 0, 788, 0, 791, 0, 0, 0, 0, 798,
	799, 0, 0, 0, 0, 0, 834, 843, 0, 1128,
	0, 0, 0, 126, 146, 0, 0, 955, 0, 0,
	151, 151, 0, 0, 946, 0, 0, 0, 0, 106,
	0, 0, 948, 950, 0, 0, 952, 777, 0, 830,
	822, 823, 824, 0, 829, 831, 0, 0, 747, 0,
	743, 0, 0, 736, 760, 733, 0, 296, 865, 899,
	847, 0, 0, 0, 0, 0, 1004, 1016, 0, 1009,
	1010, 1040, 1135, 0, 0, 0, 1026, 1136, 0, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 190, 472,
	474, 0, 0, 480, 773, 0, 0, 0, 0, 1125,
	1406, -2, -2, 1427, 0, 1751, 1753, 1119, 0, 1568,
	0, 0, -2, 0, 0, 0, 1090, 0, 1152, 1150,
	1091, 1092, 1221, 0, 1190, 0, 1245, 123, 0, 792,
	793, 1734, 795, 0, 797, 800, 0, 803, 1772, 0,
	807, 814, 835, 0, 769, 0, 840, 841, 937, 938,
	845, 0, 125, 127, 145, 940, 0, 128, 135, 0,
	0, 82, 0, 0, 1824, 109, 107, 105, 84, 0,
	733, 776, 0, 821, 0, 832, 833, 737, 0, 735,
	0, 0, 0, 0, 0, 297, 300, 0, 303, 0,
	0, 930, 0, 0, 0, 0, 1011, 1012, 312, 0,
	0, 0, 1040, 1051, 167, 0, 0, 845, 0, 0,
	811, 0, 172, 0, 476, 0, 478, 0, 699, 701,
	0, 0, 1498, 1586, 0, 1521, 1522, -2, 0, 1464,
	1570, 1572, 0, 1163, 1239, 790, 794, 0, 0, 0,
	851, 0, 0, 0, 838, 839, 777, 0, 769, 0,
	0, 148, 0, 0, 0, 0, 0, 0, 0, 0,
	737, 0, 0, 745, 0, 748, 0, 744, 741, 742,
	769, 0, 301, 302, 0, 0, 931, 0, 0, 1013,
	1014, 0, 1033, 1034, 1036, 1041, 0, 0, 843, 845,
	810, 0, 475, 0, 0, 704, 705, 0, 0, 0,
	0, 1581, 1465, 0, 0, 0, 0, 802, 856, 0,
	0, 0, 836, 837, 834, 0, 816, 0, 847, 130,
	0, 939, 845, 0, 781, 0, 0, 784, 0, 0,
	110, 1824, 108, 0, 731, 0, 0, 826, 828, 0,
	749, 777, 747, 900, 845, 0, 843, 0, 1005, 0,
	1035, 190, 190, 769, 843, 190, 477, 479, 1578, 1598,
	1587, -2, 2036, 1828, 0, 1598, 1598, 1573, 1574, 0,
	0, 804, 852, 853, 0, 848, 849, 850, 1771, 805,
	806, 815, 842, 0, 851, 147, 769, 778, 0, 0,
	779, 0, 0, 113, 0, 115, 0, 825, 0, 0,
	0, 0, 733, 737, 843, 0, 769, 0, 1236, 169,
	170, 777, 769, 171, 1583, 0, 0, 1589, 1590, 1591,
	1592, 1593, 1584, 1585, 796, 0, 854, 0, 855, 0,
	0, 0, 0, 856, 133, 782, 0, 785, 0, 111,
	0, 827, 738, 0, 740, 737, 746, 769, 0, 777,
	0, 1032, 808, 777, 0, 1595, 1596, 0, 0, 0,
	857, 0, 860, 861, 0, 858, 0, 834, 0, 0,
	772, 739, 732, 777, 845, 928, 843, 809, 1594, 1597,
	1588, 801, 859, 862, 863, 844, 817, 0, 0, 768,
	770, 771, 928, 843, 925, 0, 769, 777, 0, 923,
	769, 929, 777, 783, 0, 777, 928, 0, 928, 926,
	0, 924, 777, 786,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 464, 3, 470, 465, 3,
	475, 476, 468, 466, 480, 467, 477, 469, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 483, 3,
	456, 458, 457, 461, 479, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 473, 3, 474, 471, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 481, 463, 482, 459,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 460, 57799, 462,
	57800, 472, 57801, 478, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1123
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1128
		{
			return helpWith(sqllex, "")
		}
	case 7:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1132
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1133
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1134
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1135
		{
			return helpWith(sqllex, "GRANT")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1136
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1137
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1138
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1139
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1145
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1154
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1155
		{
			return helpWith(sqllex, "ALTER")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1158
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1159
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1160
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1161
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1162
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1163
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1164
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1218
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1244
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1255
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1270
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1274
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 62:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1278
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1292
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1311
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1343
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1347
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 78:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1351
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1357
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1361
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1367
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1376
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1387
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1391
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1397
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1405
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1415
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1419
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1429
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1440
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1447
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1459
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1466
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1474
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1479
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1483
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1488
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1494
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1502
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1513
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 103:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1523
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 104:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1533
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 105:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1542
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1553
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 107:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1559
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1567
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1571
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1575
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 111:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1579
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1585
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1590
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1601
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1605
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1611
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1615
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1622
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1627
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1632
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1637
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1642
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1647
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1652
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1657
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1662
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1667
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1672
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1681
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1693
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.colType(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1703
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1710
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 133:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1714
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1722
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1729
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1738
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1747
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1752
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1759
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1768
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1772
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1776
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1790
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1794
		{
			sqlVAL.union.val = nil
		}
	case 147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1800
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1804
		{
			sqlVAL.union.val = nil
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1815
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1819
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1825
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1829
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = &tree.Backup{DescriptorCoverage: tree.AllDescriptors, To: sqlDollar[3].union.partitionedBackup(), IncrementalFrom: sqlDollar[5].union.exprs(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1859
		{
			sqlVAL.union.val = &tree.Backup{Targets: sqlDollar[2].union.targetList(), To: sqlDollar[4].union.partitionedBackup(), IncrementalFrom: sqlDollar[6].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[7].union.kvOptions()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1862
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1889
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1892
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1896
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1906
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1916
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1953
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1958
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1962
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1968
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1973
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1978
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1983
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1988
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1992
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2011
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2015
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2019
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2041
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2051
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2069
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2075
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2079
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2083
		{
			sqlVAL.union.val = nil
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2089
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2103
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2104
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2105
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2106
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2116
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2124
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2129
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2156
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2158
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2162
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2165
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2192
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2201
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2213
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2232
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2237
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2249
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2251
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2252
		{
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2253
		{
			return helpWith(sqllex, "CREATE")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2256
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2257
		{
			return unimplemented(sqllex, "create cast")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2258
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2259
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2260
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2261
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2262
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2263
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2264
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2265
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2266
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2267
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2268
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2269
		{
			return unimplemented(sqllex, "create operator")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2270
		{
			return unimplemented(sqllex, "create publication")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2271
		{
			return unimplemented(sqllex, "create rule")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2272
		{
			return unimplemented(sqllex, "create server")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2273
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2274
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2275
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2278
		{
		}
	case 249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2279
		{
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2282
		{
		}
	case 251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2283
		{
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2286
		{
		}
	case 253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2287
		{
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2290
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2291
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2292
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2293
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2294
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2295
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2296
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2297
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2298
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2299
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2300
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2301
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2302
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2303
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2304
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2305
		{
			return unimplemented(sqllex, "drop server")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2306
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2307
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2308
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "drop type")
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2309
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2313
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2314
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2316
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2317
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2319
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2320
		{
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2321
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2322
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2332
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2340
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2348
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2358
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2367
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2380
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2390
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2401
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2421
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2429
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2439
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2443
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2460
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2464
		{

			sqlVAL.union.val = nil
		}
	case 312:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2478
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2488
		{
			return helpWith(sqllex, "DELETE")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2491
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2492
		{
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2500
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2503
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2504
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2505
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2506
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2507
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2516
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2517
		{
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2518
		{
			return helpWith(sqllex, "DROP")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2521
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2522
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2523
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2524
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2525
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2540
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2548
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2555
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2570
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2595
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2618
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2630
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2633
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2637
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2642
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2665
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2672
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2674
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2682
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2690
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2698
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2706
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2717
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2721
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2724
		{
			return helpWith(sqllex, "DELETE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2726
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2727
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2728
		{
			return helpWith(sqllex, "INSERT")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2729
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2731
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2732
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2733
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2736
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2741
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2742
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2743
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2748
		{
			return helpWith(sqllex, "DELETE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2749
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2750
		{
			return helpWith(sqllex, "INSERT")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2756
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2757
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2761
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2765
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 412:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2783
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2791
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = sqlDollar[2].union.colTypes()
		}
	case 416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = []*types.T(nil)
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2816
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2824
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2828
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2846
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2857
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2877
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2885
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2888
		{
			return helpWith(sqllex, "GRANT")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2908
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2912
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2916
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2919
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2928
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2938
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2956
		{
			return helpWith(sqllex, "RESET")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2957
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2972
		{
			return helpWith(sqllex, "RESET")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2980
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2983
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2997
		{
			return helpWith(sqllex, "USE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3001
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3002
		{
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3003
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3004
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3008
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3009
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3010
		{
			return helpWith(sqllex, "USE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3026
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3041
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3044
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3062
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3070
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3074
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3078
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3084
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3088
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3094
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3098
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3102
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3121
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3124
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 488:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3176
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3179
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3181
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3184
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3188
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3207
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3214
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3219
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3224
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3229
		{
			return unimplemented(sqllex, "set from current")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3230
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3238
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3243
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3260
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3271
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3292
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3314
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3318
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3324
		{
			sqlVAL.union.val = tree.Low
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3328
		{
			sqlVAL.union.val = tree.Normal
		}
	case 521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3332
		{
			sqlVAL.union.val = tree.High
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3343
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3347
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3351
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3356
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3374
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3375
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3376
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3377
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3385
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3386
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3391
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3392
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3393
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3394
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3395
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3396
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3397
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3398
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3399
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3401
		{
			return helpWith(sqllex, "SHOW")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3406
		{
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3407
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3410
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3419
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.str = "client_encoding"
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3433
		{
			sqlVAL.str = "timezone"
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3434
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3448
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3452
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3456
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3467
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3483
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3491
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3500
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3509
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3517
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3527
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3531
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3534
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3539
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3548
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3567
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3571
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3575
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3582
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3593
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3606
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3614
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3622
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3625
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3627
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3638
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3647
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3655
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3658
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3663
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3674
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3676
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3679
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3683
		{
			sqlVAL.union.val = true
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3685
		{
			sqlVAL.union.val = true
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3687
		{
			sqlVAL.union.val = false
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3704
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3705
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3714
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3716
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3724
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3732
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3741
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3744
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3746
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3749
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3751
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3755
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3758
		{
			sqlVAL.union.val = true
		}
	case 661:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3759
		{
			sqlVAL.union.val = false
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3767
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3770
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3775
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3806
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = true
		}
	case 671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3810
		{
			sqlVAL.union.val = false
		}
	case 672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3824
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3831
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3835
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3838
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3845
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3849
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3856
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3859
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3867
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3872
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3877
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3881
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3889
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3893
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3897
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3910
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3913
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3924
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3936
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3944
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3966
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3970
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3981
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3995
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4004
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4016
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4020
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4027
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 713:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4032
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4156
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4160
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4199
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4203
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4221
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4232
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4244
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4253
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4264
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4270
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4276
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4315
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:4330
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = nil
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4351
		{

			sqlVAL.union.val = nil
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4357
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4362
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4368
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4372
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4377
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4382
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4389
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4399
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4403
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 745:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4409
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
			}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4422
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
			}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4436
		{
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4437
		{
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4438
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.union.val = true
		}
	case 751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = true
		}
	case 752:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4458
		{
			sqlVAL.union.val = false
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4462
		{
			sqlVAL.union.val = true
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = true
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = true
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = true
		}
	case 758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4466
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4477
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4481
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4496
		{
			return unimplementedWithIssue(sqllex, 30840)
		}
	case 768:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4500
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4516
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4521
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 772:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4532
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.str = ""
		}
	case 777:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4546
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 778:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 783:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4592
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4596
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 786:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4602
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4616
		{
			typ := sqlDollar[2].union.colType()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, isSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4627
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 789:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4631
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4641
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4645
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4649
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4653
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4657
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4661
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4687
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4691
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4695
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4710
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4720
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4724
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 808:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4735
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4746
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
				},
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:     tree.Name(sqlDollar[3].str),
				Columns:  sqlDollar[5].union.idxElems(),
				Inverted: true,
			}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4769
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4781
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4798
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
				},
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4821
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 819:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4839
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4845
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4855
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4866
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4870
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4877
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4894
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4898
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 830:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4914
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4920
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4935
		{
		}
	case 835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4936
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4937
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4938
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4939
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4940
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4983
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5003
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5007
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5011
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5028
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5032
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5036
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5052
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5064
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5072
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5076
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5095
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5104
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5112
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5120
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5123
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.colType().SQLString())
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5124
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5127
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5128
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5138
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5141
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5143
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5145
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5147
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5148
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5150
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5151
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5153
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5155
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5163
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5166
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5174
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5191
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5199
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5206
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5212
		{
			sqlVAL.union.val = true
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5216
		{

			sqlVAL.union.val = true
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = false
		}
	case 899:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5231
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5242
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5252
		{
			return unimplementedWithIssue(sqllex, 24897)
		}
	case 902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5253
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5265
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5291
		{
			sqlVAL.union.val = nil
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5306
		{
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5307
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5313
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 918:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5315
		{
			return unimplementedWithIssue(sqllex, 24873)
		}
	case 919:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5317
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5319
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5321
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5323
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5339
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[5].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Columns:      sqlDollar[10].union.idxElems(),
				Sharded:      sqlDollar[12].union.shardedIndexDef(),
				Storing:      sqlDollar[13].union.nameList(),
				Interleave:   sqlDollar[14].union.interleave(),
				PartitionBy:  sqlDollar[15].union.partitionBy(),
				Inverted:     sqlDollar[8].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:5355
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[8].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Sharded:      sqlDollar[15].union.shardedIndexDef(),
				Storing:      sqlDollar[16].union.nameList(),
				Interleave:   sqlDollar[17].union.interleave(),
				PartitionBy:  sqlDollar[18].union.partitionBy(),
				Inverted:     sqlDollar[11].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5372
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[6].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				Columns:      sqlDollar[10].union.idxElems(),
				Storing:      sqlDollar[12].union.nameList(),
				Interleave:   sqlDollar[13].union.interleave(),
				PartitionBy:  sqlDollar[14].union.partitionBy(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:5387
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[9].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Storing:      sqlDollar[15].union.nameList(),
				Interleave:   sqlDollar[16].union.interleave(),
				PartitionBy:  sqlDollar[17].union.partitionBy(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5402
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5405
		{
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5406
		{
			return unimplementedWithIssue(sqllex, 9683)
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5410
		{

			switch sqlDollar[2].str {
			case "gin":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "gist", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5425
		{
			sqlVAL.union.val = false
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5431
		{
			sqlVAL.union.val = true
		}
	case 933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = false
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = true
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = false
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5451
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5464
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.str = ""
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = tree.Descending
		}
	case 943:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5499
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5511
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5517
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5525
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5531
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5539
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5545
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5553
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5557
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5562
		{
		}
	case 954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5563
		{
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5566
		{
		}
	case 956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5567
		{
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5575
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5578
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5588
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5600
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5611
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5615
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5616
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5617
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5633
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5636
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5641
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5651
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5654
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5659
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5668
		{
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5669
		{
		}
	case 982:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5670
		{
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5687
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5690
		{
		}
	case 987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5691
		{
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5699
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5705
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5719
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5732
		{
		}
	case 995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5734
		{
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5738
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5757
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5783
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5793
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5803
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.str = ""
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5817
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.str = ""
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.str = ""
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.str = ""
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5846
		{
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5847
		{
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5859
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5873
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5884
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5891
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5895
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5904
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5909
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5919
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5929
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5933
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5953
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5961
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5967
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5970
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5971
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5973
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5979
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6005
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6017
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6023
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6049
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6102
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6106
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6129
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6155
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6158
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6183
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6194
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6199
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6234
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6235
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6236
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6258
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6285
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6297
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6310
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6341
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6353
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6357
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6372
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6386
		{
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6387
		{
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6391
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = nil
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6400
		{
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6401
		{
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6405
		{
			sqlVAL.union.val = true
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = false
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = false
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6419
		{
			sqlVAL.union.val = true
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6430
		{
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6431
		{
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6435
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6461
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6482
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6487
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6499
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6516
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6549
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6604
		{
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6605
		{
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6608
		{
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6609
		{
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6626
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6630
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6640
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6662
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6664
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6676
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6679
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6681
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6691
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6701
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6706
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6711
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6717
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6722
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6734
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6753
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6761
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6792
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6802
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6812
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6837
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6848
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6878
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6911
		{
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6913
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6916
		{
			sqlVAL.union.val = nil
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6926
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = true
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = false
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6968
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6986
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.str = tree.AstFull
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.str = tree.AstRight
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.str = tree.AstInner
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7030
		{
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7031
		{
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.str = tree.AstHash
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.str = ""
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7093
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7098
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7116
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7122
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7128
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7138
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7155
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7167
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.colType()
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7180
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7188
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7189
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7199
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7207
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7209
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7217
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.union.val = types.Jsonb
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7250
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7254
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7258
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = types.String
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = types.Name
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7270
		{
			switch sqllex.(*lexer).nakedIntType.Width() {
			case 32:
				sqlVAL.union.val = &serial4Type
			default:
				sqlVAL.union.val = &serial8Type
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = &serial4Type
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = types.Uuid
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = types.INet
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.union.val = types.Oid
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7311
		{
			sqlVAL.union.val = types.OidVector
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = types.Int2Vector
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7319
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else {
				var ok bool
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						sqllex.Error("type does not exist")
						return 1
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7350
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7358
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = nil
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = types.Int2
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = types.Int2
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = types.Int4
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = types.Int
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.union.val = types.Int
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.union.val = types.Int
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = types.Float4
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7409
		{
			sqlVAL.union.val = types.Float4
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = types.Float
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7417
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = types.Float
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7425
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7433
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7441
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = types.Bool
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = types.Bool
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = types.RegProc
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = types.RegProcedure
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = types.RegClass
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = types.RegType
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = types.RegNamespace
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7482
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7495
		{
			sqlVAL.union.val = types.Float
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7501
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7507
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7519
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7523
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7529
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7551
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = types.String
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = true
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = false
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = types.Date
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7578
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7586
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7600
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7609
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7617
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7630
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7634
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7644
		{
			sqlVAL.union.val = true
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = false
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = false
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7650
		{
			sqlVAL.union.val = types.Interval
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7654
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7658
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7669
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7701
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7709
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7742
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7757
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7773
		{
			sqlVAL.union.val = nil
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7787
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7847
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7900
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7992
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8064
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8072
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8076
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8091
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8093
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8101
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8157
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8174
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8179
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8211
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8223
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8243
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8251
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8291
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8313
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8373
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8378
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8404
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8413
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8428
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8458
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8469
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8470
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8482
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8485
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8496
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8512
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8532
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8548
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8558
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8562
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.CastExplicit}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8616
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8621
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8630
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8639
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8648
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8657
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8662
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8667
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8672
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8677
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8686
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8687
		{
			return unimplemented(sqllex, "treat")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8693
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8708
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8713
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8718
		{
			return unimplemented(sqllex, "within group")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8719
		{
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8738
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8754
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.str = ""
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8813
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8843
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8856
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8920
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8924
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8942
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8953
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = tree.Any
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = tree.Some
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8973
		{
			sqlVAL.union.val = tree.All
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = tree.Div
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8988
		{
			sqlVAL.union.val = tree.LT
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8989
		{
			sqlVAL.union.val = tree.GT
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = tree.LE
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = tree.GE
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = tree.NE
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = tree.Like
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9033
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9041
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = []*types.T{sqlDollar[1].union.colType()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colTypes(), sqlDollar[3].union.colType())
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9099
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9103
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9109
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9204
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9222
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9226
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9314
		{
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9315
		{
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9387
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9395
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.TableName)
			name.TableName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9435
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9464
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9468
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9484
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9493
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9504
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9513
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9521
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9533
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9645
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9663
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9702
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9715
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9722
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.str = ""
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9753
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
