// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:73

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}

//line sql-gen.y:675
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11464

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 29,
	-2, 1291,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 67,
	216, 190,
	439, 190,
	-2, 0,
	-1, 77,
	205, 1099,
	218, 1099,
	234, 329,
	331, 329,
	340, 897,
	371, 329,
	383, 897,
	424, 897,
	449, 329,
	474, 897,
	-2, 0,
	-1, 83,
	234, 333,
	-2, 0,
	-1, 84,
	119, 1291,
	211, 1291,
	459, 1291,
	460, 1291,
	-2, 0,
	-1, 100,
	136, 1262,
	154, 1262,
	167, 1262,
	214, 1262,
	247, 1262,
	290, 1262,
	300, 1262,
	454, 1262,
	-2, 1233,
	-1, 134,
	144, 782,
	233, 782,
	334, 751,
	388, 751,
	442, 782,
	-2, 0,
	-1, 136,
	4, 1293,
	21, 1293,
	22, 1293,
	23, 1293,
	24, 1293,
	25, 1293,
	26, 1293,
	28, 1293,
	29, 1293,
	35, 1293,
	40, 1293,
	41, 1293,
	42, 1293,
	43, 1293,
	44, 1293,
	45, 1293,
	46, 1293,
	47, 1293,
	48, 1293,
	50, 1293,
	51, 1293,
	52, 1293,
	53, 1293,
	55, 1293,
	56, 1293,
	57, 1293,
	58, 1293,
	59, 1293,
	63, 1293,
	64, 1293,
	65, 1293,
	66, 1293,
	68, 1293,
	69, 1293,
	70, 1293,
	74, 1293,
	75, 1293,
	76, 1293,
	77, 1293,
	78, 1293,
	79, 1293,
	80, 1293,
	83, 1293,
	84, 1293,
	85, 1293,
	86, 1293,
	88, 1293,
	90, 1293,
	91, 1293,
	92, 1293,
	94, 1293,
	96, 1293,
	97, 1293,
	105, 1293,
	106, 1293,
	107, 1293,
	108, 1293,
	110, 1293,
	111, 1293,
	112, 1293,
	114, 1293,
	115, 1293,
	116, 1293,
	118, 1293,
	119, 1293,
	121, 1293,
	122, 1293,
	123, 1293,
	126, 1293,
	127, 1293,
	128, 1293,
	130, 1293,
	131, 1293,
	133, 1293,
	134, 1293,
	135, 1293,
	137, 1293,
	138, 1293,
	139, 1293,
	140, 1293,
	141, 1293,
	142, 1293,
	143, 1293,
	144, 1293,
	145, 1293,
	146, 1293,
	147, 1293,
	148, 1293,
	149, 1293,
	150, 1293,
	151, 1293,
	153, 1293,
	159, 1293,
	160, 1293,
	161, 1293,
	162, 1293,
	166, 1293,
	168, 1293,
	172, 1293,
	173, 1293,
	174, 1293,
	175, 1293,
	176, 1293,
	177, 1293,
	179, 1293,
	180, 1293,
	182, 1293,
	183, 1293,
	185, 1293,
	186, 1293,
	187, 1293,
	188, 1293,
	189, 1293,
	190, 1293,
	191, 1293,
	192, 1293,
	193, 1293,
	195, 1293,
	196, 1293,
	198, 1293,
	199, 1293,
	200, 1293,
	201, 1293,
	205, 1293,
	206, 1293,
	207, 1293,
	208, 1293,
	211, 1293,
	212, 1293,
	213, 1293,
	215, 1293,
	217, 1293,
	218, 1293,
	220, 1293,
	222, 1293,
	223, 1293,
	224, 1293,
	226, 1293,
	230, 1293,
	231, 1293,
	232, 1293,
	233, 1293,
	234, 1293,
	235, 1293,
	237, 1293,
	238, 1293,
	239, 1293,
	241, 1293,
	242, 1293,
	244, 1293,
	245, 1293,
	248, 1293,
	249, 1293,
	250, 1293,
	253, 1293,
	254, 1293,
	255, 1293,
	256, 1293,
	258, 1293,
	259, 1293,
	260, 1293,
	261, 1293,
	262, 1293,
	263, 1293,
	264, 1293,
	265, 1293,
	266, 1293,
	267, 1293,
	268, 1293,
	270, 1293,
	272, 1293,
	273, 1293,
	274, 1293,
	275, 1293,
	276, 1293,
	277, 1293,
	279, 1293,
	281, 1293,
	283, 1293,
	285, 1293,
	286, 1293,
	287, 1293,
	288, 1293,
	289, 1293,
	292, 1293,
	295, 1293,
	296, 1293,
	297, 1293,
	298, 1293,
	301, 1293,
	302, 1293,
	303, 1293,
	305, 1293,
	307, 1293,
	308, 1293,
	309, 1293,
	310, 1293,
	311, 1293,
	312, 1293,
	313, 1293,
	314, 1293,
	315, 1293,
	316, 1293,
	317, 1293,
	318, 1293,
	320, 1293,
	321, 1293,
	322, 1293,
	323, 1293,
	324, 1293,
	325, 1293,
	326, 1293,
	327, 1293,
	328, 1293,
	330, 1293,
	332, 1293,
	333, 1293,
	334, 1293,
	335, 1293,
	336, 1293,
	337, 1293,
	338, 1293,
	339, 1293,
	340, 1293,
	341, 1293,
	342, 1293,
	349, 1293,
	351, 1293,
	352, 1293,
	353, 1293,
	354, 1293,
	355, 1293,
	356, 1293,
	357, 1293,
	358, 1293,
	360, 1293,
	361, 1293,
	362, 1293,
	364, 1293,
	365, 1293,
	366, 1293,
	367, 1293,
	368, 1293,
	369, 1293,
	371, 1293,
	372, 1293,
	373, 1293,
	374, 1293,
	375, 1293,
	376, 1293,
	377, 1293,
	378, 1293,
	379, 1293,
	380, 1293,
	381, 1293,
	383, 1293,
	384, 1293,
	385, 1293,
	386, 1293,
	387, 1293,
	388, 1293,
	390, 1293,
	391, 1293,
	392, 1293,
	393, 1293,
	394, 1293,
	396, 1293,
	397, 1293,
	398, 1293,
	399, 1293,
	400, 1293,
	401, 1293,
	402, 1293,
	404, 1293,
	406, 1293,
	407, 1293,
	408, 1293,
	409, 1293,
	410, 1293,
	411, 1293,
	412, 1293,
	413, 1293,
	414, 1293,
	415, 1293,
	416, 1293,
	417, 1293,
	418, 1293,
	420, 1293,
	421, 1293,
	423, 1293,
	425, 1293,
	426, 1293,
	427, 1293,
	428, 1293,
	429, 1293,
	430, 1293,
	431, 1293,
	432, 1293,
	434, 1293,
	435, 1293,
	436, 1293,
	437, 1293,
	438, 1293,
	440, 1293,
	442, 1293,
	443, 1293,
	444, 1293,
	445, 1293,
	446, 1293,
	448, 1293,
	449, 1293,
	450, 1293,
	452, 1293,
	453, 1293,
	456, 1293,
	457, 1293,
	458, 1293,
	459, 1293,
	460, 1293,
	461, 1293,
	462, 1293,
	464, 1293,
	467, 1293,
	468, 1293,
	469, 1293,
	470, 1293,
	471, 1293,
	472, 1293,
	474, 1293,
	475, 1293,
	476, 1293,
	481, 1293,
	482, 1293,
	483, 1293,
	484, 1293,
	485, 1293,
	486, 1293,
	-2, 0,
	-1, 137,
	1, 1167,
	222, 1167,
	330, 1167,
	338, 1167,
	489, 1167,
	513, 1167,
	-2, 0,
	-1, 139,
	1, 1167,
	513, 1167,
	-2, 0,
	-1, 140,
	1, 1167,
	513, 1167,
	-2, 0,
	-1, 141,
	1, 1167,
	439, 1167,
	513, 1167,
	-2, 0,
	-1, 170,
	136, 1261,
	154, 1261,
	167, 1261,
	214, 1261,
	247, 1261,
	290, 1261,
	300, 1261,
	454, 1261,
	-2, 1236,
	-1, 206,
	4, 1300,
	5, 1300,
	6, 1300,
	7, 1300,
	8, 1300,
	9, 1300,
	10, 1300,
	21, 1300,
	22, 1300,
	23, 1300,
	24, 1300,
	25, 1300,
	26, 1300,
	28, 1300,
	29, 1300,
	35, 1300,
	36, 1300,
	40, 1300,
	41, 1300,
	42, 1300,
	43, 1300,
	44, 1300,
	45, 1300,
	46, 1300,
	47, 1300,
	48, 1300,
	50, 1300,
	51, 1300,
	52, 1300,
	53, 1300,
	55, 1300,
	56, 1300,
	57, 1300,
	58, 1300,
	59, 1300,
	60, 1300,
	61, 1300,
	62, 1300,
	63, 1300,
	64, 1300,
	65, 1300,
	66, 1300,
	68, 1300,
	69, 1300,
	70, 1300,
	72, 1300,
	74, 1300,
	75, 1300,
	76, 1300,
	77, 1300,
	78, 1300,
	79, 1300,
	80, 1300,
	83, 1300,
	84, 1300,
	85, 1300,
	86, 1300,
	88, 1300,
	90, 1300,
	91, 1300,
	92, 1300,
	94, 1300,
	95, 1300,
	96, 1300,
	97, 1300,
	98, 1300,
	99, 1300,
	100, 1300,
	101, 1300,
	102, 1300,
	103, 1300,
	104, 1300,
	105, 1300,
	106, 1300,
	107, 1300,
	108, 1300,
	109, 1300,
	110, 1300,
	111, 1300,
	112, 1300,
	113, 1300,
	114, 1300,
	115, 1300,
	116, 1300,
	118, 1300,
	119, 1300,
	121, 1300,
	122, 1300,
	123, 1300,
	126, 1300,
	127, 1300,
	128, 1300,
	130, 1300,
	131, 1300,
	133, 1300,
	134, 1300,
	135, 1300,
	137, 1300,
	138, 1300,
	139, 1300,
	140, 1300,
	141, 1300,
	142, 1300,
	143, 1300,
	144, 1300,
	145, 1300,
	146, 1300,
	147, 1300,
	148, 1300,
	149, 1300,
	150, 1300,
	151, 1300,
	152, 1300,
	153, 1300,
	159, 1300,
	160, 1300,
	161, 1300,
	162, 1300,
	166, 1300,
	168, 1300,
	171, 1300,
	172, 1300,
	173, 1300,
	174, 1300,
	175, 1300,
	176, 1300,
	177, 1300,
	179, 1300,
	180, 1300,
	182, 1300,
	183, 1300,
	185, 1300,
	186, 1300,
	187, 1300,
	188, 1300,
	189, 1300,
	190, 1300,
	191, 1300,
	192, 1300,
	193, 1300,
	194, 1300,
	195, 1300,
	196, 1300,
	198, 1300,
	199, 1300,
	200, 1300,
	201, 1300,
	205, 1300,
	206, 1300,
	207, 1300,
	208, 1300,
	210, 1300,
	211, 1300,
	212, 1300,
	213, 1300,
	215, 1300,
	217, 1300,
	218, 1300,
	219, 1300,
	220, 1300,
	221, 1300,
	222, 1300,
	223, 1300,
	224, 1300,
	225, 1300,
	226, 1300,
	230, 1300,
	231, 1300,
	232, 1300,
	233, 1300,
	234, 1300,
	235, 1300,
	237, 1300,
	238, 1300,
	239, 1300,
	241, 1300,
	242, 1300,
	243, 1300,
	244, 1300,
	245, 1300,
	246, 1300,
	248, 1300,
	249, 1300,
	250, 1300,
	251, 1300,
	252, 1300,
	253, 1300,
	254, 1300,
	255, 1300,
	256, 1300,
	258, 1300,
	259, 1300,
	260, 1300,
	261, 1300,
	262, 1300,
	263, 1300,
	264, 1300,
	265, 1300,
	266, 1300,
	267, 1300,
	268, 1300,
	270, 1300,
	271, 1300,
	272, 1300,
	273, 1300,
	274, 1300,
	275, 1300,
	276, 1300,
	277, 1300,
	278, 1300,
	279, 1300,
	280, 1300,
	281, 1300,
	282, 1300,
	283, 1300,
	284, 1300,
	285, 1300,
	286, 1300,
	287, 1300,
	288, 1300,
	289, 1300,
	292, 1300,
	296, 1300,
	297, 1300,
	298, 1300,
	301, 1300,
	302, 1300,
	303, 1300,
	304, 1300,
	305, 1300,
	306, 1300,
	307, 1300,
	308, 1300,
	309, 1300,
	310, 1300,
	311, 1300,
	312, 1300,
	313, 1300,
	314, 1300,
	315, 1300,
	316, 1300,
	317, 1300,
	318, 1300,
	320, 1300,
	321, 1300,
	322, 1300,
	323, 1300,
	324, 1300,
	325, 1300,
	326, 1300,
	327, 1300,
	328, 1300,
	330, 1300,
	332, 1300,
	333, 1300,
	334, 1300,
	335, 1300,
	336, 1300,
	337, 1300,
	338, 1300,
	339, 1300,
	340, 1300,
	341, 1300,
	342, 1300,
	349, 1300,
	351, 1300,
	352, 1300,
	353, 1300,
	354, 1300,
	355, 1300,
	356, 1300,
	357, 1300,
	358, 1300,
	360, 1300,
	361, 1300,
	362, 1300,
	363, 1300,
	364, 1300,
	365, 1300,
	366, 1300,
	367, 1300,
	368, 1300,
	369, 1300,
	371, 1300,
	372, 1300,
	373, 1300,
	374, 1300,
	375, 1300,
	376, 1300,
	377, 1300,
	378, 1300,
	379, 1300,
	380, 1300,
	381, 1300,
	383, 1300,
	384, 1300,
	385, 1300,
	386, 1300,
	387, 1300,
	388, 1300,
	389, 1300,
	390, 1300,
	391, 1300,
	392, 1300,
	393, 1300,
	394, 1300,
	395, 1300,
	396, 1300,
	397, 1300,
	398, 1300,
	399, 1300,
	400, 1300,
	401, 1300,
	402, 1300,
	404, 1300,
	406, 1300,
	407, 1300,
	408, 1300,
	409, 1300,
	410, 1300,
	411, 1300,
	412, 1300,
	413, 1300,
	414, 1300,
	415, 1300,
	416, 1300,
	417, 1300,
	418, 1300,
	420, 1300,
	421, 1300,
	422, 1300,
	423, 1300,
	425, 1300,
	426, 1300,
	427, 1300,
	428, 1300,
	429, 1300,
	430, 1300,
	431, 1300,
	432, 1300,
	434, 1300,
	435, 1300,
	436, 1300,
	437, 1300,
	438, 1300,
	440, 1300,
	442, 1300,
	443, 1300,
	444, 1300,
	445, 1300,
	446, 1300,
	447, 1300,
	448, 1300,
	449, 1300,
	450, 1300,
	452, 1300,
	453, 1300,
	455, 1300,
	456, 1300,
	457, 1300,
	458, 1300,
	459, 1300,
	460, 1300,
	461, 1300,
	462, 1300,
	463, 1300,
	464, 1300,
	467, 1300,
	468, 1300,
	469, 1300,
	470, 1300,
	471, 1300,
	472, 1300,
	474, 1300,
	475, 1300,
	476, 1300,
	481, 1300,
	482, 1300,
	483, 1300,
	484, 1300,
	485, 1300,
	486, 1300,
	487, 1300,
	494, 1300,
	501, 1300,
	502, 1300,
	503, 1300,
	510, 1300,
	514, 1300,
	-2, 0,
	-1, 615,
	170, 2007,
	439, 2007,
	493, 2007,
	512, 2007,
	-2, 0,
	-1, 616,
	170, 2094,
	439, 2094,
	493, 2094,
	512, 2094,
	-2, 0,
	-1, 617,
	170, 1995,
	439, 1995,
	493, 1995,
	512, 1995,
	-2, 0,
	-1, 619,
	170, 2192,
	439, 2192,
	493, 2192,
	512, 2192,
	-2, 0,
	-1, 621,
	170, 2226,
	439, 2226,
	493, 2226,
	512, 2226,
	-2, 0,
	-1, 628,
	170, 2109,
	439, 2109,
	493, 2109,
	512, 2109,
	-2, 601,
	-1, 658,
	512, 1947,
	515, 1947,
	-2, 836,
	-1, 659,
	512, 1949,
	515, 1949,
	-2, 837,
	-1, 660,
	512, 1948,
	515, 1948,
	-2, 838,
	-1, 661,
	515, 1882,
	-2, 839,
	-1, 683,
	167, 204,
	-2, 0,
	-1, 706,
	474, 1076,
	-2, 898,
	-1, 744,
	4, 1097,
	21, 1097,
	22, 1097,
	23, 1097,
	24, 1097,
	25, 1097,
	26, 1097,
	28, 1097,
	29, 1097,
	35, 1097,
	40, 1097,
	41, 1097,
	42, 1097,
	43, 1097,
	44, 1097,
	45, 1097,
	46, 1097,
	47, 1097,
	48, 1097,
	50, 1097,
	51, 1097,
	52, 1097,
	53, 1097,
	55, 1097,
	56, 1097,
	57, 1097,
	58, 1097,
	59, 1097,
	63, 1097,
	64, 1097,
	65, 1097,
	66, 1097,
	68, 1097,
	69, 1097,
	70, 1097,
	74, 1097,
	75, 1097,
	76, 1097,
	77, 1097,
	78, 1097,
	79, 1097,
	80, 1097,
	83, 1097,
	84, 1097,
	85, 1097,
	86, 1097,
	88, 1097,
	90, 1097,
	91, 1097,
	92, 1097,
	94, 1097,
	96, 1097,
	97, 1097,
	105, 1097,
	106, 1097,
	107, 1097,
	108, 1097,
	110, 1097,
	111, 1097,
	112, 1097,
	114, 1097,
	115, 1097,
	116, 1097,
	118, 1097,
	119, 1097,
	121, 1097,
	122, 1097,
	123, 1097,
	126, 1097,
	127, 1097,
	128, 1097,
	130, 1097,
	131, 1097,
	133, 1097,
	134, 1097,
	135, 1097,
	137, 1097,
	138, 1097,
	139, 1097,
	140, 1097,
	141, 1097,
	142, 1097,
	143, 1097,
	144, 1097,
	145, 1097,
	146, 1097,
	147, 1097,
	148, 1097,
	149, 1097,
	150, 1097,
	151, 1097,
	153, 1097,
	159, 1097,
	160, 1097,
	161, 1097,
	162, 1097,
	166, 1097,
	168, 1097,
	172, 1097,
	173, 1097,
	174, 1097,
	175, 1097,
	176, 1097,
	177, 1097,
	179, 1097,
	180, 1097,
	182, 1097,
	183, 1097,
	185, 1097,
	186, 1097,
	187, 1097,
	188, 1097,
	189, 1097,
	190, 1097,
	191, 1097,
	192, 1097,
	193, 1097,
	195, 1097,
	196, 1097,
	198, 1097,
	199, 1097,
	200, 1097,
	201, 1097,
	205, 1097,
	206, 1097,
	207, 1097,
	208, 1097,
	211, 1097,
	212, 1097,
	213, 1097,
	215, 1097,
	217, 1097,
	218, 1097,
	220, 1097,
	222, 1097,
	223, 1097,
	224, 1097,
	226, 1097,
	230, 1097,
	231, 1097,
	232, 1097,
	233, 1097,
	234, 1097,
	235, 1097,
	237, 1097,
	238, 1097,
	239, 1097,
	241, 1097,
	242, 1097,
	244, 1097,
	245, 1097,
	248, 1097,
	249, 1097,
	250, 1097,
	253, 1097,
	254, 1097,
	255, 1097,
	256, 1097,
	258, 1097,
	259, 1097,
	260, 1097,
	261, 1097,
	262, 1097,
	263, 1097,
	264, 1097,
	265, 1097,
	266, 1097,
	267, 1097,
	268, 1097,
	270, 1097,
	272, 1097,
	273, 1097,
	274, 1097,
	275, 1097,
	276, 1097,
	277, 1097,
	279, 1097,
	281, 1097,
	283, 1097,
	285, 1097,
	286, 1097,
	287, 1097,
	288, 1097,
	289, 1097,
	292, 1097,
	296, 1097,
	297, 1097,
	298, 1097,
	301, 1097,
	302, 1097,
	303, 1097,
	305, 1097,
	307, 1097,
	308, 1097,
	309, 1097,
	310, 1097,
	311, 1097,
	312, 1097,
	313, 1097,
	314, 1097,
	315, 1097,
	316, 1097,
	317, 1097,
	318, 1097,
	320, 1097,
	321, 1097,
	322, 1097,
	323, 1097,
	324, 1097,
	325, 1097,
	326, 1097,
	327, 1097,
	328, 1097,
	330, 1097,
	332, 1097,
	333, 1097,
	334, 1097,
	335, 1097,
	336, 1097,
	337, 1097,
	338, 1097,
	339, 1097,
	340, 1097,
	341, 1097,
	342, 1097,
	349, 1097,
	351, 1097,
	352, 1097,
	353, 1097,
	354, 1097,
	355, 1097,
	356, 1097,
	357, 1097,
	358, 1097,
	360, 1097,
	361, 1097,
	362, 1097,
	364, 1097,
	365, 1097,
	366, 1097,
	367, 1097,
	368, 1097,
	369, 1097,
	371, 1097,
	372, 1097,
	373, 1097,
	374, 1097,
	375, 1097,
	376, 1097,
	377, 1097,
	378, 1097,
	379, 1097,
	380, 1097,
	381, 1097,
	383, 1097,
	384, 1097,
	385, 1097,
	386, 1097,
	387, 1097,
	388, 1097,
	390, 1097,
	391, 1097,
	392, 1097,
	393, 1097,
	394, 1097,
	396, 1097,
	397, 1097,
	398, 1097,
	399, 1097,
	400, 1097,
	401, 1097,
	402, 1097,
	404, 1097,
	406, 1097,
	407, 1097,
	408, 1097,
	409, 1097,
	410, 1097,
	411, 1097,
	412, 1097,
	413, 1097,
	414, 1097,
	415, 1097,
	416, 1097,
	417, 1097,
	418, 1097,
	420, 1097,
	421, 1097,
	423, 1097,
	425, 1097,
	426, 1097,
	427, 1097,
	428, 1097,
	429, 1097,
	430, 1097,
	431, 1097,
	432, 1097,
	434, 1097,
	435, 1097,
	436, 1097,
	437, 1097,
	438, 1097,
	440, 1097,
	442, 1097,
	443, 1097,
	444, 1097,
	445, 1097,
	446, 1097,
	448, 1097,
	449, 1097,
	450, 1097,
	452, 1097,
	453, 1097,
	456, 1097,
	457, 1097,
	458, 1097,
	459, 1097,
	460, 1097,
	461, 1097,
	462, 1097,
	464, 1097,
	467, 1097,
	468, 1097,
	469, 1097,
	470, 1097,
	471, 1097,
	472, 1097,
	474, 1097,
	475, 1097,
	476, 1097,
	481, 1097,
	482, 1097,
	483, 1097,
	484, 1097,
	485, 1097,
	486, 1097,
	-2, 0,
	-1, 822,
	334, 752,
	388, 752,
	-2, 0,
	-1, 823,
	334, 751,
	388, 751,
	-2, 697,
	-1, 827,
	1, 792,
	509, 792,
	511, 792,
	513, 792,
	-2, 0,
	-1, 828,
	1, 730,
	509, 730,
	511, 730,
	513, 730,
	-2, 0,
	-1, 829,
	1, 835,
	167, 835,
	509, 835,
	511, 835,
	513, 835,
	-2, 0,
	-1, 837,
	1, 755,
	509, 755,
	511, 755,
	513, 755,
	-2, 0,
	-1, 843,
	1, 792,
	509, 792,
	511, 792,
	513, 792,
	-2, 0,
	-1, 844,
	1, 794,
	509, 794,
	511, 794,
	513, 794,
	-2, 0,
	-1, 845,
	1, 797,
	509, 797,
	511, 797,
	513, 797,
	-2, 0,
	-1, 851,
	1, 814,
	509, 814,
	511, 814,
	513, 814,
	-2, 0,
	-1, 852,
	1, 816,
	509, 816,
	511, 816,
	513, 816,
	-2, 0,
	-1, 901,
	154, 1302,
	167, 1302,
	247, 1302,
	290, 1302,
	-2, 1240,
	-1, 916,
	154, 1301,
	167, 1301,
	247, 1301,
	290, 1301,
	-2, 1237,
	-1, 942,
	512, 1946,
	-2, 609,
	-1, 970,
	5, 1938,
	510, 1936,
	-2, 1927,
	-1, 978,
	5, 1959,
	510, 1956,
	-2, 1947,
	-1, 979,
	5, 1960,
	510, 1957,
	-2, 1948,
	-1, 987,
	512, 1944,
	-2, 1926,
	-1, 988,
	510, 2304,
	-2, 1945,
	-1, 1011,
	510, 2303,
	-2, 1961,
	-1, 1012,
	5, 1466,
	-2, 2274,
	-1, 1013,
	5, 1467,
	-2, 2275,
	-1, 1014,
	5, 1468,
	-2, 2289,
	-1, 1015,
	5, 1469,
	-2, 2254,
	-1, 1016,
	5, 1470,
	-2, 2287,
	-1, 1017,
	5, 1478,
	-2, 2266,
	-1, 1018,
	5, 1465,
	-2, 2262,
	-1, 1019,
	5, 1465,
	-2, 2261,
	-1, 1020,
	5, 1465,
	-2, 2280,
	-1, 1021,
	5, 1476,
	-2, 2256,
	-1, 1022,
	5, 1481,
	-2, 2255,
	-1, 1023,
	5, 1483,
	-2, 2299,
	-1, 1026,
	5, 1505,
	-2, 2292,
	-1, 1027,
	5, 1497,
	-2, 2293,
	-1, 1028,
	5, 1505,
	-2, 2294,
	-1, 1029,
	5, 1501,
	-2, 2295,
	-1, 1030,
	5, 1452,
	-2, 2267,
	-1, 1031,
	5, 1453,
	-2, 2268,
	-1, 1058,
	5, 1488,
	-2, 2300,
	-1, 1059,
	5, 1489,
	-2, 2290,
	-1, 1060,
	5, 1490,
	475, 1490,
	-2, 2257,
	-1, 1061,
	5, 1491,
	475, 1491,
	-2, 2258,
	-1, 1098,
	510, 1956,
	-2, 1947,
	-1, 1099,
	510, 1957,
	-2, 1948,
	-1, 1128,
	170, 2226,
	439, 2226,
	493, 2226,
	512, 2226,
	-2, 0,
	-1, 1131,
	1, 587,
	513, 587,
	-2, 1175,
	-1, 1256,
	351, 1922,
	390, 1922,
	503, 1922,
	-2, 1920,
	-1, 1268,
	514, 1922,
	-2, 1923,
	-1, 1275,
	1, 1073,
	509, 1073,
	511, 1073,
	513, 1073,
	-2, 1289,
	-1, 1328,
	340, 897,
	474, 897,
	-2, 328,
	-1, 1350,
	1, 1073,
	509, 1073,
	511, 1073,
	513, 1073,
	-2, 1289,
	-1, 1356,
	4, 1097,
	21, 1097,
	22, 1097,
	23, 1097,
	24, 1097,
	25, 1097,
	26, 1097,
	28, 1097,
	29, 1097,
	35, 1097,
	40, 1097,
	41, 1097,
	42, 1097,
	43, 1097,
	44, 1097,
	45, 1097,
	46, 1097,
	47, 1097,
	48, 1097,
	50, 1097,
	51, 1097,
	52, 1097,
	53, 1097,
	55, 1097,
	56, 1097,
	57, 1097,
	58, 1097,
	59, 1097,
	63, 1097,
	64, 1097,
	65, 1097,
	66, 1097,
	68, 1097,
	69, 1097,
	70, 1097,
	74, 1097,
	75, 1097,
	76, 1097,
	77, 1097,
	78, 1097,
	79, 1097,
	80, 1097,
	83, 1097,
	84, 1097,
	85, 1097,
	86, 1097,
	88, 1097,
	90, 1097,
	91, 1097,
	92, 1097,
	94, 1097,
	96, 1097,
	97, 1097,
	105, 1097,
	106, 1097,
	107, 1097,
	108, 1097,
	110, 1097,
	111, 1097,
	112, 1097,
	114, 1097,
	115, 1097,
	116, 1097,
	118, 1097,
	119, 1097,
	121, 1097,
	122, 1097,
	123, 1097,
	126, 1097,
	127, 1097,
	128, 1097,
	130, 1097,
	131, 1097,
	133, 1097,
	134, 1097,
	135, 1097,
	137, 1097,
	138, 1097,
	139, 1097,
	140, 1097,
	141, 1097,
	142, 1097,
	143, 1097,
	144, 1097,
	145, 1097,
	146, 1097,
	147, 1097,
	148, 1097,
	149, 1097,
	150, 1097,
	151, 1097,
	159, 1097,
	160, 1097,
	161, 1097,
	162, 1097,
	166, 1097,
	168, 1097,
	172, 1097,
	173, 1097,
	174, 1097,
	175, 1097,
	176, 1097,
	177, 1097,
	179, 1097,
	180, 1097,
	182, 1097,
	183, 1097,
	185, 1097,
	186, 1097,
	187, 1097,
	188, 1097,
	189, 1097,
	190, 1097,
	191, 1097,
	192, 1097,
	193, 1097,
	195, 1097,
	196, 1097,
	198, 1097,
	199, 1097,
	200, 1097,
	201, 1097,
	206, 1097,
	207, 1097,
	208, 1097,
	211, 1097,
	212, 1097,
	213, 1097,
	215, 1097,
	217, 1097,
	218, 1097,
	220, 1097,
	222, 1097,
	223, 1097,
	224, 1097,
	226, 1097,
	230, 1097,
	231, 1097,
	232, 1097,
	233, 1097,
	234, 1097,
	235, 1097,
	237, 1097,
	238, 1097,
	239, 1097,
	241, 1097,
	242, 1097,
	244, 1097,
	245, 1097,
	248, 1097,
	249, 1097,
	250, 1097,
	253, 1097,
	254, 1097,
	255, 1097,
	256, 1097,
	258, 1097,
	259, 1097,
	260, 1097,
	261, 1097,
	262, 1097,
	263, 1097,
	264, 1097,
	265, 1097,
	266, 1097,
	267, 1097,
	268, 1097,
	270, 1097,
	272, 1097,
	273, 1097,
	274, 1097,
	275, 1097,
	276, 1097,
	277, 1097,
	279, 1097,
	283, 1097,
	285, 1097,
	286, 1097,
	287, 1097,
	288, 1097,
	289, 1097,
	292, 1097,
	294, 1097,
	296, 1097,
	297, 1097,
	298, 1097,
	301, 1097,
	302, 1097,
	303, 1097,
	305, 1097,
	307, 1097,
	308, 1097,
	309, 1097,
	310, 1097,
	311, 1097,
	312, 1097,
	313, 1097,
	314, 1097,
	315, 1097,
	316, 1097,
	317, 1097,
	318, 1097,
	320, 1097,
	321, 1097,
	322, 1097,
	323, 1097,
	324, 1097,
	325, 1097,
	326, 1097,
	327, 1097,
	328, 1097,
	330, 1097,
	332, 1097,
	333, 1097,
	334, 1097,
	335, 1097,
	336, 1097,
	337, 1097,
	338, 1097,
	339, 1097,
	340, 1097,
	341, 1097,
	342, 1097,
	349, 1097,
	351, 1097,
	352, 1097,
	353, 1097,
	354, 1097,
	355, 1097,
	356, 1097,
	357, 1097,
	358, 1097,
	360, 1097,
	361, 1097,
	362, 1097,
	364, 1097,
	365, 1097,
	366, 1097,
	367, 1097,
	368, 1097,
	369, 1097,
	371, 1097,
	372, 1097,
	373, 1097,
	374, 1097,
	375, 1097,
	376, 1097,
	377, 1097,
	378, 1097,
	379, 1097,
	380, 1097,
	381, 1097,
	383, 1097,
	384, 1097,
	385, 1097,
	386, 1097,
	387, 1097,
	388, 1097,
	390, 1097,
	391, 1097,
	392, 1097,
	393, 1097,
	394, 1097,
	396, 1097,
	397, 1097,
	398, 1097,
	399, 1097,
	400, 1097,
	401, 1097,
	402, 1097,
	404, 1097,
	406, 1097,
	407, 1097,
	408, 1097,
	409, 1097,
	410, 1097,
	411, 1097,
	412, 1097,
	413, 1097,
	414, 1097,
	415, 1097,
	416, 1097,
	417, 1097,
	418, 1097,
	420, 1097,
	421, 1097,
	423, 1097,
	425, 1097,
	426, 1097,
	427, 1097,
	428, 1097,
	429, 1097,
	430, 1097,
	431, 1097,
	432, 1097,
	434, 1097,
	435, 1097,
	436, 1097,
	437, 1097,
	438, 1097,
	440, 1097,
	442, 1097,
	443, 1097,
	444, 1097,
	445, 1097,
	446, 1097,
	448, 1097,
	449, 1097,
	450, 1097,
	452, 1097,
	453, 1097,
	456, 1097,
	457, 1097,
	458, 1097,
	459, 1097,
	460, 1097,
	461, 1097,
	462, 1097,
	464, 1097,
	467, 1097,
	468, 1097,
	469, 1097,
	470, 1097,
	471, 1097,
	472, 1097,
	474, 1097,
	475, 1097,
	476, 1097,
	481, 1097,
	482, 1097,
	483, 1097,
	484, 1097,
	485, 1097,
	486, 1097,
	-2, 0,
	-1, 1428,
	1, 464,
	509, 464,
	511, 464,
	513, 464,
	-2, 1260,
	-1, 1431,
	4, 2298,
	11, 2298,
	12, 2298,
	14, 2298,
	15, 2298,
	16, 2298,
	17, 2298,
	18, 2298,
	19, 2298,
	21, 2298,
	22, 2298,
	23, 2298,
	24, 2298,
	25, 2298,
	26, 2298,
	28, 2298,
	29, 2298,
	32, 2298,
	33, 2298,
	35, 2298,
	37, 2298,
	40, 2298,
	41, 2298,
	42, 2298,
	43, 2298,
	44, 2298,
	45, 2298,
	46, 2298,
	47, 2298,
	48, 2298,
	50, 2298,
	51, 2298,
	52, 2298,
	53, 2298,
	55, 2298,
	56, 2298,
	57, 2298,
	58, 2298,
	59, 2298,
	63, 2298,
	64, 2298,
	65, 2298,
	66, 2298,
	68, 2298,
	69, 2298,
	70, 2298,
	71, 2298,
	74, 2298,
	75, 2298,
	76, 2298,
	77, 2298,
	78, 2298,
	79, 2298,
	80, 2298,
	81, 2298,
	83, 2298,
	84, 2298,
	85, 2298,
	86, 2298,
	88, 2298,
	89, 2298,
	90, 2298,
	91, 2298,
	92, 2298,
	94, 2298,
	95, 2298,
	96, 2298,
	97, 2298,
	105, 2298,
	106, 2298,
	107, 2298,
	108, 2298,
	110, 2298,
	111, 2298,
	112, 2298,
	114, 2298,
	115, 2298,
	116, 2298,
	118, 2298,
	119, 2298,
	121, 2298,
	122, 2298,
	123, 2298,
	126, 2298,
	127, 2298,
	128, 2298,
	130, 2298,
	131, 2298,
	133, 2298,
	134, 2298,
	135, 2298,
	137, 2298,
	138, 2298,
	139, 2298,
	140, 2298,
	141, 2298,
	142, 2298,
	143, 2298,
	144, 2298,
	145, 2298,
	146, 2298,
	147, 2298,
	148, 2298,
	149, 2298,
	150, 2298,
	151, 2298,
	155, 2298,
	156, 2298,
	157, 2298,
	158, 2298,
	159, 2298,
	160, 2298,
	161, 2298,
	162, 2298,
	165, 2298,
	166, 2298,
	168, 2298,
	171, 2298,
	172, 2298,
	173, 2298,
	174, 2298,
	175, 2298,
	176, 2298,
	177, 2298,
	179, 2298,
	180, 2298,
	182, 2298,
	183, 2298,
	185, 2298,
	186, 2298,
	187, 2298,
	188, 2298,
	189, 2298,
	190, 2298,
	191, 2298,
	192, 2298,
	193, 2298,
	194, 2298,
	195, 2298,
	196, 2298,
	197, 2298,
	198, 2298,
	199, 2298,
	200, 2298,
	201, 2298,
	203, 2298,
	204, 2298,
	206, 2298,
	207, 2298,
	208, 2298,
	210, 2298,
	211, 2298,
	212, 2298,
	213, 2298,
	215, 2298,
	217, 2298,
	218, 2298,
	219, 2298,
	220, 2298,
	221, 2298,
	222, 2298,
	223, 2298,
	224, 2298,
	225, 2298,
	226, 2298,
	228, 2298,
	229, 2298,
	230, 2298,
	231, 2298,
	232, 2298,
	233, 2298,
	234, 2298,
	235, 2298,
	237, 2298,
	238, 2298,
	239, 2298,
	241, 2298,
	242, 2298,
	243, 2298,
	244, 2298,
	245, 2298,
	246, 2298,
	248, 2298,
	249, 2298,
	250, 2298,
	253, 2298,
	254, 2298,
	255, 2298,
	256, 2298,
	257, 2298,
	258, 2298,
	259, 2298,
	260, 2298,
	261, 2298,
	262, 2298,
	263, 2298,
	264, 2298,
	265, 2298,
	266, 2298,
	267, 2298,
	268, 2298,
	270, 2298,
	271, 2298,
	272, 2298,
	273, 2298,
	274, 2298,
	275, 2298,
	276, 2298,
	277, 2298,
	279, 2298,
	282, 2298,
	283, 2298,
	285, 2298,
	286, 2298,
	287, 2298,
	288, 2298,
	289, 2298,
	292, 2298,
	296, 2298,
	297, 2298,
	298, 2298,
	299, 2298,
	301, 2298,
	302, 2298,
	303, 2298,
	305, 2298,
	307, 2298,
	308, 2298,
	309, 2298,
	310, 2298,
	311, 2298,
	312, 2298,
	313, 2298,
	314, 2298,
	315, 2298,
	316, 2298,
	317, 2298,
	318, 2298,
	320, 2298,
	321, 2298,
	322, 2298,
	323, 2298,
	324, 2298,
	325, 2298,
	326, 2298,
	327, 2298,
	328, 2298,
	330, 2298,
	332, 2298,
	333, 2298,
	334, 2298,
	335, 2298,
	336, 2298,
	337, 2298,
	338, 2298,
	339, 2298,
	340, 2298,
	341, 2298,
	342, 2298,
	349, 2298,
	350, 2298,
	351, 2298,
	352, 2298,
	353, 2298,
	354, 2298,
	355, 2298,
	356, 2298,
	357, 2298,
	358, 2298,
	360, 2298,
	361, 2298,
	362, 2298,
	363, 2298,
	364, 2298,
	365, 2298,
	366, 2298,
	367, 2298,
	368, 2298,
	369, 2298,
	370, 2298,
	371, 2298,
	372, 2298,
	373, 2298,
	374, 2298,
	375, 2298,
	376, 2298,
	377, 2298,
	378, 2298,
	379, 2298,
	380, 2298,
	381, 2298,
	383, 2298,
	384, 2298,
	385, 2298,
	386, 2298,
	387, 2298,
	388, 2298,
	390, 2298,
	391, 2298,
	392, 2298,
	393, 2298,
	394, 2298,
	395, 2298,
	396, 2298,
	397, 2298,
	398, 2298,
	399, 2298,
	400, 2298,
	401, 2298,
	402, 2298,
	404, 2298,
	406, 2298,
	407, 2298,
	408, 2298,
	409, 2298,
	410, 2298,
	411, 2298,
	412, 2298,
	413, 2298,
	414, 2298,
	415, 2298,
	416, 2298,
	417, 2298,
	418, 2298,
	420, 2298,
	421, 2298,
	423, 2298,
	425, 2298,
	426, 2298,
	427, 2298,
	428, 2298,
	429, 2298,
	430, 2298,
	431, 2298,
	432, 2298,
	434, 2298,
	435, 2298,
	436, 2298,
	437, 2298,
	438, 2298,
	440, 2298,
	442, 2298,
	443, 2298,
	444, 2298,
	445, 2298,
	446, 2298,
	448, 2298,
	449, 2298,
	450, 2298,
	452, 2298,
	453, 2298,
	456, 2298,
	457, 2298,
	458, 2298,
	459, 2298,
	460, 2298,
	461, 2298,
	462, 2298,
	464, 2298,
	467, 2298,
	468, 2298,
	469, 2298,
	470, 2298,
	471, 2298,
	472, 2298,
	474, 2298,
	475, 2298,
	476, 2298,
	481, 2298,
	482, 2298,
	483, 2298,
	484, 2298,
	485, 2298,
	486, 2298,
	487, 2298,
	488, 2298,
	491, 2298,
	492, 2298,
	493, 2298,
	494, 2298,
	495, 2298,
	496, 2298,
	498, 2298,
	499, 2298,
	500, 2298,
	501, 2298,
	502, 2298,
	503, 2298,
	504, 2298,
	505, 2298,
	506, 2298,
	508, 2298,
	511, 2298,
	512, 2298,
	514, 2298,
	515, 2298,
	-2, 0,
	-1, 1436,
	170, 2192,
	439, 2192,
	493, 2192,
	512, 2192,
	-2, 0,
	-1, 1484,
	334, 752,
	388, 752,
	-2, 0,
	-1, 1509,
	1, 747,
	509, 747,
	511, 747,
	513, 747,
	-2, 0,
	-1, 1510,
	1, 783,
	509, 783,
	511, 783,
	513, 783,
	-2, 0,
	-1, 1511,
	1, 754,
	509, 754,
	511, 754,
	513, 754,
	-2, 0,
	-1, 1513,
	1, 758,
	509, 758,
	511, 758,
	513, 758,
	-2, 0,
	-1, 1519,
	1, 765,
	509, 765,
	511, 765,
	513, 765,
	-2, 0,
	-1, 1547,
	1, 2246,
	509, 2246,
	511, 2246,
	512, 2246,
	513, 2246,
	-2, 812,
	-1, 1548,
	1, 2189,
	509, 2189,
	511, 2189,
	512, 2189,
	513, 2189,
	-2, 813,
	-1, 1563,
	1, 1170,
	513, 1170,
	-2, 1175,
	-1, 1566,
	154, 1301,
	167, 1301,
	247, 1301,
	290, 1301,
	-2, 1241,
	-1, 1660,
	136, 1262,
	154, 1262,
	167, 1262,
	214, 1262,
	247, 1262,
	290, 1262,
	300, 1262,
	454, 1262,
	-2, 1666,
	-1, 1720,
	511, 1816,
	-2, 0,
	-1, 1755,
	136, 1262,
	154, 1262,
	167, 1262,
	214, 1262,
	247, 1262,
	290, 1262,
	300, 1262,
	454, 1262,
	-2, 1382,
	-1, 1802,
	510, 1493,
	-2, 1481,
	-1, 1835,
	1, 589,
	513, 589,
	-2, 1175,
	-1, 2061,
	1, 749,
	509, 749,
	511, 749,
	513, 749,
	-2, 0,
	-1, 2062,
	1, 785,
	509, 785,
	511, 785,
	513, 785,
	-2, 0,
	-1, 2092,
	1, 767,
	509, 767,
	511, 767,
	513, 767,
	-2, 0,
	-1, 2138,
	368, 1328,
	369, 1328,
	-2, 1526,
	-1, 2169,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1546,
	-1, 2170,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1547,
	-1, 2171,
	89, 0,
	228, 0,
	229, 0,
	495, 0,
	496, 0,
	-2, 1548,
	-1, 2172,
	89, 0,
	228, 0,
	229, 0,
	495, 0,
	496, 0,
	-2, 1549,
	-1, 2173,
	89, 0,
	228, 0,
	229, 0,
	495, 0,
	496, 0,
	-2, 1550,
	-1, 2174,
	89, 0,
	228, 0,
	229, 0,
	495, 0,
	496, 0,
	-2, 1551,
	-1, 2175,
	89, 0,
	228, 0,
	229, 0,
	495, 0,
	496, 0,
	-2, 1552,
	-1, 2176,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1553,
	-1, 2188,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1565,
	-1, 2189,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1566,
	-1, 2190,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1567,
	-1, 2193,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1572,
	-1, 2199,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1576,
	-1, 2201,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1584,
	-1, 2202,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1585,
	-1, 2203,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1586,
	-1, 2204,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1587,
	-1, 2316,
	5, 1959,
	170, 1827,
	510, 1956,
	-2, 1947,
	-1, 2317,
	170, 1828,
	-2, 2250,
	-1, 2318,
	170, 1829,
	-2, 2108,
	-1, 2319,
	170, 1830,
	-2, 2018,
	-1, 2320,
	170, 1831,
	-2, 2062,
	-1, 2321,
	170, 1832,
	-2, 2103,
	-1, 2322,
	170, 1833,
	-2, 2187,
	-1, 2323,
	170, 1834,
	-2, 1649,
	-1, 2392,
	1, 1383,
	2, 1383,
	95, 1383,
	136, 1383,
	154, 1383,
	167, 1383,
	171, 1383,
	181, 1383,
	184, 1383,
	210, 1383,
	214, 1383,
	225, 1383,
	243, 1383,
	247, 1383,
	271, 1383,
	290, 1383,
	294, 1383,
	300, 1383,
	359, 1383,
	363, 1383,
	454, 1383,
	465, 1383,
	478, 1383,
	479, 1383,
	480, 1383,
	489, 1383,
	509, 1383,
	511, 1383,
	513, 1383,
	515, 1383,
	-2, 1382,
	-1, 2405,
	510, 1928,
	-2, 1942,
	-1, 2407,
	1, 264,
	-2, 1289,
	-1, 2429,
	510, 1492,
	-2, 1482,
	-1, 2546,
	1, 1073,
	509, 1073,
	511, 1073,
	513, 1073,
	-2, 1289,
	-1, 2710,
	295, 1331,
	-2, 2288,
	-1, 2711,
	295, 1332,
	-2, 2173,
	-1, 2715,
	368, 1893,
	369, 1893,
	-2, 1647,
	-1, 2716,
	368, 1897,
	369, 1897,
	-2, 1648,
	-1, 2717,
	368, 1894,
	369, 1894,
	-2, 1647,
	-1, 2718,
	368, 1898,
	369, 1898,
	-2, 1648,
	-1, 2731,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1574,
	-1, 2732,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1578,
	-1, 2738,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1580,
	-1, 2936,
	222, 1175,
	330, 1175,
	338, 1175,
	489, 1175,
	-2, 586,
	-1, 3063,
	1, 1073,
	509, 1073,
	511, 1073,
	513, 1073,
	-2, 1289,
	-1, 3165,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1582,
	-1, 3172,
	219, 0,
	221, 0,
	282, 0,
	-2, 1601,
	-1, 3239,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1630,
	-1, 3240,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1631,
	-1, 3241,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1632,
	-1, 3245,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1636,
	-1, 3246,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1637,
	-1, 3247,
	14, 0,
	15, 0,
	16, 0,
	491, 0,
	492, 0,
	493, 0,
	-2, 1638,
	-1, 3293,
	510, 1929,
	-2, 1943,
	-1, 3416,
	512, 2404,
	-2, 1219,
	-1, 3472,
	219, 0,
	221, 0,
	282, 0,
	-2, 1602,
	-1, 3475,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1605,
	-1, 3476,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1607,
	-1, 3680,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1606,
	-1, 3681,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	194, 0,
	197, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 1608,
	-1, 3692,
	219, 0,
	-2, 1639,
	-1, 3838,
	219, 0,
	-2, 1640,
	-1, 3986,
	47, 0,
	194, 0,
	246, 0,
	395, 0,
	487, 0,
	494, 0,
	-2, 2253,
}

const sqlPrivate = 57344

const sqlLast = 102023

var sqlAct = [...]int{

	239, 3767, 3049, 3724, 2630, 3607, 3985, 3996, 4093, 3319,
	3881, 3961, 3860, 2865, 3942, 3955, 3048, 3455, 3998, 3927,
	3712, 3945, 3997, 2602, 3727, 3774, 3638, 1102, 3204, 3984,
	2866, 4043, 2462, 3842, 3592, 3633, 1294, 2032, 926, 2148,
	1419, 3669, 2954, 1278, 3408, 3078, 943, 3783, 1414, 3621,
	3541, 231, 3357, 3805, 2016, 3071, 3044, 2216, 3034, 1789,
	3387, 1575, 3643, 3073, 36, 930, 3370, 2156, 660, 1451,
	626, 2523, 2041, 1887, 2348, 3372, 3157, 1160, 3320, 2639,
	3697, 2149, 2724, 3123, 2652, 2591, 2574, 2565, 3295, 1091,
	2848, 3125, 660, 2880, 2641, 2908, 2888, 3454, 1253, 1761,
	917, 2638, 2649, 1492, 2603, 2632, 2869, 2577, 2586, 2588,
	1935, 2464, 1936, 3264, 2847, 1418, 1730, 2871, 2153, 2229,
	3511, 2039, 2500, 758, 1897, 3843, 925, 161, 1450, 1261,
	655, 1930, 4, 2384, 2708, 2537, 2385, 2258, 3018, 1706,
	974, 1668, 1914, 2575, 2014, 1921, 1144, 3768, 1871, 1874,
	1731, 2213, 1563, 2249, 233, 232, 2915, 2366, 2345, 1861,
	2137, 2118, 1082, 3046, 1258, 2387, 2120, 1415, 2648, 1429,
	1971, 1411, 2499, 2596, 979, 1395, 1348, 1133, 1405, 661,
	2252, 662, 1750, 2374, 2642, 1701, 2230, 2453, 594, 1790,
	1085, 938, 1064, 2302, 1740, 1576, 1653, 610, 2356, 2312,
	657, 170, 1577, 1280, 1519, 2119, 1081, 99, 1970, 1099,
	2121, 161, 580, 620, 1991, 1427, 602, 752, 732, 1371,
	171, 706, 666, 669, 1289, 1886, 2142, 955, 597, 1087,
	41, 40, 38, 29, 27, 25, 1062, 2759, 1562, 1300,
	605, 835, 2755, 1582, 817, 2867, 666, 669, 3278, 2007,
	3279, 4155, 921, 4149, 1293, 2365, 2007, 3104, 4135, 3088,
	2934, 4134, 2365, 2007, 2007, 2365, 4110, 2358, 4108, 1747,
	3557, 2007, 3557, 4104, 4026, 4020, 4018, 1944, 4027, 2365,
	2365, 4015, 3087, 4012, 4007, 4016, 3982, 4013, 1944, 3981,
	1944, 3980, 773, 1944, 3976, 2025, 2768, 3975, 2025, 1590,
	1591, 2025, 2769, 3104, 3970, 1633, 1634, 1635, 3557, 3968,
	3940, 2260, 3921, 3557, 3557, 3914, 2420, 1118, 3913, 2365,
	921, 1621, 2365, 3908, 977, 3907, 1079, 3557, 1593, 3557,
	3901, 2723, 3874, 3840, 1944, 1639, 3599, 2420, 3822, 3819,
	3816, 3776, 3444, 1944, 3557, 3777, 3744, 3743, 3735, 1512,
	1944, 1944, 1944, 2005, 3734, 2519, 3703, 3682, 3557, 1592,
	1944, 2420, 1141, 902, 3662, 2365, 1065, 1065, 2025, 1612,
	3651, 3587, 3576, 3922, 3104, 2365, 2365, 1609, 3835, 3556,
	922, 3474, 901, 3557, 1141, 2420, 3424, 3418, 2040, 3823,
	3120, 3120, 1459, 84, 3385, 3288, 3286, 3271, 3386, 3289,
	3287, 2365, 3188, 3184, 1590, 1591, 1944, 2365, 3119, 916,
	3268, 3111, 3120, 2864, 911, 3112, 2859, 2365, 2858, 2811,
	2365, 2809, 2365, 2812, 2801, 2810, 1621, 2799, 2802, 2025,
	2770, 2365, 2655, 1593, 2365, 2628, 2025, 2627, 1066, 2028,
	2416, 2028, 206, 1615, 1616, 1617, 1618, 2437, 2419, 2485,
	2414, 2365, 2420, 1598, 2365, 2408, 2364, 2027, 3268, 1944,
	2365, 2028, 2357, 1113, 1592, 2255, 1068, 2365, 1069, 3632,
	3599, 3577, 1944, 3444, 3112, 1944, 2514, 2452, 1841, 1891,
	2006, 1445, 1630, 2571, 208, 1640, 1943, 2531, 2450, 1590,
	1591, 1620, 1622, 1726, 1288, 3349, 206, 3160, 3138, 1748,
	1924, 3089, 2401, 2400, 2399, 2820, 2821, 2398, 2838, 2839,
	2840, 1621, 2397, 206, 1302, 1070, 1607, 1608, 1593, 1067,
	3090, 3527, 1590, 1591, 1494, 910, 3470, 909, 908, 907,
	207, 1590, 1591, 1094, 1628, 2758, 906, 3486, 208, 1114,
	200, 905, 904, 2256, 1621, 1613, 900, 2008, 201, 1592,
	899, 1593, 898, 1621, 2008, 208, 2688, 1302, 1598, 1612,
	1593, 2008, 2008, 2820, 2821, 897, 896, 1609, 895, 2008,
	172, 894, 893, 1293, 892, 2835, 891, 890, 889, 888,
	887, 886, 1592, 885, 207, 884, 866, 815, 814, 813,
	206, 1592, 812, 811, 200, 810, 1620, 1622, 809, 808,
	807, 207, 201, 3303, 3087, 1114, 806, 805, 804, 803,
	4003, 802, 2357, 3468, 801, 800, 799, 798, 2257, 2254,
	797, 796, 795, 794, 172, 979, 793, 3282, 206, 979,
	792, 791, 208, 1615, 1616, 1617, 1618, 790, 1619, 789,
	134, 172, 788, 1598, 1163, 787, 1302, 786, 1163, 776,
	1613, 775, 1283, 771, 770, 764, 763, 723, 1614, 2826,
	2285, 722, 1114, 1143, 682, 681, 680, 1148, 672, 671,
	208, 670, 640, 632, 631, 979, 1598, 979, 207, 979,
	630, 1620, 1622, 1631, 1283, 1598, 614, 227, 200, 226,
	225, 224, 223, 222, 1137, 221, 201, 1256, 1269, 220,
	1268, 1271, 219, 1264, 218, 2616, 1607, 1608, 1283, 217,
	981, 216, 2023, 2841, 1620, 1622, 207, 2826, 172, 2020,
	2006, 3983, 215, 1620, 1622, 1463, 200, 2113, 214, 206,
	213, 212, 2599, 211, 201, 1613, 2259, 210, 209, 3121,
	1299, 2911, 1306, 2781, 1312, 2764, 2552, 2424, 2406, 1283,
	979, 2836, 2391, 1869, 2582, 1283, 172, 1353, 1355, 1283,
	1271, 1271, 1774, 1614, 1292, 1679, 1272, 979, 1613, 979,
	2271, 208, 206, 1283, 1131, 1629, 1314, 1613, 1751, 979,
	2269, 979, 1632, 1610, 1606, 1301, 1603, 1601, 1602, 1594,
	1595, 1596, 1597, 1599, 1600, 2862, 1296, 1709, 1271, 1670,
	2035, 1589, 3888, 1708, 1150, 1156, 1101, 1250, 1255, 2836,
	3832, 3696, 3826, 3824, 208, 1425, 2863, 207, 666, 669,
	3652, 1344, 1283, 1709, 1514, 1712, 3647, 200, 1619, 1708,
	3631, 3722, 1443, 1126, 1448, 201, 2820, 2821, 3534, 979,
	2253, 3509, 979, 1291, 1457, 1290, 1462, 3508, 1614, 3502,
	3501, 1707, 1024, 3500, 2820, 2821, 3493, 172, 2927, 3492,
	207, 206, 3490, 3485, 2837, 2433, 3115, 3482, 3481, 3384,
	200, 3307, 3390, 2820, 2821, 3306, 1358, 2034, 201, 3305,
	3292, 1614, 161, 161, 3259, 3258, 3257, 3180, 1432, 1434,
	1614, 1590, 1591, 1602, 1594, 1595, 1596, 1597, 1599, 1600,
	172, 1677, 1513, 208, 1982, 1670, 1464, 3176, 3347, 2906,
	1408, 2855, 2846, 1621, 2819, 2816, 2815, 2813, 1399, 1402,
	1593, 2808, 2837, 2807, 2806, 2820, 2821, 2803, 1374, 2800,
	2780, 2763, 979, 979, 979, 979, 979, 979, 979, 1671,
	2756, 1669, 4148, 1137, 2629, 2392, 1137, 1528, 2242, 207,
	1302, 1592, 1589, 1588, 1308, 2820, 2821, 2584, 1430, 200,
	3391, 1612, 922, 979, 1313, 1078, 1951, 201, 970, 979,
	1949, 4102, 4101, 1610, 1606, 4036, 1603, 1601, 1602, 1594,
	1595, 1596, 1597, 1599, 1600, 2832, 2833, 2834, 3707, 172,
	2826, 4034, 2831, 2829, 2830, 2822, 2823, 2824, 2825, 2827,
	2828, 206, 1567, 4025, 2422, 1103, 3206, 1444, 2826, 1603,
	1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600, 3880, 1458,
	1449, 1594, 1595, 1596, 1597, 1599, 1600, 2826, 2820, 2821,
	1561, 2838, 2839, 2840, 3870, 1615, 1616, 1617, 1618, 3867,
	3866, 3865, 3646, 208, 3859, 1598, 2860, 2225, 3852, 3469,
	2831, 2829, 2830, 2822, 2823, 2824, 2825, 2827, 2828, 1426,
	1659, 3820, 3844, 1469, 3804, 1485, 2820, 2821, 3803, 2219,
	3791, 3788, 979, 979, 979, 3627, 2903, 1515, 979, 2826,
	3740, 3718, 2836, 1620, 1622, 1099, 3694, 1099, 3677, 207,
	3391, 3676, 3659, 1728, 3658, 3624, 3600, 3526, 2835, 200,
	2836, 3507, 1163, 3445, 3439, 206, 3436, 201, 3337, 2826,
	979, 3336, 1564, 660, 3323, 3322, 3274, 1807, 660, 2836,
	3262, 3171, 1657, 1572, 3122, 3105, 979, 902, 1571, 2598,
	1283, 2583, 3064, 3007, 2982, 2957, 2835, 1613, 2956, 1566,
	1777, 2929, 1307, 2785, 2784, 979, 901, 208, 2779, 2747,
	1786, 1163, 1737, 1765, 1662, 1830, 206, 1568, 1667, 1268,
	2564, 1715, 1782, 1585, 1586, 206, 1714, 1713, 1711, 2284,
	922, 2957, 1710, 1838, 1702, 1700, 2431, 1097, 2430, 2403,
	1590, 1591, 2826, 1867, 1784, 2396, 976, 2363, 2267, 1734,
	1735, 1773, 1729, 207, 1832, 2837, 1724, 1723, 208, 1722,
	1833, 1137, 1721, 200, 1758, 1703, 1704, 208, 1720, 1593,
	1719, 201, 1718, 2837, 1717, 161, 1716, 2036, 1697, 1696,
	2826, 2820, 2821, 1695, 2838, 2839, 2840, 1694, 1693, 1065,
	1619, 1692, 2837, 172, 1691, 1690, 2841, 1689, 1688, 1687,
	1592, 1686, 3175, 1685, 207, 1684, 1683, 1780, 1672, 1658,
	1614, 1656, 1651, 207, 200, 1125, 1116, 1109, 3530, 3478,
	3302, 3285, 201, 200, 3277, 1858, 2767, 666, 669, 1778,
	1759, 201, 666, 669, 2836, 2394, 1769, 1756, 3532, 2270,
	3301, 1835, 924, 1671, 172, 2925, 4099, 1283, 1283, 2268,
	1654, 2835, 4092, 172, 922, 3827, 3825, 1163, 3868, 3579,
	1727, 2820, 2821, 3074, 1880, 3779, 3778, 3650, 3602, 3601,
	3578, 3529, 2836, 1785, 1753, 1860, 3447, 1860, 1829, 1768,
	1767, 1766, 1764, 1763, 1762, 2830, 2822, 2823, 2824, 2825,
	2827, 2828, 1911, 3446, 206, 1913, 1147, 1692, 1918, 3721,
	1860, 1692, 3280, 1787, 2822, 2823, 2824, 2825, 2827, 2828,
	3107, 3106, 1749, 3784, 1141, 1559, 1939, 1941, 1751, 2926,
	2805, 2829, 2830, 2822, 2823, 2824, 2825, 2827, 2828, 1863,
	1853, 2331, 2804, 2729, 2487, 2826, 208, 1983, 1603, 1601,
	1602, 1594, 1595, 1596, 1597, 1599, 1600, 2837, 2504, 2985,
	1146, 1142, 1590, 1591, 3335, 1093, 1138, 1896, 3394, 1978,
	206, 1847, 1141, 1529, 1709, 882, 1678, 1141, 1484, 1094,
	1708, 1094, 1922, 1681, 1145, 2822, 2823, 2824, 2825, 2827,
	2828, 1593, 207, 1493, 3698, 2837, 3051, 4131, 3050, 2841,
	2033, 3775, 200, 4023, 1283, 4008, 1283, 3995, 1283, 206,
	201, 3035, 208, 666, 669, 883, 1975, 2824, 2825, 2827,
	2828, 2653, 1592, 1494, 1283, 1283, 1891, 1268, 1937, 3354,
	3340, 1980, 172, 3136, 2867, 1283, 3208, 2836, 1291, 2773,
	1290, 1988, 972, 1077, 4004, 2250, 2423, 2429, 1283, 1283,
	1283, 208, 1725, 1705, 3042, 1979, 1836, 1132, 207, 1332,
	1917, 4017, 2528, 4014, 2042, 3083, 3314, 3861, 200, 660,
	1473, 3634, 1590, 1591, 1139, 3939, 201, 3849, 2832, 2833,
	2834, 2960, 1140, 1942, 2053, 2831, 2829, 2830, 2822, 2823,
	2824, 2825, 2827, 2828, 3330, 2636, 2595, 207, 172, 953,
	2525, 1593, 3032, 4059, 4005, 1985, 4060, 200, 3152, 1996,
	3760, 2938, 3567, 1320, 880, 201, 1598, 878, 1962, 3900,
	1961, 2438, 2057, 2831, 2829, 2830, 2822, 2823, 2824, 2825,
	2827, 2828, 1592, 1526, 2038, 2098, 4143, 172, 3753, 1330,
	3367, 1527, 1374, 2096, 1993, 3746, 1993, 3380, 3363, 979,
	2837, 979, 2255, 2043, 1994, 1990, 3362, 3356, 979, 862,
	1848, 1807, 1807, 1163, 876, 979, 979, 979, 979, 979,
	979, 979, 979, 979, 979, 979, 979, 979, 979, 979,
	979, 979, 979, 979, 979, 979, 979, 979, 979, 979,
	979, 979, 979, 979, 979, 979, 979, 979, 979, 979,
	3366, 979, 2047, 979, 979, 979, 979, 1430, 2130, 1430,
	2117, 922, 3353, 922, 1998, 1999, 2138, 1331, 1286, 2029,
	1126, 2030, 1525, 666, 669, 979, 1598, 3351, 979, 979,
	2256, 3311, 206, 1141, 2466, 1471, 979, 874, 3310, 718,
	979, 871, 979, 979, 2046, 1600, 2456, 1852, 1851, 2778,
	1163, 1860, 1862, 1147, 2538, 2777, 979, 979, 979, 979,
	2454, 979, 979, 979, 979, 979, 979, 979, 979, 2075,
	2776, 2832, 2833, 2834, 208, 1147, 1138, 1138, 2831, 2829,
	2830, 2822, 2823, 2824, 2825, 2827, 2828, 979, 979, 979,
	979, 979, 979, 979, 979, 979, 2092, 3899, 2775, 2456,
	979, 2984, 2231, 2232, 3317, 2257, 2254, 1146, 1095, 2128,
	2141, 2733, 1099, 2454, 2535, 1888, 2231, 2247, 1739, 1163,
	207, 2534, 2530, 2010, 2521, 2513, 2012, 2512, 1099, 1146,
	200, 719, 2017, 2114, 2491, 2019, 2469, 2415, 201, 2022,
	2200, 2129, 2293, 2116, 979, 1163, 2122, 1884, 2115, 2940,
	2154, 2155, 920, 2126, 902, 2332, 1855, 902, 902, 2508,
	172, 2315, 2315, 2329, 1565, 2231, 2828, 2298, 2349, 2351,
	3580, 1889, 1890, 2145, 2355, 2297, 2146, 2147, 2501, 2502,
	2501, 2502, 2158, 2246, 1139, 1139, 1364, 2250, 1363, 1362,
	2379, 1361, 1140, 1140, 1743, 1486, 2592, 1801, 3675, 1885,
	1385, 592, 868, 2501, 2502, 1960, 3137, 1326, 1466, 1558,
	1283, 2445, 2224, 2478, 2540, 2128, 2111, 2124, 2404, 2227,
	2051, 1339, 2407, 2259, 4087, 2102, 587, 1662, 2244, 2371,
	919, 1524, 2489, 1746, 922, 2539, 2541, 2215, 2706, 2110,
	1163, 1287, 1106, 922, 1769, 1758, 4059, 922, 1741, 2215,
	1538, 1494, 2107, 1838, 1596, 1597, 1599, 1600, 1857, 2126,
	2527, 2691, 1065, 2393, 2065, 3326, 1744, 4001, 2370, 1807,
	2068, 1494, 2127, 2223, 3973, 2544, 1104, 2340, 1482, 2311,
	2221, 2336, 2477, 1137, 2112, 161, 2937, 2324, 2721, 2353,
	2526, 2417, 2060, 1856, 1742, 1163, 2468, 1995, 2376, 2377,
	2378, 857, 2383, 2361, 2362, 2389, 2390, 2372, 4088, 1283,
	3563, 3143, 2744, 1467, 2999, 1891, 921, 2882, 1756, 979,
	979, 2484, 979, 638, 915, 2458, 3142, 2253, 2524, 2685,
	1256, 1711, 3729, 1472, 2259, 922, 1570, 2109, 2125, 1804,
	2742, 3352, 2211, 1141, 1141, 1268, 1124, 3350, 2522, 2436,
	784, 1898, 2518, 2998, 2992, 872, 2432, 3339, 872, 2694,
	1349, 2529, 1594, 1595, 1596, 1597, 1599, 1600, 2069, 3197,
	2209, 1902, 1703, 1704, 1107, 2097, 2568, 2509, 2127, 721,
	720, 2382, 2553, 2095, 2295, 2556, 1745, 2558, 2439, 2296,
	2435, 2493, 2299, 2991, 2300, 2301, 1283, 1283, 2606, 1283,
	4096, 4090, 2720, 1347, 858, 872, 2511, 1470, 4002, 857,
	777, 1283, 3338, 2490, 2457, 4103, 2480, 3674, 1910, 1899,
	2061, 637, 2467, 1097, 1521, 1097, 2597, 2545, 2492, 2597,
	2461, 2547, 915, 2549, 2471, 2474, 1094, 2624, 3731, 2619,
	2650, 2510, 1271, 1271, 2125, 1781, 2503, 2505, 2506, 2507,
	1894, 2488, 1094, 2658, 2659, 765, 2739, 1909, 2494, 716,
	979, 715, 2664, 2665, 2666, 2455, 3918, 2693, 666, 669,
	918, 2106, 2740, 3553, 2062, 2425, 2745, 3561, 873, 2674,
	2654, 2675, 872, 1509, 1948, 1947, 2205, 2259, 2881, 1893,
	2690, 1268, 4000, 1291, 2672, 2550, 4113, 1542, 2206, 3194,
	4076, 4048, 2207, 3549, 979, 4075, 2212, 2413, 2562, 2621,
	979, 979, 858, 2572, 1903, 2713, 2714, 3081, 1384, 3460,
	588, 3459, 1882, 2682, 161, 1325, 3080, 3327, 2635, 1268,
	2625, 1268, 2696, 2608, 2698, 2656, 2590, 1510, 2601, 2660,
	2669, 2661, 1328, 1882, 1864, 1865, 4126, 1934, 2007, 3550,
	2676, 1891, 2678, 2618, 2680, 2612, 2108, 2613, 3862, 2614,
	3010, 4089, 2622, 2620, 1349, 979, 979, 859, 2626, 2709,
	2637, 979, 3876, 2689, 3195, 1904, 1905, 3375, 2692, 2939,
	1536, 1920, 3080, 589, 979, 979, 3373, 2067, 1900, 1933,
	979, 979, 751, 1105, 1698, 2456, 979, 3616, 2923, 4047,
	4069, 1882, 1430, 2671, 1919, 979, 979, 979, 3671, 2472,
	2197, 979, 2677, 3562, 2679, 4094, 2681, 2735, 1875, 3916,
	3456, 979, 1901, 1876, 869, 590, 2736, 591, 1875, 2214,
	1468, 778, 779, 1876, 1875, 2741, 1915, 639, 979, 1876,
	636, 1093, 2712, 1093, 2743, 2699, 2701, 2702, 2766, 2332,
	2332, 2222, 3917, 2703, 2064, 2441, 3687, 3730, 1537, 2971,
	1889, 1890, 2973, 2141, 2707, 2208, 785, 1481, 1483, 2443,
	3950, 1801, 1801, 3879, 2210, 859, 766, 767, 1650, 2241,
	2761, 2762, 2059, 2783, 2375, 2765, 860, 3376, 1916, 4114,
	2722, 2388, 2259, 921, 2975, 2336, 3210, 4124, 4095, 3626,
	641, 3450, 2444, 2757, 979, 979, 979, 3298, 2970, 1119,
	3461, 3154, 2704, 979, 979, 979, 3545, 1539, 979, 2734,
	3546, 2442, 1906, 1877, 3126, 1569, 3670, 3389, 979, 1099,
	1163, 4097, 861, 1877, 979, 1123, 979, 3882, 2615, 1877,
	1879, 3999, 4058, 4056, 1099, 2874, 2875, 1580, 3896, 2974,
	1879, 1497, 3790, 913, 3406, 857, 1879, 2195, 4046, 4029,
	2198, 3067, 1163, 1969, 1736, 3548, 1117, 1112, 4030, 2332,
	2332, 2332, 2772, 3617, 1099, 2336, 2336, 1163, 915, 3551,
	579, 3457, 2144, 780, 781, 2896, 1892, 1849, 3158, 3737,
	1907, 1807, 2857, 1579, 860, 1163, 3505, 922, 3736, 2916,
	4119, 3248, 1881, 3716, 3848, 646, 1574, 979, 2876, 2194,
	3127, 3407, 1881, 1804, 1804, 3360, 3374, 1912, 1881, 1579,
	914, 979, 2921, 3126, 3313, 1540, 1743, 3068, 768, 769,
	3062, 3566, 2952, 1807, 1846, 2948, 2576, 2566, 3565, 3672,
	861, 2933, 1989, 3375, 4127, 2935, 2008, 1981, 1974, 979,
	2886, 2473, 3373, 1956, 3193, 673, 2944, 2945, 858, 2941,
	3263, 2884, 2134, 2909, 3928, 1746, 2905, 3155, 3883, 2103,
	1842, 2852, 2853, 2854, 2961, 2910, 3409, 2965, 2868, 653,
	2373, 1137, 2885, 3639, 2563, 2962, 1578, 2894, 2967, 2968,
	2914, 3547, 1163, 2897, 2898, 2336, 2336, 2336, 1744, 3462,
	2883, 1283, 2902, 648, 1844, 1541, 1283, 1579, 1882, 3127,
	2949, 1268, 1578, 1387, 2987, 1283, 2979, 2980, 1882, 1283,
	2981, 3773, 2895, 1163, 1882, 3771, 3554, 1845, 3013, 1580,
	660, 3016, 2495, 2367, 1978, 3024, 3026, 2918, 2919, 2920,
	3717, 1283, 2963, 2947, 3019, 2900, 2977, 2901, 1650, 3019,
	3004, 3005, 1283, 3376, 3006, 1580, 1872, 3249, 2196, 1795,
	3506, 2936, 2943, 3008, 2959, 3250, 1099, 3047, 4028, 2990,
	1880, 4118, 2942, 3463, 2135, 3061, 2989, 3056, 3076, 1801,
	2924, 3001, 2958, 3276, 1095, 2978, 1095, 2727, 3036, 2705,
	3124, 3128, 3129, 3130, 3131, 1873, 2052, 3000, 1880, 2976,
	1578, 2650, 2879, 2369, 2983, 3564, 1283, 1283, 2368, 2994,
	2650, 643, 2878, 1511, 2412, 3017, 2411, 3085, 1745, 3371,
	3027, 859, 2953, 2997, 2410, 1161, 2409, 3033, 1283, 1262,
	3003, 2570, 1922, 3022, 647, 3009, 3884, 3103, 1268, 1268,
	1922, 3096, 3029, 1498, 3028, 1925, 919, 2995, 3002, 3855,
	1932, 2996, 1356, 1094, 3608, 3725, 3116, 1987, 3038, 3059,
	3040, 1163, 652, 1878, 1163, 1357, 4066, 3769, 1094, 3069,
	2493, 2657, 3077, 1878, 1370, 650, 674, 675, 2917, 1878,
	1097, 645, 3374, 1422, 666, 669, 1368, 2548, 2496, 2497,
	3128, 3129, 3130, 3131, 979, 3936, 1097, 3656, 1094, 3925,
	979, 979, 783, 3931, 979, 979, 979, 3856, 979, 3011,
	3512, 3132, 2930, 2931, 3265, 2932, 1268, 979, 1807, 3149,
	3714, 1804, 642, 3114, 161, 161, 979, 3118, 3075, 979,
	3101, 3102, 3097, 2266, 3954, 1163, 3084, 3082, 912, 1556,
	860, 3148, 4068, 4019, 979, 3869, 3091, 3726, 649, 3693,
	1931, 3139, 1163, 3140, 1554, 3141, 3133, 3715, 3655, 2094,
	3504, 654, 1807, 1807, 979, 979, 1533, 979, 979, 979,
	2332, 2332, 644, 3379, 2890, 3156, 922, 3173, 2849, 1531,
	3932, 3170, 1508, 3134, 3857, 979, 861, 677, 676, 979,
	3145, 1807, 1807, 979, 979, 979, 979, 979, 979, 979,
	979, 979, 979, 979, 979, 979, 979, 979, 979, 979,
	979, 979, 3153, 979, 2814, 1506, 2746, 2567, 2520, 2486,
	979, 979, 1807, 2434, 1776, 1772, 3146, 979, 1557, 1454,
	2850, 3182, 3183, 3151, 1739, 3150, 1574, 2687, 979, 2265,
	678, 679, 2686, 2663, 2123, 3178, 1504, 1502, 1500, 1099,
	1099, 1491, 1489, 979, 1366, 2105, 2891, 1520, 2332, 2332,
	2332, 2332, 2332, 2332, 2332, 2332, 2332, 2332, 2332, 2332,
	2332, 2332, 2332, 2332, 2332, 2332, 2332, 2072, 2332, 3205,
	3212, 3189, 1163, 1953, 3196, 3198, 3199, 1831, 1369, 1682,
	1094, 1465, 1343, 3281, 3012, 3994, 2336, 2336, 1093, 3586,
	1367, 3260, 3225, 3222, 2889, 3223, 3575, 1555, 3252, 3227,
	1743, 979, 4070, 3220, 1093, 870, 782, 3221, 3924, 3072,
	3637, 3591, 1553, 3538, 2093, 3405, 3399, 979, 979, 2893,
	3365, 1928, 3333, 3253, 1532, 3331, 3093, 3094, 3095, 3312,
	3060, 3308, 3098, 3052, 3099, 2617, 3100, 1530, 2593, 1746,
	1507, 2154, 3213, 979, 979, 2581, 2573, 161, 3269, 3270,
	2560, 3267, 2026, 3261, 1741, 2024, 3272, 3273, 2021, 2018,
	2013, 2011, 2009, 1926, 2000, 1952, 1950, 1938, 979, 1923,
	2154, 3228, 1744, 1505, 2336, 2336, 2336, 2336, 2336, 2336,
	2336, 2336, 2336, 2336, 2336, 2336, 2336, 2336, 2336, 2336,
	2336, 2336, 2336, 1283, 2336, 3284, 1908, 3283, 1895, 1883,
	1742, 3256, 1927, 2892, 1503, 1501, 1499, 4044, 1807, 1490,
	1488, 3190, 1365, 3797, 1583, 3345, 1783, 3341, 3297, 1074,
	3346, 3348, 3361, 1795, 1795, 1271, 3316, 2725, 4060, 3964,
	3661, 3654, 3653, 3598, 1283, 3023, 2651, 1868, 1322, 2456,
	1932, 979, 3355, 2456, 1075, 875, 877, 879, 3799, 1099,
	979, 3200, 2476, 2454, 1407, 3417, 3378, 2475, 1891, 2063,
	3419, 1551, 1552, 2089, 1986, 651, 1406, 1283, 1283, 1283,
	3427, 2088, 1978, 1775, 3219, 3963, 2070, 3411, 3568, 3593,
	2606, 3834, 2493, 1283, 1487, 3414, 3395, 1590, 1591, 3296,
	3814, 1801, 1745, 3513, 1590, 1591, 3410, 3491, 2498, 1163,
	2479, 1587, 4062, 4054, 593, 4024, 228, 3431, 1839, 2726,
	3382, 1584, 2559, 2650, 2091, 3396, 1593, 2515, 3377, 3397,
	2525, 1163, 1870, 3443, 979, 979, 2310, 2306, 987, 2533,
	979, 979, 1807, 1801, 3400, 979, 979, 3413, 979, 3806,
	1931, 1076, 979, 707, 1407, 3359, 1407, 1592, 3412, 748,
	576, 3807, 3420, 979, 1592, 3421, 604, 3415, 2532, 3449,
	3923, 2481, 3892, 1094, 1094, 3358, 3889, 3854, 3766, 979,
	3426, 235, 235, 235, 3434, 582, 583, 3808, 598, 582,
	598, 608, 613, 3441, 3437, 629, 3438, 2517, 3398, 3388,
	635, 3473, 3465, 2483, 3432, 3433, 235, 2953, 3291, 2304,
	2516, 3304, 3464, 3440, 2600, 2354, 2482, 3458, 3453, 1834,
	1788, 4091, 3477, 3723, 762, 3448, 2308, 2309, 2307, 2922,
	235, 3956, 4117, 2820, 2821, 3956, 3957, 2448, 2449, 1099,
	3957, 1095, 1293, 1804, 1590, 1591, 3810, 1099, 2446, 2447,
	3891, 1163, 1475, 1163, 3483, 4072, 2261, 1095, 1474, 3300,
	1099, 2448, 3809, 2446, 2294, 1535, 3787, 3754, 1534, 3594,
	3590, 3589, 3479, 3403, 1163, 3299, 3201, 3014, 1945, 3811,
	1676, 3518, 1675, 2303, 2305, 1804, 3503, 4105, 4077, 3332,
	3845, 3334, 3750, 979, 3708, 3705, 3619, 1097, 3531, 3442,
	3423, 3383, 3559, 3381, 3329, 3324, 3092, 3066, 3065, 2684,
	2668, 2667, 1097, 3535, 3536, 2610, 2585, 2561, 2427, 2426,
	1163, 2226, 3521, 2090, 2087, 2086, 2085, 1163, 2084, 2003,
	3560, 2002, 2001, 1984, 3569, 1275, 1964, 3517, 1963, 582,
	582, 1795, 1097, 3571, 3572, 3520, 3570, 235, 3364, 2909,
	1283, 1283, 1959, 3528, 1958, 3525, 3514, 3524, 1957, 161,
	3515, 3516, 3537, 1955, 3519, 3510, 3595, 1317, 3596, 1954,
	1550, 1549, 1495, 1394, 3558, 1978, 1163, 1393, 1392, 1391,
	3606, 1283, 1390, 1094, 1389, 3597, 1388, 1386, 1271, 3609,
	3604, 1350, 1381, 1380, 1379, 1378, 1377, 1338, 3588, 1337,
	1336, 1335, 1334, 1333, 1327, 1321, 3603, 979, 1319, 1318,
	1154, 1153, 1152, 1151, 1122, 1121, 3657, 1283, 1283, 1057,
	3605, 3425, 3585, 3618, 3641, 3574, 1840, 1163, 1801, 3583,
	881, 867, 3728, 3629, 3552, 1544, 3582, 1781, 3584, 979,
	979, 979, 1438, 3640, 82, 3644, 3660, 3635, 1329, 694,
	3625, 3610, 76, 3648, 3628, 1929, 1452, 1163, 3328, 840,
	3953, 1315, 979, 3875, 702, 979, 979, 3938, 3642, 2969,
	2536, 2071, 1801, 1801, 1496, 979, 2073, 3630, 1807, 2904,
	2395, 3915, 3812, 979, 979, 3487, 2782, 3813, 3841, 3686,
	3649, 2264, 1680, 2861, 78, 963, 1009, 3615, 1163, 3664,
	1283, 1801, 1801, 3667, 3673, 1476, 3663, 3614, 3539, 3315,
	2640, 3612, 3611, 1163, 1792, 1093, 1794, 929, 3678, 1166,
	1850, 979, 969, 1866, 1859, 2428, 2314, 986, 979, 983,
	1093, 1796, 1801, 1798, 1097, 985, 979, 3695, 1807, 984,
	2332, 1797, 1699, 3689, 982, 1791, 979, 3402, 3401, 979,
	2569, 3683, 2604, 3710, 1373, 2748, 2749, 979, 3700, 842,
	1093, 1854, 2220, 1094, 1163, 2248, 3701, 3702, 2771, 1673,
	1804, 1094, 1283, 1283, 2157, 944, 965, 2245, 1115, 954,
	3711, 2887, 3079, 3290, 1094, 3645, 2332, 3749, 3709, 2133,
	710, 2817, 3704, 2251, 1108, 2337, 2330, 2326, 2594, 1560,
	1652, 2605, 3759, 1149, 947, 3733, 3732, 3772, 1163, 2218,
	1664, 1283, 3781, 2751, 1804, 1804, 2143, 3086, 3747, 2907,
	2421, 3960, 3209, 1968, 1073, 3751, 1072, 3047, 3786, 979,
	979, 3756, 1071, 3944, 3765, 3941, 3435, 3762, 3817, 3818,
	3770, 3045, 3764, 1804, 1804, 3761, 1843, 979, 979, 2440,
	1642, 3780, 3053, 3798, 3794, 959, 1267, 2872, 3117, 3796,
	3802, 2262, 1340, 634, 979, 1807, 2336, 971, 3795, 3785,
	3821, 1641, 2543, 3793, 1804, 2843, 2844, 2845, 3801, 3792,
	3815, 3644, 3800, 2542, 3851, 1136, 1135, 1134, 2951, 979,
	4125, 3325, 979, 205, 2719, 1581, 1573, 1268, 202, 204,
	3829, 203, 3620, 3858, 3294, 3847, 2913, 4022, 3343, 3037,
	20, 979, 2336, 19, 18, 103, 39, 17, 117, 133,
	3864, 3830, 3831, 1110, 3839, 132, 131, 3739, 1801, 2332,
	130, 3846, 129, 135, 128, 127, 122, 126, 125, 124,
	123, 121, 120, 119, 3863, 118, 116, 115, 114, 979,
	979, 1120, 1093, 113, 3878, 112, 2405, 3833, 629, 979,
	111, 110, 979, 109, 1283, 108, 107, 106, 3893, 105,
	104, 3895, 625, 622, 1283, 1283, 55, 3871, 54, 3873,
	102, 235, 1271, 235, 235, 1259, 101, 235, 235, 1274,
	16, 1283, 37, 14, 59, 3886, 3887, 3885, 60, 3906,
	3890, 3877, 235, 13, 1295, 979, 979, 3897, 32, 81,
	3898, 93, 3902, 92, 3904, 3905, 3903, 1097, 1097, 33,
	90, 89, 31, 15, 87, 3785, 86, 30, 28, 1324,
	3933, 3909, 3911, 11, 3912, 3910, 3935, 9, 979, 979,
	8, 979, 1342, 34, 1274, 3920, 1760, 235, 235, 12,
	1259, 2451, 1801, 3943, 3946, 2336, 5, 166, 1095, 3958,
	235, 165, 168, 1795, 3965, 164, 3934, 167, 1383, 80,
	1804, 163, 162, 1095, 79, 26, 10, 3948, 3952, 3919,
	235, 235, 235, 3962, 1259, 235, 1274, 979, 979, 979,
	3978, 158, 3979, 3741, 3742, 3972, 629, 3782, 235, 235,
	3969, 3977, 3974, 1095, 3393, 1795, 74, 4006, 160, 159,
	979, 157, 3947, 156, 155, 3951, 3755, 3990, 3991, 3757,
	3758, 762, 3993, 4011, 3966, 75, 3992, 3967, 72, 154,
	153, 73, 152, 24, 6, 4009, 58, 4031, 7, 3668,
	2336, 2336, 3135, 96, 97, 35, 70, 69, 68, 23,
	57, 4033, 22, 4040, 195, 194, 193, 979, 192, 191,
	190, 185, 4032, 4045, 184, 4035, 189, 4037, 187, 186,
	1452, 1452, 188, 4041, 183, 197, 2606, 196, 199, 182,
	180, 176, 175, 4038, 4039, 4053, 4055, 4064, 4042, 235,
	4061, 4057, 4051, 4052, 1804, 179, 181, 178, 4065, 4063,
	177, 3943, 174, 198, 3946, 979, 235, 979, 4067, 4074,
	4071, 4082, 4085, 4079, 4081, 150, 4083, 4086, 4078, 151,
	65, 4084, 149, 148, 147, 146, 145, 1097, 4080, 144,
	3962, 143, 4073, 64, 21, 1093, 1093, 2, 1, 4098,
	0, 4100, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4109, 0, 4107, 0, 4112, 4106,
	0, 0, 979, 979, 0, 0, 0, 0, 4115, 4111,
	979, 0, 979, 979, 4121, 0, 3166, 3167, 0, 4128,
	0, 0, 4130, 3872, 0, 0, 0, 0, 0, 0,
	0, 4129, 0, 0, 0, 1095, 4133, 0, 0, 4136,
	0, 4138, 0, 0, 0, 4132, 4142, 0, 4141, 0,
	0, 0, 4144, 4147, 4140, 4146, 0, 0, 4150, 979,
	4151, 2031, 4145, 4153, 4139, 0, 0, 4157, 0, 0,
	0, 0, 0, 0, 0, 4154, 0, 4156, 2044, 0,
	0, 0, 0, 0, 0, 0, 4122, 4123, 2045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2054, 2055, 2056, 3229, 3230, 3231, 3232, 3233, 3234,
	3235, 3236, 3237, 3238, 3239, 3240, 3241, 3242, 3243, 3244,
	3245, 3246, 3247, 0, 3251, 0, 0, 0, 1801, 0,
	1795, 0, 0, 4152, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 0, 0, 0, 0, 1097, 0, 0,
	0, 0, 0, 0, 0, 1097, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 235, 0, 0, 1097, 235,
	0, 0, 0, 0, 1795, 1795, 0, 0, 0, 0,
	0, 0, 1295, 1259, 235, 1093, 235, 0, 1801, 0,
	0, 235, 1295, 598, 0, 0, 235, 1295, 0, 0,
	0, 0, 629, 1795, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4021, 0, 0, 0,
	0, 3553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 0, 1795, 0, 0, 0, 66, 0,
	43, 42, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 3549, 0, 0, 67, 3542, 137, 0, 0, 0,
	0, 2820, 2821, 0, 2838, 2839, 2840, 0, 71, 0,
	1804, 3540, 0, 0, 0, 66, 0, 3544, 61, 0,
	1738, 2873, 3174, 0, 0, 45, 0, 139, 0, 0,
	0, 67, 0, 0, 0, 0, 0, 3550, 0, 0,
	0, 44, 0, 77, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 2899, 0, 1801, 0, 0, 1095, 1095,
	0, 0, 0, 0, 0, 47, 62, 0, 2912, 0,
	1804, 2835, 0, 48, 0, 0, 0, 3543, 83, 0,
	77, 0, 140, 0, 0, 0, 2928, 0, 0, 0,
	46, 0, 98, 0, 0, 0, 0, 84, 95, 0,
	0, 0, 0, 0, 0, 1093, 0, 235, 0, 0,
	0, 0, 0, 1093, 0, 83, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1093, 0, 49, 98,
	0, 0, 0, 0, 84, 95, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 0, 0, 0, 2826, 0, 942, 235, 0,
	0, 0, 235, 0, 0, 0, 235, 0, 0, 0,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 235, 0, 235, 0, 235, 0,
	0, 0, 582, 0, 928, 0, 0, 1804, 0, 0,
	0, 0, 0, 0, 3545, 0, 2004, 0, 3546, 2841,
	0, 0, 0, 0, 2912, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2836, 0, 0,
	0, 0, 0, 3548, 0, 629, 0, 0, 0, 762,
	0, 1590, 1591, 0, 0, 0, 88, 3551, 1095, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 0, 0,
	0, 0, 0, 1621, 235, 0, 1259, 235, 0, 0,
	1593, 0, 0, 0, 1795, 0, 0, 0, 0, 63,
	629, 0, 2546, 88, 53, 169, 91, 235, 94, 0,
	0, 0, 51, 0, 0, 0, 141, 235, 235, 0,
	235, 1592, 235, 52, 235, 0, 235, 0, 0, 0,
	0, 1612, 206, 0, 0, 0, 0, 0, 0, 1609,
	56, 0, 169, 91, 134, 94, 2099, 0, 0, 2100,
	0, 2101, 1262, 0, 0, 1161, 0, 0, 138, 0,
	2837, 0, 0, 235, 0, 0, 0, 0, 0, 206,
	0, 0, 0, 0, 208, 0, 0, 757, 0, 3547,
	0, 134, 0, 0, 613, 3169, 0, 0, 629, 2623,
	0, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 0, 1452, 1615, 1616, 1617, 1618, 0,
	0, 208, 173, 0, 3554, 1598, 0, 0, 0, 0,
	207, 0, 0, 0, 0, 0, 3186, 0, 0, 0,
	200, 0, 0, 0, 0, 136, 0, 0, 201, 0,
	0, 0, 0, 3202, 0, 0, 0, 0, 1095, 173,
	0, 0, 0, 1620, 1622, 0, 1095, 207, 0, 0,
	172, 0, 0, 3, 0, 0, 0, 200, 0, 1095,
	0, 0, 0, 0, 0, 201, 0, 0, 1607, 1608,
	0, 2832, 2833, 2834, 0, 0, 0, 0, 2831, 2829,
	2830, 2822, 2823, 2824, 2825, 2827, 2828, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1590,
	1591, 0, 0, 0, 0, 0, 3692, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 0, 0, 0, 582, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 2820, 2821, 0, 2838, 2839, 2840, 582,
	0, 0, 3719, 3293, 0, 0, 235, 0, 582, 1592,
	0, 2820, 2821, 0, 2838, 2839, 2840, 0, 0, 1612,
	235, 0, 0, 0, 0, 0, 0, 1609, 0, 0,
	1619, 0, 0, 0, 0, 0, 0, 0, 942, 0,
	0, 0, 942, 0, 0, 0, 0, 0, 0, 0,
	1614, 2820, 2821, 0, 2838, 2839, 2840, 1247, 0, 0,
	1795, 1247, 0, 2835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3164, 0, 928, 0, 0, 0, 928,
	598, 2835, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1615, 1616, 1617, 1618, 0, 0, 0,
	0, 0, 0, 1598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 2835, 0, 0, 2465, 1297, 0, 1303, 0, 1309,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 1620, 1622, 0, 235, 3838, 0, 2826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 2826, 1607, 1608, 0, 0,
	0, 0, 235, 0, 0, 1610, 1606, 0, 1603, 1601,
	1602, 1594, 1595, 1596, 1597, 1599, 1600, 0, 0, 0,
	0, 0, 235, 2551, 0, 1613, 0, 0, 0, 0,
	1423, 2841, 0, 0, 0, 2826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1441, 1295, 1446,
	0, 235, 0, 0, 0, 0, 0, 0, 235, 1455,
	0, 1460, 0, 0, 2589, 0, 0, 2842, 0, 2836,
	0, 0, 0, 0, 2465, 0, 582, 1795, 0, 2609,
	0, 0, 0, 0, 0, 235, 0, 2836, 235, 2841,
	235, 0, 235, 0, 0, 0, 0, 1259, 0, 235,
	235, 0, 1274, 1274, 0, 0, 0, 0, 0, 0,
	0, 0, 2633, 762, 0, 2465, 2465, 0, 1619, 1516,
	0, 0, 1522, 0, 0, 0, 0, 2836, 0, 0,
	235, 0, 0, 1590, 1591, 0, 0, 0, 1614, 0,
	0, 0, 0, 0, 0, 0, 235, 1259, 235, 0,
	0, 1295, 0, 1295, 0, 1621, 1259, 0, 1259, 0,
	1259, 0, 1593, 0, 0, 0, 0, 0, 3030, 0,
	0, 0, 1452, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2837, 0, 0, 235, 235, 235, 235, 1259,
	235, 0, 235, 1592, 3057, 0, 0, 0, 0, 0,
	2837, 0, 0, 1612, 3523, 3063, 0, 0, 0, 0,
	0, 1609, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 0,
	0, 0, 0, 235, 0, 3533, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	2837, 0, 0, 1661, 0, 0, 0, 0, 0, 1674,
	0, 0, 0, 0, 0, 0, 0, 3163, 0, 3109,
	3110, 0, 0, 1610, 1606, 0, 1603, 1601, 1602, 1594,
	1595, 1596, 1597, 1599, 1600, 0, 0, 1615, 1616, 1617,
	1618, 1452, 0, 0, 0, 0, 0, 1598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2832, 2833, 2834, 0, 0, 0, 0,
	2831, 2829, 2830, 2822, 2823, 2824, 2825, 2827, 2828, 0,
	1295, 2832, 2833, 2834, 0, 1620, 1622, 0, 2831, 2829,
	2830, 2822, 2823, 2824, 2825, 2827, 2828, 0, 0, 0,
	0, 0, 0, 0, 0, 1247, 0, 0, 0, 0,
	1607, 1608, 1732, 1732, 1732, 0, 0, 0, 0, 0,
	0, 2832, 2833, 2834, 753, 0, 0, 0, 2831, 2829,
	2830, 2822, 2823, 2824, 2825, 2827, 2828, 0, 1161, 1613,
	0, 0, 0, 0, 0, 0, 0, 0, 942, 0,
	66, 0, 756, 755, 1247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 67, 0, 3684, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	71, 0, 0, 0, 0, 928, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3684,
	0, 0, 235, 0, 0, 77, 0, 582, 0, 0,
	0, 0, 582, 0, 2157, 582, 0, 0, 582, 582,
	0, 0, 1619, 0, 582, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	83, 0, 1614, 0, 1295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 98, 0, 0, 0, 0, 84,
	95, 0, 0, 1295, 0, 2157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2465, 2465, 235, 0, 1274, 0, 0, 2465,
	1247, 0, 2955, 0, 0, 0, 0, 0, 0, 0,
	2465, 2955, 0, 2465, 2955, 2955, 0, 0, 85, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 235, 1274,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1274, 235, 1259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2465, 0, 3015, 2465, 1274, 0,
	0, 2465, 2465, 1274, 0, 0, 0, 1610, 1606, 0,
	1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 3041,
	0, 0, 3043, 2465, 0, 0, 235, 0, 0, 0,
	235, 0, 1274, 0, 0, 0, 3368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2589,
	0, 0, 1259, 0, 235, 0, 0, 2465, 88, 582,
	0, 0, 0, 0, 0, 0, 2465, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 91, 0,
	94, 0, 235, 2589, 0, 0, 2589, 0, 0, 0,
	3428, 3429, 3430, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 757, 0, 0, 0, 134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3144, 0, 0,
	1259, 235, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 0, 0, 1247, 0, 0, 0,
	0, 0, 200, 0, 0, 0, 0, 0, 0, 0,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 2132,
	0, 2136, 3207, 0, 0, 0, 0, 0, 2150, 0,
	0, 0, 754, 0, 0, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173,
	2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193,
	0, 2199, 0, 2201, 2202, 2203, 2204, 0, 0, 0,
	0, 0, 0, 1247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1661, 0, 0, 0,
	2243, 0, 0, 0, 0, 0, 0, 235, 235, 0,
	0, 0, 1590, 1591, 0, 0, 2273, 2276, 2279, 2282,
	0, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 0, 582,
	582, 0, 0, 0, 1621, 0, 0, 0, 0, 0,
	0, 1593, 1247, 0, 0, 0, 0, 0, 0, 2328,
	0, 2339, 2341, 2346, 1452, 0, 0, 0, 0, 0,
	0, 0, 0, 1295, 0, 0, 0, 0, 1247, 0,
	0, 0, 1592, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1612, 0, 0, 0, 0, 0, 0, 0,
	1609, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 629, 0, 1590, 1591, 0, 0, 0,
	3665, 3666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2737, 1621, 0, 0,
	0, 0, 235, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1615, 1616, 1617, 1618,
	0, 0, 0, 1247, 0, 0, 1598, 0, 0, 0,
	0, 235, 0, 0, 0, 1592, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 1612, 0, 0, 0, 235,
	0, 0, 0, 1609, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 3706, 1620, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2465, 235, 1247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1607,
	1608, 0, 0, 2633, 2633, 0, 0, 0, 0, 762,
	762, 2465, 0, 0, 2589, 2589, 0, 0, 762, 2465,
	0, 0, 0, 0, 0, 0, 0, 0, 1613, 1615,
	1616, 1617, 1618, 0, 0, 0, 235, 0, 0, 1598,
	0, 0, 0, 0, 0, 3763, 1452, 0, 0, 2554,
	2555, 0, 2557, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1620, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1607, 1608, 0, 3488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1613, 0, 0, 0, 1590, 1591, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 0, 0, 1590, 1591,
	0, 0, 0, 0, 0, 0, 0, 1621, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 235, 0, 0,
	1621, 0, 0, 1295, 0, 235, 0, 1593, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	2683, 0, 0, 0, 0, 1592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1612, 0, 0, 1592, 2465,
	2465, 2465, 0, 1609, 0, 0, 0, 0, 0, 0,
	0, 0, 1295, 0, 1619, 0, 0, 0, 0, 0,
	2465, 0, 2955, 0, 0, 1295, 1295, 235, 1274, 0,
	1643, 1644, 0, 0, 1614, 0, 0, 0, 0, 1274,
	235, 1274, 235, 0, 0, 0, 0, 0, 0, 2730,
	0, 0, 2465, 0, 2465, 235, 1610, 1606, 0, 1603,
	1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600, 0, 1615,
	1616, 1617, 1618, 0, 0, 2465, 0, 0, 0, 1598,
	3622, 0, 0, 0, 0, 2731, 2732, 0, 235, 0,
	0, 2738, 1598, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2752, 2753, 0, 0, 0, 0, 2243, 1620, 1622, 0,
	0, 0, 0, 66, 0, 2760, 0, 0, 1295, 0,
	1620, 1622, 0, 0, 0, 0, 988, 0, 0, 67,
	0, 2774, 1607, 1608, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 0, 0, 0, 2786, 1610,
	1606, 0, 1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599,
	1600, 1613, 0, 0, 0, 0, 0, 0, 0, 236,
	236, 236, 0, 0, 1613, 0, 0, 0, 77, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 1247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 83, 0, 0, 0, 2465, 236, 2955,
	0, 0, 3713, 2346, 2346, 2346, 0, 98, 0, 0,
	235, 0, 84, 95, 0, 1247, 0, 0, 1732, 0,
	0, 0, 0, 0, 0, 0, 2877, 0, 0, 0,
	1247, 0, 0, 0, 1619, 0, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1247, 66,
	0, 0, 0, 0, 1614, 0, 975, 0, 0, 0,
	942, 85, 0, 0, 0, 67, 0, 1614, 0, 0,
	0, 0, 0, 0, 942, 3713, 0, 0, 0, 71,
	0, 0, 0, 2465, 1590, 1591, 0, 1623, 1624, 1625,
	1633, 1634, 1635, 3789, 0, 0, 0, 928, 0, 234,
	234, 234, 0, 0, 0, 1295, 1621, 0, 0, 0,
	0, 928, 0, 1593, 77, 0, 0, 0, 0, 0,
	1639, 0, 0, 0, 667, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 235, 0, 0, 0, 0, 2972,
	0, 0, 0, 0, 1592, 1247, 0, 0, 667, 83,
	0, 0, 0, 0, 1612, 0, 0, 3207, 0, 0,
	0, 2418, 1609, 98, 0, 0, 0, 0, 84, 95,
	0, 0, 0, 3713, 0, 0, 1247, 0, 0, 1610,
	1606, 88, 1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599,
	1600, 0, 0, 0, 0, 0, 1601, 1602, 1594, 1595,
	1596, 1597, 1599, 1600, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 0, 235,
	169, 91, 0, 94, 0, 0, 0, 0, 1615, 1616,
	1617, 1618, 0, 0, 0, 0, 3622, 0, 1598, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 235,
	0, 0, 0, 0, 0, 757, 0, 0, 2955, 134,
	0, 0, 0, 0, 0, 1096, 0, 1630, 0, 0,
	1640, 0, 0, 0, 0, 0, 1620, 1622, 0, 0,
	0, 0, 0, 0, 1295, 0, 1295, 0, 0, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1607, 1608, 0, 0, 0, 0, 0, 0, 0,
	0, 3929, 0, 136, 1247, 0, 0, 1247, 1295, 1628,
	0, 235, 0, 0, 0, 0, 0, 173, 0, 0,
	1613, 0, 0, 0, 0, 207, 0, 88, 235, 2465,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 169, 91, 0, 94,
	0, 3207, 0, 0, 2150, 0, 0, 0, 1247, 0,
	3161, 3162, 0, 0, 3165, 0, 0, 0, 3168, 0,
	0, 0, 0, 206, 0, 1247, 0, 3172, 0, 0,
	0, 757, 0, 0, 0, 134, 3179, 0, 0, 2877,
	0, 0, 0, 1619, 0, 0, 0, 0, 0, 0,
	0, 0, 2465, 0, 3191, 0, 0, 0, 0, 0,
	0, 0, 0, 1614, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 3713, 3214, 3215, 0, 3216, 3217, 3218,
	0, 0, 0, 0, 0, 0, 0, 0, 1631, 136,
	0, 0, 0, 0, 0, 3224, 0, 0, 0, 3226,
	0, 0, 0, 173, 1295, 0, 2465, 0, 0, 0,
	0, 207, 66, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 67, 201,
	3254, 3255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 740, 71, 0, 0, 0, 0, 0, 3266, 0,
	0, 1435, 0, 0, 0, 1247, 0, 0, 0, 0,
	0, 0, 0, 3275, 0, 724, 0, 0, 0, 236,
	1167, 236, 236, 0, 1167, 236, 236, 77, 1167, 0,
	1629, 0, 0, 0, 1604, 1605, 1611, 1632, 1610, 1606,
	236, 1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600,
	725, 0, 0, 2633, 0, 0, 0, 0, 0, 0,
	1167, 726, 83, 0, 0, 0, 2633, 0, 0, 0,
	0, 3309, 0, 0, 0, 0, 98, 0, 0, 727,
	0, 84, 95, 0, 1167, 236, 236, 3318, 3321, 0,
	0, 0, 0, 0, 0, 0, 745, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3342, 728, 0, 0, 236, 236,
	236, 0, 0, 236, 0, 1167, 0, 0, 0, 0,
	85, 1167, 0, 0, 0, 1167, 236, 236, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1167,
	0, 0, 0, 0, 0, 0, 0, 0, 730, 0,
	0, 731, 0, 0, 0, 0, 0, 0, 0, 234,
	653, 234, 234, 0, 0, 234, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	667, 0, 0, 0, 744, 0, 0, 0, 1167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 0, 0, 0, 0,
	3422, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 1247, 0, 0, 234, 234, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 234, 0,
	88, 0, 0, 0, 1247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 234,
	234, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 234, 0, 169,
	91, 0, 94, 0, 3466, 3467, 0, 0, 0, 733,
	3471, 3472, 0, 0, 0, 3475, 3476, 0, 0, 0,
	0, 0, 3480, 0, 0, 0, 206, 0, 1089, 0,
	751, 0, 734, 3484, 757, 0, 0, 0, 134, 0,
	684, 0, 0, 0, 0, 0, 0, 0, 0, 3489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 652, 685, 0, 0, 0, 208, 0,
	735, 230, 230, 578, 749, 750, 747, 0, 0, 0,
	0, 0, 742, 0, 1247, 736, 1247, 234, 0, 0,
	0, 0, 136, 0, 0, 0, 0, 0, 0, 686,
	0, 704, 0, 0, 234, 0, 173, 1247, 0, 0,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 737, 743, 200, 687, 0, 0, 688, 0,
	0, 738, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 739, 711, 0, 0, 0, 746,
	0, 689, 0, 1247, 1433, 0, 0, 0, 0, 0,
	1247, 0, 654, 3321, 709, 0, 0, 0, 0, 0,
	0, 0, 0, 741, 0, 0, 0, 236, 0, 964,
	100, 0, 0, 0, 0, 0, 0, 690, 1167, 0,
	0, 0, 236, 236, 236, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 236, 0, 0, 691, 0, 1247,
	692, 0, 0, 0, 0, 713, 1167, 0, 0, 653,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1247, 0, 0, 0, 100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 712, 0,
	1247, 0, 0, 0, 0, 0, 0, 695, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3679,
	3680, 3681, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 1096, 0, 0, 0, 234, 0, 0,
	0, 1247, 2150, 0, 0, 3690, 3691, 693, 0, 0,
	0, 903, 234, 1754, 234, 0, 1247, 0, 696, 667,
	0, 0, 923, 3699, 667, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 697, 0, 1167, 1167, 236, 0, 0, 0, 0,
	0, 0, 942, 1167, 0, 0, 0, 0, 1083, 0,
	0, 0, 0, 0, 0, 0, 0, 1247, 3321, 0,
	0, 0, 652, 0, 0, 0, 3738, 0, 0, 0,
	0, 0, 0, 683, 0, 705, 3745, 0, 0, 928,
	0, 0, 0, 0, 698, 0, 236, 3752, 0, 0,
	236, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 1247, 0, 0, 0, 0, 0, 703, 0, 0,
	0, 0, 236, 0, 236, 0, 236, 0, 0, 0,
	0, 699, 0, 0, 716, 0, 715, 0, 0, 0,
	700, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 701, 0, 0, 0, 0, 708, 0,
	0, 0, 236, 717, 0, 714, 0, 0, 0, 3321,
	3321, 654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1167, 0, 1167, 0, 1167, 667, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1167, 1167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1167, 236, 0, 0, 236, 0, 0, 0, 3850,
	0, 0, 3853, 0, 1167, 1167, 1167, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 234, 0, 0, 0,
	234, 3321, 0, 0, 234, 236, 236, 0, 236, 0,
	236, 0, 236, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 234, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3321,
	0, 236, 3321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1158, 942, 0, 0, 0, 2150, 1266, 0, 1167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 234, 0, 0, 0, 928,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 667, 234, 0, 234, 0,
	234, 0, 234, 0, 234, 0, 0, 0, 0, 0,
	1375, 0, 0, 0, 0, 0, 0, 3989, 3989, 3989,
	0, 0, 0, 0, 0, 0, 1167, 0, 0, 0,
	1398, 1398, 1398, 0, 0, 0, 0, 0, 0, 0,
	4010, 234, 0, 0, 0, 0, 0, 0, 1439, 1440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3989, 0, 0,
	0, 0, 0, 0, 0, 1167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1590, 1591, 0, 1623, 1624,
	1625, 1633, 1634, 1635, 0, 100, 0, 100, 236, 100,
	0, 1167, 0, 0, 0, 0, 1626, 1621, 0, 0,
	0, 0, 0, 0, 1593, 3321, 0, 3321, 0, 1543,
	0, 1639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1612, 0, 0, 0, 0,
	0, 0, 0, 1609, 0, 0, 1167, 0, 0, 0,
	100, 0, 3989, 4116, 923, 100, 100, 0, 0, 0,
	4120, 0, 0, 0, 0, 0, 0, 100, 0, 100,
	0, 0, 0, 0, 0, 0, 1167, 0, 0, 100,
	0, 100, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 1096, 0,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 1615,
	1616, 1617, 1618, 0, 1096, 236, 0, 0, 0, 1598,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	236, 1167, 0, 0, 0, 0, 0, 100, 0, 0,
	0, 0, 0, 0, 0, 1167, 0, 0, 1630, 0,
	236, 1640, 0, 0, 0, 0, 0, 1620, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1636, 0, 1637, 0, 0, 0, 236,
	0, 0, 1607, 1608, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1628, 0, 0, 0, 0, 1011, 0, 0, 0, 0,
	0, 1613, 0, 236, 0, 0, 236, 0, 236, 0,
	236, 0, 0, 0, 0, 903, 0, 236, 236, 0,
	0, 0, 1167, 1167, 0, 1167, 1638, 0, 0, 1770,
	234, 0, 0, 0, 0, 1655, 0, 1167, 0, 0,
	0, 0, 234, 1627, 1779, 0, 1266, 0, 236, 0,
	0, 0, 1660, 0, 0, 234, 1666, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 236, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	667, 0, 0, 0, 1619, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 236, 236, 236, 0, 236, 0,
	236, 0, 0, 0, 1614, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1631,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 234, 0, 0, 234, 0, 234, 0,
	234, 0, 0, 0, 0, 0, 0, 234, 234, 0,
	0, 0, 0, 0, 1752, 0, 1755, 0, 100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 1100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 0, 1604, 1605, 1611, 1632, 1610,
	1606, 0, 1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599,
	1600, 0, 0, 234, 234, 234, 234, 0, 234, 3494,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1966, 0,
	0, 0, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 1375, 0, 1992, 0, 1992, 0,
	0, 1590, 1591, 0, 1623, 1624, 1625, 1633, 1634, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1626, 1621, 0, 0, 0, 0, 0, 0,
	1593, 0, 0, 0, 1266, 0, 0, 1639, 0, 0,
	0, 0, 0, 0, 0, 0, 1167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1592, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1612, 0, 0, 0, 0, 0, 0, 1167, 1609,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1167, 1973, 0, 0, 2049, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1167, 0, 0, 0, 0, 0, 2066, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2076, 0,
	2078, 0, 2080, 0, 2082, 0, 2083, 0, 0, 0,
	0, 0, 236, 0, 0, 1615, 1616, 1617, 1618, 0,
	0, 0, 0, 0, 0, 1598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2104, 0, 236, 236, 0, 236, 0,
	0, 0, 0, 0, 1630, 236, 0, 1640, 0, 0,
	0, 0, 0, 1620, 1622, 1096, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 1167, 1636,
	1096, 1637, 0, 923, 0, 923, 0, 1167, 1607, 1608,
	0, 0, 1167, 0, 0, 0, 0, 0, 0, 0,
	0, 1167, 0, 0, 0, 1167, 1628, 0, 0, 1167,
	1754, 0, 0, 0, 0, 0, 236, 1613, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 1167, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1167, 0,
	0, 0, 1638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1167, 1167, 0, 234, 234, 0, 234, 1100,
	236, 0, 0, 1100, 0, 1754, 0, 1100, 0, 0,
	1619, 0, 0, 0, 1167, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1614, 0, 903, 0, 0, 903, 903, 0, 0, 1100,
	0, 0, 0, 0, 0, 0, 0, 1167, 0, 236,
	1167, 236, 0, 0, 0, 1631, 0, 0, 0, 0,
	0, 0, 0, 1100, 0, 0, 667, 0, 0, 0,
	2402, 0, 0, 0, 234, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	2217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1096, 0, 1100, 0, 923, 0, 0, 0,
	1100, 0, 0, 0, 1100, 1660, 0, 0, 0, 1660,
	0, 1167, 0, 234, 234, 0, 0, 0, 1100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1167, 0,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	234, 1604, 1605, 1611, 1632, 1610, 1606, 0, 1603, 1601,
	1602, 1594, 1595, 1596, 1597, 1599, 1600, 0, 0, 0,
	0, 3496, 0, 0, 0, 3495, 0, 1100, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1083, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 234, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1167, 0,
	0, 1973, 0, 0, 0, 0, 0, 0, 2580, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2611, 0, 0, 1398, 0,
	1398, 0, 1398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2670, 100, 2673, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1096, 1096, 0, 0, 1167,
	0, 0, 0, 0, 0, 0, 0, 100, 0, 236,
	100, 0, 100, 0, 0, 2695, 1266, 2697, 1266, 236,
	2700, 0, 0, 0, 0, 0, 0, 236, 0, 240,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	1167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1100, 100, 1100, 1398, 100, 0, 0, 0, 0, 0,
	0, 2728, 0, 0, 0, 0, 0, 1100, 0, 0,
	0, 0, 0, 1167, 1167, 1167, 0, 0, 0, 0,
	0, 0, 1808, 0, 0, 0, 0, 100, 0, 1167,
	0, 0, 0, 0, 0, 1100, 0, 659, 0, 0,
	0, 0, 0, 0, 236, 1167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1100, 0, 0, 0,
	0, 659, 0, 0, 0, 0, 0, 1167, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1096, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1167, 0, 1167,
	0, 0, 1100, 1100, 234, 0, 0, 0, 2217, 0,
	0, 0, 1100, 0, 0, 0, 0, 0, 0, 0,
	1167, 0, 0, 0, 0, 0, 0, 0, 0, 1660,
	0, 0, 0, 0, 0, 980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1167, 0, 236, 0,
	236, 0, 0, 1167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1167, 1167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2946, 0, 236, 0, 0, 0,
	0, 0, 1167, 236, 0, 0, 0, 1167, 0, 0,
	0, 0, 0, 0, 0, 1096, 0, 0, 0, 0,
	0, 0, 0, 1096, 0, 0, 0, 2986, 2988, 1100,
	2580, 1100, 0, 1100, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 1167, 1167, 0, 0, 0, 1083, 1100,
	1100, 0, 0, 1167, 0, 0, 0, 0, 0, 0,
	1100, 0, 0, 1083, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1100, 1100, 1100, 0, 0, 0, 0,
	0, 0, 0, 1167, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	234, 0, 0, 0, 0, 0, 3054, 0, 0, 0,
	3058, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1167, 0, 1167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1167,
	0, 0, 0, 0, 0, 0, 234, 0, 236, 0,
	0, 0, 0, 234, 0, 1266, 1266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 100, 100, 0, 0, 100, 0, 0, 0, 0,
	0, 0, 3113, 0, 0, 0, 1808, 1808, 1100, 0,
	1167, 0, 0, 0, 0, 0, 0, 0, 1167, 1167,
	0, 0, 0, 0, 0, 100, 100, 0, 0, 100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3147, 0, 1266, 1167, 0, 0, 1167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3159, 0, 0, 0,
	0, 236, 236, 0, 0, 1100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1083, 0, 0, 923, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 1164, 0, 0, 0, 1164, 0, 0,
	0, 1284, 0, 0, 0, 0, 0, 100, 100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1100, 0, 0,
	0, 0, 0, 1284, 1100, 0, 0, 0, 0, 0,
	0, 0, 0, 1100, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1284, 0, 0,
	1100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	1167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1167, 1167, 0, 0, 0, 0, 0, 0, 1284, 0,
	0, 0, 0, 0, 1284, 0, 0, 1167, 1284, 0,
	0, 234, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1284, 0, 0, 1100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 1100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 1284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 1808, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1100, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	100, 0, 0, 0, 0, 0, 0, 0, 0, 1165,
	0, 0, 0, 1165, 0, 0, 0, 1285, 1083, 1083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2580, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3392, 0, 0, 0, 0, 0, 0, 0, 1285,
	0, 0, 0, 0, 0, 0, 3404, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1100, 1100, 1285, 1100, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1100, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1285, 0, 0, 0, 0, 0,
	1285, 0, 0, 0, 1285, 0, 3451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1590, 1591, 0, 1623, 1624,
	1625, 1633, 1634, 1635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1626, 1621, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 1285, 0, 0,
	0, 1639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1164, 0, 0, 0, 1592, 0, 0, 0, 0,
	0, 0, 659, 0, 0, 1612, 0, 659, 1083, 0,
	0, 0, 0, 1609, 0, 0, 0, 0, 0, 1284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1615,
	1616, 1617, 1618, 0, 0, 0, 0, 0, 0, 1598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1630, 0,
	2580, 1640, 0, 0, 0, 0, 0, 1620, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1636, 0, 1637, 0, 0, 0, 0,
	0, 0, 1607, 1608, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2580, 0,
	1628, 0, 0, 0, 0, 3636, 1284, 1284, 0, 0,
	0, 1613, 100, 0, 1100, 1100, 1164, 0, 1083, 0,
	0, 0, 0, 0, 0, 0, 1083, 0, 0, 1100,
	0, 0, 0, 0, 0, 0, 1638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1100, 0, 0,
	0, 0, 0, 1627, 0, 0, 0, 0, 0, 1100,
	0, 0, 1100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1808, 1165, 0, 0,
	1100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1619, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1808, 0,
	0, 0, 0, 0, 1614, 0, 1165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 100, 1631,
	3720, 0, 0, 1284, 0, 1284, 0, 1284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 100, 0,
	0, 0, 0, 1284, 1284, 0, 0, 1100, 0, 0,
	0, 0, 0, 0, 1284, 0, 1100, 0, 0, 0,
	0, 1100, 0, 0, 0, 0, 0, 1284, 1284, 1284,
	1100, 0, 0, 0, 1100, 0, 0, 0, 1100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 659, 0,
	0, 0, 0, 0, 0, 0, 1100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1100, 0, 0,
	0, 1629, 0, 0, 0, 1604, 1605, 1611, 1632, 1610,
	1606, 1100, 1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599,
	1600, 0, 1285, 1285, 0, 2795, 0, 0, 0, 2796,
	0, 0, 1165, 3828, 1266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1100, 1100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1164, 1100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1100, 0, 0, 1100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3894,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1164,
	2217, 0, 0, 1808, 0, 0, 0, 0, 0, 1285,
	0, 1285, 0, 1285, 0, 0, 0, 0, 0, 0,
	1100, 0, 0, 0, 0, 0, 0, 0, 0, 1285,
	1285, 0, 0, 0, 0, 0, 0, 1100, 0, 0,
	1285, 0, 0, 0, 0, 0, 0, 1808, 1808, 0,
	0, 0, 0, 1285, 1285, 1285, 0, 0, 0, 0,
	0, 3937, 0, 0, 0, 0, 0, 0, 1164, 0,
	0, 0, 0, 0, 0, 0, 1808, 1808, 3959, 0,
	0, 0, 1590, 1591, 0, 1623, 1624, 1625, 1633, 1634,
	1635, 0, 0, 0, 1164, 3971, 0, 0, 0, 0,
	0, 0, 0, 1626, 1621, 0, 0, 1808, 0, 0,
	0, 1593, 0, 0, 0, 0, 100, 0, 1639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1100, 1100, 0, 0, 0, 0,
	0, 0, 1592, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1612, 0, 0, 0, 0, 0, 0, 1284,
	1609, 0, 0, 0, 0, 0, 0, 1100, 1165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1615, 1616, 1617, 1618,
	0, 0, 0, 0, 0, 0, 1598, 0, 0, 100,
	0, 0, 100, 0, 1164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1165, 0, 0, 1284, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 1640, 0,
	0, 0, 0, 0, 1620, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1100, 0,
	1636, 0, 1637, 0, 0, 0, 0, 0, 0, 1607,
	1608, 0, 0, 1808, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1628, 0, 0,
	0, 0, 0, 0, 1165, 0, 0, 0, 1613, 1100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1100, 1284, 1284, 0, 1284, 0,
	1165, 0, 0, 1638, 0, 0, 0, 0, 0, 0,
	1284, 0, 1100, 1100, 1100, 0, 0, 0, 0, 0,
	1627, 0, 0, 0, 0, 0, 0, 0, 1100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1285, 1100, 0, 0, 0,
	0, 1619, 0, 0, 0, 0, 0, 1808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 1165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1100, 0, 0, 0, 0, 0,
	0, 0, 1100, 0, 0, 0, 1100, 0, 1100, 0,
	0, 0, 0, 0, 0, 1100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1629, 1100,
	0, 0, 1604, 1605, 1611, 1632, 1610, 1606, 0, 1603,
	1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600, 0, 0,
	0, 0, 2239, 0, 0, 0, 2240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1285, 1285, 0, 1285, 1100, 0, 0, 0, 0,
	0, 0, 1100, 0, 0, 0, 1285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1100, 1100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1100, 0, 0, 0, 0, 1100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1100, 1100, 0, 0, 0, 0, 0, 0,
	0, 1164, 1100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1100, 0, 1164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1808, 0, 0, 1590, 1591, 0, 1623,
	1624, 1625, 1633, 1634, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 1100, 0, 1100, 0, 1626, 1621, 0,
	0, 0, 0, 0, 0, 1593, 0, 0, 1100, 0,
	0, 0, 1639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1808, 0, 0, 1592, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1612, 0, 0, 0,
	0, 1164, 0, 0, 1609, 0, 0, 0, 0, 1100,
	1284, 0, 0, 0, 0, 1284, 0, 1100, 1100, 0,
	0, 0, 0, 0, 1284, 0, 0, 0, 1284, 0,
	0, 0, 1164, 0, 0, 0, 0, 0, 0, 659,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1284, 0, 0, 1100, 0, 0, 1100, 0, 0, 0,
	0, 1284, 0, 0, 0, 0, 0, 0, 0, 0,
	1615, 1616, 1617, 1618, 0, 0, 0, 0, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	1808, 0, 1640, 0, 0, 1284, 1284, 0, 1620, 1622,
	0, 0, 0, 0, 0, 0, 0, 1165, 0, 0,
	0, 0, 0, 0, 1636, 0, 1637, 1284, 0, 0,
	0, 0, 1165, 1607, 1608, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1165, 1628, 0, 0, 0, 0, 0, 0, 0, 0,
	1164, 0, 1613, 1164, 0, 0, 0, 1590, 1591, 0,
	1623, 1624, 1625, 1633, 1634, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1638, 1626, 1621,
	0, 0, 0, 0, 0, 0, 1593, 0, 0, 1100,
	0, 0, 0, 1639, 1627, 0, 0, 0, 0, 1100,
	1100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1100, 1592, 0, 0,
	0, 0, 0, 0, 1164, 0, 0, 1612, 0, 0,
	0, 0, 0, 0, 0, 1609, 0, 1165, 0, 0,
	0, 1164, 0, 0, 0, 1619, 1285, 0, 0, 0,
	0, 1285, 0, 0, 0, 0, 0, 0, 0, 0,
	1285, 0, 0, 0, 1285, 1614, 0, 0, 1165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1285, 0, 0, 0,
	1631, 0, 0, 0, 0, 0, 0, 1285, 0, 0,
	0, 1615, 1616, 1617, 1618, 0, 0, 0, 0, 0,
	0, 1598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 0, 1640, 0, 0, 0, 0, 0, 1620,
	1622, 1285, 1285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1636, 0, 1637, 0, 0,
	0, 1164, 0, 1285, 1607, 1608, 0, 0, 0, 0,
	0, 0, 1629, 0, 0, 0, 1604, 1605, 1611, 1632,
	1610, 1606, 1628, 1603, 1601, 1602, 1594, 1595, 1596, 1597,
	1599, 1600, 0, 1613, 0, 0, 1165, 0, 0, 1165,
	3177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1284, 0, 0, 0, 1619, 1165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1614, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1284, 0, 0, 0, 0, 0, 0,
	0, 1631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1284, 1284, 1284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1164, 0, 0, 0, 0, 0, 0, 1165, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 1604, 1605, 1611,
	1632, 1610, 1606, 0, 1603, 1601, 1602, 1594, 1595, 1596,
	1597, 1599, 1600, 0, 0, 0, 0, 0, 0, 0,
	0, 2798, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1590, 1591, 0, 1623, 1624,
	1625, 1633, 1634, 1635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1626, 1621, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 0, 0,
	1164, 1639, 1164, 0, 0, 0, 0, 0, 1285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1164, 0, 1592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1612, 0, 0, 0, 0,
	0, 0, 0, 1609, 0, 0, 0, 0, 0, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1164,
	0, 0, 0, 0, 0, 0, 1164, 0, 0, 0,
	0, 0, 1285, 1285, 1285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1285, 1284,
	1284, 0, 0, 0, 0, 0, 0, 0, 0, 1615,
	1616, 1617, 1618, 0, 1165, 0, 0, 0, 0, 1598,
	0, 0, 0, 0, 0, 1164, 0, 0, 0, 0,
	1284, 0, 0, 0, 0, 0, 1165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1630, 0,
	0, 1640, 0, 0, 0, 0, 0, 1620, 1622, 0,
	0, 0, 0, 0, 0, 0, 1284, 1284, 0, 0,
	0, 0, 0, 1636, 0, 1637, 1164, 0, 0, 0,
	0, 0, 1607, 1608, 0, 0, 0, 0, 0, 0,
	1590, 1591, 0, 1623, 1624, 1625, 1633, 1634, 1635, 0,
	1628, 0, 0, 0, 0, 0, 1164, 0, 0, 0,
	0, 1613, 1621, 0, 0, 0, 0, 0, 0, 1593,
	0, 0, 0, 0, 0, 0, 1639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1164, 0, 1284,
	1592, 0, 0, 1627, 0, 0, 1165, 0, 1165, 0,
	1612, 0, 1164, 0, 0, 0, 0, 0, 1609, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1619, 0, 0, 0, 0, 0,
	0, 0, 0, 1164, 0, 0, 0, 0, 0, 0,
	0, 1284, 1284, 0, 1614, 1165, 0, 0, 0, 0,
	0, 0, 1165, 0, 1615, 1616, 1617, 1618, 0, 0,
	0, 0, 0, 0, 1598, 0, 0, 0, 0, 1631,
	0, 0, 0, 0, 0, 1285, 1285, 1164, 0, 0,
	1284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 0, 1640, 0, 0, 0,
	0, 1165, 1620, 1622, 0, 0, 1285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1636, 0,
	1637, 0, 0, 0, 0, 0, 0, 1607, 1608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1285, 1285, 0, 1628, 0, 0, 0, 0,
	0, 0, 1165, 0, 0, 0, 1613, 0, 0, 0,
	0, 1629, 0, 0, 0, 1604, 1605, 1611, 1632, 1610,
	1606, 0, 1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599,
	1600, 1638, 1165, 0, 0, 0, 0, 0, 0, 2797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1165, 0, 1285, 0, 0, 0, 0,
	0, 0, 0, 1284, 0, 0, 0, 0, 1165, 0,
	0, 0, 0, 1284, 1284, 0, 0, 0, 0, 1619,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1284, 0, 0, 0, 0, 0, 0, 0, 0, 1614,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1165,
	0, 0, 0, 0, 1631, 0, 0, 1285, 1285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1165, 0, 0, 1285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1629, 0, 0, 0,
	1604, 1605, 1611, 1632, 1610, 1606, 0, 1603, 1601, 1602,
	1594, 1595, 1596, 1597, 1599, 1600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1162, 0, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1285,
	1285, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	1168, 250, 251, 1169, 1170, 1171, 1285, 1172, 525, 1173,
	1174, 1175, 1176, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 1177, 261, 262,
	263, 264, 265, 1178, 1179, 0, 266, 530, 531, 532,
	1180, 267, 268, 533, 1181, 1248, 1182, 269, 270, 271,
	272, 273, 274, 275, 0, 1183, 277, 278, 279, 276,
	1184, 280, 0, 281, 282, 283, 1185, 284, 1041, 285,
	286, 1186, 1187, 1189, 1188, 1190, 1191, 1192, 287, 288,
	289, 290, 0, 291, 534, 535, 1193, 295, 292, 293,
	1194, 296, 294, 1195, 297, 298, 299, 1196, 1197, 300,
	301, 302, 1198, 303, 304, 1199, 305, 306, 307, 1200,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 1201, 241, 1202, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	1203, 325, 1204, 1205, 1042, 326, 327, 540, 541, 328,
	329, 1206, 330, 542, 1207, 543, 331, 1208, 332, 333,
	334, 335, 336, 544, 545, 546, 393, 1044, 337, 338,
	1209, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 1210, 1043, 345, 547, 548, 1211, 549, 1212,
	347, 348, 1045, 550, 1046, 349, 350, 351, 1047, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 1213,
	359, 361, 360, 1214, 362, 551, 1048, 363, 364, 1049,
	1215, 365, 366, 367, 1216, 1217, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 1050, 384, 385, 386, 389, 390,
	388, 1051, 387, 1218, 243, 1052, 391, 1219, 552, 392,
	553, 394, 395, 1220, 0, 396, 0, 1221, 1222, 398,
	399, 400, 1223, 1224, 401, 402, 554, 1053, 403, 1054,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 1225, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 1226, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 1227, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 1228, 439, 440, 441, 1055, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 1229, 462, 463, 461, 464,
	465, 466, 1230, 467, 451, 452, 468, 469, 1056, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 1231, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 1232, 488, 489, 0, 487, 1233, 490, 491,
	492, 493, 494, 495, 315, 496, 1234, 497, 565, 566,
	567, 568, 1235, 504, 1236, 498, 499, 569, 500, 570,
	1237, 501, 502, 503, 0, 505, 506, 1238, 1239, 507,
	508, 509, 511, 512, 510, 513, 1240, 514, 1241, 0,
	515, 516, 517, 571, 572, 573, 1242, 519, 518, 574,
	1243, 1244, 1245, 1246, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1162, 0, 0, 0, 0, 0, 0,
	0, 2380, 0, 0, 0, 0, 0, 0, 0, 2381,
	244, 245, 246, 247, 248, 249, 1168, 250, 251, 1169,
	1170, 1171, 0, 1172, 525, 1173, 1174, 1175, 1176, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 1177, 261, 262, 263, 264, 265, 1178,
	1179, 0, 266, 530, 531, 532, 1180, 267, 268, 533,
	1181, 1248, 1182, 269, 270, 271, 272, 273, 274, 275,
	0, 1183, 277, 278, 279, 276, 1184, 280, 0, 281,
	282, 283, 1185, 284, 1041, 285, 286, 1186, 1187, 1189,
	1188, 1190, 1191, 1192, 287, 288, 289, 290, 0, 291,
	534, 535, 1193, 295, 292, 293, 1194, 296, 294, 1195,
	297, 298, 299, 1196, 1197, 300, 301, 302, 1198, 303,
	304, 1199, 305, 306, 307, 1200, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 1201, 241, 1202, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 1203, 325, 1204, 1205,
	1042, 326, 327, 540, 541, 328, 329, 1206, 330, 542,
	1207, 543, 331, 1208, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 1044, 337, 338, 1209, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 1210, 1043,
	345, 547, 548, 1211, 549, 1212, 347, 348, 1045, 550,
	1046, 349, 350, 351, 1047, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 1213, 359, 361, 360, 1214,
	362, 551, 1048, 363, 364, 1049, 1215, 365, 366, 367,
	1216, 1217, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	1050, 384, 385, 386, 389, 390, 388, 1051, 387, 1218,
	243, 1052, 391, 1219, 552, 392, 553, 394, 395, 1220,
	0, 396, 0, 1221, 1222, 398, 399, 400, 1223, 1224,
	401, 402, 554, 1053, 403, 1054, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 1225, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 1226, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 1227, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 1228, 439,
	440, 441, 1055, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 1229, 462, 463, 461, 464, 465, 466, 1230, 467,
	451, 452, 468, 469, 1056, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 1231, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 1232, 488,
	489, 0, 487, 1233, 490, 491, 492, 493, 494, 495,
	315, 496, 1234, 497, 565, 566, 567, 568, 1235, 504,
	1236, 498, 499, 569, 500, 570, 1237, 501, 502, 503,
	0, 505, 506, 1238, 1239, 507, 508, 509, 511, 512,
	510, 513, 1240, 514, 1241, 0, 515, 516, 517, 571,
	572, 573, 1242, 519, 518, 574, 1243, 1244, 1245, 1246,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1162, 0, 0,
	0, 0, 3185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3187, 244, 245, 246, 247, 248, 249,
	1168, 250, 251, 1169, 1170, 1171, 0, 1172, 525, 1173,
	1174, 1175, 1176, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 1177, 261, 262,
	263, 264, 265, 1178, 1179, 0, 266, 530, 531, 532,
	1180, 267, 268, 533, 1181, 1248, 1182, 269, 270, 271,
	272, 273, 274, 275, 0, 1183, 277, 278, 279, 276,
	1184, 280, 0, 281, 282, 283, 1185, 284, 1041, 285,
	286, 1186, 1187, 1189, 1188, 1190, 1191, 1192, 287, 288,
	289, 290, 0, 291, 534, 535, 1193, 295, 292, 293,
	1194, 296, 294, 1195, 297, 298, 299, 1196, 1197, 300,
	301, 302, 1198, 303, 304, 1199, 305, 306, 307, 1200,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 1201, 241, 1202, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	1203, 325, 1204, 1205, 1042, 326, 327, 540, 541, 328,
	329, 1206, 330, 542, 1207, 543, 331, 1208, 332, 333,
	334, 335, 336, 544, 545, 546, 393, 1044, 337, 338,
	1209, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 1210, 1043, 345, 547, 548, 1211, 549, 1212,
	347, 348, 1045, 550, 1046, 349, 350, 351, 1047, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 1213,
	359, 361, 360, 1214, 362, 551, 1048, 363, 364, 1049,
	1215, 365, 366, 367, 1216, 1217, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 1050, 384, 385, 386, 389, 390,
	388, 1051, 387, 1218, 243, 1052, 391, 1219, 552, 392,
	553, 394, 395, 1220, 0, 396, 0, 1221, 1222, 398,
	399, 400, 1223, 1224, 401, 402, 554, 1053, 403, 1054,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 1225, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 1226, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 1227, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 1228, 439, 440, 441, 1055, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 1229, 462, 463, 461, 464,
	465, 466, 1230, 467, 451, 452, 468, 469, 1056, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 1231, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 1232, 488, 489, 0, 487, 1233, 490, 491,
	492, 493, 494, 495, 315, 496, 1234, 497, 565, 566,
	567, 568, 1235, 504, 1236, 498, 499, 569, 500, 570,
	1237, 501, 502, 503, 0, 505, 506, 1238, 1239, 507,
	508, 509, 511, 512, 510, 513, 1240, 514, 1241, 0,
	515, 516, 517, 571, 572, 573, 1242, 519, 518, 574,
	1243, 1244, 1245, 1246, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 0, 0, 1162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3522, 244, 245, 246, 247, 248, 249, 1168, 250,
	251, 1169, 1170, 1171, 0, 1172, 525, 1173, 1174, 1175,
	1176, 252, 253, 255, 254, 256, 257, 258, 526, 527,
	0, 259, 528, 260, 529, 1177, 261, 262, 263, 264,
	265, 1178, 1179, 0, 266, 530, 531, 532, 1180, 267,
	268, 533, 1181, 1248, 1182, 269, 270, 271, 272, 273,
	274, 275, 0, 1183, 277, 278, 279, 276, 1184, 280,
	0, 281, 282, 283, 1185, 284, 1041, 285, 286, 1186,
	1187, 1189, 1188, 1190, 1191, 1192, 287, 288, 289, 290,
	0, 291, 534, 535, 1193, 295, 292, 293, 1194, 296,
	294, 1195, 297, 298, 299, 1196, 1197, 300, 301, 302,
	1198, 303, 304, 1199, 305, 306, 307, 1200, 308, 309,
	536, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 537, 538, 1201, 241, 1202, 0, 0, 0, 0,
	321, 322, 323, 539, 0, 0, 0, 324, 1203, 325,
	1204, 1205, 1042, 326, 327, 540, 541, 328, 329, 1206,
	330, 542, 1207, 543, 331, 1208, 332, 333, 334, 335,
	336, 544, 545, 546, 393, 1044, 337, 338, 1209, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	1210, 1043, 345, 547, 548, 1211, 549, 1212, 347, 348,
	1045, 550, 1046, 349, 350, 351, 1047, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 1213, 359, 361,
	360, 1214, 362, 551, 1048, 363, 364, 1049, 1215, 365,
	366, 367, 1216, 1217, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 1050, 384, 385, 386, 389, 390, 388, 1051,
	387, 1218, 243, 1052, 391, 1219, 552, 392, 553, 394,
	395, 1220, 0, 396, 0, 1221, 1222, 398, 399, 400,
	1223, 1224, 401, 402, 554, 1053, 403, 1054, 555, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	1225, 414, 415, 556, 557, 558, 416, 559, 417, 418,
	1226, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	560, 428, 427, 429, 1227, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	1228, 439, 440, 441, 1055, 442, 443, 444, 445, 561,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 1229, 462, 463, 461, 464, 465, 466,
	1230, 467, 451, 452, 468, 469, 1056, 470, 471, 472,
	473, 474, 475, 562, 0, 476, 1231, 477, 478, 479,
	480, 453, 481, 486, 563, 482, 483, 484, 485, 564,
	1232, 488, 489, 0, 487, 1233, 490, 491, 492, 493,
	494, 495, 315, 496, 1234, 497, 565, 566, 567, 568,
	1235, 504, 1236, 498, 499, 569, 500, 570, 1237, 501,
	502, 503, 0, 505, 506, 1238, 1239, 507, 508, 509,
	511, 512, 510, 513, 1240, 514, 1241, 0, 515, 516,
	517, 571, 572, 573, 1242, 519, 518, 574, 1243, 1244,
	1245, 1246, 520, 521, 575, 522, 523, 524, 1162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3685, 244, 245, 246, 247, 248,
	249, 1168, 250, 251, 1169, 1170, 1171, 0, 1172, 525,
	1173, 1174, 1175, 1176, 252, 253, 255, 254, 256, 257,
	258, 526, 527, 0, 259, 528, 260, 529, 1177, 261,
	262, 263, 264, 265, 1178, 1179, 0, 266, 530, 531,
	532, 1180, 267, 268, 533, 1181, 1248, 1182, 269, 270,
	271, 272, 273, 274, 275, 0, 1183, 277, 278, 279,
	276, 1184, 280, 0, 281, 282, 283, 1185, 284, 1041,
	285, 286, 1186, 1187, 1189, 1188, 1190, 1191, 1192, 287,
	288, 289, 290, 0, 291, 534, 535, 1193, 295, 292,
	293, 1194, 296, 294, 1195, 297, 298, 299, 1196, 1197,
	300, 301, 302, 1198, 303, 304, 1199, 305, 306, 307,
	1200, 308, 309, 536, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 537, 538, 1201, 241, 1202, 0,
	0, 0, 0, 321, 322, 323, 539, 0, 0, 0,
	324, 1203, 325, 1204, 1205, 1042, 326, 327, 540, 541,
	328, 329, 1206, 330, 542, 1207, 543, 331, 1208, 332,
	333, 334, 335, 336, 544, 545, 546, 393, 1044, 337,
	338, 1209, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 1210, 1043, 345, 547, 548, 1211, 549,
	1212, 347, 348, 1045, 550, 1046, 349, 350, 351, 1047,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	1213, 359, 361, 360, 1214, 362, 551, 1048, 363, 364,
	1049, 1215, 365, 366, 367, 1216, 1217, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 382, 1050, 384, 385, 386, 389,
	390, 388, 1051, 387, 1218, 243, 1052, 391, 1219, 552,
	392, 553, 394, 395, 1220, 0, 396, 0, 1221, 1222,
	398, 399, 400, 1223, 1224, 401, 402, 554, 1053, 403,
	1054, 555, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 1225, 414, 415, 556, 557, 558, 416,
	559, 417, 418, 1226, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 560, 428, 427, 429, 1227, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 1228, 439, 440, 441, 1055, 442, 443,
	444, 445, 561, 446, 0, 447, 448, 454, 455, 449,
	450, 456, 457, 458, 459, 460, 1229, 462, 463, 461,
	464, 465, 466, 1230, 467, 451, 452, 468, 469, 1056,
	470, 471, 472, 473, 474, 475, 562, 0, 476, 1231,
	477, 478, 479, 480, 453, 481, 486, 563, 482, 483,
	484, 485, 564, 1232, 488, 489, 0, 487, 1233, 490,
	491, 492, 493, 494, 495, 315, 496, 1234, 497, 565,
	566, 567, 568, 1235, 504, 1236, 498, 499, 569, 500,
	570, 1237, 501, 502, 503, 0, 505, 506, 1238, 1239,
	507, 508, 509, 511, 512, 510, 513, 1240, 514, 1241,
	0, 515, 516, 517, 571, 572, 573, 1242, 519, 518,
	574, 1243, 1244, 1245, 1246, 520, 521, 575, 522, 523,
	524, 1162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3581, 244, 245,
	246, 247, 248, 249, 1168, 250, 251, 1169, 1170, 1171,
	0, 1172, 525, 1173, 1174, 1175, 1176, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 1177, 261, 262, 263, 264, 265, 1178, 1179, 0,
	266, 530, 531, 532, 1180, 267, 268, 533, 1181, 1248,
	1182, 269, 270, 271, 272, 273, 274, 275, 0, 1183,
	277, 278, 279, 276, 1184, 280, 0, 281, 282, 283,
	1185, 284, 1041, 285, 286, 1186, 1187, 1189, 1188, 1190,
	1191, 1192, 287, 288, 289, 290, 0, 291, 534, 535,
	1193, 295, 292, 293, 1194, 296, 294, 1195, 297, 298,
	299, 1196, 1197, 300, 301, 302, 1198, 303, 304, 1199,
	305, 306, 307, 1200, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 1201,
	241, 1202, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 1203, 325, 1204, 1205, 1042, 326,
	327, 540, 541, 328, 329, 1206, 330, 542, 1207, 543,
	331, 1208, 332, 333, 334, 335, 336, 544, 545, 546,
	393, 1044, 337, 338, 1209, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 1210, 1043, 345, 547,
	548, 1211, 549, 1212, 347, 348, 1045, 550, 1046, 349,
	350, 351, 1047, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 1213, 359, 361, 360, 1214, 362, 551,
	1048, 363, 364, 1049, 1215, 365, 366, 367, 1216, 1217,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 1050, 384,
	385, 386, 389, 390, 388, 1051, 387, 1218, 243, 1052,
	391, 1219, 552, 392, 553, 394, 395, 1220, 0, 396,
	0, 1221, 1222, 398, 399, 400, 1223, 1224, 401, 402,
	554, 1053, 403, 1054, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 1225, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 1226, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	1227, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 1228, 439, 440, 441,
	1055, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 1229,
	462, 463, 461, 464, 465, 466, 1230, 467, 451, 452,
	468, 469, 1056, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 1231, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 1232, 488, 489, 0,
	487, 1233, 490, 491, 492, 493, 494, 495, 315, 496,
	1234, 497, 565, 566, 567, 568, 1235, 504, 1236, 498,
	499, 569, 500, 570, 1237, 501, 502, 503, 0, 505,
	506, 1238, 1239, 507, 508, 509, 511, 512, 510, 513,
	1240, 514, 1241, 0, 515, 516, 517, 571, 572, 573,
	1242, 519, 518, 574, 1243, 1244, 1245, 1246, 520, 521,
	575, 522, 523, 524, 1162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3452, 244, 245, 246, 247, 248, 249, 1168, 250, 251,
	1169, 1170, 1171, 0, 1172, 525, 1173, 1174, 1175, 1176,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 1177, 261, 262, 263, 264, 265,
	1178, 1179, 0, 266, 530, 531, 532, 1180, 267, 268,
	533, 1181, 1248, 1182, 269, 270, 271, 272, 273, 274,
	275, 0, 1183, 277, 278, 279, 276, 1184, 280, 0,
	281, 282, 283, 1185, 284, 1041, 285, 286, 1186, 1187,
	1189, 1188, 1190, 1191, 1192, 287, 288, 289, 290, 0,
	291, 534, 535, 1193, 295, 292, 293, 1194, 296, 294,
	1195, 297, 298, 299, 1196, 1197, 300, 301, 302, 1198,
	303, 304, 1199, 305, 306, 307, 1200, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 1201, 241, 1202, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 1203, 325, 1204,
	1205, 1042, 326, 327, 540, 541, 328, 329, 1206, 330,
	542, 1207, 543, 331, 1208, 332, 333, 334, 335, 336,
	544, 545, 546, 393, 1044, 337, 338, 1209, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 1210,
	1043, 345, 547, 548, 1211, 549, 1212, 347, 348, 1045,
	550, 1046, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 1213, 359, 361, 360,
	1214, 362, 551, 1048, 363, 364, 1049, 1215, 365, 366,
	367, 1216, 1217, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	1218, 243, 1052, 391, 1219, 552, 392, 553, 394, 395,
	1220, 0, 396, 0, 1221, 1222, 398, 399, 400, 1223,
	1224, 401, 402, 554, 1053, 403, 1054, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 1225,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 1226,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 1227, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 1228,
	439, 440, 441, 1055, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 1229, 462, 463, 461, 464, 465, 466, 1230,
	467, 451, 452, 468, 469, 1056, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 1231, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 1232,
	488, 489, 0, 487, 1233, 490, 491, 492, 493, 494,
	495, 315, 496, 1234, 497, 565, 566, 567, 568, 1235,
	504, 1236, 498, 499, 569, 500, 570, 1237, 501, 502,
	503, 0, 505, 506, 1238, 1239, 507, 508, 509, 511,
	512, 510, 513, 1240, 514, 1241, 0, 515, 516, 517,
	571, 572, 573, 1242, 519, 518, 574, 1243, 1244, 1245,
	1246, 520, 521, 575, 522, 523, 524, 1162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3203, 244, 245, 246, 247, 248, 249,
	1168, 250, 251, 1169, 1170, 1171, 0, 1172, 525, 1173,
	1174, 1175, 1176, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 1177, 261, 262,
	263, 264, 265, 1178, 1179, 0, 266, 530, 531, 532,
	1180, 267, 268, 533, 1181, 1248, 1182, 269, 270, 271,
	272, 273, 274, 275, 0, 1183, 277, 278, 279, 276,
	1184, 280, 0, 281, 282, 283, 1185, 284, 1041, 285,
	286, 1186, 1187, 1189, 1188, 1190, 1191, 1192, 287, 288,
	289, 290, 0, 291, 534, 535, 1193, 295, 292, 293,
	1194, 296, 294, 1195, 297, 298, 299, 1196, 1197, 300,
	301, 302, 1198, 303, 304, 1199, 305, 306, 307, 1200,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 1201, 241, 1202, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	1203, 325, 1204, 1205, 1042, 326, 327, 540, 541, 328,
	329, 1206, 330, 542, 1207, 543, 331, 1208, 332, 333,
	334, 335, 336, 544, 545, 546, 393, 1044, 337, 338,
	1209, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 1210, 1043, 345, 547, 548, 1211, 549, 1212,
	347, 348, 1045, 550, 1046, 349, 350, 351, 1047, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 1213,
	359, 361, 360, 1214, 362, 551, 1048, 363, 364, 1049,
	1215, 365, 366, 367, 1216, 1217, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 1050, 384, 385, 386, 389, 390,
	388, 1051, 387, 1218, 243, 1052, 391, 1219, 552, 392,
	553, 394, 395, 1220, 0, 396, 0, 1221, 1222, 398,
	399, 400, 1223, 1224, 401, 402, 554, 1053, 403, 1054,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 1225, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 1226, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 1227, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 1228, 439, 440, 441, 1055, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 1229, 462, 463, 461, 464,
	465, 466, 1230, 467, 451, 452, 468, 469, 1056, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 1231, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 1232, 488, 489, 0, 487, 1233, 490, 491,
	492, 493, 494, 495, 315, 496, 1234, 497, 565, 566,
	567, 568, 1235, 504, 1236, 498, 499, 569, 500, 570,
	1237, 501, 502, 503, 0, 505, 506, 1238, 1239, 507,
	508, 509, 511, 512, 510, 513, 1240, 514, 1241, 0,
	515, 516, 517, 571, 572, 573, 1242, 519, 518, 574,
	1243, 1244, 1245, 1246, 520, 521, 575, 522, 523, 524,
	1162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3039, 244, 245, 246,
	247, 248, 249, 1168, 250, 251, 1169, 1170, 1171, 0,
	1172, 525, 1173, 1174, 1175, 1176, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	1177, 261, 262, 263, 264, 265, 1178, 1179, 0, 266,
	530, 531, 532, 1180, 267, 268, 533, 1181, 1248, 1182,
	269, 270, 271, 272, 273, 274, 275, 0, 1183, 277,
	278, 279, 276, 1184, 280, 0, 281, 282, 283, 1185,
	284, 1041, 285, 286, 1186, 1187, 1189, 1188, 1190, 1191,
	1192, 287, 288, 289, 290, 0, 291, 534, 535, 1193,
	295, 292, 293, 1194, 296, 294, 1195, 297, 298, 299,
	1196, 1197, 300, 301, 302, 1198, 303, 304, 1199, 305,
	306, 307, 1200, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 1201, 241,
	1202, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 1203, 325, 1204, 1205, 1042, 326, 327,
	540, 541, 328, 329, 1206, 330, 542, 1207, 543, 331,
	1208, 332, 333, 334, 335, 336, 544, 545, 546, 393,
	1044, 337, 338, 1209, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 1210, 1043, 345, 547, 548,
	1211, 549, 1212, 347, 348, 1045, 550, 1046, 349, 350,
	351, 1047, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 1213, 359, 361, 360, 1214, 362, 551, 1048,
	363, 364, 1049, 1215, 365, 366, 367, 1216, 1217, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 1050, 384, 385,
	386, 389, 390, 388, 1051, 387, 1218, 243, 1052, 391,
	1219, 552, 392, 553, 394, 395, 1220, 0, 396, 0,
	1221, 1222, 398, 399, 400, 1223, 1224, 401, 402, 554,
	1053, 403, 1054, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 1225, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 1226, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 1227,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 1228, 439, 440, 441, 1055,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 1229, 462,
	463, 461, 464, 465, 466, 1230, 467, 451, 452, 468,
	469, 1056, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 1231, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 1232, 488, 489, 0, 487,
	1233, 490, 491, 492, 493, 494, 495, 315, 496, 1234,
	497, 565, 566, 567, 568, 1235, 504, 1236, 498, 499,
	569, 500, 570, 1237, 501, 502, 503, 0, 505, 506,
	1238, 1239, 507, 508, 509, 511, 512, 510, 513, 1240,
	514, 1241, 0, 515, 516, 517, 571, 572, 573, 1242,
	519, 518, 574, 1243, 1244, 1245, 1246, 520, 521, 575,
	522, 523, 524, 1162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2263,
	244, 245, 246, 247, 248, 249, 1168, 250, 251, 1169,
	1170, 1171, 0, 1172, 525, 1173, 1174, 1175, 1176, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 1177, 261, 262, 263, 264, 265, 1178,
	1179, 0, 266, 530, 531, 532, 1180, 267, 268, 533,
	1181, 1248, 1182, 269, 270, 271, 272, 273, 274, 275,
	0, 1183, 277, 278, 279, 276, 1184, 280, 0, 281,
	282, 283, 1185, 284, 1041, 285, 286, 1186, 1187, 1189,
	1188, 1190, 1191, 1192, 287, 288, 289, 290, 0, 291,
	534, 535, 1193, 295, 292, 293, 1194, 296, 294, 1195,
	297, 298, 299, 1196, 1197, 300, 301, 302, 1198, 303,
	304, 1199, 305, 306, 307, 1200, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 1201, 241, 1202, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 1203, 325, 1204, 1205,
	1042, 326, 327, 540, 541, 328, 329, 1206, 330, 542,
	1207, 543, 331, 1208, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 1044, 337, 338, 1209, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 1210, 1043,
	345, 547, 548, 1211, 549, 1212, 347, 348, 1045, 550,
	1046, 349, 350, 351, 1047, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 1213, 359, 361, 360, 1214,
	362, 551, 1048, 363, 364, 1049, 1215, 365, 366, 367,
	1216, 1217, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	1050, 384, 385, 386, 389, 390, 388, 1051, 387, 1218,
	243, 1052, 391, 1219, 552, 392, 553, 394, 395, 1220,
	0, 396, 0, 1221, 1222, 398, 399, 400, 1223, 1224,
	401, 402, 554, 1053, 403, 1054, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 1225, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 1226, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 1227, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 1228, 439,
	440, 441, 1055, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 1229, 462, 463, 461, 464, 465, 466, 1230, 467,
	451, 452, 468, 469, 1056, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 1231, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 1232, 488,
	489, 0, 487, 1233, 490, 491, 492, 493, 494, 495,
	315, 496, 1234, 497, 565, 566, 567, 568, 1235, 504,
	1236, 498, 499, 569, 500, 570, 1237, 501, 502, 503,
	0, 505, 506, 1238, 1239, 507, 508, 509, 511, 512,
	510, 513, 1240, 514, 1241, 0, 515, 516, 517, 571,
	572, 573, 1242, 519, 518, 574, 1243, 1244, 1245, 1246,
	520, 521, 575, 522, 523, 524, 1260, 0, 1162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1946, 0, 0, 244, 245, 246, 247, 248,
	249, 1168, 250, 251, 1169, 1170, 1171, 0, 1172, 525,
	1173, 1174, 1175, 1176, 252, 253, 255, 254, 256, 257,
	258, 526, 527, 0, 259, 528, 260, 529, 1177, 261,
	262, 263, 264, 265, 1178, 1179, 0, 266, 530, 531,
	532, 1180, 267, 268, 533, 1181, 1248, 1182, 269, 270,
	271, 272, 273, 274, 275, 0, 1183, 277, 278, 279,
	276, 1184, 280, 0, 281, 282, 283, 1185, 284, 1041,
	285, 286, 1186, 1187, 1189, 1188, 1190, 1191, 1192, 287,
	288, 289, 290, 0, 291, 534, 535, 1193, 295, 292,
	293, 1194, 296, 294, 1195, 297, 298, 299, 1196, 1197,
	300, 301, 302, 1198, 303, 304, 1199, 305, 306, 307,
	1200, 308, 309, 536, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 537, 538, 1201, 241, 1202, 0,
	0, 0, 0, 321, 322, 323, 539, 0, 0, 0,
	324, 1203, 325, 1204, 1205, 1042, 326, 327, 540, 541,
	328, 329, 1206, 330, 542, 1207, 543, 331, 1208, 332,
	333, 334, 335, 336, 544, 545, 546, 393, 1044, 337,
	338, 1209, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 1210, 1043, 345, 547, 548, 1211, 549,
	1212, 347, 348, 1045, 550, 1046, 349, 350, 351, 1047,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	1213, 359, 361, 360, 1214, 362, 551, 1048, 363, 364,
	1049, 1215, 365, 366, 367, 1216, 1217, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 382, 1050, 384, 385, 386, 389,
	390, 388, 1051, 387, 1218, 243, 1052, 391, 1219, 552,
	392, 553, 394, 395, 1220, 0, 396, 0, 1221, 1222,
	398, 399, 400, 1223, 1224, 401, 402, 554, 1053, 403,
	1054, 555, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 1225, 414, 415, 556, 557, 558, 416,
	559, 417, 418, 1226, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 560, 428, 427, 429, 1227, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 1228, 439, 440, 441, 1055, 442, 443,
	444, 445, 561, 446, 0, 447, 448, 454, 455, 449,
	450, 456, 457, 458, 459, 460, 1229, 462, 463, 461,
	464, 465, 466, 1230, 467, 451, 452, 468, 469, 1056,
	470, 471, 472, 473, 474, 475, 562, 0, 476, 1231,
	477, 478, 479, 480, 453, 481, 486, 563, 482, 483,
	484, 485, 564, 1232, 488, 489, 0, 487, 1233, 490,
	491, 492, 493, 494, 495, 315, 496, 1234, 497, 565,
	566, 567, 568, 1235, 504, 1236, 498, 499, 569, 500,
	570, 1237, 501, 502, 503, 0, 505, 506, 1238, 1239,
	507, 508, 509, 511, 512, 510, 513, 1240, 514, 1241,
	0, 515, 516, 517, 571, 572, 573, 1242, 519, 518,
	574, 1243, 1244, 1245, 1246, 520, 521, 575, 522, 523,
	524, 1159, 0, 1162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 1168, 250, 251, 1169,
	1170, 1171, 0, 1172, 525, 1173, 1174, 1175, 1176, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 1177, 261, 262, 263, 264, 265, 1178,
	1179, 0, 266, 530, 531, 532, 1180, 267, 268, 533,
	1181, 1248, 1182, 269, 270, 271, 272, 273, 274, 275,
	0, 1183, 277, 278, 279, 276, 1184, 280, 0, 281,
	282, 283, 1185, 284, 1041, 285, 286, 1186, 1187, 1189,
	1188, 1190, 1191, 1192, 287, 288, 289, 290, 0, 291,
	534, 535, 1193, 295, 292, 293, 1194, 296, 294, 1195,
	297, 298, 299, 1196, 1197, 300, 301, 302, 1198, 303,
	304, 1199, 305, 306, 307, 1200, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 1201, 241, 1202, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 1203, 325, 1204, 1205,
	1042, 326, 327, 540, 541, 328, 329, 1206, 330, 542,
	1207, 543, 331, 1208, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 1044, 337, 338, 1209, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 1210, 1043,
	345, 547, 548, 1211, 549, 1212, 347, 348, 1045, 550,
	1046, 349, 350, 351, 1047, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 1213, 359, 361, 360, 1214,
	362, 551, 1048, 363, 364, 1049, 1215, 365, 366, 367,
	1216, 1217, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	1050, 384, 385, 386, 389, 390, 388, 1051, 387, 1218,
	243, 1052, 391, 1219, 552, 392, 553, 394, 395, 1220,
	0, 396, 0, 1221, 1222, 398, 399, 400, 1223, 1224,
	401, 402, 554, 1053, 403, 1054, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 1225, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 1226, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 1227, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 1228, 439,
	440, 441, 1055, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 1229, 462, 463, 461, 464, 465, 466, 1230, 467,
	451, 452, 468, 469, 1056, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 1231, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 1232, 488,
	489, 0, 487, 1233, 490, 491, 492, 493, 494, 495,
	315, 496, 1234, 497, 565, 566, 567, 568, 1235, 504,
	1236, 498, 499, 569, 500, 570, 1237, 501, 502, 503,
	0, 505, 506, 1238, 1239, 507, 508, 509, 511, 512,
	510, 513, 1240, 514, 1241, 0, 515, 516, 517, 571,
	572, 573, 1242, 519, 518, 574, 1243, 1244, 1245, 1246,
	520, 521, 575, 522, 523, 524, 1162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 1168,
	250, 251, 1169, 1170, 1171, 0, 1172, 525, 1173, 1174,
	1175, 1176, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 1177, 261, 262, 263,
	264, 265, 1178, 1179, 0, 266, 530, 531, 532, 1180,
	267, 268, 533, 1181, 1248, 1182, 269, 270, 271, 272,
	273, 274, 275, 0, 1183, 277, 278, 279, 276, 1184,
	280, 0, 281, 282, 283, 1185, 284, 1041, 285, 286,
	1186, 1187, 1189, 1188, 1190, 1191, 1192, 287, 288, 289,
	290, 0, 291, 534, 535, 1193, 295, 292, 293, 1194,
	296, 294, 1195, 297, 298, 299, 1196, 1197, 300, 301,
	302, 1198, 303, 304, 1199, 305, 306, 307, 1200, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 1201, 241, 1202, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 1203,
	325, 1204, 1205, 1042, 326, 327, 540, 541, 328, 329,
	1206, 330, 542, 1207, 543, 331, 1208, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 1044, 337, 338, 1209,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 1210, 1043, 345, 547, 548, 1211, 549, 1212, 347,
	348, 1045, 550, 1046, 349, 350, 351, 1047, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 1213, 359,
	361, 360, 1214, 362, 551, 1048, 363, 364, 1049, 1215,
	365, 366, 367, 1216, 1217, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 1050, 384, 385, 386, 389, 390, 388,
	1051, 387, 1218, 243, 1052, 391, 1219, 552, 392, 553,
	394, 395, 1220, 0, 396, 0, 1221, 1222, 398, 399,
	400, 1223, 1224, 401, 402, 554, 1053, 403, 1054, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 1225, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 1226, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 1227, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 1228, 439, 440, 441, 1055, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 1229, 462, 463, 461, 464, 465,
	466, 1230, 467, 451, 452, 468, 469, 1056, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 1231, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 1232, 488, 489, 0, 487, 1233, 490, 491, 492,
	493, 494, 495, 315, 496, 1234, 497, 565, 566, 567,
	568, 1235, 504, 1236, 498, 499, 569, 500, 570, 1237,
	501, 502, 503, 0, 505, 506, 1238, 1239, 507, 508,
	509, 511, 512, 510, 513, 1240, 514, 1241, 0, 515,
	516, 517, 571, 572, 573, 1242, 519, 518, 574, 1243,
	1244, 1245, 1246, 520, 521, 575, 522, 523, 524, 2238,
	0, 978, 950, 951, 952, 948, 949, 961, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 2235, 250, 251, 0, 0, 0,
	0, 0, 1002, 966, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 1015, 0, 259, 1022, 260,
	1021, 0, 261, 262, 263, 264, 265, 968, 1001, 935,
	266, 1060, 1061, 532, 0, 267, 268, 1008, 0, 989,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1041, 285, 286, 992, 990, 991, 998, 994,
	993, 997, 287, 288, 289, 290, 1025, 291, 1019, 1018,
	939, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 2236, 0, 300, 1010, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 945, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 1032, 1033, 957,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 1017,
	0, 0, 0, 324, 0, 325, 0, 0, 1042, 326,
	327, 1030, 1031, 328, 329, 0, 330, 1039, 0, 967,
	331, 0, 332, 333, 334, 335, 336, 1003, 1004, 1007,
	393, 1044, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 0, 1043, 345, 1012,
	1013, 0, 973, 0, 347, 348, 1045, 1005, 1046, 349,
	350, 351, 1047, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 1040,
	1048, 363, 364, 1049, 0, 365, 366, 367, 996, 995,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 1050, 384,
	385, 386, 389, 390, 388, 1051, 387, 936, 243, 1052,
	391, 958, 1006, 392, 1020, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 1053, 403, 1054, 1034, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 1035, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 1016, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	1055, 442, 443, 444, 445, 946, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 999, 467, 451, 452,
	468, 469, 1056, 470, 471, 472, 473, 474, 475, 1014,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	1059, 482, 483, 484, 485, 1036, 0, 488, 489, 934,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 1026, 1027, 1028, 1029, 0, 504, 0, 498,
	499, 1037, 500, 1038, 956, 501, 502, 503, 0, 505,
	506, 0, 940, 507, 508, 509, 511, 512, 510, 513,
	1000, 514, 0, 0, 515, 516, 517, 571, 1023, 1058,
	2234, 519, 518, 574, 0, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 937, 0, 0, 0, 0, 0,
	0, 933, 0, 0, 0, 0, 0, 0, 931, 932,
	2237, 0, 0, 0, 0, 0, 0, 962, 2233, 0,
	924, 960, 978, 950, 951, 952, 948, 949, 961, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 1002, 966, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 1015, 0, 259, 1022,
	260, 1021, 0, 261, 262, 263, 264, 265, 968, 1001,
	935, 266, 1060, 1061, 532, 0, 267, 268, 1008, 0,
	989, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1041, 285, 286, 992, 990, 991, 998,
	994, 993, 997, 287, 288, 289, 290, 1025, 291, 1019,
	1018, 939, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 1010, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 945, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 1032, 1033,
	957, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	1017, 0, 0, 0, 324, 0, 325, 0, 0, 1042,
	326, 327, 1030, 1031, 328, 329, 0, 330, 1039, 0,
	967, 331, 0, 332, 333, 334, 335, 336, 1003, 1004,
	1007, 393, 1044, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 1043, 345,
	1012, 1013, 0, 973, 0, 347, 348, 1045, 1005, 1046,
	349, 350, 351, 1047, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	1040, 1048, 363, 364, 1049, 0, 365, 366, 367, 996,
	995, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 1050,
	384, 385, 386, 389, 390, 388, 1051, 387, 936, 243,
	1052, 391, 958, 1006, 392, 1020, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 1053, 403, 1054, 1034, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 1035, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 1016, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 1055, 442, 443, 444, 445, 946, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	206, 462, 463, 461, 464, 465, 466, 999, 467, 451,
	452, 468, 469, 1056, 470, 471, 472, 473, 474, 475,
	1014, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 1059, 482, 483, 484, 485, 1036, 0, 488, 489,
	934, 487, 208, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 1026, 1027, 1028, 1029, 0, 504, 0,
	498, 499, 1037, 500, 1038, 956, 501, 502, 503, 0,
	505, 506, 0, 940, 507, 508, 509, 511, 512, 510,
	513, 1000, 514, 0, 0, 515, 516, 517, 1431, 1023,
	1058, 0, 519, 518, 574, 0, 0, 0, 200, 520,
	521, 575, 522, 523, 524, 937, 201, 0, 0, 0,
	0, 0, 933, 0, 0, 0, 0, 0, 0, 931,
	932, 978, 950, 951, 952, 948, 949, 961, 1665, 1663,
	0, 0, 960, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 1002, 966, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 1015, 0, 259, 1022, 260,
	1021, 0, 261, 262, 263, 264, 265, 968, 1001, 935,
	266, 1060, 1061, 532, 0, 267, 268, 1008, 0, 989,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1041, 285, 286, 992, 990, 991, 998, 994,
	993, 997, 287, 288, 289, 290, 1025, 291, 1019, 1018,
	939, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 1010, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 945, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 1032, 1033, 957,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 1017,
	0, 0, 0, 324, 0, 325, 0, 0, 1042, 326,
	327, 1030, 1031, 328, 329, 0, 330, 1039, 0, 967,
	331, 0, 332, 333, 334, 335, 336, 1003, 1004, 1007,
	393, 1044, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 0, 1043, 345, 1012,
	1013, 0, 973, 0, 347, 348, 1045, 1005, 1046, 349,
	350, 351, 1047, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 1040,
	1048, 363, 364, 1049, 0, 365, 366, 367, 996, 995,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 1050, 384,
	385, 386, 389, 390, 388, 1051, 387, 936, 243, 1052,
	391, 958, 1006, 392, 1020, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 1053, 403, 1054, 1034, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 1035, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 1016, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	1055, 442, 443, 444, 445, 946, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 206,
	462, 463, 461, 464, 465, 466, 999, 467, 451, 452,
	468, 469, 1056, 470, 471, 472, 473, 474, 475, 1014,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	1059, 482, 483, 484, 485, 1036, 0, 488, 489, 934,
	487, 208, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 1026, 1027, 1028, 1029, 0, 504, 0, 498,
	499, 1037, 500, 1038, 956, 501, 502, 503, 0, 505,
	506, 0, 940, 507, 508, 509, 511, 512, 510, 513,
	1000, 514, 0, 0, 515, 516, 517, 1431, 1023, 1058,
	0, 519, 518, 574, 0, 0, 0, 200, 520, 521,
	575, 522, 523, 524, 937, 201, 0, 0, 0, 0,
	0, 933, 0, 0, 0, 0, 0, 0, 931, 932,
	978, 950, 951, 952, 948, 949, 961, 1665, 2750, 0,
	0, 960, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 1002, 966, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 1015, 0, 259, 1022, 260, 1021,
	0, 261, 262, 263, 264, 265, 968, 1001, 935, 266,
	1060, 1061, 532, 0, 267, 268, 1008, 0, 989, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1041, 285, 286, 992, 990, 991, 998, 994, 993,
	997, 287, 288, 289, 290, 1025, 291, 1019, 1018, 939,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 1010, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 945, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 1032, 1033, 957, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 1017, 0,
	0, 0, 324, 0, 325, 0, 0, 1042, 326, 327,
	1030, 1031, 328, 329, 0, 330, 1039, 0, 967, 331,
	0, 332, 333, 334, 335, 336, 1003, 1004, 1007, 393,
	1044, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 1043, 345, 1012, 1013,
	0, 973, 0, 347, 348, 1045, 1005, 1046, 349, 350,
	351, 1047, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 1040, 1048,
	363, 364, 1049, 0, 365, 366, 367, 996, 995, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 1050, 384, 385,
	386, 389, 390, 388, 1051, 387, 936, 243, 1052, 391,
	958, 1006, 392, 1020, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	1053, 403, 1054, 1034, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	1035, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 1016, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 1055,
	442, 443, 444, 445, 946, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 206, 462,
	463, 461, 464, 465, 466, 999, 467, 451, 452, 468,
	469, 1056, 470, 471, 472, 473, 474, 475, 1014, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 1059,
	482, 483, 484, 485, 1036, 0, 488, 489, 934, 487,
	208, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 1026, 1027, 1028, 1029, 0, 504, 0, 498, 499,
	1037, 500, 1038, 956, 501, 502, 503, 0, 505, 506,
	0, 940, 507, 508, 509, 511, 512, 510, 513, 1000,
	514, 0, 0, 515, 516, 517, 1431, 1023, 1058, 0,
	519, 518, 574, 0, 0, 0, 200, 520, 521, 575,
	522, 523, 524, 937, 201, 0, 0, 0, 0, 0,
	933, 0, 0, 0, 0, 0, 0, 931, 932, 978,
	950, 951, 952, 948, 949, 961, 1665, 1663, 0, 0,
	960, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	1002, 966, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 1015, 0, 259, 1022, 260, 1021, 2342,
	261, 262, 263, 264, 265, 968, 1001, 935, 266, 1060,
	1061, 532, 0, 267, 268, 1008, 0, 989, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	1041, 285, 286, 992, 990, 991, 998, 994, 993, 997,
	287, 288, 289, 290, 1025, 291, 1019, 1018, 939, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 1010, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 945, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 1032, 1033, 957, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 1017, 0, 0,
	0, 324, 0, 325, 0, 2347, 1042, 326, 327, 1030,
	1031, 328, 329, 0, 330, 1039, 0, 967, 331, 0,
	332, 333, 334, 335, 336, 1003, 1004, 1007, 393, 1044,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 1043, 345, 1012, 1013, 0,
	973, 0, 347, 348, 1045, 1005, 1046, 349, 350, 351,
	1047, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 2343, 362, 1040, 1048, 363,
	364, 1049, 0, 365, 366, 367, 996, 995, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 1050, 384, 385, 386,
	389, 390, 388, 1051, 387, 936, 243, 1052, 391, 958,
	1006, 392, 1020, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 1053,
	403, 1054, 1034, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 1035,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 1016, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 1055, 442,
	443, 444, 445, 946, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 999, 467, 451, 452, 468, 469,
	1056, 470, 471, 472, 473, 474, 475, 1014, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 1059, 482,
	483, 484, 485, 1036, 0, 488, 489, 934, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	1026, 1027, 1028, 1029, 0, 504, 2344, 498, 499, 1037,
	500, 1038, 956, 501, 502, 503, 0, 505, 506, 0,
	940, 507, 508, 509, 511, 512, 510, 513, 1000, 514,
	0, 0, 515, 516, 517, 571, 1023, 1058, 0, 519,
	518, 574, 0, 0, 0, 0, 520, 521, 575, 522,
	523, 524, 937, 0, 0, 0, 0, 0, 0, 933,
	0, 0, 0, 0, 0, 0, 931, 932, 0, 0,
	0, 0, 0, 0, 0, 962, 0, 0, 2283, 960,
	978, 950, 951, 952, 948, 949, 961, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 1002, 966, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 1015, 0, 259, 1022, 260, 1021,
	0, 261, 262, 263, 264, 265, 968, 1001, 935, 266,
	1060, 1061, 532, 0, 267, 268, 1008, 0, 989, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1041, 285, 286, 992, 990, 991, 998, 994, 993,
	997, 287, 288, 289, 290, 1025, 291, 1019, 1018, 939,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 1010, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 945, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 1032, 1033, 957, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 1017, 0,
	0, 0, 324, 0, 325, 0, 0, 1042, 326, 327,
	1030, 1031, 328, 329, 0, 330, 1039, 0, 967, 331,
	0, 332, 333, 334, 335, 336, 1003, 1004, 1007, 393,
	1044, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 1043, 345, 1012, 1013,
	0, 973, 0, 347, 348, 1045, 1005, 1046, 349, 350,
	351, 1047, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 1040, 1048,
	363, 364, 1049, 0, 365, 366, 367, 996, 995, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 1050, 384, 385,
	386, 389, 390, 388, 1051, 387, 936, 243, 1052, 391,
	958, 1006, 392, 1020, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	1053, 403, 1054, 1034, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	1035, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 1016, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 1055,
	442, 443, 444, 445, 946, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 999, 467, 451, 452, 468,
	469, 1056, 470, 471, 472, 473, 474, 475, 1014, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 1059,
	482, 483, 484, 485, 1036, 0, 488, 489, 934, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 1026, 1027, 1028, 1029, 0, 504, 0, 498, 499,
	1037, 500, 1038, 956, 501, 502, 503, 0, 505, 506,
	0, 940, 507, 508, 509, 511, 512, 510, 513, 1000,
	514, 0, 0, 515, 516, 517, 571, 1023, 1058, 0,
	519, 518, 574, 0, 0, 0, 0, 520, 521, 575,
	522, 523, 524, 937, 0, 0, 0, 0, 0, 0,
	933, 0, 0, 0, 0, 0, 0, 931, 932, 0,
	0, 0, 0, 0, 0, 0, 962, 2281, 0, 2280,
	960, 978, 950, 951, 952, 948, 949, 961, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 1002, 966, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 1015, 0, 259, 1022, 260,
	1021, 0, 261, 262, 263, 264, 265, 968, 1001, 935,
	266, 1060, 1061, 532, 0, 267, 268, 1008, 0, 989,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1041, 285, 286, 992, 990, 991, 998, 994,
	993, 997, 287, 288, 289, 290, 1025, 291, 1019, 1018,
	939, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 1010, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 945, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 1032, 1033, 957,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 1017,
	0, 0, 0, 324, 0, 325, 0, 0, 1042, 326,
	327, 1030, 1031, 328, 329, 0, 330, 1039, 0, 967,
	331, 0, 332, 333, 334, 335, 336, 1003, 1004, 1007,
	393, 1044, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 0, 1043, 345, 1012,
	1013, 0, 973, 0, 347, 348, 1045, 1005, 1046, 349,
	350, 351, 1047, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 1040,
	1048, 363, 364, 1049, 0, 365, 366, 367, 996, 995,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 1050, 384,
	385, 386, 389, 390, 388, 1051, 387, 936, 243, 1052,
	391, 958, 1006, 392, 1020, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 1053, 403, 1054, 1034, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 1035, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 1016, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	1055, 442, 443, 444, 445, 946, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 999, 467, 451, 452,
	468, 469, 1056, 470, 471, 472, 473, 474, 475, 1014,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	1059, 482, 483, 484, 485, 1036, 0, 488, 489, 934,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 1026, 1027, 1028, 1029, 0, 504, 0, 498,
	499, 1037, 500, 1038, 956, 501, 502, 503, 0, 505,
	506, 0, 940, 507, 508, 509, 511, 512, 510, 513,
	1000, 514, 0, 0, 515, 516, 517, 571, 1023, 1058,
	0, 519, 518, 574, 0, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 937, 0, 0, 0, 0, 0,
	0, 933, 0, 0, 0, 0, 0, 0, 931, 932,
	0, 0, 0, 0, 0, 0, 0, 962, 2278, 0,
	2277, 960, 978, 950, 951, 952, 948, 949, 961, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 1002, 966, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 1015, 0, 259, 1022,
	260, 1021, 0, 261, 262, 263, 264, 265, 968, 1001,
	935, 266, 1060, 1061, 532, 0, 267, 268, 1008, 0,
	989, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1041, 285, 286, 992, 990, 991, 998,
	994, 993, 997, 287, 288, 289, 290, 1025, 291, 1019,
	1018, 939, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 1010, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 945, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 1032, 1033,
	957, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	1017, 0, 0, 0, 324, 0, 325, 0, 0, 1042,
	326, 327, 1030, 1031, 328, 329, 0, 330, 1039, 0,
	967, 331, 0, 332, 333, 334, 335, 336, 1003, 1004,
	1007, 393, 1044, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 1043, 345,
	1012, 1013, 0, 973, 0, 347, 348, 1045, 1005, 1046,
	349, 350, 351, 1047, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	1040, 1048, 363, 364, 1049, 0, 365, 366, 367, 996,
	995, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 1050,
	384, 385, 386, 389, 390, 388, 1051, 387, 936, 243,
	1052, 391, 958, 1006, 392, 1020, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 1053, 403, 1054, 1034, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 1035, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 1016, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 1055, 442, 443, 444, 445, 946, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 999, 467, 451,
	452, 468, 469, 1056, 470, 471, 472, 473, 474, 475,
	1014, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 1059, 482, 483, 484, 485, 1036, 0, 488, 489,
	934, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 1026, 1027, 1028, 1029, 0, 504, 0,
	498, 499, 1037, 500, 1038, 956, 501, 502, 503, 0,
	505, 506, 0, 940, 507, 508, 509, 511, 512, 510,
	513, 1000, 514, 0, 0, 515, 516, 517, 571, 1023,
	1058, 0, 519, 518, 574, 0, 0, 0, 0, 520,
	521, 575, 522, 523, 524, 937, 0, 0, 0, 0,
	0, 0, 933, 0, 0, 0, 0, 0, 0, 931,
	932, 0, 0, 0, 0, 0, 0, 0, 962, 2275,
	0, 2274, 960, 978, 950, 951, 952, 948, 949, 961,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 1002, 966, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 1015, 0, 259,
	1022, 260, 1021, 0, 261, 262, 263, 264, 265, 968,
	1001, 935, 266, 1060, 1061, 532, 0, 267, 268, 1008,
	0, 989, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 1041, 285, 286, 992, 990, 991,
	998, 994, 993, 997, 287, 288, 289, 290, 1025, 291,
	1019, 1018, 939, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 1010, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 945, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 1032,
	1033, 957, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 1017, 0, 0, 0, 324, 0, 325, 0, 0,
	1042, 326, 327, 1030, 1031, 328, 329, 0, 330, 1039,
	0, 967, 331, 0, 332, 333, 334, 335, 336, 1003,
	1004, 1007, 393, 1044, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 1043,
	345, 1012, 1013, 0, 973, 0, 347, 348, 1045, 1005,
	1046, 349, 350, 351, 1047, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 1040, 1048, 363, 364, 1049, 0, 365, 366, 367,
	996, 995, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	1050, 384, 385, 386, 389, 390, 388, 1051, 387, 936,
	243, 1052, 391, 958, 1006, 392, 1020, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 1053, 403, 1054, 1034, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 1035, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 1016, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 1055, 442, 443, 444, 445, 946, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 999, 467,
	451, 452, 468, 469, 1056, 470, 471, 472, 473, 474,
	475, 1014, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 1059, 482, 483, 484, 485, 1036, 0, 488,
	489, 934, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 1026, 1027, 1028, 1029, 0, 504,
	0, 498, 499, 1037, 500, 1038, 956, 501, 502, 503,
	0, 505, 506, 0, 940, 507, 508, 509, 511, 512,
	510, 513, 1000, 514, 0, 0, 515, 516, 517, 571,
	1023, 1058, 0, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 937, 0, 0, 0,
	0, 0, 0, 933, 0, 0, 0, 0, 0, 0,
	931, 932, 0, 0, 0, 0, 0, 0, 0, 962,
	2272, 0, 1518, 960, 978, 950, 951, 952, 948, 949,
	961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 1002, 966, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 1015, 0,
	259, 1022, 260, 1021, 0, 261, 262, 263, 264, 265,
	968, 1001, 935, 266, 1060, 1061, 532, 0, 267, 268,
	1008, 0, 989, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1041, 285, 286, 992, 990,
	991, 998, 994, 993, 997, 287, 288, 289, 290, 1025,
	291, 1019, 1018, 939, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1010, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 945,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1032, 1033, 957, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1017, 0, 0, 0, 324, 0, 325, 0,
	0, 1042, 326, 327, 1030, 1031, 328, 329, 0, 330,
	1039, 0, 967, 331, 0, 332, 333, 334, 335, 336,
	1003, 1004, 1007, 393, 1044, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1043, 345, 1012, 1013, 0, 973, 0, 347, 348, 1045,
	1005, 1046, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 1040, 1048, 363, 364, 1049, 0, 365, 366,
	367, 996, 995, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	936, 243, 1052, 391, 958, 1006, 392, 1020, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 1053, 403, 1054, 1034, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 1035, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 1016,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 1055, 442, 443, 444, 445, 946, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 999,
	467, 451, 452, 468, 469, 1056, 470, 471, 472, 473,
	474, 475, 1014, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 1059, 482, 483, 484, 485, 1036, 0,
	488, 489, 934, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 1026, 1027, 1028, 1029, 0,
	504, 0, 498, 499, 1037, 500, 1038, 956, 501, 502,
	503, 0, 505, 506, 0, 940, 507, 508, 509, 511,
	512, 510, 513, 1000, 514, 0, 0, 515, 516, 517,
	571, 1023, 1058, 0, 519, 518, 574, 1517, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 937, 0, 0,
	0, 0, 0, 0, 933, 0, 0, 0, 0, 0,
	0, 931, 932, 0, 0, 0, 0, 0, 0, 0,
	962, 0, 0, 927, 960, 978, 950, 951, 952, 948,
	949, 961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 1002, 966, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 1015,
	0, 259, 1022, 260, 1021, 0, 261, 262, 263, 264,
	265, 968, 1001, 935, 266, 1060, 1061, 532, 0, 267,
	268, 1008, 0, 989, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 1041, 285, 286, 992,
	990, 991, 998, 994, 993, 997, 287, 288, 289, 290,
	1025, 291, 1019, 1018, 939, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 1010, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	945, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 1032, 1033, 957, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 1017, 0, 0, 0, 324, 0, 325,
	0, 0, 1042, 326, 327, 1030, 1031, 328, 329, 0,
	330, 1039, 0, 967, 331, 0, 332, 333, 334, 335,
	336, 1003, 1004, 1007, 393, 1044, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	0, 1043, 345, 1012, 1013, 0, 973, 0, 347, 348,
	1045, 1005, 1046, 349, 350, 351, 1047, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 1040, 1048, 363, 364, 1049, 0, 365,
	366, 367, 996, 995, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 1050, 384, 385, 386, 389, 390, 388, 1051,
	387, 936, 243, 1052, 391, 958, 1006, 392, 1020, 394,
	395, 0, 0, 396, 0, 941, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 1053, 403, 1054, 1034, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 1035, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	1016, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 1055, 442, 443, 444, 445, 946,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 0, 462, 463, 461, 464, 465, 466,
	999, 467, 451, 452, 468, 469, 1056, 470, 471, 472,
	473, 474, 475, 1014, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 1059, 482, 483, 484, 485, 1036,
	0, 488, 489, 934, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 1026, 1027, 1028, 1029,
	0, 504, 0, 498, 499, 1037, 500, 1038, 956, 501,
	502, 503, 0, 505, 506, 0, 940, 507, 508, 509,
	511, 512, 510, 513, 1000, 514, 0, 0, 515, 516,
	517, 571, 1023, 1058, 0, 519, 518, 574, 0, 0,
	0, 0, 520, 521, 575, 522, 523, 524, 937, 0,
	0, 0, 0, 0, 0, 933, 0, 0, 0, 0,
	0, 0, 931, 932, 978, 950, 951, 952, 948, 949,
	961, 962, 0, 0, 0, 960, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 1002, 966, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 1015, 0,
	259, 1022, 260, 1021, 0, 261, 262, 263, 264, 265,
	968, 1001, 935, 266, 1060, 1061, 532, 0, 267, 268,
	1008, 0, 989, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 3949, 283, 0, 284, 1041, 285, 286, 992, 990,
	991, 998, 994, 993, 997, 287, 288, 289, 290, 1025,
	291, 1019, 1018, 939, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1010, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 945,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1032, 1033, 957, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1017, 0, 0, 0, 324, 0, 325, 0,
	0, 1042, 326, 327, 1030, 1031, 328, 329, 0, 330,
	1039, 0, 967, 331, 0, 332, 333, 334, 335, 336,
	1003, 1004, 1007, 393, 1044, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1043, 345, 1012, 1013, 0, 973, 0, 347, 348, 1045,
	1005, 1046, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 1040, 1048, 363, 364, 1049, 0, 365, 366,
	367, 996, 995, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	936, 243, 1052, 391, 958, 1006, 392, 1020, 394, 395,
	0, 0, 396, 0, 941, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 1053, 403, 1054, 1034, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 1035, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 1016,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 1055, 442, 443, 444, 445, 946, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 999,
	467, 451, 452, 468, 469, 1056, 470, 471, 472, 473,
	474, 475, 1014, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 1059, 482, 483, 484, 485, 1036, 0,
	488, 489, 934, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 1026, 1027, 1028, 1029, 0,
	504, 0, 498, 499, 1037, 500, 1038, 956, 501, 502,
	503, 0, 505, 506, 0, 940, 507, 508, 509, 511,
	512, 510, 513, 1000, 514, 0, 0, 515, 516, 517,
	571, 1023, 1058, 0, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 937, 0, 0,
	0, 0, 0, 0, 933, 0, 0, 0, 0, 0,
	0, 931, 932, 978, 950, 951, 952, 948, 949, 961,
	962, 0, 0, 0, 960, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 1002, 966, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 1015, 0, 259,
	1022, 260, 1021, 0, 261, 262, 263, 264, 265, 968,
	1001, 935, 266, 1060, 1061, 532, 0, 267, 268, 1008,
	0, 989, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 1041, 285, 286, 992, 990, 991,
	998, 994, 993, 997, 287, 288, 289, 290, 1025, 291,
	1019, 1018, 939, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 1010, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 945, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 1032,
	1033, 957, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 1017, 0, 0, 0, 324, 0, 325, 0, 0,
	1042, 326, 327, 1030, 1031, 328, 329, 0, 330, 1039,
	0, 967, 331, 0, 332, 333, 334, 335, 336, 1003,
	1004, 1007, 393, 1044, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 2152, 343, 344, 346, 0, 1043,
	345, 1012, 1013, 0, 973, 0, 347, 348, 1045, 1005,
	1046, 349, 350, 351, 1047, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 1040, 1048, 363, 364, 1049, 0, 365, 366, 367,
	996, 995, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	1050, 384, 385, 386, 389, 390, 388, 1051, 387, 936,
	243, 1052, 391, 958, 1006, 392, 1020, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 1053, 403, 1054, 1034, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 1035, 416, 559, 417, 418, 2151, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 1016, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 1055, 442, 443, 444, 445, 946, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 999, 467,
	451, 452, 468, 469, 1056, 470, 471, 472, 473, 474,
	475, 1014, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 1059, 482, 483, 484, 485, 1036, 0, 488,
	489, 934, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 1026, 1027, 1028, 1029, 0, 504,
	0, 498, 499, 1037, 500, 1038, 956, 501, 502, 503,
	0, 505, 506, 0, 940, 507, 508, 509, 511, 512,
	510, 513, 1000, 514, 0, 0, 515, 516, 517, 571,
	1023, 1058, 0, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 937, 0, 0, 0,
	0, 0, 0, 933, 0, 0, 0, 0, 0, 0,
	931, 932, 978, 950, 951, 952, 948, 949, 961, 962,
	0, 0, 0, 960, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 1002, 966, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 1015, 0, 259, 1022,
	260, 1021, 0, 261, 262, 263, 264, 265, 968, 1001,
	935, 266, 1060, 1061, 532, 0, 267, 268, 1008, 0,
	989, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 3748,
	283, 0, 284, 1041, 285, 286, 992, 990, 991, 998,
	994, 993, 997, 287, 288, 289, 290, 1025, 291, 1019,
	1018, 939, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 1010, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 945, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 1032, 1033,
	957, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	1017, 0, 0, 0, 324, 0, 325, 0, 0, 1042,
	326, 327, 1030, 1031, 328, 329, 0, 330, 1039, 0,
	967, 331, 0, 332, 333, 334, 335, 336, 1003, 1004,
	1007, 393, 1044, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 1043, 345,
	1012, 1013, 0, 973, 0, 347, 348, 1045, 1005, 1046,
	349, 350, 351, 1047, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	1040, 1048, 363, 364, 1049, 0, 365, 366, 367, 996,
	995, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 1050,
	384, 385, 386, 389, 390, 388, 1051, 387, 936, 243,
	1052, 391, 958, 1006, 392, 1020, 394, 395, 0, 0,
	396, 0, 941, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 1053, 403, 1054, 1034, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 1035, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 1016, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 1055, 442, 443, 444, 445, 946, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 999, 467, 451,
	452, 468, 469, 1056, 470, 471, 472, 473, 474, 475,
	1014, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 1059, 482, 483, 484, 485, 1036, 0, 488, 489,
	934, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 1026, 1027, 1028, 1029, 0, 504, 0,
	498, 499, 1037, 500, 1038, 956, 501, 502, 503, 0,
	505, 506, 0, 940, 507, 508, 509, 511, 512, 510,
	513, 1000, 514, 0, 0, 515, 516, 517, 571, 1023,
	1058, 0, 519, 518, 574, 0, 0, 0, 0, 520,
	521, 575, 522, 523, 524, 937, 0, 0, 0, 0,
	0, 0, 933, 0, 0, 0, 0, 0, 0, 931,
	932, 978, 950, 951, 952, 948, 949, 961, 962, 0,
	0, 0, 960, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 1002, 966, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 1015, 0, 259, 1022, 260,
	1021, 0, 261, 262, 263, 264, 265, 968, 1001, 935,
	266, 1060, 1061, 532, 0, 267, 268, 1008, 0, 989,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1041, 285, 286, 992, 990, 991, 998, 994,
	993, 997, 287, 288, 289, 290, 1025, 291, 1019, 1018,
	939, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 1010, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 945, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 1032, 1033, 957,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 1017,
	0, 0, 0, 324, 0, 325, 0, 0, 1042, 326,
	327, 1030, 1031, 328, 329, 0, 330, 1039, 0, 967,
	331, 0, 332, 333, 334, 335, 336, 1003, 1004, 1007,
	393, 1044, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 0, 1043, 345, 1012,
	1013, 0, 973, 0, 347, 348, 1045, 1005, 1046, 349,
	350, 351, 1047, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 1040,
	1048, 363, 364, 1049, 0, 365, 366, 367, 996, 995,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 1050, 384,
	385, 386, 389, 390, 388, 1051, 387, 936, 3416, 1052,
	391, 958, 1006, 392, 1020, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 1053, 403, 1054, 1034, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 1035, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 1016, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	1055, 442, 443, 444, 445, 946, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 999, 467, 451, 452,
	468, 469, 1056, 470, 471, 472, 473, 474, 475, 1014,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	1059, 482, 483, 484, 485, 1036, 0, 488, 489, 934,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 1026, 1027, 1028, 1029, 0, 504, 0, 498,
	499, 1037, 500, 1038, 956, 501, 502, 503, 0, 505,
	506, 0, 940, 507, 508, 509, 511, 512, 510, 513,
	1000, 514, 0, 0, 515, 516, 517, 571, 1023, 1058,
	0, 519, 518, 574, 0, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 937, 0, 0, 0, 0, 0,
	0, 933, 0, 0, 0, 0, 0, 0, 931, 932,
	1733, 0, 0, 0, 0, 0, 0, 962, 0, 0,
	0, 960, 978, 950, 951, 952, 948, 949, 961, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 1002, 966, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 1015, 0, 259, 1022,
	260, 1021, 0, 261, 262, 263, 264, 265, 968, 1001,
	935, 266, 1060, 1061, 532, 0, 267, 268, 1008, 0,
	989, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1041, 285, 286, 992, 990, 991, 998,
	994, 993, 997, 287, 288, 289, 290, 1025, 291, 1019,
	1018, 939, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 1010, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 945, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 1032, 1033,
	957, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	1017, 0, 0, 0, 324, 0, 325, 0, 0, 1042,
	326, 327, 1030, 1031, 328, 329, 0, 330, 1039, 0,
	967, 331, 0, 332, 333, 334, 335, 336, 1003, 1004,
	1007, 393, 1044, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 1043, 345,
	1012, 1013, 0, 973, 0, 347, 348, 1045, 1005, 1046,
	349, 350, 351, 1047, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	1040, 1048, 363, 364, 1049, 0, 365, 366, 367, 996,
	995, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 1050,
	384, 385, 386, 389, 390, 388, 1051, 387, 936, 243,
	1052, 391, 958, 1006, 392, 1020, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 1053, 403, 1054, 1034, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 1035, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 1016, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 1055, 442, 443, 444, 445, 946, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 999, 467, 451,
	452, 468, 469, 1056, 470, 471, 472, 473, 474, 475,
	1014, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 1059, 482, 483, 484, 485, 1036, 0, 488, 489,
	934, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 1026, 1027, 1028, 1029, 0, 504, 0,
	498, 499, 1037, 500, 1038, 956, 501, 502, 503, 0,
	505, 506, 0, 940, 507, 508, 509, 511, 512, 510,
	513, 1000, 514, 0, 0, 515, 516, 517, 571, 1023,
	1058, 3181, 519, 518, 574, 0, 0, 0, 0, 520,
	521, 575, 522, 523, 524, 937, 0, 0, 0, 0,
	0, 0, 933, 0, 0, 0, 0, 0, 0, 931,
	932, 978, 950, 951, 952, 948, 949, 961, 962, 0,
	0, 0, 960, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 1002, 966, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 1015, 0, 259, 1022, 260,
	1021, 0, 261, 262, 263, 264, 265, 968, 1001, 935,
	266, 1060, 1061, 532, 0, 267, 268, 1008, 0, 989,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1041, 285, 286, 992, 990, 991, 998, 994,
	993, 997, 287, 288, 289, 290, 1025, 291, 1019, 1018,
	939, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 1010, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 945, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 1032, 1033, 957,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 1017,
	0, 0, 0, 324, 0, 325, 0, 0, 1042, 326,
	327, 1030, 1031, 328, 329, 0, 330, 1039, 0, 967,
	331, 0, 332, 333, 334, 335, 336, 1003, 1004, 1007,
	393, 1044, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 0, 1043, 345, 1012,
	1013, 0, 973, 0, 347, 348, 1045, 1005, 1046, 349,
	350, 351, 1047, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 1040,
	1048, 363, 364, 1049, 0, 365, 366, 367, 996, 995,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 1050, 384,
	385, 386, 389, 390, 388, 1051, 387, 936, 243, 1052,
	391, 958, 1006, 392, 1020, 394, 395, 0, 0, 396,
	0, 941, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 1053, 403, 1054, 1034, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 1035, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 1016, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	1055, 442, 443, 444, 445, 946, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 999, 467, 451, 452,
	468, 469, 1056, 470, 471, 472, 473, 474, 475, 1014,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	1059, 482, 483, 484, 485, 1036, 0, 488, 489, 934,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 1026, 1027, 1028, 1029, 0, 504, 0, 498,
	499, 1037, 500, 1038, 956, 501, 502, 503, 0, 505,
	506, 0, 940, 507, 508, 509, 511, 512, 510, 513,
	1000, 514, 0, 0, 515, 516, 517, 571, 1023, 1058,
	0, 519, 518, 574, 0, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 937, 0, 0, 0, 0, 0,
	0, 933, 0, 0, 0, 0, 0, 0, 931, 932,
	978, 950, 951, 952, 948, 949, 961, 962, 0, 0,
	0, 960, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 1002, 966, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 1015, 0, 259, 1022, 260, 1021,
	0, 261, 262, 263, 264, 265, 968, 1001, 935, 266,
	1060, 1061, 532, 0, 267, 268, 1008, 0, 989, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1041, 285, 286, 992, 990, 991, 998, 994, 993,
	997, 287, 288, 289, 290, 1025, 291, 1019, 1018, 939,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 1010, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 945, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 1032, 1033, 957, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 1017, 0,
	0, 0, 324, 0, 325, 0, 0, 1042, 326, 327,
	1030, 1031, 328, 329, 0, 330, 1039, 0, 967, 331,
	0, 332, 333, 334, 335, 336, 1003, 1004, 1007, 393,
	1044, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 1043, 345, 1012, 1013,
	0, 973, 0, 347, 348, 1045, 1005, 1046, 349, 350,
	351, 1047, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 1040, 1048,
	363, 364, 1049, 0, 365, 366, 367, 996, 995, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 1050, 384, 385,
	386, 389, 390, 388, 1051, 387, 936, 243, 1052, 391,
	958, 1006, 392, 1020, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	1053, 403, 1054, 1034, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	1035, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 1016, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 1055,
	442, 443, 444, 445, 946, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 999, 467, 451, 452, 468,
	469, 1056, 470, 471, 472, 473, 474, 475, 1014, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 1059,
	482, 483, 484, 485, 1036, 0, 488, 489, 934, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 1026, 1027, 1028, 1029, 0, 504, 0, 498, 499,
	1037, 500, 1038, 956, 501, 502, 503, 0, 505, 506,
	0, 940, 507, 508, 509, 511, 512, 510, 513, 1000,
	514, 0, 0, 515, 516, 517, 571, 1023, 1058, 0,
	519, 518, 574, 0, 0, 0, 0, 520, 521, 575,
	522, 523, 524, 937, 0, 0, 0, 0, 0, 0,
	933, 0, 0, 0, 0, 0, 0, 931, 932, 1733,
	0, 0, 0, 0, 0, 0, 962, 0, 0, 0,
	960, 978, 950, 951, 952, 948, 949, 961, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 1002, 966, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 1015, 0, 259, 1022, 260,
	1021, 0, 261, 262, 263, 264, 265, 968, 1001, 935,
	266, 1060, 1061, 532, 0, 267, 268, 1008, 0, 989,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1041, 285, 286, 992, 990, 991, 998, 994,
	993, 997, 287, 288, 289, 290, 1025, 291, 1019, 1018,
	939, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 1010, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 945, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 1032, 1033, 957,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 1017,
	0, 0, 0, 324, 0, 325, 0, 2347, 1042, 326,
	327, 1030, 1031, 328, 329, 0, 330, 1039, 0, 967,
	331, 0, 332, 333, 334, 335, 336, 1003, 1004, 1007,
	393, 1044, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 0, 1043, 345, 1012,
	1013, 0, 973, 0, 347, 348, 1045, 1005, 1046, 349,
	350, 351, 1047, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 1040,
	1048, 363, 364, 1049, 0, 365, 366, 367, 996, 995,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 1050, 384,
	385, 386, 389, 390, 388, 1051, 387, 936, 243, 1052,
	391, 958, 1006, 392, 1020, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 1053, 403, 1054, 1034, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 1035, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 1016, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	1055, 442, 443, 444, 445, 946, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 999, 467, 451, 452,
	468, 469, 1056, 470, 471, 472, 473, 474, 475, 1014,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	1059, 482, 483, 484, 485, 1036, 0, 488, 489, 934,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 1026, 1027, 1028, 1029, 0, 504, 0, 498,
	499, 1037, 500, 1038, 956, 501, 502, 503, 0, 505,
	506, 0, 940, 507, 508, 509, 511, 512, 510, 513,
	1000, 514, 0, 0, 515, 516, 517, 571, 1023, 1058,
	0, 519, 518, 574, 0, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 937, 0, 0, 0, 0, 0,
	0, 933, 0, 0, 0, 0, 0, 0, 931, 932,
	978, 950, 951, 952, 948, 949, 961, 962, 0, 0,
	0, 960, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 1002, 966, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 1015, 0, 259, 1022, 260, 1021,
	0, 261, 262, 263, 264, 265, 968, 1001, 935, 266,
	1060, 1061, 532, 0, 267, 268, 1008, 0, 989, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1041, 285, 286, 992, 990, 991, 998, 994, 993,
	997, 287, 288, 289, 290, 1025, 291, 1019, 1018, 939,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 1010, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 945, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 1032, 1033, 957, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 1017, 0,
	0, 0, 324, 0, 325, 0, 0, 1042, 326, 327,
	1030, 1031, 328, 329, 0, 330, 1039, 0, 967, 331,
	0, 332, 333, 334, 335, 336, 1003, 1004, 1007, 393,
	1044, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 1043, 345, 1012, 1013,
	0, 973, 0, 347, 348, 1045, 1005, 1046, 349, 350,
	351, 1047, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 1040, 1048,
	363, 364, 1049, 0, 365, 366, 367, 996, 995, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 1050, 384, 385,
	386, 389, 390, 388, 1051, 387, 936, 243, 1052, 391,
	958, 1006, 392, 1020, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	1053, 403, 1054, 1034, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	1035, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 1016, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 1055,
	442, 443, 444, 445, 946, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 999, 467, 451, 452, 468,
	469, 1056, 470, 471, 472, 473, 474, 475, 1014, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 1059,
	482, 483, 484, 485, 1036, 0, 488, 489, 934, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 1026, 1027, 1028, 1029, 0, 504, 0, 498, 499,
	1037, 500, 1038, 956, 501, 502, 503, 0, 505, 506,
	0, 940, 507, 508, 509, 511, 512, 510, 513, 1000,
	514, 0, 0, 515, 516, 517, 571, 1023, 1058, 0,
	519, 518, 574, 0, 0, 0, 0, 520, 521, 575,
	522, 523, 524, 937, 0, 0, 0, 0, 0, 0,
	933, 0, 0, 0, 0, 0, 0, 931, 932, 0,
	0, 0, 0, 0, 0, 0, 962, 1663, 0, 2352,
	960, 978, 950, 951, 952, 948, 949, 961, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 1002, 966, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 1015, 0, 259, 1022, 260,
	1021, 0, 261, 262, 263, 264, 265, 968, 1001, 935,
	266, 1060, 1061, 532, 0, 267, 268, 1008, 0, 989,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1041, 285, 286, 992, 990, 991, 998, 994,
	993, 997, 287, 288, 289, 290, 1025, 291, 1019, 1018,
	939, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 1010, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 945, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 1032, 1033, 957,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 1017,
	0, 0, 0, 324, 0, 325, 0, 0, 1042, 326,
	327, 1030, 1031, 328, 329, 0, 330, 1039, 0, 967,
	331, 0, 332, 333, 334, 335, 336, 1003, 1004, 1007,
	393, 1044, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 0, 1043, 345, 1012,
	1013, 0, 973, 0, 347, 348, 1045, 1005, 1046, 349,
	350, 351, 1047, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 1040,
	1048, 363, 364, 1049, 0, 365, 366, 367, 996, 995,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 1050, 384,
	385, 386, 389, 390, 388, 1051, 387, 936, 243, 1052,
	391, 958, 1006, 392, 1020, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 1053, 403, 1054, 1034, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 1035, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 1016, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	1055, 442, 443, 444, 445, 946, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 999, 467, 451, 452,
	468, 469, 1056, 470, 471, 472, 473, 474, 475, 1014,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	1059, 482, 483, 484, 485, 1036, 0, 488, 489, 934,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 1026, 1027, 1028, 1029, 0, 504, 0, 498,
	499, 1037, 500, 1038, 956, 501, 502, 503, 0, 505,
	506, 0, 940, 507, 508, 509, 511, 512, 510, 513,
	1000, 514, 0, 0, 515, 516, 517, 571, 1023, 1058,
	0, 519, 518, 574, 0, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 937, 0, 0, 0, 0, 0,
	0, 933, 0, 0, 0, 0, 0, 0, 931, 932,
	0, 0, 0, 0, 0, 0, 0, 962, 0, 0,
	2350, 960, 978, 950, 951, 952, 948, 949, 961, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 1002, 966, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 1015, 0, 259, 1022,
	260, 1021, 0, 261, 262, 263, 264, 265, 968, 1001,
	935, 266, 1060, 1061, 532, 0, 267, 268, 1008, 0,
	989, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1041, 285, 286, 992, 990, 991, 998,
	994, 993, 997, 287, 288, 289, 290, 1025, 291, 1019,
	1018, 939, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 1010, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 945, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 1032, 1033,
	957, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	1017, 0, 0, 0, 324, 0, 325, 0, 0, 1042,
	326, 327, 1030, 1031, 328, 329, 0, 330, 1039, 0,
	967, 331, 0, 332, 333, 334, 335, 336, 1003, 1004,
	1007, 393, 1044, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 1043, 345,
	1012, 1013, 0, 973, 0, 347, 348, 1045, 1005, 1046,
	349, 350, 351, 1047, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	1040, 1048, 363, 364, 1049, 0, 365, 366, 367, 996,
	995, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 1050,
	384, 385, 386, 389, 390, 388, 1051, 387, 936, 243,
	1052, 391, 958, 1006, 392, 1020, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 1053, 403, 1054, 1034, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 1035, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 1016, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 1055, 442, 443, 444, 445, 946, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 999, 467, 451,
	452, 468, 469, 1056, 470, 471, 472, 473, 474, 475,
	1014, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 1059, 482, 483, 484, 485, 1036, 0, 488, 489,
	934, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 1026, 1027, 1028, 1029, 0, 504, 0,
	498, 499, 1037, 500, 1038, 956, 501, 502, 503, 0,
	505, 506, 0, 940, 507, 508, 509, 511, 512, 510,
	513, 1000, 514, 0, 0, 515, 516, 517, 571, 1023,
	1058, 0, 519, 518, 574, 0, 0, 0, 0, 520,
	521, 575, 522, 523, 524, 937, 0, 0, 0, 0,
	0, 0, 933, 0, 0, 0, 0, 0, 0, 931,
	932, 0, 0, 0, 0, 0, 0, 0, 962, 0,
	0, 2338, 960, 978, 950, 951, 952, 948, 949, 961,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 1002, 966, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 1015, 0, 259,
	1022, 260, 1021, 0, 261, 262, 263, 264, 265, 968,
	1001, 935, 266, 1060, 1061, 532, 0, 267, 268, 1008,
	0, 989, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 1041, 285, 286, 992, 990, 991,
	998, 994, 993, 997, 287, 288, 289, 290, 1025, 291,
	1019, 1018, 939, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 1010, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 945, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 1032,
	1033, 957, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 1017, 0, 0, 0, 324, 0, 325, 0, 0,
	1042, 326, 327, 1030, 1031, 328, 329, 0, 330, 1039,
	0, 967, 331, 0, 332, 333, 334, 335, 336, 1003,
	1004, 1007, 393, 1044, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 1043,
	345, 1012, 1013, 0, 973, 0, 347, 348, 1045, 1005,
	1046, 349, 350, 351, 1047, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 1040, 1048, 363, 364, 1049, 0, 365, 366, 367,
	996, 995, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	1050, 384, 385, 386, 389, 390, 388, 1051, 387, 936,
	243, 1052, 391, 958, 1006, 392, 1020, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 1053, 403, 1054, 1034, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 1035, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 1016, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 1055, 442, 443, 444, 445, 946, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 999, 467,
	451, 452, 468, 469, 1056, 470, 471, 472, 473, 474,
	475, 1014, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 1059, 482, 483, 484, 485, 1036, 0, 488,
	489, 934, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 1026, 1027, 1028, 1029, 0, 504,
	0, 498, 499, 1037, 500, 1038, 956, 501, 502, 503,
	0, 505, 506, 0, 940, 507, 508, 509, 511, 512,
	510, 513, 1000, 514, 0, 0, 515, 516, 517, 571,
	1023, 1058, 0, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 937, 0, 0, 0,
	0, 0, 0, 933, 0, 0, 0, 0, 0, 0,
	931, 932, 0, 0, 0, 0, 0, 0, 0, 962,
	0, 0, 2327, 960, 978, 950, 951, 952, 948, 949,
	961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 1002, 966, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 1015, 0,
	259, 1022, 260, 1021, 0, 261, 262, 263, 264, 265,
	968, 1001, 935, 266, 1060, 1061, 532, 0, 267, 268,
	1008, 0, 989, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1041, 285, 286, 992, 990,
	991, 998, 994, 993, 997, 287, 288, 289, 290, 1025,
	291, 1019, 1018, 939, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1010, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 945,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1032, 1033, 957, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1017, 0, 0, 0, 324, 0, 325, 0,
	0, 1042, 326, 327, 1030, 1031, 328, 329, 0, 330,
	1039, 0, 967, 331, 0, 332, 333, 334, 335, 336,
	1003, 1004, 1007, 393, 1044, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1043, 345, 1012, 1013, 0, 973, 0, 347, 348, 1045,
	1005, 1046, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 1040, 1048, 363, 364, 1049, 0, 365, 366,
	367, 996, 995, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	936, 243, 1052, 391, 958, 1006, 392, 1020, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 1053, 403, 1054, 1034, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 1035, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 1016,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 1055, 442, 443, 444, 445, 946, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 999,
	467, 451, 452, 468, 469, 1056, 470, 471, 472, 473,
	474, 475, 1014, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 1059, 482, 483, 484, 485, 1036, 0,
	488, 489, 934, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 1026, 1027, 1028, 1029, 0,
	504, 0, 498, 499, 1037, 500, 1038, 956, 501, 502,
	503, 0, 505, 506, 0, 940, 507, 508, 509, 511,
	512, 510, 513, 1000, 514, 0, 0, 515, 516, 517,
	571, 1023, 1058, 0, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 937, 0, 0,
	0, 0, 0, 0, 933, 0, 0, 0, 0, 0,
	0, 931, 932, 0, 0, 0, 0, 0, 0, 0,
	962, 0, 0, 2325, 960, 2316, 2323, 951, 952, 948,
	949, 961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 1002, 966, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 1015,
	0, 259, 1022, 260, 1021, 0, 261, 262, 263, 264,
	265, 968, 1001, 935, 266, 1060, 1061, 532, 0, 267,
	268, 1008, 0, 989, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 1041, 285, 286, 992,
	990, 991, 998, 994, 993, 997, 287, 288, 289, 290,
	1025, 2319, 1019, 1018, 939, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 1010, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	945, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 1032, 1033, 957, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 1017, 0, 0, 0, 324, 0, 325,
	0, 0, 1042, 326, 327, 1030, 1031, 328, 329, 0,
	330, 1039, 0, 967, 331, 0, 332, 333, 334, 2320,
	336, 1003, 1004, 1007, 393, 1044, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	0, 1043, 345, 1012, 1013, 0, 973, 0, 347, 348,
	1045, 1005, 1046, 349, 350, 351, 1047, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 1040, 1048, 363, 364, 1049, 0, 365,
	366, 367, 996, 995, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 2321, 2318, 378, 379, 380, 383,
	0, 382, 1050, 384, 385, 386, 389, 390, 388, 1051,
	387, 936, 243, 1052, 391, 958, 1006, 392, 1020, 394,
	395, 0, 0, 396, 0, 0, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 1053, 403, 1054, 1034, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 1035, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	1016, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 1055, 442, 443, 444, 445, 946,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 2322, 0, 462, 463, 461, 464, 465, 466,
	999, 467, 451, 452, 468, 469, 1056, 470, 471, 472,
	473, 474, 475, 1014, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 1059, 482, 483, 484, 485, 1036,
	0, 488, 489, 934, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 1026, 1027, 1028, 1029,
	0, 504, 0, 498, 499, 1037, 500, 1038, 956, 501,
	502, 503, 0, 505, 506, 0, 940, 507, 508, 509,
	511, 512, 510, 513, 1000, 514, 0, 0, 515, 516,
	517, 571, 1023, 1058, 0, 519, 518, 574, 0, 0,
	0, 0, 520, 521, 575, 522, 2317, 524, 937, 0,
	0, 0, 0, 0, 0, 933, 0, 0, 0, 0,
	0, 0, 931, 932, 0, 0, 0, 0, 0, 0,
	0, 962, 0, 0, 2313, 960, 2316, 2323, 951, 952,
	948, 949, 961, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 1002, 966, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	1015, 0, 259, 1022, 260, 1021, 0, 261, 262, 263,
	264, 265, 968, 1001, 935, 266, 1060, 1061, 532, 0,
	267, 268, 1008, 0, 989, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1041, 285, 286,
	992, 990, 991, 998, 994, 993, 997, 287, 288, 289,
	290, 1025, 2319, 1019, 1018, 939, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 1010,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 945, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1032, 1033, 957, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 1017, 0, 0, 0, 324, 0,
	325, 0, 0, 1042, 326, 327, 1030, 1031, 328, 329,
	0, 330, 1039, 0, 967, 331, 0, 332, 333, 334,
	2320, 336, 1003, 1004, 1007, 393, 1044, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 1043, 345, 1012, 1013, 0, 973, 0, 347,
	348, 1045, 1005, 1046, 349, 350, 351, 1047, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 1040, 1048, 363, 364, 1049, 0,
	365, 366, 367, 996, 995, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 2321, 2318, 378, 379, 380,
	383, 0, 382, 1050, 384, 385, 386, 389, 390, 388,
	1051, 387, 936, 243, 1052, 391, 958, 1006, 392, 1020,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 1053, 403, 1054, 1034,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 1035, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 1016, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 1055, 442, 443, 444, 445,
	946, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 2322, 0, 462, 463, 461, 464, 465,
	466, 999, 467, 451, 452, 468, 469, 1056, 470, 471,
	472, 473, 474, 475, 1014, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 1059, 482, 483, 484, 485,
	1036, 0, 488, 489, 934, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 1026, 1027, 1028,
	1029, 0, 504, 0, 498, 499, 1037, 500, 1038, 956,
	501, 502, 503, 0, 505, 506, 0, 940, 507, 508,
	509, 511, 512, 510, 513, 1000, 514, 0, 0, 515,
	516, 517, 571, 1023, 1058, 0, 519, 518, 574, 0,
	0, 0, 0, 520, 521, 575, 522, 2317, 524, 937,
	0, 0, 0, 0, 0, 0, 933, 0, 0, 0,
	0, 0, 0, 931, 932, 978, 950, 951, 952, 948,
	949, 961, 962, 0, 0, 0, 960, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 1002, 966, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 1015,
	0, 259, 1022, 260, 1021, 0, 261, 262, 263, 264,
	265, 968, 1001, 935, 266, 1060, 1061, 532, 0, 267,
	268, 1008, 0, 989, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 1041, 285, 286, 992,
	990, 991, 998, 994, 993, 997, 287, 288, 289, 290,
	1025, 291, 1019, 1018, 939, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 1010, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	945, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 1032, 1033, 957, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 1017, 0, 0, 0, 324, 0, 325,
	0, 0, 1042, 326, 327, 1030, 1031, 328, 329, 0,
	330, 1039, 0, 967, 331, 0, 332, 333, 334, 335,
	336, 1003, 1004, 1007, 393, 1044, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	0, 1043, 345, 1012, 1013, 0, 973, 0, 347, 348,
	1045, 1005, 1046, 349, 350, 351, 1047, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 1040, 1048, 363, 364, 1049, 0, 365,
	366, 367, 996, 995, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 1050, 384, 385, 386, 389, 390, 388, 1051,
	387, 936, 243, 1052, 391, 958, 1006, 392, 1020, 394,
	395, 0, 0, 396, 0, 0, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 1053, 403, 1054, 1034, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 1035, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	1016, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 1055, 442, 443, 444, 445, 946,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 0, 462, 463, 461, 464, 465, 466,
	999, 467, 451, 452, 468, 469, 1056, 470, 471, 472,
	473, 474, 475, 1014, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 1059, 482, 483, 484, 485, 1036,
	0, 488, 489, 934, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 1026, 1027, 1028, 1029,
	0, 504, 0, 498, 499, 1037, 500, 1038, 956, 501,
	502, 503, 0, 505, 506, 0, 940, 507, 508, 509,
	511, 512, 510, 513, 1000, 514, 0, 0, 515, 516,
	517, 571, 1023, 1058, 0, 519, 518, 574, 0, 0,
	0, 0, 520, 521, 575, 522, 523, 524, 937, 0,
	0, 0, 0, 0, 0, 933, 0, 0, 0, 0,
	0, 0, 931, 932, 0, 0, 0, 0, 0, 1671,
	0, 962, 0, 0, 0, 960, 978, 950, 951, 952,
	948, 949, 961, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 2131,
	250, 251, 0, 0, 0, 0, 0, 1002, 966, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	1015, 0, 259, 1022, 260, 1021, 0, 261, 262, 263,
	264, 265, 968, 1001, 935, 266, 1060, 1061, 532, 0,
	267, 268, 1008, 0, 989, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1041, 285, 286,
	992, 990, 991, 998, 994, 993, 997, 287, 288, 289,
	290, 1025, 291, 1019, 1018, 939, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 1010,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 945, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 1032, 1033, 957, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 1017, 0, 0, 0, 324, 0,
	325, 0, 0, 1042, 326, 327, 1030, 1031, 328, 329,
	0, 330, 1039, 0, 967, 331, 0, 332, 333, 334,
	335, 336, 1003, 1004, 1007, 393, 1044, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 1043, 345, 1012, 1013, 0, 973, 0, 347,
	348, 1045, 1005, 1046, 349, 350, 351, 1047, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 1040, 1048, 363, 364, 1049, 0,
	365, 366, 367, 996, 995, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 1050, 384, 385, 386, 389, 390, 388,
	1051, 387, 936, 243, 1052, 391, 958, 1006, 392, 1020,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 1053, 403, 1054, 1034,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 1035, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 1016, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 1055, 442, 443, 444, 445,
	946, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 999, 467, 451, 452, 468, 469, 1056, 470, 471,
	472, 473, 474, 475, 1014, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 1059, 482, 483, 484, 485,
	1036, 0, 488, 489, 934, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 1026, 1027, 1028,
	1029, 0, 504, 0, 498, 499, 1037, 500, 1038, 956,
	501, 502, 503, 0, 505, 506, 0, 940, 507, 508,
	509, 511, 512, 510, 513, 1000, 514, 0, 0, 515,
	516, 517, 571, 1023, 1058, 0, 519, 518, 574, 0,
	0, 0, 0, 520, 521, 575, 522, 523, 524, 937,
	0, 0, 0, 0, 0, 0, 933, 0, 0, 0,
	0, 0, 0, 931, 932, 0, 0, 0, 0, 0,
	0, 0, 962, 0, 0, 1523, 960, 978, 950, 951,
	952, 948, 949, 961, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 1002, 966,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 1015, 0, 259, 1022, 260, 1021, 0, 261, 262,
	263, 264, 265, 968, 1001, 935, 266, 1060, 1061, 532,
	0, 267, 268, 1008, 0, 989, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 1041, 285,
	286, 992, 990, 991, 998, 994, 993, 997, 287, 288,
	289, 290, 1025, 291, 1019, 1018, 939, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	1010, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 945, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 1032, 1033, 957, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 1017, 0, 0, 0, 324,
	0, 325, 0, 0, 1042, 326, 327, 1030, 1031, 328,
	329, 0, 330, 1039, 0, 967, 331, 0, 332, 333,
	334, 335, 336, 1003, 1004, 1007, 393, 1044, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 1043, 345, 1012, 1013, 0, 973, 0,
	347, 348, 1045, 1005, 1046, 349, 350, 351, 1047, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 1040, 1048, 363, 364, 1049,
	0, 365, 366, 367, 996, 995, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 1050, 384, 385, 386, 389, 390,
	388, 1051, 387, 936, 243, 1052, 391, 958, 1006, 392,
	1020, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 1053, 403, 1054,
	1034, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 1035, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 1016, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 1055, 442, 443, 444,
	445, 946, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 999, 467, 451, 452, 468, 469, 1056, 470,
	471, 472, 473, 474, 475, 1014, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 1059, 482, 483, 484,
	485, 1036, 0, 488, 489, 934, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 1026, 1027,
	1028, 1029, 0, 504, 0, 498, 499, 1037, 500, 1038,
	956, 501, 502, 503, 0, 505, 506, 0, 940, 507,
	508, 509, 511, 512, 510, 513, 1000, 514, 0, 0,
	515, 516, 517, 571, 1023, 1058, 0, 519, 518, 574,
	0, 0, 0, 0, 520, 521, 575, 522, 523, 524,
	937, 0, 0, 0, 0, 0, 0, 933, 0, 0,
	0, 0, 0, 0, 931, 932, 0, 0, 0, 0,
	0, 0, 0, 962, 0, 0, 1461, 960, 978, 950,
	951, 952, 948, 949, 961, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 1002,
	966, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 526, 1015, 0, 259, 1022, 260, 1021, 0, 261,
	262, 263, 264, 265, 968, 1001, 935, 266, 1060, 1061,
	532, 0, 267, 268, 1008, 0, 989, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 1041,
	285, 286, 992, 990, 991, 998, 994, 993, 997, 287,
	288, 289, 290, 1025, 291, 1019, 1018, 939, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 1010, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 945, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 1032, 1033, 957, 241, 0, 0,
	0, 0, 0, 321, 322, 323, 1017, 0, 0, 0,
	324, 0, 325, 0, 0, 1042, 326, 327, 1030, 1031,
	328, 329, 0, 330, 1039, 0, 967, 331, 0, 332,
	333, 334, 335, 336, 1003, 1004, 1007, 393, 1044, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 0, 1043, 345, 1012, 1013, 0, 973,
	0, 347, 348, 1045, 1005, 1046, 349, 350, 351, 1047,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	0, 359, 361, 360, 0, 362, 1040, 1048, 363, 364,
	1049, 0, 365, 366, 367, 996, 995, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 382, 1050, 384, 385, 386, 389,
	390, 388, 1051, 387, 936, 243, 1052, 391, 958, 1006,
	392, 1020, 394, 395, 0, 0, 396, 0, 0, 0,
	398, 399, 400, 0, 0, 401, 402, 554, 1053, 403,
	1054, 1034, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 415, 556, 557, 1035, 416,
	559, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 1016, 428, 427, 429, 0, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 0, 439, 440, 441, 1055, 442, 443,
	444, 445, 946, 446, 0, 447, 448, 454, 455, 449,
	450, 456, 457, 458, 459, 460, 0, 462, 463, 461,
	464, 465, 466, 999, 467, 451, 452, 468, 469, 1056,
	470, 471, 472, 473, 474, 475, 1014, 0, 476, 0,
	477, 478, 479, 480, 453, 481, 486, 1059, 482, 483,
	484, 485, 1036, 0, 488, 489, 934, 487, 0, 490,
	491, 492, 493, 494, 495, 315, 496, 0, 497, 1026,
	1027, 1028, 1029, 0, 504, 0, 498, 499, 1037, 500,
	1038, 956, 501, 502, 503, 0, 505, 506, 0, 940,
	507, 508, 509, 511, 512, 510, 513, 1000, 514, 0,
	0, 515, 516, 517, 571, 1023, 1058, 0, 519, 518,
	574, 0, 0, 0, 0, 520, 521, 575, 522, 523,
	524, 937, 0, 0, 0, 0, 0, 0, 933, 0,
	0, 0, 0, 0, 0, 931, 932, 0, 0, 0,
	0, 0, 0, 0, 962, 0, 0, 1456, 960, 978,
	950, 951, 952, 948, 949, 961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	1002, 966, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 1015, 0, 259, 1022, 260, 1021, 0,
	261, 262, 263, 264, 265, 968, 1001, 935, 266, 1060,
	1061, 532, 0, 267, 268, 1008, 0, 989, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	1041, 285, 286, 992, 990, 991, 998, 994, 993, 997,
	287, 288, 289, 290, 1025, 291, 1019, 1018, 939, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 1010, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 945, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 1032, 1033, 957, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 1017, 0, 0,
	0, 324, 0, 325, 0, 0, 1042, 326, 327, 1030,
	1031, 328, 329, 0, 330, 1039, 0, 967, 331, 0,
	332, 333, 334, 335, 336, 1003, 1004, 1007, 393, 1044,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 1043, 345, 1012, 1013, 0,
	973, 0, 347, 348, 1045, 1005, 1046, 349, 350, 351,
	1047, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 1040, 1048, 363,
	364, 1049, 0, 365, 366, 367, 996, 995, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 1050, 384, 385, 386,
	389, 390, 388, 1051, 387, 936, 243, 1052, 391, 958,
	1006, 392, 1020, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 1053,
	403, 1054, 1034, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 1035,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 1016, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 1055, 442,
	443, 444, 445, 946, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 999, 467, 451, 452, 468, 469,
	1056, 470, 471, 472, 473, 474, 475, 1014, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 1059, 482,
	483, 484, 485, 1036, 0, 488, 489, 934, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	1026, 1027, 1028, 1029, 0, 504, 0, 498, 499, 1037,
	500, 1038, 956, 501, 502, 503, 0, 505, 506, 0,
	940, 507, 508, 509, 511, 512, 510, 513, 1000, 514,
	0, 0, 515, 516, 517, 571, 1023, 1058, 0, 519,
	518, 574, 0, 0, 0, 0, 520, 521, 575, 522,
	523, 524, 937, 0, 0, 0, 0, 0, 0, 933,
	0, 0, 0, 0, 0, 0, 931, 932, 0, 0,
	0, 0, 0, 0, 0, 962, 0, 0, 1447, 960,
	978, 950, 951, 952, 948, 949, 961, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 1002, 966, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 1015, 0, 259, 1022, 260, 1021,
	0, 261, 262, 263, 264, 265, 968, 1001, 935, 266,
	1060, 1061, 532, 0, 267, 268, 1008, 0, 989, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1041, 285, 286, 992, 990, 991, 998, 994, 993,
	997, 287, 288, 289, 290, 1025, 291, 1019, 1018, 939,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 1010, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 945, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 1032, 1033, 957, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 1017, 0,
	0, 0, 324, 0, 325, 0, 0, 1042, 326, 327,
	1030, 1031, 328, 329, 0, 330, 1039, 0, 967, 331,
	0, 332, 333, 334, 335, 336, 1003, 1004, 1007, 393,
	1044, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 1043, 345, 1012, 1013,
	0, 973, 0, 347, 348, 1045, 1005, 1046, 349, 350,
	351, 1047, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 1040, 1048,
	363, 364, 1049, 0, 365, 366, 367, 996, 995, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 1050, 384, 385,
	386, 389, 390, 388, 1051, 387, 936, 243, 1052, 391,
	958, 1006, 392, 1020, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	1053, 403, 1054, 1034, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	1035, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 1016, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 1055,
	442, 443, 444, 445, 946, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 999, 467, 451, 452, 468,
	469, 1056, 470, 471, 472, 473, 474, 475, 1014, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 1059,
	482, 483, 484, 485, 1036, 0, 488, 489, 934, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 1026, 1027, 1028, 1029, 0, 504, 0, 498, 499,
	1037, 500, 1038, 956, 501, 502, 503, 0, 505, 506,
	0, 940, 507, 508, 509, 511, 512, 510, 513, 1000,
	514, 0, 0, 515, 516, 517, 571, 1023, 1058, 0,
	519, 518, 574, 0, 0, 0, 0, 520, 521, 575,
	522, 523, 524, 937, 0, 0, 0, 0, 0, 0,
	933, 0, 0, 0, 0, 0, 0, 931, 932, 0,
	0, 0, 0, 0, 0, 0, 962, 0, 0, 1442,
	960, 978, 950, 951, 952, 948, 949, 961, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 1002, 966, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 1015, 0, 259, 1022, 260,
	1021, 0, 261, 262, 263, 264, 265, 968, 1001, 935,
	266, 1060, 1061, 532, 0, 267, 268, 1008, 0, 989,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1041, 285, 286, 992, 990, 991, 998, 994,
	993, 997, 287, 288, 289, 290, 1025, 291, 1019, 1018,
	939, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 1010, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 945, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 1032, 1033, 957,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 1017,
	0, 0, 0, 324, 0, 325, 0, 0, 1042, 326,
	327, 1030, 1031, 328, 329, 0, 330, 1039, 0, 967,
	331, 0, 332, 333, 334, 335, 336, 1003, 1004, 1007,
	393, 1044, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 0, 1043, 345, 1012,
	1013, 0, 973, 0, 347, 348, 1045, 1005, 1046, 349,
	350, 351, 1047, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 1040,
	1048, 363, 364, 1049, 0, 365, 366, 367, 996, 995,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 1050, 384,
	385, 386, 389, 390, 388, 1051, 387, 936, 243, 1052,
	391, 958, 1006, 392, 1020, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 1053, 403, 1054, 1034, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 1035, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 1016, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	1055, 442, 443, 444, 445, 946, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 999, 467, 451, 452,
	468, 469, 1056, 470, 471, 472, 473, 474, 475, 1014,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	1059, 482, 483, 484, 485, 1036, 0, 488, 489, 934,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 1026, 1027, 1028, 1029, 0, 504, 0, 498,
	499, 1037, 500, 1038, 956, 501, 502, 503, 0, 505,
	506, 0, 940, 507, 508, 509, 511, 512, 510, 513,
	1000, 514, 0, 0, 515, 516, 517, 571, 1023, 1058,
	0, 519, 518, 574, 0, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 937, 0, 0, 0, 0, 0,
	0, 933, 0, 0, 0, 0, 0, 0, 931, 932,
	0, 0, 0, 0, 0, 0, 0, 962, 0, 0,
	1424, 960, 978, 950, 951, 952, 948, 949, 961, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 1002, 966, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 1015, 0, 259, 1022,
	260, 1021, 0, 261, 262, 263, 264, 265, 968, 1001,
	935, 266, 1060, 1061, 532, 0, 267, 268, 1008, 0,
	989, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1041, 285, 286, 992, 990, 991, 998,
	994, 993, 997, 287, 288, 289, 290, 1025, 291, 1019,
	1018, 939, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 1010, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 945, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 1032, 1033,
	957, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	1017, 0, 0, 0, 324, 0, 325, 0, 0, 1042,
	326, 327, 1030, 1031, 328, 329, 0, 330, 1039, 0,
	967, 331, 0, 332, 333, 334, 335, 336, 1003, 1004,
	1007, 393, 1044, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 1043, 345,
	1012, 1013, 0, 973, 0, 347, 348, 1045, 1005, 1046,
	349, 350, 351, 1047, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	1040, 1048, 363, 364, 1049, 0, 365, 366, 367, 996,
	995, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 1050,
	384, 385, 386, 389, 390, 388, 1051, 387, 936, 243,
	1052, 391, 958, 1006, 392, 1020, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 1053, 403, 1054, 1034, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 1035, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 1016, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 1055, 442, 443, 444, 445, 946, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 999, 467, 451,
	452, 468, 469, 1056, 470, 471, 472, 473, 474, 475,
	1014, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 1059, 482, 483, 484, 485, 1036, 0, 488, 489,
	934, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 1026, 1027, 1028, 1029, 0, 504, 0,
	498, 499, 1037, 500, 1038, 956, 501, 502, 503, 0,
	505, 506, 0, 940, 507, 508, 509, 511, 512, 510,
	513, 1000, 514, 0, 0, 515, 516, 517, 571, 1023,
	1058, 0, 519, 518, 574, 0, 0, 0, 0, 520,
	521, 575, 522, 523, 524, 937, 0, 0, 0, 0,
	0, 0, 933, 0, 0, 0, 0, 0, 0, 931,
	932, 0, 0, 0, 0, 0, 0, 0, 962, 0,
	0, 1311, 960, 978, 950, 951, 952, 948, 949, 961,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 1002, 966, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 1015, 0, 259,
	1022, 260, 1021, 0, 261, 262, 263, 264, 265, 968,
	1001, 935, 266, 1060, 1061, 532, 0, 267, 268, 1008,
	0, 989, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 1041, 285, 286, 992, 990, 991,
	998, 994, 993, 997, 287, 288, 289, 290, 1025, 291,
	1019, 1018, 939, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 1010, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 945, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 1032,
	1033, 957, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 1017, 0, 0, 0, 324, 0, 325, 0, 0,
	1042, 326, 327, 1030, 1031, 328, 329, 0, 330, 1039,
	0, 967, 331, 0, 332, 333, 334, 335, 336, 1310,
	1004, 1007, 393, 1044, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 1043,
	345, 1012, 1013, 0, 973, 0, 347, 348, 1045, 1005,
	1046, 349, 350, 351, 1047, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 1040, 1048, 363, 364, 1049, 0, 365, 366, 367,
	996, 995, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	1050, 384, 385, 386, 389, 390, 388, 1051, 387, 936,
	243, 1052, 391, 958, 1006, 392, 1020, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 1053, 403, 1054, 1034, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 1035, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 1016, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 1055, 442, 443, 444, 445, 946, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 999, 467,
	451, 452, 468, 469, 1056, 470, 471, 472, 473, 474,
	475, 1014, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 1059, 482, 483, 484, 485, 1036, 0, 488,
	489, 934, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 1026, 1027, 1028, 1029, 0, 504,
	0, 498, 499, 1037, 500, 1038, 956, 501, 502, 503,
	0, 505, 506, 0, 940, 507, 508, 509, 511, 512,
	510, 513, 1000, 514, 0, 0, 515, 516, 517, 571,
	1023, 1058, 0, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 937, 0, 0, 0,
	0, 0, 0, 933, 0, 0, 0, 0, 0, 0,
	931, 932, 0, 0, 0, 0, 0, 0, 0, 962,
	0, 0, 1305, 960, 978, 950, 951, 952, 948, 949,
	961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 1002, 966, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 1015, 0,
	259, 1022, 260, 1021, 0, 261, 262, 263, 264, 265,
	968, 1001, 935, 266, 1060, 1061, 532, 0, 267, 268,
	1008, 0, 989, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1041, 285, 286, 992, 990,
	991, 998, 994, 993, 997, 287, 288, 289, 290, 1025,
	291, 1019, 1018, 939, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1010, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 945,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1032, 1033, 957, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1017, 0, 0, 0, 324, 0, 325, 0,
	0, 1042, 326, 327, 1030, 1031, 328, 329, 0, 330,
	1039, 0, 967, 331, 0, 332, 333, 334, 335, 336,
	1304, 1004, 1007, 393, 1044, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1043, 345, 1012, 1013, 0, 973, 0, 347, 348, 1045,
	1005, 1046, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 1040, 1048, 363, 364, 1049, 0, 365, 366,
	367, 996, 995, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	936, 243, 1052, 391, 958, 1006, 392, 1020, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 1053, 403, 1054, 1034, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 1035, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 1016,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 1055, 442, 443, 444, 445, 946, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 999,
	467, 451, 452, 468, 469, 1056, 470, 471, 472, 473,
	474, 475, 1014, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 1059, 482, 483, 484, 485, 1036, 0,
	488, 489, 934, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 1026, 1027, 1028, 1029, 0,
	504, 0, 498, 499, 1037, 500, 1038, 956, 501, 502,
	503, 0, 505, 506, 0, 940, 507, 508, 509, 511,
	512, 510, 513, 1000, 514, 0, 0, 515, 516, 517,
	571, 1023, 1058, 0, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 937, 0, 0,
	0, 0, 0, 0, 933, 0, 0, 0, 0, 0,
	0, 931, 932, 0, 0, 0, 0, 0, 0, 0,
	962, 0, 0, 1298, 960, 978, 950, 951, 952, 948,
	949, 961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 1002, 966, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 1015,
	0, 259, 1022, 260, 1021, 0, 261, 262, 263, 264,
	265, 968, 1001, 935, 266, 1060, 1061, 532, 0, 267,
	268, 1008, 0, 989, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 1041, 285, 286, 992,
	990, 991, 998, 994, 993, 997, 287, 288, 289, 290,
	1025, 291, 1019, 1018, 939, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 1010, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	945, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 1032, 1033, 957, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 1017, 0, 0, 0, 324, 0, 325,
	0, 0, 1042, 326, 327, 1030, 1031, 328, 329, 0,
	330, 1039, 0, 967, 331, 0, 332, 333, 334, 335,
	336, 1003, 1004, 1007, 393, 1044, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	0, 1043, 345, 1012, 1013, 0, 973, 0, 347, 348,
	1045, 1005, 1046, 349, 350, 351, 1047, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 1040, 1048, 363, 364, 1049, 0, 365,
	366, 367, 996, 995, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 1050, 384, 385, 386, 389, 390, 388, 1051,
	387, 936, 243, 1052, 391, 958, 1006, 392, 1020, 394,
	395, 0, 0, 396, 0, 0, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 1053, 403, 1054, 1034, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 1035, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	1016, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 1055, 442, 443, 444, 445, 946,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 0, 462, 463, 461, 464, 465, 466,
	999, 467, 451, 452, 468, 469, 1056, 470, 471, 472,
	473, 474, 475, 1014, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 1059, 482, 483, 484, 485, 1036,
	0, 488, 489, 934, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 1026, 1027, 1028, 1029,
	0, 504, 0, 498, 499, 1037, 500, 1038, 956, 501,
	502, 503, 0, 505, 506, 0, 940, 507, 508, 509,
	511, 512, 510, 513, 1000, 514, 0, 0, 515, 516,
	517, 571, 1023, 1058, 0, 519, 518, 574, 0, 0,
	0, 0, 520, 521, 575, 522, 523, 524, 937, 0,
	0, 0, 0, 0, 0, 933, 0, 0, 0, 0,
	0, 0, 931, 932, 978, 950, 951, 952, 948, 949,
	961, 962, 0, 0, 0, 960, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 1002, 966, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 1015, 0,
	259, 1022, 260, 1021, 0, 261, 262, 263, 264, 265,
	968, 1001, 935, 266, 1060, 1061, 532, 0, 267, 268,
	1008, 0, 989, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1041, 285, 286, 992, 990,
	991, 998, 994, 993, 997, 287, 288, 289, 290, 1025,
	291, 1019, 1018, 939, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1010, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 945,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1032, 1033, 957, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1017, 0, 0, 0, 324, 0, 325, 0,
	0, 1042, 326, 327, 1030, 1031, 328, 329, 0, 330,
	1039, 0, 967, 331, 0, 332, 333, 334, 335, 336,
	1003, 1004, 1007, 393, 1044, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1043, 345, 1012, 1013, 0, 973, 0, 347, 348, 1045,
	1005, 1046, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 1040, 1048, 363, 364, 1049, 0, 365, 366,
	367, 996, 995, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	936, 243, 1052, 391, 958, 1006, 392, 1020, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 1053, 403, 1054, 1034, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 1035, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 1016,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 1055, 442, 443, 444, 445, 946, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 999,
	467, 451, 452, 468, 469, 1056, 470, 471, 472, 473,
	474, 475, 1014, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 1059, 482, 483, 484, 485, 1036, 0,
	488, 489, 934, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 1026, 1027, 1028, 1029, 0,
	504, 0, 498, 499, 1037, 500, 1038, 956, 501, 502,
	503, 0, 505, 506, 0, 940, 507, 508, 509, 511,
	512, 510, 513, 1000, 514, 0, 0, 515, 516, 517,
	571, 1023, 1058, 0, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 937, 0, 0,
	0, 0, 0, 0, 933, 0, 0, 0, 0, 0,
	0, 931, 932, 978, 950, 951, 952, 948, 949, 961,
	962, 0, 0, 0, 960, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 1002, 966, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 1015, 0, 259,
	1022, 260, 1021, 0, 261, 262, 263, 264, 265, 968,
	1001, 935, 266, 1060, 1061, 532, 0, 267, 268, 1008,
	0, 989, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 1041, 285, 3988, 992, 990, 991,
	998, 994, 993, 997, 287, 288, 289, 290, 1025, 291,
	1019, 1018, 939, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 1010, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 945, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 1032,
	1033, 957, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 1017, 0, 0, 0, 324, 0, 325, 0, 0,
	1042, 326, 327, 1030, 1031, 328, 329, 0, 330, 1039,
	0, 967, 331, 0, 332, 333, 334, 335, 336, 1003,
	1004, 1007, 393, 1044, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 1043,
	345, 1012, 1013, 0, 973, 0, 347, 348, 1045, 1005,
	1046, 349, 350, 351, 1047, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 1040, 1048, 363, 364, 1049, 0, 365, 366, 367,
	996, 995, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	1050, 384, 385, 386, 389, 390, 388, 1051, 387, 936,
	243, 1052, 391, 958, 1006, 392, 1020, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 1053, 403, 1054, 1034, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 1035, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 1016, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 1055, 442, 443, 444, 445, 946, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 999, 467,
	451, 452, 468, 469, 1056, 470, 471, 472, 473, 474,
	475, 1014, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 1059, 482, 483, 484, 485, 1036, 0, 488,
	489, 934, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 1026, 1027, 1028, 1029, 0, 504,
	0, 498, 499, 1037, 500, 1038, 956, 501, 502, 503,
	0, 3987, 506, 0, 940, 507, 508, 509, 511, 512,
	510, 513, 1000, 514, 0, 0, 515, 516, 517, 571,
	1023, 1058, 0, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 937, 0, 0, 0,
	0, 0, 0, 933, 0, 0, 0, 0, 0, 0,
	931, 932, 978, 950, 951, 952, 948, 949, 961, 962,
	0, 0, 0, 960, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 1002, 966, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 3986, 1015, 0, 259, 1022,
	260, 1021, 0, 261, 262, 263, 264, 265, 968, 1001,
	935, 266, 1060, 1061, 532, 0, 267, 268, 1008, 0,
	989, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1041, 285, 3988, 992, 990, 991, 998,
	994, 993, 997, 287, 288, 289, 290, 1025, 291, 1019,
	1018, 939, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 1010, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 945, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 1032, 1033,
	957, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	1017, 0, 0, 0, 324, 0, 325, 0, 0, 1042,
	326, 327, 1030, 1031, 328, 329, 0, 330, 1039, 0,
	967, 331, 0, 332, 333, 334, 335, 336, 1003, 1004,
	1007, 393, 1044, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 1043, 345,
	1012, 1013, 0, 973, 0, 347, 348, 1045, 1005, 1046,
	349, 350, 351, 1047, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	1040, 1048, 363, 364, 1049, 0, 365, 366, 367, 996,
	995, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 1050,
	384, 385, 386, 389, 390, 388, 1051, 387, 936, 243,
	1052, 391, 958, 1006, 392, 1020, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 1053, 403, 1054, 1034, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 1035, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 1016, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 1055, 442, 443, 444, 445, 946, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 999, 467, 451,
	452, 468, 469, 1056, 470, 471, 472, 473, 474, 475,
	1014, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 1059, 482, 483, 484, 485, 1036, 0, 488, 489,
	934, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 1026, 1027, 1028, 1029, 0, 504, 0,
	498, 499, 1037, 500, 1038, 956, 501, 502, 503, 0,
	3987, 506, 0, 940, 507, 508, 509, 511, 512, 510,
	513, 1000, 514, 0, 0, 515, 516, 517, 571, 1023,
	1058, 0, 519, 518, 574, 0, 0, 0, 0, 520,
	521, 575, 522, 523, 524, 937, 0, 0, 0, 0,
	0, 0, 933, 0, 0, 0, 0, 0, 0, 931,
	932, 978, 950, 951, 952, 2717, 2718, 961, 962, 0,
	0, 0, 960, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 1002, 966, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 1015, 0, 259, 1022, 260,
	1021, 0, 261, 262, 263, 264, 265, 968, 1001, 935,
	266, 1060, 1061, 532, 0, 267, 268, 1008, 0, 989,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1041, 285, 286, 992, 990, 991, 998, 994,
	993, 997, 287, 288, 289, 290, 1025, 291, 1019, 1018,
	939, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 1010, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 945, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 1032, 1033, 957,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 1017,
	0, 0, 0, 324, 0, 325, 0, 0, 1042, 326,
	327, 1030, 1031, 328, 329, 0, 330, 1039, 0, 967,
	331, 0, 332, 333, 334, 335, 336, 1003, 1004, 1007,
	393, 1044, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 0, 1043, 345, 1012,
	1013, 0, 973, 0, 347, 348, 1045, 1005, 1046, 349,
	350, 351, 1047, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 1040,
	1048, 363, 364, 1049, 0, 365, 366, 367, 996, 995,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 1050, 384,
	385, 386, 389, 390, 388, 1051, 387, 936, 243, 1052,
	391, 958, 1006, 392, 1020, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 1053, 403, 1054, 1034, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 1035, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 1016, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	1055, 442, 443, 444, 445, 946, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 999, 467, 451, 452,
	468, 469, 1056, 470, 471, 472, 473, 474, 475, 1014,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	1059, 482, 483, 484, 485, 1036, 0, 488, 489, 934,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 1026, 1027, 1028, 1029, 0, 504, 0, 498,
	499, 1037, 500, 1038, 956, 501, 502, 503, 0, 505,
	506, 0, 940, 507, 508, 509, 511, 512, 510, 513,
	1000, 514, 0, 0, 515, 516, 517, 571, 1023, 1058,
	0, 519, 518, 574, 0, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 937, 0, 0, 0, 0, 0,
	0, 933, 0, 0, 0, 0, 0, 0, 931, 932,
	978, 950, 951, 952, 2715, 2716, 961, 962, 0, 0,
	0, 960, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 1002, 966, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 1015, 0, 259, 1022, 260, 1021,
	0, 261, 262, 263, 264, 265, 968, 1001, 935, 266,
	1060, 1061, 532, 0, 267, 268, 1008, 0, 989, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1041, 285, 286, 992, 990, 991, 998, 994, 993,
	997, 287, 288, 289, 290, 1025, 291, 1019, 1018, 939,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 1010, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 945, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 1032, 1033, 957, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 1017, 0,
	0, 0, 324, 0, 325, 0, 0, 1042, 326, 327,
	1030, 1031, 328, 329, 0, 330, 1039, 0, 967, 331,
	0, 332, 333, 334, 335, 336, 1003, 1004, 1007, 393,
	1044, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 1043, 345, 1012, 1013,
	0, 973, 0, 347, 348, 1045, 1005, 1046, 349, 350,
	351, 1047, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 1040, 1048,
	363, 364, 1049, 0, 365, 366, 367, 996, 995, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 1050, 384, 385,
	386, 389, 390, 388, 1051, 387, 936, 243, 1052, 391,
	958, 1006, 392, 1020, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	1053, 403, 1054, 1034, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	1035, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 1016, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 1055,
	442, 443, 444, 445, 946, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 999, 467, 451, 452, 468,
	469, 1056, 470, 471, 472, 473, 474, 475, 1014, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 1059,
	482, 483, 484, 485, 1036, 0, 488, 489, 934, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 1026, 1027, 1028, 1029, 0, 504, 0, 498, 499,
	1037, 500, 1038, 956, 501, 502, 503, 0, 505, 506,
	0, 940, 507, 508, 509, 511, 512, 510, 513, 1000,
	514, 0, 0, 515, 516, 517, 571, 1023, 1058, 0,
	519, 518, 574, 0, 0, 0, 0, 520, 521, 575,
	522, 523, 524, 937, 0, 0, 0, 0, 0, 0,
	933, 0, 0, 0, 0, 0, 0, 931, 932, 978,
	950, 951, 952, 948, 949, 961, 962, 0, 0, 0,
	960, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	1002, 966, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 1015, 0, 259, 1022, 260, 1021, 0,
	261, 262, 263, 264, 265, 968, 1001, 935, 266, 1060,
	1061, 532, 0, 267, 268, 1008, 0, 989, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	1041, 285, 286, 992, 990, 991, 998, 994, 993, 997,
	287, 288, 289, 290, 1025, 291, 1019, 1018, 939, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 1010, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 945, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 1032, 1033, 957, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 1017, 0, 0,
	0, 324, 0, 325, 0, 0, 1042, 326, 327, 1030,
	1031, 328, 329, 0, 330, 1039, 0, 967, 331, 0,
	332, 333, 334, 335, 336, 1003, 1004, 1007, 393, 1044,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 1043, 345, 1012, 1013, 0,
	973, 0, 347, 348, 1045, 1005, 1046, 349, 350, 351,
	1047, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 1040, 1048, 363,
	364, 1049, 0, 365, 366, 367, 996, 995, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 1050, 384, 385, 386,
	389, 390, 388, 1051, 387, 936, 243, 1052, 391, 958,
	1006, 392, 1020, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 1053,
	403, 1054, 1034, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 1035,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 1016, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 1055, 442,
	443, 444, 445, 946, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 999, 467, 451, 452, 468, 469,
	1056, 470, 471, 472, 473, 474, 475, 1014, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 1059, 482,
	483, 484, 485, 1036, 0, 488, 489, 934, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	1026, 1027, 1028, 1029, 0, 504, 0, 498, 499, 1037,
	500, 1038, 956, 501, 502, 503, 0, 505, 506, 0,
	940, 507, 508, 509, 511, 512, 510, 513, 1000, 514,
	0, 0, 515, 516, 517, 571, 1023, 1058, 0, 519,
	518, 574, 0, 0, 0, 0, 520, 521, 575, 522,
	523, 524, 937, 0, 0, 0, 0, 0, 0, 933,
	0, 0, 0, 0, 0, 0, 2139, 2140, 978, 950,
	951, 952, 948, 949, 961, 962, 0, 0, 0, 960,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 1002,
	966, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 526, 1015, 0, 259, 1022, 260, 1021, 0, 261,
	262, 263, 264, 265, 968, 1001, 0, 266, 1060, 1061,
	532, 0, 267, 268, 1008, 0, 989, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 1041,
	285, 286, 992, 990, 991, 998, 994, 993, 997, 287,
	288, 289, 290, 1025, 291, 1019, 1018, 0, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 1010, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 945, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 1032, 1033, 957, 241, 0, 0,
	0, 0, 0, 321, 322, 323, 1017, 0, 0, 0,
	324, 0, 325, 0, 0, 1042, 326, 327, 1030, 1031,
	328, 329, 0, 330, 1039, 0, 967, 331, 0, 332,
	333, 334, 335, 336, 1003, 1004, 1007, 393, 1044, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 0, 1043, 345, 1012, 1013, 0, 973,
	0, 347, 348, 1045, 1005, 1046, 349, 350, 351, 1047,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	0, 359, 361, 360, 0, 362, 1040, 1048, 363, 364,
	1049, 0, 365, 366, 367, 996, 995, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 382, 1050, 384, 385, 386, 389,
	390, 388, 1051, 387, 0, 243, 1052, 391, 958, 1006,
	392, 1020, 394, 395, 0, 0, 396, 0, 0, 0,
	398, 399, 400, 0, 0, 401, 402, 554, 1053, 403,
	1054, 1034, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 415, 556, 557, 1035, 416,
	559, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 1016, 428, 427, 429, 0, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 0, 439, 440, 441, 1055, 442, 443,
	444, 445, 946, 446, 0, 447, 448, 454, 455, 449,
	450, 456, 457, 458, 459, 460, 0, 462, 463, 461,
	464, 465, 466, 999, 467, 451, 452, 468, 469, 1056,
	470, 471, 472, 473, 474, 475, 1014, 0, 476, 0,
	477, 478, 479, 480, 453, 481, 486, 1059, 482, 483,
	484, 485, 1036, 0, 488, 489, 0, 487, 0, 490,
	491, 492, 493, 494, 495, 315, 496, 0, 497, 1026,
	1027, 1028, 1029, 0, 504, 0, 498, 499, 1037, 500,
	1038, 956, 501, 502, 503, 0, 505, 506, 0, 0,
	507, 508, 509, 511, 512, 510, 513, 1000, 514, 0,
	0, 515, 516, 517, 571, 1023, 1058, 0, 519, 518,
	574, 0, 0, 0, 0, 520, 521, 575, 522, 523,
	524, 978, 950, 951, 952, 948, 949, 961, 2335, 0,
	0, 0, 0, 0, 0, 2333, 2334, 0, 244, 245,
	246, 247, 248, 249, 962, 250, 251, 0, 960, 0,
	0, 0, 1002, 966, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 1015, 0, 259, 1022, 260,
	1021, 0, 261, 262, 263, 264, 265, 968, 1001, 0,
	266, 1060, 1061, 532, 0, 267, 268, 1008, 0, 989,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1041, 285, 286, 992, 990, 991, 998, 994,
	993, 997, 287, 288, 289, 290, 1025, 291, 1019, 1018,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 1010, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 945, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 1032, 1033, 957,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 1017,
	0, 0, 0, 324, 0, 325, 0, 0, 1042, 326,
	327, 1030, 1031, 328, 329, 0, 330, 1039, 0, 967,
	331, 0, 332, 333, 334, 335, 336, 1003, 1004, 1007,
	393, 1044, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 0, 1043, 345, 1012,
	1013, 0, 973, 0, 347, 348, 1045, 1005, 1046, 349,
	350, 351, 1047, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 1040,
	1048, 363, 364, 1049, 0, 365, 366, 367, 996, 995,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 1050, 384,
	385, 386, 389, 390, 388, 1051, 387, 0, 243, 1052,
	391, 958, 1006, 392, 1020, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 1053, 403, 1054, 1034, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 1035, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 1016, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	1055, 442, 443, 444, 445, 2710, 2711, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 999, 467, 451, 452,
	468, 469, 1056, 470, 471, 472, 473, 474, 475, 1014,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	1059, 482, 483, 484, 485, 1036, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 1026, 1027, 1028, 1029, 0, 504, 0, 498,
	499, 1037, 500, 1038, 956, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	1000, 514, 0, 0, 515, 516, 517, 571, 1023, 1058,
	0, 519, 518, 574, 0, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 978, 950, 951, 952, 948, 949,
	961, 0, 0, 0, 0, 0, 0, 0, 1864, 1865,
	0, 244, 245, 246, 247, 248, 249, 962, 250, 251,
	0, 960, 0, 0, 0, 1002, 966, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 0, 1015, 0,
	259, 1022, 260, 1021, 0, 261, 262, 263, 264, 265,
	968, 1001, 935, 266, 1060, 1061, 532, 0, 267, 268,
	1008, 0, 989, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1041, 285, 3988, 992, 990,
	991, 998, 994, 993, 997, 287, 288, 289, 290, 1025,
	291, 1019, 1018, 939, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 1010, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 945,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	1032, 1033, 957, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 1017, 0, 0, 0, 324, 0, 325, 0,
	0, 1042, 326, 327, 1030, 1031, 328, 329, 0, 330,
	1039, 0, 967, 331, 0, 332, 333, 334, 335, 336,
	1003, 1004, 1007, 393, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	1043, 345, 1012, 1013, 0, 973, 0, 347, 348, 0,
	1005, 0, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 1040, 1048, 363, 364, 0, 0, 365, 366,
	367, 996, 995, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	936, 243, 0, 391, 958, 1006, 392, 1020, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 1053, 403, 1054, 1034, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 1035, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 1016,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 1055, 442, 443, 444, 445, 946, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 999,
	467, 451, 452, 468, 469, 0, 470, 471, 472, 473,
	474, 475, 1014, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 1059, 482, 483, 484, 485, 1036, 0,
	488, 489, 934, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 1026, 1027, 1028, 1029, 0,
	504, 0, 498, 499, 1037, 500, 1038, 956, 501, 502,
	503, 0, 3987, 506, 0, 940, 507, 508, 509, 511,
	512, 510, 513, 1000, 514, 0, 0, 515, 516, 517,
	571, 1023, 1058, 0, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 978, 950, 951,
	952, 948, 949, 961, 0, 0, 0, 0, 0, 0,
	0, 931, 932, 0, 244, 245, 246, 247, 248, 249,
	962, 250, 251, 0, 960, 0, 0, 0, 1002, 966,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 1015, 0, 259, 1022, 260, 1021, 0, 261, 262,
	263, 264, 265, 0, 1001, 0, 266, 1060, 1061, 532,
	0, 267, 268, 1008, 0, 989, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 1041, 285,
	286, 992, 990, 991, 998, 994, 993, 997, 287, 288,
	289, 290, 1025, 291, 1019, 1018, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	1010, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 1032, 1033, 957, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 1017, 0, 0, 0, 324,
	0, 325, 0, 0, 1042, 326, 327, 1030, 1031, 328,
	329, 0, 330, 1039, 0, 967, 331, 0, 332, 333,
	334, 335, 336, 1003, 1004, 1007, 393, 1044, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 1043, 345, 1012, 1013, 0, 973, 0,
	347, 348, 1045, 1005, 1046, 349, 350, 351, 1047, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 1040, 1048, 363, 364, 1049,
	0, 365, 366, 367, 996, 995, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 1050, 384, 385, 386, 389, 390,
	388, 1051, 387, 0, 243, 1052, 391, 958, 1006, 392,
	1020, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 1053, 403, 1054,
	1034, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 1035, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 1016, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 1055, 442, 443, 444,
	445, 946, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 999, 467, 451, 452, 468, 469, 1056, 470,
	471, 472, 473, 474, 475, 1014, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 1059, 482, 483, 484,
	485, 1036, 0, 488, 489, 0, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 1026, 1027,
	1028, 1029, 0, 504, 0, 498, 499, 1037, 500, 1038,
	956, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 1000, 514, 0, 0,
	515, 516, 517, 571, 1023, 1058, 0, 519, 518, 574,
	0, 924, 0, 1098, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 962, 1002, 0, 0, 960, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	1001, 0, 266, 530, 531, 532, 0, 267, 268, 1008,
	0, 989, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 1041, 285, 286, 992, 990, 991,
	998, 994, 993, 997, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 1032,
	1033, 0, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	1042, 326, 327, 540, 541, 328, 329, 0, 330, 1039,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 1003,
	1004, 1007, 393, 1044, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 1043,
	345, 547, 548, 0, 549, 0, 347, 348, 1045, 1005,
	1046, 349, 350, 351, 1047, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 1084, 359, 361, 360, 0,
	362, 1040, 1048, 363, 364, 1049, 0, 365, 366, 367,
	996, 995, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	1050, 384, 385, 386, 389, 390, 388, 1051, 387, 0,
	243, 1052, 391, 0, 1006, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 1090, 398, 399, 400, 0, 0,
	401, 402, 554, 1053, 403, 1054, 1034, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 1035, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 1055, 442, 443, 444, 445, 561, 1092, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 206, 462, 463, 461, 464, 465, 466, 999, 467,
	451, 452, 468, 469, 1056, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 1036, 0, 488,
	489, 0, 487, 208, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 1037, 500, 1038, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 1000, 514, 0, 0, 515, 516, 517, 1431,
	572, 573, 0, 519, 518, 574, 0, 1098, 0, 200,
	520, 521, 575, 522, 523, 524, 0, 201, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 1088, 1002, 1757,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 1001, 0, 266, 530, 531, 532,
	0, 267, 268, 1008, 0, 989, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 1041, 285,
	286, 992, 990, 991, 998, 994, 993, 997, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 1032, 1033, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 1042, 326, 327, 540, 541, 328,
	329, 0, 330, 1039, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 1003, 1004, 1007, 393, 1044, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 1043, 345, 547, 548, 0, 549, 0,
	347, 348, 1045, 1005, 1046, 349, 350, 351, 1047, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 1084,
	359, 361, 360, 0, 362, 1040, 1048, 363, 364, 1049,
	0, 365, 366, 367, 996, 995, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 1050, 384, 385, 386, 389, 390,
	388, 1051, 387, 0, 243, 1052, 391, 0, 1006, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 1090, 398,
	399, 400, 0, 0, 401, 402, 554, 1053, 403, 1054,
	1034, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 1035, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 1055, 442, 443, 444,
	445, 561, 1092, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 206, 462, 463, 461, 464,
	465, 466, 999, 467, 451, 452, 468, 469, 1056, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 1036, 0, 488, 489, 0, 487, 208, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 1037, 500, 1038,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 1000, 514, 0, 0,
	515, 516, 517, 1431, 572, 573, 0, 519, 518, 574,
	0, 0, 0, 200, 520, 521, 575, 522, 523, 524,
	0, 201, 0, 0, 0, 2870, 0, 1098, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1088, 0, 1757, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 1002, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 1001, 0, 266, 530, 531, 532,
	0, 267, 268, 1008, 0, 989, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 1041, 285,
	286, 992, 990, 991, 998, 994, 993, 997, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 1032, 1033, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 1042, 326, 327, 540, 541, 328,
	329, 0, 330, 1039, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 1003, 1004, 1007, 393, 1044, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 1043, 345, 547, 548, 0, 549, 0,
	347, 348, 1045, 1005, 1046, 349, 350, 351, 1047, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 1084,
	359, 361, 360, 0, 362, 1040, 1048, 363, 364, 1049,
	0, 365, 366, 367, 996, 995, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 1050, 384, 385, 386, 389, 390,
	388, 1051, 387, 0, 243, 1052, 391, 0, 1006, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 1090, 398,
	399, 400, 0, 0, 401, 402, 554, 1053, 403, 1054,
	1034, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 1035, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 1055, 442, 443, 444,
	445, 561, 1092, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 999, 467, 451, 452, 468, 469, 1056, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 1036, 0, 488, 489, 0, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 1037, 500, 1038,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 1000, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 0, 519, 518, 574,
	0, 1080, 0, 1098, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 1088, 0, 1086, 1002, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	1001, 0, 266, 530, 531, 532, 0, 267, 268, 1008,
	0, 989, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 1041, 285, 286, 992, 990, 991,
	998, 994, 993, 997, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 1032,
	1033, 0, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	1042, 326, 327, 540, 541, 328, 329, 0, 330, 1039,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 1003,
	1004, 1007, 393, 1044, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 1043,
	345, 547, 548, 0, 549, 0, 347, 348, 1045, 1005,
	1046, 349, 350, 351, 1047, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 1084, 359, 361, 360, 0,
	362, 1040, 1048, 363, 364, 1049, 0, 365, 366, 367,
	996, 995, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	1050, 384, 385, 386, 389, 390, 388, 1051, 387, 0,
	243, 1052, 391, 0, 1006, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 1090, 398, 399, 400, 0, 0,
	401, 402, 554, 1053, 403, 1054, 1034, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 1035, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 1055, 442, 443, 444, 445, 561, 1092, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 999, 467,
	451, 452, 468, 469, 1056, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 1036, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 1037, 500, 1038, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 1000, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 0, 519, 518, 574, 0, 1098, 0, 0,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 1088, 1002, 1086,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 1001, 0, 266, 530, 531, 532,
	0, 267, 268, 1008, 0, 989, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 1041, 285,
	286, 992, 990, 991, 998, 994, 993, 997, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 1032, 1033, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 1042, 326, 327, 540, 541, 328,
	329, 0, 330, 1039, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 1003, 1004, 1007, 393, 1044, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 1043, 345, 547, 548, 0, 549, 0,
	347, 348, 1045, 1005, 1046, 349, 350, 351, 1047, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 1084,
	359, 361, 360, 0, 362, 1040, 1048, 363, 364, 1049,
	0, 365, 366, 367, 996, 995, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 1050, 384, 385, 386, 389, 390,
	388, 1051, 387, 0, 243, 1052, 391, 0, 1006, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 1090, 398,
	399, 400, 0, 0, 401, 402, 554, 1053, 403, 1054,
	1034, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 1035, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 1055, 442, 443, 444,
	445, 561, 1092, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 999, 467, 451, 452, 468, 469, 1056, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 1036, 0, 488, 489, 0, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 1037, 500, 1038,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 1000, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 0, 519, 518, 574,
	0, 1098, 0, 0, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 1088, 1002, 1086, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 1001, 0,
	266, 530, 531, 532, 0, 267, 268, 1008, 0, 989,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1041, 285, 286, 992, 990, 991, 998, 994,
	993, 997, 287, 288, 289, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 1032, 1033, 0,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 1042, 326,
	327, 540, 541, 328, 329, 0, 330, 1039, 0, 543,
	331, 0, 332, 333, 334, 335, 336, 1003, 1004, 1007,
	393, 1044, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 0, 1043, 345, 547,
	548, 0, 549, 0, 347, 348, 1045, 1005, 1046, 349,
	350, 351, 1047, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 1040,
	1048, 363, 364, 1049, 0, 365, 366, 367, 996, 995,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 1050, 384,
	385, 386, 389, 390, 388, 1051, 387, 0, 243, 1052,
	391, 0, 1006, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 1053, 403, 1054, 1034, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 1035, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	1055, 442, 443, 444, 445, 561, 1092, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 999, 467, 451, 452,
	468, 469, 1056, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 1036, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 565, 566, 567, 568, 0, 504, 0, 498,
	499, 1037, 500, 1038, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	1000, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	0, 519, 518, 574, 0, 924, 0, 1282, 520, 521,
	575, 522, 523, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 1656, 525, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 1248, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 1041, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 1042, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 544, 545, 546, 393, 1044, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 1043, 345, 547, 548, 0, 549, 0,
	347, 348, 1045, 550, 1046, 349, 350, 351, 1047, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 1048, 363, 364, 1049,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 1050, 384, 385, 386, 389, 390,
	388, 1051, 387, 0, 0, 1052, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 1053, 403, 1054,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 1055, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 206, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 1056, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 208, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 1431, 572, 573, 0, 519, 518, 574,
	0, 0, 0, 200, 520, 521, 575, 522, 523, 524,
	0, 201, 0, 0, 0, 1428, 0, 1282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 1248, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 1041, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 1042, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 544, 545, 546, 393, 1044, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 1043, 345, 547, 548, 0, 549, 0,
	347, 348, 1045, 550, 1046, 349, 350, 351, 1047, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 1048, 363, 364, 1049,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 1050, 384, 385, 386, 389, 390,
	388, 1051, 387, 0, 0, 1052, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 1053, 403, 1054,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 1055, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 206, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 1056, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 208, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 1431, 572, 573, 0, 519, 518, 574,
	0, 0, 0, 200, 520, 521, 575, 522, 523, 524,
	0, 201, 0, 0, 0, 0, 0, 1282, 1281, 0,
	0, 0, 0, 1279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 1248, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 1041, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 1042, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 544, 545, 546, 393, 1044, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 1043, 345, 547, 548, 0, 549, 0,
	347, 348, 1045, 550, 1046, 349, 350, 351, 1047, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 1048, 363, 364, 1049,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 1050, 384, 385, 386, 389, 390,
	388, 1051, 387, 0, 0, 1052, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 1053, 403, 1054,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 1055, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 1056, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 0, 519, 518, 574,
	0, 0, 0, 0, 520, 521, 575, 522, 523, 524,
	1282, 1281, 0, 0, 0, 0, 1279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 1453, 250, 251, 0, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 0, 0, 266,
	530, 531, 532, 0, 267, 268, 533, 0, 1248, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 1041, 285, 286, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 0, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 1042, 326, 327,
	540, 541, 328, 329, 0, 330, 542, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 544, 545, 546, 393,
	1044, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 0, 343, 344, 346, 0, 1043, 345, 547, 548,
	0, 549, 0, 347, 348, 1045, 550, 1046, 349, 350,
	351, 1047, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 551, 1048,
	363, 364, 1049, 0, 365, 366, 367, 0, 0, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 1050, 384, 385,
	386, 389, 390, 388, 1051, 387, 0, 0, 1052, 391,
	0, 552, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	1053, 403, 1054, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 1055,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 0, 467, 451, 452, 468,
	469, 1056, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 0, 488, 489, 0, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	569, 500, 570, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 0,
	514, 0, 0, 515, 516, 517, 571, 572, 573, 0,
	519, 518, 574, 0, 0, 0, 0, 520, 521, 575,
	522, 523, 524, 1282, 1281, 0, 0, 0, 0, 1279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 3108, 250, 251, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 532, 0, 267, 268, 533,
	0, 1248, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 1041, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	1042, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 1044, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 1043,
	345, 547, 548, 0, 549, 0, 347, 348, 1045, 550,
	1046, 349, 350, 351, 1047, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 1940, 361, 360, 0,
	362, 551, 1048, 363, 364, 1049, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	1050, 384, 385, 386, 389, 390, 388, 1051, 387, 0,
	0, 1052, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 1053, 403, 1054, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 1055, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 1056, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 0, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 1282, 1281, 0, 0,
	0, 0, 1279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 1453,
	250, 251, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 0,
	267, 268, 533, 0, 1248, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1041, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 1042, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 1044, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 0, 343, 344,
	346, 0, 1043, 345, 547, 548, 0, 549, 0, 347,
	348, 1045, 550, 1046, 349, 350, 351, 1047, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 1048, 363, 364, 1049, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 1050, 384, 385, 386, 389, 390, 388,
	1051, 387, 0, 0, 1052, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 1053, 403, 1054, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 1055, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 1056, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 0, 519, 518, 574, 1098,
	0, 0, 0, 520, 521, 575, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	1002, 0, 1437, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 1001, 0, 266, 530,
	531, 532, 0, 267, 268, 1008, 0, 989, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	1041, 285, 286, 992, 990, 991, 998, 994, 993, 997,
	287, 288, 289, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 1032, 1033, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 1042, 326, 327, 540,
	541, 328, 329, 0, 330, 1039, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 1003, 1004, 1007, 393, 1044,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 1043, 345, 547, 548, 0,
	549, 0, 347, 348, 1045, 1005, 1046, 349, 350, 351,
	1047, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 1040, 1048, 363,
	364, 1049, 0, 365, 366, 367, 996, 995, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 1050, 384, 385, 386,
	389, 390, 388, 1051, 387, 0, 243, 1052, 391, 0,
	1006, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 1053,
	403, 1054, 1034, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 1035,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 1055, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 999, 467, 451, 452, 468, 469,
	1056, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 1036, 0, 488, 489, 0, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 1037,
	500, 1038, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 1000, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 0, 519,
	518, 574, 924, 0, 238, 0, 520, 521, 575, 522,
	523, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 0, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	544, 545, 546, 393, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 0, 343, 344, 346, 0,
	0, 345, 547, 548, 0, 549, 0, 347, 348, 0,
	550, 0, 349, 350, 351, 0, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 0, 363, 364, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 0, 384, 385, 386, 389, 390, 388, 0, 387,
	0, 0, 0, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 0, 403, 0, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 206, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 0, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 208, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	1431, 572, 573, 0, 519, 518, 574, 238, 0, 0,
	200, 520, 521, 575, 522, 523, 524, 0, 201, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 525, 0,
	172, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 544, 545, 546, 393, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 0, 345, 547, 548, 0, 549, 0,
	347, 348, 0, 550, 0, 349, 350, 351, 0, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 0, 363, 364, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 0, 384, 385, 386, 389, 390,
	388, 0, 387, 0, 243, 0, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 0, 403, 0,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 0, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 0, 519, 518, 574,
	0, 1372, 0, 238, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 1771, 525, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 532, 0, 267, 268, 533,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 0,
	345, 547, 548, 0, 549, 0, 347, 348, 0, 550,
	0, 349, 350, 351, 0, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 551, 0, 363, 364, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	0, 384, 385, 386, 389, 390, 388, 0, 387, 0,
	243, 0, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 0, 403, 0, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 0, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 0, 519, 518, 574, 0, 238, 2634, 0,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 1376, 525, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 544, 545, 546, 393, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 0, 345, 547, 548, 0, 549, 0,
	347, 348, 0, 550, 0, 349, 350, 351, 0, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 0, 363, 364, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 0, 384, 385, 386, 389, 390,
	388, 0, 387, 0, 0, 0, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 0, 403, 0,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 0, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 0, 519, 518, 574,
	238, 0, 0, 0, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 525, 0, 4137, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 0, 0, 266,
	530, 531, 532, 0, 267, 268, 533, 0, 0, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 0, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 0, 326, 327,
	540, 541, 328, 329, 0, 330, 542, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 544, 545, 546, 393,
	0, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 0, 345, 547, 548,
	0, 549, 0, 347, 348, 0, 550, 0, 349, 350,
	351, 0, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 551, 0,
	363, 364, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 0, 384, 385,
	386, 389, 390, 388, 0, 387, 0, 243, 0, 391,
	0, 552, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	0, 403, 0, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 0, 467, 451, 452, 468,
	469, 0, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 0, 488, 489, 0, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	569, 500, 570, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 0,
	514, 0, 0, 515, 516, 517, 571, 572, 573, 238,
	519, 518, 574, 0, 0, 0, 0, 520, 521, 575,
	522, 523, 524, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 3055, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 544, 545, 546, 393, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 547, 548, 0,
	549, 0, 347, 348, 0, 550, 0, 349, 350, 351,
	0, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 0, 363,
	364, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 0, 384, 385, 386,
	389, 390, 388, 0, 387, 0, 243, 0, 391, 0,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 0,
	403, 0, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	0, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 238, 519,
	518, 574, 0, 0, 0, 0, 520, 521, 575, 522,
	523, 524, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 525,
	0, 0, 0, 1376, 252, 253, 255, 254, 256, 257,
	258, 526, 527, 0, 259, 528, 260, 529, 0, 261,
	262, 263, 264, 265, 0, 0, 0, 266, 530, 531,
	532, 0, 267, 268, 533, 0, 0, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 290, 0, 291, 534, 535, 0, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 301, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 536, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 537, 538, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 539, 0, 0, 0,
	324, 0, 325, 0, 0, 0, 326, 327, 540, 541,
	328, 329, 0, 330, 542, 0, 543, 331, 0, 332,
	333, 334, 335, 336, 544, 545, 546, 393, 0, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 0,
	343, 344, 346, 0, 0, 345, 547, 548, 0, 549,
	0, 347, 348, 0, 550, 0, 349, 350, 351, 0,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	0, 359, 361, 360, 0, 362, 551, 0, 363, 364,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 382, 0, 384, 385, 386, 389,
	390, 388, 0, 387, 0, 0, 0, 391, 0, 552,
	392, 553, 394, 395, 0, 0, 396, 0, 0, 0,
	398, 399, 400, 0, 0, 401, 402, 554, 0, 403,
	0, 555, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 415, 556, 557, 558, 416,
	559, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 560, 428, 427, 429, 0, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 561, 446, 0, 447, 448, 454, 455, 449,
	450, 456, 457, 458, 459, 460, 0, 462, 463, 461,
	464, 465, 466, 0, 467, 451, 452, 468, 469, 0,
	470, 471, 472, 473, 474, 475, 562, 0, 476, 0,
	477, 478, 479, 480, 453, 481, 486, 563, 482, 483,
	484, 485, 564, 0, 488, 489, 0, 487, 0, 490,
	491, 492, 493, 494, 495, 315, 496, 0, 497, 565,
	566, 567, 568, 0, 504, 0, 498, 499, 569, 500,
	570, 0, 501, 502, 503, 0, 505, 506, 0, 0,
	507, 508, 509, 511, 512, 510, 513, 0, 514, 0,
	0, 515, 516, 517, 571, 572, 573, 0, 519, 518,
	574, 238, 0, 0, 0, 520, 521, 575, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 525, 0, 2607, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 530, 531, 532, 0, 267, 268, 533, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 540, 541, 328, 329, 0, 330, 542, 0, 543,
	331, 0, 332, 333, 334, 335, 336, 544, 545, 546,
	393, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 547,
	548, 0, 549, 0, 347, 348, 0, 550, 0, 349,
	350, 351, 0, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 551,
	0, 363, 364, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 0, 384,
	385, 386, 389, 390, 388, 0, 387, 0, 0, 0,
	391, 0, 552, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 0, 403, 0, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 0, 467, 451, 452,
	468, 469, 0, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 565, 566, 567, 568, 0, 504, 0, 498,
	499, 569, 500, 570, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	0, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	0, 519, 518, 574, 238, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 3206, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 0, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	544, 545, 546, 393, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 0, 343, 344, 346, 0,
	0, 345, 547, 548, 0, 549, 0, 347, 348, 0,
	550, 0, 349, 350, 351, 0, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 0, 363, 364, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 0, 384, 385, 386, 389, 390, 388, 0, 387,
	0, 0, 0, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 0, 403, 0, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 0, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 0, 519, 518, 574, 0, 774, 0,
	658, 520, 521, 575, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	2037, 525, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 0, 0, 266,
	530, 531, 532, 0, 267, 268, 533, 0, 0, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 665, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 0, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 772, 0, 326, 327,
	540, 541, 328, 329, 0, 330, 542, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 544, 545, 546, 393,
	0, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 0, 345, 547, 548,
	0, 549, 0, 347, 348, 0, 550, 0, 349, 350,
	351, 0, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 551, 0,
	363, 364, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 0, 384, 385,
	386, 389, 390, 388, 0, 387, 0, 243, 0, 391,
	0, 552, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	0, 403, 0, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 0, 467, 451, 452, 468,
	469, 0, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 0, 488, 489, 0, 487,
	663, 490, 491, 492, 493, 664, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	569, 500, 570, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 0,
	514, 0, 0, 515, 516, 517, 571, 572, 573, 0,
	519, 518, 574, 0, 656, 0, 658, 520, 521, 575,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 668,
	250, 251, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 0,
	267, 268, 533, 0, 0, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 665,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 0, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 0, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 242, 343, 344,
	346, 0, 0, 345, 547, 548, 0, 549, 0, 347,
	348, 0, 550, 0, 349, 350, 351, 0, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 0, 363, 364, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 0, 384, 385, 386, 389, 390, 388,
	0, 387, 0, 243, 0, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 0, 403, 0, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 0, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 663, 490, 491, 492,
	493, 664, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 658, 519, 518, 574, 0,
	0, 0, 0, 520, 521, 575, 522, 523, 524, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 668, 525, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 527,
	0, 259, 528, 260, 529, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 530, 531, 532, 0, 267,
	268, 533, 0, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 665, 290,
	0, 291, 534, 535, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	536, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 537, 538, 0, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 539, 0, 0, 0, 324, 0, 325,
	0, 0, 0, 326, 327, 540, 541, 328, 329, 0,
	330, 542, 0, 543, 331, 0, 332, 333, 334, 335,
	336, 544, 545, 546, 393, 0, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	0, 0, 345, 547, 548, 0, 549, 0, 347, 348,
	0, 550, 0, 349, 350, 351, 0, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 551, 0, 363, 364, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 0, 384, 385, 386, 389, 390, 388, 0,
	387, 0, 243, 0, 391, 0, 552, 392, 553, 394,
	395, 0, 0, 396, 0, 0, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 0, 403, 0, 555, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 558, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	560, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 561,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 0, 462, 463, 461, 464, 465, 466,
	0, 467, 451, 452, 468, 469, 0, 470, 471, 472,
	473, 474, 475, 562, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 563, 482, 483, 484, 485, 564,
	0, 488, 489, 0, 487, 663, 490, 491, 492, 493,
	664, 495, 315, 496, 0, 497, 565, 566, 567, 568,
	0, 504, 0, 498, 499, 569, 500, 570, 0, 501,
	502, 503, 0, 505, 506, 0, 0, 507, 508, 509,
	511, 512, 510, 513, 0, 514, 0, 0, 515, 516,
	517, 571, 572, 573, 658, 519, 518, 574, 0, 0,
	0, 0, 520, 521, 575, 522, 523, 524, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 668, 525, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 665, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 0, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	544, 545, 546, 393, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	0, 345, 547, 548, 0, 549, 0, 347, 348, 0,
	550, 0, 349, 350, 351, 0, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 0, 363, 364, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 0, 384, 385, 386, 389, 390, 388, 0, 387,
	0, 243, 0, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 0, 403, 0, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 0, 2074, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 0, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 663, 490, 491, 492, 493, 664,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 1806, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 668, 0, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 0, 1812, 0, 259,
	1802, 260, 1818, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 1827, 1828, 0, 0, 267, 268, 0,
	0, 1248, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 1041, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 1025, 291,
	1816, 1815, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 1010, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 0, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 1814, 0, 0, 0, 324, 0, 325, 0, 0,
	1042, 326, 327, 1823, 1824, 328, 329, 0, 330, 0,
	0, 0, 331, 0, 332, 333, 334, 335, 336, 0,
	0, 0, 393, 1044, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 1043,
	345, 1809, 1810, 0, 1805, 0, 347, 348, 1045, 0,
	1046, 349, 350, 351, 1047, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 0, 1048, 363, 364, 1049, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	1050, 384, 385, 386, 389, 390, 388, 1051, 387, 0,
	0, 1052, 391, 0, 0, 392, 1817, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 0, 1053, 403, 1054, 0, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 1799, 1800, 0, 416, 0, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 1813, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 1055, 442, 443, 444, 445, 0, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 1056, 470, 471, 472, 473, 474,
	475, 1811, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 1826, 482, 483, 484, 485, 0, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 1819, 1820, 1821, 1822, 0, 504,
	0, 498, 499, 0, 500, 0, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 0,
	1803, 1825, 0, 519, 518, 0, 0, 0, 0, 0,
	520, 521, 0, 522, 523, 524, 1282, 1281, 0, 0,
	0, 0, 1279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 1793, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 0,
	267, 268, 533, 0, 1248, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1041, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 1042, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 1044, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 0, 343, 344,
	346, 0, 1043, 345, 547, 548, 0, 549, 0, 347,
	348, 1045, 550, 1046, 349, 350, 351, 1047, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 1048, 363, 364, 1049, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 1050, 384, 385, 386, 389, 390, 388,
	1051, 387, 0, 0, 1052, 391, 3369, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 1053, 403, 1054, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 1055, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 1056, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 0, 519, 518, 574, 0,
	0, 0, 0, 520, 521, 575, 522, 523, 524, 1282,
	1281, 0, 0, 0, 0, 1279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 1248, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	1041, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 1042, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 544, 545, 546, 393, 1044,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 1043, 345, 547, 548, 0,
	549, 0, 347, 348, 1045, 550, 1046, 349, 350, 351,
	1047, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 1048, 363,
	364, 1049, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 1050, 384, 385, 386,
	389, 390, 388, 1051, 387, 0, 0, 1052, 391, 3031,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 1053,
	403, 1054, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 1055, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	1056, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 0, 519,
	518, 574, 1282, 1281, 0, 0, 520, 521, 575, 522,
	523, 524, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 0, 267, 268, 533, 0,
	1248, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1041, 285, 286, 0, 0, 0, 0,
	0, 0, 3020, 287, 288, 289, 290, 0, 291, 534,
	535, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 1042,
	326, 327, 540, 541, 328, 329, 0, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 544, 545,
	546, 393, 1044, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 0, 343, 344, 346, 0, 1043, 345,
	547, 548, 0, 549, 0, 347, 348, 1045, 550, 1046,
	349, 350, 351, 1047, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 1048, 363, 364, 1049, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 1050,
	384, 385, 386, 389, 390, 388, 1051, 387, 0, 0,
	1052, 391, 0, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 1053, 403, 1054, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 1055, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 3021, 467, 451,
	452, 468, 469, 1056, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 238, 519, 518, 574, 0, 0, 0, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 530, 531, 532, 0, 267, 268, 533, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 0,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 540, 541, 328, 329, 0, 330, 542, 0, 543,
	331, 0, 332, 333, 334, 335, 336, 544, 545, 546,
	393, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 0, 0, 345, 547,
	548, 0, 549, 0, 347, 348, 0, 550, 0, 349,
	350, 351, 0, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 551,
	0, 363, 364, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 0, 384,
	385, 386, 389, 390, 388, 0, 387, 0, 243, 0,
	391, 0, 552, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 0, 403, 0, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 0, 467, 451, 452,
	468, 469, 0, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 565, 566, 567, 568, 0, 504, 0, 498,
	499, 569, 500, 570, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	0, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	0, 519, 518, 574, 0, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 1480, 0, 1282, 1281, 0, 0,
	0, 0, 1279, 0, 0, 0, 0, 0, 0, 0,
	668, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 0,
	267, 268, 533, 0, 1248, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1041, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 241, 0, 0, 0, 0,
	0, 1479, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 1042, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 1044, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 0, 343, 344,
	346, 0, 1043, 345, 547, 548, 0, 549, 0, 347,
	348, 1045, 550, 1046, 349, 350, 351, 1047, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 1048, 363, 364, 1049, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 1050, 384, 385, 386, 389, 390, 388,
	1051, 387, 0, 0, 1052, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 1053, 403, 1054, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 1478,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 1055, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	1477, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 1056, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 0, 519, 518, 574, 0,
	0, 0, 0, 520, 521, 575, 522, 523, 524, 1421,
	0, 1282, 1281, 0, 0, 0, 0, 1279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 530, 531, 532, 0, 267, 268, 533, 0, 1248,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1041, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 0,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 1042, 326,
	327, 540, 541, 328, 329, 0, 330, 542, 0, 543,
	331, 0, 332, 333, 334, 335, 336, 1420, 545, 546,
	393, 1044, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 1043, 345, 547,
	548, 0, 549, 0, 347, 348, 1045, 550, 1046, 349,
	350, 351, 1047, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 551,
	1048, 363, 364, 1049, 0, 365, 366, 367, 0, 0,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 1050, 384,
	385, 386, 389, 390, 388, 1051, 387, 0, 0, 1052,
	391, 0, 552, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 1053, 403, 1054, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	1055, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 0, 467, 451, 452,
	468, 469, 1056, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 565, 566, 567, 568, 0, 504, 0, 498,
	499, 569, 500, 570, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	0, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	0, 519, 518, 574, 0, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 1352, 0, 1282, 1281, 0, 0,
	0, 0, 1279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 0,
	267, 268, 533, 0, 1248, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1041, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 1042, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 1351, 545, 546, 393, 1044, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 0, 343, 344,
	346, 0, 1043, 345, 547, 548, 0, 549, 0, 347,
	348, 1045, 550, 1046, 349, 350, 351, 1047, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 1048, 363, 364, 1049, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 1050, 384, 385, 386, 389, 390, 388,
	1051, 387, 0, 0, 1052, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 1053, 403, 1054, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 1055, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 1056, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 0, 519, 518, 574, 0,
	0, 0, 0, 520, 521, 575, 522, 523, 524, 1316,
	0, 1282, 1281, 0, 0, 0, 0, 1279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 530, 531, 532, 0, 267, 268, 533, 0, 1248,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 1041, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 0,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 1042, 326,
	327, 540, 541, 328, 329, 0, 330, 542, 0, 543,
	331, 0, 332, 333, 334, 335, 336, 544, 545, 546,
	393, 1044, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 1043, 345, 547,
	548, 0, 549, 0, 347, 348, 1045, 550, 1046, 349,
	350, 351, 1047, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 551,
	1048, 363, 364, 1049, 0, 365, 366, 367, 0, 0,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 1050, 384,
	385, 386, 389, 390, 388, 1051, 387, 0, 0, 1052,
	391, 0, 552, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 1053, 403, 1054, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	1055, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 0, 467, 451, 452,
	468, 469, 1056, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 565, 566, 567, 568, 0, 504, 0, 498,
	499, 569, 500, 570, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	0, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	0, 519, 518, 574, 0, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 1277, 0, 1282, 1281, 0, 0,
	0, 0, 1279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 0,
	267, 268, 533, 0, 1248, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 1041, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 241, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 1042, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 1276, 545, 546, 393, 1044, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 0, 343, 344,
	346, 0, 1043, 345, 547, 548, 0, 549, 0, 347,
	348, 1045, 550, 1046, 349, 350, 351, 1047, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 1048, 363, 364, 1049, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 1050, 384, 385, 386, 389, 390, 388,
	1051, 387, 0, 0, 1052, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 1053, 403, 1054, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 1055, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 1056, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 0, 519, 518, 574, 0,
	0, 0, 0, 520, 521, 575, 522, 523, 524, 1282,
	1281, 0, 0, 0, 0, 1279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 1248, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	1041, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 1042, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 544, 545, 546, 393, 1044,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 1043, 345, 547, 548, 0,
	549, 0, 347, 348, 1045, 550, 1046, 349, 350, 351,
	1047, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 1048, 363,
	364, 1049, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 1050, 384, 385, 386,
	389, 390, 388, 1051, 387, 0, 0, 1052, 391, 0,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 1053,
	403, 1054, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 1055, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	1056, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 0, 519,
	518, 574, 1282, 1281, 0, 0, 520, 521, 575, 522,
	523, 524, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 0, 267, 268, 533, 0,
	1248, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 1041, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 290, 0, 291, 534,
	535, 1837, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 1042,
	326, 327, 540, 541, 328, 329, 0, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 544, 545,
	546, 393, 1044, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 0, 343, 344, 346, 0, 1043, 345,
	547, 548, 0, 549, 0, 347, 348, 1045, 550, 1046,
	349, 350, 351, 1047, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 1048, 363, 364, 1049, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 1050,
	384, 385, 386, 389, 390, 388, 1051, 387, 0, 0,
	1052, 391, 0, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 1053, 403, 1054, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 1055, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 0, 467, 451,
	452, 468, 469, 1056, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 0, 519, 518, 574, 1282, 1281, 0, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 525, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 527,
	0, 259, 528, 260, 529, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 530, 531, 532, 0, 267,
	268, 533, 0, 1248, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 1041, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 534, 535, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	536, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 537, 538, 0, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 539, 0, 0, 0, 324, 0, 325,
	0, 0, 1042, 326, 327, 540, 541, 328, 329, 0,
	330, 542, 0, 543, 331, 0, 332, 333, 334, 335,
	336, 544, 545, 546, 393, 1044, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 0, 343, 344, 346,
	0, 1043, 345, 547, 548, 0, 549, 0, 347, 348,
	1045, 550, 1046, 349, 350, 351, 1047, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 551, 1048, 363, 364, 1049, 0, 365,
	366, 367, 0, 0, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 1050, 384, 385, 386, 389, 390, 388, 1051,
	387, 0, 0, 1052, 391, 0, 552, 392, 553, 394,
	395, 0, 0, 396, 0, 0, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 1053, 403, 1054, 555, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 558, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	560, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 1055, 442, 443, 444, 445, 561,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 0, 462, 463, 461, 464, 465, 466,
	0, 467, 451, 452, 468, 469, 1056, 470, 471, 472,
	473, 474, 475, 562, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 563, 482, 483, 484, 485, 564,
	0, 488, 489, 0, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 565, 566, 567, 568,
	0, 504, 0, 498, 499, 569, 500, 570, 0, 501,
	502, 503, 0, 505, 506, 0, 0, 507, 508, 509,
	511, 512, 510, 513, 0, 514, 0, 0, 515, 516,
	517, 571, 572, 573, 1282, 519, 518, 574, 0, 0,
	0, 0, 520, 521, 575, 522, 523, 524, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 1248, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 1041, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 1042, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	544, 545, 546, 393, 1044, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 0, 343, 344, 346, 0,
	1043, 345, 547, 548, 0, 549, 0, 347, 348, 1045,
	550, 1046, 349, 350, 351, 1047, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 1048, 363, 364, 1049, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 1050, 384, 385, 386, 389, 390, 388, 1051, 387,
	0, 0, 1052, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 1053, 403, 1054, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 1055, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 1056, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 238, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 532, 2466, 267, 268, 533,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 2463, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 2470, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 2647, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 2469, 0,
	0, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 2644, 343, 344, 346, 0, 0,
	345, 547, 548, 0, 549, 0, 347, 2646, 0, 550,
	0, 349, 350, 351, 0, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 551, 0, 363, 364, 2643, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	0, 384, 385, 386, 389, 390, 388, 0, 387, 0,
	0, 0, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 0, 403, 0, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 2468, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 0, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 2645, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 238, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 2466, 267, 268, 533, 0,
	0, 2460, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 2463, 280, 0, 281, 282,
	283, 0, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 290, 0, 291, 534,
	535, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 2470, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 2469, 0, 0,
	326, 327, 540, 541, 328, 329, 0, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 2459, 545,
	546, 393, 0, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 0, 343, 344, 346, 0, 0, 345,
	547, 548, 0, 549, 0, 347, 348, 0, 550, 0,
	349, 350, 351, 0, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 0, 363, 364, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 0,
	384, 385, 386, 389, 390, 388, 0, 387, 0, 0,
	0, 391, 0, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 0, 403, 0, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 2468, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 0, 467, 451,
	452, 468, 469, 0, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 2467, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 0, 519, 518, 574, 1545, 0, 238, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 544, 545, 546, 393, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 0, 345, 547, 548, 0, 549, 0,
	347, 348, 0, 550, 0, 349, 350, 351, 0, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 0, 363, 364, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 0, 384, 385, 386, 389, 390,
	388, 0, 387, 0, 243, 0, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 0, 403, 0,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 1548, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 0, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 1546, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 0, 1547, 518, 574,
	1252, 0, 238, 0, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 0, 267, 268, 533, 0,
	0, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 290, 0, 291, 534,
	535, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 0,
	326, 327, 540, 541, 328, 329, 0, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 1254, 545,
	546, 393, 0, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 0, 345,
	547, 548, 0, 549, 0, 347, 348, 0, 550, 0,
	349, 350, 351, 0, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 0, 363, 364, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 0,
	384, 385, 386, 389, 390, 388, 0, 387, 0, 243,
	0, 391, 0, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 1090, 398, 399, 400, 0, 0, 401,
	402, 554, 0, 403, 0, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 0, 467, 451,
	452, 468, 469, 0, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 0, 519, 518, 574, 1249, 0, 238, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 241, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 1251, 545, 546, 393, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 242, 343,
	344, 346, 0, 0, 345, 547, 548, 0, 549, 0,
	347, 348, 0, 550, 0, 349, 350, 351, 0, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 0, 363, 364, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 0, 384, 385, 386, 389, 390,
	388, 0, 387, 0, 243, 0, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 1090, 398,
	399, 400, 0, 0, 401, 402, 554, 0, 403, 0,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 0, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 0, 519, 518, 574,
	1155, 0, 238, 0, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 0, 267, 268, 533, 0,
	0, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 290, 0, 291, 534,
	535, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 241, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 0,
	326, 327, 540, 541, 328, 329, 0, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 1157, 545,
	546, 393, 0, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 242, 343, 344, 346, 0, 0, 345,
	547, 548, 0, 549, 0, 347, 348, 0, 550, 0,
	349, 350, 351, 0, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 0, 363, 364, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 0,
	384, 385, 386, 389, 390, 388, 0, 387, 0, 243,
	0, 391, 0, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 1090, 398, 399, 400, 0, 0, 401,
	402, 554, 0, 403, 0, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 0, 467, 451,
	452, 468, 469, 0, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 0, 519, 518, 574, 607, 0, 238, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 606, 248, 249,
	596, 250, 251, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 599, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 540, 541, 328,
	329, 600, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 544, 545, 546, 393, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 0, 345, 547, 548, 0, 549, 0,
	347, 348, 0, 550, 0, 349, 350, 351, 0, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 0, 363, 364, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 0, 384, 385, 386, 389, 390,
	388, 0, 387, 0, 0, 0, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 0, 403, 0,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 601, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 0, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 0, 519, 518, 574,
	595, 0, 238, 0, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 596, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 0, 267, 268, 533, 0,
	0, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 599, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 290, 0, 291, 534,
	535, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 0,
	326, 327, 540, 541, 328, 329, 600, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 544, 545,
	546, 393, 0, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 0, 343, 344, 346, 0, 0, 345,
	547, 548, 0, 549, 0, 347, 348, 0, 550, 0,
	349, 350, 351, 0, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 0, 363, 364, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 0,
	384, 385, 386, 389, 390, 388, 0, 387, 0, 0,
	0, 391, 0, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 0, 403, 0, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	601, 462, 463, 461, 464, 465, 466, 0, 467, 451,
	452, 468, 469, 0, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 238, 519, 518, 574, 0, 0, 0, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 530, 531, 532, 0, 267, 268, 533, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 0,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 540, 541, 328, 329, 0, 330, 542, 0, 543,
	331, 0, 332, 333, 334, 335, 336, 544, 545, 546,
	393, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 0, 0, 345, 547,
	548, 0, 549, 0, 347, 348, 0, 550, 0, 349,
	350, 351, 0, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 551,
	0, 363, 364, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 0, 384,
	385, 386, 389, 390, 388, 2993, 387, 0, 243, 0,
	391, 0, 552, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 0, 403, 0, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 0, 467, 451, 452,
	468, 469, 0, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 565, 566, 567, 568, 0, 504, 0, 498,
	499, 569, 500, 570, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	0, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	238, 519, 518, 574, 0, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 0, 0, 266,
	530, 531, 532, 0, 267, 268, 533, 0, 0, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 0, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 0, 326, 327,
	540, 541, 328, 329, 0, 330, 542, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 544, 545, 546, 393,
	0, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 0, 345, 547, 548,
	0, 549, 0, 347, 348, 0, 550, 0, 349, 350,
	351, 0, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 551, 0,
	363, 364, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 0, 384, 385,
	386, 389, 390, 388, 0, 387, 0, 243, 0, 391,
	0, 552, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 1090, 398, 399, 400, 0, 0, 401, 402, 554,
	0, 403, 0, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 0, 467, 451, 452, 468,
	469, 0, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 0, 488, 489, 0, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	569, 500, 570, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 0,
	514, 0, 0, 515, 516, 517, 571, 572, 573, 0,
	519, 518, 574, 2579, 0, 238, 0, 520, 521, 575,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 525, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 527,
	0, 259, 528, 260, 529, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 530, 531, 532, 0, 267,
	268, 533, 0, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 534, 535, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	536, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 537, 538, 0, 241, 0, 0, 0, 0, 0,
	321, 322, 323, 539, 0, 0, 0, 324, 0, 325,
	0, 0, 0, 326, 327, 540, 541, 328, 329, 0,
	330, 542, 0, 543, 331, 0, 332, 333, 334, 335,
	336, 2578, 545, 546, 393, 0, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 242, 343, 344, 346,
	0, 0, 345, 547, 548, 0, 549, 0, 347, 348,
	0, 550, 0, 349, 350, 351, 0, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 551, 0, 363, 364, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 0, 384, 385, 386, 389, 390, 388, 0,
	387, 0, 243, 0, 391, 0, 552, 392, 553, 394,
	395, 0, 0, 396, 0, 0, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 0, 403, 0, 555, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 558, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	560, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 561,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 0, 462, 463, 461, 464, 465, 466,
	0, 467, 451, 452, 468, 469, 0, 470, 471, 472,
	473, 474, 475, 562, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 563, 482, 483, 484, 485, 564,
	0, 488, 489, 0, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 565, 566, 567, 568,
	0, 504, 0, 498, 499, 569, 500, 570, 0, 501,
	502, 503, 0, 505, 506, 0, 0, 507, 508, 509,
	511, 512, 510, 513, 0, 514, 0, 0, 515, 516,
	517, 571, 572, 573, 0, 519, 518, 574, 2050, 0,
	238, 0, 520, 521, 575, 522, 523, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 0, 0, 266,
	530, 531, 532, 0, 267, 268, 533, 0, 0, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 0, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 0, 326, 327,
	540, 541, 328, 329, 0, 330, 542, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 544, 545, 546, 393,
	0, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 0, 345, 547, 548,
	0, 549, 0, 347, 348, 0, 550, 0, 349, 350,
	351, 0, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 551, 0,
	363, 364, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 0, 384, 385,
	386, 389, 390, 388, 0, 387, 0, 243, 0, 391,
	0, 552, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	0, 403, 0, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 0, 467, 451, 452, 468,
	469, 0, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 0, 488, 489, 0, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	569, 500, 570, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 0,
	514, 0, 0, 515, 516, 517, 571, 572, 573, 238,
	519, 518, 574, 0, 0, 0, 0, 520, 521, 575,
	522, 523, 524, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 544, 545, 546, 393, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 547, 548, 0,
	549, 0, 347, 348, 0, 550, 0, 349, 350, 351,
	0, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 0, 363,
	364, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 0, 384, 385, 386,
	389, 390, 388, 0, 387, 0, 243, 0, 391, 0,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 0,
	403, 0, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	0, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 1972,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 0, 519,
	518, 574, 1977, 0, 238, 0, 520, 521, 575, 522,
	523, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 0, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	1976, 545, 546, 393, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	0, 345, 547, 548, 0, 549, 0, 347, 348, 0,
	550, 0, 349, 350, 351, 0, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 0, 363, 364, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 0, 384, 385, 386, 389, 390, 388, 0, 387,
	0, 243, 0, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 0, 403, 0, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 0, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 0, 519, 518, 574, 1965, 0, 238,
	0, 520, 521, 575, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 1967, 545, 546, 393, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 547, 548, 0,
	549, 0, 347, 348, 0, 550, 0, 349, 350, 351,
	0, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 0, 363,
	364, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 0, 384, 385, 386,
	389, 390, 388, 0, 387, 0, 243, 0, 391, 0,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 0,
	403, 0, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	0, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 0, 519,
	518, 574, 1413, 0, 238, 0, 520, 521, 575, 522,
	523, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 0, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	1412, 545, 546, 393, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	0, 345, 547, 548, 0, 549, 0, 347, 348, 0,
	550, 0, 349, 350, 351, 0, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 0, 363, 364, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 0, 384, 385, 386, 389, 390, 388, 0, 387,
	0, 243, 0, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 0, 403, 0, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 0, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 0, 519, 518, 574, 1404, 0, 238,
	0, 520, 521, 575, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 1403, 545, 546, 393, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 547, 548, 0,
	549, 0, 347, 348, 0, 550, 0, 349, 350, 351,
	0, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 0, 363,
	364, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 0, 384, 385, 386,
	389, 390, 388, 0, 387, 0, 243, 0, 391, 0,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 0,
	403, 0, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	0, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 0, 519,
	518, 574, 1401, 0, 238, 0, 520, 521, 575, 522,
	523, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 0, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	1400, 545, 546, 393, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	0, 345, 547, 548, 0, 549, 0, 347, 348, 0,
	550, 0, 349, 350, 351, 0, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 0, 363, 364, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 0, 384, 385, 386, 389, 390, 388, 0, 387,
	0, 243, 0, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 0, 403, 0, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 0, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 0, 519, 518, 574, 1397, 0, 238,
	0, 520, 521, 575, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 1396, 545, 546, 393, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 547, 548, 0,
	549, 0, 347, 348, 0, 550, 0, 349, 350, 351,
	0, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 0, 363,
	364, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 0, 384, 385, 386,
	389, 390, 388, 0, 387, 0, 243, 0, 391, 0,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 0,
	403, 0, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	0, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 0, 519,
	518, 574, 1354, 0, 238, 0, 520, 521, 575, 522,
	523, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 0, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	544, 545, 546, 393, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	0, 345, 547, 548, 0, 549, 0, 347, 348, 0,
	550, 0, 349, 350, 351, 0, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 0, 363, 364, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 0, 384, 385, 386, 389, 390, 388, 0, 387,
	0, 243, 0, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 0, 403, 0, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 0, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 0, 519, 518, 574, 1270, 0, 238,
	0, 520, 521, 575, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 544, 545, 546, 393, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 547, 548, 0,
	549, 0, 347, 348, 0, 550, 0, 349, 350, 351,
	0, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 0, 363,
	364, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 0, 384, 385, 386,
	389, 390, 388, 0, 387, 0, 243, 0, 391, 0,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 0,
	403, 0, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	0, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 0, 519,
	518, 574, 1263, 0, 238, 0, 520, 521, 575, 522,
	523, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 0, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	1265, 545, 546, 393, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	0, 345, 547, 548, 0, 549, 0, 347, 348, 0,
	550, 0, 349, 350, 351, 0, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 0, 363, 364, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 0, 384, 385, 386, 389, 390, 388, 0, 387,
	0, 243, 0, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 0, 403, 0, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 0, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 0, 519, 518, 574, 577, 0, 238,
	0, 520, 521, 575, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 544, 545, 546, 393, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 547, 548, 0,
	549, 0, 347, 348, 0, 550, 0, 349, 350, 351,
	0, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 0, 363,
	364, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 0, 384, 385, 386,
	389, 390, 388, 0, 387, 0, 243, 0, 391, 0,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 0,
	403, 0, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	0, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 0, 519,
	518, 574, 229, 0, 238, 0, 520, 521, 575, 522,
	523, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 241, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 0, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	544, 545, 546, 393, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 242, 343, 344, 346, 0,
	0, 345, 547, 548, 0, 549, 0, 347, 348, 0,
	550, 0, 349, 350, 351, 0, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 0, 363, 364, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 0, 384, 385, 386, 389, 390, 388, 0, 387,
	0, 243, 0, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 0, 403, 0, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 0, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 238, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 532, 0, 267, 268, 533,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 241, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 242, 343, 344, 346, 0, 0,
	345, 547, 548, 0, 549, 0, 347, 348, 0, 550,
	0, 349, 350, 351, 0, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 551, 0, 363, 364, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	0, 384, 385, 386, 389, 390, 388, 0, 387, 0,
	243, 0, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 0, 403, 0, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 0, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 238, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 0, 267, 268, 533, 0,
	0, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 599, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 290, 0, 291, 534,
	535, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 0,
	326, 327, 540, 541, 328, 329, 600, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 544, 545,
	546, 393, 0, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 0, 343, 344, 346, 0, 0, 345,
	547, 548, 0, 549, 0, 347, 348, 0, 550, 0,
	349, 350, 351, 0, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 0, 363, 364, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 0,
	384, 385, 386, 389, 390, 388, 0, 387, 0, 0,
	0, 391, 0, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 0, 403, 0, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	601, 462, 463, 461, 464, 465, 466, 0, 467, 451,
	452, 468, 469, 0, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 238, 519, 518, 574, 0, 0, 0, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 530, 531, 532, 0, 267, 268, 533, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 2081, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 0,
	241, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 540, 541, 328, 329, 0, 330, 542, 0, 543,
	331, 0, 332, 333, 334, 335, 336, 544, 545, 546,
	393, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 242, 343, 344, 346, 0, 0, 345, 547,
	548, 0, 549, 0, 347, 348, 0, 550, 0, 349,
	350, 351, 0, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 551,
	0, 363, 364, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 0, 384,
	385, 386, 389, 390, 388, 0, 387, 0, 243, 0,
	391, 0, 552, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 0, 403, 0, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 0, 467, 451, 452,
	468, 469, 0, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 565, 566, 567, 568, 0, 504, 0, 498,
	499, 569, 500, 570, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	0, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	238, 519, 518, 574, 0, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 0, 0, 266,
	530, 531, 532, 0, 267, 268, 533, 0, 0, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 2079, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 0, 241,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 0, 326, 327,
	540, 541, 328, 329, 0, 330, 542, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 544, 545, 546, 393,
	0, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 242, 343, 344, 346, 0, 0, 345, 547, 548,
	0, 549, 0, 347, 348, 0, 550, 0, 349, 350,
	351, 0, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 551, 0,
	363, 364, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 0, 384, 385,
	386, 389, 390, 388, 0, 387, 0, 243, 0, 391,
	0, 552, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	0, 403, 0, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 0, 467, 451, 452, 468,
	469, 0, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 0, 488, 489, 0, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	569, 500, 570, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 0,
	514, 0, 0, 515, 516, 517, 571, 572, 573, 238,
	519, 518, 574, 0, 0, 0, 0, 520, 521, 575,
	522, 523, 524, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 2077, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 241, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 544, 545, 546, 393, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	242, 343, 344, 346, 0, 0, 345, 547, 548, 0,
	549, 0, 347, 348, 0, 550, 0, 349, 350, 351,
	0, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 0, 363,
	364, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 0, 384, 385, 386,
	389, 390, 388, 0, 387, 0, 243, 0, 391, 0,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 0,
	403, 0, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	0, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 238, 519,
	518, 574, 0, 0, 0, 0, 520, 521, 575, 522,
	523, 524, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 526, 527, 0, 259, 528, 260, 529, 0, 261,
	262, 263, 264, 265, 0, 0, 0, 266, 530, 531,
	532, 0, 267, 268, 533, 0, 0, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 290, 0, 291, 534, 535, 0, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 301, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 536, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 537, 538, 0, 241, 0, 0,
	0, 0, 0, 321, 322, 323, 539, 0, 0, 0,
	324, 0, 325, 0, 0, 0, 326, 327, 540, 541,
	328, 329, 0, 330, 542, 0, 543, 331, 0, 332,
	333, 334, 335, 336, 2015, 545, 546, 393, 0, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 242,
	343, 344, 346, 0, 0, 345, 547, 548, 0, 549,
	0, 347, 348, 0, 550, 0, 349, 350, 351, 0,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	0, 359, 361, 360, 0, 362, 551, 0, 363, 364,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 382, 0, 384, 385, 386, 389,
	390, 388, 0, 387, 0, 243, 0, 391, 0, 552,
	392, 553, 394, 395, 0, 0, 396, 0, 0, 0,
	398, 399, 400, 0, 0, 401, 402, 554, 0, 403,
	0, 555, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 415, 556, 557, 558, 416,
	559, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 560, 428, 427, 429, 0, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 561, 446, 0, 447, 448, 454, 455, 449,
	450, 456, 457, 458, 459, 460, 0, 462, 463, 461,
	464, 465, 466, 0, 467, 451, 452, 468, 469, 0,
	470, 471, 472, 473, 474, 475, 562, 0, 476, 0,
	477, 478, 479, 480, 453, 481, 486, 563, 482, 483,
	484, 485, 564, 0, 488, 489, 0, 487, 0, 490,
	491, 492, 493, 494, 495, 315, 496, 0, 497, 565,
	566, 567, 568, 0, 504, 0, 498, 499, 569, 500,
	570, 0, 501, 502, 503, 0, 505, 506, 0, 0,
	507, 508, 509, 511, 512, 510, 513, 0, 514, 0,
	0, 515, 516, 517, 571, 572, 573, 0, 519, 518,
	574, 761, 0, 238, 0, 520, 521, 575, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 532, 0, 267, 268, 533,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 547, 548, 0, 549, 760, 347, 348, 0, 550,
	0, 349, 350, 351, 0, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 551, 0, 363, 364, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	0, 384, 385, 386, 389, 390, 388, 0, 387, 0,
	0, 0, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 0, 403, 0, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 0, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 759, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 238, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 0, 267, 268, 533, 0,
	0, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 290, 0, 291, 534,
	535, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 2647, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 0,
	326, 327, 540, 541, 328, 329, 0, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 544, 545,
	546, 393, 0, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 0, 343, 344, 346, 0, 0, 345,
	547, 548, 0, 549, 0, 347, 348, 0, 550, 0,
	349, 350, 351, 0, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 0, 363, 364, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 0,
	384, 385, 386, 389, 390, 388, 0, 387, 0, 0,
	0, 391, 0, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 0, 403, 0, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 3613, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 0, 467, 451,
	452, 468, 469, 0, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 0, 519, 518, 574, 586, 0, 238, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	585, 250, 251, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 544, 545, 546, 393, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 0, 345, 547, 548, 0, 549, 0,
	347, 348, 0, 550, 0, 349, 350, 351, 0, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 0, 363, 364, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 0, 384, 385, 386, 389, 390,
	388, 0, 387, 0, 0, 0, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 0, 403, 0,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	584, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 0, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 0, 519, 518, 574,
	238, 2634, 0, 0, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 0, 0, 266,
	530, 531, 532, 0, 267, 268, 533, 0, 0, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 0, 326, 327,
	540, 541, 328, 329, 0, 330, 542, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 544, 545, 546, 393,
	0, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 0, 343, 344, 346, 0, 0, 345, 547, 548,
	0, 549, 0, 347, 348, 0, 550, 0, 349, 350,
	351, 0, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 551, 0,
	363, 364, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 0, 384, 385,
	386, 389, 390, 388, 0, 387, 0, 0, 0, 391,
	0, 552, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	0, 403, 0, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 0, 467, 451, 452, 468,
	469, 0, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 0, 488, 489, 0, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	569, 500, 570, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 0,
	514, 0, 0, 515, 516, 517, 571, 572, 573, 0,
	519, 518, 574, 238, 3623, 0, 0, 520, 521, 575,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 532, 0, 267, 268, 533,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 547, 548, 0, 549, 0, 347, 348, 0, 550,
	0, 349, 350, 351, 0, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 551, 0, 363, 364, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	0, 384, 385, 386, 389, 390, 388, 0, 387, 0,
	0, 0, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 0, 403, 0, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 0, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 238, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 0, 267, 268, 533, 0,
	0, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 290, 0, 291, 534,
	535, 3344, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 0,
	326, 327, 540, 541, 328, 329, 0, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 544, 545,
	546, 393, 0, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 0, 343, 344, 346, 0, 0, 345,
	547, 548, 0, 549, 0, 347, 348, 0, 550, 0,
	349, 350, 351, 0, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 0, 363, 364, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 0,
	384, 385, 386, 389, 390, 388, 0, 387, 0, 0,
	0, 391, 0, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 0, 403, 0, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 0, 467, 451,
	452, 468, 469, 0, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 238, 519, 518, 574, 0, 0, 0, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 525, 0, 2386, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 530, 531, 532, 0, 267, 268, 533, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 540, 541, 328, 329, 0, 330, 542, 0, 543,
	331, 0, 332, 333, 334, 335, 336, 544, 545, 546,
	393, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 547,
	548, 0, 549, 0, 347, 348, 0, 550, 0, 349,
	350, 351, 0, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 551,
	0, 363, 364, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 0, 384,
	385, 386, 389, 390, 388, 0, 387, 0, 0, 0,
	391, 0, 552, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 0, 403, 0, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 0, 467, 451, 452,
	468, 469, 0, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 565, 566, 567, 568, 0, 504, 0, 498,
	499, 569, 500, 570, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	0, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	0, 519, 518, 574, 238, 2634, 0, 0, 520, 521,
	575, 522, 523, 524, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 0, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	544, 545, 546, 393, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 0, 343, 344, 346, 0,
	0, 345, 547, 548, 0, 549, 0, 347, 348, 0,
	550, 0, 349, 350, 351, 0, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 0, 363, 364, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 0, 384, 385, 386, 389, 390, 388, 0, 387,
	0, 0, 0, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 2631, 0,
	0, 401, 402, 554, 0, 403, 0, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 0, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 238, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 2058, 250, 251, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 532, 0, 267, 268, 533,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 547, 548, 0, 549, 0, 347, 348, 0, 550,
	0, 349, 350, 351, 0, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 551, 0, 363, 364, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	0, 384, 385, 386, 389, 390, 388, 0, 387, 0,
	0, 0, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 0, 403, 0, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 0, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 0, 519, 518, 574, 2048, 0, 238, 0,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 526, 527, 0, 259, 528, 260, 529, 0, 261,
	262, 263, 264, 265, 0, 0, 0, 266, 530, 531,
	532, 0, 267, 268, 533, 0, 0, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 290, 0, 291, 534, 535, 0, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 301, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 536, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 537, 538, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 539, 0, 0, 0,
	324, 0, 325, 0, 0, 0, 326, 327, 540, 541,
	328, 329, 0, 330, 542, 0, 543, 331, 0, 332,
	333, 334, 335, 336, 544, 545, 546, 393, 0, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 0,
	343, 344, 346, 0, 0, 345, 547, 548, 0, 549,
	0, 347, 348, 0, 550, 0, 349, 350, 351, 0,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	0, 359, 361, 360, 0, 362, 551, 0, 363, 364,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 382, 0, 384, 385, 386, 389,
	390, 388, 0, 387, 0, 0, 0, 391, 0, 552,
	392, 553, 394, 395, 0, 0, 396, 0, 0, 0,
	398, 399, 400, 0, 0, 401, 402, 554, 0, 403,
	0, 555, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 415, 556, 557, 558, 416,
	559, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 560, 428, 427, 429, 0, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 561, 446, 0, 447, 448, 454, 455, 449,
	450, 456, 457, 458, 459, 460, 0, 462, 463, 461,
	464, 465, 466, 0, 467, 451, 452, 468, 469, 0,
	470, 471, 472, 473, 474, 475, 562, 0, 476, 0,
	477, 478, 479, 480, 453, 481, 486, 563, 482, 483,
	484, 485, 564, 0, 488, 489, 0, 487, 0, 490,
	491, 492, 493, 494, 495, 315, 496, 0, 497, 565,
	566, 567, 568, 0, 504, 0, 498, 499, 569, 500,
	570, 0, 501, 502, 503, 0, 505, 506, 0, 0,
	507, 508, 509, 511, 512, 510, 513, 0, 514, 0,
	0, 515, 516, 517, 571, 572, 573, 0, 519, 518,
	574, 627, 0, 238, 0, 520, 521, 575, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 252,
	253, 1129, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 1127, 0, 267, 268, 533,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 547, 548, 0, 549, 0, 347, 348, 0, 550,
	0, 349, 350, 351, 0, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 551, 0, 363, 364, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 628,
	0, 384, 385, 386, 389, 390, 388, 0, 387, 0,
	0, 0, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 0, 403, 0, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 624, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 1130, 466, 0, 467,
	451, 452, 468, 469, 0, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 623, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 0, 519, 518, 574, 627, 0, 238, 0,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 526, 527, 0, 259, 528, 260, 529, 0, 261,
	262, 263, 264, 265, 0, 0, 0, 266, 530, 531,
	532, 0, 267, 617, 533, 0, 0, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 290, 0, 291, 534, 535, 0, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 301, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 536, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 537, 538, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 539, 0, 0, 0,
	324, 0, 325, 0, 0, 0, 326, 327, 540, 541,
	328, 329, 0, 330, 542, 0, 543, 331, 0, 332,
	333, 334, 335, 336, 544, 545, 546, 393, 0, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 0,
	343, 344, 346, 0, 0, 345, 547, 548, 0, 549,
	0, 347, 348, 0, 550, 0, 349, 350, 351, 0,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	0, 359, 361, 360, 0, 362, 551, 0, 363, 364,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 628, 0, 384, 385, 386, 389,
	390, 388, 0, 387, 0, 0, 0, 391, 0, 552,
	392, 553, 394, 395, 0, 0, 396, 0, 0, 0,
	398, 399, 400, 0, 0, 401, 402, 554, 0, 403,
	0, 555, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 415, 556, 557, 558, 416,
	559, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 560, 428, 427, 429, 0, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 561, 446, 0, 447, 448, 454, 455, 449,
	450, 624, 457, 458, 459, 460, 0, 462, 463, 461,
	464, 1436, 466, 0, 467, 451, 452, 468, 469, 0,
	470, 471, 472, 473, 474, 475, 562, 0, 476, 0,
	477, 478, 479, 480, 453, 481, 486, 563, 482, 483,
	484, 485, 564, 0, 488, 489, 0, 487, 0, 490,
	491, 492, 493, 494, 495, 315, 496, 0, 497, 623,
	566, 567, 568, 0, 504, 0, 498, 499, 569, 500,
	570, 0, 501, 502, 503, 0, 505, 506, 0, 0,
	507, 508, 509, 511, 512, 510, 513, 0, 514, 0,
	0, 515, 516, 517, 571, 572, 573, 0, 519, 518,
	574, 1417, 0, 238, 0, 520, 521, 575, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 532, 0, 267, 268, 533,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 1416,
	545, 546, 393, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 547, 548, 0, 549, 0, 347, 348, 0, 550,
	0, 349, 350, 351, 0, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 551, 0, 363, 364, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	0, 384, 385, 386, 389, 390, 388, 0, 387, 0,
	0, 0, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 0, 403, 0, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 0, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 0, 519, 518, 574, 1410, 0, 238, 0,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 526, 527, 0, 259, 528, 260, 529, 0, 261,
	262, 263, 264, 265, 0, 0, 0, 266, 530, 531,
	532, 0, 267, 268, 533, 0, 0, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 290, 0, 291, 534, 535, 0, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 301, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 536, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 537, 538, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 539, 0, 0, 0,
	324, 0, 325, 0, 0, 0, 326, 327, 540, 541,
	328, 329, 0, 330, 542, 0, 543, 331, 0, 332,
	333, 334, 335, 336, 1409, 545, 546, 393, 0, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 0,
	343, 344, 346, 0, 0, 345, 547, 548, 0, 549,
	0, 347, 348, 0, 550, 0, 349, 350, 351, 0,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	0, 359, 361, 360, 0, 362, 551, 0, 363, 364,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 382, 0, 384, 385, 386, 389,
	390, 388, 0, 387, 0, 0, 0, 391, 0, 552,
	392, 553, 394, 395, 0, 0, 396, 0, 0, 0,
	398, 399, 400, 0, 0, 401, 402, 554, 0, 403,
	0, 555, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 415, 556, 557, 558, 416,
	559, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 560, 428, 427, 429, 0, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 561, 446, 0, 447, 448, 454, 455, 449,
	450, 456, 457, 458, 459, 460, 0, 462, 463, 461,
	464, 465, 466, 0, 467, 451, 452, 468, 469, 0,
	470, 471, 472, 473, 474, 475, 562, 0, 476, 0,
	477, 478, 479, 480, 453, 481, 486, 563, 482, 483,
	484, 485, 564, 0, 488, 489, 0, 487, 0, 490,
	491, 492, 493, 494, 495, 315, 496, 0, 497, 565,
	566, 567, 568, 0, 504, 0, 498, 499, 569, 500,
	570, 0, 501, 502, 503, 0, 505, 506, 0, 0,
	507, 508, 509, 511, 512, 510, 513, 0, 514, 0,
	0, 515, 516, 517, 571, 572, 573, 0, 519, 518,
	574, 1360, 0, 238, 0, 520, 521, 575, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 532, 0, 267, 268, 533,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 1359,
	545, 546, 393, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 547, 548, 0, 549, 0, 347, 348, 0, 550,
	0, 349, 350, 351, 0, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 551, 0, 363, 364, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	0, 384, 385, 386, 389, 390, 388, 0, 387, 0,
	0, 0, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 0, 403, 0, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 0, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 0, 519, 518, 574, 1346, 0, 238, 0,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 526, 527, 0, 259, 528, 260, 529, 0, 261,
	262, 263, 264, 265, 0, 0, 0, 266, 530, 531,
	532, 0, 267, 268, 533, 0, 0, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 290, 0, 291, 534, 535, 0, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 301, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 536, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 537, 538, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 539, 0, 0, 0,
	324, 0, 325, 0, 0, 0, 326, 327, 540, 541,
	328, 329, 0, 330, 542, 0, 543, 331, 0, 332,
	333, 334, 335, 336, 1345, 545, 546, 393, 0, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 0,
	343, 344, 346, 0, 0, 345, 547, 548, 0, 549,
	0, 347, 348, 0, 550, 0, 349, 350, 351, 0,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	0, 359, 361, 360, 0, 362, 551, 0, 363, 364,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 382, 0, 384, 385, 386, 389,
	390, 388, 0, 387, 0, 0, 0, 391, 0, 552,
	392, 553, 394, 395, 0, 0, 396, 0, 0, 0,
	398, 399, 400, 0, 0, 401, 402, 554, 0, 403,
	0, 555, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 415, 556, 557, 558, 416,
	559, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 560, 428, 427, 429, 0, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 561, 446, 0, 447, 448, 454, 455, 449,
	450, 456, 457, 458, 459, 460, 0, 462, 463, 461,
	464, 465, 466, 0, 467, 451, 452, 468, 469, 0,
	470, 471, 472, 473, 474, 475, 562, 0, 476, 0,
	477, 478, 479, 480, 453, 481, 486, 563, 482, 483,
	484, 485, 564, 0, 488, 489, 0, 487, 0, 490,
	491, 492, 493, 494, 495, 315, 496, 0, 497, 565,
	566, 567, 568, 0, 504, 0, 498, 499, 569, 500,
	570, 0, 501, 502, 503, 0, 505, 506, 0, 0,
	507, 508, 509, 511, 512, 510, 513, 0, 514, 0,
	0, 515, 516, 517, 571, 572, 573, 0, 519, 518,
	574, 1341, 0, 238, 0, 520, 521, 575, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 532, 0, 267, 268, 533,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 547, 548, 0, 549, 0, 347, 348, 0, 550,
	0, 349, 350, 351, 0, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 551, 0, 363, 364, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	0, 384, 385, 386, 389, 390, 388, 0, 387, 0,
	0, 0, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 0, 403, 0, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 0, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 0, 519, 518, 574, 1273, 0, 238, 0,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 526, 527, 0, 259, 528, 260, 529, 0, 261,
	262, 263, 264, 265, 0, 0, 0, 266, 530, 531,
	532, 0, 267, 268, 533, 0, 0, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 290, 0, 291, 534, 535, 0, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 301, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 536, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 537, 538, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 539, 0, 0, 0,
	324, 0, 325, 0, 0, 0, 326, 327, 540, 541,
	328, 329, 0, 330, 542, 0, 543, 331, 0, 332,
	333, 334, 335, 336, 544, 545, 546, 393, 0, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 0,
	343, 344, 346, 0, 0, 345, 547, 548, 0, 549,
	0, 347, 348, 0, 550, 0, 349, 350, 351, 0,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	0, 359, 361, 360, 0, 362, 551, 0, 363, 364,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 382, 0, 384, 385, 386, 389,
	390, 388, 0, 387, 0, 0, 0, 391, 0, 552,
	392, 553, 394, 395, 0, 0, 396, 0, 0, 0,
	398, 399, 400, 0, 0, 401, 402, 554, 0, 403,
	0, 555, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 415, 556, 557, 558, 416,
	559, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 560, 428, 427, 429, 0, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 561, 446, 0, 447, 448, 454, 455, 449,
	450, 456, 457, 458, 459, 460, 0, 462, 463, 461,
	464, 465, 466, 0, 467, 451, 452, 468, 469, 0,
	470, 471, 472, 473, 474, 475, 562, 0, 476, 0,
	477, 478, 479, 480, 453, 481, 486, 563, 482, 483,
	484, 485, 564, 0, 488, 489, 0, 487, 0, 490,
	491, 492, 493, 494, 495, 315, 496, 0, 497, 565,
	566, 567, 568, 0, 504, 0, 498, 499, 569, 500,
	570, 0, 501, 502, 503, 0, 505, 506, 0, 0,
	507, 508, 509, 511, 512, 510, 513, 0, 514, 0,
	0, 515, 516, 517, 571, 572, 573, 0, 519, 518,
	574, 1257, 0, 238, 0, 520, 521, 575, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 532, 0, 267, 268, 533,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 547, 548, 0, 549, 0, 347, 348, 0, 550,
	0, 349, 350, 351, 0, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 551, 0, 363, 364, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	0, 384, 385, 386, 389, 390, 388, 0, 387, 0,
	0, 0, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 0, 403, 0, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 454, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 0, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 0, 519, 518, 574, 627, 0, 238, 0,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 252, 253, 1129, 254, 256, 257,
	258, 526, 527, 0, 259, 528, 260, 529, 0, 261,
	262, 263, 264, 265, 0, 0, 0, 266, 530, 531,
	1127, 0, 267, 268, 533, 0, 0, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 290, 0, 291, 534, 535, 0, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 301, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 536, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 537, 538, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 539, 0, 0, 0,
	324, 0, 325, 0, 0, 0, 326, 327, 540, 541,
	328, 329, 0, 330, 542, 0, 543, 331, 0, 332,
	333, 334, 335, 336, 544, 545, 546, 393, 0, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 0,
	343, 344, 346, 0, 0, 345, 547, 548, 0, 549,
	0, 347, 348, 0, 550, 0, 349, 350, 351, 0,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	0, 359, 361, 360, 0, 362, 551, 0, 363, 364,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 628, 0, 384, 385, 386, 389,
	390, 388, 0, 387, 0, 0, 0, 391, 0, 552,
	392, 553, 394, 395, 0, 0, 396, 0, 0, 0,
	398, 399, 400, 0, 0, 401, 402, 554, 0, 403,
	0, 555, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 415, 556, 557, 558, 416,
	559, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 560, 428, 427, 429, 0, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 561, 446, 0, 447, 448, 454, 455, 449,
	450, 624, 457, 458, 459, 460, 0, 462, 463, 461,
	464, 1130, 466, 0, 467, 451, 452, 468, 469, 0,
	470, 471, 472, 473, 474, 475, 562, 0, 476, 0,
	477, 478, 479, 480, 453, 481, 486, 563, 482, 483,
	484, 485, 564, 0, 488, 489, 0, 487, 0, 490,
	491, 492, 493, 494, 495, 315, 496, 0, 497, 623,
	566, 567, 568, 0, 504, 0, 498, 1128, 569, 500,
	570, 0, 501, 502, 503, 0, 505, 506, 0, 0,
	507, 508, 509, 511, 512, 510, 513, 0, 514, 0,
	0, 515, 516, 517, 571, 572, 573, 238, 519, 518,
	574, 0, 0, 0, 0, 520, 521, 575, 522, 523,
	524, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	1111, 250, 251, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 544, 545, 546, 393, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 0, 345, 547, 548, 0, 549, 0,
	347, 348, 0, 550, 0, 349, 350, 351, 0, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 0, 363, 364, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 0, 384, 385, 386, 389, 390,
	388, 0, 387, 0, 0, 0, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 0, 403, 0,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 0, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 238, 519, 518, 574,
	0, 0, 0, 0, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 633,
	250, 251, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 0,
	267, 268, 533, 0, 0, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 0, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 0, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 0, 343, 344,
	346, 0, 0, 345, 547, 548, 0, 549, 0, 347,
	348, 0, 550, 0, 349, 350, 351, 0, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 0, 363, 364, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 0, 384, 385, 386, 389, 390, 388,
	0, 387, 0, 0, 0, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 0, 403, 0, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 0, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 0, 519, 518, 574, 627,
	0, 238, 0, 520, 521, 575, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 530, 531, 532, 0, 267, 617, 533, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 615, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 540, 541, 328, 329, 0, 330, 542, 0, 543,
	331, 0, 332, 333, 334, 335, 336, 544, 545, 546,
	393, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 547,
	548, 0, 549, 0, 347, 348, 0, 550, 0, 349,
	350, 351, 0, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 551,
	0, 363, 364, 0, 0, 365, 366, 616, 0, 0,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 628, 0, 384,
	385, 386, 389, 390, 388, 0, 387, 0, 0, 0,
	391, 0, 552, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 0, 403, 0, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 618, 446, 0, 447, 448,
	454, 455, 449, 450, 624, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 619, 466, 0, 467, 451, 452,
	468, 469, 0, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 623, 566, 567, 568, 0, 504, 0, 498,
	621, 569, 500, 570, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	0, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	0, 519, 518, 574, 611, 0, 238, 0, 520, 521,
	575, 522, 523, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 0,
	267, 268, 533, 0, 0, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 0, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 0, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 0, 343, 344,
	346, 0, 0, 345, 547, 548, 0, 549, 0, 347,
	348, 0, 550, 0, 349, 350, 351, 0, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 0, 363, 364, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 0, 384, 385, 386, 389, 390, 388,
	0, 387, 0, 0, 0, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 0, 403, 0, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 612, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 0, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 0, 519, 518, 574, 609,
	0, 238, 0, 520, 521, 575, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 530, 531, 532, 0, 267, 268, 533, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 540, 541, 328, 329, 0, 330, 542, 0, 543,
	331, 0, 332, 333, 334, 335, 336, 544, 545, 546,
	393, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 547,
	548, 0, 549, 0, 347, 348, 0, 550, 0, 349,
	350, 351, 0, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 551,
	0, 363, 364, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 0, 384,
	385, 386, 389, 390, 388, 0, 387, 0, 0, 0,
	391, 0, 552, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 0, 403, 0, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 0, 467, 451, 452,
	468, 469, 0, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 565, 566, 567, 568, 0, 504, 0, 498,
	499, 569, 500, 570, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	0, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	0, 519, 518, 574, 603, 0, 238, 0, 520, 521,
	575, 522, 523, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 0,
	267, 268, 533, 0, 0, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 0, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 544, 545, 546, 393, 0, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 0, 343, 344,
	346, 0, 0, 345, 547, 548, 0, 549, 0, 347,
	348, 0, 550, 0, 349, 350, 351, 0, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 0, 363, 364, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 0, 384, 385, 386, 389, 390, 388,
	0, 387, 0, 0, 0, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 0, 403, 0, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 0, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 0, 519, 518, 574, 581,
	0, 238, 0, 520, 521, 575, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 530, 531, 532, 0, 267, 268, 533, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 540, 541, 328, 329, 0, 330, 542, 0, 543,
	331, 0, 332, 333, 334, 335, 336, 544, 545, 546,
	393, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 547,
	548, 0, 549, 0, 347, 348, 0, 550, 0, 349,
	350, 351, 0, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 551,
	0, 363, 364, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 0, 384,
	385, 386, 389, 390, 388, 0, 387, 0, 0, 0,
	391, 0, 552, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 0, 403, 0, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 0, 467, 451, 452,
	468, 469, 0, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 565, 566, 567, 568, 0, 504, 0, 498,
	499, 569, 500, 570, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	0, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	238, 519, 518, 574, 0, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 0, 0, 266,
	530, 531, 532, 0, 267, 268, 533, 0, 0, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 0, 326, 327,
	540, 541, 328, 329, 0, 330, 542, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 544, 545, 546, 393,
	0, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 0, 343, 344, 346, 0, 0, 345, 547, 548,
	0, 549, 0, 347, 348, 0, 550, 0, 349, 350,
	351, 0, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 551, 0,
	363, 364, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 0, 384, 385,
	386, 389, 390, 388, 0, 387, 0, 0, 0, 391,
	0, 552, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	0, 403, 0, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 0, 467, 451, 452, 468,
	469, 0, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 0, 488, 489, 0, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	569, 500, 570, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 0,
	514, 0, 0, 515, 516, 517, 571, 572, 573, 238,
	519, 518, 574, 0, 0, 0, 0, 520, 521, 575,
	522, 523, 524, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 3070, 545, 546, 393, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 0, 345, 547, 548, 0,
	549, 0, 347, 348, 0, 550, 0, 349, 350, 351,
	0, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 0, 363,
	364, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 0, 384, 385, 386,
	389, 390, 388, 0, 387, 0, 0, 0, 391, 0,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 0,
	403, 0, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 428, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	0, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 238, 519,
	518, 574, 0, 0, 0, 0, 520, 521, 575, 522,
	523, 524, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 526, 527, 0, 259, 528, 260, 529, 0, 261,
	262, 263, 264, 265, 0, 0, 0, 266, 530, 531,
	532, 0, 267, 268, 533, 0, 0, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 290, 0, 291, 534, 535, 0, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 301, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 536, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 537, 538, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 539, 0, 0, 0,
	324, 0, 325, 0, 0, 0, 326, 327, 540, 541,
	328, 329, 0, 330, 542, 0, 543, 331, 0, 332,
	333, 334, 335, 336, 3025, 545, 546, 393, 0, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 0,
	343, 344, 346, 0, 0, 345, 547, 548, 0, 549,
	0, 347, 348, 0, 550, 0, 349, 350, 351, 0,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	0, 359, 361, 360, 0, 362, 551, 0, 363, 364,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 382, 0, 384, 385, 386, 389,
	390, 388, 0, 387, 0, 0, 0, 391, 0, 552,
	392, 553, 394, 395, 0, 0, 396, 0, 0, 0,
	398, 399, 400, 0, 0, 401, 402, 554, 0, 403,
	0, 555, 404, 405, 397, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 415, 556, 557, 558, 416,
	559, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	424, 425, 426, 560, 428, 427, 429, 0, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 561, 446, 0, 447, 448, 454, 455, 449,
	450, 456, 457, 458, 459, 460, 0, 462, 463, 461,
	464, 465, 466, 0, 467, 451, 452, 468, 469, 0,
	470, 471, 472, 473, 474, 475, 562, 0, 476, 0,
	477, 478, 479, 480, 453, 481, 486, 563, 482, 483,
	484, 485, 564, 0, 488, 489, 0, 487, 0, 490,
	491, 492, 493, 494, 495, 315, 496, 0, 497, 565,
	566, 567, 568, 0, 504, 0, 498, 499, 569, 500,
	570, 0, 501, 502, 503, 0, 505, 506, 0, 0,
	507, 508, 509, 511, 512, 510, 513, 0, 514, 0,
	0, 515, 516, 517, 571, 572, 573, 238, 519, 518,
	574, 0, 0, 0, 0, 520, 521, 575, 522, 523,
	524, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 250, 251, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, 252, 253, 255, 254, 256, 257, 258,
	526, 527, 0, 259, 528, 260, 529, 0, 261, 262,
	263, 264, 265, 0, 0, 0, 266, 530, 531, 532,
	0, 267, 268, 533, 0, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 277, 278, 279, 276,
	0, 280, 0, 281, 282, 283, 0, 284, 0, 285,
	286, 0, 0, 0, 0, 0, 0, 0, 287, 288,
	289, 290, 0, 291, 534, 535, 0, 295, 292, 293,
	0, 296, 294, 0, 297, 298, 299, 0, 0, 300,
	301, 302, 0, 303, 304, 0, 305, 306, 307, 0,
	308, 309, 536, 310, 311, 312, 314, 316, 313, 317,
	318, 319, 320, 537, 538, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 323, 539, 0, 0, 0, 324,
	0, 325, 0, 0, 0, 326, 327, 540, 541, 328,
	329, 0, 330, 542, 0, 543, 331, 0, 332, 333,
	334, 335, 336, 2966, 545, 546, 393, 0, 337, 338,
	0, 339, 340, 341, 342, 0, 0, 0, 0, 343,
	344, 346, 0, 0, 345, 547, 548, 0, 549, 0,
	347, 348, 0, 550, 0, 349, 350, 351, 0, 352,
	0, 0, 0, 353, 354, 355, 356, 357, 358, 0,
	359, 361, 360, 0, 362, 551, 0, 363, 364, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 370, 371,
	0, 372, 373, 375, 377, 374, 376, 381, 378, 379,
	380, 383, 0, 382, 0, 384, 385, 386, 389, 390,
	388, 0, 387, 0, 0, 0, 391, 0, 552, 392,
	553, 394, 395, 0, 0, 396, 0, 0, 0, 398,
	399, 400, 0, 0, 401, 402, 554, 0, 403, 0,
	555, 404, 405, 397, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 415, 556, 557, 558, 416, 559,
	417, 418, 0, 419, 0, 420, 421, 422, 423, 424,
	425, 426, 560, 428, 427, 429, 0, 0, 0, 0,
	0, 0, 430, 0, 432, 433, 434, 431, 435, 436,
	437, 438, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 561, 446, 0, 447, 448, 454, 455, 449, 450,
	456, 457, 458, 459, 460, 0, 462, 463, 461, 464,
	465, 466, 0, 467, 451, 452, 468, 469, 0, 470,
	471, 472, 473, 474, 475, 562, 0, 476, 0, 477,
	478, 479, 480, 453, 481, 486, 563, 482, 483, 484,
	485, 564, 0, 488, 489, 0, 487, 0, 490, 491,
	492, 493, 494, 495, 315, 496, 0, 497, 565, 566,
	567, 568, 0, 504, 0, 498, 499, 569, 500, 570,
	0, 501, 502, 503, 0, 505, 506, 0, 0, 507,
	508, 509, 511, 512, 510, 513, 0, 514, 0, 0,
	515, 516, 517, 571, 572, 573, 238, 519, 518, 574,
	0, 0, 0, 0, 520, 521, 575, 522, 523, 524,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	250, 251, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 252, 253, 255, 254, 256, 257, 258, 526,
	527, 0, 259, 528, 260, 529, 0, 261, 262, 263,
	264, 265, 0, 0, 0, 266, 530, 531, 532, 0,
	267, 268, 533, 0, 0, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 277, 278, 279, 276, 0,
	280, 0, 281, 282, 283, 0, 284, 0, 285, 286,
	0, 0, 0, 0, 0, 0, 0, 287, 288, 289,
	290, 0, 291, 534, 535, 0, 295, 292, 293, 0,
	296, 294, 0, 297, 298, 299, 0, 0, 300, 301,
	302, 0, 303, 304, 0, 305, 306, 307, 0, 308,
	309, 536, 310, 311, 312, 314, 316, 313, 317, 318,
	319, 320, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 321, 322, 323, 539, 0, 0, 0, 324, 0,
	325, 0, 0, 0, 326, 327, 540, 541, 328, 329,
	0, 330, 542, 0, 543, 331, 0, 332, 333, 334,
	335, 336, 2964, 545, 546, 393, 0, 337, 338, 0,
	339, 340, 341, 342, 0, 0, 0, 0, 343, 344,
	346, 0, 0, 345, 547, 548, 0, 549, 0, 347,
	348, 0, 550, 0, 349, 350, 351, 0, 352, 0,
	0, 0, 353, 354, 355, 356, 357, 358, 0, 359,
	361, 360, 0, 362, 551, 0, 363, 364, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 370, 371, 0,
	372, 373, 375, 377, 374, 376, 381, 378, 379, 380,
	383, 0, 382, 0, 384, 385, 386, 389, 390, 388,
	0, 387, 0, 0, 0, 391, 0, 552, 392, 553,
	394, 395, 0, 0, 396, 0, 0, 0, 398, 399,
	400, 0, 0, 401, 402, 554, 0, 403, 0, 555,
	404, 405, 397, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 415, 556, 557, 558, 416, 559, 417,
	418, 0, 419, 0, 420, 421, 422, 423, 424, 425,
	426, 560, 428, 427, 429, 0, 0, 0, 0, 0,
	0, 430, 0, 432, 433, 434, 431, 435, 436, 437,
	438, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	561, 446, 0, 447, 448, 454, 455, 449, 450, 456,
	457, 458, 459, 460, 0, 462, 463, 461, 464, 465,
	466, 0, 467, 451, 452, 468, 469, 0, 470, 471,
	472, 473, 474, 475, 562, 0, 476, 0, 477, 478,
	479, 480, 453, 481, 486, 563, 482, 483, 484, 485,
	564, 0, 488, 489, 0, 487, 0, 490, 491, 492,
	493, 494, 495, 315, 496, 0, 497, 565, 566, 567,
	568, 0, 504, 0, 498, 499, 569, 500, 570, 0,
	501, 502, 503, 0, 505, 506, 0, 0, 507, 508,
	509, 511, 512, 510, 513, 0, 514, 0, 0, 515,
	516, 517, 571, 572, 573, 238, 519, 518, 574, 0,
	0, 0, 0, 520, 521, 575, 522, 523, 524, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 250,
	251, 0, 0, 0, 0, 0, 525, 0, 0, 0,
	0, 252, 253, 255, 254, 256, 257, 258, 526, 527,
	0, 259, 528, 260, 529, 0, 261, 262, 263, 264,
	265, 0, 0, 0, 266, 530, 531, 532, 0, 267,
	268, 533, 0, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 277, 278, 279, 276, 0, 280,
	0, 281, 282, 283, 0, 284, 0, 285, 286, 0,
	0, 0, 0, 0, 0, 0, 287, 288, 289, 290,
	0, 291, 534, 535, 0, 295, 292, 293, 0, 296,
	294, 0, 297, 298, 299, 0, 0, 300, 301, 302,
	0, 303, 304, 0, 305, 306, 307, 0, 308, 309,
	536, 310, 311, 312, 314, 316, 313, 317, 318, 319,
	320, 537, 538, 0, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 539, 0, 0, 0, 324, 0, 325,
	0, 0, 0, 326, 327, 540, 541, 328, 329, 0,
	330, 542, 0, 543, 331, 0, 332, 333, 334, 335,
	336, 2950, 545, 546, 393, 0, 337, 338, 0, 339,
	340, 341, 342, 0, 0, 0, 0, 343, 344, 346,
	0, 0, 345, 547, 548, 0, 549, 0, 347, 348,
	0, 550, 0, 349, 350, 351, 0, 352, 0, 0,
	0, 353, 354, 355, 356, 357, 358, 0, 359, 361,
	360, 0, 362, 551, 0, 363, 364, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 370, 371, 0, 372,
	373, 375, 377, 374, 376, 381, 378, 379, 380, 383,
	0, 382, 0, 384, 385, 386, 389, 390, 388, 0,
	387, 0, 0, 0, 391, 0, 552, 392, 553, 394,
	395, 0, 0, 396, 0, 0, 0, 398, 399, 400,
	0, 0, 401, 402, 554, 0, 403, 0, 555, 404,
	405, 397, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 415, 556, 557, 558, 416, 559, 417, 418,
	0, 419, 0, 420, 421, 422, 423, 424, 425, 426,
	560, 428, 427, 429, 0, 0, 0, 0, 0, 0,
	430, 0, 432, 433, 434, 431, 435, 436, 437, 438,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 561,
	446, 0, 447, 448, 454, 455, 449, 450, 456, 457,
	458, 459, 460, 0, 462, 463, 461, 464, 465, 466,
	0, 467, 451, 452, 468, 469, 0, 470, 471, 472,
	473, 474, 475, 562, 0, 476, 0, 477, 478, 479,
	480, 453, 481, 486, 563, 482, 483, 484, 485, 564,
	0, 488, 489, 0, 487, 0, 490, 491, 492, 493,
	494, 495, 315, 496, 0, 497, 565, 566, 567, 568,
	0, 504, 0, 498, 499, 569, 500, 570, 0, 501,
	502, 503, 0, 505, 506, 0, 0, 507, 508, 509,
	511, 512, 510, 513, 0, 514, 0, 0, 515, 516,
	517, 571, 572, 573, 238, 519, 518, 574, 0, 0,
	0, 0, 520, 521, 575, 522, 523, 524, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 250, 251,
	0, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	252, 253, 255, 254, 256, 257, 258, 526, 527, 0,
	259, 528, 260, 529, 0, 261, 262, 263, 264, 265,
	0, 0, 0, 266, 530, 531, 532, 0, 267, 268,
	533, 0, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 277, 278, 279, 276, 0, 280, 0,
	281, 282, 283, 0, 284, 0, 285, 286, 0, 0,
	0, 0, 0, 0, 0, 287, 288, 289, 290, 0,
	291, 534, 535, 0, 295, 292, 293, 0, 296, 294,
	0, 297, 298, 299, 0, 0, 300, 301, 302, 0,
	303, 304, 0, 305, 306, 307, 0, 308, 309, 536,
	310, 311, 312, 314, 316, 313, 317, 318, 319, 320,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 539, 0, 0, 0, 324, 0, 325, 0,
	0, 0, 326, 327, 540, 541, 328, 329, 0, 330,
	542, 0, 543, 331, 0, 332, 333, 334, 335, 336,
	2587, 545, 546, 393, 0, 337, 338, 0, 339, 340,
	341, 342, 0, 0, 0, 0, 343, 344, 346, 0,
	0, 345, 547, 548, 0, 549, 0, 347, 348, 0,
	550, 0, 349, 350, 351, 0, 352, 0, 0, 0,
	353, 354, 355, 356, 357, 358, 0, 359, 361, 360,
	0, 362, 551, 0, 363, 364, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 370, 371, 0, 372, 373,
	375, 377, 374, 376, 381, 378, 379, 380, 383, 0,
	382, 0, 384, 385, 386, 389, 390, 388, 0, 387,
	0, 0, 0, 391, 0, 552, 392, 553, 394, 395,
	0, 0, 396, 0, 0, 0, 398, 399, 400, 0,
	0, 401, 402, 554, 0, 403, 0, 555, 404, 405,
	397, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 415, 556, 557, 558, 416, 559, 417, 418, 0,
	419, 0, 420, 421, 422, 423, 424, 425, 426, 560,
	428, 427, 429, 0, 0, 0, 0, 0, 0, 430,
	0, 432, 433, 434, 431, 435, 436, 437, 438, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 561, 446,
	0, 447, 448, 454, 455, 449, 450, 456, 457, 458,
	459, 460, 0, 462, 463, 461, 464, 465, 466, 0,
	467, 451, 452, 468, 469, 0, 470, 471, 472, 473,
	474, 475, 562, 0, 476, 0, 477, 478, 479, 480,
	453, 481, 486, 563, 482, 483, 484, 485, 564, 0,
	488, 489, 0, 487, 0, 490, 491, 492, 493, 494,
	495, 315, 496, 0, 497, 565, 566, 567, 568, 0,
	504, 0, 498, 499, 569, 500, 570, 0, 501, 502,
	503, 0, 505, 506, 0, 0, 507, 508, 509, 511,
	512, 510, 513, 0, 514, 0, 0, 515, 516, 517,
	571, 572, 573, 238, 519, 518, 574, 0, 0, 0,
	0, 520, 521, 575, 522, 523, 524, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 250, 251, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 252,
	253, 255, 254, 256, 257, 258, 526, 527, 0, 259,
	528, 260, 529, 0, 261, 262, 263, 264, 265, 0,
	0, 0, 266, 530, 531, 532, 0, 267, 268, 533,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 277, 278, 279, 276, 0, 280, 0, 281,
	282, 283, 0, 284, 0, 285, 286, 0, 0, 0,
	0, 0, 0, 0, 287, 288, 289, 290, 0, 291,
	534, 535, 0, 295, 292, 293, 0, 296, 294, 0,
	297, 298, 299, 0, 0, 300, 301, 302, 0, 303,
	304, 0, 305, 306, 307, 0, 308, 309, 536, 310,
	311, 312, 314, 316, 313, 317, 318, 319, 320, 537,
	538, 0, 0, 0, 0, 0, 0, 0, 321, 322,
	323, 539, 0, 0, 0, 324, 0, 325, 0, 0,
	0, 326, 327, 540, 541, 328, 329, 0, 330, 542,
	0, 543, 331, 0, 332, 333, 334, 335, 336, 544,
	545, 546, 393, 0, 337, 338, 0, 339, 340, 341,
	342, 0, 0, 0, 0, 343, 344, 346, 0, 0,
	345, 547, 548, 0, 549, 0, 347, 348, 0, 550,
	0, 349, 350, 351, 0, 352, 0, 0, 0, 353,
	354, 355, 356, 357, 358, 0, 359, 361, 360, 0,
	362, 551, 0, 363, 364, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 370, 371, 0, 372, 373, 375,
	377, 374, 376, 381, 378, 379, 380, 383, 0, 382,
	0, 384, 385, 386, 389, 390, 388, 0, 387, 0,
	0, 0, 391, 0, 552, 392, 553, 394, 395, 0,
	0, 396, 0, 0, 0, 398, 399, 400, 0, 0,
	401, 402, 554, 0, 403, 0, 555, 404, 405, 397,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	415, 556, 557, 558, 416, 559, 417, 418, 0, 419,
	0, 420, 421, 422, 423, 424, 425, 426, 560, 428,
	427, 429, 0, 0, 0, 0, 0, 0, 430, 0,
	432, 433, 434, 431, 435, 436, 437, 438, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 561, 446, 0,
	447, 448, 612, 455, 449, 450, 456, 457, 458, 459,
	460, 0, 462, 463, 461, 464, 465, 466, 0, 467,
	451, 452, 468, 469, 0, 470, 471, 472, 473, 474,
	475, 562, 0, 476, 0, 477, 478, 479, 480, 453,
	481, 486, 563, 482, 483, 484, 485, 564, 0, 488,
	489, 0, 487, 0, 490, 491, 492, 493, 494, 495,
	315, 496, 0, 497, 565, 566, 567, 568, 0, 504,
	0, 498, 499, 569, 500, 570, 0, 501, 502, 503,
	0, 505, 506, 0, 0, 507, 508, 509, 511, 512,
	510, 513, 0, 514, 0, 0, 515, 516, 517, 571,
	572, 573, 238, 519, 518, 574, 0, 0, 0, 0,
	520, 521, 575, 522, 523, 524, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 250, 251, 0, 0,
	0, 0, 0, 525, 0, 1997, 0, 0, 252, 253,
	255, 254, 256, 257, 258, 526, 527, 0, 259, 528,
	260, 529, 0, 261, 262, 263, 264, 265, 0, 0,
	0, 266, 530, 531, 532, 0, 267, 268, 533, 0,
	0, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 277, 278, 279, 276, 0, 280, 0, 281, 282,
	283, 0, 284, 0, 285, 286, 0, 0, 0, 0,
	0, 0, 0, 287, 288, 289, 290, 0, 291, 534,
	535, 0, 295, 292, 293, 0, 296, 294, 0, 297,
	298, 299, 0, 0, 300, 301, 302, 0, 303, 304,
	0, 305, 306, 307, 0, 308, 309, 536, 310, 311,
	312, 314, 316, 313, 317, 318, 319, 320, 537, 538,
	0, 0, 0, 0, 0, 0, 0, 321, 322, 323,
	539, 0, 0, 0, 324, 0, 325, 0, 0, 0,
	326, 327, 540, 541, 328, 329, 0, 330, 542, 0,
	543, 331, 0, 332, 333, 334, 335, 336, 544, 545,
	546, 393, 0, 337, 338, 0, 339, 340, 341, 342,
	0, 0, 0, 0, 343, 344, 346, 0, 0, 345,
	547, 548, 0, 549, 0, 347, 348, 0, 550, 0,
	349, 350, 351, 0, 352, 0, 0, 0, 353, 354,
	355, 356, 357, 358, 0, 359, 361, 360, 0, 362,
	551, 0, 363, 364, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 370, 371, 0, 372, 373, 375, 377,
	374, 376, 381, 378, 379, 380, 383, 0, 382, 0,
	384, 385, 386, 389, 390, 388, 0, 387, 0, 0,
	0, 391, 0, 552, 392, 553, 394, 395, 0, 0,
	396, 0, 0, 0, 398, 399, 400, 0, 0, 401,
	402, 554, 0, 403, 0, 555, 404, 405, 397, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 415,
	556, 557, 558, 416, 559, 417, 418, 0, 419, 0,
	420, 421, 422, 423, 424, 425, 426, 560, 428, 427,
	429, 0, 0, 0, 0, 0, 0, 430, 0, 432,
	433, 434, 431, 435, 436, 437, 438, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 561, 446, 0, 447,
	448, 454, 455, 449, 450, 456, 457, 458, 459, 460,
	0, 462, 463, 461, 464, 465, 466, 0, 0, 451,
	452, 468, 469, 0, 470, 471, 472, 473, 474, 475,
	562, 0, 476, 0, 477, 478, 479, 480, 453, 481,
	486, 563, 482, 483, 484, 485, 564, 0, 488, 489,
	0, 487, 0, 490, 491, 492, 493, 494, 495, 315,
	496, 0, 497, 565, 566, 567, 568, 0, 504, 0,
	498, 499, 569, 500, 570, 0, 501, 502, 503, 0,
	505, 506, 0, 0, 507, 508, 509, 511, 512, 510,
	513, 0, 514, 0, 0, 515, 516, 517, 571, 572,
	573, 238, 519, 518, 574, 0, 0, 0, 0, 520,
	521, 575, 522, 523, 524, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 250, 251, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 252, 253, 255,
	254, 256, 257, 258, 526, 527, 0, 259, 528, 260,
	529, 0, 261, 262, 263, 264, 265, 0, 0, 0,
	266, 530, 531, 532, 0, 267, 268, 533, 0, 0,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	277, 278, 279, 276, 0, 280, 0, 281, 282, 283,
	0, 284, 0, 285, 286, 0, 0, 0, 0, 0,
	0, 0, 287, 288, 289, 290, 0, 291, 534, 535,
	0, 295, 292, 293, 0, 296, 294, 0, 297, 298,
	299, 0, 0, 300, 301, 302, 0, 303, 304, 0,
	305, 306, 307, 0, 308, 309, 536, 310, 311, 312,
	314, 316, 313, 317, 318, 319, 320, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 321, 322, 323, 539,
	0, 0, 0, 324, 0, 325, 0, 0, 0, 326,
	327, 540, 541, 328, 329, 0, 330, 542, 0, 543,
	331, 0, 332, 333, 334, 335, 336, 1382, 545, 546,
	393, 0, 337, 338, 0, 339, 340, 341, 342, 0,
	0, 0, 0, 343, 344, 346, 0, 0, 345, 547,
	548, 0, 549, 0, 347, 348, 0, 550, 0, 349,
	350, 351, 0, 352, 0, 0, 0, 353, 354, 355,
	356, 357, 358, 0, 359, 361, 360, 0, 362, 551,
	0, 363, 364, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 370, 371, 0, 372, 373, 375, 377, 374,
	376, 381, 378, 379, 380, 383, 0, 382, 0, 384,
	385, 386, 389, 390, 388, 0, 387, 0, 0, 0,
	391, 0, 552, 392, 553, 394, 395, 0, 0, 396,
	0, 0, 0, 398, 399, 400, 0, 0, 401, 402,
	554, 0, 403, 0, 555, 404, 405, 397, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 415, 556,
	557, 558, 416, 559, 417, 418, 0, 419, 0, 420,
	421, 422, 423, 424, 425, 426, 560, 428, 427, 429,
	0, 0, 0, 0, 0, 0, 430, 0, 432, 433,
	434, 431, 435, 436, 437, 438, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 561, 446, 0, 447, 448,
	454, 455, 449, 450, 456, 457, 458, 459, 460, 0,
	462, 463, 461, 464, 465, 466, 0, 467, 451, 452,
	468, 469, 0, 470, 471, 472, 473, 474, 475, 562,
	0, 476, 0, 477, 478, 479, 480, 453, 481, 486,
	563, 482, 483, 484, 485, 564, 0, 488, 489, 0,
	487, 0, 490, 491, 492, 493, 494, 495, 315, 496,
	0, 497, 565, 566, 567, 568, 0, 504, 0, 498,
	499, 569, 500, 570, 0, 501, 502, 503, 0, 505,
	506, 0, 0, 507, 508, 509, 511, 512, 510, 513,
	0, 514, 0, 0, 515, 516, 517, 571, 572, 573,
	238, 519, 518, 574, 0, 0, 0, 0, 520, 521,
	575, 522, 523, 524, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 250, 251, 0, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 252, 253, 255, 254,
	256, 257, 258, 526, 527, 0, 259, 528, 260, 529,
	0, 261, 262, 263, 264, 265, 0, 0, 0, 266,
	530, 531, 532, 0, 267, 268, 533, 0, 0, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 277,
	278, 279, 276, 0, 280, 0, 281, 282, 283, 0,
	284, 0, 285, 286, 0, 0, 0, 0, 0, 0,
	0, 287, 288, 289, 290, 0, 291, 534, 535, 0,
	295, 292, 293, 0, 296, 294, 0, 297, 298, 299,
	0, 0, 300, 301, 302, 0, 303, 304, 0, 305,
	306, 307, 0, 308, 309, 536, 310, 311, 312, 314,
	316, 313, 317, 318, 319, 320, 537, 538, 0, 0,
	0, 0, 0, 0, 0, 321, 322, 323, 539, 0,
	0, 0, 324, 0, 325, 0, 0, 0, 326, 327,
	540, 541, 328, 329, 0, 330, 542, 0, 543, 331,
	0, 332, 333, 334, 335, 336, 1323, 545, 546, 393,
	0, 337, 338, 0, 339, 340, 341, 342, 0, 0,
	0, 0, 343, 344, 346, 0, 0, 345, 547, 548,
	0, 549, 0, 347, 348, 0, 550, 0, 349, 350,
	351, 0, 352, 0, 0, 0, 353, 354, 355, 356,
	357, 358, 0, 359, 361, 360, 0, 362, 551, 0,
	363, 364, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 370, 371, 0, 372, 373, 375, 377, 374, 376,
	381, 378, 379, 380, 383, 0, 382, 0, 384, 385,
	386, 389, 390, 388, 0, 387, 0, 0, 0, 391,
	0, 552, 392, 553, 394, 395, 0, 0, 396, 0,
	0, 0, 398, 399, 400, 0, 0, 401, 402, 554,
	0, 403, 0, 555, 404, 405, 397, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 415, 556, 557,
	558, 416, 559, 417, 418, 0, 419, 0, 420, 421,
	422, 423, 424, 425, 426, 560, 428, 427, 429, 0,
	0, 0, 0, 0, 0, 430, 0, 432, 433, 434,
	431, 435, 436, 437, 438, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 561, 446, 0, 447, 448, 454,
	455, 449, 450, 456, 457, 458, 459, 460, 0, 462,
	463, 461, 464, 465, 466, 0, 467, 451, 452, 468,
	469, 0, 470, 471, 472, 473, 474, 475, 562, 0,
	476, 0, 477, 478, 479, 480, 453, 481, 486, 563,
	482, 483, 484, 485, 564, 0, 488, 489, 0, 487,
	0, 490, 491, 492, 493, 494, 495, 315, 496, 0,
	497, 565, 566, 567, 568, 0, 504, 0, 498, 499,
	569, 500, 570, 0, 501, 502, 503, 0, 505, 506,
	0, 0, 507, 508, 509, 511, 512, 510, 513, 0,
	514, 0, 0, 515, 516, 517, 571, 572, 573, 238,
	519, 518, 574, 0, 0, 0, 0, 520, 521, 575,
	522, 523, 524, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 250, 251, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 252, 253, 255, 254, 256,
	257, 258, 526, 527, 0, 259, 528, 260, 529, 0,
	261, 262, 263, 264, 265, 0, 0, 0, 266, 530,
	531, 532, 0, 267, 268, 533, 0, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 277, 278,
	279, 276, 0, 280, 0, 281, 282, 283, 0, 284,
	0, 285, 286, 0, 0, 0, 0, 0, 0, 0,
	287, 288, 289, 290, 0, 291, 534, 535, 0, 295,
	292, 293, 0, 296, 294, 0, 297, 298, 299, 0,
	0, 300, 301, 302, 0, 303, 304, 0, 305, 306,
	307, 0, 308, 309, 536, 310, 311, 312, 314, 316,
	313, 317, 318, 319, 320, 537, 538, 0, 0, 0,
	0, 0, 0, 0, 321, 322, 323, 539, 0, 0,
	0, 324, 0, 325, 0, 0, 0, 326, 327, 540,
	541, 328, 329, 0, 330, 542, 0, 543, 331, 0,
	332, 333, 334, 335, 336, 544, 545, 546, 393, 0,
	337, 338, 0, 339, 340, 341, 342, 0, 0, 0,
	0, 343, 344, 346, 0, 0, 345, 547, 548, 0,
	549, 0, 347, 348, 0, 550, 0, 349, 350, 351,
	0, 352, 0, 0, 0, 353, 354, 355, 356, 357,
	358, 0, 359, 361, 360, 0, 362, 551, 0, 363,
	364, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	370, 371, 0, 372, 373, 375, 377, 374, 376, 381,
	378, 379, 380, 383, 0, 382, 0, 384, 385, 386,
	389, 390, 388, 0, 387, 0, 0, 0, 391, 0,
	552, 392, 553, 394, 395, 0, 0, 396, 0, 0,
	0, 398, 399, 400, 0, 0, 401, 402, 554, 0,
	403, 0, 555, 404, 405, 397, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 415, 556, 557, 558,
	416, 559, 417, 418, 0, 419, 0, 420, 421, 422,
	423, 424, 425, 426, 560, 1063, 427, 429, 0, 0,
	0, 0, 0, 0, 430, 0, 432, 433, 434, 431,
	435, 436, 437, 438, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 561, 446, 0, 447, 448, 454, 455,
	449, 450, 456, 457, 458, 459, 460, 0, 462, 463,
	461, 464, 465, 466, 0, 467, 451, 452, 468, 469,
	0, 470, 471, 472, 473, 474, 475, 562, 0, 476,
	0, 477, 478, 479, 480, 453, 481, 486, 563, 482,
	483, 484, 485, 564, 0, 488, 489, 0, 487, 0,
	490, 491, 492, 493, 494, 495, 315, 496, 0, 497,
	565, 566, 567, 568, 0, 504, 0, 498, 499, 569,
	500, 570, 0, 501, 502, 503, 0, 505, 506, 0,
	0, 507, 508, 509, 511, 512, 510, 513, 0, 514,
	0, 0, 515, 516, 517, 571, 572, 573, 238, 519,
	518, 574, 0, 0, 0, 0, 520, 521, 575, 522,
	523, 524, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 250, 251, 0, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 252, 253, 255, 254, 256, 257,
	258, 526, 527, 0, 259, 528, 260, 529, 0, 261,
	262, 263, 264, 265, 0, 0, 0, 266, 530, 531,
	532, 0, 267, 268, 533, 0, 0, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 277, 278, 279,
	276, 0, 280, 0, 281, 282, 283, 0, 284, 0,
	285, 286, 0, 0, 0, 0, 0, 0, 0, 287,
	288, 289, 290, 0, 291, 534, 535, 0, 295, 292,
	293, 0, 296, 294, 0, 297, 298, 299, 0, 0,
	300, 301, 302, 0, 303, 304, 0, 305, 306, 307,
	0, 308, 309, 536, 310, 311, 312, 314, 316, 313,
	317, 318, 319, 320, 537, 538, 0, 0, 0, 0,
	0, 0, 0, 321, 322, 323, 539, 0, 0, 0,
	324, 0, 325, 0, 0, 0, 326, 327, 540, 541,
	328, 329, 0, 330, 542, 0, 543, 0, 0, 332,
	333, 334, 335, 336, 544, 545, 546, 393, 0, 337,
	338, 0, 339, 340, 341, 342, 0, 0, 0, 0,
	343, 344, 346, 0, 0, 345, 547, 548, 0, 549,
	0, 347, 348, 0, 550, 0, 349, 350, 351, 0,
	352, 0, 0, 0, 353, 354, 355, 356, 357, 358,
	0, 359, 361, 360, 0, 362, 551, 0, 363, 364,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 370,
	371, 0, 372, 373, 375, 377, 374, 376, 381, 378,
	379, 380, 383, 0, 382, 0, 384, 385, 386, 389,
	390, 388, 0, 387, 0, 0, 0, 391, 0, 552,
	392, 553, 394, 395, 0, 0, 396, 0, 0, 0,
	398, 399, 400, 0, 0, 401, 402, 554, 0, 403,
	0, 555, 404, 405, 397, 406, 407, 0, 409, 410,
	411, 412, 413, 0, 414, 415, 556, 557, 558, 416,
	559, 417, 418, 0, 419, 0, 420, 421, 422, 423,
	0, 425, 426, 560, 428, 427, 429, 0, 0, 0,
	0, 0, 0, 430, 0, 432, 433, 434, 431, 435,
	436, 437, 438, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 561, 0, 0, 447, 448, 454, 455, 449,
	450, 456, 457, 458, 459, 460, 0, 462, 463, 461,
	464, 465, 466, 0, 467, 451, 452, 468, 469, 0,
	470, 471, 472, 473, 474, 475, 562, 0, 476, 0,
	477, 478, 479, 480, 453, 481, 486, 563, 482, 483,
	484, 485, 564, 0, 488, 489, 0, 487, 0, 490,
	491, 492, 493, 494, 495, 315, 496, 0, 497, 565,
	566, 567, 568, 0, 504, 0, 498, 499, 569, 500,
	570, 0, 501, 502, 503, 0, 505, 506, 0, 0,
	507, 508, 509, 511, 512, 510, 513, 0, 514, 0,
	0, 515, 516, 517, 571, 572, 573, 0, 519, 518,
	574, 0, 0, 0, 0, 520, 521, 575, 522, 523,
	524, 1590, 1591, 0, 1623, 1624, 1625, 1633, 1634, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1626, 1621, 0, 0, 0, 0, 0, 0,
	1593, 0, 0, 0, 0, 0, 0, 1639, 0, 0,
	0, 0, 0, 0, 0, 1590, 1591, 0, 1623, 1624,
	1625, 1633, 1634, 1635, 0, 0, 0, 0, 0, 0,
	0, 1592, 0, 0, 0, 0, 1626, 1621, 0, 0,
	0, 1612, 0, 0, 1593, 0, 0, 0, 0, 1609,
	0, 1639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1612, 0, 0, 0, 0,
	0, 0, 0, 1609, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1615, 1616, 1617, 1618, 0,
	0, 0, 0, 0, 0, 1598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 0, 1640, 0, 1615,
	1616, 1617, 1618, 1620, 1622, 0, 0, 0, 0, 1598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1636,
	0, 1637, 0, 0, 0, 0, 0, 0, 1607, 1608,
	0, 0, 0, 0, 0, 0, 0, 0, 1630, 0,
	0, 1640, 0, 0, 0, 0, 1628, 1620, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 0, 0, 1636, 0, 1637, 0, 0, 0, 0,
	0, 0, 1607, 1608, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 0, 0, 0, 0, 0, 0, 0,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 1627,
	0, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1627, 0, 0, 0, 0, 0, 0,
	1619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1614, 0, 0, 0, 0, 1590, 1591, 0, 1623, 1624,
	1625, 1633, 1634, 1635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1619, 1631, 1626, 1621, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 1639, 0, 0, 1614, 0, 0, 0, 0, 1590,
	1591, 0, 1623, 1624, 1625, 1633, 1634, 1635, 0, 0,
	0, 0, 0, 0, 0, 1592, 0, 0, 0, 1631,
	1626, 1621, 0, 0, 0, 1612, 0, 0, 1593, 0,
	0, 0, 0, 1609, 0, 1639, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1592,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 1612,
	0, 1604, 1605, 1611, 1632, 1610, 1606, 1609, 1603, 1601,
	1602, 1594, 1595, 1596, 1597, 1599, 1600, 0, 0, 0,
	0, 0, 0, 0, 0, 2794, 0, 0, 0, 1615,
	1616, 1617, 1618, 0, 0, 0, 0, 0, 0, 1598,
	0, 1629, 0, 0, 0, 1604, 1605, 1611, 1632, 1610,
	1606, 0, 1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599,
	1600, 0, 0, 0, 0, 0, 0, 0, 1630, 2793,
	0, 1640, 0, 1615, 1616, 1617, 1618, 1620, 1622, 0,
	0, 0, 0, 1598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1636, 0, 1637, 0, 0, 0, 0,
	0, 0, 1607, 1608, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 0, 0, 1640, 0, 0, 0, 0,
	1628, 1620, 1622, 0, 0, 0, 0, 0, 0, 0,
	0, 1613, 0, 0, 0, 0, 0, 1636, 0, 1637,
	0, 0, 0, 0, 0, 0, 1607, 1608, 0, 0,
	0, 0, 0, 0, 0, 0, 1638, 0, 0, 0,
	0, 0, 0, 0, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 1627, 0, 1613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1627, 0, 0,
	0, 0, 0, 0, 1619, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 1590,
	1591, 0, 1623, 1624, 1625, 1633, 1634, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1619, 1631,
	1626, 1621, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 0, 1639, 0, 0, 1614, 0,
	0, 0, 0, 1590, 1591, 0, 1623, 1624, 1625, 1633,
	1634, 1635, 0, 0, 0, 0, 0, 0, 0, 1592,
	0, 0, 0, 1631, 1626, 1621, 0, 0, 0, 1612,
	0, 0, 1593, 0, 0, 0, 0, 1609, 0, 1639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1592, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 1612, 0, 1604, 1605, 1611, 1632, 1610,
	1606, 1609, 1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599,
	1600, 0, 0, 0, 0, 0, 0, 0, 0, 2792,
	0, 0, 0, 1615, 1616, 1617, 1618, 0, 0, 0,
	0, 0, 0, 1598, 0, 1629, 0, 0, 0, 1604,
	1605, 1611, 1632, 1610, 1606, 0, 1603, 1601, 1602, 1594,
	1595, 1596, 1597, 1599, 1600, 0, 0, 0, 0, 0,
	0, 0, 1630, 2240, 0, 1640, 0, 1615, 1616, 1617,
	1618, 1620, 1622, 0, 0, 0, 0, 1598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1636, 0, 1637,
	0, 0, 0, 0, 0, 0, 1607, 1608, 0, 0,
	0, 0, 0, 0, 0, 0, 1630, 0, 0, 1640,
	0, 0, 0, 0, 1628, 1620, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 1613, 0, 0, 0, 0,
	0, 1636, 0, 1637, 0, 0, 0, 0, 0, 0,
	1607, 1608, 0, 0, 0, 0, 0, 0, 0, 0,
	1638, 0, 0, 0, 0, 0, 0, 0, 1628, 0,
	0, 0, 0, 0, 0, 0, 0, 1627, 0, 1613,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1627, 0, 0, 0, 0, 0, 0, 1619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1590, 1591, 1614, 1623,
	1624, 1625, 1633, 1634, 1635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 1621, 0,
	0, 0, 1619, 1631, 0, 1593, 0, 0, 0, 0,
	0, 0, 1639, 0, 0, 0, 0, 0, 0, 0,
	1590, 1591, 1614, 1623, 1624, 1625, 1633, 1634, 1635, 0,
	0, 0, 0, 0, 0, 0, 1592, 0, 0, 0,
	0, 1626, 1621, 0, 0, 0, 1612, 1631, 0, 1593,
	0, 0, 0, 0, 1609, 0, 1639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1592, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 1629, 0, 0, 1609, 1604,
	1605, 1611, 1632, 1610, 1606, 0, 1603, 1601, 1602, 1594,
	1595, 1596, 1597, 1599, 1600, 0, 0, 0, 0, 3930,
	1615, 1616, 1617, 1618, 0, 0, 0, 0, 0, 0,
	1598, 0, 0, 0, 0, 0, 0, 0, 0, 1629,
	0, 0, 0, 1604, 1605, 1611, 1632, 1610, 1606, 0,
	1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600, 1630,
	0, 0, 1640, 3926, 1615, 1616, 1617, 1618, 1620, 1622,
	0, 0, 0, 0, 1598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1636, 0, 1637, 0, 0, 0,
	0, 0, 0, 1607, 1608, 0, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 0, 1640, 0, 0, 0,
	0, 1628, 1620, 1622, 0, 0, 0, 0, 0, 0,
	0, 0, 1613, 0, 0, 0, 0, 0, 1636, 0,
	1637, 0, 0, 0, 0, 0, 0, 1607, 1608, 0,
	0, 0, 0, 0, 0, 0, 0, 1638, 0, 0,
	0, 0, 0, 0, 0, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 1627, 0, 1613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1627, 0,
	0, 0, 0, 0, 0, 1619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1590, 1591, 1614, 1623, 1624, 1625, 1633,
	1634, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1626, 1621, 0, 0, 0, 1619,
	1631, 0, 1593, 0, 0, 0, 0, 0, 0, 1639,
	0, 0, 0, 0, 0, 0, 0, 1590, 1591, 1614,
	1623, 1624, 1625, 1633, 1634, 1635, 0, 0, 0, 0,
	0, 0, 0, 1592, 0, 0, 0, 0, 1626, 1621,
	0, 0, 0, 1612, 1631, 0, 1593, 0, 0, 0,
	0, 1609, 0, 1639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1592, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1612, 0, 0,
	0, 0, 1629, 0, 0, 1609, 1604, 1605, 1611, 1632,
	1610, 1606, 0, 1603, 1601, 1602, 1594, 1595, 1596, 1597,
	1599, 1600, 0, 0, 0, 0, 3837, 1615, 1616, 1617,
	1618, 0, 0, 0, 0, 0, 0, 1598, 0, 0,
	0, 0, 0, 0, 0, 0, 1629, 0, 0, 0,
	1604, 1605, 1611, 1632, 1610, 1606, 0, 1603, 1601, 1602,
	1594, 1595, 1596, 1597, 1599, 1600, 1630, 0, 0, 1640,
	3836, 1615, 1616, 1617, 1618, 1620, 1622, 0, 0, 0,
	0, 1598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1636, 0, 1637, 0, 0, 0, 0, 0, 0,
	1607, 1608, 0, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 0, 1640, 0, 0, 0, 0, 1628, 1620,
	1622, 0, 0, 0, 0, 0, 0, 0, 0, 1613,
	0, 0, 0, 0, 0, 1636, 0, 1637, 0, 0,
	0, 0, 0, 0, 1607, 1608, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 0, 0, 0, 0, 0,
	0, 0, 1628, 0, 0, 0, 0, 0, 0, 0,
	0, 1627, 0, 1613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1627, 0, 0, 0, 0,
	0, 0, 1619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1590, 1591, 1614, 1623, 1624, 1625, 1633, 1634, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1626, 1621, 0, 0, 0, 1619, 1631, 0, 1593,
	0, 0, 0, 0, 0, 0, 1639, 0, 0, 0,
	0, 0, 0, 0, 1590, 1591, 1614, 1623, 1624, 1625,
	1633, 1634, 1635, 0, 0, 0, 0, 0, 0, 0,
	1592, 0, 0, 0, 0, 1626, 1621, 0, 0, 0,
	1612, 1631, 0, 1593, 0, 0, 0, 0, 1609, 0,
	1639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1592, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1612, 0, 0, 0, 0, 1629,
	0, 0, 1609, 1604, 1605, 1611, 1632, 1610, 1606, 0,
	1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600, 0,
	0, 0, 0, 3688, 1615, 1616, 1617, 1618, 0, 0,
	0, 0, 0, 0, 1598, 0, 0, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 1604, 1605, 1611,
	1632, 1610, 1606, 0, 1603, 1601, 1602, 1594, 1595, 1596,
	1597, 1599, 1600, 1630, 0, 0, 1640, 3555, 1615, 1616,
	1617, 1618, 1620, 1622, 0, 0, 0, 0, 1598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1636, 0,
	1637, 0, 0, 0, 0, 0, 0, 1607, 1608, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	1640, 0, 0, 0, 0, 1628, 1620, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 1613, 0, 0, 0,
	0, 0, 1636, 0, 1637, 0, 0, 0, 0, 0,
	0, 1607, 1608, 0, 0, 0, 0, 0, 0, 0,
	0, 1638, 0, 0, 0, 0, 0, 0, 0, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 1627, 0,
	1613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1627, 0, 0, 0, 0, 0, 0, 1619,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1590, 1591, 1614,
	1623, 1624, 1625, 1633, 1634, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 1621,
	0, 0, 0, 1619, 1631, 0, 1593, 0, 0, 0,
	0, 0, 0, 1639, 0, 0, 0, 0, 0, 0,
	0, 1590, 1591, 1614, 1623, 1624, 1625, 1633, 1634, 1635,
	0, 0, 0, 0, 0, 0, 0, 1592, 0, 0,
	0, 0, 1626, 1621, 0, 0, 0, 1612, 1631, 0,
	1593, 0, 0, 0, 0, 1609, 0, 1639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1592, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1612, 0, 0, 0, 0, 1629, 0, 0, 1609,
	1604, 1605, 1611, 1632, 1610, 1606, 0, 1603, 1601, 1602,
	1594, 1595, 1596, 1597, 1599, 1600, 0, 0, 0, 0,
	3499, 1615, 1616, 1617, 1618, 0, 0, 0, 0, 0,
	0, 1598, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 1604, 1605, 1611, 1632, 1610, 1606,
	0, 1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600,
	1630, 0, 0, 1640, 3498, 1615, 1616, 1617, 1618, 1620,
	1622, 0, 0, 0, 0, 1598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1636, 0, 1637, 0, 0,
	0, 0, 0, 0, 1607, 1608, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 0, 1640, 0, 0,
	0, 0, 1628, 1620, 1622, 0, 0, 0, 0, 0,
	0, 0, 0, 1613, 0, 0, 0, 0, 0, 1636,
	0, 1637, 0, 0, 0, 0, 0, 0, 1607, 1608,
	0, 0, 0, 0, 0, 0, 0, 0, 1638, 0,
	0, 0, 0, 0, 0, 0, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 1627, 0, 1613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 0, 0, 0, 0, 1619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1590, 1591, 1614, 1623, 1624, 1625,
	1633, 1634, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1626, 1621, 0, 0, 0,
	1619, 1631, 0, 1593, 0, 0, 0, 0, 0, 0,
	1639, 0, 0, 0, 0, 0, 0, 0, 1590, 1591,
	1614, 1623, 1624, 1625, 1633, 1634, 1635, 0, 0, 0,
	0, 0, 0, 0, 1592, 0, 0, 0, 0, 1626,
	1621, 0, 0, 0, 1612, 1631, 0, 1593, 0, 0,
	0, 0, 1609, 0, 1639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1612, 0,
	0, 0, 0, 1629, 0, 0, 1609, 1604, 1605, 1611,
	1632, 1610, 1606, 0, 1603, 1601, 1602, 1594, 1595, 1596,
	1597, 1599, 1600, 0, 0, 0, 0, 3497, 1615, 1616,
	1617, 1618, 0, 0, 0, 0, 0, 0, 1598, 0,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 1604, 1605, 1611, 1632, 1610, 1606, 0, 1603, 1601,
	1602, 1594, 1595, 1596, 1597, 1599, 1600, 1630, 0, 0,
	1640, 3211, 1615, 1616, 1617, 1618, 1620, 1622, 0, 0,
	0, 0, 1598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1636, 0, 1637, 0, 0, 0, 0, 0,
	0, 1607, 1608, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 0, 1640, 0, 0, 0, 0, 1628,
	1620, 1622, 0, 0, 0, 0, 0, 0, 0, 0,
	1613, 0, 0, 0, 0, 0, 1636, 0, 1637, 0,
	0, 0, 0, 0, 0, 1607, 1608, 0, 0, 0,
	0, 0, 0, 0, 0, 1638, 0, 0, 0, 0,
	0, 0, 0, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 1627, 0, 1613, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1627, 0, 0, 0,
	0, 0, 0, 1619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1590, 1591, 1614, 1623, 1624, 1625, 1633, 1634, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1626, 1621, 0, 0, 0, 1619, 1631, 0,
	1593, 0, 0, 0, 0, 0, 0, 1639, 0, 0,
	0, 0, 0, 0, 0, 1590, 1591, 1614, 1623, 1624,
	1625, 1633, 1634, 1635, 0, 0, 0, 0, 0, 0,
	0, 1592, 0, 0, 0, 0, 1626, 1621, 0, 0,
	0, 1612, 1631, 0, 1593, 0, 0, 0, 0, 1609,
	0, 1639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1612, 0, 0, 0, 0,
	1629, 0, 0, 1609, 1604, 1605, 1611, 1632, 1610, 1606,
	0, 1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600,
	0, 0, 0, 0, 2790, 1615, 1616, 1617, 1618, 0,
	0, 0, 0, 0, 0, 1598, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 0, 0, 0, 1604, 1605,
	1611, 1632, 1610, 1606, 0, 1603, 1601, 1602, 1594, 1595,
	1596, 1597, 1599, 1600, 1630, 0, 0, 1640, 2789, 1615,
	1616, 1617, 1618, 1620, 1622, 0, 0, 0, 0, 1598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1636,
	0, 1637, 0, 0, 0, 0, 0, 0, 1607, 1608,
	0, 0, 0, 0, 0, 0, 0, 0, 1630, 0,
	0, 1640, 0, 0, 0, 0, 1628, 1620, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 0, 0, 1636, 0, 1637, 0, 0, 0, 0,
	0, 0, 1607, 1608, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 0, 0, 0, 0, 0, 0, 0,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 1627,
	0, 1613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1627, 0, 0, 0, 0, 0, 0,
	1619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1590, 1591,
	1614, 1623, 1624, 1625, 1633, 1634, 1635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1626,
	1621, 0, 0, 0, 1619, 1631, 0, 1593, 0, 0,
	0, 0, 0, 0, 1639, 0, 0, 0, 0, 0,
	0, 0, 1590, 1591, 1614, 1623, 1624, 1625, 1633, 1634,
	1635, 0, 0, 0, 0, 0, 0, 0, 1592, 0,
	0, 0, 0, 1626, 1621, 0, 0, 0, 1612, 1631,
	0, 1593, 0, 0, 0, 0, 1609, 0, 1639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1592, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1612, 0, 0, 0, 0, 1629, 0, 0,
	1609, 1604, 1605, 1611, 1632, 1610, 1606, 0, 1603, 1601,
	1602, 1594, 1595, 1596, 1597, 1599, 1600, 0, 0, 0,
	0, 2788, 1615, 1616, 1617, 1618, 0, 0, 0, 0,
	0, 0, 1598, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 0, 1604, 1605, 1611, 1632, 1610,
	1606, 0, 1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599,
	1600, 1630, 0, 0, 1640, 2787, 1615, 1616, 1617, 1618,
	1620, 1622, 0, 0, 0, 0, 1598, 4050, 0, 0,
	0, 0, 0, 0, 0, 0, 1636, 0, 1637, 0,
	0, 0, 0, 0, 0, 1607, 1608, 0, 0, 0,
	0, 0, 0, 0, 0, 1630, 0, 0, 1640, 0,
	0, 0, 0, 1628, 1620, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 1613, 0, 0, 0, 0, 0,
	1636, 0, 1637, 0, 0, 0, 0, 0, 0, 1607,
	1608, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 0, 0, 0, 0, 1628, 0, 0,
	0, 0, 0, 0, 0, 0, 1627, 0, 1613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1627, 0, 0, 0, 0, 0, 0, 1619, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4049, 1614, 1590, 1591,
	0, 1623, 1624, 1625, 1633, 1634, 1635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1626,
	1621, 1619, 1631, 0, 0, 2725, 0, 1593, 0, 0,
	0, 0, 0, 0, 1639, 0, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1592, 0,
	0, 0, 0, 0, 0, 0, 1631, 0, 1612, 0,
	0, 0, 0, 0, 0, 0, 1609, 0, 0, 0,
	0, 1590, 1591, 0, 1623, 1624, 1625, 1633, 1634, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1626, 1621, 0, 0, 0, 2726, 0, 0,
	1593, 0, 0, 0, 1629, 0, 0, 1639, 1604, 1605,
	1611, 1632, 1610, 1606, 0, 1603, 1601, 1602, 1594, 1595,
	1596, 1597, 1599, 1600, 0, 0, 2754, 0, 0, 0,
	0, 1592, 1615, 1616, 1617, 1618, 0, 0, 0, 0,
	0, 1612, 1598, 0, 0, 0, 0, 0, 1629, 1609,
	0, 0, 1604, 1605, 1611, 1632, 1610, 1606, 0, 1603,
	1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600, 0, 0,
	0, 1630, 0, 0, 1640, 0, 0, 0, 0, 0,
	1620, 1622, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1636, 0, 1637, 0,
	0, 0, 0, 0, 0, 1607, 1608, 0, 0, 0,
	0, 0, 0, 0, 0, 1615, 1616, 1617, 1618, 0,
	0, 0, 0, 1628, 0, 1598, 0, 2850, 0, 0,
	2849, 0, 0, 0, 1613, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 0, 1640, 0, 1638,
	0, 0, 0, 1620, 1622, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1627, 0, 0, 1636,
	0, 1637, 0, 0, 0, 0, 0, 0, 1607, 1608,
	0, 0, 0, 0, 0, 0, 0, 2360, 0, 0,
	0, 0, 0, 0, 1590, 1591, 1628, 1623, 1624, 1625,
	1633, 1634, 1635, 0, 0, 0, 0, 1613, 0, 0,
	0, 0, 0, 0, 0, 1626, 1621, 1619, 0, 0,
	2359, 0, 0, 1593, 0, 0, 0, 0, 0, 0,
	1639, 0, 1638, 0, 0, 0, 0, 1614, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 0, 0, 1592, 0, 0, 0, 0, 0,
	0, 0, 1631, 0, 1612, 0, 0, 0, 0, 0,
	0, 0, 1609, 0, 0, 0, 0, 1590, 1591, 0,
	1623, 1624, 1625, 1633, 1634, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 1621,
	1619, 0, 0, 0, 0, 0, 1593, 0, 0, 0,
	0, 0, 0, 1639, 0, 0, 0, 0, 0, 0,
	1614, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1592, 1615, 1616,
	1617, 1618, 0, 0, 0, 1631, 0, 1612, 1598, 0,
	0, 0, 0, 0, 1629, 1609, 0, 0, 1604, 1605,
	1611, 1632, 1610, 1606, 0, 1603, 1601, 1602, 1594, 1595,
	1596, 1597, 1599, 1600, 0, 0, 0, 1630, 0, 0,
	1640, 0, 0, 0, 0, 0, 1620, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1636, 0, 1637, 0, 0, 0, 0, 0,
	0, 1607, 1608, 0, 0, 0, 0, 0, 0, 0,
	0, 1615, 1616, 1617, 1618, 0, 0, 0, 0, 1628,
	0, 1598, 0, 0, 0, 0, 0, 1629, 0, 0,
	1613, 1604, 1605, 1611, 1632, 1610, 1606, 0, 1603, 1601,
	1602, 1594, 1595, 1596, 1597, 1599, 1600, 0, 0, 0,
	1630, 0, 0, 1640, 0, 1638, 0, 0, 0, 1620,
	1622, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1627, 0, 0, 1636, 0, 1637, 0, 0,
	0, 0, 0, 0, 1607, 1608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1590, 1591, 1628, 1623, 1624, 1625, 1633, 1634, 1635, 0,
	0, 0, 0, 1613, 0, 0, 0, 0, 0, 0,
	0, 1626, 1621, 1619, 0, 0, 0, 0, 0, 1593,
	0, 0, 0, 0, 0, 0, 1639, 0, 1638, 0,
	0, 0, 0, 1614, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1627, 921, 0, 0, 0,
	1592, 0, 0, 0, 0, 0, 0, 0, 1631, 0,
	1612, 0, 0, 0, 0, 0, 0, 0, 1609, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1614, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1615, 1616, 1617, 1618, 0, 0,
	0, 1631, 0, 0, 1598, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 1604, 1605, 1611, 1632, 1610, 1606,
	0, 1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600,
	0, 0, 0, 1630, 0, 0, 1640, 0, 0, 0,
	0, 0, 1620, 1622, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1636, 0,
	1637, 0, 0, 0, 0, 0, 0, 1607, 1608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 0, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 1613, 1604, 1605, 1611,
	1632, 1610, 1606, 0, 1603, 1601, 1602, 1594, 1595, 1596,
	1597, 1599, 1600, 0, 0, 0, 0, 0, 0, 0,
	0, 1638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1590, 1591, 0, 1623, 1624, 1625, 1633,
	1634, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1626, 1621, 0, 0, 0, 1619,
	0, 0, 1593, 0, 0, 0, 0, 0, 0, 1639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1614,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1590, 1591, 1592, 1623, 1624, 1625, 1633, 1634, 1635,
	0, 0, 0, 1612, 1631, 0, 0, 0, 0, 0,
	0, 1609, 1626, 1621, 0, 0, 0, 2851, 0, 0,
	1593, 0, 0, 0, 0, 0, 0, 1639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3192, 0, 0, 0, 0, 0, 0, 0,
	0, 1592, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1612, 0, 0, 0, 0, 0, 0, 0, 1609,
	0, 0, 0, 0, 0, 0, 0, 1615, 1616, 1617,
	1618, 0, 0, 0, 0, 0, 0, 1598, 0, 0,
	0, 0, 2856, 0, 0, 0, 1629, 0, 0, 0,
	1604, 1605, 1611, 1632, 1610, 1606, 0, 1603, 1601, 1602,
	1594, 1595, 1596, 1597, 1599, 1600, 1630, 0, 0, 1640,
	0, 0, 0, 0, 0, 1620, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 1615, 1616, 1617, 1618, 0,
	0, 1636, 0, 1637, 0, 1598, 0, 0, 0, 0,
	1607, 1608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1628, 0,
	0, 0, 0, 0, 1630, 0, 0, 1640, 0, 1613,
	0, 0, 0, 1620, 1622, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1636,
	0, 1637, 0, 0, 1638, 0, 0, 0, 1607, 1608,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1627, 0, 0, 0, 0, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1619, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1614, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1590, 1591, 0, 1623, 1624, 1625,
	1633, 1634, 1635, 0, 0, 0, 0, 1631, 0, 0,
	0, 0, 0, 0, 0, 1626, 1621, 0, 0, 0,
	1619, 0, 0, 1593, 0, 0, 0, 0, 0, 0,
	1639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1614, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1592, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1612, 1631, 0, 0, 0, 0,
	0, 0, 1609, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1629,
	0, 0, 0, 1604, 1605, 1611, 1632, 1610, 1606, 0,
	1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1615, 1616,
	1617, 1618, 0, 0, 0, 0, 0, 0, 1598, 0,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 1604, 1605, 1611, 1632, 1610, 1606, 0, 1603, 1601,
	1602, 1594, 1595, 1596, 1597, 1599, 1600, 1630, 0, 0,
	1640, 0, 0, 0, 0, 0, 1620, 1622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1636, 0, 1637, 0, 0, 0, 0, 0,
	0, 1607, 1608, 0, 0, 0, 0, 0, 0, 0,
	1590, 1591, 0, 1623, 1624, 1625, 1633, 1634, 1635, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1613, 1626, 1621, 0, 0, 0, 2791, 0, 0, 1593,
	0, 0, 0, 0, 0, 0, 1639, 0, 0, 0,
	0, 0, 0, 0, 0, 1638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1592, 0, 1627, 0, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 0, 1609, 0,
	0, 0, 2818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1614, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1615, 1616, 1617, 1618, 0, 0,
	0, 0, 0, 0, 1598, 0, 0, 0, 1631, 1590,
	1591, 0, 1623, 1624, 1625, 1633, 1634, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1626, 1621, 0, 1630, 0, 0, 1640, 0, 1593, 0,
	0, 0, 1620, 1622, 0, 1639, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1636, 0,
	1637, 0, 0, 0, 0, 0, 0, 1607, 1608, 1592,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1612,
	0, 0, 0, 0, 0, 1628, 0, 1609, 0, 0,
	0, 0, 0, 0, 0, 0, 1613, 0, 0, 0,
	1629, 0, 0, 0, 1604, 1605, 1611, 1632, 1610, 1606,
	0, 1603, 1601, 1602, 1594, 1595, 1596, 1597, 1599, 1600,
	0, 1638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1615, 1616, 1617, 1618, 0, 0, 0,
	0, 0, 0, 1598, 0, 0, 0, 0, 0, 1590,
	1591, 0, 1623, 1624, 1625, 1633, 1634, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1619,
	1626, 1621, 1630, 0, 0, 1640, 0, 0, 1593, 0,
	0, 1620, 1622, 0, 0, 1639, 0, 0, 0, 1614,
	0, 0, 0, 0, 0, 0, 0, 1636, 0, 1637,
	0, 0, 0, 0, 0, 0, 1607, 1608, 0, 1592,
	0, 0, 0, 0, 1631, 0, 0, 0, 0, 1612,
	0, 0, 0, 0, 1628, 0, 0, 1609, 0, 0,
	0, 0, 0, 0, 0, 1613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1615, 1616, 1617, 1618, 0, 0, 0,
	0, 0, 0, 1598, 0, 0, 1629, 0, 0, 0,
	1604, 1605, 1611, 1632, 1610, 1606, 0, 1603, 1601, 1602,
	1594, 1595, 1596, 1597, 1599, 1600, 0, 0, 1619, 0,
	0, 0, 1630, 0, 0, 1640, 0, 0, 0, 0,
	0, 1620, 1622, 0, 0, 0, 0, 0, 1614, 0,
	0, 0, 0, 0, 0, 0, 0, 1636, 816, 1637,
	857, 0, 0, 0, 0, 0, 1607, 1608, 0, 0,
	0, 0, 0, 1631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 823, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1613, 0, 0, 0, 836,
	821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1638, 0, 0, 0, 0, 822, 0, 0, 0, 0,
	825, 0, 0, 0, 0, 865, 0, 0, 0, 0,
	0, 0, 0, 833, 834, 0, 0, 0, 0, 850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 858, 827, 1629, 0, 0, 0, 1604,
	1605, 1611, 1632, 1610, 1606, 0, 1603, 1601, 1602, 1594,
	1595, 1596, 1597, 1599, 1600, 0, 0, 0, 1619, 0,
	828, 0, 0, 0, 0, 0, 0, 0, 0, 856,
	0, 0, 0, 0, 0, 0, 0, 0, 1614, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1631, 0, 829, 0, 0, 0, 0,
	0, 0, 0, 820, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 830, 831, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 838,
	837, 0, 0, 0, 0, 0, 0, 832, 0, 0,
	0, 847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 862, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 859, 0, 0, 1604,
	1605, 1611, 1632, 1610, 1606, 0, 1603, 1601, 1602, 1594,
	1595, 1596, 1597, 1599, 1600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	826, 0, 0, 864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 824, 0,
	0, 0, 854, 855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 852, 0, 0, 0, 0, 0, 0, 863, 848,
	0, 841, 839, 0, 844, 0, 0, 0, 0, 0,
	845, 0, 0, 818, 0, 860, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 846, 0, 0, 0,
	0, 843, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 861, 0, 0, 0, 0, 0, 0, 0, 849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 853,
}
var sqlPact = [...]int{

	4300, -1000, -1000, -1000, -1000, 225, -1000, -1000, 224, 220,
	218, 217, 215, 209, 198, 196, -1000, -1000, -1000, -1000,
	-1000, -1000, 191, -1000, -1000, 189, -1000, 186, 182, 180,
	-1000, -1000, 179, -1000, 178, -1000, -1000, -1000, -1000, 177,
	176, 174, 73700, 73225, 74169, 2116, 89297, 77933, 1829, 66118,
	88822, 65643, 88347, 87872, 173, -1000, 87397, 167, 161, 160,
	-1000, 86922, -1000, 1846, -1000, 159, 2328, 54692, 158, 156,
	155, 2483, 153, -1000, 152, 151, -1000, 7568, 1550, -1000,
	148, 144, -1000, 7229, 5452, 76989, 143, 142, 2083, 141,
	140, 54216, 138, 136, 2038, 2730, -1000, -1000, 1917, -1000,
	-1000, 134, 132, 129, 126, 124, 118, 117, 113, 110,
	109, -1000, 108, 107, 104, 103, 102, 101, 98, 96,
	-1000, 95, 94, 93, 87, 86, 85, 82, 80, 79,
	76, 75, 74, -1000, 101536, 73, 1830, 1669, 1665, 1592,
	1545, 1542, 962, 72, 70, 68, 67, 66, 65, 64,
	63, 61, -1000, 59, 58, 55, 53, 52, 39, 37,
	33, 131, 29, 28, 23, 16, 15, 14, 12, 2381,
	-1000, 1646, 1280, 25111, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	94925, 89766, 6, -47, 2, -1000, 3057, 963, 45159, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 294, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 495, 1799,
	747, -1000, -1000, -1000, 86453, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2103, 24, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 746, -1000, 2102, 147, 2042, -1000, -1000, -1000,
	-1000, -1000, 89766, -1000, -1000, 3443, 3442, 1974, 745, 85984,
	-1000, 1485, -1000, 905, 28117, -1000, 1244, -1000, 28117, 292,
	-1000, -1000, -1000, -1000, -1000, -1000, 3441, 3440, 3439, 3438,
	-1000, -1000, 65168, 19069, 64693, 64218, 85509, 18584, 72750, 72275,
	85034, 60432, -1000, -1000, -1000, 1432, -1000, -1000, -1000, -1000,
	-1000, -1000, -21, 58007, 3264, 89766, -1000, 284, -1000, -1000,
	-1000, -1000, -1000, -1000, 38301, 783, 37790, 952, 37279, 774,
	-1000, -1000, -1000, 59947, -1000, 3437, 3436, 1098, 3433, 2988,
	94456, 1731, 3432, 1819, 1198, 1015, 3431, 3430, 3429, 3428,
	3427, 3425, 1427, 84559, 2755, 84084, 1650, 59462, 71800, 74169,
	2477, 83609, 1393, 1390, -1000, -1000, -1000, -1000, 2882, 2714,
	2702, 50909, -1000, -1000, 3424, 3423, 3422, 3421, 3420, 93987,
	1724, 3415, 2309, 3414, 3412, 3410, 3407, 3406, 3405, 3401,
	-1000, 71325, 70850, 70375, 3104, 83134, 69900, 82659, 58977, 36768,
	1057, -1000, -1000, -1000, 47073, 7174, 6731, 82184, 49012, 74169,
	74169, -1000, -1000, -1000, -1000, -1000, 36257, 479, 35746, 1018,
	-1000, -1000, 47563, 2689, -1000, -1000, -1000, -1000, 35235, 390,
	34724, 723, 89766, -1000, 2754, 1836, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2035, 1498,
	3280, 58492, 1906, 1339, 3055, 2880, 2879, 1421, 3400, 2379,
	2876, 2875, 2874, 2843, 2810, 1779, 2419, 347, 24600, 2720,
	1678, 34213, 1419, 1401, 2807, 2794, 3293, 1875, 1878, 2125,
	63743, 3399, 3398, 3018, 2782, 2767, 2688, -1000, -1000, -1000,
	-1000, 1353, -1000, -1000, -1000, -1000, -1000, 67056, -1000, -1000,
	1174, -1000, -1000, 1174, -1000, -1000, -1000, -1000, -1000, 1355,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1646, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1927, -1000, 1964, -1000, -1000, 2269, 3027, 3027,
	3027, 3085, 442, 441, -1000, 131, -1000, -1000, 101158, -1000,
	-1000, 38800, 38800, 38800, 38800, 38800, 38800, 38800, 2002, -1000,
	742, -1000, -1000, 782, -1000, 741, 612, -1000, -1000, -1000,
	-1000, -1000, -1000, 739, -1000, -1000, -1000, -1000, -1000, -1000,
	3264, -1000, 21546, -1000, -1000, -1000, 431, 738, 38800, -1000,
	-1000, 3307, 3305, 896, -1000, 253, 932, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2752,
	736, 735, -1000, 733, 731, 729, 728, 727, -1000, -1000,
	-1000, 725, 724, 721, 718, 717, 713, 709, 708, -1000,
	1898, -1000, -1000, -1000, -1000, -1000, -1000, 665, 664, 664,
	664, -1000, 1008, -1000, -1000, -1000, 341, 662, 315, 657,
	656, 651, 706, 704, 702, 700, 698, 692, 689, 687,
	686, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1007, -1000, -1000,
	-1000, -1000, -22, 89766, -1000, 495, -22, -1000, -1000, 682,
	-1000, 28616, 28616, 28616, -1000, -1000, 2100, 38800, -1000, 2769,
	-1000, -15, -15, 870, 46107, -1000, 44193, 870, 246, 773,
	50433, -1000, 2685, -1000, -1000, 681, 250, -1000, -1000, -1000,
	-1000, 19552, 2684, 89766, 89766, 74169, 74169, 74169, 2933, 38800,
	-1000, -1000, 55161, 89766, 74638, 3213, 56099, 55161, 89766, 2750,
	-1000, -1000, -1000, 89766, -1000, 38800, -1000, 3212, 1484, 61388,
	3106, -37, -1000, -1000, -1000, -1000, -1000, -1000, 2255, 2278,
	1106, 2129, 1673, -1000, 28117, 2980, -1000, -1000, -1000, 241,
	19552, -1000, -1000, -1000, -1000, -1000, 2235, 2900, 1371, -1000,
	2128, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1729, 2899, -1000, 1944, 2897, 1697, -1000, -1000, 2096, -1000,
	-1000, 3013, -1000, -1000, 1860, 2870, -14, -1000, -1000, 2652,
	-1000, -1000, 1868, -1000, -1000, 978, 2868, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 48529, 47563, 58007, -29,
	-1000, -1000, -1000, -1000, -43, -1000, 18099, 101158, -1000, -1000,
	-1000, -1000, 1739, 101158, 831, -1000, -1000, 2867, -1000, 101158,
	827, -1000, -1000, 2866, -1000, 2746, -1000, -1000, -1000, -1000,
	3397, -1000, 3391, 2203, 3386, 3382, 3380, -1000, 1663, 1891,
	3366, -1000, 3364, -1000, -1000, -1000, -1000, -1000, -1000, 69425,
	2099, -1000, -1000, 68475, -1000, 2198, -1000, 68950, 1011, -1000,
	978, 2197, -1000, 867, -1000, 3361, 3102, 2482, 978, 2192,
	-1000, -1000, -1000, -1000, -1000, 52325, -1000, 52325, -1000, 52325,
	-1000, 1537, -1000, 93518, -15, -15, 3264, -1000, -1000, -1000,
	-1000, -1000, 2865, 3360, 3359, 3357, -1000, 89766, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 205, 2863, -1000, -1000, 205,
	2862, -1000, 205, 2861, -1000, 76514, -1000, -1000, 2119, 2860,
	-1000, 204, 2859, -1000, -1000, 197, 2856, -1000, -1000, -86,
	2853, -1000, -1000, 101158, -1000, -1000, -1000, -54, -1000, -1000,
	-1000, 963, -1000, 46583, -1000, 46583, 81709, 60915, 950, 707,
	53740, 101158, -1000, -1000, -1000, -1000, 101158, -1000, -1000, -1000,
	-127, -1000, -1000, 60915, 47563, 101158, -1000, -1000, -1000, -1000,
	101158, -1000, -1000, -1000, 60915, 68475, -1000, 81234, 68006, -1000,
	-1000, 1426, 2400, -1000, -1000, -1000, 950, 60915, 60915, 60915,
	-1000, 80759, -1000, -1000, 1920, 1716, 3015, 1892, 74169, -1000,
	1793, -1000, -1000, -1000, 3041, -1000, 2740, -1000, 55630, 76045,
	-1000, 75576, -1000, 75107, -1000, 74169, -1000, 74169, -1000, 3356,
	3354, 3353, -1000, 3352, 3031, -1000, 101158, 3023, -1000, 3351,
	3110, 2720, 101158, -1000, 2787, 1571, 1563, 89766, -1000, -1000,
	89766, -1000, 89766, -1000, -1000, -1000, 1446, -1000, -1000, 2254,
	-1000, -1000, -1000, -1000, 74169, -1000, -1000, -1000, -1000, -1000,
	-1000, 2718, -1000, 1677, -1000, 1762, -1000, 1422, -1000, -1000,
	212, -1000, -1000, -37, -1000, 93049, -1000, 2269, -1000, 89766,
	-1000, 2295, 2699, 2707, 1509, 2087, 2383, -1000, 33702, 2331,
	41295, 2124, 131, -1000, -1000, 131, 131, 26109, -1000, -1000,
	56099, 56099, 19552, 1377, 38800, 38800, 38800, 38800, 38800, 38800,
	38800, 38800, 38800, 38800, 38800, 38800, 38800, 38800, 38800, 38800,
	38800, 38800, 38800, 38800, 38800, 38800, 38800, 38800, 38800, 38800,
	38800, 38800, 38800, 38800, 38800, 38800, 38800, 38800, 38800, 2193,
	38800, 1331, 38800, 38800, 38800, 38800, 1848, -1000, -1000, 1840,
	559, 1876, -1000, 3263, 3263, 3263, 1491, 1491, 13139, 13139,
	537, 3349, 782, -1000, 38800, -1000, 60, 38800, 20037, -1000,
	441, 11431, 2272, -1000, 437, 20548, -1000, -1000, -1000, 21546,
	612, 33191, 38800, 998, 101158, -1000, -1000, 1472, 3278, 17616,
	2709, 2582, 678, 778, 768, 24089, 23578, 23067, 22556, 658,
	38800, 38800, 38800, 38800, 38800, 38800, 38800, 38800, -1000, -1000,
	3286, -1000, 3278, -1000, -1000, -1000, -1000, 3278, 1370, 1362,
	3278, -1000, 3278, 3278, 2991, 2991, 32692, 32181, 31670, 41794,
	31159, 38800, 22045, 30648, 30137, -1000, 89766, -22, 3208, 38800,
	97, -1000, 99773, -1000, 97, 97, 677, -55, 101158, 2378,
	2378, 45633, 2285, 2010, 2010, 2010, -1000, 870, 13723, 870,
	79817, 2020, 870, 870, 240, 290, 434, 43719, 2769, 79817,
	766, 675, -1, -6, -9, -1000, -1000, -10, -11, -1000,
	-1000, 74169, 669, 20037, 19552, 236, 1441, -56, 2437, 2435,
	2427, -1000, 2425, 1768, -61, 1328, -40, -1000, 6575, -63,
	-1000, 968, 235, 3278, -1000, -1000, -1000, -1000, -1000, 3347,
	3346, -1000, 1002, 668, 666, 355, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 665, 664, 664, 664, -1000, 341,
	662, 315, 657, 656, 651, -1000, -1000, -1000, -1000, 2683,
	-43, 74638, 897, -64, 1108, -37, -1000, -1000, -1000, 61388,
	1174, -1000, 1947, -1000, -1000, -1000, -1000, -1000, -1000, 1420,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 896, -1000, -1000,
	-1000, -1000, -1000, -1000, 3270, 3259, -27, -1000, -1000, 19552,
	-1000, -38, 1656, 1667, -1000, 63268, 2152, 3010, 3005, 1522,
	-1000, 1434, 3084, 67056, 3161, 3206, 208, -1000, 2679, -1000,
	-1000, 888, 1657, 1666, 1325, 67056, 1944, -1000, 56099, -1000,
	2457, 3082, 1307, 1332, 1307, 1307, 1309, -1000, 67056, 1659,
	1318, -1000, 1316, -1000, -39, 3117, 3200, 114, -1000, 2678,
	1315, -1000, -1000, 74169, 19552, 1489, 1451, 1614, 1313, -28,
	-1000, 3157, 3128, 1312, 1305, -1000, 1590, -1000, 60915, 865,
	2520, 865, -29, 58007, 89766, 234, -1000, 60, 38800, 38800,
	60, 38800, 60, 3108, -1000, -1000, 2851, -1000, -1000, -1000,
	3345, 1854, 2280, -1000, -1000, -1000, 650, 2187, 2677, 89766,
	2445, -32, 74169, -1000, 2847, 1944, 2186, -1000, -1000, 67531,
	-1000, 2846, 621, 3344, -1000, 92580, -1000, 3012, 1399, 2839,
	1061, 619, 3207, -1000, 619, 52794, -1000, 89766, -1000, -1000,
	89766, -1000, -1000, -1000, 3343, -1000, 74169, -1000, -1000, 74169,
	-1000, 74169, -1000, 74169, 190, 2836, -1000, -1000, 89766, -1000,
	74169, 74169, -1000, 89766, 89766, 60915, 60915, 4337, 62330, -74,
	-76, 433, -1000, 80290, 89766, 1060, 62799, 89766, 2970, 971,
	47563, -1000, -79, -127, 2504, 950, 950, 865, -1000, 865,
	-1000, 74169, 2706, -1000, 950, 950, 950, -1000, -1000, -1000,
	-1000, 3339, 3338, -1000, -1000, -1000, 973, 74169, 89766, 74169,
	-1000, -1000, 89766, -1000, 89766, -1000, 973, 89766, 973, 89766,
	973, 89766, -1000, -1000, -1000, -1000, -1000, -1000, 60, 38800,
	-1000, -1000, 3337, 1572, -1000, 2705, -1000, 2700, -1000, 44,
	-1000, -1000, -1000, -1000, -1000, 1784, 74169, 74169, 74169, 74169,
	89766, 74169, -1000, 67056, -1000, 2295, 2699, -1000, -1000, -1000,
	-1000, -1000, -1000, 1615, 2047, -1000, 2389, -1000, 1475, -1000,
	-1000, -1000, 101158, 42277, -1000, -1000, 101158, 1777, -1000, 40796,
	40297, -1000, -1000, 1635, 74169, 2462, -1000, 2462, -184, -1000,
	99457, 2387, 74169, -1000, -1000, -1000, -1000, -1000, 887, 1381,
	1381, 1169, 1169, 1169, 1169, 3116, 393, 520, 6407, 288,
	288, 880, 880, 880, 880, 880, 288, 511, 1491, 1491,
	511, 511, 511, 511, 511, 1491, 1491, 1491, 288, 288,
	288, 13139, 101318, 6394, 38800, 38800, 1302, 1828, 559, 6041,
	38800, 6144, 6144, 6144, 6144, -1000, 1818, -1000, -1000, -1000,
	-1000, 2676, 639, 41794, 41794, -1000, -1000, -1000, -1000, 21047,
	38800, -1000, -1000, -1000, -1000, 29626, -1000, -1000, 99097, -276,
	429, -150, 20, -1000, 38800, 38800, 38800, 420, -1000, 233,
	38800, 89766, -1000, 96278, 757, -213, -1000, -81, 1340, -1000,
	38800, -1000, -1000, 1289, -1000, 1261, 1246, 1240, -1000, 638,
	419, -1000, 231, -1000, 2008, 634, 633, 38800, -1000, -1000,
	-1000, -1000, -1000, 98784, -1000, -1000, 98740, -1000, -1000, 98427,
	-1000, -1000, 98383, -1000, -1000, -1000, 100999, 96234, 95914, 95870,
	10714, 12914, 12366, -84, 418, -87, 416, 886, 874, 413,
	412, 410, -90, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -92, 406, -1000, 2674, -150, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 405, -1000, 404, -1000, 100773, -150,
	403, 4960, -1000, 41794, 41794, 41794, -1000, 401, -1000, 99540,
	-1000, 100460, 29127, 29127, 29127, 400, 100402, 38800, -150, -93,
	-1000, -95, -1000, -1000, 536, -98, 986, 28616, 44683, 19552,
	-1000, 986, 986, 38800, -1000, 38800, 2417, -1000, -1000, -1000,
	2407, 1653, 2378, 45633, -1000, -1000, -1000, -1000, 79817, -1000,
	3264, 2766, -1000, 79817, -1000, -1000, 89766, 495, -1000, 79817,
	79817, 19552, 870, -1000, 870, 79817, 565, -1000, -1000, -1000,
	-1000, -1000, 398, 49485, 20, 229, 19552, 978, -1000, 2424,
	2424, 2424, 2424, -1000, -1000, 89766, 3235, -1000, 1908, -1000,
	56099, -1000, 777, 850, 19552, -1000, -1000, -1000, 631, -1000,
	3278, 3278, -1000, 3278, 89766, 90, 28117, -1000, 1174, -1000,
	-1000, 1463, -1000, 1871, -1000, 1344, -1000, -1000, -1000, -1000,
	28117, -1000, 2241, 89766, 89766, 74169, -1000, 89766, -1000, 2185,
	92111, 2182, 56099, 89766, -1000, -1000, 628, 625, 2382, 2364,
	1046, 89766, 89766, 2342, 91642, 91173, 89766, 2000, 38800, 2043,
	2225, 60, 60, -1000, -1000, 60, 624, 1266, 74169, 74169,
	89766, 74169, 1633, -1000, -1000, -1000, -1000, -1000, 66587, -1000,
	-1000, 3285, 3283, -1000, 1307, -1000, -1000, -1000, 1307, 1944,
	1593, 89766, 74169, 89766, 1918, 60, 60, -1000, -1000, 60,
	623, 19552, 1839, -1000, 2734, 89766, 3302, 89766, 89766, 89766,
	57538, 3052, 90704, 89766, 89766, 57538, 1590, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 57065, 1071, 978, 961, 47563, 2487,
	-1000, -1000, 17133, -1000, 101158, 101158, -1000, 101158, -1000, 55161,
	89766, -1000, 1010, 89766, 62799, 946, 2834, 51856, -43, 950,
	60915, 74169, -32, 89766, -1000, 1944, 2831, 495, 2180, -1000,
	-1000, 60915, 622, 3336, 3335, -1000, 2097, 2177, -1000, -1000,
	90235, 2819, 810, 89766, 986, 45633, 1853, -1000, 49960, 1025,
	89766, 1797, 89, -1000, -1000, -1000, 8, 89766, -1000, 3334,
	-1000, -1000, 205, 205, 205, -1000, 74169, 74169, 2119, -1000,
	204, -1000, 197, -1000, -86, -1000, -1000, 4337, 4337, 950,
	-212, 615, -1000, 858, 857, 48046, 60915, -100, -1000, -1000,
	-1000, -1000, -1000, 74169, 89766, 661, 2481, 89766, -103, -1000,
	227, 614, -1000, 2322, -1000, -1000, 971, 47563, 2643, -1000,
	-1000, 983, -1000, 1412, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -16, -43, -43, -1000, 973, -1000, 973,
	-1000, 973, -1000, 101158, -1000, -1000, 1569, 1554, 89766, -1000,
	19552, 89766, 74169, 19552, 74169, 2698, 2696, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1079, -1000, 1777, 2046, -1000,
	612, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2244, -1000, -35, 26109, 2132, -1000, -1000, 74169, -17, 38800,
	38800, 5212, 4858, 38800, 41794, 41794, -1000, 38800, 4600, -1000,
	-1000, -1000, -1000, -1000, 2641, 611, 38800, 56099, 4340, 1210,
	-1000, 396, 12115, 511, -1000, 38800, -1000, 376, 27618, -1000,
	99856, -48, -108, -1000, 14219, -150, -109, -1000, -1000, 775,
	-1000, 2919, -1000, 38800, 100089, 2220, 1941, 1736, 1583, 3278,
	3301, 16650, -1000, 53267, 988, 2026, 98070, -1000, -1000, -1000,
	-1000, 56099, 56099, 38800, 38800, -1000, 38800, 38800, 38800, -1000,
	-1000, -1000, 3278, 922, -1000, -1000, -1000, 922, -1000, -1000,
	1307, -1000, 1307, -1000, 38800, -1000, -1000, 2638, 38800, -1000,
	56099, 56099, 41794, 41794, 41794, 41794, 41794, 41794, 41794, 41794,
	41794, 41794, 41794, 41794, 41794, 41794, 41794, 41794, 41794, 41794,
	41794, 2307, 41794, 3252, 3252, 3252, -1000, 2693, 2638, 38800,
	38800, 56099, 375, 374, 373, -1000, 38800, -150, -1000, -1000,
	4337, 610, -1000, 2231, -1000, 2563, -1000, 38800, -1000, -105,
	-1000, 2769, -1000, -1000, 2563, 2563, -114, 101158, 45633, 45633,
	-1000, 606, 38800, 2388, -1000, -1000, 755, -267, -1000, 849,
	-1000, -1000, -1000, -1000, -1000, 495, -1000, -1000, -1000, 115,
	79817, 79817, 752, -1000, -115, -1000, -1000, -116, -1000, 3201,
	369, 19552, -1000, -1000, 3008, -1000, -1000, -1000, -1000, -1000,
	-1000, -43, 2040, 3300, -1000, 3281, 772, 751, 91, 3278,
	368, 364, 360, -43, 89766, -1000, -37, -1000, -1000, -1000,
	38800, -1000, -1000, 3006, 1229, 1222, -1000, -1000, 2830, -1000,
	2174, -1000, 1029, -1000, 1597, -1000, 38800, 38800, 605, 604,
	3333, 1767, 3332, 1059, 2826, 2119, 2823, 2119, -1000, -1000,
	910, -1000, 101158, 601, 598, -1000, -38, 1603, 1610, 980,
	-1000, -1000, 38800, 38800, 79348, -1000, 394, 3013, -19, -1000,
	-1000, 1600, 1218, -1000, -1000, -1000, -1000, 1944, 1594, 1203,
	-1000, -1000, -1000, -1000, 979, -1000, -1000, 38800, -1000, -39,
	1148, 3160, 2165, 74169, 1147, -1000, 1139, -1000, -1000, -1000,
	-1000, -1000, -1000, 3119, 2119, 2821, 1180, -1000, -1000, -1000,
	-1000, -1000, 56582, -1000, -1000, 2351, 865, 961, 2633, -1000,
	1138, 3331, 74169, 3329, 358, -117, -41, 56099, 3192, -1000,
	2065, 580, 74169, 918, -1000, 3264, -1000, -1000, -1000, -1000,
	74169, 3191, 2817, 978, 3298, -1000, -1000, 74169, 2816, 2090,
	2161, 2267, 810, 61861, -1000, 978, 2023, -57, -1000, 1797,
	27107, 3009, -124, -1000, -1000, -1000, 986, 52794, 45633, 38800,
	3328, -125, -1000, -1000, -1000, -1000, -1000, 190, -1000, -1000,
	-1000, -1000, -1000, -1000, 78406, 78406, 60915, 60915, 60915, 950,
	89766, 89766, 62799, -1000, 596, 89766, 89766, 594, -1000, 89766,
	89766, 3327, 60915, -42, 593, -1000, 840, 823, -1000, -1000,
	-1000, -1000, -1000, -127, 60, -1000, 2033, 74169, 16167, -1000,
	-1000, -1000, -1000, -1000, 973, -1000, -1000, 1937, 2123, 1937,
	1783, 1781, -1000, 2045, -1000, -1000, -1000, -1000, 2368, 3029,
	19552, 3123, 6144, 38800, 38800, 478, 1017, 494, 6144, 38800,
	38800, 56099, 6783, -130, 38800, 38800, -1000, 38800, 750, 101158,
	3297, 38800, 357, 356, -1000, -1000, -1000, 3276, -1000, -1000,
	-1000, 101158, 38800, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	352, -1000, 25, -1000, -1000, -1000, 95394, -1000, 38800, 351,
	3081, -1000, 348, 345, 8364, 8920, 98026, 97713, 97669, 342,
	-1000, -1000, 339, 338, 101158, 2693, 101158, -1000, -1000, 944,
	944, 1290, 1290, 1290, 1290, 3252, 825, 843, 862, 1055,
	1055, 1055, 552, 914, 914, 1055, 1055, 1055, 2620, 2302,
	591, 4902, -1000, -1000, 101158, 101158, 336, -1000, -1000, -1000,
	-150, 330, 4337, -1000, 2556, 3077, 101158, -1000, 45633, 2556,
	2556, -1000, -1000, 1653, 89766, 101158, 45633, -1000, 2766, -1000,
	14713, -1000, 19552, -1000, -1000, -1000, -1000, 3264, -1000, 49485,
	-1000, 587, -1000, 9, 3008, -1000, 818, -1000, -1000, -1000,
	749, 3326, 770, 19552, 327, -1000, -1000, -1000, -43, 101158,
	89766, 89766, 89766, 2814, -1000, 4274, -1000, 1046, 97356, -132,
	-1000, 99457, 38800, 89766, -1000, -1000, 1827, 2355, 1092, -1000,
	3044, 89766, -1000, 89766, -1000, -1000, 89766, 89766, 74169, 89766,
	2790, -139, 101158, -44, -1000, 817, -1000, 1297, -1000, 15684,
	89766, 74169, 89766, 74169, 2783, -140, 19552, -1000, 3296, 3295,
	2812, 3048, 3294, 89766, -1000, 89766, 74169, 2967, -1000, -1000,
	-45, 586, -1000, 816, -1000, -1000, 815, 961, -1000, 60915,
	47563, -1000, 495, -1000, 2476, -1000, 77458, 2074, 60, -1000,
	3324, 78879, 585, -1000, 2031, -1000, 566, 1944, 60, 74169,
	-1000, 319, -46, -1000, 1036, 19552, 74169, 2811, 2275, 810,
	61861, -1000, 1399, 2383, -1000, -53, -1000, 532, 60, 2023,
	-1000, -57, 101158, -1000, 814, -1000, -1000, -141, -1000, -1000,
	309, -1000, 2966, 2965, -1000, 2589, 38800, 584, 582, 89766,
	2964, -1000, -1000, -147, 2223, 2223, 60915, 60915, 971, -1000,
	2151, -1000, -1000, -1000, -1000, -1000, 19552, 1623, -1000, 581,
	578, -1000, -1000, -1000, -1000, 3029, 6144, 6144, 38800, 38800,
	38800, 6144, 6783, -154, -1000, 6144, 6144, -150, -1000, -1000,
	99856, -1000, -1000, -1000, 101158, -1000, 15201, 1973, -1000, 97312,
	-1000, 26109, -1000, -1000, 38800, 38800, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 41794, 2609, 576, 56099, -1000, -1000,
	300, 945, 38800, 38800, 2769, 945, 945, -1000, -155, -1000,
	-1000, -1000, 3264, 9, -1000, -1000, 3323, 19552, -1000, 60915,
	480, -1000, 3322, -1000, -1000, -1000, -1000, -1000, 89766, -1000,
	89766, -1000, 19552, 89766, 2597, 2149, -1000, -1000, 2340, 571,
	41794, 74169, 829, -1000, 3224, 2568, 1870, 38800, 2132, -157,
	-163, 2144, -1000, -1000, 2135, 38800, -1000, 56099, 570, 2119,
	2119, -164, -165, -1000, -1000, 38800, 1136, 89766, 26608, -1000,
	3320, 3013, -1000, -1000, -1000, -1000, 38800, 1129, -1000, -1000,
	-1000, 3292, 2119, 19552, -1000, 2119, 2119, 3048, 1090, 2085,
	2085, 60915, 47563, -1000, -86, 961, 3171, 1918, 2500, -1000,
	-1000, -1000, -1000, 2325, -1000, -1000, 89766, 2321, 951, -1000,
	-170, -1000, 813, 812, 62799, 946, 913, -1000, -1000, -1000,
	495, -1000, 3291, 561, 89766, 2088, 560, 19552, -1000, 810,
	61861, -1000, 2819, 1797, -1000, 2928, 89766, 3001, -1000, 2383,
	559, -1000, 950, 558, 554, 3103, 3103, -171, 38800, 38800,
	-172, 551, 950, -1000, -173, -1000, -1000, -1000, -126, -1000,
	786, 785, -1000, -1000, 74169, 74169, 38800, 38800, -1000, 6144,
	6144, 6144, -1000, 299, -1000, -1000, 2023, 3065, -1000, -137,
	96999, 96955, 4920, 41794, 56099, -178, -1000, -1000, 89766, 101158,
	-150, -1000, -1000, -1000, 553, -1000, -1000, 3318, -1000, -1000,
	2066, -1000, -1000, -1000, 89766, 2154, -1000, 1042, 38800, 4902,
	538, 38800, -1000, 3170, -1000, 2470, 2619, 2476, 534, -1000,
	-1000, -1000, -1000, -1000, 1032, 1845, -1000, -1000, 101158, 3048,
	38800, -1000, -1000, 531, 530, 101158, 529, 805, 2605, -1000,
	-1000, -1000, 101158, 524, 3160, -1000, -1000, -1000, -1000, 2119,
	74169, -1000, -179, -1000, -1000, 1861, 60, 946, -1000, 1992,
	2074, 508, -1000, -1000, 2073, 2392, -1000, 78879, 43243, 43243,
	291, 3169, 913, -1000, 3271, -1000, 3165, -1000, 38800, -1000,
	74169, 38800, 2084, 61861, -1000, 2267, -1000, 1268, -181, 89766,
	1797, -1000, -1000, 60915, 60915, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1032, -186, -188, -1000,
	60915, -1000, -1000, 2151, -1000, 89766, -1000, 89766, -1000, -1000,
	-193, -196, -1000, 1913, 38800, 26109, -1000, -1000, 4920, -199,
	-1000, -142, -1000, 3163, -1000, -1000, -1000, -1000, 2809, 2544,
	96642, 2236, 89766, 96598, -1000, 2615, -1000, -1000, 1918, 89766,
	2476, 2540, 74169, 1040, -201, 1937, 1937, 38800, 25610, 1989,
	38800, -1000, -1000, 3048, -1000, 2593, 3260, -1000, 2073, 74169,
	89766, -1000, 3038, -1000, 2963, -1000, -1000, -1000, 2476, 60,
	-1000, -1000, 60, -202, 1036, -207, 74169, -1000, 2275, 1514,
	-1000, 986, -1000, -1000, -214, -217, 1870, 1032, 986, -220,
	-1000, -222, -225, -1000, -1000, 210, 39798, 39798, 39798, -150,
	-184, -1000, 89766, 496, 2772, 957, -1000, 2077, 1726, 99,
	1058, -1000, -1000, 2568, -227, -1000, 955, 495, -1000, 38800,
	1032, -228, -1000, 1023, -230, -1000, 1021, -235, -1000, 2603,
	-1000, -236, 2119, 953, 3101, -1000, -1000, -1000, -1000, 493,
	-237, -1000, -1000, 2270, -1000, 1918, 951, -1000, 1032, 481,
	1870, 465, -1000, 52794, -1000, 950, 950, 2476, 1870, -1000,
	950, -1000, -1000, -1000, 2910, -1000, 42760, 2063, 1763, 99141,
	2910, 2910, -1000, -1000, 89766, 3091, -1000, 2079, 2078, 1417,
	-1000, -1000, -1000, -1000, -1000, -1000, 986, -1000, 3090, 2236,
	101158, 2476, -1000, 1937, 2499, -1000, 1937, 2602, -1000, 1919,
	-1000, -1000, -1000, 2800, 3256, 89766, -1000, 89766, 1766, 1761,
	3316, 946, 2073, 1870, 38800, 2476, 38800, -233, -1000, -1000,
	1918, 2476, -1000, -1000, 1757, 3219, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 799, -1000, 2949, -1000, 1074, 1971,
	1971, -1000, 793, 2077, -1000, -1000, 462, -1000, 461, -1000,
	1670, -1000, -1000, -238, -1000, -1000, 3315, -1000, 2073, -1000,
	2476, -243, 1918, -245, -1000, 986, 1918, 1758, -1000, -1000,
	2017, 39299, 38800, -1000, 3240, -1000, -1000, 2317, -1000, 38800,
	2568, 38800, 38800, 2029, 2117, -1000, -1000, 1918, 1032, 947,
	1870, -1000, 986, -1000, -1000, -1000, 101158, -1000, -1000, -1000,
	101158, -1000, -250, -253, 51383, -1000, -1000, -1000, 947, 1870,
	986, 450, 2476, -1000, 1918, 1127, -212, 78406, 986, 2476,
	-1000, 1918, -1000, 432, -258, -1000, 1918, 947, 38800, -1000,
	947, 986, -260, 986, -1000, 1918, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4068, 4067, 4064, 4063, 4061, 4059, 4056, 4055, 4054,
	4053, 4052, 4050, 4049, 4045, 4033, 4032, 4030, 4027, 4026,
	4025, 4012, 4011, 4010, 4009, 4008, 4007, 4005, 4004, 4002,
	3999, 3998, 3996, 3994, 3991, 3990, 3989, 3988, 3986, 3985,
	3984, 3982, 3980, 3979, 3978, 3977, 3976, 3975, 3974, 3973,
	3972, 3969, 41, 3968, 3966, 3964, 3963, 3962, 3961, 3960,
	3959, 3958, 3955, 3944, 3943, 3941, 3939, 3938, 3936, 3934,
	3927, 47, 3921, 235, 3906, 3905, 3904, 3902, 3901, 3899,
	3897, 3895, 3892, 3891, 3887, 3886, 234, 3879, 132, 3876,
	3873, 3870, 3867, 3863, 233, 3858, 3857, 3856, 3854, 239,
	3853, 3852, 3851, 3850, 3849, 3843, 3841, 3839, 3838, 69,
	128, 3833, 64, 3828, 3824, 3823, 3822, 3820, 3816, 3810,
	3808, 3806, 3803, 213, 3802, 232, 3800, 3799, 3797, 3796,
	3795, 3793, 3791, 3790, 3785, 3783, 3778, 3777, 3776, 3775,
	3773, 3772, 3771, 3770, 3769, 3768, 3767, 3766, 3765, 3764,
	3763, 3762, 3760, 3756, 3755, 3749, 3748, 244, 156, 3747,
	3746, 231, 230, 3745, 3744, 3743, 3740, 3739, 105, 4,
	37, 3738, 3737, 58, 75, 66, 84, 91, 83, 3736,
	88, 3734, 123, 49, 3732, 16, 2, 207, 220, 7709,
	201, 3731, 3729, 3728, 210, 166, 3726, 202, 3725, 3724,
	3723, 3721, 82, 76, 149, 148, 145, 142, 353, 3720,
	3718, 85, 55, 44, 26, 3717, 3716, 3715, 3168, 109,
	3714, 228, 197, 135, 3713, 3702, 3701, 1529, 3697, 34,
	3693, 164, 71, 108, 32, 102, 3692, 125, 20, 3688,
	165, 42, 3687, 129, 77, 67, 6766, 7558, 3686, 98,
	48, 107, 51, 155, 154, 171, 115, 167, 181, 179,
	140, 968, 3685, 214, 3682, 3146, 54, 144, 3680, 3679,
	3676, 56, 163, 87, 3671, 3666, 53, 10, 5, 1,
	147, 17, 97, 14, 3665, 21, 3663, 3662, 3656, 3654,
	27, 168, 3653, 237, 3652, 100, 39, 9, 3651, 36,
	188, 3650, 198, 106, 3649, 3647, 224, 170, 175, 3646,
	74, 186, 3643, 3640, 3639, 3634, 3633, 116, 23, 104,
	3631, 3630, 113, 205, 161, 3629, 45, 3628, 143, 86,
	124, 243, 103, 183, 93, 194, 157, 199, 3627, 3626,
	3625, 158, 3624, 3623, 180, 137, 3621, 3620, 178, 241,
	35, 61, 195, 62, 160, 134, 3619, 173, 3615, 3613,
	3612, 238, 152, 177, 12, 24, 79, 101, 30, 13,
	196, 119, 269, 96, 3611, 4370, 1371, 65, 46, 3609,
	114, 90, 57, 120, 141, 227, 59, 3608, 3607, 191,
	3606, 3605, 3599, 3598, 153, 3595, 3592, 3591, 136, 133,
	182, 3589, 81, 78, 11, 117, 206, 229, 95, 190,
	162, 219, 3584, 150, 3582, 72, 121, 3580, 169, 215,
	3578, 3577, 189, 3575, 118, 1472, 52, 139, 3574, 185,
	3572, 3571, 3569, 3565, 3563, 3561, 3559, 852, 193, 3557,
	3556, 3555, 122, 159, 3554, 226, 311, 172, 99, 38,
	3553, 70, 2011, 3552, 710, 203, 43, 3550, 2713, 40,
	0, 9935, 8615, 6616, 9679, 3549, 4333, 3547, 3546, 3544,
	184, 111, 3542, 3541, 3540, 94, 3539, 60, 3538, 3537,
	50, 3527, 19, 7, 8, 18, 22, 1186, 324, 3526,
	3525, 89, 112, 126, 3524, 236, 192, 3523, 3522, 3521,
	3519, 80, 3518, 33, 3516, 28, 3515, 3511, 29, 6,
	31, 3510, 3509, 200, 3506, 208, 3504, 130, 3501, 3144,
	110, 3500, 3499, 225, 73, 3497, 221, 3494, 3105, 3494,
	3493, 3491, 15, 3490, 3489, 204, 146, 187, 3488, 138,
	3485, 131, 3482, 3479, 3478, 218, 3474, 3465, 25, 3464,
	3, 3462, 3461, 176, 2945, 3460, 3456, 63, 3449, 151,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 11, 11, 7, 7, 7, 8, 8, 8,
	8, 39, 39, 9, 9, 9, 10, 10, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 16, 16, 28,
	28, 17, 17, 30, 30, 18, 18, 31, 31, 523,
	523, 21, 33, 22, 34, 15, 524, 524, 524, 524,
	27, 23, 35, 25, 25, 25, 25, 25, 171, 171,
	171, 171, 20, 20, 29, 29, 205, 205, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	522, 522, 207, 207, 206, 201, 201, 525, 525, 208,
	208, 208, 210, 210, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 426, 426, 426, 539, 539, 539, 540,
	540, 541, 541, 541, 541, 541, 41, 41, 41, 41,
	517, 517, 173, 173, 173, 175, 175, 174, 174, 174,
	174, 62, 62, 531, 531, 532, 532, 530, 529, 529,
	533, 533, 533, 172, 172, 172, 108, 108, 108, 108,
	109, 109, 110, 110, 176, 176, 176, 178, 178, 177,
	177, 177, 177, 177, 177, 182, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 90, 90, 458, 458, 459,
	459, 167, 167, 168, 168, 168, 168, 169, 169, 170,
	170, 170, 55, 179, 179, 181, 181, 180, 180, 43,
	43, 43, 43, 43, 43, 43, 44, 44, 44, 44,
	44, 45, 45, 45, 45, 45, 45, 46, 46, 46,
	46, 46, 46, 53, 53, 53, 53, 158, 158, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 543, 543,
	544, 544, 545, 545, 546, 546, 546, 546, 546, 546,
	546, 546, 546, 546, 546, 546, 546, 546, 546, 546,
	546, 546, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	68, 68, 292, 292, 264, 264, 69, 69, 69, 70,
	70, 71, 71, 57, 57, 515, 515, 307, 307, 417,
	417, 73, 73, 327, 327, 74, 74, 74, 74, 74,
	74, 75, 75, 75, 75, 75, 75, 75, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 83, 83, 83, 84, 84, 84, 81, 81,
	81, 78, 78, 78, 77, 77, 77, 82, 82, 82,
	255, 255, 80, 80, 80, 257, 257, 79, 79, 79,
	308, 308, 85, 85, 85, 85, 265, 86, 86, 86,
	86, 86, 86, 86, 86, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 419, 419,
	87, 87, 87, 387, 387, 91, 91, 91, 342, 342,
	92, 92, 92, 92, 92, 93, 93, 93, 93, 111,
	111, 111, 111, 519, 519, 300, 300, 221, 221, 221,
	221, 101, 101, 101, 101, 102, 102, 102, 103, 103,
	163, 163, 117, 117, 117, 117, 117, 116, 116, 116,
	116, 116, 116, 47, 47, 47, 48, 48, 49, 49,
	50, 50, 51, 51, 52, 52, 52, 52, 52, 119,
	119, 536, 536, 121, 118, 118, 118, 120, 120, 120,
	120, 122, 123, 123, 123, 123, 123, 123, 123, 123,
	124, 124, 451, 451, 316, 316, 449, 449, 467, 467,
	450, 450, 269, 269, 269, 269, 269, 270, 270, 270,
	457, 457, 457, 457, 457, 457, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 164, 164, 165, 166,
	166, 166, 166, 145, 145, 145, 157, 157, 157, 157,
	157, 157, 157, 148, 148, 148, 135, 135, 126, 126,
	126, 126, 126, 130, 130, 130, 130, 130, 130, 130,
	130, 127, 127, 137, 137, 137, 137, 137, 131, 131,
	132, 132, 134, 134, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 128, 128, 128, 128, 139, 139, 139,
	139, 349, 349, 349, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 156, 156, 156, 156, 156,
	156, 534, 534, 535, 535, 152, 152, 152, 152, 152,
	152, 401, 401, 146, 146, 146, 146, 151, 151, 151,
	151, 332, 332, 143, 143, 143, 144, 144, 144, 149,
	149, 150, 147, 147, 153, 153, 153, 153, 129, 129,
	129, 547, 547, 547, 154, 154, 142, 142, 155, 155,
	155, 155, 155, 155, 155, 155, 141, 141, 141, 140,
	140, 140, 140, 133, 516, 516, 513, 513, 513, 513,
	513, 513, 513, 513, 514, 514, 518, 518, 96, 96,
	96, 96, 96, 104, 104, 104, 104, 104, 97, 97,
	97, 97, 97, 99, 99, 98, 98, 98, 98, 63,
	63, 63, 14, 14, 14, 64, 64, 185, 185, 185,
	186, 186, 277, 277, 277, 277, 183, 183, 184, 184,
	65, 65, 548, 548, 548, 526, 526, 526, 527, 527,
	527, 527, 527, 527, 271, 271, 272, 272, 367, 367,
	367, 367, 367, 275, 275, 275, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 278, 278, 209, 209, 209,
	281, 282, 282, 279, 279, 280, 280, 280, 284, 284,
	283, 286, 286, 285, 366, 476, 476, 478, 478, 478,
	478, 478, 478, 478, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 549, 549, 474, 474, 474,
	475, 470, 470, 471, 471, 471, 471, 471, 273, 273,
	274, 274, 274, 274, 472, 473, 298, 298, 404, 477,
	477, 479, 479, 481, 550, 550, 550, 550, 550, 550,
	551, 551, 551, 365, 365, 364, 364, 290, 290, 482,
	482, 482, 482, 483, 483, 483, 483, 483, 486, 485,
	484, 484, 484, 484, 484, 67, 67, 67, 329, 329,
	328, 328, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 160, 160, 224,
	224, 61, 61, 61, 12, 12, 12, 528, 528, 528,
	66, 66, 66, 66, 223, 223, 223, 223, 223, 223,
	521, 521, 520, 520, 225, 225, 553, 553, 72, 72,
	72, 72, 72, 72, 72, 420, 420, 421, 421, 60,
	60, 60, 60, 60, 350, 350, 348, 348, 347, 347,
	297, 297, 403, 229, 229, 202, 202, 202, 26, 19,
	19, 24, 24, 37, 37, 40, 40, 36, 36, 38,
	38, 32, 32, 537, 537, 538, 538, 100, 100, 105,
	105, 105, 105, 105, 106, 106, 106, 106, 107, 107,
	107, 107, 115, 115, 159, 159, 159, 159, 159, 159,
	159, 42, 42, 42, 42, 54, 54, 54, 54, 113,
	555, 555, 555, 114, 114, 114, 554, 554, 222, 222,
	361, 361, 362, 362, 556, 556, 363, 363, 363, 363,
	216, 215, 217, 217, 59, 59, 59, 211, 211, 212,
	212, 213, 213, 214, 214, 557, 557, 94, 94, 94,
	162, 162, 263, 263, 263, 357, 357, 357, 291, 291,
	235, 235, 360, 360, 358, 358, 358, 358, 326, 326,
	326, 161, 161, 305, 305, 318, 318, 319, 319, 414,
	414, 320, 112, 112, 189, 189, 187, 187, 187, 187,
	187, 187, 187, 187, 194, 194, 195, 195, 196, 196,
	197, 198, 198, 198, 198, 309, 309, 199, 199, 199,
	188, 188, 188, 190, 190, 190, 190, 190, 190, 190,
	193, 193, 193, 193, 200, 200, 200, 192, 192, 493,
	493, 493, 495, 495, 497, 497, 496, 496, 492, 492,
	494, 494, 552, 552, 331, 331, 331, 288, 289, 287,
	287, 295, 295, 293, 294, 294, 296, 296, 402, 402,
	402, 203, 203, 203, 323, 323, 323, 323, 324, 324,
	353, 353, 351, 351, 351, 351, 352, 352, 354, 354,
	354, 355, 355, 356, 356, 322, 322, 383, 383, 191,
	191, 191, 302, 302, 302, 303, 303, 373, 373, 373,
	373, 373, 373, 374, 374, 372, 372, 372, 372, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 406, 407,
	407, 304, 304, 408, 359, 359, 511, 511, 511, 512,
	512, 400, 400, 409, 409, 409, 409, 409, 409, 398,
	398, 399, 399, 415, 416, 416, 335, 335, 335, 335,
	333, 333, 336, 336, 336, 336, 334, 334, 410, 410,
	410, 410, 325, 325, 411, 411, 411, 411, 412, 368,
	369, 369, 422, 422, 422, 422, 424, 301, 301, 301,
	301, 301, 469, 468, 468, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 438, 438, 438, 438, 438, 438,
	438, 438, 439, 439, 439, 439, 439, 439, 425, 425,
	425, 425, 425, 429, 429, 429, 428, 428, 428, 428,
	428, 428, 428, 428, 428, 428, 428, 430, 430, 435,
	435, 436, 436, 436, 431, 432, 437, 437, 437, 437,
	558, 558, 441, 441, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 427, 427, 427, 434, 434, 434, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	344, 344, 343, 343, 345, 345, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 377, 377, 377, 377, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 487, 487, 487, 487, 487, 487, 487, 487,
	379, 379, 490, 490, 491, 491, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 498, 498, 499, 499, 501,
	501, 502, 502, 503, 504, 504, 504, 505, 506, 506,
	500, 500, 507, 507, 507, 507, 508, 508, 509, 509,
	509, 509, 509, 510, 510, 510, 510, 510, 389, 389,
	390, 390, 396, 396, 396, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 226, 226, 226, 226, 226, 314, 314, 312, 312,
	312, 315, 315, 313, 313, 311, 311, 310, 310, 386,
	386, 384, 384, 388, 388, 337, 337, 440, 440, 440,
	440, 440, 440, 440, 440, 338, 338, 338, 346, 339,
	339, 340, 340, 340, 340, 340, 380, 381, 341, 341,
	341, 382, 382, 391, 395, 395, 394, 393, 393, 392,
	392, 370, 370, 371, 371, 321, 321, 559, 559, 317,
	317, 413, 413, 413, 413, 267, 267, 306, 306, 266,
	266, 258, 258, 259, 259, 259, 259, 299, 299, 397,
	397, 442, 442, 443, 443, 444, 444, 445, 445, 446,
	447, 448, 385, 385, 245, 244, 232, 233, 243, 242,
	241, 231, 234, 238, 239, 240, 236, 237, 251, 250,
	249, 256, 247, 248, 418, 230, 260, 260, 261, 261,
	261, 262, 262, 262, 262, 227, 227, 228, 228, 252,
	252, 253, 254, 254, 246, 246, 246, 218, 218, 218,
	219, 219, 220, 220, 456, 456, 453, 453, 453, 454,
	454, 454, 455, 455, 455, 455, 452, 452, 452, 452,
	452, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 461, 461, 462, 462, 462, 462, 462,
	462, 462, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 462, 463, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 466, 466,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 3, 1, 1, 1,
	3, 4, 6, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 5, 5, 6, 6, 4, 4, 4, 4, 3,
	4, 4, 4, 7, 7, 9, 8, 9, 5, 3,
	5, 7, 4, 12, 4, 12, 1, 3, 5, 5,
	2, 5, 3, 6, 4, 6, 5, 6, 6, 4,
	8, 3, 4, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 8, 6, 6, 6,
	9, 4, 3, 2, 2, 0, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 6, 8, 7, 2,
	0, 1, 2, 5, 0, 1, 3, 3, 1, 1,
	3, 12, 3, 1, 0, 1, 1, 2, 2, 1,
	3, 3, 0, 5, 7, 0, 5, 6, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 1, 1, 1, 1, 1, 6, 4, 9, 7,
	12, 12, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 6, 2, 0, 1, 2, 3, 1, 1,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 6, 6, 6, 6, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 3, 3,
	4, 3, 4, 7, 4, 4, 4, 3, 5, 7,
	4, 3, 3, 4, 3, 3, 3, 3, 2, 0,
	1, 0, 1, 0, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 5, 1, 2, 1, 3, 2,
	0, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 3, 4, 6, 3, 4, 6,
	3, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	1, 3, 4, 6, 3, 1, 3, 3, 5, 3,
	1, 3, 2, 2, 2, 2, 1, 2, 2, 5,
	3, 3, 6, 6, 3, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 6, 4, 7, 2, 6,
	4, 7, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 1, 3, 5, 4, 6, 4,
	3, 0, 1, 3, 2, 4, 2, 4, 1, 6,
	3, 1, 1, 5, 3, 2, 6, 3, 3, 4,
	4, 3, 1, 3, 2, 3, 3, 1, 3, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 2, 1, 3,
	3, 3, 3, 2, 3, 3, 1, 1, 1, 1,
	1, 2, 2, 5, 7, 3, 3, 3, 4, 5,
	5, 5, 3, 4, 4, 3, 4, 4, 3, 4,
	4, 5, 3, 5, 5, 5, 7, 3, 3, 3,
	2, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 4, 3, 4, 3, 3, 4, 4,
	5, 0, 1, 1, 3, 2, 4, 3, 3, 5,
	3, 4, 3, 5, 3, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 4,
	3, 1, 1, 1, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 3, 4, 10, 10, 3, 5,
	5, 5, 3, 5, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	6, 3, 6, 6, 3, 11, 14, 1, 2, 3,
	0, 4, 0, 4, 5, 4, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 1, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 8, 0, 1, 1, 0,
	2, 1, 0, 1, 0, 9, 9, 3, 1, 3,
	7, 1, 3, 11, 3, 2, 0, 3, 1, 2,
	2, 3, 2, 6, 2, 1, 1, 2, 8, 4,
	2, 5, 5, 5, 2, 1, 3, 10, 11, 7,
	5, 3, 1, 5, 9, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 5, 1, 3, 1, 2,
	0, 1, 2, 2, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 6, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 4, 2, 2,
	2, 4, 7, 3, 4, 6, 3, 1, 1, 1,
	8, 10, 11, 5, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 3, 0, 1, 8, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 17,
	20, 16, 19, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 3, 2, 0, 1, 1, 0, 6, 6,
	8, 6, 8, 6, 8, 6, 8, 6, 8, 6,
	8, 6, 8, 1, 0, 2, 0, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	2, 3, 2, 2, 8, 11, 3, 3, 0, 3,
	0, 3, 0, 3, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 8, 5, 3, 4, 3, 0, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 3, 3, 5, 1, 3, 3, 4,
	5, 2, 2, 0, 2, 2, 1, 1, 1, 0,
	1, 0, 2, 2, 5, 4, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 0, 3, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 2, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 6, 6, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 1, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	2, 2, 4, 1, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 6, 6,
	8, 8, 6, 4, 6, 6, 6, 4, 1, 3,
	3, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 1, 2,
	3, 2, 3, 2, 3, 1, 0, 1, 3, 1,
	3, 3, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 1, 2, 3,
	0, 3, 3, 2, 2, 1, 2, 2, 3, 2,
	1, 1, 1, 5, 1, 2, 4, 2, 0, 1,
	0, 3, 5, 1, 0, 1, 2, 1, 0, 1,
	3, 3, 2, 1, 1, 1, 3, 1, 3, 3,
	1, 1, 1, 1, 5, 3, 1, 1, 3, 1,
	1, 1, 1, 2, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 513, -88, -85, -55, -53, -91, -92,
	-74, -93, -87, -111, -115, -100, -117, -159, -164, -165,
	-166, -3, -41, -43, -56, -73, -75, -86, -95, -94,
	-96, -101, -108, -104, -90, -47, -112, -116, -125, -160,
	-161, -162, 31, 30, 91, 75, 140, 115, 123, 178,
	327, 362, 373, 354, -120, -121, 390, -42, -54, -114,
	-113, 68, 116, 349, -4, -12, 28, 44, -44, -45,
	-46, 58, -61, -58, -68, -62, -542, 93, -494, -76,
	-79, -107, -546, 128, 147, 196, -97, -98, 316, -102,
	-103, 356, -105, -106, 358, 148, -49, -48, 142, -187,
	-189, -118, -119, -163, -126, -127, -128, -129, -130, -131,
	-132, -133, -134, -135, -136, -137, -138, -156, -139, -140,
	-141, -142, -147, -143, -144, -145, -146, -148, -149, -151,
	-152, -153, -154, -155, 394, -150, 448, 46, 408, 77,
	132, 366, 21, -5, -6, -7, -8, -9, -10, -11,
	-14, -13, -57, -59, -60, -63, -64, -65, -72, -66,
	-67, -493, -77, -78, -81, -83, -84, -80, -82, 355,
	-190, -188, 510, 462, -16, -21, -22, -17, -18, -20,
	-23, -19, -24, -28, -33, -34, -30, -31, -29, -32,
	-35, -36, -37, -38, -39, -40, -26, -27, -15, -25,
	480, 488, -193, -191, -192, -200, 382, 470, 424, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, -265, 2,
	-247, -252, -253, -254, -246, -218, -463, -466, 4, -460,
	-464, 153, 205, 281, 21, 22, 23, 24, 25, 26,
	28, 29, 40, 41, 43, 42, 44, 45, 46, 50,
	52, 55, 56, 57, 58, 59, 63, 68, 69, 74,
	75, 76, 77, 78, 79, 80, 86, 83, 84, 85,
	88, 90, 91, 92, 94, 96, 97, 105, 106, 107,
	108, 110, 115, 116, 119, 114, 118, 121, 122, 123,
	126, 127, 128, 130, 131, 133, 134, 135, 137, 138,
	140, 141, 142, 145, 143, 431, 144, 146, 147, 148,
	149, 159, 160, 161, 166, 168, 172, 173, 176, 177,
	179, 183, 185, 186, 187, 188, 189, 195, 196, 198,
	199, 200, 201, 206, 207, 211, 208, 217, 218, 222,
	223, 224, 226, 230, 231, 232, 233, 234, 235, 237,
	239, 238, 241, 244, 245, 248, 249, 250, 253, 254,
	255, 256, 258, 259, 262, 260, 263, 261, 265, 266,
	267, 264, 270, 268, 272, 273, 274, 279, 277, 275,
	276, 283, 286, 193, 288, 289, 292, 310, 296, 297,
	298, 301, 302, 305, 308, 309, 311, 312, 313, 314,
	315, 316, 317, 318, 320, 321, 325, 327, 328, 330,
	332, 333, 334, 335, 336, 337, 338, 341, 340, 342,
	349, 354, 351, 352, 353, 355, 356, 357, 358, 360,
	361, 362, 364, 365, 366, 367, 369, 371, 372, 375,
	376, 391, 392, 410, 373, 374, 377, 378, 379, 380,
	381, 385, 383, 384, 386, 387, 388, 390, 393, 394,
	396, 397, 398, 399, 400, 401, 404, 406, 407, 408,
	409, 411, 414, 415, 416, 417, 412, 423, 420, 421,
	425, 426, 427, 428, 429, 430, 432, 434, 442, 443,
	445, 448, 449, 450, 440, 452, 453, 456, 457, 458,
	461, 459, 460, 462, 464, 467, 468, 469, 475, 474,
	481, 482, 484, 485, 486, 35, 47, 48, 51, 53,
	64, 65, 66, 70, 111, 112, 139, 150, 151, 162,
	174, 175, 180, 182, 190, 191, 192, 212, 213, 215,
	220, 242, 285, 287, 303, 307, 322, 323, 324, 326,
	339, 368, 402, 413, 418, 435, 436, 437, 438, 444,
	446, 470, 471, 472, 476, 483, -265, 2, -247, 294,
	-240, 2, -218, -218, 327, 27, 2, 27, 321, 384,
	426, 428, 2, -519, -300, 2, 27, -221, -218, 93,
	178, 382, -240, 2, -519, -300, 24, 2, -218, 2,
	-222, 2, 373, -218, 513, 88, 250, 69, 368, 387,
	-123, 443, -122, 435, 377, -124, -451, 2, 270, -218,
	513, 513, 513, 27, -230, -218, 424, 205, 107, 421,
	513, 2, 424, 313, 474, 383, 107, 336, 205, 450,
	377, -528, 364, 181, 463, -517, 2, -513, 4, -464,
	-460, -259, -258, 424, 429, 107, -254, -246, 503, -253,
	513, 513, 513, 2, 223, 224, 335, 334, 387, 388,
	513, 513, 513, 375, 2, 26, 61, 87, 90, 113,
	149, 169, 172, 299, -543, 259, 310, 333, 386, 423,
	432, 445, -527, 409, 63, 377, -526, -528, 450, 126,
	-347, 107, 250, 177, 457, 428, 426, 455, 119, 211,
	460, 459, 513, 513, 26, 61, 72, 90, 126, 149,
	169, 172, -545, 310, 333, 371, 386, 423, 432, 445,
	2, 474, 383, 424, 205, 107, 450, 377, -528, 375,
	376, 331, -88, 2, 510, 31, 30, 390, -182, 424,
	216, 2, -218, 513, 513, 2, 223, 224, 375, 376,
	513, 513, 170, -513, 2, 513, 513, 2, 223, 224,
	375, 376, 216, 2, 63, 379, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 2, -157, 387, 409,
	187, 44, 69, 27, 332, 74, 314, 108, 134, 179,
	205, 206, 231, 87, 88, -349, 43, 224, 223, 376,
	-534, 375, -401, 425, 378, 384, 420, 235, 373, 443,
	93, 464, 365, 486, 336, 337, 143, 4, 107, 270,
	389, 435, 250, 372, 317, 79, 513, -552, 2, 424,
	-554, 2, 443, 443, 2, -554, 2, -554, 2, -554,
	2, -555, 443, 483, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, -188, -190, -189, 513, 513, 513, 513, 513, 513,
	513, -157, 387, 2, 69, 27, -293, -295, 454, 214,
	136, 300, -187, -189, 2, -493, -449, 2, -375, -467,
	-377, 501, 502, 494, 422, 62, 280, 487, -389, 113,
	455, 294, -466, -378, -391, 139, 368, -315, 8, 9,
	5, 6, 7, -227, -379, -385, 447, 152, 284, -262,
	514, 10, 510, -490, -189, -390, 36, 182, 60, -453,
	-261, -228, -425, 215, -260, -246, -487, -488, 4, -460,
	-461, -454, -428, -436, -432, -433, -439, -218, -463, 72,
	99, 100, 98, 103, 102, 252, 251, 104, 101, 389,
	463, 61, 35, 190, 191, 220, 285, 192, 70, -489,
	127, -462, 212, 213, 402, 48, 339, 162, 112, 111,
	287, 53, 51, 471, -437, 109, 435, 436, 437, 438,
	174, 175, 150, 151, 307, 324, 418, 444, 446, 180,
	242, 95, 171, 210, 194, 219, 221, 225, 243, 246,
	271, 278, 282, 304, 306, 363, 395, -558, 472, 413,
	64, 65, -495, 340, -496, -240, -495, 513, 513, 515,
	513, -287, -288, -289, 2, 27, 124, 510, 2, -405,
	2, -406, -410, -189, 236, -409, 510, -407, 508, -247,
	295, -491, 369, -487, -488, -227, -246, -261, 4, -460,
	-462, 512, -290, 510, 107, 424, 73, 205, -342, 510,
	-218, 27, 294, 439, 515, -387, 510, 294, 170, 297,
	-218, 2, 2, 391, 2, 510, -123, 66, 443, 42,
	387, -362, 2, -363, -215, -216, -217, -415, 222, 330,
	338, 489, 486, -449, -536, 170, 493, 439, -449, -316,
	512, 2, 2, 2, 2, 2, -410, 190, -247, 2,
	-244, -452, 4, -460, -464, -461, -465, -463, 27, 30,
	31, 32, 34, 36, 37, 38, 39, 54, 60, 61,
	67, 71, 73, 82, 87, 93, 98, 99, 101, 100,
	102, 103, 104, 113, 117, 120, 124, 125, 129, 132,
	136, 152, 154, 167, 169, 170, 178, 181, 184, 197,
	209, 214, 216, 236, 240, 247, 251, 252, 280, 284,
	290, 294, 295, 299, 300, 319, 329, 343, 359, 382,
	389, 405, 419, 424, 433, 439, 441, 447, 454, 455,
	463, 465, 473, 477, 478, 479, 480, -466, 72, 2,
	-410, 190, 2, -249, 190, -410, -252, 2, -231, -218,
	2, -243, -452, 2, -266, 190, -247, -248, -252, -250,
	2, -252, -256, 2, -218, -458, 190, 2, -456, 10,
	-455, 5, 4, -460, -464, -461, 216, 439, 515, -306,
	-258, -259, -448, 8, -299, -218, 512, -375, 2, -112,
	-99, 2, 167, -375, 190, 2, -112, 190, 2, -375,
	190, 2, -112, 190, 2, -531, 2, -458, 2, 2,
	445, 2, 90, 190, -218, 424, 106, 2, 353, -544,
	371, 449, 474, 2, 2, 2, 2, 2, 2, 424,
	-236, 2, -218, 167, -256, 190, 2, 383, -553, 340,
	-458, 190, 2, -250, 2, -250, 205, 218, -231, 190,
	2, 428, 426, 428, 426, 170, 2, 216, 2, 216,
	2, -411, 2, -412, -406, -247, 508, 2, 2, 2,
	2, 2, 190, -218, 424, 106, 2, 234, 2, 2,
	2, 2, 2, 2, 2, -308, 190, 2, -247, -308,
	190, 2, -308, 190, 2, -348, 2, 82, -231, 190,
	2, -255, 190, 2, -250, -257, 190, 2, -256, -459,
	190, 2, -458, -375, 2, -112, 2, -419, 2, -418,
	-455, 470, -88, 510, -88, 510, 387, 510, -458, -247,
	-247, -375, 2, -112, -99, 2, -375, 2, -112, 2,
	-110, -109, -458, 510, 170, -375, 2, -112, -99, 2,
	-375, 2, -112, 2, -182, 167, 2, 107, 424, -157,
	2, 167, 465, 2, 8, 2, -458, 378, 337, 159,
	2, 391, 2, 392, 69, -349, 486, 69, 170, 2,
	170, 2, -332, 2, 480, 2, -516, 2, 294, 170,
	2, 170, 2, 170, 2, 170, 2, 170, 2, 334,
	388, 224, 2, -112, 477, -99, -375, 477, 2, -535,
	167, 376, -375, 2, 442, 233, 144, 170, -332, 2,
	170, 2, 170, 2, 5, 2, 335, 410, 2, 222,
	330, 410, 2, -247, -547, 2, 424, 474, 383, 2,
	2, 83, 84, 170, 2, 170, 2, 170, 486, 2,
	-325, -410, -361, -362, -361, 439, -293, -295, -157, 391,
	2, -194, -323, -196, 167, -351, -352, -197, 247, 154,
	290, -198, -331, 27, 124, -331, -331, 56, 511, 511,
	11, 12, 71, 40, 501, 502, 503, 504, 165, 505,
	506, 499, 500, 498, 491, 492, 496, 228, 229, 89,
	495, 493, 81, 257, 370, 155, 156, 157, 158, 350,
	203, 33, 204, 14, 15, 16, 32, 299, 246, 487,
	194, 395, 494, 17, 18, 19, 219, 221, 282, 47,
	197, -226, -268, -375, -375, -375, -375, -375, -375, -375,
	306, 510, -321, -370, 508, -189, 510, 510, 510, -448,
	-189, -375, -389, 511, -313, 510, -189, -389, -384, 510,
	368, 508, 510, -392, -375, 5, 5, 5, 510, 512,
	-498, 481, 167, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 326, -430,
	510, -429, 510, -429, -429, 475, -427, 510, 488, 482,
	510, -427, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 475, 515, -495, -290, 510,
	-317, -413, -375, 503, -317, -317, 294, -310, -375, 95,
	-335, 225, 271, 171, 243, 363, 210, -372, 514, -372,
	-400, 488, -189, -407, -246, -189, -409, 510, -405, -400,
	-89, -448, -73, -86, -94, -112, -125, -161, -162, 503,
	-247, 510, 170, 510, 512, -452, 170, -299, -231, -247,
	-260, -261, -266, 123, -310, -513, -299, -221, 37, -386,
	-422, -423, -469, 514, -468, -425, -435, -431, -434, 322,
	323, -454, 51, 471, -437, 215, 4, -460, -462, 212,
	213, 402, 48, 339, 162, 112, 111, 287, 53, 435,
	436, 437, 438, 174, 175, 472, 413, 64, 65, -513,
	-299, 167, -451, -310, 37, -362, 2, 113, -456, 42,
	-556, 515, 245, -270, 256, 279, 186, 295, 484, 288,
	-457, 5, 4, -385, -397, 113, 250, 215, -442, -444,
	8, -443, 9, -445, 501, 502, -450, -449, 97, 512,
	-452, -205, 351, 390, -204, 23, 28, 128, 468, 145,
	-280, 207, 313, 139, 406, 458, -523, -524, 374, 430,
	431, 85, 288, 390, 351, 139, -328, -330, 37, 105,
	274, 308, 57, 200, 261, 262, 408, 476, 139, 390,
	351, -524, 351, -524, -207, 406, 458, -523, -524, 374,
	351, -206, -280, 139, 514, 23, 351, 390, 309, -540,
	-541, 128, 28, 351, 309, -520, -492, 480, 139, -109,
	237, -109, -306, 515, 515, -452, 503, 376, 375, 139,
	139, 139, 139, 167, 2, 2, 280, 2, 2, 2,
	172, -526, -545, 2, 2, 2, -247, 190, -292, 294,
	-515, -307, 424, -247, 280, -249, 190, 2, -252, 474,
	-520, 280, 37, 510, 2, -348, 2, 205, -492, 280,
	-411, -263, -247, -406, -263, 390, -240, 37, -372, -372,
	139, 2, 2, 2, -218, -208, 515, 59, 357, 139,
	-208, 139, -208, 139, -267, 190, -266, -208, 139, -208,
	515, 139, -208, 515, 139, 515, 139, 511, 515, -419,
	-419, -458, -170, 480, 170, 93, 510, 510, -182, -416,
	515, -415, -459, -110, -458, -458, -515, -231, 2, -247,
	2, 424, 226, -170, -458, -458, -458, -451, 27, 392,
	2, 334, 388, 84, 392, 2, -247, 424, 107, 205,
	75, -518, 167, -514, 364, -513, -247, 107, -247, 107,
	-247, 107, -247, -247, 2, 2, 2, 2, 80, 80,
	2, 44, -535, 167, 2, 442, 2, 442, 2, -218,
	-218, -218, 409, 245, -247, 167, 424, 205, 424, 205,
	107, 424, -208, 515, -222, -194, -323, -451, -324, -323,
	-195, -194, -197, 167, 338, 459, 274, 393, 230, -352,
	-351, 27, -375, -356, 161, 273, -375, -354, -377, 501,
	502, -443, -445, -309, 288, -188, -188, -188, -296, -402,
	-375, 329, 205, -424, -422, -422, -245, -452, 435, -375,
	-375, -375, -375, -375, -375, -375, -375, -375, -375, -375,
	-375, -375, -375, -375, -375, -375, -375, -375, -375, -375,
	-375, -375, -375, -375, -375, -375, -375, -375, -375, -375,
	-375, -375, -375, -375, 246, 194, 395, 47, 197, -375,
	439, -375, -375, -375, -375, 268, 280, 284, 447, 152,
	456, 124, 288, -559, 419, 39, -382, -189, -314, 510,
	-396, 34, 405, 27, -389, 510, 2, -370, -375, -371,
	-311, -310, -310, 511, 473, 27, 124, 503, 2, 511,
	515, 37, 511, -375, -311, -388, -384, -310, -395, -394,
	477, -343, -344, 485, 264, 110, 188, 263, -345, 381,
	-446, 8, -452, 503, -499, 160, 181, 510, 511, 2,
	511, 2, 511, -375, 2, 511, -375, 2, 511, -375,
	2, 511, -375, 2, 511, 2, -375, -375, -375, -375,
	-375, -375, -375, -310, 8, -446, -446, 435, 435, -446,
	-446, -446, -438, 322, 248, 323, 176, 267, 265, 266,
	175, -438, -337, 2, -440, -310, 4, 485, 264, 110,
	188, 263, 381, 5, -337, 2, -338, 2, -375, -310,
	-339, -376, -377, 501, 502, 494, -389, -340, 2, -375,
	-311, -375, 54, 240, 441, -341, -375, 170, -310, -310,
	2, -310, 2, -496, 37, -310, -302, 515, 170, 37,
	4, -302, -302, 510, 511, 515, -336, 185, 260, 255,
	-336, -405, -335, 225, -333, 304, -333, -333, -400, -232,
	508, 516, -452, -400, -399, -398, 37, -240, 301, -400,
	-400, 512, 511, -399, 509, -511, 510, 513, 513, 513,
	513, 513, -247, 510, -310, -452, 512, 411, 511, 219,
	219, 219, 219, 369, 511, 439, 480, -88, 296, 511,
	515, -301, 36, 508, 512, -446, 2, 2, -441, 475,
	510, 510, -344, 510, 170, -300, -536, 511, 443, -363,
	-269, 338, 404, 352, 385, 421, 8, 9, 8, 9,
	515, -452, 515, -537, 87, 439, 73, 377, -366, 190,
	73, -470, -234, 87, -471, -218, 67, 455, 329, 169,
	137, -537, 87, 329, -537, 87, 87, 390, 409, 56,
	-410, 40, 40, 27, -112, 241, 170, 486, 424, 205,
	377, 439, -410, -330, -422, 105, 261, 262, 56, -447,
	-442, 501, 502, -447, 56, -447, -447, -447, 480, -249,
	-410, 377, 439, 439, 515, 40, 40, 27, -112, 241,
	170, 439, -266, -232, 469, 41, 469, 439, 41, 377,
	439, 515, 41, 41, 439, 439, -521, -223, 94, 275,
	254, 276, -224, -225, 315, 467, -458, -416, 197, -416,
	-258, -218, 512, -112, -375, -375, -112, -375, -112, 44,
	139, 2, -553, 234, 510, -273, 280, 170, -299, -417,
	216, 515, -307, 139, -329, -328, 280, -251, 190, 2,
	-247, 139, 133, 510, 336, 2, -233, 190, -219, -218,
	-348, -211, 427, 139, -327, 465, -357, -112, 510, 113,
	37, -357, -318, -319, -414, -320, -234, 510, -240, -218,
	2, -247, -308, -308, -308, -208, 515, 139, -231, -250,
	-255, -256, -257, -458, -459, -88, -418, 511, 511, 511,
	-169, 298, -168, -218, 5, -182, 465, -272, -367, -366,
	-474, -475, -470, 246, 205, 455, 218, 153, -291, -235,
	-234, 106, -176, 480, -109, 511, -416, 197, -170, -170,
	-416, -416, -247, 167, -170, -170, -170, 2, 2, -332,
	-247, -231, -266, -247, -299, -299, -332, -231, -332, -231,
	-332, -231, -112, -375, 2, 387, 167, 167, 512, -332,
	336, 107, 424, 313, 205, -247, -266, -247, -266, -231,
	-247, -410, -324, -195, 295, 230, 393, -354, -355, -377,
	368, 369, -355, 368, 369, 8, 9, 8, 9, -199,
	397, 283, -308, 515, -202, 38, 120, 230, -247, 486,
	135, -375, -375, 439, -559, 419, -382, 135, -375, 268,
	284, 447, 152, 456, 124, 288, 170, 510, -376, -376,
	511, -312, -375, -375, 509, 518, 511, -295, 515, -293,
	-375, -310, -310, 511, 512, -310, -299, 509, 509, 515,
	511, -393, -394, 129, -375, 439, 439, 439, 439, 510,
	511, 512, -504, 305, 510, 510, -375, 511, 511, 511,
	511, 37, 515, 515, 515, 511, 515, 515, 515, 511,
	511, 511, 515, 511, 486, 486, 511, 511, 511, 511,
	515, 511, 515, 511, 170, 511, 511, -346, 319, 511,
	11, 12, 501, 502, 503, 504, 165, 505, 506, 499,
	500, 498, 491, 492, 493, 81, 257, 370, 14, 15,
	16, 219, 197, -376, -376, -376, 511, -380, -381, 170,
	167, 37, -341, -341, -341, 511, 170, -310, 511, 511,
	510, -497, 259, 280, 511, -369, -368, 478, -413, -303,
	2, -405, -242, -452, -369, -369, -310, -375, 225, 225,
	-334, 465, 294, -336, -405, -399, -448, -374, -373, 168,
	38, 120, 277, 193, -399, -240, -290, -399, -399, -452,
	-400, -400, -398, 511, -512, -448, 511, -304, -408, -491,
	-295, 512, -452, -179, -492, -158, 5, 284, -158, -158,
	-158, -299, 24, 320, -422, 508, 509, 8, -452, 510,
	-446, -446, -446, -299, 170, -449, -362, 453, 78, 338,
	435, -449, -204, 351, -234, -234, -247, -256, 280, -366,
	190, -210, 280, -422, -241, -218, 510, 510, 230, 230,
	465, -234, -241, 230, 190, -234, 190, -241, -241, -522,
	338, 289, -375, 249, 336, 281, -205, 351, 390, -112,
	-112, -112, 510, -536, 465, 123, -247, -266, -247, -256,
	-251, 390, 351, 278, -260, -447, -447, -328, 390, 351,
	-256, -249, -231, -206, -112, -112, -112, 510, -232, -207,
	351, 5, 190, -234, 5, -218, -234, -256, -539, -456,
	104, 389, -541, 23, -234, 190, -234, -256, -539, -223,
	-458, 284, 461, -520, -173, 480, -109, -167, 201, 503,
	-517, -218, 474, -218, -271, -274, -272, -234, -185, -186,
	482, 480, 139, -264, -247, 508, -170, -458, -247, -256,
	139, -290, 280, -458, 510, 2, 2, 294, 280, -233,
	190, -212, 130, -557, 493, -231, -369, -303, -326, -360,
	359, 294, -291, 470, -240, -326, -305, 515, 170, 493,
	512, -291, 2, -208, -208, -208, -266, -267, -208, -208,
	-208, -88, -88, -170, 515, 510, 493, 493, 510, -458,
	-458, 511, 515, -247, -233, 205, 205, -239, -219, 511,
	515, 512, 510, -178, 298, -177, 131, 217, 398, 399,
	400, 401, -176, -110, 170, -50, 480, 424, 514, -332,
	-332, -332, 387, 387, -218, -243, -231, -247, -244, -266,
	167, 167, 459, -355, 295, 253, -402, -203, 286, -247,
	514, -375, -375, 135, 135, -375, -376, -376, -375, 135,
	170, 510, -375, -386, 32, 32, 511, 515, -371, -375,
	511, 473, -295, -295, 511, 503, -452, 514, 511, -384,
	132, -375, 433, 264, 188, 263, -345, 263, -345, -345,
	-446, 5, -452, 503, -505, -237, 510, -218, 478, -294,
	300, 511, -424, -422, -375, -375, -375, -375, -375, -446,
	-427, -427, -442, -442, -375, -380, -375, -424, -422, -376,
	-376, -376, -376, -376, -376, -376, -376, -376, -376, -376,
	-376, -376, -376, -376, -376, -376, -376, -376, 124, 280,
	288, -376, -381, -380, -375, -375, -422, 511, 511, 511,
	-310, -88, 510, 259, -322, 181, -375, -416, 515, -322,
	-322, 511, -405, -405, 510, -375, 225, 509, 515, 517,
	493, -290, 512, -398, -399, 509, 511, 515, 511, 515,
	-359, 37, 511, -452, -181, -180, 121, 50, 297, 5,
	8, 508, 509, 512, -446, 511, 511, 511, -299, -375,
	439, 439, 139, 280, 467, -476, -471, 137, -375, -297,
	-403, -375, 510, 510, 2, -201, 128, 390, -538, 2,
	465, 139, -208, 139, -208, 484, 510, 510, 439, 377,
	480, -310, -375, -171, 113, -451, -524, 514, -524, 514,
	377, 439, 377, 439, 480, -310, 439, -426, 45, 25,
	280, -250, 439, 439, -208, 139, 450, 390, -458, 284,
	-175, 298, -174, 131, 361, 122, 232, -416, -173, 170,
	439, 2, -251, 2, 511, 511, 515, -477, 37, 292,
	292, 510, -247, -69, 480, -415, -448, -249, 37, 139,
	-520, -420, -421, 5, -247, 139, 294, 280, -213, 239,
	-557, -456, -492, -295, -326, -317, 281, 86, 511, -369,
	-319, -303, -375, 2, 511, -208, -168, -169, -458, -458,
	-458, -170, -182, -182, -367, -275, 510, -233, -219, 510,
	-182, -235, 2, -459, 515, 510, 493, 493, -416, -112,
	298, -247, 503, -332, -282, -281, 313, 288, -282, 368,
	368, 295, 161, 235, -202, -232, -375, -375, 135, 32,
	32, -375, -375, -386, 511, -375, -375, -310, 509, 5,
	-375, 511, 511, 8, -375, 511, 512, -506, -218, -375,
	511, 56, 511, 511, 515, 515, 511, 511, 511, 511,
	511, 511, 511, -381, 170, 124, 288, 510, 511, 511,
	-88, -383, 184, 56, -405, -383, -383, -334, -299, -405,
	-373, -232, 508, -452, -448, -408, 510, 512, -180, 493,
	509, 2, 508, -452, 511, -234, -234, -366, 139, -478,
	87, -480, 71, 153, 93, 280, 284, 455, 329, 67,
	113, 343, -549, 37, 490, 511, 511, 515, -202, -297,
	-299, 280, 416, 113, 280, 113, 106, 450, 74, -234,
	-241, -299, -299, -247, -256, 146, 511, 515, 493, 2,
	503, 503, -256, -251, -256, -249, 146, 511, -232, 5,
	5, 139, -229, 71, 5, -234, -234, -250, 106, 515,
	510, 493, 493, -173, -459, -109, -290, -278, 208, -234,
	-475, -472, -473, 329, -479, -481, 153, 329, -112, 2,
	-184, -183, -218, 5, 510, -273, 298, 509, -329, -112,
	-251, 511, 515, -350, 465, -232, -247, 139, -214, 238,
	-557, -456, -211, -353, -351, -358, 510, 294, -112, -295,
	493, 511, 511, 106, 106, 199, 138, -297, 510, 510,
	-299, 106, 511, -177, -178, -458, -458, -176, -51, -52,
	205, 87, 318, -244, 424, 205, 510, 510, -202, -375,
	-375, -375, 511, -295, -452, 503, -500, 313, 511, -402,
	-375, -375, -376, 170, 510, -386, 511, -501, 479, -375,
	-310, -501, -501, 511, -448, 2, -458, 508, 2, -366,
	-241, -245, -238, -218, 153, 190, 284, 230, 510, -376,
	-247, 510, 2, 29, -550, 117, 209, -365, -551, 92,
	417, 198, -403, -203, 511, 511, 284, 284, -375, -422,
	510, -208, -208, 511, 511, -375, 439, -451, 91, -449,
	2, -524, -375, 439, 5, -208, -245, -208, -208, -229,
	450, -174, -175, -458, -109, -173, 37, -279, -280, 197,
	-477, 230, -238, 230, -548, 480, 511, 515, 493, 493,
	-271, -185, -70, -71, 440, -415, -290, 5, 510, -218,
	294, 510, -232, -557, -456, -212, -326, 125, -299, 87,
	-353, -382, -170, 510, 510, -276, 76, 88, 114, 189,
	173, 206, 409, 414, 27, -276, 511, -297, -297, 511,
	510, -170, 511, 515, 27, 510, 27, 510, -247, -266,
	-310, -310, 511, -295, 56, 515, 511, 511, -376, -386,
	511, -502, -503, -237, 509, 2, -480, -238, 280, 465,
	-375, -220, 510, -375, 37, 209, 118, 195, -278, 510,
	-364, 465, 343, -229, -297, 510, 510, 510, 493, 170,
	510, -426, -208, -250, 511, -530, 341, -112, -185, 311,
	510, -277, 294, 106, 274, -183, -378, -378, 511, 37,
	-71, 9, 37, -297, -247, -297, 294, -456, -213, 459,
	281, 511, -241, -326, -459, -459, -364, 511, 511, -459,
	-52, -299, -299, 511, 511, -507, 336, 369, 183, -310,
	-296, 511, 515, 37, 139, 185, 511, -482, 258, -218,
	511, 118, 195, -279, -299, -278, 185, -247, -525, 465,
	511, -284, -283, -281, -286, -285, -281, -310, -449, 91,
	311, -310, -229, -533, 171, -532, 5, 10, -277, -247,
	-298, -404, -234, 77, 106, -278, -112, -112, 511, -350,
	511, -247, -214, 390, -368, 511, 511, -365, -364, -369,
	511, 511, 511, 511, -508, -509, 47, 452, 97, -375,
	-508, -508, -503, -505, 153, 480, -483, -486, -485, 294,
	396, 171, 312, 511, 416, 476, -550, 511, 480, -290,
	-375, -364, 511, 515, 470, 511, 515, 470, 511, 170,
	511, -208, -172, 480, 44, 510, 511, 515, 328, 119,
	128, -279, -548, -364, 510, -365, 510, -318, -170, -170,
	-278, -365, -170, -510, 137, -509, 325, 166, 368, 325,
	166, -510, -510, -238, 52, -485, 294, -486, 294, 459,
	119, -369, 52, -482, -278, -283, 197, -285, 170, 311,
	142, -532, 29, -299, -404, 369, 369, 2, -185, -277,
	-365, -297, -278, -297, -369, -279, -278, 97, 181, 434,
	274, 32, 493, -484, 274, 357, 59, 390, -484, 493,
	-483, 510, 510, 375, 511, 2, -277, -278, 511, -279,
	511, -369, -279, 368, 302, -509, -375, 22, 284, 113,
	-375, -550, -310, -310, 298, -209, 59, 357, -279, -364,
	-186, 480, -365, -369, 511, 511, -169, 510, -186, -365,
	-369, -278, -279, 439, -169, -369, -278, -279, 510, 511,
	-279, -186, -310, -186, -369, 511, -369, -279,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 25, 26, 27,
	28, 465, 466, 468, 469, 470, 472, 473, 475, 477,
	479, 480, 481, 483, 484, 486, 487, 488, 489, 490,
	492, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 552, 554, 0, 1144, 1146, 1148,
	1150, 0, 688, 0, 30, 31, 0, -2, 269, 271,
	273, 0, 299, 301, 302, 304, 306, -2, 0, 401,
	402, 404, 406, -2, -2, 0, 848, 850, 0, 541,
	543, 0, 853, 855, 0, 0, 563, 564, 0, 1232,
	-2, 557, 559, 561, 626, 628, 630, 632, 634, 636,
	638, 640, 641, 643, 645, 647, 649, 651, 653, 655,
	657, 658, 660, 662, 664, 666, 668, 670, 672, 674,
	676, 678, 680, 682, -2, 684, -2, -2, 0, -2,
	-2, -2, 1162, 34, 36, 38, 40, 42, 44, 46,
	48, 50, 352, 353, 355, 357, 359, 361, 364, 366,
	368, 1290, 408, 410, 412, 414, 416, 418, 420, 0,
	-2, 1302, 0, 0, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 78, 79, 80, 81, 82, 83, 84,
	85, 64, 65, 67, 68, 69, 73, 74, 76, 62,
	0, 0, 1263, 1265, 1267, 1269, -2, 0, 0, 5,
	9, 11, 13, 15, 17, 19, 21, 23, 467, 471,
	474, 476, 478, 482, 485, 491, 493, 495, 452, 453,
	456, 1922, 1939, 1940, 1941, 1944, 1945, 1946, 1947, 1948,
	1949, 2322, 2403, 2404, 1971, 1972, 1973, 1974, 1975, 1976,
	1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986,
	1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
	1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
	2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
	2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036,
	2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086,
	2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096,
	2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106,
	2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196,
	2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206,
	2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216,
	2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226,
	2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236,
	2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246,
	2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256,
	2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296,
	2297, 2298, 2299, 2300, 2301, 2302, 454, 455, 1008, 0,
	519, 517, 1915, 520, 2144, 522, 524, 395, 396, 397,
	398, 399, 400, 0, 534, 528, 533, 535, 537, 538,
	539, 540, 514, 512, 0, 534, 1974, 532, 1142, 1143,
	1127, 1128, 2181, 1169, 553, -2, -2, -2, 2288, -2,
	585, -2, 592, 2292, 2183, 597, 0, 599, -2, 602,
	1145, 1147, 1149, 686, 687, 1925, 0, 0, 0, 0,
	32, 33, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1057, 1058, 1059, 0, 189, 191, -2, -2,
	-2, -2, 0, 0, 2221, 2016, 1883, 1941, 1886, 1881,
	270, 272, 274, 275, 0, 0, 0, 0, 0, 0,
	300, 303, 305, -2, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 903, 895, 896, 1098, 0, 0,
	0, 0, 403, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, -2, 0, 0, 0, 0, 0,
	0, 332, 457, 458, 0, 1291, 1291, 0, 0, 0,
	0, 244, 235, 849, 851, 852, 0, 0, 0, 0,
	542, 544, 0, 0, 219, 854, 856, 857, 0, 0,
	0, 0, 0, 246, 0, 0, 558, 560, 562, 627,
	629, 631, 633, 635, 637, 639, 642, 644, 646, 648,
	650, 652, 654, 656, 659, 661, 663, 665, 667, 669,
	671, 673, 675, 677, 679, 681, 683, 693, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 773,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 696, 698, 699,
	700, 0, 753, 771, 772, 781, 685, 0, 1048, 1292,
	1171, 1152, 1166, 1171, 1154, 1155, 1156, 1157, 1158, 1163,
	1165, 1159, 1160, 1161, 35, 37, 39, 41, 43, 45,
	47, 49, 51, 354, 356, 358, 360, 362, 365, 367,
	369, -2, 1261, 1262, 409, 411, 413, 415, 417, 419,
	421, 545, 0, 547, 0, 697, -2, 0, 1296, 1296,
	1296, 0, 0, 1262, 1260, 0, 550, 551, 606, 607,
	1526, 0, 0, 0, 0, 0, 0, 0, 1780, 1612,
	0, 608, -2, 1643, 1645, 2263, 2288, 1779, 1647, 1648,
	1649, 1650, 1651, 0, 1653, 1654, 1655, 1656, 1657, 1658,
	0, 1660, 0, 1665, 1666, 1667, 0, 2270, 1860, 1935,
	-2, 0, 0, 2276, 1931, 0, 1746, 1683, -2, -2,
	1958, 1937, 1458, 1459, 1460, 1461, 1462, -2, -2, 2305,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 0, 2252, 2271, 2272, 2277, 2279, 2273, 2260, 1708,
	2028, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1485, 1494, -2, -2, -2, -2,
	-2, -2, 2264, 2265, 2282, 2285, 2291, 2296, 2297, 2269,
	2278, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314,
	2315, 2316, 2317, 2318, 2319, 2320, 2321, 1486, -2, -2,
	-2, -2, 1279, 2155, 1282, 1008, 1280, 1264, 1266, 0,
	1268, 0, 0, 0, 1273, 1299, 1297, 0, 1340, 1277,
	1278, 1358, 1358, 1382, 0, 1363, 0, 1382, 1291, 1408,
	0, 1369, 2173, 1684, 1685, 0, 1941, 1936, -2, -2,
	2303, 0, 0, 0, 0, 0, 0, 0, 515, 0,
	521, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	1168, 555, 556, 0, 580, 0, 584, 2259, -2, 1982,
	2192, -2, 588, 1172, 1176, 1177, 1178, 1179, 0, 0,
	0, 0, 0, 594, 0, 0, 581, 582, 600, 603,
	0, 689, 690, 691, 692, 61, 0, 2271, 1408, 63,
	0, 1905, 1966, 1967, 1968, 1969, 1970, 2304, 2323, 2324,
	2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334,
	2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344,
	2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354,
	2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364,
	2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374,
	2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384,
	2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394,
	2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2305, 66,
	0, 2271, 70, 0, 2271, 0, -2, 75, 0, 1911,
	77, 0, 1908, 86, 0, 2271, 0, 1880, -2, 0,
	172, 1919, 0, 874, 1921, -2, 2271, 1056, 247, 248,
	1954, 1955, 1962, 1963, 1964, 1965, 0, 0, 0, 841,
	1877, 1882, 842, 1901, 843, 1887, 0, 276, 277, 278,
	279, 280, 0, 281, 2271, 283, 284, 0, 286, 287,
	2271, 289, 290, 0, 292, 0, 202, 203, 308, 309,
	0, 311, 0, 2271, 0, 0, 0, 317, -2, 333,
	0, 330, 0, 321, 322, 324, 325, 326, 327, 0,
	373, 371, 1916, 0, 869, 2271, 871, 0, 0, 1077,
	-2, 2271, 1053, 1083, 1079, 0, -2, 0, 1289, 2271,
	1186, 899, 900, 901, 902, 0, 392, 0, 1199, 0,
	1201, 0, 1222, 1414, 1358, 1358, 0, 334, 335, 336,
	337, 338, 2271, 0, 0, 0, 343, 0, 345, 346,
	347, 348, 349, 350, 351, 161, 2271, 424, 450, 161,
	2271, 427, 161, 2271, 430, 0, 433, 1096, 161, 2271,
	436, 161, 2271, 439, 440, 161, 2271, 444, 445, 447,
	2271, 449, 249, 1138, 1139, 1140, 1141, 0, -2, 508,
	1924, -2, 460, 0, 461, 0, -2, 0, 261, 0,
	0, 858, 859, 860, 861, 862, 865, 866, 867, 868,
	1395, 222, 220, 0, 0, 1129, 1130, 1131, 1132, 1133,
	1134, 1135, 1136, 1137, 0, 0, 565, 0, 0, 694,
	695, 0, 0, 705, 706, 707, 261, 2184, 2152, 2048,
	712, 0, 715, 718, -2, 0, 0, 0, 0, 722,
	0, 727, 728, 729, 0, 731, 847, 733, 0, 0,
	735, 0, 739, 0, 742, 0, 744, 0, 746, -2,
	-2, -2, 757, -2, 0, 760, 762, 0, 764, -2,
	0, 773, 769, 770, 0, 0, 0, 0, 789, 790,
	0, 795, 0, 798, 799, 800, 0, 802, 803, 0,
	805, 806, 807, 808, 0, 810, 811, -2, -2, 815,
	817, 0, 824, 0, 828, 0, 832, 0, 701, 702,
	161, 1412, 1151, -2, 1153, 0, -2, 0, 546, 0,
	549, 1319, 1247, 1244, 0, 1316, 1317, 1248, 0, 0,
	0, 1255, 0, 1294, 1295, 0, 0, 0, 1234, 1235,
	0, 0, 0, 0, 1785, 1786, 1787, 1788, 1789, 1790,
	1793, 1794, 1791, 1792, 1795, 1796, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 1799, 1800, 0, 0, 1802, 0,
	1804, 0, 0, 0, 0, 0, 0, 1591, 1593, 1868,
	0, 0, 1801, 1531, 1532, 1533, 1534, 1535, 1570, 1571,
	0, 0, 1644, 1865, 1864, 1646, 0, 1816, 0, 1659,
	-2, 0, 1780, 1811, 0, 0, 1668, 1669, 1670, 0,
	0, 1816, 0, 0, 1859, 1680, 1681, 1523, 0, 0,
	1748, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1472, 1471,
	0, 1473, 0, 1474, 1475, 1482, 1495, 0, 0, 0,
	0, 1499, 0, 0, 0, 0, 0, 0, 0, 1840,
	-2, 0, 0, 0, 0, 1487, 0, 1281, 0, 0,
	1344, 1869, 1873, 1874, 1344, 1344, 0, 0, 1817, 1405,
	1405, 0, 0, 1401, 1401, 1401, 1399, 1382, 0, 1382,
	1392, 0, 1382, 1382, 0, -2, 1363, 0, 0, 1392,
	0, 1376, 496, 498, 500, 502, 503, 504, 506, 1409,
	1410, 0, 0, 0, 0, 1942, 0, 0, 0, 0,
	0, 1927, 0, 0, 0, 0, 526, 536, 1291, 0,
	1819, 1431, 1435, 0, 1437, 1438, 1439, 1440, 1441, 0,
	0, 1432, -2, 1483, 1485, 1506, 1959, 1960, 1961, 1466,
	1467, 1468, 1469, 1470, 1478, 1465, 1465, 1465, 1476, 1505,
	1497, 1505, 1501, 1452, 1453, 1488, 1489, 1490, 1491, 0,
	530, 0, 0, 0, 0, -2, 590, 595, 596, 0,
	0, 1174, 0, 1180, 617, 618, 619, 1182, 1183, 0,
	593, 620, 621, 622, 623, 624, 625, 0, 1889, 1890,
	1891, 1892, 1895, 1896, 0, 0, 591, 610, 598, 0,
	604, 87, 1124, 0, 126, 0, 1124, 1124, 0, 0,
	148, 0, 0, 0, 0, 0, 0, 111, 122, 99,
	100, 0, 0, 0, 0, 0, 71, 1030, 0, 1033,
	0, 0, 0, 0, 0, 0, 0, 1046, 0, 0,
	0, 110, 0, 105, 89, 0, 0, 0, 112, 124,
	0, 152, 154, 0, 0, 0, 0, 0, 0, 171,
	179, 0, 0, 0, 0, 1054, 0, 1288, 0, 1395,
	2086, 1395, 840, 0, 0, 1942, 1885, 0, 0, 0,
	0, 0, 0, 0, 310, 312, 0, 314, 315, 316,
	0, 1076, 0, 323, 320, 363, 979, 2271, 0, 0,
	390, 385, 0, 387, 0, 1029, 2271, 1027, 1920, 0,
	1051, 0, 0, 0, 1084, 1951, 1093, 1097, 1188, 0,
	394, 0, 1202, 1204, 0, 0, 1415, 0, 1417, 1418,
	0, 340, 341, 342, 0, 422, 0, 159, 160, 0,
	425, 0, 428, 0, 161, 2271, 1875, 434, 0, 437,
	0, 0, 442, 0, 0, 0, 0, 1291, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 226,
	0, 1394, 0, 1395, 220, 261, 261, 1395, 567, 1395,
	569, 0, 0, 708, 261, 261, 261, 713, 714, 716,
	717, -2, -2, 825, 719, 720, 792, 0, 0, 0,
	791, 732, 0, 834, 2169, 845, 792, 2016, 792, 2016,
	792, 2016, 743, 745, 748, 784, 756, 761, 0, 0,
	766, 774, -2, 0, 776, 0, 778, 0, 780, 792,
	793, 796, 801, 804, 809, 0, 0, 0, 0, 0,
	0, 0, 1047, 0, 1164, 1319, 1247, 548, 1238, 1318,
	1239, 1246, 1249, 0, 0, 1251, 0, 1253, 0, 1314,
	1315, 1322, 1323, 0, 1333, 1334, 1326, 0, -2, 0,
	0, 1329, 1330, 1257, 0, 1274, 1275, 1276, 1303, 1306,
	1107, 0, 2403, 1527, 1426, 1528, 1529, 1904, 0, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, -2,
	-2, -2, -2, -2, -2, -2, -2, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, -2, -2,
	-2, 1568, 1569, -2, 1803, 1805, 0, 1868, 0, -2,
	0, -2, -2, -2, -2, 1588, 0, 1590, 1595, 1597,
	1599, 0, 0, 0, 0, 1867, 1609, 1851, 1852, 0,
	0, 1782, 1783, 1784, 1594, 0, 1613, 1866, 1863, 0,
	0, 1815, 1302, 1672, 0, 0, 0, 0, 1679, 1664,
	1813, 0, 1812, 0, 0, 0, 1823, 0, 1858, 1854,
	0, 1902, 1522, 1509, 1510, 1511, 1512, 1513, 1514, 1524,
	0, 1899, 1928, 1934, 1756, 0, 0, 0, 1709, 1710,
	1711, 1712, 1713, 0, 1715, 1716, 0, 1718, 1719, 0,
	1721, 1722, 0, 1724, 1725, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, 0, 0, 1728, 0, 1826, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 1730, 0, 1732, 1817, 1837,
	0, 0, 1614, 0, 0, 0, 1780, 0, 1735, 1817,
	1845, 0, 0, 0, 0, 0, 1817, 0, 1850, 0,
	1742, 0, 1744, 1283, 0, 0, 1421, 0, 0, 0,
	1872, 1421, 1421, 0, 1339, 0, 0, 1402, 1403, 1404,
	0, 0, 1405, 0, 1396, 1400, 1397, 1398, 1392, 1355,
	0, 0, 1906, 1392, 1361, 1391, 0, 1008, 1381, 1392,
	1392, 0, -2, 1365, 1382, 0, 0, 497, 499, 501,
	505, 507, 0, 0, 1302, -2, 0, -2, 1007, 0,
	0, 0, 0, 516, 518, 0, 0, 510, 0, 513,
	0, 1422, 1425, 0, 0, 1436, 1442, 1443, 0, -2,
	0, 0, 1507, 0, 0, 0, 0, 583, 0, 1173,
	1181, 0, 614, 0, 616, 0, 1893, 1897, 1894, 1898,
	0, 605, 0, 0, 0, 0, 1123, 0, 130, 2271,
	0, 163, 0, 0, 972, 1912, 0, 0, 0, 0,
	2035, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 96, 101, 0, 0, 0, 0, 0,
	0, 0, 0, 1031, 1032, 1034, 1041, 1043, 0, 1037,
	1900, 0, 0, 1038, 0, 1040, 1042, 1044, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 98, 102, 0,
	0, 0, 0, 1879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1072, 1070, 1064, 1065,
	1066, 1067, 1068, 1069, 0, 0, -2, 194, 0, 252,
	1878, 1888, 0, 863, 864, 282, 285, 288, 291, 190,
	0, 318, 0, 0, 905, 880, 0, 0, 372, 261,
	0, 0, 386, 0, 1025, 1028, 0, 1008, 2271, 1063,
	1918, 0, 0, 0, 0, 1082, 0, 2271, 1907, 1950,
	1951, 1190, 1196, 0, 1421, 0, 1220, 1205, 0, 0,
	0, 1220, 1224, 1225, 1227, 1228, 0, 0, 1416, 0,
	344, 451, 161, 161, 161, 431, 0, 0, 161, 441,
	161, 446, 161, 250, 448, 459, 509, 1291, 1291, 261,
	259, 2127, 257, 254, 256, 0, 0, 0, 906, 908,
	909, 910, 911, 0, 1951, 0, 2075, 1951, 0, 1208,
	1210, 0, 216, 0, 223, 221, 226, 0, 0, 384,
	566, 571, 703, 0, 709, 710, 711, 750, 786, 721,
	723, 724, 725, 0, 846, 844, 734, 792, 737, 792,
	740, 792, 759, 763, 768, 775, 0, 0, 0, 788,
	0, 0, 0, 0, 0, 0, 0, 829, 830, 831,
	833, 1413, 1242, 1243, 1245, 0, 1254, 0, 0, 1328,
	-2, -2, 1327, 1331, 1332, -2, -2, -2, -2, 1250,
	0, 1259, 1256, 0, 1313, 1105, 1106, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 1610, 0, -2, 1589,
	1592, 1596, 1598, 1600, 0, 0, 0, 0, 0, 0,
	1806, 0, 1808, 1611, 1861, 1864, 1778, 0, 0, 1301,
	1302, 1302, 0, 1678, 0, 1814, 0, 1821, 1822, 0,
	1671, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1682, 0, 0, 0, 0, 1714, 1717, 1720,
	1723, 0, 0, 0, 0, 1703, 0, 0, 0, 1707,
	1477, 1463, 0, 1505, 1503, 1504, 1498, 1505, 1502, 1455,
	0, 1454, 0, 1727, 0, 1729, 1731, 0, 0, 1733,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1617, 1618, 1619, 1734, 1843, 1844, 0,
	0, 0, 0, 0, 0, 1740, 0, 1849, 1741, 1743,
	1291, 0, 1284, 0, 1341, 1336, 1420, 0, 1870, 1395,
	1343, 1345, 1871, 1909, 1336, 1336, 0, 1818, 0, 0,
	1386, 0, 0, 0, 1388, 1359, 0, 0, 1353, 0,
	1349, 1350, 1351, 1352, 1360, 1008, 1390, 1362, 1366, 1928,
	0, 1392, 0, 1377, 0, 1379, 1411, 0, 1371, 1374,
	0, 0, 1943, 262, 0, 293, 297, 298, 294, 295,
	296, 525, 0, 0, 1820, 0, 1427, 0, 1433, 0,
	0, 0, 0, 529, 0, 579, -2, 612, 613, 615,
	0, 611, 127, 1124, 0, 0, 1109, 1111, 0, 132,
	2271, 141, 0, 946, 0, 1910, 0, 0, 0, 0,
	0, 1126, 0, 0, 2271, 161, 2271, 161, 144, 147,
	0, 151, 149, 0, 0, 937, 88, 1124, 0, 91,
	95, 103, 0, 0, 0, 109, 0, 0, 0, 1113,
	1117, 0, 0, 1035, 1036, 1039, 1045, 72, 0, 0,
	1115, 1119, 1108, 153, 93, 97, 104, 0, 1121, 90,
	0, 175, 0, 0, 0, 167, 0, 168, 169, 176,
	177, 178, 180, 0, 161, 2271, 0, 872, 873, 1071,
	1049, 1050, 0, 1055, 186, 0, 1395, 194, 0, 1884,
	0, 0, 0, 0, 0, 0, 904, 990, 0, 877,
	0, 0, 0, 378, 374, 0, 383, 389, 388, 870,
	0, 0, 0, -2, 1086, 1080, 1081, 0, 0, 0,
	2271, 1192, 1196, 0, 1195, 1289, 1302, 393, 1197, 1220,
	0, 0, 0, 1207, 1203, 1200, 1421, 0, 0, 0,
	0, 0, 339, 423, 426, 429, 1876, 161, 435, 438,
	443, 462, 463, 236, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 915, 0, 1951, 1951, 0, 1914, 0,
	0, 0, 0, 224, 0, 227, 0, 0, 231, 232,
	233, 234, 217, 1395, 0, 568, 0, 0, 0, 736,
	738, 741, 777, 779, 792, 818, 819, 932, 0, 932,
	0, 0, 1252, 0, 1325, 1258, 1307, 1308, 0, 1107,
	0, 1530, 1573, 0, 0, -2, 0, 0, 1577, 0,
	0, 0, -2, 0, 0, 0, 1807, 1809, 0, 1863,
	1673, 0, 0, 0, 1677, 1661, 1662, 0, 1781, 1824,
	1853, 1857, 0, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	0, 1903, 1929, 1933, 1754, 1755, 1759, 1917, 0, 0,
	0, 1686, 0, 0, 0, 0, 0, 0, 0, 0,
	1496, 1500, 0, 0, 1825, 1836, 1838, 1615, 1616, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, -2,
	-2, -2, 1633, 1634, 1635, -2, -2, -2, 0, 0,
	0, 1839, 1841, 1842, 1846, 1847, 0, 1737, 1738, 1739,
	1848, 0, 1291, 1285, 1338, 0, 1419, 1342, 0, 1338,
	1338, 1298, 1384, 0, 0, 1407, 0, 1356, 0, 1357,
	0, 1389, 0, 1364, 1367, 1368, 1378, 0, 1370, 0,
	1373, 0, 1673, -2, 263, 265, 0, 268, 527, 511,
	0, 0, 1429, 0, 0, 1480, 1484, 1508, 531, 1393,
	0, 0, 0, 0, 162, 944, 971, 0, 0, 0,
	1100, 1107, 0, 0, 977, 134, 0, 0, 0, 142,
	0, 0, 139, 0, 146, 150, 0, 0, 0, 0,
	0, 0, 106, 107, 108, 0, 113, 0, 114, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 1104, 0, 0, 182, 0, 0, 0, 1074, 1075,
	192, 0, 195, 0, 198, 199, 0, 194, 188, 0,
	0, 313, 1008, 319, 926, 978, 0, 980, 0, 878,
	0, 0, 979, 370, 0, 377, 0, 1029, 0, 0,
	1052, 0, 1085, 1087, 1095, 0, 0, 0, 1194, 1196,
	0, 1187, 1188, 1321, 1198, 1218, -2, 1217, 0, 1302,
	1226, 1223, 1229, 1230, 0, 432, 258, 0, 253, 255,
	0, 239, 0, 0, 907, 912, 0, 0, 0, 0,
	0, 1209, 1211, 0, 0, 0, 0, 0, 226, 245,
	0, 704, 726, 787, 820, 931, 0, 0, 822, 0,
	0, 1324, 1311, 1312, 1309, 1107, 1575, 1579, 0, 0,
	0, 1581, -2, 0, 1603, -2, -2, 1810, 1862, 1652,
	1302, 1674, 1676, 1663, 1856, 1525, 0, 1761, 1758, 0,
	1745, 0, 1698, 1699, 0, 0, 1702, 1704, 1705, 1706,
	1464, 1457, 1456, 1835, 0, 0, 0, 0, 1736, 1286,
	0, 1750, 0, 0, 1346, 1750, 1750, 1385, 0, 1387,
	1354, 1347, 0, 1929, 1380, 1372, 0, 0, 266, 0,
	1423, 1428, 0, 1434, 1479, 128, 129, 131, 0, 945,
	0, 948, 0, 0, 0, 0, 955, 956, 0, 0,
	0, 0, 0, 965, 0, 994, 1004, 0, 1313, 0,
	0, 0, 136, 156, 0, 0, 1125, 0, 0, 161,
	161, 0, 0, 1110, 1112, 0, 0, 0, 0, 116,
	0, 0, 1114, 1118, 1116, 1120, 0, 0, 1122, 173,
	174, 0, 161, 0, 166, 161, 161, 1104, 0, 0,
	0, 0, 0, 187, 251, 194, 0, 934, 0, 990,
	982, 983, 984, 0, 989, 991, 0, 0, 892, 879,
	0, 888, 0, 0, 905, 880, 0, 375, 1026, 1060,
	1008, 1078, 0, 0, 0, 0, 0, 0, 1184, 1196,
	0, 1189, 1190, 1220, 1320, 0, 0, 0, 1206, 1321,
	0, 260, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 228, 0, 229, 230, 218, 570, 572,
	0, 0, 578, 930, 0, 0, 0, 0, 1310, 1583,
	-2, -2, 1604, 0, 1930, 1932, 1302, 0, 1747, 1304,
	0, 0, -2, 0, 0, 0, 1287, 1270, 0, 1337,
	1335, 1271, 1272, 1406, 0, 1375, 267, 0, 1430, 133,
	0, 949, 950, 1913, 952, 0, 954, 957, 0, 960,
	1953, 0, 964, 0, 973, 995, 0, 926, 0, 1000,
	1001, 1002, 1101, 1102, 1006, 0, 135, 137, 155, 1104,
	0, 138, 145, 0, 0, 92, 0, 0, 2009, 119,
	117, 115, 94, 0, 175, 181, 1103, 170, 183, 161,
	0, 196, 0, 197, 200, 0, 0, 880, 933, 0,
	981, 0, 992, 993, 882, 0, 881, 0, 0, 0,
	0, 0, 376, 379, 0, 382, 0, 1088, 0, 1094,
	0, 0, 0, 0, 1191, 1192, 391, 0, 0, 0,
	1220, 1231, 238, 0, 0, 913, 916, 917, 918, 919,
	920, 921, 922, 923, 924, 914, 1006, 0, 0, 970,
	0, 243, 225, 0, 574, 0, 576, 0, 821, 823,
	0, 0, 1675, 1765, 0, 0, 1700, 1701, -2, 0,
	1641, 1749, 1751, 0, 1348, 1424, 947, 951, 0, 0,
	0, 1012, 0, 0, 966, 0, 998, 999, 934, 0,
	926, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 165, 184, 1104, 193, 212, 0, 1061, 882, 0,
	0, 890, 0, 893, 0, 889, 886, 887, 926, 0,
	380, 381, 0, 0, 1095, 0, 0, 1193, 1194, 0,
	1213, 1214, 1216, 1221, 0, 0, 1004, 1006, 1421, 0,
	573, 0, 0, 826, 827, 0, 0, 0, 0, 1760,
	1305, 1642, 0, 0, 0, 0, 959, 1017, 0, 0,
	0, 996, 997, 994, 0, 975, 0, 1008, 140, 0,
	1006, 0, 938, 0, 0, 941, 0, 0, 120, 2009,
	118, 0, 161, 215, 0, 207, 205, 206, 875, 0,
	0, 986, 988, 0, 894, 934, 892, 1062, 1006, 0,
	1004, 0, 1185, 0, 1215, 261, 261, 926, 1004, 969,
	261, 575, 577, 1757, 1777, 1766, -2, 2232, 2013, 0,
	1777, 1777, 1752, 1753, 0, 0, 961, 1013, 1014, 0,
	1009, 1010, 1011, 1952, 962, 963, 1421, 1003, 0, 1012,
	157, 926, 935, 0, 0, 936, 0, 0, 123, 0,
	125, 185, 201, 0, 0, 0, 985, 0, 0, 0,
	0, 880, 882, 1004, 0, 926, 0, 1421, 240, 241,
	934, 926, 242, 1762, 0, 0, 1768, 1769, 1770, 1771,
	1772, 1763, 1764, 953, 0, 1015, 0, 1016, 0, 0,
	0, 974, 0, 1017, 143, 939, 0, 942, 0, 121,
	0, 210, 211, 0, 987, 883, 0, 885, 882, 891,
	926, 0, 934, 0, 1212, 1421, 934, 0, 1774, 1775,
	0, 0, 0, 1018, 0, 1021, 1022, 0, 1019, 0,
	994, 0, 0, 0, 929, 884, 876, 934, 1006, 880,
	1004, 967, 1421, 1773, 1776, 1767, 958, 1020, 1023, 1024,
	1005, 976, 0, 0, 0, 925, 927, 928, 880, 1004,
	1421, 0, 926, 968, 934, 0, 213, 0, 1421, 926,
	1091, 934, 940, 0, 0, 1089, 934, 880, 0, 214,
	880, 1421, 0, 1421, 1092, 934, 1090, 943,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 499, 3, 505, 500, 3,
	510, 511, 503, 501, 515, 502, 512, 504, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 518, 3,
	491, 493, 492, 496, 514, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 508, 3, 509, 506, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 516, 498, 517, 494,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 495, 57834, 497,
	57835, 507, 57836, 513, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1207
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1212
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1214
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1217
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1218
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1219
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1220
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1221
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1222
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1223
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1224
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1231
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1240
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1241
		{
			return helpWith(sqllex, "ALTER")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1244
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1245
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1246
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1308
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1334
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1347
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1364
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1368
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 72:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1372
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1386
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1405
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 86:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1437
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1441
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1445
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1451
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1455
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1461
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1470
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1481
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1485
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1491
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1499
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1509
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1513
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1523
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1534
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1541
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1553
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1560
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1568
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1573
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1577
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1582
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1588
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1596
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1607
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1617
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 114:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1627
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1636
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1647
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1653
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1661
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1665
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1669
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1673
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1679
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1684
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1695
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1699
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1705
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1709
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1716
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1726
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1731
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1746
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1751
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1761
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1775
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1787
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1797
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1804
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 143:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1808
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1816
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1823
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1832
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1853
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1862
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1888
		{
			sqlVAL.union.val = nil
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = nil
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1905
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1909
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1913
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1919
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 164:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1948
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1959
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1970
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1980
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1989
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1998
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 170:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2002
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2006
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2009
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2013
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2020
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2072
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2082
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2093
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2102
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2106
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2110
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2118
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2133
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2137
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2146
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2154
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2158
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleName:    sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2250
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2255
		{
			sqlVAL.union.val = nil
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2267
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2277
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2283
		{
			sqlVAL.union.val = nil
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2300
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2306
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 214:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = nil
		}
	case 216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2358
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2367
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2371
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2385
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2392
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2396
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2407
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2411
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2420
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2424
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2432
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2440
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2483
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2492
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2498
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2503
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2508
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2513
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2518
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2522
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2541
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2549
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2571
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2581
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2585
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2589
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = nil
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2625
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2641
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2651
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2671
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2672
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2673
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2674
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2684
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2692
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2698
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2701
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2711
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2728
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2730
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2737
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2764
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2766
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2770
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2773
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2785
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2798
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2804
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2809
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2821
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2823
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2824
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2825
		{
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2826
		{
			return helpWith(sqllex, "CREATE")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2829
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2830
		{
			return unimplemented(sqllex, "create cast")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2831
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2832
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2833
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2834
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2835
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2836
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2837
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2838
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2839
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2840
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2841
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2842
		{
			return unimplemented(sqllex, "create operator")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2843
		{
			return unimplemented(sqllex, "create publication")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2844
		{
			return unimplemented(sqllex, "create rule")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2845
		{
			return unimplemented(sqllex, "create server")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2846
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2847
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2848
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2851
		{
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2852
		{
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2855
		{
		}
	case 331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2856
		{
		}
	case 332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2859
		{
		}
	case 333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2860
		{
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2863
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2864
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2865
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2866
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2867
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2868
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2869
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2870
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2871
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2872
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2873
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2874
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2875
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2876
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2877
		{
			return unimplemented(sqllex, "drop server")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2878
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2879
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2880
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2884
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2885
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2886
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2887
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2888
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2890
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2891
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2892
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2893
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2911
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2919
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2929
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2938
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2961
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2972
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2992
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3000
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3035
		{

			sqlVAL.union.val = nil
		}
	case 391:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3049
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3059
		{
			return helpWith(sqllex, "DELETE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3062
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3063
		{
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3074
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3075
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3076
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3077
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3078
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3087
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3088
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3089
		{
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3090
		{
			return helpWith(sqllex, "DROP")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3093
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3094
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3095
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3096
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3097
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3098
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3099
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3114
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3137
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3144
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3152
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3169
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3192
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3207
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3214
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3218
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3222
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3246
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3271
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3275
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3280
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3298
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3305
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3331
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3338
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3340
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3348
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3356
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3364
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3372
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3387
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			return helpWith(sqllex, "DELETE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3392
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3393
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3394
		{
			return helpWith(sqllex, "INSERT")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3397
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3399
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3407
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3408
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3409
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3414
		{
			return helpWith(sqllex, "DELETE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3415
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3416
		{
			return helpWith(sqllex, "INSERT")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3422
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3423
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3427
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 510:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3441
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3449
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3457
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3461
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3475
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3482
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3490
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3494
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3498
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3516
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3551
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "GRANT")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3585
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3594
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3622
		{
			return helpWith(sqllex, "RESET")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3623
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3638
		{
			return helpWith(sqllex, "RESET")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3649
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3663
		{
			return helpWith(sqllex, "USE")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3667
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3668
		{
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3669
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3670
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3674
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3675
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3676
		{
			return helpWith(sqllex, "USE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3710
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3728
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3736
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3740
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3750
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3754
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3768
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3790
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3800
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3816
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3842
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3845
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3850
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3854
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3873
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3880
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3885
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3890
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3895
		{
			return unimplemented(sqllex, "set from current")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3896
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3904
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3909
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3916
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3958
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3962
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3990
		{
			sqlVAL.union.val = tree.Low
		}
	case 618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3994
		{
			sqlVAL.union.val = tree.Normal
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3998
		{
			sqlVAL.union.val = tree.High
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4017
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4022
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4026
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4040
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4041
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4042
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4043
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4044
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4045
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4046
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4048
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4049
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4050
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4051
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4052
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4053
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4054
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4055
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4057
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4058
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4059
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4060
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4061
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4062
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4063
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4064
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4065
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4066
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4067
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4068
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4070
		{
			return helpWith(sqllex, "SHOW")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4071
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4076
		{
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4077
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4080
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4084
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4089
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4094
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4099
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4110
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4111
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4122
		{
			sqlVAL.str = "client_encoding"
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.str = "timezone"
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4144
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4167
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4183
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4192
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4201
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4226
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4231
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4251
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4274
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4282
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4285
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4295
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4308
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4316
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4327
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4329
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4333
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4337
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4340
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4349
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4357
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4360
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4362
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4365
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4373
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4376
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4381
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4385
		{
			sqlVAL.union.val = true
		}
	case 752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = true
		}
	case 753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4389
		{
			sqlVAL.union.val = false
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4400
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4404
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4407
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4408
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4410
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4418
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4421
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4439
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4455
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4463
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4471
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 773:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4485
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4489
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4503
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4508
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4510
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4514
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = true
		}
	case 782:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4518
		{
			sqlVAL.union.val = false
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4529
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4531
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4534
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4565
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = true
		}
	case 792:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = false
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4597
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4604
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4615
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4628
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4636
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4641
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4646
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4650
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4662
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4666
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4682
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4690
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4693
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4701
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4705
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4713
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4735
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4750
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4758
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4764
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4773
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4785
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4789
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4796
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4929
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4972
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4977
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4981
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4989
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4998
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5009
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5023
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5024
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5034
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5035
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5036
		{
			return helpWith(sqllex, "RESUME")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5054
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5063
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5072
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5087
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5095
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5103
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5123
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5134
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5143
		{
			return unimplementedWithIssueDetail(sqllex, 50882, "ALTER SCHEMA OWNER TO")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5146
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5185
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5200
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5218
		{

			sqlVAL.union.val = nil
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5224
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5230
		{
			sqlVAL.union.val = nil
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5234
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5245
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5250
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5255
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5266
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5276
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 890:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5282
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5296
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5311
		{
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5312
		{
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5313
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5331
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5332
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5333
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5337
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5340
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5346
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5362
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5368
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5372
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5381
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5385
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5391
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5396
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5397
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5399
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5400
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5401
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5402
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5403
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5404
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5409
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5425
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5430
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 929:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 932:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.str = ""
		}
	case 934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 935:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5475
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5485
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 940:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 943:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5511
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5525
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5540
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5554
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5566
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5570
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5588
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5596
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5600
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5604
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5611
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5619
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5633
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5637
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5644
		{
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5645
		{
		}
	case 967:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5650
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
				Predicate:   sqlDollar[10].union.expr(),
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
					Predicate:   sqlDollar[11].union.expr(),
				},
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:      tree.Name(sqlDollar[3].str),
				Columns:   sqlDollar[5].union.idxElems(),
				Inverted:  true,
				Predicate: sqlDollar[7].union.expr(),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5699
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5710
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5716
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5740
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5751
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5758
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5762
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5768
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5778
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5793
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5800
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5806
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5817
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5833
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5843
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5847
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5858
		{
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5859
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5860
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5861
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5862
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5863
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5881
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5897
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5927
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5931
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5935
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5960
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5976
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5992
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6019
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6028
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6036
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6047
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6051
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6052
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6062
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6065
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6067
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6069
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6072
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6075
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6077
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6090
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6115
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6130
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6136
		{
			sqlVAL.union.val = true
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6140
		{

			sqlVAL.union.val = true
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = false
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6155
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6169
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6181
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6192
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6204
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = nil
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6245
		{
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6246
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6262
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6264
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6266
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6268
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6270
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6272
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6280
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6286
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6290
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6310
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6328
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6347
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6364
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6381
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6385
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = false
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = true
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = false
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6416
		{
			sqlVAL.union.val = true
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = false
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6426
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6439
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.str = ""
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6480
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6486
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6492
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6500
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6506
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6514
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6534
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6542
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6548
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6556
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6562
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6579
		{
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6580
		{
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6583
		{
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6584
		{
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6595
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6613
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6619
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6622
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6635
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6643
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6645
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6651
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6672
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6680
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6691
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6695
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6696
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6697
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6713
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6716
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6721
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6734
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6739
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6748
		{
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6749
		{
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6750
		{
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6760
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6767
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6770
		{
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6771
		{
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6789
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6799
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6812
		{
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6814
		{
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6818
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6831
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6837
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6843
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6883
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.str = ""
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.str = ""
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.str = ""
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6921
		{
			sqlVAL.str = ""
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6926
		{
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6927
		{
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6939
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6946
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6953
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6971
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6975
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6984
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7003
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7033
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7050
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7051
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7059
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7097
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7129
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7182
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7186
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7213
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7217
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7235
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7247
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7264
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7268
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7279
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7314
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7315
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7316
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7377
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7399
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7421
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7437
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7458
		{
			sqlVAL.union.val = true
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7462
		{
			sqlVAL.union.val = false
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7490
		{
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7491
		{
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7495
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = nil
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7504
		{
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7505
		{
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = true
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = false
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = false
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7523
		{
			sqlVAL.union.val = true
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7534
		{
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7535
		{
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7576
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7597
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7602
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7631
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7640
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7656
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7664
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7678
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7690
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7719
		{
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7720
		{
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7723
		{
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7724
		{
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7741
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7745
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7751
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7755
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7777
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7779
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7794
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7796
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7816
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7821
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7826
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7837
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7844
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7849
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7868
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7907
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7917
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7952
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7963
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7993
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8014
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8026
		{
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8028
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = nil
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = true
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.union.val = false
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8071
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8075
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8101
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.str = tree.AstFull
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.str = tree.AstRight
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.str = tree.AstInner
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8145
		{
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8146
		{
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.str = tree.AstHash
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.str = ""
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8202
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8204
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8208
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8213
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8227
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8231
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8237
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8243
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8253
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8270
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8282
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8295
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8303
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8304
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8322
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8324
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8332
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8345
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8352
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8361
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8401
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8413
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8414
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = types.Geography
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8438
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8446
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8472
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8480
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = nil
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = types.Int2
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = types.Int
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = types.Float4
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = types.Float
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8523
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8531
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8539
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = types.Bool
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8553
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = types.Float
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8572
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8578
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8600
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8612
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = types.String
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = true
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = false
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = types.Date
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8649
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8657
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8671
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8680
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8688
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8705
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.union.val = true
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = false
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.union.val = false
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.union.val = types.Interval
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8729
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8795
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8804
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8813
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8828
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8834
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = nil
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8858
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8918
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8947
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9071
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9091
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9099
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9103
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9123
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9155
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9170
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9204
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9232
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9236
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9258
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9274
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9286
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9290
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9294
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9298
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9302
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9444
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9448
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9452
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9457
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9483
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9492
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9507
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9537
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9548
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9549
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9557
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9564
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9573
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9639
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9764
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9769
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9778
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9787
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9796
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9805
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9810
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9815
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9820
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9825
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9834
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9835
		{
			return unimplemented(sqllex, "treat")
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9856
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9861
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9898
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9908
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.str = ""
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9957
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9997
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10010
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10042
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10046
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10070
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10078
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10107
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = tree.Any
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.union.val = tree.Some
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10127
		{
			sqlVAL.union.val = tree.All
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = tree.Div
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10141
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = tree.LT
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = tree.GT
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.union.val = tree.LE
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.union.val = tree.GE
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = tree.NE
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = tree.Like
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10191
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10216
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10468
		{
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10469
		{
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10541
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10549
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10581
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10589
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10622
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10638
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10647
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10658
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10667
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10675
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10687
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10865
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10878
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10885
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.str = ""
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
