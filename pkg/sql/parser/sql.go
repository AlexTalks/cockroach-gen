// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:66

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}

//line sql-gen.y:621
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BLOB = lex.BLOB
const BOOL = lex.BOOL
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const BYTEA = lex.BYTEA
const BYTES = lex.BYTES
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEALLOCATE = lex.DEALLOCATE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INT2VECTOR = lex.INT2VECTOR
const INT2 = lex.INT2
const INT4 = lex.INT4
const INT8 = lex.INT8
const INT64 = lex.INT64
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIAL = lex.SERIAL
const SERIAL2 = lex.SERIAL2
const SERIAL4 = lex.SERIAL4
const SERIAL8 = lex.SERIAL8
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"BYTEA",
	"BYTES",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEALLOCATE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXISTS",
	"EXECUTE",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INT2VECTOR",
	"INT2",
	"INT4",
	"INT8",
	"INT64",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIAL",
	"SERIAL2",
	"SERIAL4",
	"SERIAL8",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:10227

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 24,
	-2, 1112,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	185, 939,
	202, 939,
	217, 251,
	303, 251,
	312, 753,
	339, 251,
	348, 753,
	387, 753,
	411, 251,
	436, 753,
	-2, 0,
	-1, 75,
	217, 255,
	-2, 0,
	-1, 76,
	112, 1112,
	191, 1112,
	421, 1112,
	422, 1112,
	-2, 0,
	-1, 88,
	125, 1086,
	141, 1086,
	154, 1086,
	199, 1086,
	229, 1086,
	267, 1086,
	277, 1086,
	416, 1086,
	-2, 1057,
	-1, 120,
	131, 666,
	216, 666,
	306, 646,
	357, 646,
	404, 666,
	-2, 0,
	-1, 121,
	4, 1114,
	21, 1114,
	22, 1114,
	23, 1114,
	24, 1114,
	25, 1114,
	27, 1114,
	33, 1114,
	38, 1114,
	39, 1114,
	40, 1114,
	41, 1114,
	42, 1114,
	43, 1114,
	44, 1114,
	45, 1114,
	46, 1114,
	47, 1114,
	48, 1114,
	49, 1114,
	50, 1114,
	52, 1114,
	53, 1114,
	54, 1114,
	55, 1114,
	56, 1114,
	57, 1114,
	58, 1114,
	61, 1114,
	62, 1114,
	63, 1114,
	64, 1114,
	66, 1114,
	67, 1114,
	71, 1114,
	72, 1114,
	73, 1114,
	74, 1114,
	75, 1114,
	76, 1114,
	78, 1114,
	79, 1114,
	80, 1114,
	81, 1114,
	83, 1114,
	85, 1114,
	86, 1114,
	87, 1114,
	89, 1114,
	91, 1114,
	92, 1114,
	100, 1114,
	101, 1114,
	102, 1114,
	103, 1114,
	104, 1114,
	105, 1114,
	106, 1114,
	107, 1114,
	109, 1114,
	111, 1114,
	112, 1114,
	114, 1114,
	117, 1114,
	118, 1114,
	119, 1114,
	121, 1114,
	123, 1114,
	124, 1114,
	126, 1114,
	127, 1114,
	128, 1114,
	129, 1114,
	130, 1114,
	131, 1114,
	132, 1114,
	133, 1114,
	134, 1114,
	135, 1114,
	136, 1114,
	137, 1114,
	138, 1114,
	140, 1114,
	146, 1114,
	147, 1114,
	148, 1114,
	149, 1114,
	150, 1114,
	151, 1114,
	153, 1114,
	155, 1114,
	159, 1114,
	160, 1114,
	162, 1114,
	163, 1114,
	165, 1114,
	166, 1114,
	168, 1114,
	169, 1114,
	170, 1114,
	171, 1114,
	172, 1114,
	173, 1114,
	174, 1114,
	175, 1114,
	177, 1114,
	178, 1114,
	180, 1114,
	181, 1114,
	182, 1114,
	185, 1114,
	186, 1114,
	187, 1114,
	188, 1114,
	191, 1114,
	192, 1114,
	193, 1114,
	194, 1114,
	195, 1114,
	196, 1114,
	197, 1114,
	198, 1114,
	200, 1114,
	202, 1114,
	204, 1114,
	206, 1114,
	207, 1114,
	208, 1114,
	210, 1114,
	211, 1114,
	214, 1114,
	215, 1114,
	216, 1114,
	217, 1114,
	218, 1114,
	220, 1114,
	221, 1114,
	223, 1114,
	224, 1114,
	226, 1114,
	227, 1114,
	230, 1114,
	231, 1114,
	234, 1114,
	235, 1114,
	236, 1114,
	237, 1114,
	239, 1114,
	240, 1114,
	241, 1114,
	242, 1114,
	243, 1114,
	244, 1114,
	245, 1114,
	246, 1114,
	247, 1114,
	248, 1114,
	250, 1114,
	251, 1114,
	252, 1114,
	253, 1114,
	254, 1114,
	256, 1114,
	258, 1114,
	260, 1114,
	262, 1114,
	263, 1114,
	264, 1114,
	265, 1114,
	266, 1114,
	268, 1114,
	269, 1114,
	270, 1114,
	272, 1114,
	273, 1114,
	274, 1114,
	275, 1114,
	278, 1114,
	279, 1114,
	280, 1114,
	282, 1114,
	284, 1114,
	285, 1114,
	286, 1114,
	287, 1114,
	288, 1114,
	289, 1114,
	290, 1114,
	291, 1114,
	292, 1114,
	293, 1114,
	295, 1114,
	296, 1114,
	297, 1114,
	298, 1114,
	299, 1114,
	300, 1114,
	302, 1114,
	304, 1114,
	305, 1114,
	306, 1114,
	307, 1114,
	308, 1114,
	309, 1114,
	310, 1114,
	311, 1114,
	312, 1114,
	313, 1114,
	315, 1114,
	316, 1114,
	317, 1114,
	318, 1114,
	319, 1114,
	321, 1114,
	322, 1114,
	323, 1114,
	324, 1114,
	325, 1114,
	326, 1114,
	327, 1114,
	328, 1114,
	330, 1114,
	332, 1114,
	333, 1114,
	334, 1114,
	335, 1114,
	336, 1114,
	337, 1114,
	339, 1114,
	340, 1114,
	341, 1114,
	342, 1114,
	343, 1114,
	344, 1114,
	345, 1114,
	346, 1114,
	348, 1114,
	349, 1114,
	350, 1114,
	351, 1114,
	352, 1114,
	353, 1114,
	354, 1114,
	355, 1114,
	356, 1114,
	357, 1114,
	359, 1114,
	360, 1114,
	361, 1114,
	362, 1114,
	363, 1114,
	365, 1114,
	366, 1114,
	367, 1114,
	368, 1114,
	369, 1114,
	371, 1114,
	372, 1114,
	373, 1114,
	374, 1114,
	375, 1114,
	376, 1114,
	377, 1114,
	378, 1114,
	379, 1114,
	380, 1114,
	381, 1114,
	382, 1114,
	384, 1114,
	385, 1114,
	386, 1114,
	388, 1114,
	389, 1114,
	390, 1114,
	391, 1114,
	392, 1114,
	393, 1114,
	394, 1114,
	396, 1114,
	397, 1114,
	398, 1114,
	399, 1114,
	400, 1114,
	402, 1114,
	404, 1114,
	405, 1114,
	406, 1114,
	407, 1114,
	408, 1114,
	410, 1114,
	411, 1114,
	412, 1114,
	414, 1114,
	415, 1114,
	418, 1114,
	419, 1114,
	420, 1114,
	421, 1114,
	422, 1114,
	423, 1114,
	424, 1114,
	426, 1114,
	428, 1114,
	429, 1114,
	430, 1114,
	431, 1114,
	432, 1114,
	433, 1114,
	434, 1114,
	436, 1114,
	437, 1114,
	438, 1114,
	443, 1114,
	444, 1114,
	445, 1114,
	446, 1114,
	447, 1114,
	448, 1114,
	-2, 0,
	-1, 122,
	1, 991,
	206, 991,
	302, 991,
	310, 991,
	451, 991,
	474, 991,
	-2, 0,
	-1, 124,
	1, 991,
	474, 991,
	-2, 0,
	-1, 125,
	1, 991,
	474, 991,
	-2, 0,
	-1, 126,
	1, 991,
	401, 991,
	474, 991,
	-2, 0,
	-1, 151,
	125, 1085,
	141, 1085,
	154, 1085,
	199, 1085,
	229, 1085,
	267, 1085,
	277, 1085,
	416, 1085,
	-2, 1060,
	-1, 184,
	4, 1121,
	5, 1121,
	6, 1121,
	7, 1121,
	8, 1121,
	9, 1121,
	10, 1121,
	21, 1121,
	22, 1121,
	23, 1121,
	24, 1121,
	25, 1121,
	27, 1121,
	33, 1121,
	34, 1121,
	38, 1121,
	39, 1121,
	40, 1121,
	41, 1121,
	42, 1121,
	43, 1121,
	44, 1121,
	45, 1121,
	46, 1121,
	47, 1121,
	48, 1121,
	49, 1121,
	50, 1121,
	52, 1121,
	53, 1121,
	54, 1121,
	55, 1121,
	56, 1121,
	57, 1121,
	58, 1121,
	59, 1121,
	60, 1121,
	61, 1121,
	62, 1121,
	63, 1121,
	64, 1121,
	66, 1121,
	67, 1121,
	69, 1121,
	71, 1121,
	72, 1121,
	73, 1121,
	74, 1121,
	75, 1121,
	76, 1121,
	78, 1121,
	79, 1121,
	80, 1121,
	81, 1121,
	83, 1121,
	85, 1121,
	86, 1121,
	87, 1121,
	89, 1121,
	90, 1121,
	91, 1121,
	92, 1121,
	93, 1121,
	94, 1121,
	95, 1121,
	96, 1121,
	97, 1121,
	98, 1121,
	99, 1121,
	100, 1121,
	101, 1121,
	102, 1121,
	103, 1121,
	104, 1121,
	105, 1121,
	106, 1121,
	107, 1121,
	108, 1121,
	109, 1121,
	111, 1121,
	112, 1121,
	114, 1121,
	117, 1121,
	118, 1121,
	119, 1121,
	121, 1121,
	123, 1121,
	124, 1121,
	126, 1121,
	127, 1121,
	128, 1121,
	129, 1121,
	130, 1121,
	131, 1121,
	132, 1121,
	133, 1121,
	134, 1121,
	135, 1121,
	136, 1121,
	137, 1121,
	138, 1121,
	139, 1121,
	140, 1121,
	146, 1121,
	147, 1121,
	148, 1121,
	149, 1121,
	150, 1121,
	151, 1121,
	153, 1121,
	155, 1121,
	158, 1121,
	159, 1121,
	160, 1121,
	162, 1121,
	163, 1121,
	165, 1121,
	166, 1121,
	168, 1121,
	169, 1121,
	170, 1121,
	171, 1121,
	172, 1121,
	173, 1121,
	174, 1121,
	175, 1121,
	176, 1121,
	177, 1121,
	178, 1121,
	180, 1121,
	181, 1121,
	182, 1121,
	185, 1121,
	186, 1121,
	187, 1121,
	188, 1121,
	190, 1121,
	191, 1121,
	192, 1121,
	193, 1121,
	194, 1121,
	195, 1121,
	196, 1121,
	197, 1121,
	198, 1121,
	200, 1121,
	202, 1121,
	203, 1121,
	204, 1121,
	205, 1121,
	206, 1121,
	207, 1121,
	208, 1121,
	209, 1121,
	210, 1121,
	211, 1121,
	214, 1121,
	215, 1121,
	216, 1121,
	217, 1121,
	218, 1121,
	220, 1121,
	221, 1121,
	223, 1121,
	224, 1121,
	225, 1121,
	226, 1121,
	227, 1121,
	228, 1121,
	230, 1121,
	231, 1121,
	232, 1121,
	233, 1121,
	234, 1121,
	235, 1121,
	236, 1121,
	237, 1121,
	239, 1121,
	240, 1121,
	241, 1121,
	242, 1121,
	243, 1121,
	244, 1121,
	245, 1121,
	246, 1121,
	247, 1121,
	248, 1121,
	249, 1121,
	250, 1121,
	251, 1121,
	252, 1121,
	253, 1121,
	254, 1121,
	255, 1121,
	256, 1121,
	257, 1121,
	258, 1121,
	259, 1121,
	260, 1121,
	261, 1121,
	262, 1121,
	263, 1121,
	264, 1121,
	265, 1121,
	266, 1121,
	268, 1121,
	269, 1121,
	270, 1121,
	273, 1121,
	274, 1121,
	275, 1121,
	278, 1121,
	279, 1121,
	280, 1121,
	281, 1121,
	282, 1121,
	283, 1121,
	284, 1121,
	285, 1121,
	286, 1121,
	287, 1121,
	288, 1121,
	289, 1121,
	290, 1121,
	291, 1121,
	292, 1121,
	293, 1121,
	295, 1121,
	296, 1121,
	297, 1121,
	298, 1121,
	299, 1121,
	300, 1121,
	302, 1121,
	304, 1121,
	305, 1121,
	306, 1121,
	307, 1121,
	308, 1121,
	309, 1121,
	310, 1121,
	311, 1121,
	312, 1121,
	313, 1121,
	315, 1121,
	316, 1121,
	317, 1121,
	318, 1121,
	319, 1121,
	321, 1121,
	322, 1121,
	323, 1121,
	324, 1121,
	325, 1121,
	326, 1121,
	327, 1121,
	328, 1121,
	330, 1121,
	331, 1121,
	332, 1121,
	333, 1121,
	334, 1121,
	335, 1121,
	336, 1121,
	337, 1121,
	339, 1121,
	340, 1121,
	341, 1121,
	342, 1121,
	343, 1121,
	344, 1121,
	345, 1121,
	346, 1121,
	348, 1121,
	349, 1121,
	350, 1121,
	351, 1121,
	352, 1121,
	353, 1121,
	354, 1121,
	355, 1121,
	356, 1121,
	357, 1121,
	358, 1121,
	359, 1121,
	360, 1121,
	361, 1121,
	362, 1121,
	363, 1121,
	364, 1121,
	365, 1121,
	366, 1121,
	367, 1121,
	368, 1121,
	369, 1121,
	371, 1121,
	372, 1121,
	373, 1121,
	374, 1121,
	375, 1121,
	376, 1121,
	377, 1121,
	378, 1121,
	379, 1121,
	380, 1121,
	381, 1121,
	382, 1121,
	384, 1121,
	385, 1121,
	386, 1121,
	388, 1121,
	389, 1121,
	390, 1121,
	391, 1121,
	392, 1121,
	393, 1121,
	394, 1121,
	396, 1121,
	397, 1121,
	398, 1121,
	399, 1121,
	400, 1121,
	402, 1121,
	404, 1121,
	405, 1121,
	406, 1121,
	407, 1121,
	408, 1121,
	409, 1121,
	410, 1121,
	411, 1121,
	412, 1121,
	414, 1121,
	415, 1121,
	417, 1121,
	418, 1121,
	419, 1121,
	420, 1121,
	421, 1121,
	422, 1121,
	423, 1121,
	424, 1121,
	425, 1121,
	426, 1121,
	428, 1121,
	429, 1121,
	430, 1121,
	431, 1121,
	432, 1121,
	433, 1121,
	434, 1121,
	436, 1121,
	437, 1121,
	438, 1121,
	443, 1121,
	444, 1121,
	445, 1121,
	446, 1121,
	447, 1121,
	448, 1121,
	449, 1121,
	455, 1121,
	462, 1121,
	463, 1121,
	464, 1121,
	471, 1121,
	475, 1121,
	-2, 0,
	-1, 570,
	157, 1824,
	401, 1824,
	454, 1824,
	473, 1824,
	-2, 0,
	-1, 571,
	157, 1904,
	401, 1904,
	454, 1904,
	473, 1904,
	-2, 0,
	-1, 572,
	157, 1813,
	401, 1813,
	454, 1813,
	473, 1813,
	-2, 0,
	-1, 574,
	157, 2000,
	401, 2000,
	454, 2000,
	473, 2000,
	-2, 0,
	-1, 576,
	157, 2030,
	401, 2030,
	454, 2030,
	473, 2030,
	-2, 0,
	-1, 583,
	157, 1916,
	401, 1916,
	454, 1916,
	473, 1916,
	-2, 511,
	-1, 605,
	473, 1769,
	476, 1769,
	-2, 719,
	-1, 606,
	473, 1771,
	476, 1771,
	-2, 720,
	-1, 607,
	473, 1770,
	476, 1770,
	-2, 721,
	-1, 608,
	476, 1707,
	-2, 722,
	-1, 651,
	436, 921,
	-2, 754,
	-1, 758,
	306, 647,
	357, 647,
	-2, 0,
	-1, 759,
	306, 646,
	357, 646,
	-2, 594,
	-1, 763,
	1, 676,
	470, 676,
	472, 676,
	474, 676,
	-2, 0,
	-1, 764,
	1, 718,
	154, 718,
	470, 718,
	472, 718,
	474, 718,
	-2, 0,
	-1, 772,
	1, 650,
	470, 650,
	472, 650,
	474, 650,
	-2, 0,
	-1, 775,
	1, 676,
	470, 676,
	472, 676,
	474, 676,
	-2, 0,
	-1, 776,
	1, 678,
	470, 678,
	472, 678,
	474, 678,
	-2, 0,
	-1, 777,
	1, 681,
	470, 681,
	472, 681,
	474, 681,
	-2, 0,
	-1, 782,
	1, 697,
	470, 697,
	472, 697,
	474, 697,
	-2, 0,
	-1, 783,
	1, 699,
	470, 699,
	472, 699,
	474, 699,
	-2, 0,
	-1, 826,
	141, 1123,
	154, 1123,
	229, 1123,
	267, 1123,
	-2, 1064,
	-1, 839,
	141, 1122,
	154, 1122,
	229, 1122,
	267, 1122,
	-2, 1061,
	-1, 863,
	473, 1768,
	-2, 519,
	-1, 891,
	471, 1760,
	-2, 1751,
	-1, 897,
	5, 1263,
	-2, 1802,
	-1, 898,
	5, 1264,
	-2, 1808,
	-1, 899,
	5, 1265,
	-2, 1807,
	-1, 900,
	5, 1266,
	-2, 2027,
	-1, 901,
	5, 1267,
	-2, 1918,
	-1, 902,
	5, 1268,
	-2, 1992,
	-1, 903,
	5, 1269,
	-2, 1994,
	-1, 904,
	5, 1270,
	-2, 2007,
	-1, 905,
	5, 1271,
	-2, 1995,
	-1, 906,
	5, 1272,
	-2, 1996,
	-1, 907,
	5, 1273,
	-2, 1801,
	-1, 908,
	5, 1274,
	-2, 2044,
	-1, 909,
	5, 1275,
	-2, 1878,
	-1, 910,
	5, 1276,
	-2, 1930,
	-1, 911,
	5, 1277,
	-2, 1932,
	-1, 912,
	5, 1278,
	-2, 1882,
	-1, 913,
	5, 1279,
	471, 1778,
	-2, 1769,
	-1, 919,
	471, 1779,
	-2, 1770,
	-1, 921,
	5, 1283,
	-2, 2077,
	-1, 922,
	5, 1284,
	-2, 2078,
	-1, 923,
	5, 1285,
	-2, 1881,
	-1, 924,
	5, 1286,
	-2, 2090,
	-1, 925,
	5, 1287,
	-2, 1883,
	-1, 926,
	5, 1288,
	-2, 1884,
	-1, 927,
	5, 1289,
	-2, 1885,
	-1, 928,
	5, 1290,
	-2, 2059,
	-1, 929,
	5, 1291,
	-2, 2088,
	-1, 930,
	5, 1292,
	-2, 1861,
	-1, 931,
	5, 1293,
	-2, 1862,
	-1, 932,
	5, 1307,
	-2, 2071,
	-1, 934,
	5, 1282,
	-2, 2067,
	-1, 935,
	5, 1282,
	-2, 2066,
	-1, 936,
	5, 1282,
	-2, 2083,
	-1, 937,
	5, 1299,
	-2, 2061,
	-1, 938,
	5, 1300,
	-2, 1803,
	-1, 939,
	5, 1310,
	-2, 2060,
	-1, 940,
	5, 1312,
	-2, 2099,
	-1, 942,
	5, 1323,
	-2, 1835,
	-1, 943,
	5, 1334,
	-2, 2092,
	-1, 944,
	5, 1326,
	-2, 2093,
	-1, 945,
	5, 1334,
	-2, 2094,
	-1, 946,
	5, 1330,
	-2, 2095,
	-1, 947,
	5, 1251,
	-2, 1891,
	-1, 948,
	5, 1252,
	-2, 1892,
	-1, 949,
	473, 1766,
	-2, 1750,
	-1, 950,
	471, 2120,
	-2, 1767,
	-1, 972,
	5, 1318,
	-2, 2018,
	-1, 990,
	5, 1317,
	-2, 2100,
	-1, 1000,
	5, 1319,
	437, 1319,
	-2, 2062,
	-1, 1001,
	5, 1320,
	437, 1320,
	-2, 2063,
	-1, 1038,
	471, 1778,
	-2, 1769,
	-1, 1066,
	157, 2030,
	401, 2030,
	454, 2030,
	473, 2030,
	-2, 0,
	-1, 1069,
	1, 497,
	474, 497,
	-2, 999,
	-1, 1189,
	321, 1747,
	464, 1747,
	-2, 1745,
	-1, 1201,
	475, 1747,
	-2, 1748,
	-1, 1202,
	1, 918,
	470, 918,
	472, 918,
	474, 918,
	-2, 1110,
	-1, 1213,
	1, 918,
	470, 918,
	472, 918,
	474, 918,
	-2, 1110,
	-1, 1253,
	312, 753,
	436, 753,
	-2, 250,
	-1, 1276,
	1, 918,
	470, 918,
	472, 918,
	474, 918,
	-2, 1110,
	-1, 1279,
	1, 918,
	470, 918,
	472, 918,
	474, 918,
	-2, 1110,
	-1, 1285,
	271, 1773,
	-2, 0,
	-1, 1351,
	1, 372,
	470, 372,
	472, 372,
	474, 372,
	-2, 1084,
	-1, 1354,
	4, 2098,
	11, 2098,
	12, 2098,
	14, 2098,
	15, 2098,
	16, 2098,
	17, 2098,
	18, 2098,
	19, 2098,
	21, 2098,
	22, 2098,
	23, 2098,
	24, 2098,
	25, 2098,
	27, 2098,
	30, 2098,
	31, 2098,
	33, 2098,
	35, 2098,
	38, 2098,
	39, 2098,
	40, 2098,
	41, 2098,
	42, 2098,
	43, 2098,
	44, 2098,
	45, 2098,
	46, 2098,
	47, 2098,
	48, 2098,
	49, 2098,
	50, 2098,
	52, 2098,
	53, 2098,
	54, 2098,
	55, 2098,
	56, 2098,
	57, 2098,
	58, 2098,
	61, 2098,
	62, 2098,
	63, 2098,
	64, 2098,
	66, 2098,
	67, 2098,
	68, 2098,
	71, 2098,
	72, 2098,
	73, 2098,
	74, 2098,
	75, 2098,
	76, 2098,
	77, 2098,
	78, 2098,
	79, 2098,
	80, 2098,
	81, 2098,
	83, 2098,
	84, 2098,
	85, 2098,
	86, 2098,
	87, 2098,
	89, 2098,
	90, 2098,
	91, 2098,
	92, 2098,
	100, 2098,
	101, 2098,
	102, 2098,
	103, 2098,
	104, 2098,
	105, 2098,
	106, 2098,
	107, 2098,
	109, 2098,
	111, 2098,
	112, 2098,
	114, 2098,
	117, 2098,
	118, 2098,
	119, 2098,
	121, 2098,
	123, 2098,
	124, 2098,
	126, 2098,
	127, 2098,
	128, 2098,
	129, 2098,
	130, 2098,
	131, 2098,
	132, 2098,
	133, 2098,
	134, 2098,
	135, 2098,
	136, 2098,
	137, 2098,
	138, 2098,
	142, 2098,
	143, 2098,
	144, 2098,
	145, 2098,
	146, 2098,
	147, 2098,
	148, 2098,
	149, 2098,
	150, 2098,
	151, 2098,
	152, 2098,
	153, 2098,
	155, 2098,
	158, 2098,
	159, 2098,
	160, 2098,
	162, 2098,
	163, 2098,
	165, 2098,
	166, 2098,
	168, 2098,
	169, 2098,
	170, 2098,
	171, 2098,
	172, 2098,
	173, 2098,
	174, 2098,
	175, 2098,
	176, 2098,
	177, 2098,
	178, 2098,
	179, 2098,
	180, 2098,
	181, 2098,
	182, 2098,
	183, 2098,
	184, 2098,
	186, 2098,
	187, 2098,
	188, 2098,
	190, 2098,
	191, 2098,
	192, 2098,
	193, 2098,
	194, 2098,
	195, 2098,
	196, 2098,
	197, 2098,
	198, 2098,
	200, 2098,
	202, 2098,
	203, 2098,
	204, 2098,
	205, 2098,
	206, 2098,
	207, 2098,
	208, 2098,
	209, 2098,
	210, 2098,
	211, 2098,
	212, 2098,
	213, 2098,
	214, 2098,
	215, 2098,
	216, 2098,
	217, 2098,
	218, 2098,
	220, 2098,
	221, 2098,
	223, 2098,
	224, 2098,
	225, 2098,
	226, 2098,
	227, 2098,
	228, 2098,
	230, 2098,
	231, 2098,
	234, 2098,
	235, 2098,
	236, 2098,
	237, 2098,
	238, 2098,
	239, 2098,
	240, 2098,
	241, 2098,
	242, 2098,
	243, 2098,
	244, 2098,
	245, 2098,
	246, 2098,
	247, 2098,
	248, 2098,
	249, 2098,
	250, 2098,
	251, 2098,
	252, 2098,
	253, 2098,
	254, 2098,
	256, 2098,
	259, 2098,
	260, 2098,
	262, 2098,
	263, 2098,
	264, 2098,
	265, 2098,
	266, 2098,
	268, 2098,
	269, 2098,
	270, 2098,
	273, 2098,
	274, 2098,
	275, 2098,
	276, 2098,
	278, 2098,
	279, 2098,
	280, 2098,
	282, 2098,
	284, 2098,
	285, 2098,
	286, 2098,
	287, 2098,
	288, 2098,
	289, 2098,
	290, 2098,
	291, 2098,
	292, 2098,
	293, 2098,
	295, 2098,
	296, 2098,
	297, 2098,
	298, 2098,
	299, 2098,
	300, 2098,
	302, 2098,
	304, 2098,
	305, 2098,
	306, 2098,
	307, 2098,
	308, 2098,
	309, 2098,
	310, 2098,
	311, 2098,
	312, 2098,
	313, 2098,
	315, 2098,
	316, 2098,
	317, 2098,
	318, 2098,
	319, 2098,
	320, 2098,
	321, 2098,
	322, 2098,
	323, 2098,
	324, 2098,
	325, 2098,
	326, 2098,
	327, 2098,
	328, 2098,
	330, 2098,
	331, 2098,
	332, 2098,
	333, 2098,
	334, 2098,
	335, 2098,
	336, 2098,
	337, 2098,
	338, 2098,
	339, 2098,
	340, 2098,
	341, 2098,
	342, 2098,
	343, 2098,
	344, 2098,
	345, 2098,
	346, 2098,
	348, 2098,
	349, 2098,
	350, 2098,
	351, 2098,
	352, 2098,
	353, 2098,
	354, 2098,
	355, 2098,
	356, 2098,
	357, 2098,
	359, 2098,
	360, 2098,
	361, 2098,
	362, 2098,
	363, 2098,
	364, 2098,
	365, 2098,
	366, 2098,
	367, 2098,
	368, 2098,
	369, 2098,
	371, 2098,
	372, 2098,
	373, 2098,
	374, 2098,
	375, 2098,
	376, 2098,
	377, 2098,
	378, 2098,
	379, 2098,
	380, 2098,
	381, 2098,
	382, 2098,
	384, 2098,
	385, 2098,
	386, 2098,
	388, 2098,
	389, 2098,
	390, 2098,
	391, 2098,
	392, 2098,
	393, 2098,
	394, 2098,
	396, 2098,
	397, 2098,
	398, 2098,
	399, 2098,
	400, 2098,
	402, 2098,
	404, 2098,
	405, 2098,
	406, 2098,
	407, 2098,
	408, 2098,
	410, 2098,
	411, 2098,
	412, 2098,
	414, 2098,
	415, 2098,
	418, 2098,
	419, 2098,
	420, 2098,
	421, 2098,
	422, 2098,
	423, 2098,
	424, 2098,
	426, 2098,
	428, 2098,
	429, 2098,
	430, 2098,
	431, 2098,
	432, 2098,
	433, 2098,
	434, 2098,
	436, 2098,
	437, 2098,
	438, 2098,
	443, 2098,
	444, 2098,
	445, 2098,
	446, 2098,
	447, 2098,
	448, 2098,
	449, 2098,
	450, 2098,
	452, 2098,
	453, 2098,
	454, 2098,
	455, 2098,
	456, 2098,
	457, 2098,
	459, 2098,
	460, 2098,
	461, 2098,
	462, 2098,
	463, 2098,
	464, 2098,
	465, 2098,
	466, 2098,
	467, 2098,
	469, 2098,
	472, 2098,
	473, 2098,
	475, 2098,
	476, 2098,
	-2, 0,
	-1, 1360,
	157, 2000,
	401, 2000,
	454, 2000,
	473, 2000,
	-2, 0,
	-1, 1392,
	306, 647,
	357, 647,
	-2, 0,
	-1, 1416,
	1, 642,
	470, 642,
	472, 642,
	474, 642,
	-2, 0,
	-1, 1417,
	1, 667,
	470, 667,
	472, 667,
	474, 667,
	-2, 0,
	-1, 1418,
	1, 649,
	470, 649,
	472, 649,
	474, 649,
	-2, 0,
	-1, 1420,
	1, 653,
	470, 653,
	472, 653,
	474, 653,
	-2, 0,
	-1, 1447,
	1, 2051,
	470, 2051,
	472, 2051,
	473, 2051,
	474, 2051,
	-2, 695,
	-1, 1448,
	1, 1997,
	470, 1997,
	472, 1997,
	473, 1997,
	474, 1997,
	-2, 696,
	-1, 1463,
	1, 994,
	474, 994,
	-2, 999,
	-1, 1466,
	141, 1122,
	154, 1122,
	229, 1122,
	267, 1122,
	-2, 1065,
	-1, 1560,
	125, 1086,
	141, 1086,
	154, 1086,
	199, 1086,
	229, 1086,
	267, 1086,
	277, 1086,
	416, 1086,
	-2, 1493,
	-1, 1617,
	472, 1641,
	-2, 0,
	-1, 1651,
	125, 1086,
	141, 1086,
	154, 1086,
	199, 1086,
	229, 1086,
	267, 1086,
	277, 1086,
	416, 1086,
	-2, 1201,
	-1, 1710,
	471, 1322,
	-2, 1310,
	-1, 1754,
	1, 499,
	474, 499,
	-2, 999,
	-1, 1964,
	1, 644,
	470, 644,
	472, 644,
	474, 644,
	-2, 0,
	-1, 1965,
	1, 669,
	470, 669,
	472, 669,
	474, 669,
	-2, 0,
	-1, 2037,
	336, 1147,
	337, 1147,
	-2, 1355,
	-1, 2068,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1373,
	-1, 2069,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1374,
	-1, 2070,
	84, 0,
	212, 0,
	213, 0,
	456, 0,
	457, 0,
	-2, 1375,
	-1, 2071,
	84, 0,
	212, 0,
	213, 0,
	456, 0,
	457, 0,
	-2, 1376,
	-1, 2072,
	84, 0,
	212, 0,
	213, 0,
	456, 0,
	457, 0,
	-2, 1377,
	-1, 2073,
	84, 0,
	212, 0,
	213, 0,
	456, 0,
	457, 0,
	-2, 1378,
	-1, 2074,
	84, 0,
	212, 0,
	213, 0,
	456, 0,
	457, 0,
	-2, 1379,
	-1, 2075,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1380,
	-1, 2087,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1392,
	-1, 2088,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1393,
	-1, 2089,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1394,
	-1, 2092,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1399,
	-1, 2098,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1403,
	-1, 2100,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1411,
	-1, 2101,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1412,
	-1, 2102,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1413,
	-1, 2103,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1414,
	-1, 2205,
	5, 1279,
	157, 1652,
	471, 1778,
	-2, 1769,
	-1, 2206,
	157, 1653,
	-2, 2055,
	-1, 2207,
	157, 1654,
	-2, 1915,
	-1, 2208,
	157, 1655,
	-2, 1836,
	-1, 2209,
	157, 1656,
	-2, 1872,
	-1, 2210,
	157, 1657,
	-2, 1913,
	-1, 2211,
	157, 1658,
	-2, 1991,
	-1, 2212,
	157, 1659,
	-2, 1476,
	-1, 2281,
	1, 1202,
	2, 1202,
	90, 1202,
	125, 1202,
	141, 1202,
	154, 1202,
	158, 1202,
	164, 1202,
	167, 1202,
	190, 1202,
	199, 1202,
	209, 1202,
	225, 1202,
	229, 1202,
	249, 1202,
	267, 1202,
	271, 1202,
	277, 1202,
	329, 1202,
	331, 1202,
	416, 1202,
	427, 1202,
	440, 1202,
	441, 1202,
	442, 1202,
	451, 1202,
	470, 1202,
	472, 1202,
	474, 1202,
	476, 1202,
	-2, 1201,
	-1, 2294,
	471, 1752,
	-2, 1764,
	-1, 2314,
	471, 1321,
	-2, 1311,
	-1, 2415,
	1, 918,
	470, 918,
	472, 918,
	474, 918,
	-2, 1110,
	-1, 2416,
	1, 918,
	470, 918,
	472, 918,
	474, 918,
	-2, 1110,
	-1, 2570,
	272, 1150,
	-2, 2089,
	-1, 2571,
	272, 1151,
	-2, 1980,
	-1, 2575,
	336, 1718,
	337, 1718,
	-2, 1474,
	-1, 2576,
	336, 1722,
	337, 1722,
	-2, 1475,
	-1, 2577,
	336, 1719,
	337, 1719,
	-2, 1474,
	-1, 2578,
	336, 1723,
	337, 1723,
	-2, 1475,
	-1, 2591,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1401,
	-1, 2592,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1405,
	-1, 2598,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1407,
	-1, 2787,
	206, 999,
	302, 999,
	310, 999,
	451, 999,
	-2, 496,
	-1, 2886,
	1, 918,
	470, 918,
	472, 918,
	474, 918,
	-2, 1110,
	-1, 2887,
	1, 918,
	470, 918,
	472, 918,
	474, 918,
	-2, 1110,
	-1, 2976,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1409,
	-1, 2983,
	203, 0,
	205, 0,
	259, 0,
	-2, 1428,
	-1, 3047,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1457,
	-1, 3048,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1458,
	-1, 3049,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1459,
	-1, 3053,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1463,
	-1, 3054,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1464,
	-1, 3055,
	14, 0,
	15, 0,
	16, 0,
	452, 0,
	453, 0,
	454, 0,
	-2, 1465,
	-1, 3099,
	471, 1753,
	-2, 1765,
	-1, 3192,
	473, 2202,
	-2, 1043,
	-1, 3242,
	203, 0,
	205, 0,
	259, 0,
	-2, 1429,
	-1, 3245,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1432,
	-1, 3246,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1434,
	-1, 3411,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1433,
	-1, 3412,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 1435,
	-1, 3422,
	203, 0,
	-2, 1466,
	-1, 3536,
	203, 0,
	-2, 1467,
	-1, 3666,
	43, 0,
	176, 0,
	228, 0,
	364, 0,
	449, 0,
	455, 0,
	-2, 2058,
}

const sqlPrivate = 57344

const sqlLast = 86151

var sqlAct = [...]int{

	919, 3451, 3480, 3771, 3454, 3665, 3347, 3676, 3758, 3557,
	2237, 3643, 3634, 3225, 2718, 3615, 3677, 2872, 1224, 3678,
	3631, 3440, 3716, 2470, 1039, 3487, 3015, 3664, 2719, 3119,
	3540, 2346, 3376, 2055, 1343, 2902, 3400, 2804, 1848, 216,
	3179, 216, 216, 849, 216, 216, 216, 216, 216, 3184,
	3496, 216, 1685, 3304, 3381, 2115, 1205, 2868, 1475, 2895,
	607, 864, 3163, 840, 2503, 3426, 1805, 2968, 1339, 2897,
	3120, 581, 3360, 1094, 2459, 2584, 2442, 2404, 216, 2505,
	1657, 1686, 607, 2433, 1186, 1896, 2761, 1031, 1938, 2445,
	2724, 2704, 2741, 1893, 3224, 2733, 2513, 2494, 2502, 2496,
	2722, 1841, 1400, 3277, 2471, 1626, 2348, 2619, 3070, 2703,
	704, 1842, 1814, 2274, 2052, 891, 3541, 1568, 2128, 2048,
	918, 4, 208, 2512, 32, 2157, 1588, 2568, 2159, 1194,
	1269, 1830, 2273, 3481, 2406, 1837, 2417, 1792, 87, 1082,
	2443, 1463, 915, 1627, 848, 144, 1847, 2276, 2255, 1790,
	2036, 2148, 2767, 2112, 1780, 2019, 1352, 2017, 1207, 1368,
	2870, 1022, 1336, 1877, 1326, 1274, 2506, 2464, 1916, 2338,
	1583, 549, 608, 941, 1071, 2151, 2263, 1025, 2381, 216,
	216, 1636, 210, 2234, 1004, 2129, 2201, 609, 535, 1551,
	2245, 151, 557, 1476, 1191, 2018, 1477, 1876, 697, 152,
	565, 209, 1350, 603, 1367, 1300, 1643, 678, 2020, 1021,
	651, 2041, 1221, 1902, 575, 2382, 1804, 560, 552, 876,
	37, 144, 36, 1027, 753, 1462, 34, 25, 1002, 770,
	1282, 23, 2615, 21, 1482, 3084, 2720, 3085, 844, 1918,
	1419, 1918, 612, 1918, 3804, 3794, 3793, 1559, 2254, 2254,
	2254, 3768, 1646, 3748, 3746, 1853, 1079, 3318, 3318, 3702,
	839, 615, 3700, 3703, 612, 3698, 2254, 3695, 844, 2254,
	3692, 3696, 2911, 2254, 3693, 3687, 3662, 1019, 3661, 1853,
	1853, 3074, 1853, 615, 3660, 715, 3657, 3656, 1930, 3629,
	1930, 1930, 845, 3318, 3609, 2912, 3603, 3602, 2309, 875,
	2254, 2254, 1037, 2785, 3597, 3596, 3590, 1034, 3318, 3318,
	1853, 3584, 3582, 3538, 3519, 3318, 3318, 2309, 1853, 3516,
	3489, 3470, 3610, 3318, 3490, 1853, 1005, 1005, 3469, 3461,
	3460, 3432, 1853, 1853, 3318, 1853, 827, 3413, 1008, 3398,
	1009, 2309, 58, 1930, 826, 3389, 3345, 3336, 3317, 2925,
	2254, 2254, 3318, 3244, 3200, 3194, 59, 2309, 2941, 2941,
	3161, 3094, 3092, 3077, 3162, 3095, 3093, 2254, 3522, 1079,
	2999, 2628, 63, 76, 1853, 834, 2995, 2629, 2940, 2932,
	2254, 1242, 2941, 2933, 2717, 2715, 2714, 2668, 2254, 2254,
	2254, 2254, 2647, 2630, 1946, 2492, 2648, 2254, 2491, 1934,
	2419, 2322, 1934, 69, 1930, 2254, 2308, 2303, 1006, 2305,
	2309, 2254, 2400, 2296, 2253, 1490, 1491, 1853, 2254, 3074,
	1933, 1533, 1534, 1535, 1934, 1051, 184, 2246, 1930, 3337,
	1853, 2933, 2247, 1056, 75, 1521, 2395, 2254, 2337, 1809,
	2676, 2677, 1493, 1853, 86, 1760, 1917, 1539, 2925, 76,
	83, 2439, 2583, 1852, 2335, 1622, 1220, 3147, 2971, 1236,
	2676, 2677, 2949, 2694, 2695, 2696, 186, 2618, 1644, 1840,
	1402, 2290, 1492, 2913, 2289, 2288, 2287, 2286, 1010, 3240,
	184, 1512, 1007, 833, 832, 831, 830, 829, 1509, 2676,
	2677, 825, 2914, 77, 2467, 824, 823, 1490, 1491, 822,
	1052, 2548, 1559, 821, 820, 819, 818, 817, 1919, 816,
	1919, 185, 1919, 815, 814, 813, 812, 751, 750, 749,
	186, 178, 2676, 2677, 1493, 748, 2691, 747, 746, 179,
	745, 744, 743, 742, 741, 740, 184, 739, 738, 737,
	216, 736, 2676, 2677, 735, 734, 1515, 1516, 1517, 1518,
	153, 1241, 733, 3293, 1492, 2691, 1498, 732, 2676, 2677,
	731, 2694, 2695, 2696, 730, 185, 729, 728, 216, 727,
	726, 725, 724, 713, 712, 216, 186, 669, 668, 628,
	1530, 2682, 627, 1540, 626, 184, 184, 1520, 1522, 618,
	617, 616, 216, 1097, 216, 216, 216, 1097, 216, 1210,
	1210, 2682, 120, 1210, 153, 589, 588, 78, 587, 586,
	585, 216, 216, 569, 2911, 1075, 1507, 1508, 206, 205,
	3256, 185, 1052, 1081, 2691, 186, 186, 1086, 204, 1235,
	2682, 178, 1528, 203, 202, 201, 216, 2271, 1498, 179,
	150, 81, 1513, 82, 200, 199, 198, 197, 196, 216,
	195, 216, 2697, 1210, 1210, 216, 216, 1926, 216, 1917,
	153, 2012, 184, 2682, 194, 193, 1197, 2692, 216, 192,
	185, 185, 191, 190, 703, 189, 216, 1421, 120, 188,
	178, 178, 187, 2682, 3088, 2942, 2764, 2692, 179, 179,
	216, 216, 216, 216, 216, 1210, 1210, 2641, 2624, 2682,
	1210, 2423, 186, 2297, 216, 1210, 216, 216, 2368, 153,
	153, 1941, 1647, 2280, 2192, 1210, 2692, 1189, 1069, 1788,
	1201, 216, 1670, 1577, 1519, 121, 184, 2178, 2176, 1226,
	1347, 1088, 1041, 184, 1489, 2452, 3683, 1230, 917, 154,
	2676, 2677, 1514, 2694, 2695, 2696, 1229, 185, 1234, 2692,
	1240, 2246, 1052, 1090, 1591, 1183, 1188, 178, 1210, 3239,
	1590, 3663, 1216, 1591, 3577, 179, 186, 2693, 1531, 1590,
	3531, 1570, 3525, 186, 3450, 3390, 3297, 1283, 1283, 3276,
	1940, 1594, 216, 1223, 3385, 2692, 153, 2693, 3275, 1064,
	1589, 3523, 3263, 612, 3262, 3261, 216, 3260, 1222, 3255,
	3252, 3251, 3160, 3167, 184, 874, 2691, 3108, 3107, 3106,
	3098, 185, 615, 3067, 3066, 1201, 2693, 3065, 185, 2991,
	2987, 178, 1355, 1357, 1359, 2936, 2759, 2711, 178, 179,
	2702, 1372, 184, 847, 3145, 1366, 179, 1075, 845, 2675,
	1075, 2672, 2671, 1371, 186, 144, 144, 144, 2669, 2693,
	153, 1018, 1287, 1529, 2654, 1330, 1333, 2466, 1353, 1532,
	1510, 1506, 2653, 1503, 1501, 1502, 1494, 1495, 1496, 1497,
	1499, 1500, 186, 2652, 2649, 2646, 1575, 1303, 1429, 2640,
	2154, 2682, 2623, 2676, 2677, 2693, 1284, 2616, 1340, 185,
	1467, 2678, 2679, 2680, 2681, 2683, 2684, 1420, 2493, 178,
	2281, 2688, 2689, 2690, 1571, 2141, 1569, 179, 2687, 2685,
	2686, 2678, 2679, 2680, 2681, 2683, 2684, 185, 1489, 1570,
	2453, 3801, 1858, 1856, 1890, 1033, 1488, 178, 153, 3767,
	3766, 3701, 2697, 1040, 1466, 179, 3017, 2687, 2685, 2686,
	2678, 2679, 2680, 2681, 2683, 2684, 2155, 3652, 1494, 1495,
	1496, 1497, 1499, 1500, 3650, 3571, 153, 1461, 3568, 3565,
	3564, 3563, 1558, 3556, 3550, 2779, 2756, 2692, 3520, 3515,
	2687, 2685, 2686, 2678, 2679, 2680, 2681, 2683, 2684, 1377,
	3514, 2118, 2311, 3466, 3384, 3446, 2676, 2677, 3424, 1393,
	3408, 3407, 1035, 2678, 2679, 2680, 2681, 2683, 2684, 2688,
	2689, 2690, 2676, 2677, 216, 3166, 2687, 2685, 2686, 2678,
	2679, 2680, 2681, 2683, 2684, 3395, 3394, 3374, 3542, 2156,
	2153, 3371, 845, 3364, 2682, 3292, 3274, 1464, 1633, 3214,
	1624, 216, 3211, 3136, 1490, 1491, 1472, 3135, 3123, 3122,
	827, 216, 1097, 216, 216, 216, 216, 3080, 826, 1471,
	2982, 607, 216, 216, 2124, 1555, 607, 216, 1680, 1672,
	1468, 1493, 216, 2943, 2926, 2889, 2851, 2693, 1210, 2830,
	1682, 2807, 1593, 2806, 1752, 1749, 2780, 1485, 1486, 2716,
	2645, 2644, 184, 2451, 2639, 2607, 2432, 1595, 1592, 1097,
	1584, 1492, 1581, 2316, 1942, 2315, 2292, 2285, 1490, 1491,
	2252, 2174, 1669, 1625, 1621, 1075, 1585, 1586, 1620, 1619,
	2692, 2807, 1618, 1617, 1678, 1616, 1615, 1654, 1630, 1631,
	1614, 2158, 186, 1613, 1757, 1493, 1786, 2682, 1611, 1610,
	1609, 1608, 1607, 1751, 1606, 1605, 1604, 1603, 1602, 1601,
	1037, 1600, 1037, 2682, 1599, 1034, 1598, 1034, 1597, 1572,
	1556, 1005, 1554, 1661, 1549, 1492, 1063, 1054, 1047, 3367,
	1677, 3294, 3248, 3104, 3091, 845, 3083, 185, 1201, 2627,
	2283, 3435, 3296, 144, 3103, 1498, 1571, 178, 184, 2777,
	1552, 2688, 2689, 2690, 2191, 179, 1779, 1676, 2687, 2685,
	2686, 2678, 2679, 2680, 2681, 2683, 2684, 2177, 2175, 2676,
	2677, 1665, 3764, 1779, 1652, 1779, 153, 3757, 1754, 2833,
	2693, 3339, 3566, 2692, 2898, 1085, 1809, 3526, 186, 1210,
	1210, 216, 2152, 3492, 1798, 3491, 1076, 1097, 1712, 1645,
	1095, 3388, 1623, 612, 1195, 1083, 3524, 1674, 612, 1755,
	3338, 3086, 1070, 3449, 2928, 2927, 2318, 1647, 1649, 1664,
	2386, 1663, 615, 1849, 1681, 1662, 1660, 615, 1827, 1748,
	1659, 1829, 1658, 185, 1834, 216, 1606, 1606, 1084, 216,
	3497, 1683, 1591, 178, 216, 3170, 1079, 2651, 1590, 1392,
	1655, 179, 2650, 1459, 1079, 2154, 216, 2589, 2370, 1080,
	3134, 1766, 1782, 1430, 1579, 216, 1777, 216, 1401, 216,
	1772, 810, 153, 216, 2874, 1939, 2873, 3488, 3688, 3675,
	3684, 1402, 1843, 2693, 3427, 1845, 3150, 216, 3138, 1079,
	1017, 2947, 1077, 3772, 1771, 1770, 2720, 1813, 1779, 1781,
	1078, 1838, 2685, 2686, 2678, 2679, 2680, 2681, 2683, 2684,
	3019, 811, 1576, 2633, 2149, 2314, 1612, 1587, 2866, 1885,
	1257, 2155, 3697, 3694, 1688, 2407, 2907, 1210, 1881, 1210,
	1891, 216, 1210, 3115, 3558, 216, 3627, 3180, 3685, 3547,
	1210, 1381, 3129, 1210, 216, 2858, 216, 216, 1886, 1850,
	2500, 1888, 2463, 2027, 3732, 3733, 1210, 1210, 1210, 664,
	216, 2963, 3589, 1223, 3328, 2789, 1884, 216, 2027, 1899,
	1255, 1245, 2110, 612, 2323, 808, 607, 216, 1222, 216,
	1998, 216, 2350, 216, 1833, 216, 806, 2312, 3798, 2220,
	2025, 804, 615, 1996, 2156, 2153, 2108, 2778, 1774, 216,
	802, 799, 216, 1851, 216, 2025, 2686, 2678, 2679, 2680,
	2681, 2683, 2684, 1076, 793, 216, 1076, 3479, 1428, 1793,
	1907, 3472, 3152, 1794, 3149, 2680, 2681, 2683, 2684, 3148,
	3112, 1960, 1868, 843, 1867, 1767, 216, 3111, 665, 2341,
	216, 1079, 1256, 1956, 2341, 1944, 2638, 1806, 2637, 1085,
	1793, 2339, 2636, 1427, 1794, 2635, 2339, 1496, 1497, 1499,
	1500, 2593, 2402, 1097, 2023, 845, 1085, 845, 2394, 1921,
	1901, 2409, 1923, 2353, 1303, 1925, 1904, 1802, 1904, 1928,
	1909, 1910, 1905, 2393, 1945, 1353, 2373, 1353, 2408, 2410,
	1776, 2304, 2832, 1379, 2099, 1809, 2158, 1465, 1807, 1808,
	1219, 2026, 1084, 2104, 859, 2029, 2791, 842, 2170, 1077,
	2169, 2016, 1077, 2057, 2105, 1795, 2026, 1078, 2106, 1084,
	1078, 1775, 2111, 2460, 1500, 3588, 1803, 2413, 1797, 1935,
	1293, 1936, 1292, 2009, 1314, 1866, 2130, 2131, 1426, 3406,
	1950, 1949, 2053, 2054, 1947, 1064, 1795, 2372, 1097, 1291,
	3752, 1290, 2130, 2146, 1971, 2006, 1044, 1251, 612, 1797,
	2024, 2948, 796, 2010, 1954, 1264, 2330, 2295, 3456, 2114,
	1665, 2361, 2122, 1374, 2114, 2024, 2581, 615, 2120, 1978,
	2566, 3324, 3125, 1799, 3654, 844, 2360, 1438, 1042, 1906,
	2390, 1968, 2200, 216, 2204, 2204, 2218, 2152, 2130, 2011,
	1964, 2238, 2240, 1470, 1963, 2040, 2244, 2302, 2954, 1416,
	2383, 2384, 3681, 2158, 1799, 1097, 2008, 216, 2352, 2953,
	2545, 1442, 3753, 722, 1062, 2684, 216, 2383, 2384, 2383,
	2384, 1394, 2149, 2015, 1712, 1712, 2013, 1972, 216, 2028,
	2021, 1097, 2551, 3340, 827, 3008, 2014, 827, 827, 1673,
	2293, 1965, 2044, 1275, 3775, 2045, 2046, 3721, 1079, 2145,
	1417, 1079, 547, 845, 3732, 2414, 2107, 3230, 667, 666,
	1390, 1045, 3005, 1375, 845, 2109, 2573, 2574, 845, 3607,
	2096, 2604, 2580, 2167, 3229, 1800, 542, 1639, 2168, 1273,
	2904, 2171, 2268, 2172, 2173, 1253, 1789, 1809, 2260, 1458,
	1800, 2844, 2838, 1402, 1800, 2602, 2788, 1826, 1402, 3755,
	2126, 2905, 1275, 1811, 1654, 2822, 1800, 2826, 3559, 1642,
	2790, 216, 3787, 1037, 841, 2554, 1425, 2143, 1034, 1210,
	3322, 696, 2854, 1033, 2351, 1033, 1836, 1918, 2262, 1037,
	1005, 3405, 3682, 2824, 1034, 3006, 3356, 2158, 2794, 2371,
	1582, 1800, 1783, 1784, 1640, 2259, 1835, 2005, 2282, 1097,
	1688, 1688, 845, 2775, 216, 662, 1380, 661, 1075, 2904,
	3137, 2213, 216, 2229, 3720, 2340, 2306, 2242, 800, 3226,
	3418, 3761, 1997, 216, 3741, 1757, 1831, 2265, 2266, 800,
	2261, 2250, 2251, 2823, 800, 1995, 216, 2820, 3639, 144,
	1035, 1652, 1035, 801, 800, 3570, 1548, 1807, 1808, 2643,
	216, 1097, 2599, 2094, 788, 1210, 2097, 1210, 2007, 3680,
	1313, 3605, 3126, 216, 216, 1439, 1796, 2600, 2342, 2553,
	2140, 2605, 2264, 3776, 1854, 1832, 838, 1593, 844, 1970,
	590, 2819, 2277, 1250, 3366, 3220, 216, 2158, 2550, 216,
	3606, 3100, 1057, 3323, 3754, 3231, 216, 1796, 2341, 2317,
	1641, 2321, 3457, 2965, 2436, 2093, 2267, 2376, 2272, 216,
	2355, 2278, 2279, 1043, 1585, 1586, 2564, 216, 2403, 216,
	2391, 1404, 216, 3679, 3731, 836, 3729, 788, 216, 3503,
	619, 216, 2320, 216, 3373, 216, 2375, 216, 216, 2367,
	216, 1210, 1210, 1210, 2324, 1210, 723, 3357, 2474, 838,
	216, 216, 789, 216, 216, 2595, 2121, 1210, 1189, 3719,
	2113, 1440, 2893, 2455, 3402, 216, 1875, 2552, 2399, 1632,
	2345, 3165, 1201, 2363, 2354, 2357, 2487, 2488, 1828, 853,
	595, 216, 216, 216, 2374, 2514, 216, 797, 216, 837,
	1967, 216, 2425, 216, 2427, 216, 543, 2392, 1376, 1712,
	1437, 1469, 2457, 1962, 2535, 2483, 2536, 2420, 1815, 2385,
	2387, 2388, 2389, 1055, 3759, 2601, 216, 216, 216, 216,
	216, 216, 1061, 216, 2603, 789, 1050, 2326, 1793, 1819,
	534, 3788, 1794, 949, 1441, 1223, 1480, 2465, 3227, 2328,
	2465, 2095, 601, 2430, 2516, 612, 1919, 2519, 2520, 544,
	2421, 2533, 2440, 3056, 216, 2043, 2525, 2526, 2527, 1201,
	1201, 2499, 216, 597, 615, 2489, 2476, 3401, 1389, 1391,
	1479, 2329, 212, 1816, 537, 538, 1810, 553, 537, 553,
	563, 568, 2530, 2469, 584, 2556, 2327, 2558, 144, 545,
	3760, 546, 2537, 212, 2539, 2480, 2541, 2481, 790, 2482,
	2484, 2490, 1635, 1353, 2518, 1201, 1479, 2521, 1768, 2522,
	2969, 708, 2549, 2501, 3272, 212, 2517, 3781, 1548, 1474,
	3463, 2768, 3762, 3462, 1795, 1688, 2543, 3444, 3546, 2356,
	3114, 3327, 2894, 2885, 2485, 620, 621, 1797, 3326, 1201,
	2056, 1201, 2802, 1765, 2798, 2456, 2444, 2434, 1900, 1889,
	1887, 216, 1880, 1820, 1862, 2621, 2622, 3572, 1478, 3004,
	2625, 2743, 2377, 2596, 2033, 3616, 2966, 592, 2256, 2626,
	1639, 790, 2002, 1761, 2572, 3403, 2532, 3185, 3377, 3232,
	1479, 2563, 2562, 2431, 2561, 2538, 596, 2540, 1316, 2542,
	1405, 3486, 1799, 2567, 1478, 3057, 1480, 2040, 1378, 3484,
	788, 3445, 1642, 3058, 2812, 2617, 2809, 2808, 791, 2587,
	600, 1763, 537, 537, 2559, 1821, 1822, 2565, 2582, 3082,
	212, 1637, 838, 1955, 1817, 2161, 594, 2732, 2731, 1418,
	1764, 2301, 1480, 1285, 623, 622, 2258, 1640, 2744, 2300,
	2299, 2257, 719, 2298, 2438, 842, 1299, 792, 3452, 3233,
	1286, 3738, 3552, 711, 3348, 2937, 1898, 2713, 1818, 1097,
	2594, 1638, 2418, 3482, 3273, 591, 2034, 845, 1478, 1297,
	3780, 721, 3619, 2729, 3553, 2727, 2728, 3624, 216, 835,
	2742, 791, 3613, 216, 624, 625, 216, 3325, 3278, 216,
	216, 1097, 3442, 3071, 1800, 216, 2165, 3740, 789, 3699,
	2746, 1456, 3567, 598, 2378, 2379, 3423, 3573, 1097, 2632,
	1454, 2749, 1434, 3271, 593, 216, 1432, 2705, 2294, 2981,
	792, 1415, 2945, 1413, 3443, 2862, 1791, 3453, 1411, 1409,
	216, 2670, 2606, 2773, 1407, 2435, 1399, 1397, 3620, 1295,
	3554, 2401, 2369, 1641, 2319, 1671, 1823, 1668, 2784, 216,
	216, 216, 1457, 2706, 1369, 216, 2962, 1994, 216, 2961,
	2739, 1474, 2547, 2737, 2546, 216, 216, 2763, 216, 216,
	216, 2524, 1075, 1037, 2022, 2786, 2758, 2769, 1034, 2745,
	2795, 2796, 216, 216, 216, 2004, 1033, 1975, 1037, 2792,
	2762, 216, 1750, 1034, 2765, 1596, 2810, 1373, 3674, 2814,
	2721, 2776, 1033, 2811, 216, 216, 2816, 2817, 2755, 1268,
	2738, 1824, 2164, 1097, 3344, 2747, 3335, 3612, 1037, 2799,
	2736, 2750, 2751, 1034, 1210, 2708, 2709, 2710, 1562, 3301,
	3183, 798, 1567, 2748, 1097, 1796, 2336, 3717, 2803, 216,
	3175, 2896, 216, 216, 790, 1298, 216, 717, 718, 1210,
	216, 2835, 216, 1035, 2781, 2782, 1455, 2783, 709, 710,
	1210, 1210, 2770, 2771, 2772, 1453, 216, 1433, 1296, 1035,
	720, 1431, 216, 2837, 2871, 2787, 1414, 216, 1412, 216,
	2884, 1798, 3315, 1410, 1408, 2793, 216, 2900, 2845, 1406,
	2852, 1398, 1396, 1712, 1294, 3132, 3130, 3113, 2892, 2827,
	2828, 2883, 2875, 2829, 2461, 1201, 1677, 1798, 2514, 1993,
	1210, 1210, 3312, 2450, 2449, 2909, 2861, 2514, 216, 216,
	2831, 2441, 216, 2825, 2428, 1932, 1884, 2859, 2860, 1931,
	1712, 2848, 2849, 2840, 1929, 2850, 2879, 1927, 1635, 1838,
	1924, 2847, 2843, 1922, 2753, 2853, 2754, 1838, 1920, 1911,
	2855, 1859, 1857, 1846, 791, 3313, 803, 805, 807, 216,
	1844, 1097, 216, 216, 1097, 216, 2375, 2863, 1839, 1825,
	1812, 1801, 3001, 1048, 2901, 2841, 3508, 1679, 1483, 2842,
	1014, 2585, 2882, 3733, 3645, 3397, 3392, 3391, 2515, 1037,
	1787, 1247, 2924, 792, 1034, 3510, 2359, 3193, 216, 2846,
	2906, 1058, 2341, 1809, 1015, 1966, 1639, 2939, 584, 2915,
	2341, 1992, 2935, 1991, 2339, 845, 599, 2944, 1973, 1688,
	1451, 1452, 2358, 2922, 2923, 212, 2908, 212, 212, 1192,
	3329, 212, 3561, 2960, 1395, 1097, 3533, 2959, 1642, 1490,
	1491, 1490, 1491, 3279, 212, 1225, 144, 144, 2380, 2362,
	1487, 2950, 1097, 2951, 216, 2952, 1688, 1637, 2586, 2917,
	2918, 2919, 3734, 2920, 2921, 3727, 2899, 1484, 1493, 1249,
	2984, 548, 1758, 1640, 2396, 2364, 3611, 3581, 3578, 3174,
	3164, 3097, 1267, 2468, 1272, 2243, 653, 1201, 212, 212,
	2956, 1192, 695, 1016, 2993, 2994, 1492, 1638, 1492, 2398,
	2366, 212, 1753, 1684, 3308, 2964, 3756, 2774, 3309, 1312,
	3779, 2397, 2365, 2967, 2676, 2677, 3580, 559, 1559, 2735,
	1490, 1491, 3253, 212, 212, 212, 212, 1192, 2333, 2334,
	2331, 2332, 1383, 3068, 2160, 3102, 2333, 584, 1382, 212,
	212, 2331, 2166, 1436, 2989, 3249, 1435, 3101, 3311, 3012,
	1557, 3791, 2053, 3026, 708, 3543, 2957, 3000, 3476, 3436,
	3434, 3314, 3363, 3020, 216, 216, 3295, 3217, 2053, 3036,
	3016, 1346, 3007, 3009, 3010, 1097, 3210, 3199, 3011, 1641,
	3178, 3159, 3158, 3087, 3157, 3025, 3022, 3021, 3128, 2916,
	3023, 1712, 2890, 3033, 2888, 2529, 216, 2528, 2478, 3064,
	2454, 3035, 2429, 2125, 1990, 3060, 1989, 1988, 1987, 1914,
	1913, 1912, 1892, 1870, 3109, 212, 1869, 1865, 1864, 1863,
	1861, 1860, 1450, 1449, 3061, 1325, 1324, 1323, 1322, 212,
	1321, 1320, 3078, 3079, 1319, 1318, 1317, 1315, 1310, 1309,
	1308, 1307, 1306, 216, 1712, 1712, 3075, 3076, 3069, 1263,
	1262, 3139, 1261, 1260, 1259, 1258, 1252, 1037, 1037, 1246,
	1712, 1712, 1034, 1034, 3310, 1244, 1243, 1060, 1059, 1210,
	989, 144, 3151, 1210, 896, 2734, 1759, 3089, 809, 3073,
	795, 3455, 1444, 74, 1254, 639, 216, 68, 3127, 647,
	3626, 1712, 2818, 2405, 216, 1974, 2726, 3090, 1403, 1976,
	2757, 2284, 3604, 1097, 216, 3257, 2642, 3155, 1210, 3539,
	3417, 3144, 3146, 2163, 3143, 1578, 70, 1688, 884, 3105,
	971, 3117, 216, 3355, 3354, 3171, 3302, 3116, 2752, 2504,
	3352, 3351, 852, 1100, 1769, 3195, 216, 216, 1210, 1210,
	1210, 890, 216, 216, 216, 2766, 1785, 216, 216, 3190,
	1778, 216, 216, 2474, 1210, 2313, 2203, 1692, 893, 216,
	1097, 1689, 3156, 2803, 3187, 1691, 2375, 895, 894, 3172,
	1688, 1688, 1690, 1580, 3189, 892, 3186, 1687, 3173, 2437,
	3181, 2472, 1097, 2514, 1302, 774, 1688, 1688, 3218, 1773,
	2119, 2147, 2631, 3131, 1573, 3133, 1033, 865, 3176, 3177,
	886, 2144, 1053, 2740, 2903, 3096, 3383, 2032, 656, 3247,
	2673, 1033, 2150, 1046, 2226, 2219, 1884, 1688, 2215, 2462,
	3191, 3188, 1460, 3197, 1550, 2473, 3196, 1087, 216, 3206,
	868, 2117, 1564, 3213, 3202, 3201, 2611, 537, 1037, 2042,
	3212, 1033, 3209, 1034, 2910, 3243, 2760, 2310, 3216, 3642,
	2047, 1874, 3207, 3208, 1013, 1712, 3234, 1012, 212, 3235,
	212, 3215, 1011, 1035, 212, 3228, 3633, 3630, 3223, 2869,
	1762, 2766, 2325, 1542, 1225, 2876, 1192, 212, 1035, 212,
	3219, 880, 1200, 2725, 212, 1225, 553, 2938, 1265, 212,
	1225, 216, 3560, 2123, 1541, 584, 2412, 1097, 2411, 1097,
	3549, 1074, 1073, 1072, 2801, 3786, 3124, 183, 1035, 3284,
	1562, 2579, 1481, 1473, 180, 182, 181, 3359, 3141, 91,
	35, 16, 216, 216, 216, 119, 118, 117, 116, 115,
	114, 113, 108, 112, 216, 3270, 111, 110, 109, 107,
	106, 216, 105, 216, 104, 103, 216, 216, 216, 102,
	101, 100, 3321, 3298, 3299, 99, 98, 97, 1097, 216,
	216, 2225, 3320, 1097, 3332, 3333, 1712, 96, 95, 94,
	93, 92, 3330, 216, 3287, 3280, 580, 216, 577, 49,
	3331, 1688, 48, 3285, 3290, 3283, 216, 3286, 3300, 3281,
	3282, 216, 3291, 2762, 1097, 90, 89, 1210, 1195, 15,
	1037, 1095, 33, 13, 3349, 1034, 53, 3319, 1037, 54,
	12, 28, 1033, 1034, 29, 80, 79, 27, 14, 26,
	24, 1037, 10, 8, 7, 216, 1034, 30, 1656, 11,
	149, 148, 73, 147, 72, 146, 145, 1097, 71, 22,
	3346, 9, 141, 3396, 3343, 3495, 3169, 67, 3342, 143,
	142, 3393, 3350, 3379, 212, 65, 140, 139, 3382, 138,
	3368, 64, 3365, 137, 136, 3378, 66, 1097, 135, 3387,
	20, 3375, 2997, 3380, 5, 3370, 52, 6, 3399, 1035,
	2946, 84, 1884, 85, 31, 62, 61, 60, 19, 3013,
	51, 18, 1688, 173, 172, 171, 170, 165, 212, 3358,
	3429, 164, 212, 169, 1097, 167, 166, 212, 168, 3369,
	3404, 163, 216, 175, 216, 174, 1097, 216, 177, 1897,
	161, 3409, 157, 156, 3414, 216, 160, 162, 212, 3386,
	212, 159, 212, 158, 155, 176, 537, 3425, 56, 134,
	133, 57, 132, 131, 130, 129, 128, 55, 216, 3439,
	1915, 3438, 17, 2, 1, 0, 0, 3430, 3431, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	1202, 1213, 0, 0, 1217, 216, 3437, 0, 0, 3433,
	0, 0, 0, 0, 216, 0, 0, 0, 3485, 1210,
	0, 0, 3475, 3494, 584, 216, 0, 3459, 708, 3458,
	0, 0, 0, 0, 0, 3499, 2871, 212, 0, 1192,
	212, 3500, 3099, 3509, 3502, 3498, 216, 216, 3477, 3473,
	3465, 0, 3483, 584, 1276, 1279, 0, 3507, 3529, 3530,
	212, 0, 3493, 0, 3517, 3518, 0, 0, 216, 212,
	212, 0, 212, 0, 212, 3505, 212, 0, 212, 0,
	3506, 0, 3511, 216, 3512, 0, 3382, 3504, 1712, 0,
	2037, 0, 1999, 0, 0, 2000, 0, 2001, 0, 0,
	0, 3555, 0, 0, 3545, 0, 1362, 0, 212, 0,
	1033, 1033, 0, 0, 0, 3528, 1217, 3537, 0, 3513,
	0, 3532, 0, 0, 0, 0, 0, 3521, 0, 568,
	0, 216, 3544, 584, 0, 0, 3562, 1029, 3569, 3467,
	3468, 0, 1712, 0, 216, 1210, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 1210, 1210, 0, 0, 1384,
	0, 1210, 0, 0, 0, 216, 3595, 216, 0, 1201,
	0, 0, 2608, 2609, 3498, 0, 207, 1035, 1035, 0,
	0, 0, 3583, 3600, 3608, 3601, 3579, 3592, 3591, 3593,
	3594, 216, 0, 3575, 3576, 3598, 3587, 216, 3621, 3599,
	216, 3586, 1097, 3574, 3623, 0, 0, 2225, 0, 0,
	0, 216, 216, 0, 1688, 3622, 3636, 3632, 3635, 3640,
	0, 0, 0, 0, 3646, 0, 2221, 0, 0, 3651,
	0, 0, 3649, 0, 0, 3628, 0, 0, 1712, 0,
	3658, 0, 0, 3644, 0, 0, 3659, 0, 0, 0,
	3637, 216, 0, 0, 0, 0, 0, 0, 0, 3655,
	3653, 0, 0, 3686, 0, 0, 0, 0, 1688, 0,
	0, 0, 0, 0, 3670, 3671, 0, 0, 3673, 3691,
	0, 3672, 2699, 2700, 2701, 0, 537, 2225, 2225, 3704,
	3689, 1033, 0, 0, 3706, 216, 0, 0, 3708, 0,
	0, 212, 0, 0, 3714, 3713, 0, 0, 0, 0,
	537, 0, 3718, 3705, 0, 216, 0, 212, 3710, 537,
	3707, 0, 3709, 0, 0, 0, 2474, 0, 0, 0,
	0, 212, 0, 3724, 3725, 3730, 3726, 3728, 3736, 0,
	0, 0, 216, 3647, 216, 3735, 3648, 3632, 0, 3739,
	3635, 3747, 0, 3745, 3737, 3743, 3750, 0, 1035, 0,
	3742, 3751, 3744, 0, 1688, 3749, 3289, 0, 0, 0,
	0, 0, 0, 0, 0, 3644, 0, 0, 0, 0,
	0, 0, 3763, 3765, 0, 3711, 3712, 0, 3769, 3715,
	0, 0, 0, 3773, 3774, 0, 3770, 2225, 2225, 2225,
	0, 0, 3777, 0, 0, 0, 0, 3783, 0, 0,
	0, 0, 0, 3789, 553, 3790, 0, 3784, 3785, 0,
	3792, 0, 0, 0, 0, 3315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3796, 3797, 3795, 3799, 0,
	3800, 2676, 2677, 3802, 2694, 2695, 2696, 3805, 0, 0,
	0, 0, 3803, 1033, 0, 3312, 0, 2349, 3305, 0,
	2986, 1033, 0, 0, 0, 212, 0, 0, 0, 0,
	0, 0, 3303, 0, 1033, 0, 212, 0, 3307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 3313, 0,
	0, 0, 0, 212, 1095, 0, 0, 2691, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 2422, 0, 0,
	1035, 0, 0, 0, 0, 0, 0, 0, 1035, 0,
	3306, 0, 0, 0, 3415, 0, 0, 0, 0, 1225,
	0, 1035, 212, 0, 0, 0, 0, 0, 0, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1897, 0, 0, 0, 0, 0, 0, 0,
	2349, 3415, 537, 0, 0, 2477, 0, 0, 0, 0,
	0, 212, 2682, 2056, 212, 0, 212, 0, 212, 0,
	212, 212, 0, 1192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2497, 708, 0, 2349, 2349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	0, 1217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2697, 212, 1192, 212, 0, 0, 1225,
	698, 1225, 2569, 0, 1192, 0, 1192, 3308, 1192, 0,
	0, 3309, 0, 0, 2977, 2978, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 58, 701, 700, 2692, 212,
	212, 212, 212, 1192, 212, 0, 212, 0, 0, 59,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	702, 3311, 0, 0, 0, 63, 0, 0, 0, 0,
	0, 0, 0, 0, 3314, 0, 0, 212, 0, 0,
	0, 0, 0, 0, 0, 212, 0, 0, 0, 0,
	0, 0, 2221, 2221, 0, 0, 69, 0, 0, 1092,
	0, 0, 0, 0, 0, 1199, 0, 0, 3037, 3038,
	3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048,
	3049, 3050, 3051, 3052, 3053, 3054, 3055, 75, 3059, 0,
	0, 0, 0, 1937, 0, 0, 0, 86, 2693, 2225,
	2225, 1217, 76, 83, 1948, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1957, 1958, 1959,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1225, 1304, 0, 3310, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1329, 1329, 1329,
	1199, 0, 2221, 2221, 2221, 0, 0, 0, 0, 2056,
	0, 0, 0, 1363, 1364, 0, 0, 0, 0, 0,
	0, 0, 0, 2225, 2225, 2225, 2225, 2225, 2225, 2225,
	2225, 2225, 2225, 2225, 2225, 2225, 2225, 2225, 2225, 2225,
	2225, 2225, 0, 2225, 1634, 0, 0, 0, 0, 0,
	0, 0, 2688, 2689, 2690, 0, 0, 0, 0, 2687,
	2685, 2686, 2678, 2679, 2680, 2681, 2683, 2684, 0, 0,
	0, 2676, 2677, 0, 2694, 2695, 2696, 0, 0, 0,
	0, 212, 0, 1490, 1491, 0, 0, 0, 0, 1443,
	2985, 0, 0, 0, 0, 0, 212, 0, 0, 0,
	78, 537, 0, 1521, 1490, 1491, 537, 0, 0, 537,
	1493, 0, 537, 537, 0, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 1521, 0, 212, 0, 0, 0,
	0, 1493, 0, 150, 81, 0, 82, 2691, 1225, 0,
	1492, 0, 0, 0, 0, 0, 0, 0, 0, 1512,
	0, 0, 0, 1225, 0, 184, 1509, 0, 0, 0,
	0, 1492, 0, 0, 0, 0, 0, 703, 0, 0,
	1512, 120, 2349, 2349, 212, 0, 0, 1509, 2349, 0,
	0, 2805, 0, 0, 1490, 1491, 0, 0, 2349, 2805,
	0, 2349, 2805, 2805, 0, 186, 3238, 0, 0, 851,
	0, 0, 0, 0, 1521, 212, 212, 212, 0, 0,
	0, 1493, 2682, 0, 1515, 1516, 1517, 1518, 121, 0,
	0, 0, 0, 0, 1498, 0, 0, 212, 1192, 0,
	0, 0, 154, 0, 0, 1515, 1516, 1517, 1518, 0,
	185, 1492, 0, 0, 0, 1498, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 1520, 1522, 0, 179, 0,
	0, 0, 2865, 2697, 0, 2867, 2349, 0, 0, 212,
	0, 0, 0, 212, 0, 1272, 1520, 1522, 0, 699,
	0, 0, 0, 0, 1507, 1508, 0, 0, 0, 212,
	0, 0, 0, 0, 0, 1192, 0, 212, 2692, 0,
	2349, 0, 537, 0, 0, 1507, 1508, 0, 0, 2349,
	1513, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1498, 0, 0, 0, 0,
	0, 1513, 58, 0, 0, 0, 0, 0, 1666, 0,
	0, 212, 1897, 0, 0, 1897, 59, 0, 0, 0,
	0, 1675, 0, 1199, 0, 0, 1520, 1522, 0, 0,
	0, 0, 63, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2221, 2221, 0, 0, 0, 0,
	0, 0, 2955, 0, 0, 1192, 212, 0, 212, 0,
	0, 0, 1519, 69, 0, 0, 0, 0, 2693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1514, 1513, 0, 1519, 0, 0, 2415, 0, 2416, 0,
	0, 212, 0, 0, 75, 0, 0, 0, 0, 0,
	0, 1514, 0, 0, 86, 0, 0, 0, 0, 76,
	83, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2221, 2221,
	2221, 2221, 2221, 2221, 2221, 2221, 2221, 2221, 2221, 2221,
	2221, 2221, 2221, 2221, 2221, 2221, 2221, 3018, 2221, 0,
	0, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3422, 2486, 0, 0, 0, 0, 0, 0, 0,
	0, 1514, 2688, 2689, 2690, 0, 0, 0, 1217, 2687,
	2685, 2686, 2678, 2679, 2680, 2681, 2683, 2684, 1510, 1506,
	0, 1503, 1501, 1502, 1494, 1495, 1496, 1497, 1499, 1500,
	0, 0, 0, 3447, 0, 0, 0, 0, 0, 1510,
	1506, 0, 1503, 1501, 1502, 1494, 1495, 1496, 1497, 1499,
	1500, 0, 0, 0, 0, 212, 212, 0, 0, 0,
	0, 0, 1872, 0, 0, 0, 1879, 0, 2307, 0,
	0, 0, 0, 0, 0, 1490, 1491, 537, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 78, 0, 0,
	0, 0, 1304, 0, 1903, 1521, 1903, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 2225, 0, 0, 1225,
	0, 0, 0, 0, 851, 0, 0, 0, 851, 0,
	150, 81, 0, 82, 1502, 1494, 1495, 1496, 1497, 1499,
	1500, 0, 1492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 3536, 0, 0, 0, 0, 2225, 0,
	0, 0, 0, 0, 703, 1227, 584, 1231, 120, 1237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 1952, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 212,
	0, 0, 0, 0, 1979, 121, 1981, 212, 1983, 0,
	1985, 0, 1986, 0, 0, 0, 1498, 212, 0, 154,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 2349, 212, 178, 0, 0,
	0, 0, 2003, 0, 1365, 179, 0, 1520, 1522, 2497,
	2497, 0, 1370, 0, 0, 708, 708, 2349, 2225, 0,
	1897, 1897, 0, 127, 708, 2349, 153, 0, 0, 58,
	0, 0, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 122, 0, 0, 0, 0, 0,
	0, 0, 2676, 2677, 0, 2694, 2695, 2696, 0, 63,
	0, 0, 1513, 0, 0, 0, 0, 0, 1422, 0,
	0, 0, 0, 0, 39, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2225, 2225, 38, 0,
	69, 0, 0, 2676, 2677, 0, 2694, 2695, 2696, 0,
	0, 3258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 41, 0, 0, 0, 0, 42, 0, 2691, 0,
	0, 75, 0, 0, 125, 0, 0, 0, 0, 0,
	40, 86, 0, 0, 0, 0, 76, 83, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1543,
	1544, 1545, 1546, 1547, 0, 0, 0, 0, 212, 2691,
	0, 0, 1514, 43, 1225, 0, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1561, 212,
	77, 0, 0, 0, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 2682, 0, 2349, 2349, 2349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1225, 0, 0,
	0, 0, 0, 0, 2349, 0, 2805, 0, 0, 1225,
	1225, 212, 0, 0, 0, 2291, 0, 0, 0, 0,
	0, 0, 212, 212, 2682, 2856, 0, 885, 88, 0,
	0, 0, 0, 0, 2697, 0, 2349, 0, 0, 0,
	3361, 0, 58, 0, 0, 0, 0, 0, 0, 212,
	2880, 2698, 0, 0, 3372, 0, 59, 0, 0, 0,
	0, 2886, 2887, 0, 0, 0, 0, 0, 0, 2692,
	0, 0, 63, 0, 0, 2697, 1494, 1495, 1496, 1497,
	1499, 1500, 0, 0, 78, 0, 0, 0, 1225, 0,
	0, 2221, 44, 0, 0, 0, 1628, 1628, 1628, 0,
	0, 0, 0, 69, 88, 0, 0, 0, 0, 0,
	2692, 2930, 2931, 0, 0, 0, 47, 150, 81, 0,
	82, 0, 45, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 46, 2221, 75, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 86, 0, 0, 0, 0, 76,
	83, 50, 0, 0, 0, 120, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 0, 851, 950, 2693,
	0, 0, 828, 0, 0, 2349, 0, 2805, 0, 186,
	3441, 846, 0, 0, 0, 0, 0, 1199, 212, 0,
	0, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 0, 0, 0, 0, 213, 0, 0,
	2693, 584, 0, 0, 1023, 0, 154, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 1879, 0, 213, 0,
	3441, 0, 0, 2448, 178, 0, 0, 0, 2349, 0,
	0, 0, 179, 2221, 0, 0, 0, 212, 0, 0,
	213, 0, 0, 0, 0, 0, 0, 0, 1225, 0,
	0, 0, 0, 153, 0, 2479, 3, 0, 1329, 0,
	1329, 0, 1329, 0, 1199, 1199, 0, 0, 0, 212,
	212, 0, 0, 2688, 2689, 2690, 0, 0, 0, 0,
	2687, 2685, 2686, 2678, 2679, 2680, 2681, 2683, 2684, 0,
	0, 3018, 2523, 0, 0, 0, 0, 78, 0, 0,
	0, 0, 0, 0, 0, 0, 3441, 0, 2531, 0,
	2534, 0, 0, 0, 2688, 2689, 2690, 0, 0, 0,
	0, 2687, 2685, 2686, 2678, 2679, 2680, 2681, 2683, 2684,
	150, 81, 0, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2555, 1199, 2557, 1199, 0, 2560, 0,
	0, 0, 184, 0, 3361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 703, 0, 0, 212, 120, 0,
	0, 58, 0, 0, 2805, 0, 0, 0, 0, 1490,
	1491, 1329, 0, 0, 0, 59, 0, 0, 1225, 2588,
	1225, 0, 186, 0, 0, 0, 0, 0, 0, 1521,
	0, 63, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 3617, 121, 0, 0, 0, 0,
	1225, 0, 0, 212, 0, 0, 0, 0, 0, 154,
	0, 0, 69, 0, 212, 2349, 1492, 185, 0, 0,
	0, 0, 0, 0, 0, 1512, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	3153, 0, 0, 75, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 3018, 0, 1358, 0, 76, 83,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1515, 1516, 1517, 1518, 0, 0, 0, 0, 2349, 0,
	1498, 0, 77, 0, 0, 0, 0, 0, 0, 3203,
	3204, 3205, 0, 0, 0, 0, 0, 0, 3441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1520, 1522, 2031, 0, 2035, 0, 0, 0, 0,
	0, 0, 2049, 0, 0, 1225, 0, 2349, 0, 2058,
	2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068,
	2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078,
	2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088,
	2089, 2090, 2091, 2092, 0, 2098, 1513, 2100, 2101, 2102,
	2103, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2127, 0, 0,
	0, 0, 0, 0, 0, 0, 78, 0, 0, 88,
	1561, 88, 0, 88, 2142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	81, 0, 82, 0, 2180, 2183, 2186, 2189, 2797, 2193,
	2194, 2195, 2196, 2197, 2198, 2199, 0, 0, 1519, 0,
	2217, 184, 2228, 2230, 2235, 0, 0, 0, 0, 0,
	0, 0, 0, 703, 0, 0, 1514, 120, 0, 2834,
	2836, 2448, 0, 0, 0, 0, 0, 846, 88, 88,
	88, 0, 0, 0, 0, 0, 0, 0, 88, 0,
	0, 186, 0, 0, 0, 0, 88, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	213, 1102, 213, 213, 121, 1102, 213, 1102, 1102, 0,
	0, 1102, 0, 0, 0, 0, 0, 0, 154, 213,
	0, 0, 0, 2877, 0, 0, 185, 2881, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	88, 0, 0, 2891, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1102, 1102, 213, 213, 1356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 213, 1503, 1501, 1502,
	1494, 1495, 1496, 1497, 1499, 1500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2934, 0, 0, 213, 213,
	213, 213, 0, 1102, 1102, 0, 0, 0, 1102, 0,
	0, 1490, 1491, 1102, 213, 213, 828, 0, 0, 0,
	0, 0, 0, 1102, 0, 0, 0, 0, 0, 0,
	0, 1521, 0, 0, 1553, 0, 0, 0, 1493, 0,
	2958, 0, 1199, 0, 0, 0, 0, 0, 0, 0,
	0, 1560, 0, 0, 0, 1566, 0, 1490, 1491, 0,
	1523, 1524, 1525, 1533, 1534, 1535, 1102, 0, 1492, 0,
	0, 0, 0, 0, 0, 2970, 1526, 1521, 0, 0,
	0, 2424, 0, 2426, 1493, 0, 0, 0, 0, 1539,
	213, 0, 0, 0, 0, 0, 0, 0, 1490, 1491,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1492, 0, 0, 0, 1521, 0,
	0, 0, 0, 1512, 0, 1493, 0, 0, 0, 0,
	1509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1498, 0, 0, 1492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1520, 1522, 0, 0, 0, 1515, 1516,
	1517, 1518, 1648, 0, 1651, 0, 88, 0, 1498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2544, 0, 0,
	0, 0, 1530, 0, 0, 1540, 0, 0, 0, 1520,
	1522, 0, 0, 0, 0, 0, 0, 0, 1513, 1498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1536,
	0, 1537, 0, 0, 0, 0, 0, 0, 1507, 1508,
	0, 0, 0, 1543, 1544, 0, 0, 0, 0, 0,
	1520, 1522, 0, 0, 1528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1538, 0, 0, 0, 0,
	0, 0, 0, 1490, 1491, 0, 0, 0, 2591, 2592,
	0, 0, 1527, 0, 2598, 1513, 0, 0, 0, 0,
	0, 0, 0, 1521, 0, 0, 0, 0, 1514, 213,
	1493, 0, 0, 2612, 2613, 0, 0, 0, 0, 2142,
	1102, 0, 213, 213, 213, 0, 0, 0, 2620, 213,
	0, 0, 0, 3168, 213, 0, 1519, 0, 0, 0,
	1492, 0, 0, 0, 2634, 0, 1102, 0, 0, 1512,
	0, 3182, 0, 0, 1514, 0, 1509, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 1102, 0, 2655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1514, 2980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3221, 0, 0, 0,
	0, 0, 0, 0, 1515, 1516, 1517, 1518, 0, 0,
	0, 0, 0, 0, 1498, 0, 2235, 2235, 2235, 1503,
	1501, 1502, 1494, 1495, 1496, 1497, 1499, 1500, 0, 0,
	0, 1628, 0, 0, 0, 0, 0, 0, 0, 2730,
	0, 0, 0, 0, 0, 1520, 1522, 0, 0, 0,
	0, 0, 0, 0, 0, 1529, 0, 0, 1504, 1505,
	1511, 1532, 1510, 1506, 0, 1503, 1501, 1502, 1494, 1495,
	1496, 1497, 1499, 1500, 1507, 1508, 0, 0, 3266, 217,
	0, 0, 3265, 0, 846, 0, 846, 1102, 1102, 213,
	0, 0, 0, 0, 0, 1102, 0, 0, 0, 0,
	1513, 0, 0, 0, 0, 863, 851, 1501, 1502, 1494,
	1495, 1496, 1497, 1499, 1500, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 0, 0, 213, 0, 606,
	0, 0, 213, 0, 0, 0, 2821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 0, 213, 0, 213, 0, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1519, 0, 0, 3334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2448, 0, 0, 0,
	1514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	828, 0, 0, 828, 828, 0, 0, 0, 0, 0,
	0, 0, 0, 2448, 0, 1102, 0, 1102, 0, 0,
	1102, 0, 916, 0, 0, 0, 0, 0, 1102, 0,
	0, 1102, 213, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 1102, 1102, 1102, 0, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 2116, 0,
	0, 211, 0, 0, 213, 213, 0, 213, 0, 213,
	0, 213, 846, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 613, 1560, 0, 0, 0, 1560, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 213, 613, 0, 0, 0, 1510, 1506,
	0, 1503, 1501, 1502, 1494, 1495, 1496, 1497, 1499, 1500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1102, 3448, 0, 0, 1023, 0, 0, 2049, 0,
	0, 0, 0, 0, 2972, 2973, 0, 0, 2976, 0,
	0, 1651, 2979, 0, 0, 0, 0, 0, 0, 0,
	0, 2983, 0, 0, 0, 0, 0, 0, 0, 0,
	2990, 0, 0, 2730, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 0, 0, 0, 0, 0, 3002, 1036,
	0, 3501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1102, 3027, 3028, 0,
	3029, 3030, 3031, 3527, 1199, 3032, 0, 0, 0, 3034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3062, 3063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3072, 0, 0, 0, 0,
	0, 0, 0, 1102, 0, 0, 0, 0, 0, 0,
	3081, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	863, 0, 88, 0, 863, 0, 213, 0, 0, 1102,
	0, 0, 0, 1181, 0, 0, 0, 1181, 0, 0,
	0, 3585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3110, 0, 0, 0,
	0, 0, 0, 0, 0, 88, 0, 88, 0, 0,
	0, 3118, 3121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3625, 0, 0,
	0, 0, 0, 0, 0, 0, 3140, 0, 3641, 0,
	0, 0, 0, 0, 0, 0, 0, 1102, 0, 0,
	88, 0, 0, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1102, 0, 0,
	0, 88, 0, 0, 0, 0, 0, 0, 0, 0,
	213, 0, 1098, 0, 0, 0, 1098, 0, 1211, 1211,
	0, 213, 1211, 0, 0, 0, 0, 0, 0, 1628,
	0, 0, 0, 0, 213, 0, 0, 0, 3198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 213, 1102,
	0, 0, 0, 1102, 0, 1102, 0, 0, 0, 88,
	0, 213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1211, 1211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 0,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 3236,
	3237, 0, 0, 0, 0, 3241, 3242, 0, 0, 0,
	3245, 3246, 0, 0, 1211, 1211, 0, 3250, 0, 1211,
	0, 0, 0, 0, 1211, 0, 213, 0, 3254, 213,
	0, 213, 0, 213, 1211, 213, 213, 0, 0, 1102,
	1102, 1102, 0, 1102, 3259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1102, 0, 0, 0, 0,
	0, 0, 0, 213, 211, 2116, 211, 211, 0, 0,
	211, 0, 0, 0, 0, 0, 0, 1211, 0, 213,
	0, 213, 0, 613, 0, 0, 1560, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 213, 213, 213, 213, 0, 213,
	0, 213, 0, 0, 0, 0, 0, 211, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 0, 0, 0, 0, 0, 3121, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	213, 0, 211, 211, 211, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1023, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1023, 0, 1181, 0, 0, 0, 3121, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 0, 0, 0, 0,
	0, 0, 0, 3410, 3411, 3412, 0, 0, 211, 0,
	0, 0, 0, 863, 0, 0, 0, 0, 0, 1181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3420,
	3421, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3428, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 88, 0, 0, 88, 0, 0, 0,
	0, 0, 0, 3121, 0, 0, 0, 0, 0, 0,
	0, 3464, 0, 0, 0, 0, 0, 1102, 0, 0,
	3471, 1098, 0, 851, 88, 88, 0, 0, 88, 3478,
	606, 0, 0, 0, 0, 606, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1211, 0, 1102,
	0, 0, 0, 0, 0, 0, 3121, 0, 0, 3121,
	0, 0, 0, 0, 0, 0, 1102, 0, 1098, 0,
	0, 0, 0, 0, 0, 0, 0, 1181, 0, 3121,
	3121, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1023, 0, 0, 846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3548, 0, 0, 3551, 0, 0, 0, 0, 0,
	213, 213, 213, 0, 0, 0, 0, 0, 0, 213,
	0, 3121, 0, 0, 0, 0, 0, 1650, 0, 1036,
	0, 0, 213, 211, 0, 0, 0, 0, 0, 0,
	0, 1102, 0, 0, 0, 0, 211, 1650, 211, 0,
	0, 0, 1102, 613, 0, 0, 0, 0, 613, 0,
	920, 0, 1102, 0, 0, 0, 0, 0, 1211, 1211,
	0, 0, 0, 0, 213, 0, 1098, 1102, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1102, 1102,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 851, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1102, 1102,
	0, 0, 0, 0, 0, 0, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3669, 3669, 3669, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3690, 0, 0, 0, 0, 0, 0, 1102,
	0, 213, 1102, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3121, 1211, 3121, 1211, 0,
	0, 1211, 0, 1181, 88, 0, 0, 0, 0, 1211,
	0, 3669, 1211, 613, 0, 0, 213, 0, 0, 1023,
	1023, 0, 0, 0, 0, 1211, 1211, 1211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 0, 0,
	0, 0, 0, 1102, 0, 0, 0, 211, 0, 0,
	0, 211, 0, 0, 0, 0, 211, 0, 0, 0,
	1102, 0, 0, 0, 0, 0, 0, 0, 1490, 1491,
	0, 1523, 1524, 1525, 1533, 1534, 1535, 211, 1181, 211,
	0, 211, 0, 0, 0, 0, 0, 0, 1521, 0,
	0, 3669, 3778, 0, 0, 1493, 0, 0, 0, 3782,
	1539, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1098, 0, 0, 1492, 0, 0, 0, 0,
	0, 0, 0, 0, 1512, 0, 0, 0, 0, 0,
	0, 1509, 0, 0, 0, 1181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 0, 211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1181, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 0, 0, 1102, 0, 0, 0, 0, 613, 211,
	1023, 211, 0, 211, 0, 211, 0, 211, 0, 1515,
	1516, 1517, 1518, 0, 0, 0, 0, 1098, 0, 1498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 88, 0, 0, 0, 211, 0, 0,
	0, 0, 0, 1530, 0, 0, 1540, 0, 0, 0,
	1520, 1522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	1508, 0, 0, 0, 1098, 0, 0, 1102, 0, 0,
	0, 1102, 0, 0, 0, 1528, 0, 0, 0, 1181,
	0, 0, 0, 0, 213, 1513, 0, 0, 0, 0,
	1098, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 1102, 213, 0, 0, 0, 1102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1181, 0, 0, 0, 0, 1102, 1102, 1102, 0,
	0, 0, 1023, 0, 0, 0, 1490, 1491, 0, 0,
	1023, 0, 1102, 0, 0, 0, 0, 213, 1102, 0,
	0, 0, 0, 0, 0, 0, 1521, 1519, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 1211, 0,
	1102, 0, 0, 0, 0, 1514, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1492, 0, 0, 0, 0, 1098, 0,
	1036, 1531, 1512, 0, 0, 0, 0, 0, 0, 1509,
	0, 0, 0, 1099, 0, 0, 1036, 1099, 0, 1212,
	1212, 0, 88, 1212, 0, 0, 0, 0, 0, 0,
	211, 0, 88, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2975,
	1098, 0, 88, 0, 1211, 0, 1211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 1516, 1517,
	1518, 0, 0, 1212, 1212, 0, 0, 1498, 0, 0,
	0, 0, 0, 0, 0, 1102, 1529, 1102, 0, 1504,
	1505, 1511, 1532, 1510, 1506, 0, 1503, 1501, 1502, 1494,
	1495, 1496, 1497, 1499, 1500, 0, 0, 0, 1520, 1522,
	0, 0, 0, 0, 0, 1212, 1212, 0, 0, 0,
	1212, 0, 0, 0, 0, 1212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1212, 213, 1507, 1508, 688,
	1211, 1211, 1211, 0, 1211, 0, 1102, 213, 213, 0,
	0, 1102, 0, 0, 0, 0, 1211, 0, 0, 0,
	0, 0, 670, 1513, 211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 213, 211, 0, 0, 1212, 0,
	0, 0, 1102, 0, 0, 1102, 0, 0, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 671, 0, 0,
	0, 0, 211, 0, 0, 0, 672, 0, 0, 0,
	0, 0, 0, 0, 0, 613, 0, 0, 0, 0,
	0, 0, 673, 0, 0, 1102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 693,
	0, 211, 0, 0, 0, 1519, 2116, 0, 211, 0,
	0, 0, 0, 0, 674, 1102, 0, 0, 0, 0,
	0, 0, 0, 1514, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 675, 0, 0, 0, 0, 0, 0,
	211, 0, 0, 211, 0, 211, 0, 211, 0, 211,
	211, 0, 1102, 676, 0, 0, 677, 0, 0, 0,
	0, 601, 0, 0, 1102, 0, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 0, 0, 211, 0, 0,
	0, 0, 692, 0, 0, 0, 0, 0, 0, 1181,
	0, 0, 0, 211, 0, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1181, 0, 0, 0, 0, 0, 0, 211, 211,
	211, 211, 213, 211, 0, 211, 0, 1102, 1181, 0,
	0, 1510, 1506, 0, 1503, 1501, 1502, 1494, 1495, 1496,
	1497, 1499, 1500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 863, 0, 213, 213, 211, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 863, 0, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 0, 0, 88,
	696, 0, 680, 0, 1490, 1491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1098, 0,
	0, 0, 1099, 0, 1521, 0, 0, 0, 0, 600,
	0, 1493, 0, 0, 0, 0, 681, 0, 0, 682,
	0, 0, 0, 1181, 0, 690, 0, 0, 1212, 0,
	1098, 0, 683, 0, 0, 0, 0, 0, 0, 0,
	0, 1492, 213, 1102, 1181, 0, 0, 1098, 0, 1099,
	1512, 0, 0, 1102, 1102, 0, 0, 1509, 0, 1102,
	0, 0, 0, 684, 691, 0, 0, 0, 0, 0,
	0, 685, 0, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 0, 686,
	0, 0, 0, 0, 0, 0, 0, 2974, 213, 0,
	1102, 630, 694, 0, 0, 0, 0, 0, 0, 213,
	0, 0, 0, 689, 0, 1515, 1516, 1517, 1518, 0,
	0, 0, 0, 0, 0, 1498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 631, 649, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1036, 0, 1098, 0, 0, 0, 1520, 1522, 632, 0,
	0, 633, 0, 1211, 0, 1036, 0, 0, 0, 0,
	0, 1181, 0, 1098, 1181, 0, 0, 0, 657, 1212,
	1212, 0, 0, 0, 634, 1507, 1508, 1099, 1211, 0,
	0, 0, 0, 655, 0, 1650, 0, 0, 0, 1211,
	1211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1513, 635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 636, 0, 0, 637, 659, 0, 0, 0,
	601, 0, 0, 211, 0, 1181, 0, 0, 0, 1211,
	1211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 211, 211, 0, 0, 0,
	0, 0, 0, 1650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1519, 0, 0, 211, 0, 0, 0,
	1098, 0, 0, 1098, 0, 0, 0, 658, 0, 0,
	0, 1514, 0, 0, 0, 0, 640, 1212, 0, 1212,
	0, 0, 1212, 0, 0, 0, 0, 0, 0, 0,
	1212, 0, 0, 1212, 0, 0, 0, 0, 211, 0,
	0, 0, 211, 0, 0, 0, 1212, 1212, 1212, 0,
	0, 0, 638, 0, 0, 0, 0, 0, 211, 0,
	0, 0, 641, 0, 0, 0, 1036, 0, 0, 0,
	0, 0, 0, 0, 1098, 0, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 1181, 0, 0, 0, 0,
	0, 1098, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 0,
	211, 0, 0, 0, 0, 0, 0, 0, 650, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	1506, 643, 1503, 1501, 1502, 1494, 1495, 1496, 1497, 1499,
	1500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	648, 0, 0, 1099, 0, 211, 0, 211, 0, 0,
	0, 0, 644, 0, 0, 662, 0, 661, 0, 0,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 654, 0,
	211, 0, 0, 663, 0, 660, 0, 0, 0, 0,
	0, 652, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1181, 1098, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1099, 0, 0, 1211, 0,
	0, 0, 1211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1099, 0, 0, 1036, 1036, 0, 0, 0, 0,
	0, 0, 1098, 0, 0, 0, 0, 1211, 0, 0,
	0, 0, 0, 0, 0, 0, 1490, 1491, 0, 1523,
	1524, 1525, 1533, 1534, 1535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1526, 1521, 1211, 1211, 1211,
	0, 0, 0, 1493, 0, 0, 0, 0, 1539, 0,
	0, 0, 0, 1211, 0, 0, 0, 0, 0, 1098,
	0, 0, 0, 0, 0, 0, 0, 1181, 0, 1181,
	0, 0, 0, 1492, 0, 0, 0, 0, 0, 1212,
	0, 1098, 1512, 0, 0, 0, 0, 0, 0, 1509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1099,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1181, 0,
	0, 0, 0, 1181, 0, 0, 0, 0, 211, 0,
	0, 0, 0, 0, 0, 0, 211, 1515, 1516, 1517,
	1518, 0, 0, 0, 0, 0, 211, 1498, 0, 0,
	0, 1099, 0, 0, 1181, 1212, 0, 1212, 0, 0,
	0, 0, 0, 0, 0, 1036, 0, 0, 0, 0,
	0, 1530, 0, 0, 1540, 0, 0, 0, 1520, 1522,
	0, 0, 0, 0, 0, 0, 1098, 0, 1098, 0,
	0, 0, 0, 0, 0, 0, 0, 1181, 1536, 0,
	1537, 211, 0, 0, 0, 0, 0, 1507, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1528, 0, 0, 0, 1181, 0, 0,
	0, 0, 0, 1513, 0, 0, 0, 0, 0, 0,
	0, 1212, 1212, 1212, 0, 1212, 0, 1098, 0, 0,
	0, 0, 1098, 0, 1538, 0, 0, 1212, 0, 0,
	0, 0, 0, 0, 1181, 0, 0, 0, 0, 0,
	0, 1527, 0, 0, 0, 0, 1181, 0, 0, 0,
	0, 0, 0, 1098, 0, 0, 1211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 863,
	0, 0, 0, 0, 0, 1519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1098, 1036, 0, 0,
	0, 0, 0, 1514, 0, 1036, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1650, 0,
	0, 0, 0, 0, 0, 0, 1098, 0, 0, 1531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 0, 1098, 0, 0, 0, 0, 0, 0,
	0, 211, 211, 0, 0, 1098, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1529, 0, 0, 1504, 1505, 1511,
	1532, 1510, 1506, 0, 1503, 1501, 1502, 1494, 1495, 1496,
	1497, 1499, 1500, 0, 0, 0, 0, 2664, 0, 0,
	0, 2665, 0, 0, 0, 0, 0, 0, 1211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1490, 1491, 0, 1523, 1524,
	1525, 1533, 1534, 1535, 0, 0, 0, 0, 0, 0,
	0, 0, 1181, 0, 1526, 1521, 0, 863, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 1539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1099,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 0,
	0, 0, 1492, 0, 0, 0, 0, 0, 0, 0,
	0, 1512, 0, 0, 0, 0, 0, 0, 1509, 0,
	0, 1099, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1211, 0, 0, 0, 1099, 0,
	0, 0, 0, 0, 1211, 1211, 0, 0, 0, 0,
	1211, 0, 0, 0, 0, 0, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 1490, 1491, 0, 1523, 1524,
	1525, 1533, 1534, 1535, 0, 0, 1515, 1516, 1517, 1518,
	0, 0, 0, 0, 1526, 1521, 1498, 0, 211, 211,
	0, 1098, 1493, 0, 0, 0, 0, 1539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1530, 0, 0, 1540, 1490, 1491, 0, 1520, 1522, 0,
	0, 0, 1492, 0, 0, 0, 0, 0, 0, 0,
	0, 1512, 0, 0, 1521, 0, 0, 1536, 1509, 1537,
	0, 1493, 0, 1099, 0, 0, 1507, 1508, 0, 0,
	0, 0, 0, 0, 1212, 0, 0, 0, 0, 0,
	0, 0, 1528, 0, 1099, 0, 0, 0, 0, 0,
	0, 1492, 1513, 0, 0, 0, 0, 0, 0, 1212,
	1512, 0, 0, 0, 0, 0, 211, 1509, 0, 0,
	1212, 1212, 0, 1538, 0, 0, 1515, 1516, 1517, 1518,
	0, 0, 0, 0, 0, 0, 1498, 0, 0, 0,
	1527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2597, 0, 0,
	1530, 0, 0, 1540, 0, 0, 0, 1520, 1522, 0,
	1212, 1212, 211, 0, 0, 1515, 1516, 1517, 1518, 0,
	0, 0, 0, 211, 1519, 1498, 0, 1536, 0, 1537,
	0, 0, 0, 0, 0, 0, 1507, 1508, 0, 0,
	0, 0, 1514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1528, 0, 0, 0, 1520, 1522, 0, 0,
	0, 1099, 1513, 0, 1099, 0, 0, 0, 1531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1538, 0, 1507, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1099, 0, 0, 0, 0,
	0, 0, 0, 0, 1519, 0, 0, 0, 0, 0,
	0, 0, 1099, 1529, 0, 0, 1504, 1505, 1511, 1532,
	1510, 1506, 1514, 1503, 1501, 1502, 1494, 1495, 1496, 1497,
	1499, 1500, 0, 0, 0, 0, 2138, 0, 1490, 1491,
	2139, 1523, 1524, 1525, 1533, 1534, 1535, 0, 1531, 0,
	0, 0, 0, 1519, 0, 0, 0, 1526, 1521, 0,
	0, 0, 0, 0, 0, 1493, 0, 0, 0, 0,
	1539, 1514, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1492, 0, 0, 0, 0,
	0, 0, 0, 0, 1512, 0, 0, 0, 0, 0,
	0, 1509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1529, 0, 1099, 1504, 1505, 1511, 1532,
	1510, 1506, 0, 1503, 1501, 1502, 1494, 1495, 1496, 1497,
	1499, 1500, 0, 0, 0, 0, 0, 0, 0, 0,
	3264, 0, 0, 0, 0, 0, 0, 0, 0, 1515,
	1516, 1517, 1518, 0, 0, 0, 0, 0, 0, 1498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	1506, 0, 1503, 1501, 1502, 1494, 1495, 1496, 1497, 1499,
	1500, 0, 0, 1530, 0, 0, 1540, 0, 0, 0,
	1520, 1522, 0, 0, 0, 0, 0, 1490, 1491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1212,
	1536, 0, 1537, 1212, 0, 0, 0, 1521, 0, 1507,
	1508, 0, 0, 0, 1493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1528, 0, 0, 0, 0,
	0, 0, 0, 1099, 0, 1513, 0, 0, 1212, 0,
	0, 0, 0, 0, 1492, 0, 0, 0, 0, 0,
	0, 0, 0, 1512, 0, 0, 1538, 0, 0, 0,
	1509, 0, 0, 0, 0, 0, 0, 0, 1212, 1212,
	1212, 0, 0, 1527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1212, 0, 0, 0, 0, 0,
	1099, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2590, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1099, 0, 0, 0, 0, 1519, 1515, 1516,
	1517, 1518, 0, 0, 0, 0, 0, 0, 1498, 0,
	0, 0, 0, 0, 0, 1514, 1490, 1491, 0, 1523,
	1524, 1525, 1533, 1534, 1535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1526, 1521, 0, 0, 1520,
	1522, 1531, 0, 1493, 0, 0, 0, 0, 1539, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 1508,
	0, 0, 0, 1492, 0, 0, 0, 0, 0, 0,
	0, 0, 1512, 0, 0, 0, 0, 0, 0, 1509,
	0, 0, 0, 0, 1513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1099, 0, 1099,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1529, 0, 0, 1504,
	1505, 1511, 1532, 1510, 1506, 0, 1503, 1501, 1502, 1494,
	1495, 1496, 1497, 1499, 1500, 0, 0, 1515, 1516, 1517,
	1518, 0, 0, 2988, 0, 0, 0, 1498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1099, 0,
	0, 0, 0, 1099, 0, 0, 1519, 0, 0, 0,
	0, 1530, 0, 0, 1540, 0, 0, 0, 1520, 1522,
	0, 0, 0, 0, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1099, 0, 0, 1212, 1536, 0,
	1537, 0, 0, 0, 0, 0, 0, 1507, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1513, 0, 0, 0, 1099, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1099, 0, 0,
	0, 1527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 1506, 1099, 1503, 1501, 1502, 1494, 1495,
	1496, 1497, 1499, 1500, 0, 1519, 1099, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1514, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1529, 0, 0, 1504, 1505, 1511,
	1532, 1510, 1506, 0, 1503, 1501, 1502, 1494, 1495, 1496,
	1497, 1499, 1500, 0, 0, 0, 0, 0, 0, 0,
	0, 2667, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1212, 1212, 0, 0, 0,
	0, 1212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1096, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 222, 223, 224, 225, 1103, 226, 1104,
	1105, 1106, 1099, 1107, 488, 1108, 1109, 1110, 1111, 227,
	229, 228, 230, 231, 489, 490, 232, 491, 235, 233,
	234, 492, 1112, 236, 237, 238, 239, 240, 241, 242,
	1113, 1114, 243, 493, 494, 495, 1115, 244, 496, 1116,
	1101, 1117, 245, 246, 247, 248, 249, 250, 0, 252,
	253, 254, 251, 1118, 255, 0, 256, 257, 258, 1119,
	259, 973, 260, 261, 1120, 1121, 1123, 1122, 1124, 1125,
	1126, 262, 263, 264, 265, 266, 267, 497, 498, 1127,
	268, 1128, 270, 269, 1129, 271, 1130, 1131, 272, 273,
	274, 1132, 275, 1133, 276, 277, 1134, 278, 499, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 500, 501,
	1135, 218, 1136, 0, 0, 0, 0, 289, 290, 291,
	502, 292, 293, 0, 294, 1137, 295, 1138, 1139, 974,
	296, 297, 1140, 298, 503, 1141, 504, 299, 1142, 300,
	301, 302, 303, 505, 506, 507, 358, 976, 304, 305,
	1143, 306, 307, 309, 0, 0, 219, 308, 310, 317,
	1144, 975, 311, 508, 313, 312, 314, 315, 316, 509,
	1145, 510, 1146, 318, 977, 511, 978, 319, 320, 321,
	979, 322, 323, 0, 0, 324, 325, 326, 327, 328,
	1147, 330, 329, 1148, 331, 512, 980, 332, 333, 981,
	1149, 334, 335, 1150, 1151, 336, 337, 338, 339, 0,
	340, 341, 343, 345, 342, 344, 346, 348, 349, 347,
	982, 350, 351, 354, 355, 353, 983, 352, 1152, 220,
	984, 356, 1153, 513, 357, 514, 359, 360, 1154, 361,
	362, 363, 1155, 1156, 365, 366, 367, 1157, 1158, 368,
	369, 515, 985, 370, 986, 516, 371, 364, 372, 373,
	374, 375, 376, 377, 378, 1159, 379, 380, 517, 381,
	518, 382, 1160, 383, 0, 384, 385, 386, 387, 388,
	389, 390, 519, 391, 392, 1161, 393, 394, 395, 396,
	397, 0, 399, 400, 401, 398, 402, 403, 404, 405,
	1162, 406, 987, 407, 408, 409, 410, 520, 411, 0,
	412, 416, 417, 418, 419, 420, 421, 422, 1163, 428,
	429, 423, 425, 426, 427, 424, 430, 431, 432, 1164,
	433, 413, 414, 434, 435, 988, 436, 437, 521, 438,
	439, 1165, 440, 441, 442, 443, 415, 444, 448, 449,
	445, 446, 447, 522, 1166, 451, 452, 450, 1167, 453,
	454, 455, 456, 457, 283, 458, 1168, 459, 523, 524,
	525, 526, 1169, 466, 1170, 460, 461, 527, 462, 528,
	1171, 463, 464, 465, 0, 467, 468, 1172, 1173, 469,
	470, 471, 473, 474, 472, 476, 1174, 477, 1175, 475,
	478, 479, 480, 529, 530, 531, 1176, 482, 481, 532,
	1177, 1178, 1179, 1180, 483, 484, 533, 485, 486, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1096, 0, 0, 0, 0, 0, 0, 0,
	2269, 0, 0, 0, 0, 0, 0, 0, 2270, 221,
	222, 223, 224, 225, 1103, 226, 1104, 1105, 1106, 0,
	1107, 488, 1108, 1109, 1110, 1111, 227, 229, 228, 230,
	231, 489, 490, 232, 491, 235, 233, 234, 492, 1112,
	236, 237, 238, 239, 240, 241, 242, 1113, 1114, 243,
	493, 494, 495, 1115, 244, 496, 1116, 1101, 1117, 245,
	246, 247, 248, 249, 250, 0, 252, 253, 254, 251,
	1118, 255, 0, 256, 257, 258, 1119, 259, 973, 260,
	261, 1120, 1121, 1123, 1122, 1124, 1125, 1126, 262, 263,
	264, 265, 266, 267, 497, 498, 1127, 268, 1128, 270,
	269, 1129, 271, 1130, 1131, 272, 273, 274, 1132, 275,
	1133, 276, 277, 1134, 278, 499, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 500, 501, 1135, 218, 1136,
	0, 0, 0, 0, 289, 290, 291, 502, 292, 293,
	0, 294, 1137, 295, 1138, 1139, 974, 296, 297, 1140,
	298, 503, 1141, 504, 299, 1142, 300, 301, 302, 303,
	505, 506, 507, 358, 976, 304, 305, 1143, 306, 307,
	309, 0, 0, 219, 308, 310, 317, 1144, 975, 311,
	508, 313, 312, 314, 315, 316, 509, 1145, 510, 1146,
	318, 977, 511, 978, 319, 320, 321, 979, 322, 323,
	0, 0, 324, 325, 326, 327, 328, 1147, 330, 329,
	1148, 331, 512, 980, 332, 333, 981, 1149, 334, 335,
	1150, 1151, 336, 337, 338, 339, 0, 340, 341, 343,
	345, 342, 344, 346, 348, 349, 347, 982, 350, 351,
	354, 355, 353, 983, 352, 1152, 220, 984, 356, 1153,
	513, 357, 514, 359, 360, 1154, 361, 362, 363, 1155,
	1156, 365, 366, 367, 1157, 1158, 368, 369, 515, 985,
	370, 986, 516, 371, 364, 372, 373, 374, 375, 376,
	377, 378, 1159, 379, 380, 517, 381, 518, 382, 1160,
	383, 0, 384, 385, 386, 387, 388, 389, 390, 519,
	391, 392, 1161, 393, 394, 395, 396, 397, 0, 399,
	400, 401, 398, 402, 403, 404, 405, 1162, 406, 987,
	407, 408, 409, 410, 520, 411, 0, 412, 416, 417,
	418, 419, 420, 421, 422, 1163, 428, 429, 423, 425,
	426, 427, 424, 430, 431, 432, 1164, 433, 413, 414,
	434, 435, 988, 436, 437, 521, 438, 439, 1165, 440,
	441, 442, 443, 415, 444, 448, 449, 445, 446, 447,
	522, 1166, 451, 452, 450, 1167, 453, 454, 455, 456,
	457, 283, 458, 1168, 459, 523, 524, 525, 526, 1169,
	466, 1170, 460, 461, 527, 462, 528, 1171, 463, 464,
	465, 0, 467, 468, 1172, 1173, 469, 470, 471, 473,
	474, 472, 476, 1174, 477, 1175, 475, 478, 479, 480,
	529, 530, 531, 1176, 482, 481, 532, 1177, 1178, 1179,
	1180, 483, 484, 533, 485, 486, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1096, 0, 0,
	0, 0, 2996, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2998, 221, 222, 223, 224, 225, 1103,
	226, 1104, 1105, 1106, 0, 1107, 488, 1108, 1109, 1110,
	1111, 227, 229, 228, 230, 231, 489, 490, 232, 491,
	235, 233, 234, 492, 1112, 236, 237, 238, 239, 240,
	241, 242, 1113, 1114, 243, 493, 494, 495, 1115, 244,
	496, 1116, 1101, 1117, 245, 246, 247, 248, 249, 250,
	0, 252, 253, 254, 251, 1118, 255, 0, 256, 257,
	258, 1119, 259, 973, 260, 261, 1120, 1121, 1123, 1122,
	1124, 1125, 1126, 262, 263, 264, 265, 266, 267, 497,
	498, 1127, 268, 1128, 270, 269, 1129, 271, 1130, 1131,
	272, 273, 274, 1132, 275, 1133, 276, 277, 1134, 278,
	499, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	500, 501, 1135, 218, 1136, 0, 0, 0, 0, 289,
	290, 291, 502, 292, 293, 0, 294, 1137, 295, 1138,
	1139, 974, 296, 297, 1140, 298, 503, 1141, 504, 299,
	1142, 300, 301, 302, 303, 505, 506, 507, 358, 976,
	304, 305, 1143, 306, 307, 309, 0, 0, 219, 308,
	310, 317, 1144, 975, 311, 508, 313, 312, 314, 315,
	316, 509, 1145, 510, 1146, 318, 977, 511, 978, 319,
	320, 321, 979, 322, 323, 0, 0, 324, 325, 326,
	327, 328, 1147, 330, 329, 1148, 331, 512, 980, 332,
	333, 981, 1149, 334, 335, 1150, 1151, 336, 337, 338,
	339, 0, 340, 341, 343, 345, 342, 344, 346, 348,
	349, 347, 982, 350, 351, 354, 355, 353, 983, 352,
	1152, 220, 984, 356, 1153, 513, 357, 514, 359, 360,
	1154, 361, 362, 363, 1155, 1156, 365, 366, 367, 1157,
	1158, 368, 369, 515, 985, 370, 986, 516, 371, 364,
	372, 373, 374, 375, 376, 377, 378, 1159, 379, 380,
	517, 381, 518, 382, 1160, 383, 0, 384, 385, 386,
	387, 388, 389, 390, 519, 391, 392, 1161, 393, 394,
	395, 396, 397, 0, 399, 400, 401, 398, 402, 403,
	404, 405, 1162, 406, 987, 407, 408, 409, 410, 520,
	411, 0, 412, 416, 417, 418, 419, 420, 421, 422,
	1163, 428, 429, 423, 425, 426, 427, 424, 430, 431,
	432, 1164, 433, 413, 414, 434, 435, 988, 436, 437,
	521, 438, 439, 1165, 440, 441, 442, 443, 415, 444,
	448, 449, 445, 446, 447, 522, 1166, 451, 452, 450,
	1167, 453, 454, 455, 456, 457, 283, 458, 1168, 459,
	523, 524, 525, 526, 1169, 466, 1170, 460, 461, 527,
	462, 528, 1171, 463, 464, 465, 0, 467, 468, 1172,
	1173, 469, 470, 471, 473, 474, 472, 476, 1174, 477,
	1175, 475, 478, 479, 480, 529, 530, 531, 1176, 482,
	481, 532, 1177, 1178, 1179, 1180, 483, 484, 533, 485,
	486, 487, 0, 0, 0, 0, 1096, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3288, 221, 222, 223, 224, 225, 1103, 226,
	1104, 1105, 1106, 0, 1107, 488, 1108, 1109, 1110, 1111,
	227, 229, 228, 230, 231, 489, 490, 232, 491, 235,
	233, 234, 492, 1112, 236, 237, 238, 239, 240, 241,
	242, 1113, 1114, 243, 493, 494, 495, 1115, 244, 496,
	1116, 1101, 1117, 245, 246, 247, 248, 249, 250, 0,
	252, 253, 254, 251, 1118, 255, 0, 256, 257, 258,
	1119, 259, 973, 260, 261, 1120, 1121, 1123, 1122, 1124,
	1125, 1126, 262, 263, 264, 265, 266, 267, 497, 498,
	1127, 268, 1128, 270, 269, 1129, 271, 1130, 1131, 272,
	273, 274, 1132, 275, 1133, 276, 277, 1134, 278, 499,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 500,
	501, 1135, 218, 1136, 0, 0, 0, 0, 289, 290,
	291, 502, 292, 293, 0, 294, 1137, 295, 1138, 1139,
	974, 296, 297, 1140, 298, 503, 1141, 504, 299, 1142,
	300, 301, 302, 303, 505, 506, 507, 358, 976, 304,
	305, 1143, 306, 307, 309, 0, 0, 219, 308, 310,
	317, 1144, 975, 311, 508, 313, 312, 314, 315, 316,
	509, 1145, 510, 1146, 318, 977, 511, 978, 319, 320,
	321, 979, 322, 323, 0, 0, 324, 325, 326, 327,
	328, 1147, 330, 329, 1148, 331, 512, 980, 332, 333,
	981, 1149, 334, 335, 1150, 1151, 336, 337, 338, 339,
	0, 340, 341, 343, 345, 342, 344, 346, 348, 349,
	347, 982, 350, 351, 354, 355, 353, 983, 352, 1152,
	220, 984, 356, 1153, 513, 357, 514, 359, 360, 1154,
	361, 362, 363, 1155, 1156, 365, 366, 367, 1157, 1158,
	368, 369, 515, 985, 370, 986, 516, 371, 364, 372,
	373, 374, 375, 376, 377, 378, 1159, 379, 380, 517,
	381, 518, 382, 1160, 383, 0, 384, 385, 386, 387,
	388, 389, 390, 519, 391, 392, 1161, 393, 394, 395,
	396, 397, 0, 399, 400, 401, 398, 402, 403, 404,
	405, 1162, 406, 987, 407, 408, 409, 410, 520, 411,
	0, 412, 416, 417, 418, 419, 420, 421, 422, 1163,
	428, 429, 423, 425, 426, 427, 424, 430, 431, 432,
	1164, 433, 413, 414, 434, 435, 988, 436, 437, 521,
	438, 439, 1165, 440, 441, 442, 443, 415, 444, 448,
	449, 445, 446, 447, 522, 1166, 451, 452, 450, 1167,
	453, 454, 455, 456, 457, 283, 458, 1168, 459, 523,
	524, 525, 526, 1169, 466, 1170, 460, 461, 527, 462,
	528, 1171, 463, 464, 465, 0, 467, 468, 1172, 1173,
	469, 470, 471, 473, 474, 472, 476, 1174, 477, 1175,
	475, 478, 479, 480, 529, 530, 531, 1176, 482, 481,
	532, 1177, 1178, 1179, 1180, 483, 484, 533, 485, 486,
	487, 1096, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3416, 0, 221, 222,
	223, 224, 225, 1103, 226, 1104, 1105, 1106, 0, 1107,
	488, 1108, 1109, 1110, 1111, 227, 229, 228, 230, 231,
	489, 490, 232, 491, 235, 233, 234, 492, 1112, 236,
	237, 238, 239, 240, 241, 242, 1113, 1114, 243, 493,
	494, 495, 1115, 244, 496, 1116, 1101, 1117, 245, 246,
	247, 248, 249, 250, 0, 252, 253, 254, 251, 1118,
	255, 0, 256, 257, 258, 1119, 259, 973, 260, 261,
	1120, 1121, 1123, 1122, 1124, 1125, 1126, 262, 263, 264,
	265, 266, 267, 497, 498, 1127, 268, 1128, 270, 269,
	1129, 271, 1130, 1131, 272, 273, 274, 1132, 275, 1133,
	276, 277, 1134, 278, 499, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 500, 501, 1135, 218, 1136, 0,
	0, 0, 0, 289, 290, 291, 502, 292, 293, 0,
	294, 1137, 295, 1138, 1139, 974, 296, 297, 1140, 298,
	503, 1141, 504, 299, 1142, 300, 301, 302, 303, 505,
	506, 507, 358, 976, 304, 305, 1143, 306, 307, 309,
	0, 0, 219, 308, 310, 317, 1144, 975, 311, 508,
	313, 312, 314, 315, 316, 509, 1145, 510, 1146, 318,
	977, 511, 978, 319, 320, 321, 979, 322, 323, 0,
	0, 324, 325, 326, 327, 328, 1147, 330, 329, 1148,
	331, 512, 980, 332, 333, 981, 1149, 334, 335, 1150,
	1151, 336, 337, 338, 339, 0, 340, 341, 343, 345,
	342, 344, 346, 348, 349, 347, 982, 350, 351, 354,
	355, 353, 983, 352, 1152, 220, 984, 356, 1153, 513,
	357, 514, 359, 360, 1154, 361, 362, 363, 1155, 1156,
	365, 366, 367, 1157, 1158, 368, 369, 515, 985, 370,
	986, 516, 371, 364, 372, 373, 374, 375, 376, 377,
	378, 1159, 379, 380, 517, 381, 518, 382, 1160, 383,
	0, 384, 385, 386, 387, 388, 389, 390, 519, 391,
	392, 1161, 393, 394, 395, 396, 397, 0, 399, 400,
	401, 398, 402, 403, 404, 405, 1162, 406, 987, 407,
	408, 409, 410, 520, 411, 0, 412, 416, 417, 418,
	419, 420, 421, 422, 1163, 428, 429, 423, 425, 426,
	427, 424, 430, 431, 432, 1164, 433, 413, 414, 434,
	435, 988, 436, 437, 521, 438, 439, 1165, 440, 441,
	442, 443, 415, 444, 448, 449, 445, 446, 447, 522,
	1166, 451, 452, 450, 1167, 453, 454, 455, 456, 457,
	283, 458, 1168, 459, 523, 524, 525, 526, 1169, 466,
	1170, 460, 461, 527, 462, 528, 1171, 463, 464, 465,
	0, 467, 468, 1172, 1173, 469, 470, 471, 473, 474,
	472, 476, 1174, 477, 1175, 475, 478, 479, 480, 529,
	530, 531, 1176, 482, 481, 532, 1177, 1178, 1179, 1180,
	483, 484, 533, 485, 486, 487, 1096, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3341, 0, 221, 222, 223, 224, 225, 1103, 226,
	1104, 1105, 1106, 0, 1107, 488, 1108, 1109, 1110, 1111,
	227, 229, 228, 230, 231, 489, 490, 232, 491, 235,
	233, 234, 492, 1112, 236, 237, 238, 239, 240, 241,
	242, 1113, 1114, 243, 493, 494, 495, 1115, 244, 496,
	1116, 1101, 1117, 245, 246, 247, 248, 249, 250, 0,
	252, 253, 254, 251, 1118, 255, 0, 256, 257, 258,
	1119, 259, 973, 260, 261, 1120, 1121, 1123, 1122, 1124,
	1125, 1126, 262, 263, 264, 265, 266, 267, 497, 498,
	1127, 268, 1128, 270, 269, 1129, 271, 1130, 1131, 272,
	273, 274, 1132, 275, 1133, 276, 277, 1134, 278, 499,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 500,
	501, 1135, 218, 1136, 0, 0, 0, 0, 289, 290,
	291, 502, 292, 293, 0, 294, 1137, 295, 1138, 1139,
	974, 296, 297, 1140, 298, 503, 1141, 504, 299, 1142,
	300, 301, 302, 303, 505, 506, 507, 358, 976, 304,
	305, 1143, 306, 307, 309, 0, 0, 219, 308, 310,
	317, 1144, 975, 311, 508, 313, 312, 314, 315, 316,
	509, 1145, 510, 1146, 318, 977, 511, 978, 319, 320,
	321, 979, 322, 323, 0, 0, 324, 325, 326, 327,
	328, 1147, 330, 329, 1148, 331, 512, 980, 332, 333,
	981, 1149, 334, 335, 1150, 1151, 336, 337, 338, 339,
	0, 340, 341, 343, 345, 342, 344, 346, 348, 349,
	347, 982, 350, 351, 354, 355, 353, 983, 352, 1152,
	220, 984, 356, 1153, 513, 357, 514, 359, 360, 1154,
	361, 362, 363, 1155, 1156, 365, 366, 367, 1157, 1158,
	368, 369, 515, 985, 370, 986, 516, 371, 364, 372,
	373, 374, 375, 376, 377, 378, 1159, 379, 380, 517,
	381, 518, 382, 1160, 383, 0, 384, 385, 386, 387,
	388, 389, 390, 519, 391, 392, 1161, 393, 394, 395,
	396, 397, 0, 399, 400, 401, 398, 402, 403, 404,
	405, 1162, 406, 987, 407, 408, 409, 410, 520, 411,
	0, 412, 416, 417, 418, 419, 420, 421, 422, 1163,
	428, 429, 423, 425, 426, 427, 424, 430, 431, 432,
	1164, 433, 413, 414, 434, 435, 988, 436, 437, 521,
	438, 439, 1165, 440, 441, 442, 443, 415, 444, 448,
	449, 445, 446, 447, 522, 1166, 451, 452, 450, 1167,
	453, 454, 455, 456, 457, 283, 458, 1168, 459, 523,
	524, 525, 526, 1169, 466, 1170, 460, 461, 527, 462,
	528, 1171, 463, 464, 465, 0, 467, 468, 1172, 1173,
	469, 470, 471, 473, 474, 472, 476, 1174, 477, 1175,
	475, 478, 479, 480, 529, 530, 531, 1176, 482, 481,
	532, 1177, 1178, 1179, 1180, 483, 484, 533, 485, 486,
	487, 1096, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3222, 0, 221, 222,
	223, 224, 225, 1103, 226, 1104, 1105, 1106, 0, 1107,
	488, 1108, 1109, 1110, 1111, 227, 229, 228, 230, 231,
	489, 490, 232, 491, 235, 233, 234, 492, 1112, 236,
	237, 238, 239, 240, 241, 242, 1113, 1114, 243, 493,
	494, 495, 1115, 244, 496, 1116, 1101, 1117, 245, 246,
	247, 248, 249, 250, 0, 252, 253, 254, 251, 1118,
	255, 0, 256, 257, 258, 1119, 259, 973, 260, 261,
	1120, 1121, 1123, 1122, 1124, 1125, 1126, 262, 263, 264,
	265, 266, 267, 497, 498, 1127, 268, 1128, 270, 269,
	1129, 271, 1130, 1131, 272, 273, 274, 1132, 275, 1133,
	276, 277, 1134, 278, 499, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 500, 501, 1135, 218, 1136, 0,
	0, 0, 0, 289, 290, 291, 502, 292, 293, 0,
	294, 1137, 295, 1138, 1139, 974, 296, 297, 1140, 298,
	503, 1141, 504, 299, 1142, 300, 301, 302, 303, 505,
	506, 507, 358, 976, 304, 305, 1143, 306, 307, 309,
	0, 0, 219, 308, 310, 317, 1144, 975, 311, 508,
	313, 312, 314, 315, 316, 509, 1145, 510, 1146, 318,
	977, 511, 978, 319, 320, 321, 979, 322, 323, 0,
	0, 324, 325, 326, 327, 328, 1147, 330, 329, 1148,
	331, 512, 980, 332, 333, 981, 1149, 334, 335, 1150,
	1151, 336, 337, 338, 339, 0, 340, 341, 343, 345,
	342, 344, 346, 348, 349, 347, 982, 350, 351, 354,
	355, 353, 983, 352, 1152, 220, 984, 356, 1153, 513,
	357, 514, 359, 360, 1154, 361, 362, 363, 1155, 1156,
	365, 366, 367, 1157, 1158, 368, 369, 515, 985, 370,
	986, 516, 371, 364, 372, 373, 374, 375, 376, 377,
	378, 1159, 379, 380, 517, 381, 518, 382, 1160, 383,
	0, 384, 385, 386, 387, 388, 389, 390, 519, 391,
	392, 1161, 393, 394, 395, 396, 397, 0, 399, 400,
	401, 398, 402, 403, 404, 405, 1162, 406, 987, 407,
	408, 409, 410, 520, 411, 0, 412, 416, 417, 418,
	419, 420, 421, 422, 1163, 428, 429, 423, 425, 426,
	427, 424, 430, 431, 432, 1164, 433, 413, 414, 434,
	435, 988, 436, 437, 521, 438, 439, 1165, 440, 441,
	442, 443, 415, 444, 448, 449, 445, 446, 447, 522,
	1166, 451, 452, 450, 1167, 453, 454, 455, 456, 457,
	283, 458, 1168, 459, 523, 524, 525, 526, 1169, 466,
	1170, 460, 461, 527, 462, 528, 1171, 463, 464, 465,
	0, 467, 468, 1172, 1173, 469, 470, 471, 473, 474,
	472, 476, 1174, 477, 1175, 475, 478, 479, 480, 529,
	530, 531, 1176, 482, 481, 532, 1177, 1178, 1179, 1180,
	483, 484, 533, 485, 486, 487, 1096, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3014, 0, 221, 222, 223, 224, 225, 1103, 226,
	1104, 1105, 1106, 0, 1107, 488, 1108, 1109, 1110, 1111,
	227, 229, 228, 230, 231, 489, 490, 232, 491, 235,
	233, 234, 492, 1112, 236, 237, 238, 239, 240, 241,
	242, 1113, 1114, 243, 493, 494, 495, 1115, 244, 496,
	1116, 1101, 1117, 245, 246, 247, 248, 249, 250, 0,
	252, 253, 254, 251, 1118, 255, 0, 256, 257, 258,
	1119, 259, 973, 260, 261, 1120, 1121, 1123, 1122, 1124,
	1125, 1126, 262, 263, 264, 265, 266, 267, 497, 498,
	1127, 268, 1128, 270, 269, 1129, 271, 1130, 1131, 272,
	273, 274, 1132, 275, 1133, 276, 277, 1134, 278, 499,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 500,
	501, 1135, 218, 1136, 0, 0, 0, 0, 289, 290,
	291, 502, 292, 293, 0, 294, 1137, 295, 1138, 1139,
	974, 296, 297, 1140, 298, 503, 1141, 504, 299, 1142,
	300, 301, 302, 303, 505, 506, 507, 358, 976, 304,
	305, 1143, 306, 307, 309, 0, 0, 219, 308, 310,
	317, 1144, 975, 311, 508, 313, 312, 314, 315, 316,
	509, 1145, 510, 1146, 318, 977, 511, 978, 319, 320,
	321, 979, 322, 323, 0, 0, 324, 325, 326, 327,
	328, 1147, 330, 329, 1148, 331, 512, 980, 332, 333,
	981, 1149, 334, 335, 1150, 1151, 336, 337, 338, 339,
	0, 340, 341, 343, 345, 342, 344, 346, 348, 349,
	347, 982, 350, 351, 354, 355, 353, 983, 352, 1152,
	220, 984, 356, 1153, 513, 357, 514, 359, 360, 1154,
	361, 362, 363, 1155, 1156, 365, 366, 367, 1157, 1158,
	368, 369, 515, 985, 370, 986, 516, 371, 364, 372,
	373, 374, 375, 376, 377, 378, 1159, 379, 380, 517,
	381, 518, 382, 1160, 383, 0, 384, 385, 386, 387,
	388, 389, 390, 519, 391, 392, 1161, 393, 394, 395,
	396, 397, 0, 399, 400, 401, 398, 402, 403, 404,
	405, 1162, 406, 987, 407, 408, 409, 410, 520, 411,
	0, 412, 416, 417, 418, 419, 420, 421, 422, 1163,
	428, 429, 423, 425, 426, 427, 424, 430, 431, 432,
	1164, 433, 413, 414, 434, 435, 988, 436, 437, 521,
	438, 439, 1165, 440, 441, 442, 443, 415, 444, 448,
	449, 445, 446, 447, 522, 1166, 451, 452, 450, 1167,
	453, 454, 455, 456, 457, 283, 458, 1168, 459, 523,
	524, 525, 526, 1169, 466, 1170, 460, 461, 527, 462,
	528, 1171, 463, 464, 465, 0, 467, 468, 1172, 1173,
	469, 470, 471, 473, 474, 472, 476, 1174, 477, 1175,
	475, 478, 479, 480, 529, 530, 531, 1176, 482, 481,
	532, 1177, 1178, 1179, 1180, 483, 484, 533, 485, 486,
	487, 1096, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2864, 0, 221, 222,
	223, 224, 225, 1103, 226, 1104, 1105, 1106, 0, 1107,
	488, 1108, 1109, 1110, 1111, 227, 229, 228, 230, 231,
	489, 490, 232, 491, 235, 233, 234, 492, 1112, 236,
	237, 238, 239, 240, 241, 242, 1113, 1114, 243, 493,
	494, 495, 1115, 244, 496, 1116, 1101, 1117, 245, 246,
	247, 248, 249, 250, 0, 252, 253, 254, 251, 1118,
	255, 0, 256, 257, 258, 1119, 259, 973, 260, 261,
	1120, 1121, 1123, 1122, 1124, 1125, 1126, 262, 263, 264,
	265, 266, 267, 497, 498, 1127, 268, 1128, 270, 269,
	1129, 271, 1130, 1131, 272, 273, 274, 1132, 275, 1133,
	276, 277, 1134, 278, 499, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 500, 501, 1135, 218, 1136, 0,
	0, 0, 0, 289, 290, 291, 502, 292, 293, 0,
	294, 1137, 295, 1138, 1139, 974, 296, 297, 1140, 298,
	503, 1141, 504, 299, 1142, 300, 301, 302, 303, 505,
	506, 507, 358, 976, 304, 305, 1143, 306, 307, 309,
	0, 0, 219, 308, 310, 317, 1144, 975, 311, 508,
	313, 312, 314, 315, 316, 509, 1145, 510, 1146, 318,
	977, 511, 978, 319, 320, 321, 979, 322, 323, 0,
	0, 324, 325, 326, 327, 328, 1147, 330, 329, 1148,
	331, 512, 980, 332, 333, 981, 1149, 334, 335, 1150,
	1151, 336, 337, 338, 339, 0, 340, 341, 343, 345,
	342, 344, 346, 348, 349, 347, 982, 350, 351, 354,
	355, 353, 983, 352, 1152, 220, 984, 356, 1153, 513,
	357, 514, 359, 360, 1154, 361, 362, 363, 1155, 1156,
	365, 366, 367, 1157, 1158, 368, 369, 515, 985, 370,
	986, 516, 371, 364, 372, 373, 374, 375, 376, 377,
	378, 1159, 379, 380, 517, 381, 518, 382, 1160, 383,
	0, 384, 385, 386, 387, 388, 389, 390, 519, 391,
	392, 1161, 393, 394, 395, 396, 397, 0, 399, 400,
	401, 398, 402, 403, 404, 405, 1162, 406, 987, 407,
	408, 409, 410, 520, 411, 0, 412, 416, 417, 418,
	419, 420, 421, 422, 1163, 428, 429, 423, 425, 426,
	427, 424, 430, 431, 432, 1164, 433, 413, 414, 434,
	435, 988, 436, 437, 521, 438, 439, 1165, 440, 441,
	442, 443, 415, 444, 448, 449, 445, 446, 447, 522,
	1166, 451, 452, 450, 1167, 453, 454, 455, 456, 457,
	283, 458, 1168, 459, 523, 524, 525, 526, 1169, 466,
	1170, 460, 461, 527, 462, 528, 1171, 463, 464, 465,
	0, 467, 468, 1172, 1173, 469, 470, 471, 473, 474,
	472, 476, 1174, 477, 1175, 475, 478, 479, 480, 529,
	530, 531, 1176, 482, 481, 532, 1177, 1178, 1179, 1180,
	483, 484, 533, 485, 486, 487, 1096, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2162, 0, 221, 222, 223, 224, 225, 1103, 226,
	1104, 1105, 1106, 0, 1107, 488, 1108, 1109, 1110, 1111,
	227, 229, 228, 230, 231, 489, 490, 232, 491, 235,
	233, 234, 492, 1112, 236, 237, 238, 239, 240, 241,
	242, 1113, 1114, 243, 493, 494, 495, 1115, 244, 496,
	1116, 1101, 1117, 245, 246, 247, 248, 249, 250, 0,
	252, 253, 254, 251, 1118, 255, 0, 256, 257, 258,
	1119, 259, 973, 260, 261, 1120, 1121, 1123, 1122, 1124,
	1125, 1126, 262, 263, 264, 265, 266, 267, 497, 498,
	1127, 268, 1128, 270, 269, 1129, 271, 1130, 1131, 272,
	273, 274, 1132, 275, 1133, 276, 277, 1134, 278, 499,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 500,
	501, 1135, 218, 1136, 0, 0, 0, 0, 289, 290,
	291, 502, 292, 293, 0, 294, 1137, 295, 1138, 1139,
	974, 296, 297, 1140, 298, 503, 1141, 504, 299, 1142,
	300, 301, 302, 303, 505, 506, 507, 358, 976, 304,
	305, 1143, 306, 307, 309, 0, 0, 219, 308, 310,
	317, 1144, 975, 311, 508, 313, 312, 314, 315, 316,
	509, 1145, 510, 1146, 318, 977, 511, 978, 319, 320,
	321, 979, 322, 323, 0, 0, 324, 325, 326, 327,
	328, 1147, 330, 329, 1148, 331, 512, 980, 332, 333,
	981, 1149, 334, 335, 1150, 1151, 336, 337, 338, 339,
	0, 340, 341, 343, 345, 342, 344, 346, 348, 349,
	347, 982, 350, 351, 354, 355, 353, 983, 352, 1152,
	220, 984, 356, 1153, 513, 357, 514, 359, 360, 1154,
	361, 362, 363, 1155, 1156, 365, 366, 367, 1157, 1158,
	368, 369, 515, 985, 370, 986, 516, 371, 364, 372,
	373, 374, 375, 376, 377, 378, 1159, 379, 380, 517,
	381, 518, 382, 1160, 383, 0, 384, 385, 386, 387,
	388, 389, 390, 519, 391, 392, 1161, 393, 394, 395,
	396, 397, 0, 399, 400, 401, 398, 402, 403, 404,
	405, 1162, 406, 987, 407, 408, 409, 410, 520, 411,
	0, 412, 416, 417, 418, 419, 420, 421, 422, 1163,
	428, 429, 423, 425, 426, 427, 424, 430, 431, 432,
	1164, 433, 413, 414, 434, 435, 988, 436, 437, 521,
	438, 439, 1165, 440, 441, 442, 443, 415, 444, 448,
	449, 445, 446, 447, 522, 1166, 451, 452, 450, 1167,
	453, 454, 455, 456, 457, 283, 458, 1168, 459, 523,
	524, 525, 526, 1169, 466, 1170, 460, 461, 527, 462,
	528, 1171, 463, 464, 465, 0, 467, 468, 1172, 1173,
	469, 470, 471, 473, 474, 472, 476, 1174, 477, 1175,
	475, 478, 479, 480, 529, 530, 531, 1176, 482, 481,
	532, 1177, 1178, 1179, 1180, 483, 484, 533, 485, 486,
	487, 1193, 0, 1096, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	221, 222, 223, 224, 225, 1103, 226, 1104, 1105, 1106,
	0, 1107, 488, 1108, 1109, 1110, 1111, 227, 229, 228,
	230, 231, 489, 490, 232, 491, 235, 233, 234, 492,
	1112, 236, 237, 238, 239, 240, 241, 242, 1113, 1114,
	243, 493, 494, 495, 1115, 244, 496, 1116, 1101, 1117,
	245, 246, 247, 248, 249, 250, 0, 252, 253, 254,
	251, 1118, 255, 0, 256, 257, 258, 1119, 259, 973,
	260, 261, 1120, 1121, 1123, 1122, 1124, 1125, 1126, 262,
	263, 264, 265, 266, 267, 497, 498, 1127, 268, 1128,
	270, 269, 1129, 271, 1130, 1131, 272, 273, 274, 1132,
	275, 1133, 276, 277, 1134, 278, 499, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 500, 501, 1135, 218,
	1136, 0, 0, 0, 0, 289, 290, 291, 502, 292,
	293, 0, 294, 1137, 295, 1138, 1139, 974, 296, 297,
	1140, 298, 503, 1141, 504, 299, 1142, 300, 301, 302,
	303, 505, 506, 507, 358, 976, 304, 305, 1143, 306,
	307, 309, 0, 0, 219, 308, 310, 317, 1144, 975,
	311, 508, 313, 312, 314, 315, 316, 509, 1145, 510,
	1146, 318, 977, 511, 978, 319, 320, 321, 979, 322,
	323, 0, 0, 324, 325, 326, 327, 328, 1147, 330,
	329, 1148, 331, 512, 980, 332, 333, 981, 1149, 334,
	335, 1150, 1151, 336, 337, 338, 339, 0, 340, 341,
	343, 345, 342, 344, 346, 348, 349, 347, 982, 350,
	351, 354, 355, 353, 983, 352, 1152, 220, 984, 356,
	1153, 513, 357, 514, 359, 360, 1154, 361, 362, 363,
	1155, 1156, 365, 366, 367, 1157, 1158, 368, 369, 515,
	985, 370, 986, 516, 371, 364, 372, 373, 374, 375,
	376, 377, 378, 1159, 379, 380, 517, 381, 518, 382,
	1160, 383, 0, 384, 385, 386, 387, 388, 389, 390,
	519, 391, 392, 1161, 393, 394, 395, 396, 397, 0,
	399, 400, 401, 398, 402, 403, 404, 405, 1162, 406,
	987, 407, 408, 409, 410, 520, 411, 0, 412, 416,
	417, 418, 419, 420, 421, 422, 1163, 428, 429, 423,
	425, 426, 427, 424, 430, 431, 432, 1164, 433, 413,
	414, 434, 435, 988, 436, 437, 521, 438, 439, 1165,
	440, 441, 442, 443, 415, 444, 448, 449, 445, 446,
	447, 522, 1166, 451, 452, 450, 1167, 453, 454, 455,
	456, 457, 283, 458, 1168, 459, 523, 524, 525, 526,
	1169, 466, 1170, 460, 461, 527, 462, 528, 1171, 463,
	464, 465, 0, 467, 468, 1172, 1173, 469, 470, 471,
	473, 474, 472, 476, 1174, 477, 1175, 475, 478, 479,
	480, 529, 530, 531, 1176, 482, 481, 532, 1177, 1178,
	1179, 1180, 483, 484, 533, 485, 486, 487, 1093, 0,
	1096, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 1103, 226, 1104, 1105, 1106, 0, 1107, 488,
	1108, 1109, 1110, 1111, 227, 229, 228, 230, 231, 489,
	490, 232, 491, 235, 233, 234, 492, 1112, 236, 237,
	238, 239, 240, 241, 242, 1113, 1114, 243, 493, 494,
	495, 1115, 244, 496, 1116, 1101, 1117, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 1118, 255,
	0, 256, 257, 258, 1119, 259, 973, 260, 261, 1120,
	1121, 1123, 1122, 1124, 1125, 1126, 262, 263, 264, 265,
	266, 267, 497, 498, 1127, 268, 1128, 270, 269, 1129,
	271, 1130, 1131, 272, 273, 274, 1132, 275, 1133, 276,
	277, 1134, 278, 499, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 500, 501, 1135, 218, 1136, 0, 0,
	0, 0, 289, 290, 291, 502, 292, 293, 0, 294,
	1137, 295, 1138, 1139, 974, 296, 297, 1140, 298, 503,
	1141, 504, 299, 1142, 300, 301, 302, 303, 505, 506,
	507, 358, 976, 304, 305, 1143, 306, 307, 309, 0,
	0, 219, 308, 310, 317, 1144, 975, 311, 508, 313,
	312, 314, 315, 316, 509, 1145, 510, 1146, 318, 977,
	511, 978, 319, 320, 321, 979, 322, 323, 0, 0,
	324, 325, 326, 327, 328, 1147, 330, 329, 1148, 331,
	512, 980, 332, 333, 981, 1149, 334, 335, 1150, 1151,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 349, 347, 982, 350, 351, 354, 355,
	353, 983, 352, 1152, 220, 984, 356, 1153, 513, 357,
	514, 359, 360, 1154, 361, 362, 363, 1155, 1156, 365,
	366, 367, 1157, 1158, 368, 369, 515, 985, 370, 986,
	516, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	1159, 379, 380, 517, 381, 518, 382, 1160, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 519, 391, 392,
	1161, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 1162, 406, 987, 407, 408,
	409, 410, 520, 411, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 1163, 428, 429, 423, 425, 426, 427,
	424, 430, 431, 432, 1164, 433, 413, 414, 434, 435,
	988, 436, 437, 521, 438, 439, 1165, 440, 441, 442,
	443, 415, 444, 448, 449, 445, 446, 447, 522, 1166,
	451, 452, 450, 1167, 453, 454, 455, 456, 457, 283,
	458, 1168, 459, 523, 524, 525, 526, 1169, 466, 1170,
	460, 461, 527, 462, 528, 1171, 463, 464, 465, 0,
	467, 468, 1172, 1173, 469, 470, 471, 473, 474, 472,
	476, 1174, 477, 1175, 475, 478, 479, 480, 529, 530,
	531, 1176, 482, 481, 532, 1177, 1178, 1179, 1180, 483,
	484, 533, 485, 486, 487, 1096, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 222, 223, 224, 225, 1103, 226, 1104,
	1105, 1106, 0, 1107, 488, 1108, 1109, 1110, 1111, 227,
	229, 228, 230, 231, 489, 490, 232, 491, 235, 233,
	234, 492, 1112, 236, 237, 238, 239, 240, 241, 242,
	1113, 1114, 243, 493, 494, 495, 1115, 244, 496, 1116,
	1101, 1117, 245, 246, 247, 248, 249, 250, 0, 252,
	253, 254, 251, 1118, 255, 0, 256, 257, 258, 1119,
	259, 973, 260, 261, 1120, 1121, 1123, 1122, 1124, 1125,
	1126, 262, 263, 264, 265, 266, 267, 497, 498, 1127,
	268, 1128, 270, 269, 1129, 271, 1130, 1131, 272, 273,
	274, 1132, 275, 1133, 276, 277, 1134, 278, 499, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 500, 501,
	1135, 218, 1136, 0, 0, 0, 0, 289, 290, 291,
	502, 292, 293, 0, 294, 1137, 295, 1138, 1139, 974,
	296, 297, 1140, 298, 503, 1141, 504, 299, 1142, 300,
	301, 302, 303, 505, 506, 507, 358, 976, 304, 305,
	1143, 306, 307, 309, 0, 0, 219, 308, 310, 317,
	1144, 975, 311, 508, 313, 312, 314, 315, 316, 509,
	1145, 510, 1146, 318, 977, 511, 978, 319, 320, 321,
	979, 322, 323, 0, 0, 324, 325, 326, 327, 328,
	1147, 330, 329, 1148, 331, 512, 980, 332, 333, 981,
	1149, 334, 335, 1150, 1151, 336, 337, 338, 339, 0,
	340, 341, 343, 345, 342, 344, 346, 348, 349, 347,
	982, 350, 351, 354, 355, 353, 983, 352, 1152, 220,
	984, 356, 1153, 513, 357, 514, 359, 360, 1154, 361,
	362, 363, 1155, 1156, 365, 366, 367, 1157, 1158, 368,
	369, 515, 985, 370, 986, 516, 371, 364, 372, 373,
	374, 375, 376, 377, 378, 1159, 379, 380, 517, 381,
	518, 382, 1160, 383, 0, 384, 385, 386, 387, 388,
	389, 390, 519, 391, 392, 1161, 393, 394, 395, 396,
	397, 0, 399, 400, 401, 398, 402, 403, 404, 405,
	1162, 406, 987, 407, 408, 409, 410, 520, 411, 0,
	412, 416, 417, 418, 419, 420, 421, 422, 1163, 428,
	429, 423, 425, 426, 427, 424, 430, 431, 432, 1164,
	433, 413, 414, 434, 435, 988, 436, 437, 521, 438,
	439, 1165, 440, 441, 442, 443, 415, 444, 448, 449,
	445, 446, 447, 522, 1166, 451, 452, 450, 1167, 453,
	454, 455, 456, 457, 283, 458, 1168, 459, 523, 524,
	525, 526, 1169, 466, 1170, 460, 461, 527, 462, 528,
	1171, 463, 464, 465, 0, 467, 468, 1172, 1173, 469,
	470, 471, 473, 474, 472, 476, 1174, 477, 1175, 475,
	478, 479, 480, 529, 530, 531, 1176, 482, 481, 532,
	1177, 1178, 1179, 1180, 483, 484, 533, 485, 486, 487,
	2137, 0, 913, 871, 872, 873, 869, 870, 882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	222, 223, 224, 225, 2134, 226, 0, 0, 0, 0,
	0, 964, 887, 0, 0, 0, 227, 229, 228, 230,
	231, 489, 928, 907, 939, 235, 897, 938, 937, 0,
	236, 237, 899, 898, 240, 241, 242, 889, 963, 243,
	1000, 1001, 495, 0, 244, 970, 0, 951, 0, 245,
	246, 247, 248, 249, 250, 0, 252, 253, 254, 251,
	0, 255, 0, 256, 257, 258, 0, 259, 973, 260,
	261, 954, 952, 953, 960, 956, 955, 959, 262, 263,
	264, 265, 942, 267, 935, 934, 860, 268, 0, 270,
	269, 0, 271, 2135, 0, 272, 933, 274, 0, 275,
	0, 276, 277, 0, 278, 866, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 991, 992, 878, 218, 0,
	0, 0, 0, 0, 289, 290, 291, 932, 930, 931,
	0, 294, 0, 295, 0, 0, 974, 296, 297, 0,
	298, 998, 0, 888, 299, 0, 300, 301, 302, 303,
	965, 966, 969, 358, 976, 304, 305, 0, 306, 307,
	909, 0, 0, 219, 308, 310, 317, 0, 975, 311,
	921, 912, 923, 925, 926, 927, 922, 0, 914, 0,
	318, 977, 967, 978, 319, 320, 321, 979, 947, 948,
	0, 0, 324, 325, 326, 327, 328, 0, 330, 329,
	0, 331, 999, 980, 332, 333, 981, 0, 334, 335,
	958, 957, 336, 337, 338, 339, 0, 340, 341, 343,
	345, 342, 344, 346, 348, 901, 347, 982, 350, 351,
	354, 355, 353, 983, 352, 857, 220, 984, 356, 879,
	968, 357, 936, 359, 360, 0, 910, 362, 911, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 515, 985,
	370, 986, 993, 371, 364, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 994, 381, 518, 382, 0,
	383, 0, 384, 385, 386, 387, 388, 389, 390, 929,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 399,
	400, 401, 398, 402, 403, 404, 405, 0, 406, 987,
	407, 408, 409, 410, 867, 411, 0, 412, 416, 417,
	418, 419, 420, 421, 422, 0, 428, 429, 902, 903,
	905, 906, 424, 430, 431, 432, 961, 433, 413, 414,
	434, 435, 988, 436, 437, 924, 904, 439, 0, 440,
	441, 442, 443, 415, 444, 448, 972, 445, 446, 447,
	995, 0, 451, 452, 450, 0, 453, 454, 455, 456,
	457, 283, 900, 0, 459, 943, 944, 945, 946, 0,
	466, 0, 460, 461, 996, 462, 997, 877, 463, 464,
	465, 0, 467, 468, 0, 861, 469, 470, 471, 473,
	474, 472, 476, 962, 477, 0, 908, 478, 479, 480,
	529, 940, 990, 2133, 482, 481, 532, 0, 0, 0,
	0, 483, 484, 533, 485, 486, 487, 858, 0, 0,
	0, 0, 0, 856, 0, 0, 0, 0, 0, 0,
	854, 855, 2136, 0, 0, 0, 0, 0, 0, 883,
	2132, 0, 847, 881, 913, 871, 872, 873, 869, 870,
	882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 964, 887, 0, 0, 0, 227, 229,
	228, 230, 231, 489, 928, 907, 939, 235, 897, 938,
	937, 0, 236, 237, 899, 898, 240, 241, 242, 889,
	963, 243, 1000, 1001, 495, 0, 244, 970, 0, 951,
	0, 245, 246, 247, 248, 249, 250, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	973, 260, 261, 954, 952, 953, 960, 956, 955, 959,
	262, 263, 264, 265, 942, 267, 935, 934, 860, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 933, 274,
	0, 275, 0, 276, 277, 0, 278, 866, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 991, 992, 878,
	218, 0, 0, 0, 0, 0, 289, 290, 291, 932,
	930, 931, 0, 294, 0, 295, 0, 0, 974, 296,
	297, 0, 298, 998, 0, 888, 299, 0, 300, 301,
	302, 303, 965, 966, 969, 358, 976, 304, 305, 0,
	306, 307, 909, 0, 0, 219, 308, 310, 317, 0,
	975, 311, 921, 912, 923, 925, 926, 927, 922, 0,
	914, 0, 318, 977, 967, 978, 319, 320, 321, 979,
	947, 948, 0, 0, 324, 325, 326, 327, 328, 0,
	330, 329, 0, 331, 999, 980, 332, 333, 981, 0,
	334, 335, 958, 957, 336, 337, 338, 339, 0, 340,
	341, 343, 345, 342, 344, 346, 348, 901, 347, 982,
	350, 351, 354, 355, 353, 983, 352, 857, 220, 984,
	356, 879, 968, 357, 936, 359, 360, 0, 910, 362,
	911, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	515, 985, 370, 986, 993, 371, 364, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 994, 381, 518,
	382, 0, 383, 0, 384, 385, 386, 387, 388, 389,
	390, 929, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 399, 400, 401, 398, 402, 403, 404, 405, 0,
	406, 987, 407, 408, 409, 410, 867, 411, 0, 412,
	416, 417, 418, 419, 420, 421, 422, 184, 428, 429,
	902, 903, 905, 906, 424, 430, 431, 432, 961, 433,
	413, 414, 434, 435, 988, 436, 437, 924, 904, 439,
	0, 440, 441, 442, 443, 415, 444, 448, 972, 445,
	446, 447, 995, 0, 451, 452, 450, 186, 453, 454,
	455, 456, 457, 283, 900, 0, 459, 943, 944, 945,
	946, 0, 466, 0, 460, 461, 996, 462, 997, 877,
	463, 464, 465, 0, 467, 468, 0, 861, 469, 470,
	471, 473, 474, 472, 476, 962, 477, 0, 908, 478,
	479, 480, 1354, 940, 990, 0, 482, 481, 532, 0,
	0, 0, 178, 483, 484, 533, 485, 486, 487, 858,
	179, 0, 0, 0, 0, 856, 0, 0, 0, 0,
	0, 0, 854, 855, 913, 871, 872, 873, 869, 870,
	882, 1565, 1563, 0, 0, 881, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 964, 887, 0, 0, 0, 227, 229,
	228, 230, 231, 489, 928, 907, 939, 235, 897, 938,
	937, 0, 236, 237, 899, 898, 240, 241, 242, 889,
	963, 243, 1000, 1001, 495, 0, 244, 970, 0, 951,
	0, 245, 246, 247, 248, 249, 250, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	973, 260, 261, 954, 952, 953, 960, 956, 955, 959,
	262, 263, 264, 265, 942, 267, 935, 934, 860, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 933, 274,
	0, 275, 0, 276, 277, 0, 278, 866, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 991, 992, 878,
	218, 0, 0, 0, 0, 0, 289, 290, 291, 932,
	930, 931, 0, 294, 0, 295, 0, 0, 974, 296,
	297, 0, 298, 998, 0, 888, 299, 0, 300, 301,
	302, 303, 965, 966, 969, 358, 976, 304, 305, 0,
	306, 307, 909, 0, 0, 219, 308, 310, 317, 0,
	975, 311, 921, 912, 923, 925, 926, 927, 922, 0,
	914, 0, 318, 977, 967, 978, 319, 320, 321, 979,
	947, 948, 0, 0, 324, 325, 326, 327, 328, 0,
	330, 329, 0, 331, 999, 980, 332, 333, 981, 0,
	334, 335, 958, 957, 336, 337, 338, 339, 0, 340,
	341, 343, 345, 342, 344, 346, 348, 901, 347, 982,
	350, 351, 354, 355, 353, 983, 352, 857, 220, 984,
	356, 879, 968, 357, 936, 359, 360, 0, 910, 362,
	911, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	515, 985, 370, 986, 993, 371, 364, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 994, 381, 518,
	382, 0, 383, 0, 384, 385, 386, 387, 388, 389,
	390, 929, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 399, 400, 401, 398, 402, 403, 404, 405, 0,
	406, 987, 407, 408, 409, 410, 867, 411, 0, 412,
	416, 417, 418, 419, 420, 421, 422, 184, 428, 429,
	902, 903, 905, 906, 424, 430, 431, 432, 961, 433,
	413, 414, 434, 435, 988, 436, 437, 924, 904, 439,
	0, 440, 441, 442, 443, 415, 444, 448, 972, 445,
	446, 447, 995, 0, 451, 452, 450, 186, 453, 454,
	455, 456, 457, 283, 900, 0, 459, 943, 944, 945,
	946, 0, 466, 0, 460, 461, 996, 462, 997, 877,
	463, 464, 465, 0, 467, 468, 0, 861, 469, 470,
	471, 473, 474, 472, 476, 962, 477, 0, 908, 478,
	479, 480, 1354, 940, 990, 0, 482, 481, 532, 0,
	0, 0, 178, 483, 484, 533, 485, 486, 487, 858,
	179, 0, 0, 0, 0, 856, 0, 0, 0, 0,
	0, 0, 854, 855, 913, 871, 872, 873, 869, 870,
	882, 1565, 2610, 0, 0, 881, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 964, 887, 0, 0, 0, 227, 229,
	228, 230, 231, 489, 928, 907, 939, 235, 897, 938,
	937, 0, 236, 237, 899, 898, 240, 241, 242, 889,
	963, 243, 1000, 1001, 495, 0, 244, 970, 0, 951,
	0, 245, 246, 247, 248, 249, 250, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	973, 260, 261, 954, 952, 953, 960, 956, 955, 959,
	262, 263, 264, 265, 942, 267, 935, 934, 860, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 933, 274,
	0, 275, 0, 276, 277, 0, 278, 866, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 991, 992, 878,
	218, 0, 0, 0, 0, 0, 289, 290, 291, 932,
	930, 931, 0, 294, 0, 295, 0, 0, 974, 296,
	297, 0, 298, 998, 0, 888, 299, 0, 300, 301,
	302, 303, 965, 966, 969, 358, 976, 304, 305, 0,
	306, 307, 909, 0, 0, 219, 308, 310, 317, 0,
	975, 311, 921, 912, 923, 925, 926, 927, 922, 0,
	914, 0, 318, 977, 967, 978, 319, 320, 321, 979,
	947, 948, 0, 0, 324, 325, 326, 327, 328, 0,
	330, 329, 0, 331, 999, 980, 332, 333, 981, 0,
	334, 335, 958, 957, 336, 337, 338, 339, 0, 340,
	341, 343, 345, 342, 344, 346, 348, 901, 347, 982,
	350, 351, 354, 355, 353, 983, 352, 857, 220, 984,
	356, 879, 968, 357, 936, 359, 360, 0, 910, 362,
	911, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	515, 985, 370, 986, 993, 371, 364, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 994, 381, 518,
	382, 0, 383, 0, 384, 385, 386, 387, 388, 389,
	390, 929, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 399, 400, 401, 398, 402, 403, 404, 405, 0,
	406, 987, 407, 408, 409, 410, 867, 411, 0, 412,
	416, 417, 418, 419, 420, 421, 422, 184, 428, 429,
	902, 903, 905, 906, 424, 430, 431, 432, 961, 433,
	413, 414, 434, 435, 988, 436, 437, 924, 904, 439,
	0, 440, 441, 442, 443, 415, 444, 448, 972, 445,
	446, 447, 995, 0, 451, 452, 450, 186, 453, 454,
	455, 456, 457, 283, 900, 0, 459, 943, 944, 945,
	946, 0, 466, 0, 460, 461, 996, 462, 997, 877,
	463, 464, 465, 0, 467, 468, 0, 861, 469, 470,
	471, 473, 474, 472, 476, 962, 477, 0, 908, 478,
	479, 480, 1354, 940, 990, 0, 482, 481, 532, 0,
	0, 0, 178, 483, 484, 533, 485, 486, 487, 858,
	179, 0, 0, 0, 0, 856, 0, 0, 0, 0,
	0, 0, 854, 855, 913, 871, 872, 873, 869, 870,
	882, 1565, 1563, 0, 0, 881, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 964, 887, 0, 0, 0, 227, 229,
	228, 230, 231, 489, 928, 907, 939, 235, 897, 938,
	937, 2231, 236, 237, 899, 898, 240, 241, 242, 889,
	963, 243, 1000, 1001, 495, 0, 244, 970, 0, 951,
	0, 245, 246, 247, 248, 249, 250, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	973, 260, 261, 954, 952, 953, 960, 956, 955, 959,
	262, 263, 264, 265, 942, 267, 935, 934, 860, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 933, 274,
	0, 275, 0, 276, 277, 0, 278, 866, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 991, 992, 878,
	218, 0, 0, 0, 0, 0, 289, 290, 291, 932,
	930, 931, 0, 294, 0, 295, 0, 2236, 974, 296,
	297, 0, 298, 998, 0, 888, 299, 0, 300, 301,
	302, 303, 965, 966, 969, 358, 976, 304, 305, 0,
	306, 307, 909, 0, 0, 219, 308, 310, 317, 0,
	975, 311, 921, 912, 923, 925, 926, 927, 922, 0,
	914, 0, 318, 977, 967, 978, 319, 320, 321, 979,
	947, 948, 0, 0, 324, 325, 326, 327, 328, 0,
	330, 329, 2232, 331, 999, 980, 332, 333, 981, 0,
	334, 335, 958, 957, 336, 337, 338, 339, 0, 340,
	341, 343, 345, 342, 344, 346, 348, 901, 347, 982,
	350, 351, 354, 355, 353, 983, 352, 857, 220, 984,
	356, 879, 968, 357, 936, 359, 360, 0, 910, 362,
	911, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	515, 985, 370, 986, 993, 371, 364, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 994, 381, 518,
	382, 0, 383, 0, 384, 385, 386, 387, 388, 389,
	390, 929, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 399, 400, 401, 398, 402, 403, 404, 405, 0,
	406, 987, 407, 408, 409, 410, 867, 411, 0, 412,
	416, 417, 418, 419, 420, 421, 422, 0, 428, 429,
	902, 903, 905, 906, 424, 430, 431, 432, 961, 433,
	413, 414, 434, 435, 988, 436, 437, 924, 904, 439,
	0, 440, 441, 442, 443, 415, 444, 448, 972, 445,
	446, 447, 995, 0, 451, 452, 450, 0, 453, 454,
	455, 456, 457, 283, 900, 0, 459, 943, 944, 945,
	946, 0, 466, 2233, 460, 461, 996, 462, 997, 877,
	463, 464, 465, 0, 467, 468, 0, 861, 469, 470,
	471, 473, 474, 472, 476, 962, 477, 0, 908, 478,
	479, 480, 529, 940, 990, 0, 482, 481, 532, 0,
	0, 0, 0, 483, 484, 533, 485, 486, 487, 858,
	0, 0, 0, 0, 0, 856, 0, 0, 0, 0,
	0, 0, 854, 855, 0, 0, 0, 0, 0, 0,
	0, 883, 0, 0, 2190, 881, 913, 871, 872, 873,
	869, 870, 882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 964, 887, 0, 0, 0,
	227, 229, 228, 230, 231, 489, 928, 907, 939, 235,
	897, 938, 937, 0, 236, 237, 899, 898, 240, 241,
	242, 889, 963, 243, 1000, 1001, 495, 0, 244, 970,
	0, 951, 0, 245, 246, 247, 248, 249, 250, 0,
	252, 253, 254, 251, 0, 255, 0, 256, 257, 258,
	0, 259, 973, 260, 261, 954, 952, 953, 960, 956,
	955, 959, 262, 263, 264, 265, 942, 267, 935, 934,
	860, 268, 0, 270, 269, 0, 271, 0, 0, 272,
	933, 274, 0, 275, 0, 276, 277, 0, 278, 866,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 991,
	992, 878, 218, 0, 0, 0, 0, 0, 289, 290,
	291, 932, 930, 931, 0, 294, 0, 295, 0, 0,
	974, 296, 297, 0, 298, 998, 0, 888, 299, 0,
	300, 301, 302, 303, 965, 966, 969, 358, 976, 304,
	305, 0, 306, 307, 909, 0, 0, 219, 308, 310,
	317, 0, 975, 311, 921, 912, 923, 925, 926, 927,
	922, 0, 914, 0, 318, 977, 967, 978, 319, 320,
	321, 979, 947, 948, 0, 0, 324, 325, 326, 327,
	328, 0, 330, 329, 0, 331, 999, 980, 332, 333,
	981, 0, 334, 335, 958, 957, 336, 337, 338, 339,
	0, 340, 341, 343, 345, 342, 344, 346, 348, 901,
	347, 982, 350, 351, 354, 355, 353, 983, 352, 857,
	220, 984, 356, 879, 968, 357, 936, 359, 360, 0,
	910, 362, 911, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 515, 985, 370, 986, 993, 371, 364, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 994,
	381, 518, 382, 0, 383, 0, 384, 385, 386, 387,
	388, 389, 390, 929, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 399, 400, 401, 398, 402, 403, 404,
	405, 0, 406, 987, 407, 408, 409, 410, 867, 411,
	0, 412, 416, 417, 418, 419, 420, 421, 422, 0,
	428, 429, 902, 903, 905, 906, 424, 430, 431, 432,
	961, 433, 413, 414, 434, 435, 988, 436, 437, 924,
	904, 439, 0, 440, 441, 442, 443, 415, 444, 448,
	972, 445, 446, 447, 995, 0, 451, 452, 450, 0,
	453, 454, 455, 456, 457, 283, 900, 0, 459, 943,
	944, 945, 946, 0, 466, 0, 460, 461, 996, 462,
	997, 877, 463, 464, 465, 0, 467, 468, 0, 861,
	469, 470, 471, 473, 474, 472, 476, 962, 477, 0,
	908, 478, 479, 480, 529, 940, 990, 0, 482, 481,
	532, 0, 0, 0, 0, 483, 484, 533, 485, 486,
	487, 858, 0, 0, 0, 0, 0, 856, 0, 0,
	0, 0, 0, 0, 854, 855, 0, 0, 0, 0,
	0, 0, 0, 883, 2188, 0, 2187, 881, 913, 871,
	872, 873, 869, 870, 882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 964, 887, 0,
	0, 0, 227, 229, 228, 230, 231, 489, 928, 907,
	939, 235, 897, 938, 937, 0, 236, 237, 899, 898,
	240, 241, 242, 889, 963, 243, 1000, 1001, 495, 0,
	244, 970, 0, 951, 0, 245, 246, 247, 248, 249,
	250, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 973, 260, 261, 954, 952, 953,
	960, 956, 955, 959, 262, 263, 264, 265, 942, 267,
	935, 934, 860, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 933, 274, 0, 275, 0, 276, 277, 0,
	278, 866, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 991, 992, 878, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 932, 930, 931, 0, 294, 0, 295,
	0, 0, 974, 296, 297, 0, 298, 998, 0, 888,
	299, 0, 300, 301, 302, 303, 965, 966, 969, 358,
	976, 304, 305, 0, 306, 307, 909, 0, 0, 219,
	308, 310, 317, 0, 975, 311, 921, 912, 923, 925,
	926, 927, 922, 0, 914, 0, 318, 977, 967, 978,
	319, 320, 321, 979, 947, 948, 0, 0, 324, 325,
	326, 327, 328, 0, 330, 329, 0, 331, 999, 980,
	332, 333, 981, 0, 334, 335, 958, 957, 336, 337,
	338, 339, 0, 340, 341, 343, 345, 342, 344, 346,
	348, 901, 347, 982, 350, 351, 354, 355, 353, 983,
	352, 857, 220, 984, 356, 879, 968, 357, 936, 359,
	360, 0, 910, 362, 911, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 515, 985, 370, 986, 993, 371,
	364, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 994, 381, 518, 382, 0, 383, 0, 384, 385,
	386, 387, 388, 389, 390, 929, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 399, 400, 401, 398, 402,
	403, 404, 405, 0, 406, 987, 407, 408, 409, 410,
	867, 411, 0, 412, 416, 417, 418, 419, 420, 421,
	422, 0, 428, 429, 902, 903, 905, 906, 424, 430,
	431, 432, 961, 433, 413, 414, 434, 435, 988, 436,
	437, 924, 904, 439, 0, 440, 441, 442, 443, 415,
	444, 448, 972, 445, 446, 447, 995, 0, 451, 452,
	450, 0, 453, 454, 455, 456, 457, 283, 900, 0,
	459, 943, 944, 945, 946, 0, 466, 0, 460, 461,
	996, 462, 997, 877, 463, 464, 465, 0, 467, 468,
	0, 861, 469, 470, 471, 473, 474, 472, 476, 962,
	477, 0, 908, 478, 479, 480, 529, 940, 990, 0,
	482, 481, 532, 0, 0, 0, 0, 483, 484, 533,
	485, 486, 487, 858, 0, 0, 0, 0, 0, 856,
	0, 0, 0, 0, 0, 0, 854, 855, 0, 0,
	0, 0, 0, 0, 0, 883, 2185, 0, 2184, 881,
	913, 871, 872, 873, 869, 870, 882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 964,
	887, 0, 0, 0, 227, 229, 228, 230, 231, 489,
	928, 907, 939, 235, 897, 938, 937, 0, 236, 237,
	899, 898, 240, 241, 242, 889, 963, 243, 1000, 1001,
	495, 0, 244, 970, 0, 951, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 973, 260, 261, 954,
	952, 953, 960, 956, 955, 959, 262, 263, 264, 265,
	942, 267, 935, 934, 860, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 933, 274, 0, 275, 0, 276,
	277, 0, 278, 866, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 991, 992, 878, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 932, 930, 931, 0, 294,
	0, 295, 0, 0, 974, 296, 297, 0, 298, 998,
	0, 888, 299, 0, 300, 301, 302, 303, 965, 966,
	969, 358, 976, 304, 305, 0, 306, 307, 909, 0,
	0, 219, 308, 310, 317, 0, 975, 311, 921, 912,
	923, 925, 926, 927, 922, 0, 914, 0, 318, 977,
	967, 978, 319, 320, 321, 979, 947, 948, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	999, 980, 332, 333, 981, 0, 334, 335, 958, 957,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 901, 347, 982, 350, 351, 354, 355,
	353, 983, 352, 857, 220, 984, 356, 879, 968, 357,
	936, 359, 360, 0, 910, 362, 911, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 985, 370, 986,
	993, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 994, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 929, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 987, 407, 408,
	409, 410, 867, 411, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 0, 428, 429, 902, 903, 905, 906,
	424, 430, 431, 432, 961, 433, 413, 414, 434, 435,
	988, 436, 437, 924, 904, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 972, 445, 446, 447, 995, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	900, 0, 459, 943, 944, 945, 946, 0, 466, 0,
	460, 461, 996, 462, 997, 877, 463, 464, 465, 0,
	467, 468, 0, 861, 469, 470, 471, 473, 474, 472,
	476, 962, 477, 0, 908, 478, 479, 480, 529, 940,
	990, 0, 482, 481, 532, 0, 0, 0, 0, 483,
	484, 533, 485, 486, 487, 858, 0, 0, 0, 0,
	0, 856, 0, 0, 0, 0, 0, 0, 854, 855,
	0, 0, 0, 0, 0, 0, 0, 883, 2182, 0,
	2181, 881, 913, 871, 872, 873, 869, 870, 882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	222, 223, 224, 225, 0, 226, 0, 0, 0, 0,
	0, 964, 887, 0, 0, 0, 227, 229, 228, 230,
	231, 489, 928, 907, 939, 235, 897, 938, 937, 0,
	236, 237, 899, 898, 240, 241, 242, 889, 963, 243,
	1000, 1001, 495, 0, 244, 970, 0, 951, 0, 245,
	246, 247, 248, 249, 250, 0, 252, 253, 254, 251,
	0, 255, 0, 256, 257, 258, 0, 259, 973, 260,
	261, 954, 952, 953, 960, 956, 955, 959, 262, 263,
	264, 265, 942, 267, 935, 934, 860, 268, 0, 270,
	269, 0, 271, 0, 0, 272, 933, 274, 0, 275,
	0, 276, 277, 0, 278, 866, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 991, 992, 878, 218, 0,
	0, 0, 0, 0, 289, 290, 291, 932, 930, 931,
	0, 294, 0, 295, 0, 0, 974, 296, 297, 0,
	298, 998, 0, 888, 299, 0, 300, 301, 302, 303,
	965, 966, 969, 358, 976, 304, 305, 0, 306, 307,
	909, 0, 0, 219, 308, 310, 317, 0, 975, 311,
	921, 912, 923, 925, 926, 927, 922, 0, 914, 0,
	318, 977, 967, 978, 319, 320, 321, 979, 947, 948,
	0, 0, 324, 325, 326, 327, 328, 0, 330, 329,
	0, 331, 999, 980, 332, 333, 981, 0, 334, 335,
	958, 957, 336, 337, 338, 339, 0, 340, 341, 343,
	345, 342, 344, 346, 348, 901, 347, 982, 350, 351,
	354, 355, 353, 983, 352, 857, 220, 984, 356, 879,
	968, 357, 936, 359, 360, 0, 910, 362, 911, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 515, 985,
	370, 986, 993, 371, 364, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 994, 381, 518, 382, 0,
	383, 0, 384, 385, 386, 387, 388, 389, 390, 929,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 399,
	400, 401, 398, 402, 403, 404, 405, 0, 406, 987,
	407, 408, 409, 410, 867, 411, 0, 412, 416, 417,
	418, 419, 420, 421, 422, 0, 428, 429, 902, 903,
	905, 906, 424, 430, 431, 432, 961, 433, 413, 414,
	434, 435, 988, 436, 437, 924, 904, 439, 0, 440,
	441, 442, 443, 415, 444, 448, 972, 445, 446, 447,
	995, 0, 451, 452, 450, 0, 453, 454, 455, 456,
	457, 283, 900, 0, 459, 943, 944, 945, 946, 0,
	466, 0, 460, 461, 996, 462, 997, 877, 463, 464,
	465, 0, 467, 468, 0, 861, 469, 470, 471, 473,
	474, 472, 476, 962, 477, 0, 908, 478, 479, 480,
	529, 940, 990, 0, 482, 481, 532, 0, 0, 0,
	0, 483, 484, 533, 485, 486, 487, 858, 0, 0,
	0, 0, 0, 856, 0, 0, 0, 0, 0, 0,
	854, 855, 0, 0, 0, 0, 0, 0, 0, 883,
	2179, 0, 1424, 881, 913, 871, 872, 873, 869, 870,
	882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 964, 887, 0, 0, 0, 227, 229,
	228, 230, 231, 489, 928, 907, 939, 235, 897, 938,
	937, 0, 236, 237, 899, 898, 240, 241, 242, 889,
	963, 243, 1000, 1001, 495, 0, 244, 970, 0, 951,
	0, 245, 246, 247, 248, 249, 250, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	973, 260, 261, 954, 952, 953, 960, 956, 955, 959,
	262, 263, 264, 265, 942, 267, 935, 934, 860, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 933, 274,
	0, 275, 0, 276, 277, 0, 278, 866, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 991, 992, 878,
	218, 0, 0, 0, 0, 0, 289, 290, 291, 932,
	930, 931, 0, 294, 0, 295, 0, 0, 974, 296,
	297, 0, 298, 998, 0, 888, 299, 0, 300, 301,
	302, 303, 965, 966, 969, 358, 976, 304, 305, 0,
	306, 307, 909, 0, 0, 219, 308, 310, 317, 0,
	975, 311, 921, 912, 923, 925, 926, 927, 922, 0,
	914, 0, 318, 977, 967, 978, 319, 320, 321, 979,
	947, 948, 0, 0, 324, 325, 326, 327, 328, 0,
	330, 329, 0, 331, 999, 980, 332, 333, 981, 0,
	334, 335, 958, 957, 336, 337, 338, 339, 0, 340,
	341, 343, 345, 342, 344, 346, 348, 901, 347, 982,
	350, 351, 354, 355, 353, 983, 352, 857, 220, 984,
	356, 879, 968, 357, 936, 359, 360, 0, 910, 362,
	911, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	515, 985, 370, 986, 993, 371, 364, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 994, 381, 518,
	382, 0, 383, 0, 384, 385, 386, 387, 388, 389,
	390, 929, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 399, 400, 401, 398, 402, 403, 404, 405, 0,
	406, 987, 407, 408, 409, 410, 867, 411, 0, 412,
	416, 417, 418, 419, 420, 421, 422, 0, 428, 429,
	902, 903, 905, 906, 424, 430, 431, 432, 961, 433,
	413, 414, 434, 435, 988, 436, 437, 924, 904, 439,
	0, 440, 441, 442, 443, 415, 444, 448, 972, 445,
	446, 447, 995, 0, 451, 452, 450, 0, 453, 454,
	455, 456, 457, 283, 900, 0, 459, 943, 944, 945,
	946, 0, 466, 0, 460, 461, 996, 462, 997, 877,
	463, 464, 465, 0, 467, 468, 0, 861, 469, 470,
	471, 473, 474, 472, 476, 962, 477, 0, 908, 478,
	479, 480, 529, 940, 990, 0, 482, 481, 532, 1423,
	0, 0, 0, 483, 484, 533, 485, 486, 487, 858,
	0, 0, 0, 0, 0, 856, 0, 0, 0, 0,
	0, 0, 854, 855, 0, 0, 0, 0, 0, 0,
	0, 883, 0, 0, 850, 881, 913, 871, 872, 873,
	869, 870, 882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 964, 887, 0, 0, 0,
	227, 229, 228, 230, 231, 489, 928, 907, 939, 235,
	897, 938, 937, 0, 236, 237, 899, 898, 240, 241,
	242, 889, 963, 243, 1000, 1001, 495, 0, 244, 970,
	0, 951, 0, 245, 246, 247, 248, 249, 250, 0,
	252, 253, 254, 251, 0, 255, 0, 256, 257, 258,
	0, 259, 973, 260, 261, 954, 952, 953, 960, 956,
	955, 959, 262, 263, 264, 265, 942, 267, 935, 934,
	860, 268, 0, 270, 269, 0, 271, 0, 0, 272,
	933, 274, 0, 275, 0, 276, 277, 0, 278, 866,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 991,
	992, 878, 218, 0, 0, 0, 0, 0, 289, 290,
	291, 932, 930, 931, 0, 294, 0, 295, 0, 0,
	974, 296, 297, 0, 298, 998, 0, 888, 299, 0,
	300, 301, 302, 303, 965, 966, 969, 358, 976, 304,
	305, 0, 306, 307, 909, 0, 0, 219, 308, 310,
	317, 0, 975, 311, 921, 912, 923, 925, 926, 927,
	922, 0, 914, 0, 318, 977, 967, 978, 319, 320,
	321, 979, 947, 948, 0, 0, 324, 325, 326, 327,
	328, 0, 330, 329, 0, 331, 999, 980, 332, 333,
	981, 0, 334, 335, 958, 957, 336, 337, 338, 339,
	0, 340, 341, 343, 345, 342, 344, 346, 348, 901,
	347, 982, 350, 351, 354, 355, 353, 983, 352, 857,
	220, 984, 356, 879, 968, 357, 936, 359, 360, 0,
	910, 362, 911, 862, 0, 365, 366, 367, 0, 0,
	368, 369, 515, 985, 370, 986, 993, 371, 364, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 994,
	381, 518, 382, 0, 383, 0, 384, 385, 386, 387,
	388, 389, 390, 929, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 399, 400, 401, 398, 402, 403, 404,
	405, 0, 406, 987, 407, 408, 409, 410, 867, 411,
	0, 412, 416, 417, 418, 419, 420, 421, 422, 0,
	428, 429, 902, 903, 905, 906, 424, 430, 431, 432,
	961, 433, 413, 414, 434, 435, 988, 436, 437, 924,
	904, 439, 0, 440, 441, 442, 443, 415, 444, 448,
	972, 445, 446, 447, 995, 0, 451, 452, 450, 0,
	453, 454, 455, 456, 457, 283, 900, 0, 459, 943,
	944, 945, 946, 0, 466, 0, 460, 461, 996, 462,
	997, 877, 463, 464, 465, 0, 467, 468, 0, 861,
	469, 470, 471, 473, 474, 472, 476, 962, 477, 0,
	908, 478, 479, 480, 529, 940, 990, 0, 482, 481,
	532, 0, 0, 0, 0, 483, 484, 533, 485, 486,
	487, 858, 0, 0, 0, 0, 0, 856, 0, 0,
	0, 0, 0, 0, 854, 855, 913, 871, 872, 873,
	869, 870, 882, 883, 0, 0, 0, 881, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 964, 887, 0, 0, 0,
	227, 229, 228, 230, 231, 489, 928, 907, 939, 235,
	897, 938, 937, 0, 236, 237, 899, 898, 240, 241,
	242, 889, 963, 243, 1000, 1001, 495, 0, 244, 970,
	0, 951, 0, 245, 246, 247, 248, 249, 250, 0,
	252, 253, 254, 251, 0, 255, 0, 256, 3638, 258,
	0, 259, 973, 260, 261, 954, 952, 953, 960, 956,
	955, 959, 262, 263, 264, 265, 942, 267, 935, 934,
	860, 268, 0, 270, 269, 0, 271, 0, 0, 272,
	933, 274, 0, 275, 0, 276, 277, 0, 278, 866,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 991,
	992, 878, 218, 0, 0, 0, 0, 0, 289, 290,
	291, 932, 930, 931, 0, 294, 0, 295, 0, 0,
	974, 296, 297, 0, 298, 998, 0, 888, 299, 0,
	300, 301, 302, 303, 965, 966, 969, 358, 976, 304,
	305, 0, 306, 307, 909, 0, 0, 219, 308, 310,
	317, 0, 975, 311, 921, 912, 923, 925, 926, 927,
	922, 0, 914, 0, 318, 977, 967, 978, 319, 320,
	321, 979, 947, 948, 0, 0, 324, 325, 326, 327,
	328, 0, 330, 329, 0, 331, 999, 980, 332, 333,
	981, 0, 334, 335, 958, 957, 336, 337, 338, 339,
	0, 340, 341, 343, 345, 342, 344, 346, 348, 901,
	347, 982, 350, 351, 354, 355, 353, 983, 352, 857,
	220, 984, 356, 879, 968, 357, 936, 359, 360, 0,
	910, 362, 911, 862, 0, 365, 366, 367, 0, 0,
	368, 369, 515, 985, 370, 986, 993, 371, 364, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 994,
	381, 518, 382, 0, 383, 0, 384, 385, 386, 387,
	388, 389, 390, 929, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 399, 400, 401, 398, 402, 403, 404,
	405, 0, 406, 987, 407, 408, 409, 410, 867, 411,
	0, 412, 416, 417, 418, 419, 420, 421, 422, 0,
	428, 429, 902, 903, 905, 906, 424, 430, 431, 432,
	961, 433, 413, 414, 434, 435, 988, 436, 437, 924,
	904, 439, 0, 440, 441, 442, 443, 415, 444, 448,
	972, 445, 446, 447, 995, 0, 451, 452, 450, 0,
	453, 454, 455, 456, 457, 283, 900, 0, 459, 943,
	944, 945, 946, 0, 466, 0, 460, 461, 996, 462,
	997, 877, 463, 464, 465, 0, 467, 468, 0, 861,
	469, 470, 471, 473, 474, 472, 476, 962, 477, 0,
	908, 478, 479, 480, 529, 940, 990, 0, 482, 481,
	532, 0, 0, 0, 0, 483, 484, 533, 485, 486,
	487, 858, 0, 0, 0, 0, 0, 856, 0, 0,
	0, 0, 0, 0, 854, 855, 913, 871, 872, 873,
	869, 870, 882, 883, 0, 0, 0, 881, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 964, 887, 0, 0, 0,
	227, 229, 228, 230, 231, 489, 928, 907, 939, 235,
	897, 938, 937, 0, 236, 237, 899, 898, 240, 241,
	242, 889, 963, 243, 1000, 1001, 495, 0, 244, 970,
	0, 951, 0, 245, 246, 247, 248, 249, 250, 0,
	252, 253, 254, 251, 0, 255, 0, 256, 3474, 258,
	0, 259, 973, 260, 261, 954, 952, 953, 960, 956,
	955, 959, 262, 263, 264, 265, 942, 267, 935, 934,
	860, 268, 0, 270, 269, 0, 271, 0, 0, 272,
	933, 274, 0, 275, 0, 276, 277, 0, 278, 866,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 991,
	992, 878, 218, 0, 0, 0, 0, 0, 289, 290,
	291, 932, 930, 931, 0, 294, 0, 295, 0, 0,
	974, 296, 297, 0, 298, 998, 0, 888, 299, 0,
	300, 301, 302, 303, 965, 966, 969, 358, 976, 304,
	305, 0, 306, 307, 909, 0, 0, 219, 308, 310,
	317, 0, 975, 311, 921, 912, 923, 925, 926, 927,
	922, 0, 914, 0, 318, 977, 967, 978, 319, 320,
	321, 979, 947, 948, 0, 0, 324, 325, 326, 327,
	328, 0, 330, 329, 0, 331, 999, 980, 332, 333,
	981, 0, 334, 335, 958, 957, 336, 337, 338, 339,
	0, 340, 341, 343, 345, 342, 344, 346, 348, 901,
	347, 982, 350, 351, 354, 355, 353, 983, 352, 857,
	220, 984, 356, 879, 968, 357, 936, 359, 360, 0,
	910, 362, 911, 862, 0, 365, 366, 367, 0, 0,
	368, 369, 515, 985, 370, 986, 993, 371, 364, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 994,
	381, 518, 382, 0, 383, 0, 384, 385, 386, 387,
	388, 389, 390, 929, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 399, 400, 401, 398, 402, 403, 404,
	405, 0, 406, 987, 407, 408, 409, 410, 867, 411,
	0, 412, 416, 417, 418, 419, 420, 421, 422, 0,
	428, 429, 902, 903, 905, 906, 424, 430, 431, 432,
	961, 433, 413, 414, 434, 435, 988, 436, 437, 924,
	904, 439, 0, 440, 441, 442, 443, 415, 444, 448,
	972, 445, 446, 447, 995, 0, 451, 452, 450, 0,
	453, 454, 455, 456, 457, 283, 900, 0, 459, 943,
	944, 945, 946, 0, 466, 0, 460, 461, 996, 462,
	997, 877, 463, 464, 465, 0, 467, 468, 0, 861,
	469, 470, 471, 473, 474, 472, 476, 962, 477, 0,
	908, 478, 479, 480, 529, 940, 990, 0, 482, 481,
	532, 0, 0, 0, 0, 483, 484, 533, 485, 486,
	487, 858, 0, 0, 0, 0, 0, 856, 0, 0,
	0, 0, 0, 0, 854, 855, 913, 871, 872, 873,
	869, 870, 882, 883, 0, 0, 0, 881, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 964, 887, 0, 0, 0,
	227, 229, 228, 230, 231, 489, 928, 907, 939, 235,
	897, 938, 937, 0, 236, 237, 899, 898, 240, 241,
	242, 889, 963, 243, 1000, 1001, 495, 0, 244, 970,
	0, 951, 0, 245, 246, 247, 248, 249, 250, 0,
	252, 253, 254, 251, 0, 255, 0, 256, 257, 258,
	0, 259, 973, 260, 261, 954, 952, 953, 960, 956,
	955, 959, 262, 263, 264, 265, 942, 267, 935, 934,
	860, 268, 0, 270, 269, 0, 271, 0, 0, 272,
	933, 274, 0, 275, 0, 276, 277, 0, 278, 866,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 991,
	992, 878, 218, 0, 0, 0, 0, 0, 289, 290,
	291, 932, 930, 931, 0, 294, 0, 295, 0, 0,
	974, 296, 297, 0, 298, 998, 0, 888, 299, 0,
	300, 301, 302, 303, 965, 966, 969, 358, 976, 304,
	305, 0, 306, 307, 909, 0, 0, 219, 308, 310,
	317, 0, 975, 311, 921, 912, 923, 925, 926, 927,
	922, 0, 914, 0, 318, 977, 967, 978, 319, 320,
	321, 979, 947, 948, 0, 0, 324, 325, 326, 327,
	328, 0, 330, 329, 0, 331, 999, 980, 332, 333,
	981, 0, 334, 335, 958, 957, 336, 337, 338, 339,
	0, 340, 341, 343, 345, 342, 344, 346, 348, 901,
	347, 982, 350, 351, 354, 355, 353, 983, 352, 857,
	3192, 984, 356, 879, 968, 357, 936, 359, 360, 0,
	910, 362, 911, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 515, 985, 370, 986, 993, 371, 364, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 994,
	381, 518, 382, 0, 383, 0, 384, 385, 386, 387,
	388, 389, 390, 929, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 399, 400, 401, 398, 402, 403, 404,
	405, 0, 406, 987, 407, 408, 409, 410, 867, 411,
	0, 412, 416, 417, 418, 419, 420, 421, 422, 0,
	428, 429, 902, 903, 905, 906, 424, 430, 431, 432,
	961, 433, 413, 414, 434, 435, 988, 436, 437, 924,
	904, 439, 0, 440, 441, 442, 443, 415, 444, 448,
	972, 445, 446, 447, 995, 0, 451, 452, 450, 0,
	453, 454, 455, 456, 457, 283, 900, 0, 459, 943,
	944, 945, 946, 0, 466, 0, 460, 461, 996, 462,
	997, 877, 463, 464, 465, 0, 467, 468, 0, 861,
	469, 470, 471, 473, 474, 472, 476, 962, 477, 0,
	908, 478, 479, 480, 529, 940, 990, 0, 482, 481,
	532, 0, 0, 0, 0, 483, 484, 533, 485, 486,
	487, 858, 0, 0, 0, 0, 0, 856, 0, 0,
	0, 0, 0, 0, 854, 855, 1629, 0, 0, 0,
	0, 0, 0, 883, 0, 0, 0, 881, 913, 871,
	872, 873, 869, 870, 882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 964, 887, 0,
	0, 0, 227, 229, 228, 230, 231, 489, 928, 907,
	939, 235, 897, 938, 937, 0, 236, 237, 899, 898,
	240, 241, 242, 889, 963, 243, 1000, 1001, 495, 0,
	244, 970, 0, 951, 0, 245, 246, 247, 248, 249,
	250, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 973, 260, 261, 954, 952, 953,
	960, 956, 955, 959, 262, 263, 264, 265, 942, 267,
	935, 934, 860, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 933, 274, 0, 275, 0, 276, 277, 0,
	278, 866, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 991, 992, 878, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 932, 930, 931, 0, 294, 0, 295,
	0, 0, 974, 296, 297, 0, 298, 998, 0, 888,
	299, 0, 300, 301, 302, 303, 965, 966, 969, 358,
	976, 304, 305, 0, 306, 307, 909, 0, 0, 219,
	308, 310, 317, 0, 975, 311, 921, 912, 923, 925,
	926, 927, 922, 0, 914, 0, 318, 977, 967, 978,
	319, 320, 321, 979, 947, 948, 0, 0, 324, 325,
	326, 327, 328, 0, 330, 329, 0, 331, 999, 980,
	332, 333, 981, 0, 334, 335, 958, 957, 336, 337,
	338, 339, 0, 340, 341, 343, 345, 342, 344, 346,
	348, 901, 347, 982, 350, 351, 354, 355, 353, 983,
	352, 857, 220, 984, 356, 879, 968, 357, 936, 359,
	360, 0, 910, 362, 911, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 515, 985, 370, 986, 993, 371,
	364, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 994, 381, 518, 382, 0, 383, 0, 384, 385,
	386, 387, 388, 389, 390, 929, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 399, 400, 401, 398, 402,
	403, 404, 405, 0, 406, 987, 407, 408, 409, 410,
	867, 411, 0, 412, 416, 417, 418, 419, 420, 421,
	422, 0, 428, 429, 902, 903, 905, 906, 424, 430,
	431, 432, 961, 433, 413, 414, 434, 435, 988, 436,
	437, 924, 904, 439, 0, 440, 441, 442, 443, 415,
	444, 448, 972, 445, 446, 447, 995, 0, 451, 452,
	450, 0, 453, 454, 455, 456, 457, 283, 900, 0,
	459, 943, 944, 945, 946, 0, 466, 0, 460, 461,
	996, 462, 997, 877, 463, 464, 465, 0, 467, 468,
	0, 861, 469, 470, 471, 473, 474, 472, 476, 962,
	477, 0, 908, 478, 479, 480, 529, 940, 990, 2992,
	482, 481, 532, 0, 0, 0, 0, 483, 484, 533,
	485, 486, 487, 858, 0, 0, 0, 0, 0, 856,
	0, 0, 0, 0, 0, 0, 854, 855, 913, 871,
	872, 873, 869, 870, 882, 883, 0, 0, 0, 881,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 964, 887, 0,
	0, 0, 227, 229, 228, 230, 231, 489, 928, 907,
	939, 235, 897, 938, 937, 0, 236, 237, 899, 898,
	240, 241, 242, 889, 963, 243, 1000, 1001, 495, 0,
	244, 970, 0, 951, 0, 245, 246, 247, 248, 249,
	250, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 973, 260, 261, 954, 952, 953,
	960, 956, 955, 959, 262, 263, 264, 265, 942, 267,
	935, 934, 860, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 933, 274, 0, 275, 0, 276, 277, 0,
	278, 866, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 991, 992, 878, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 932, 930, 931, 0, 294, 0, 295,
	0, 0, 974, 296, 297, 0, 298, 998, 0, 888,
	299, 0, 300, 301, 302, 303, 965, 966, 969, 358,
	976, 304, 305, 0, 306, 307, 909, 0, 0, 2051,
	308, 310, 317, 0, 975, 311, 921, 912, 923, 925,
	926, 927, 922, 0, 914, 0, 318, 977, 967, 978,
	319, 320, 321, 979, 947, 948, 0, 0, 324, 325,
	326, 327, 328, 0, 330, 329, 0, 331, 999, 980,
	332, 333, 981, 0, 334, 335, 958, 957, 336, 337,
	338, 339, 0, 340, 341, 343, 345, 342, 344, 346,
	348, 901, 347, 982, 350, 351, 354, 355, 353, 983,
	352, 857, 220, 984, 356, 879, 968, 357, 936, 359,
	360, 0, 910, 362, 911, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 515, 985, 370, 986, 993, 371,
	364, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 994, 381, 518, 382, 2050, 383, 0, 384, 385,
	386, 387, 388, 389, 390, 929, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 399, 400, 401, 398, 402,
	403, 404, 405, 0, 406, 987, 407, 408, 409, 410,
	867, 411, 0, 412, 416, 417, 418, 419, 420, 421,
	422, 0, 428, 429, 902, 903, 905, 906, 424, 430,
	431, 432, 961, 433, 413, 414, 434, 435, 988, 436,
	437, 924, 904, 439, 0, 440, 441, 442, 443, 415,
	444, 448, 972, 445, 446, 447, 995, 0, 451, 452,
	450, 0, 453, 454, 455, 456, 457, 283, 900, 0,
	459, 943, 944, 945, 946, 0, 466, 0, 460, 461,
	996, 462, 997, 877, 463, 464, 465, 0, 467, 468,
	0, 861, 469, 470, 471, 473, 474, 472, 476, 962,
	477, 0, 908, 478, 479, 480, 529, 940, 990, 0,
	482, 481, 532, 0, 0, 0, 0, 483, 484, 533,
	485, 486, 487, 858, 0, 0, 0, 0, 0, 856,
	0, 0, 0, 0, 0, 0, 854, 855, 913, 871,
	872, 873, 869, 870, 882, 883, 0, 0, 0, 881,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 964, 887, 0,
	0, 0, 227, 229, 228, 230, 231, 489, 928, 907,
	939, 235, 897, 938, 937, 0, 236, 237, 899, 898,
	240, 241, 242, 889, 963, 243, 1000, 1001, 495, 0,
	244, 970, 0, 951, 0, 245, 246, 247, 248, 249,
	250, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 973, 260, 261, 954, 952, 953,
	960, 956, 955, 959, 262, 263, 264, 265, 942, 267,
	935, 934, 860, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 933, 274, 0, 275, 0, 276, 277, 0,
	278, 866, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 991, 992, 878, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 932, 930, 931, 0, 294, 0, 295,
	0, 0, 974, 296, 297, 0, 298, 998, 0, 888,
	299, 0, 300, 301, 302, 303, 965, 966, 969, 358,
	976, 304, 305, 0, 306, 307, 909, 0, 0, 219,
	308, 310, 317, 0, 975, 311, 921, 912, 923, 925,
	926, 927, 922, 0, 914, 0, 318, 977, 967, 978,
	319, 320, 321, 979, 947, 948, 0, 0, 324, 325,
	326, 327, 328, 0, 330, 329, 0, 331, 999, 980,
	332, 333, 981, 0, 334, 335, 958, 957, 336, 337,
	338, 339, 0, 340, 341, 343, 345, 342, 344, 346,
	348, 901, 347, 982, 350, 351, 354, 355, 353, 983,
	352, 857, 220, 984, 356, 879, 968, 357, 936, 359,
	360, 0, 910, 362, 911, 862, 0, 365, 366, 367,
	0, 0, 368, 369, 515, 985, 370, 986, 993, 371,
	364, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 994, 381, 518, 382, 0, 383, 0, 384, 385,
	386, 387, 388, 389, 390, 929, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 399, 400, 401, 398, 402,
	403, 404, 405, 0, 406, 987, 407, 408, 409, 410,
	867, 411, 0, 412, 416, 417, 418, 419, 420, 421,
	422, 0, 428, 429, 902, 903, 905, 906, 424, 430,
	431, 432, 961, 433, 413, 414, 434, 435, 988, 436,
	437, 924, 904, 439, 0, 440, 441, 442, 443, 415,
	444, 448, 972, 445, 446, 447, 995, 0, 451, 452,
	450, 0, 453, 454, 455, 456, 457, 283, 900, 0,
	459, 943, 944, 945, 946, 0, 466, 0, 460, 461,
	996, 462, 997, 877, 463, 464, 465, 0, 467, 468,
	0, 861, 469, 470, 471, 473, 474, 472, 476, 962,
	477, 0, 908, 478, 479, 480, 529, 940, 990, 0,
	482, 481, 532, 0, 0, 0, 0, 483, 484, 533,
	485, 486, 487, 858, 0, 0, 0, 0, 0, 856,
	0, 0, 0, 0, 0, 0, 854, 855, 913, 871,
	872, 873, 869, 870, 882, 883, 0, 0, 0, 881,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 964, 887, 0,
	0, 0, 227, 229, 228, 230, 231, 489, 928, 907,
	939, 235, 897, 938, 937, 0, 236, 237, 899, 898,
	240, 241, 242, 889, 963, 243, 1000, 1001, 495, 0,
	244, 970, 0, 951, 0, 245, 246, 247, 248, 249,
	250, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 973, 260, 261, 954, 952, 953,
	960, 956, 955, 959, 262, 263, 264, 265, 942, 267,
	935, 934, 860, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 933, 274, 0, 275, 0, 276, 277, 0,
	278, 866, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 991, 992, 878, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 932, 930, 931, 0, 294, 0, 295,
	0, 0, 974, 296, 297, 0, 298, 998, 0, 888,
	299, 0, 300, 301, 302, 303, 965, 966, 969, 358,
	976, 304, 305, 0, 306, 307, 909, 0, 0, 219,
	308, 310, 317, 0, 975, 311, 921, 912, 923, 925,
	926, 927, 922, 0, 914, 0, 318, 977, 967, 978,
	319, 320, 321, 979, 947, 948, 0, 0, 324, 325,
	326, 327, 328, 0, 330, 329, 0, 331, 999, 980,
	332, 333, 981, 0, 334, 335, 958, 957, 336, 337,
	338, 339, 0, 340, 341, 343, 345, 342, 344, 346,
	348, 901, 347, 982, 350, 351, 354, 355, 353, 983,
	352, 857, 220, 984, 356, 879, 968, 357, 936, 359,
	360, 0, 910, 362, 911, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 515, 985, 370, 986, 993, 371,
	364, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 994, 381, 518, 382, 0, 383, 0, 384, 385,
	386, 387, 388, 389, 390, 929, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 399, 400, 401, 398, 402,
	403, 404, 405, 0, 406, 987, 407, 408, 409, 410,
	867, 411, 0, 412, 416, 417, 418, 419, 420, 421,
	422, 0, 428, 429, 902, 903, 905, 906, 424, 430,
	431, 432, 961, 433, 413, 414, 434, 435, 988, 436,
	437, 924, 904, 439, 0, 440, 441, 442, 443, 415,
	444, 448, 972, 445, 446, 447, 995, 0, 451, 452,
	450, 0, 453, 454, 455, 456, 457, 283, 900, 0,
	459, 943, 944, 945, 946, 0, 466, 0, 460, 461,
	996, 462, 997, 877, 463, 464, 465, 0, 467, 468,
	0, 861, 469, 470, 471, 473, 474, 472, 476, 962,
	477, 0, 908, 478, 479, 480, 529, 940, 990, 0,
	482, 481, 532, 0, 0, 0, 0, 483, 484, 533,
	485, 486, 487, 858, 0, 0, 0, 0, 0, 856,
	0, 0, 0, 0, 0, 0, 854, 855, 1629, 0,
	0, 0, 0, 0, 0, 883, 0, 0, 0, 881,
	913, 871, 872, 873, 869, 870, 882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 964,
	887, 0, 0, 0, 227, 229, 228, 230, 231, 489,
	928, 907, 939, 235, 897, 938, 937, 0, 236, 237,
	899, 898, 240, 241, 242, 889, 963, 243, 1000, 1001,
	495, 0, 244, 970, 0, 951, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 973, 260, 261, 954,
	952, 953, 960, 956, 955, 959, 262, 263, 264, 265,
	942, 267, 935, 934, 860, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 933, 274, 0, 275, 0, 276,
	277, 0, 278, 866, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 991, 992, 878, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 932, 930, 931, 0, 294,
	0, 295, 0, 2236, 974, 296, 297, 0, 298, 998,
	0, 888, 299, 0, 300, 301, 302, 303, 965, 966,
	969, 358, 976, 304, 305, 0, 306, 307, 909, 0,
	0, 219, 308, 310, 317, 0, 975, 311, 921, 912,
	923, 925, 926, 927, 922, 0, 914, 0, 318, 977,
	967, 978, 319, 320, 321, 979, 947, 948, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	999, 980, 332, 333, 981, 0, 334, 335, 958, 957,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 901, 347, 982, 350, 351, 354, 355,
	353, 983, 352, 857, 220, 984, 356, 879, 968, 357,
	936, 359, 360, 0, 910, 362, 911, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 985, 370, 986,
	993, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 994, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 929, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 987, 407, 408,
	409, 410, 867, 411, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 0, 428, 429, 902, 903, 905, 906,
	424, 430, 431, 432, 961, 433, 413, 414, 434, 435,
	988, 436, 437, 924, 904, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 972, 445, 446, 447, 995, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	900, 0, 459, 943, 944, 945, 946, 0, 466, 0,
	460, 461, 996, 462, 997, 877, 463, 464, 465, 0,
	467, 468, 0, 861, 469, 470, 471, 473, 474, 472,
	476, 962, 477, 0, 908, 478, 479, 480, 529, 940,
	990, 0, 482, 481, 532, 0, 0, 0, 0, 483,
	484, 533, 485, 486, 487, 858, 0, 0, 0, 0,
	0, 856, 0, 0, 0, 0, 0, 0, 854, 855,
	913, 871, 872, 873, 869, 870, 882, 883, 0, 0,
	0, 881, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 964,
	887, 0, 0, 0, 227, 229, 228, 230, 231, 489,
	928, 907, 939, 235, 897, 938, 937, 0, 236, 237,
	899, 898, 240, 241, 242, 889, 963, 243, 1000, 1001,
	495, 0, 244, 970, 0, 951, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 973, 260, 261, 954,
	952, 953, 960, 956, 955, 959, 262, 263, 264, 265,
	942, 267, 935, 934, 860, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 933, 274, 0, 275, 0, 276,
	277, 0, 278, 866, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 991, 992, 878, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 932, 930, 931, 0, 294,
	0, 295, 0, 0, 974, 296, 297, 0, 298, 998,
	0, 888, 299, 0, 300, 301, 302, 303, 965, 966,
	969, 358, 976, 304, 305, 0, 306, 307, 909, 0,
	0, 219, 308, 310, 317, 0, 975, 311, 921, 912,
	923, 925, 926, 927, 922, 0, 914, 0, 318, 977,
	967, 978, 319, 320, 321, 979, 947, 948, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	999, 980, 332, 333, 981, 0, 334, 335, 958, 957,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 901, 347, 982, 350, 351, 354, 355,
	353, 983, 352, 857, 220, 984, 356, 879, 968, 357,
	936, 359, 360, 0, 910, 362, 911, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 985, 370, 986,
	993, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 994, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 929, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 987, 407, 408,
	409, 410, 867, 411, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 0, 428, 429, 902, 903, 905, 906,
	424, 430, 431, 432, 961, 433, 413, 414, 434, 435,
	988, 436, 437, 924, 904, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 972, 445, 446, 447, 995, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	900, 0, 459, 943, 944, 945, 946, 0, 466, 0,
	460, 461, 996, 462, 997, 877, 463, 464, 465, 0,
	467, 468, 0, 861, 469, 470, 471, 473, 474, 472,
	476, 962, 477, 0, 908, 478, 479, 480, 529, 940,
	990, 0, 482, 481, 532, 0, 0, 0, 0, 483,
	484, 533, 485, 486, 487, 858, 0, 0, 0, 0,
	0, 856, 0, 0, 0, 0, 0, 0, 854, 855,
	0, 0, 0, 0, 0, 0, 0, 883, 1563, 0,
	2241, 881, 913, 871, 872, 873, 869, 870, 882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	222, 223, 224, 225, 0, 226, 0, 0, 0, 0,
	0, 964, 887, 0, 0, 0, 227, 229, 228, 230,
	231, 489, 928, 907, 939, 235, 897, 938, 937, 0,
	236, 237, 899, 898, 240, 241, 242, 889, 963, 243,
	1000, 1001, 495, 0, 244, 970, 0, 951, 0, 245,
	246, 247, 248, 249, 250, 0, 252, 253, 254, 251,
	0, 255, 0, 256, 257, 258, 0, 259, 973, 260,
	261, 954, 952, 953, 960, 956, 955, 959, 262, 263,
	264, 265, 942, 267, 935, 934, 860, 268, 0, 270,
	269, 0, 271, 0, 0, 272, 933, 274, 0, 275,
	0, 276, 277, 0, 278, 866, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 991, 992, 878, 218, 0,
	0, 0, 0, 0, 289, 290, 291, 932, 930, 931,
	0, 294, 0, 295, 0, 0, 974, 296, 297, 0,
	298, 998, 0, 888, 299, 0, 300, 301, 302, 303,
	965, 966, 969, 358, 976, 304, 305, 0, 306, 307,
	909, 0, 0, 219, 308, 310, 317, 0, 975, 311,
	921, 912, 923, 925, 926, 927, 922, 0, 914, 0,
	318, 977, 967, 978, 319, 320, 321, 979, 947, 948,
	0, 0, 324, 325, 326, 327, 328, 0, 330, 329,
	0, 331, 999, 980, 332, 333, 981, 0, 334, 335,
	958, 957, 336, 337, 338, 339, 0, 340, 341, 343,
	345, 342, 344, 346, 348, 901, 347, 982, 350, 351,
	354, 355, 353, 983, 352, 857, 220, 984, 356, 879,
	968, 357, 936, 359, 360, 0, 910, 362, 911, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 515, 985,
	370, 986, 993, 371, 364, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 994, 381, 518, 382, 0,
	383, 0, 384, 385, 386, 387, 388, 389, 390, 929,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 399,
	400, 401, 398, 402, 403, 404, 405, 0, 406, 987,
	407, 408, 409, 410, 867, 411, 0, 412, 416, 417,
	418, 419, 420, 421, 422, 0, 428, 429, 902, 903,
	905, 906, 424, 430, 431, 432, 961, 433, 413, 414,
	434, 435, 988, 436, 437, 924, 904, 439, 0, 440,
	441, 442, 443, 415, 444, 448, 972, 445, 446, 447,
	995, 0, 451, 452, 450, 0, 453, 454, 455, 456,
	457, 283, 900, 0, 459, 943, 944, 945, 946, 0,
	466, 0, 460, 461, 996, 462, 997, 877, 463, 464,
	465, 0, 467, 468, 0, 861, 469, 470, 471, 473,
	474, 472, 476, 962, 477, 0, 908, 478, 479, 480,
	529, 940, 990, 0, 482, 481, 532, 0, 0, 0,
	0, 483, 484, 533, 485, 486, 487, 858, 0, 0,
	0, 0, 0, 856, 0, 0, 0, 0, 0, 0,
	854, 855, 0, 0, 0, 0, 0, 0, 0, 883,
	0, 0, 2239, 881, 913, 871, 872, 873, 869, 870,
	882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 964, 887, 0, 0, 0, 227, 229,
	228, 230, 231, 489, 928, 907, 939, 235, 897, 938,
	937, 0, 236, 237, 899, 898, 240, 241, 242, 889,
	963, 243, 1000, 1001, 495, 0, 244, 970, 0, 951,
	0, 245, 246, 247, 248, 249, 250, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	973, 260, 261, 954, 952, 953, 960, 956, 955, 959,
	262, 263, 264, 265, 942, 267, 935, 934, 860, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 933, 274,
	0, 275, 0, 276, 277, 0, 278, 866, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 991, 992, 878,
	218, 0, 0, 0, 0, 0, 289, 290, 291, 932,
	930, 931, 0, 294, 0, 295, 0, 0, 974, 296,
	297, 0, 298, 998, 0, 888, 299, 0, 300, 301,
	302, 303, 965, 966, 969, 358, 976, 304, 305, 0,
	306, 307, 909, 0, 0, 219, 308, 310, 317, 0,
	975, 311, 921, 912, 923, 925, 926, 927, 922, 0,
	914, 0, 318, 977, 967, 978, 319, 320, 321, 979,
	947, 948, 0, 0, 324, 325, 326, 327, 328, 0,
	330, 329, 0, 331, 999, 980, 332, 333, 981, 0,
	334, 335, 958, 957, 336, 337, 338, 339, 0, 340,
	341, 343, 345, 342, 344, 346, 348, 901, 347, 982,
	350, 351, 354, 355, 353, 983, 352, 857, 220, 984,
	356, 879, 968, 357, 936, 359, 360, 0, 910, 362,
	911, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	515, 985, 370, 986, 993, 371, 364, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 994, 381, 518,
	382, 0, 383, 0, 384, 385, 386, 387, 388, 389,
	390, 929, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 399, 400, 401, 398, 402, 403, 404, 405, 0,
	406, 987, 407, 408, 409, 410, 867, 411, 0, 412,
	416, 417, 418, 419, 420, 421, 422, 0, 428, 429,
	902, 903, 905, 906, 424, 430, 431, 432, 961, 433,
	413, 414, 434, 435, 988, 436, 437, 924, 904, 439,
	0, 440, 441, 442, 443, 415, 444, 448, 972, 445,
	446, 447, 995, 0, 451, 452, 450, 0, 453, 454,
	455, 456, 457, 283, 900, 0, 459, 943, 944, 945,
	946, 0, 466, 0, 460, 461, 996, 462, 997, 877,
	463, 464, 465, 0, 467, 468, 0, 861, 469, 470,
	471, 473, 474, 472, 476, 962, 477, 0, 908, 478,
	479, 480, 529, 940, 990, 0, 482, 481, 532, 0,
	0, 0, 0, 483, 484, 533, 485, 486, 487, 858,
	0, 0, 0, 0, 0, 856, 0, 0, 0, 0,
	0, 0, 854, 855, 0, 0, 0, 0, 0, 0,
	0, 883, 0, 0, 2227, 881, 913, 871, 872, 873,
	869, 870, 882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 964, 887, 0, 0, 0,
	227, 229, 228, 230, 231, 489, 928, 907, 939, 235,
	897, 938, 937, 0, 236, 237, 899, 898, 240, 241,
	242, 889, 963, 243, 1000, 1001, 495, 0, 244, 970,
	0, 951, 0, 245, 246, 247, 248, 249, 250, 0,
	252, 253, 254, 251, 0, 255, 0, 256, 257, 258,
	0, 259, 973, 260, 261, 954, 952, 953, 960, 956,
	955, 959, 262, 263, 264, 265, 942, 267, 935, 934,
	860, 268, 0, 270, 269, 0, 271, 0, 0, 272,
	933, 274, 0, 275, 0, 276, 277, 0, 278, 866,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 991,
	992, 878, 218, 0, 0, 0, 0, 0, 289, 290,
	291, 932, 930, 931, 0, 294, 0, 295, 0, 0,
	974, 296, 297, 0, 298, 998, 0, 888, 299, 0,
	300, 301, 302, 303, 965, 966, 969, 358, 976, 304,
	305, 0, 306, 307, 909, 0, 0, 219, 308, 310,
	317, 0, 975, 311, 921, 912, 923, 925, 926, 927,
	922, 0, 914, 0, 318, 977, 967, 978, 319, 320,
	321, 979, 947, 948, 0, 0, 324, 325, 326, 327,
	328, 0, 330, 329, 0, 331, 999, 980, 332, 333,
	981, 0, 334, 335, 958, 957, 336, 337, 338, 339,
	0, 340, 341, 343, 345, 342, 344, 346, 348, 901,
	347, 982, 350, 351, 354, 355, 353, 983, 352, 857,
	220, 984, 356, 879, 968, 357, 936, 359, 360, 0,
	910, 362, 911, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 515, 985, 370, 986, 993, 371, 364, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 994,
	381, 518, 382, 0, 383, 0, 384, 385, 386, 387,
	388, 389, 390, 929, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 399, 400, 401, 398, 402, 403, 404,
	405, 0, 406, 987, 407, 408, 409, 410, 867, 411,
	0, 412, 416, 417, 418, 419, 420, 421, 422, 0,
	428, 429, 902, 903, 905, 906, 424, 430, 431, 432,
	961, 433, 413, 414, 434, 435, 988, 436, 437, 924,
	904, 439, 0, 440, 441, 442, 443, 415, 444, 448,
	972, 445, 446, 447, 995, 0, 451, 452, 450, 0,
	453, 454, 455, 456, 457, 283, 900, 0, 459, 943,
	944, 945, 946, 0, 466, 0, 460, 461, 996, 462,
	997, 877, 463, 464, 465, 0, 467, 468, 0, 861,
	469, 470, 471, 473, 474, 472, 476, 962, 477, 0,
	908, 478, 479, 480, 529, 940, 990, 0, 482, 481,
	532, 0, 0, 0, 0, 483, 484, 533, 485, 486,
	487, 858, 0, 0, 0, 0, 0, 856, 0, 0,
	0, 0, 0, 0, 854, 855, 0, 0, 0, 0,
	0, 0, 0, 883, 0, 0, 2216, 881, 913, 871,
	872, 873, 869, 870, 882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 964, 887, 0,
	0, 0, 227, 229, 228, 230, 231, 489, 928, 907,
	939, 235, 897, 938, 937, 0, 236, 237, 899, 898,
	240, 241, 242, 889, 963, 243, 1000, 1001, 495, 0,
	244, 970, 0, 951, 0, 245, 246, 247, 248, 249,
	250, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 973, 260, 261, 954, 952, 953,
	960, 956, 955, 959, 262, 263, 264, 265, 942, 267,
	935, 934, 860, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 933, 274, 0, 275, 0, 276, 277, 0,
	278, 866, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 991, 992, 878, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 932, 930, 931, 0, 294, 0, 295,
	0, 0, 974, 296, 297, 0, 298, 998, 0, 888,
	299, 0, 300, 301, 302, 303, 965, 966, 969, 358,
	976, 304, 305, 0, 306, 307, 909, 0, 0, 219,
	308, 310, 317, 0, 975, 311, 921, 912, 923, 925,
	926, 927, 922, 0, 914, 0, 318, 977, 967, 978,
	319, 320, 321, 979, 947, 948, 0, 0, 324, 325,
	326, 327, 328, 0, 330, 329, 0, 331, 999, 980,
	332, 333, 981, 0, 334, 335, 958, 957, 336, 337,
	338, 339, 0, 340, 341, 343, 345, 342, 344, 346,
	348, 901, 347, 982, 350, 351, 354, 355, 353, 983,
	352, 857, 220, 984, 356, 879, 968, 357, 936, 359,
	360, 0, 910, 362, 911, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 515, 985, 370, 986, 993, 371,
	364, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 994, 381, 518, 382, 0, 383, 0, 384, 385,
	386, 387, 388, 389, 390, 929, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 399, 400, 401, 398, 402,
	403, 404, 405, 0, 406, 987, 407, 408, 409, 410,
	867, 411, 0, 412, 416, 417, 418, 419, 420, 421,
	422, 0, 428, 429, 902, 903, 905, 906, 424, 430,
	431, 432, 961, 433, 413, 414, 434, 435, 988, 436,
	437, 924, 904, 439, 0, 440, 441, 442, 443, 415,
	444, 448, 972, 445, 446, 447, 995, 0, 451, 452,
	450, 0, 453, 454, 455, 456, 457, 283, 900, 0,
	459, 943, 944, 945, 946, 0, 466, 0, 460, 461,
	996, 462, 997, 877, 463, 464, 465, 0, 467, 468,
	0, 861, 469, 470, 471, 473, 474, 472, 476, 962,
	477, 0, 908, 478, 479, 480, 529, 940, 990, 0,
	482, 481, 532, 0, 0, 0, 0, 483, 484, 533,
	485, 486, 487, 858, 0, 0, 0, 0, 0, 856,
	0, 0, 0, 0, 0, 0, 854, 855, 0, 0,
	0, 0, 0, 0, 0, 883, 0, 0, 2214, 881,
	2205, 2212, 872, 873, 869, 870, 882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 964,
	887, 0, 0, 0, 227, 229, 228, 230, 231, 489,
	928, 907, 939, 235, 897, 938, 937, 0, 236, 237,
	899, 898, 240, 241, 242, 889, 963, 243, 1000, 1001,
	495, 0, 244, 970, 0, 951, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 973, 260, 261, 954,
	952, 953, 960, 956, 955, 959, 262, 263, 264, 265,
	942, 2208, 935, 934, 860, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 933, 274, 0, 275, 0, 276,
	277, 0, 278, 866, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 991, 992, 878, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 932, 930, 931, 0, 294,
	0, 295, 0, 0, 974, 296, 297, 0, 298, 998,
	0, 888, 299, 0, 300, 301, 302, 2209, 965, 966,
	969, 358, 976, 304, 305, 0, 306, 307, 909, 0,
	0, 219, 308, 310, 317, 0, 975, 311, 921, 912,
	923, 925, 926, 927, 922, 0, 914, 0, 318, 977,
	967, 978, 319, 320, 321, 979, 947, 948, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	999, 980, 332, 333, 981, 0, 334, 335, 958, 957,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	2210, 2207, 348, 901, 347, 982, 350, 351, 354, 355,
	353, 983, 352, 857, 220, 984, 356, 879, 968, 357,
	936, 359, 360, 0, 910, 362, 911, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 985, 370, 986,
	993, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 994, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 929, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 987, 407, 408,
	409, 410, 867, 411, 0, 412, 416, 417, 418, 419,
	420, 421, 2211, 0, 428, 429, 902, 903, 905, 906,
	424, 430, 431, 432, 961, 433, 413, 414, 434, 435,
	988, 436, 437, 924, 904, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 972, 445, 446, 447, 995, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	900, 0, 459, 943, 944, 945, 946, 0, 466, 0,
	460, 461, 996, 462, 997, 877, 463, 464, 465, 0,
	467, 468, 0, 861, 469, 470, 471, 473, 474, 472,
	476, 962, 477, 0, 908, 478, 479, 480, 529, 940,
	990, 0, 482, 481, 532, 0, 0, 0, 0, 483,
	484, 533, 485, 2206, 487, 858, 0, 0, 0, 0,
	0, 856, 0, 0, 0, 0, 0, 0, 854, 855,
	0, 0, 0, 0, 0, 0, 0, 883, 0, 0,
	2202, 881, 2205, 2212, 872, 873, 869, 870, 882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	222, 223, 224, 225, 0, 226, 0, 0, 0, 0,
	0, 964, 887, 0, 0, 0, 227, 229, 228, 230,
	231, 489, 928, 907, 939, 235, 897, 938, 937, 0,
	236, 237, 899, 898, 240, 241, 242, 889, 963, 243,
	1000, 1001, 495, 0, 244, 970, 0, 951, 0, 245,
	246, 247, 248, 249, 250, 0, 252, 253, 254, 251,
	0, 255, 0, 256, 257, 258, 0, 259, 973, 260,
	261, 954, 952, 953, 960, 956, 955, 959, 262, 263,
	264, 265, 942, 2208, 935, 934, 860, 268, 0, 270,
	269, 0, 271, 0, 0, 272, 933, 274, 0, 275,
	0, 276, 277, 0, 278, 866, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 991, 992, 878, 218, 0,
	0, 0, 0, 0, 289, 290, 291, 932, 930, 931,
	0, 294, 0, 295, 0, 0, 974, 296, 297, 0,
	298, 998, 0, 888, 299, 0, 300, 301, 302, 2209,
	965, 966, 969, 358, 976, 304, 305, 0, 306, 307,
	909, 0, 0, 219, 308, 310, 317, 0, 975, 311,
	921, 912, 923, 925, 926, 927, 922, 0, 914, 0,
	318, 977, 967, 978, 319, 320, 321, 979, 947, 948,
	0, 0, 324, 325, 326, 327, 328, 0, 330, 329,
	0, 331, 999, 980, 332, 333, 981, 0, 334, 335,
	958, 957, 336, 337, 338, 339, 0, 340, 341, 343,
	345, 342, 2210, 2207, 348, 901, 347, 982, 350, 351,
	354, 355, 353, 983, 352, 857, 220, 984, 356, 879,
	968, 357, 936, 359, 360, 0, 910, 362, 911, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 515, 985,
	370, 986, 993, 371, 364, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 994, 381, 518, 382, 0,
	383, 0, 384, 385, 386, 387, 388, 389, 390, 929,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 399,
	400, 401, 398, 402, 403, 404, 405, 0, 406, 987,
	407, 408, 409, 410, 867, 411, 0, 412, 416, 417,
	418, 419, 420, 421, 2211, 0, 428, 429, 902, 903,
	905, 906, 424, 430, 431, 432, 961, 433, 413, 414,
	434, 435, 988, 436, 437, 924, 904, 439, 0, 440,
	441, 442, 443, 415, 444, 448, 972, 445, 446, 447,
	995, 0, 451, 452, 450, 0, 453, 454, 455, 456,
	457, 283, 900, 0, 459, 943, 944, 945, 946, 0,
	466, 0, 460, 461, 996, 462, 997, 877, 463, 464,
	465, 0, 467, 468, 0, 861, 469, 470, 471, 473,
	474, 472, 476, 962, 477, 0, 908, 478, 479, 480,
	529, 940, 990, 0, 482, 481, 532, 0, 0, 0,
	0, 483, 484, 533, 485, 2206, 487, 858, 0, 0,
	0, 0, 0, 856, 0, 0, 0, 0, 0, 0,
	854, 855, 913, 871, 872, 873, 869, 870, 882, 883,
	0, 0, 0, 881, 0, 0, 0, 0, 0, 221,
	222, 223, 224, 225, 0, 226, 0, 0, 0, 0,
	0, 964, 887, 0, 0, 0, 227, 229, 228, 230,
	231, 489, 928, 907, 939, 235, 897, 938, 937, 0,
	236, 237, 899, 898, 240, 241, 242, 889, 963, 243,
	1000, 1001, 495, 0, 244, 970, 0, 951, 0, 245,
	246, 247, 248, 249, 250, 0, 252, 253, 254, 251,
	0, 255, 0, 256, 257, 258, 0, 259, 973, 260,
	261, 954, 952, 953, 960, 956, 955, 959, 262, 263,
	264, 265, 942, 267, 935, 934, 860, 268, 0, 270,
	269, 0, 271, 0, 0, 272, 933, 274, 0, 275,
	0, 276, 277, 0, 278, 866, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 991, 992, 878, 218, 0,
	0, 0, 0, 0, 289, 290, 291, 932, 930, 931,
	0, 294, 0, 295, 0, 0, 974, 296, 297, 0,
	298, 998, 0, 888, 299, 0, 300, 301, 302, 303,
	965, 966, 969, 358, 976, 304, 305, 0, 306, 307,
	909, 0, 0, 219, 308, 310, 317, 0, 975, 311,
	921, 912, 923, 925, 926, 927, 922, 0, 914, 0,
	318, 977, 967, 978, 319, 320, 321, 979, 947, 948,
	0, 0, 324, 325, 326, 327, 328, 0, 330, 329,
	0, 331, 999, 980, 332, 333, 981, 0, 334, 335,
	958, 957, 336, 337, 338, 339, 0, 340, 341, 343,
	345, 342, 344, 346, 348, 901, 347, 982, 350, 351,
	354, 355, 353, 983, 352, 857, 220, 984, 356, 879,
	968, 357, 936, 359, 360, 0, 910, 362, 911, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 515, 985,
	370, 986, 993, 371, 364, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 994, 381, 518, 382, 0,
	383, 0, 384, 385, 386, 387, 388, 389, 390, 929,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 399,
	400, 401, 398, 402, 403, 404, 405, 0, 406, 987,
	407, 408, 409, 410, 867, 411, 0, 412, 416, 417,
	418, 419, 420, 421, 422, 0, 428, 429, 902, 903,
	905, 906, 424, 430, 431, 432, 961, 433, 413, 414,
	434, 435, 988, 436, 437, 924, 904, 439, 0, 440,
	441, 442, 443, 415, 444, 448, 972, 445, 446, 447,
	995, 0, 451, 452, 450, 0, 453, 454, 455, 456,
	457, 283, 900, 0, 459, 943, 944, 945, 946, 0,
	466, 0, 460, 461, 996, 462, 997, 877, 463, 464,
	465, 0, 467, 468, 0, 861, 469, 470, 471, 473,
	474, 472, 476, 962, 477, 0, 908, 478, 479, 480,
	529, 940, 990, 0, 482, 481, 532, 0, 0, 0,
	0, 483, 484, 533, 485, 486, 487, 858, 0, 0,
	0, 0, 0, 856, 0, 0, 0, 0, 0, 0,
	854, 855, 0, 0, 0, 0, 0, 1571, 0, 883,
	0, 0, 0, 881, 913, 871, 872, 873, 869, 870,
	882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 2030, 226, 0, 0,
	0, 0, 0, 964, 887, 0, 0, 0, 227, 229,
	228, 230, 231, 489, 928, 907, 939, 235, 897, 938,
	937, 0, 236, 237, 899, 898, 240, 241, 242, 889,
	963, 243, 1000, 1001, 495, 0, 244, 970, 0, 951,
	0, 245, 246, 247, 248, 249, 250, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	973, 260, 261, 954, 952, 953, 960, 956, 955, 959,
	262, 263, 264, 265, 942, 267, 935, 934, 860, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 933, 274,
	0, 275, 0, 276, 277, 0, 278, 866, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 991, 992, 878,
	218, 0, 0, 0, 0, 0, 289, 290, 291, 932,
	930, 931, 0, 294, 0, 295, 0, 0, 974, 296,
	297, 0, 298, 998, 0, 888, 299, 0, 300, 301,
	302, 303, 965, 966, 969, 358, 976, 304, 305, 0,
	306, 307, 909, 0, 0, 219, 308, 310, 317, 0,
	975, 311, 921, 912, 923, 925, 926, 927, 922, 0,
	914, 0, 318, 977, 967, 978, 319, 320, 321, 979,
	947, 948, 0, 0, 324, 325, 326, 327, 328, 0,
	330, 329, 0, 331, 999, 980, 332, 333, 981, 0,
	334, 335, 958, 957, 336, 337, 338, 339, 0, 340,
	341, 343, 345, 342, 344, 346, 348, 901, 347, 982,
	350, 351, 354, 355, 353, 983, 352, 857, 220, 984,
	356, 879, 968, 357, 936, 359, 360, 0, 910, 362,
	911, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	515, 985, 370, 986, 993, 371, 364, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 994, 381, 518,
	382, 0, 383, 0, 384, 385, 386, 387, 388, 389,
	390, 929, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 399, 400, 401, 398, 402, 403, 404, 405, 0,
	406, 987, 407, 408, 409, 410, 867, 411, 0, 412,
	416, 417, 418, 419, 420, 421, 422, 0, 428, 429,
	902, 903, 905, 906, 424, 430, 431, 432, 961, 433,
	413, 414, 434, 435, 988, 436, 437, 924, 904, 439,
	0, 440, 441, 442, 443, 415, 444, 448, 972, 445,
	446, 447, 995, 0, 451, 452, 450, 0, 453, 454,
	455, 456, 457, 283, 900, 0, 459, 943, 944, 945,
	946, 0, 466, 0, 460, 461, 996, 462, 997, 877,
	463, 464, 465, 0, 467, 468, 0, 861, 469, 470,
	471, 473, 474, 472, 476, 962, 477, 0, 908, 478,
	479, 480, 529, 940, 990, 0, 482, 481, 532, 0,
	0, 0, 0, 483, 484, 533, 485, 486, 487, 858,
	0, 0, 0, 0, 0, 856, 0, 0, 0, 0,
	0, 0, 854, 855, 0, 0, 0, 0, 0, 0,
	0, 883, 0, 0, 1239, 881, 913, 871, 872, 873,
	869, 870, 882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 964, 887, 0, 0, 0,
	227, 229, 228, 230, 231, 489, 928, 907, 939, 235,
	897, 938, 937, 0, 236, 237, 899, 898, 240, 241,
	242, 889, 963, 243, 1000, 1001, 495, 0, 244, 970,
	0, 951, 0, 245, 246, 247, 248, 249, 250, 0,
	252, 253, 254, 251, 0, 255, 0, 256, 257, 258,
	0, 259, 973, 260, 261, 954, 952, 953, 960, 956,
	955, 959, 262, 263, 264, 265, 942, 267, 935, 934,
	860, 268, 0, 270, 269, 0, 271, 0, 0, 272,
	933, 274, 0, 275, 0, 276, 277, 0, 278, 866,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 991,
	992, 878, 218, 0, 0, 0, 0, 0, 289, 290,
	291, 932, 930, 931, 0, 294, 0, 295, 0, 0,
	974, 296, 297, 0, 298, 998, 0, 888, 299, 0,
	300, 301, 302, 303, 1238, 966, 969, 358, 976, 304,
	305, 0, 306, 307, 909, 0, 0, 219, 308, 310,
	317, 0, 975, 311, 921, 912, 923, 925, 926, 927,
	922, 0, 914, 0, 318, 977, 967, 978, 319, 320,
	321, 979, 947, 948, 0, 0, 324, 325, 326, 327,
	328, 0, 330, 329, 0, 331, 999, 980, 332, 333,
	981, 0, 334, 335, 958, 957, 336, 337, 338, 339,
	0, 340, 341, 343, 345, 342, 344, 346, 348, 901,
	347, 982, 350, 351, 354, 355, 353, 983, 352, 857,
	220, 984, 356, 879, 968, 357, 936, 359, 360, 0,
	910, 362, 911, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 515, 985, 370, 986, 993, 371, 364, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 994,
	381, 518, 382, 0, 383, 0, 384, 385, 386, 387,
	388, 389, 390, 929, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 399, 400, 401, 398, 402, 403, 404,
	405, 0, 406, 987, 407, 408, 409, 410, 867, 411,
	0, 412, 416, 417, 418, 419, 420, 421, 422, 0,
	428, 429, 902, 903, 905, 906, 424, 430, 431, 432,
	961, 433, 413, 414, 434, 435, 988, 436, 437, 924,
	904, 439, 0, 440, 441, 442, 443, 415, 444, 448,
	972, 445, 446, 447, 995, 0, 451, 452, 450, 0,
	453, 454, 455, 456, 457, 283, 900, 0, 459, 943,
	944, 945, 946, 0, 466, 0, 460, 461, 996, 462,
	997, 877, 463, 464, 465, 0, 467, 468, 0, 861,
	469, 470, 471, 473, 474, 472, 476, 962, 477, 0,
	908, 478, 479, 480, 529, 940, 990, 0, 482, 481,
	532, 0, 0, 0, 0, 483, 484, 533, 485, 486,
	487, 858, 0, 0, 0, 0, 0, 856, 0, 0,
	0, 0, 0, 0, 854, 855, 0, 0, 0, 0,
	0, 0, 0, 883, 0, 0, 1233, 881, 913, 871,
	872, 873, 869, 870, 882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 964, 887, 0,
	0, 0, 227, 229, 228, 230, 231, 489, 928, 907,
	939, 235, 897, 938, 937, 0, 236, 237, 899, 898,
	240, 241, 242, 889, 963, 243, 1000, 1001, 495, 0,
	244, 970, 0, 951, 0, 245, 246, 247, 248, 249,
	250, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 973, 260, 261, 954, 952, 953,
	960, 956, 955, 959, 262, 263, 264, 265, 942, 267,
	935, 934, 860, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 933, 274, 0, 275, 0, 276, 277, 0,
	278, 866, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 991, 992, 878, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 932, 930, 931, 0, 294, 0, 295,
	0, 0, 974, 296, 297, 0, 298, 998, 0, 888,
	299, 0, 300, 301, 302, 303, 1232, 966, 969, 358,
	976, 304, 305, 0, 306, 307, 909, 0, 0, 219,
	308, 310, 317, 0, 975, 311, 921, 912, 923, 925,
	926, 927, 922, 0, 914, 0, 318, 977, 967, 978,
	319, 320, 321, 979, 947, 948, 0, 0, 324, 325,
	326, 327, 328, 0, 330, 329, 0, 331, 999, 980,
	332, 333, 981, 0, 334, 335, 958, 957, 336, 337,
	338, 339, 0, 340, 341, 343, 345, 342, 344, 346,
	348, 901, 347, 982, 350, 351, 354, 355, 353, 983,
	352, 857, 220, 984, 356, 879, 968, 357, 936, 359,
	360, 0, 910, 362, 911, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 515, 985, 370, 986, 993, 371,
	364, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 994, 381, 518, 382, 0, 383, 0, 384, 385,
	386, 387, 388, 389, 390, 929, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 399, 400, 401, 398, 402,
	403, 404, 405, 0, 406, 987, 407, 408, 409, 410,
	867, 411, 0, 412, 416, 417, 418, 419, 420, 421,
	422, 0, 428, 429, 902, 903, 905, 906, 424, 430,
	431, 432, 961, 433, 413, 414, 434, 435, 988, 436,
	437, 924, 904, 439, 0, 440, 441, 442, 443, 415,
	444, 448, 972, 445, 446, 447, 995, 0, 451, 452,
	450, 0, 453, 454, 455, 456, 457, 283, 900, 0,
	459, 943, 944, 945, 946, 0, 466, 0, 460, 461,
	996, 462, 997, 877, 463, 464, 465, 0, 467, 468,
	0, 861, 469, 470, 471, 473, 474, 472, 476, 962,
	477, 0, 908, 478, 479, 480, 529, 940, 990, 0,
	482, 481, 532, 0, 0, 0, 0, 483, 484, 533,
	485, 486, 487, 858, 0, 0, 0, 0, 0, 856,
	0, 0, 0, 0, 0, 0, 854, 855, 0, 0,
	0, 0, 0, 0, 0, 883, 0, 0, 1228, 881,
	913, 871, 872, 873, 869, 870, 882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 964,
	887, 0, 0, 0, 227, 229, 228, 230, 231, 489,
	928, 907, 939, 235, 897, 938, 937, 0, 236, 237,
	899, 898, 240, 241, 242, 889, 963, 243, 1000, 1001,
	495, 0, 244, 970, 0, 951, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 973, 260, 261, 954,
	952, 953, 960, 956, 955, 959, 262, 263, 264, 265,
	942, 267, 935, 934, 860, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 933, 274, 0, 275, 0, 276,
	277, 0, 278, 866, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 991, 992, 878, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 932, 930, 931, 0, 294,
	0, 295, 0, 0, 974, 296, 297, 0, 298, 998,
	0, 888, 299, 0, 300, 301, 302, 303, 965, 966,
	969, 358, 976, 304, 305, 0, 306, 307, 909, 0,
	0, 219, 308, 310, 317, 0, 975, 311, 921, 912,
	923, 925, 926, 927, 922, 0, 914, 0, 318, 977,
	967, 978, 319, 320, 321, 979, 947, 948, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	999, 980, 332, 333, 981, 0, 334, 335, 958, 957,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 901, 347, 982, 350, 351, 354, 355,
	353, 983, 352, 857, 220, 984, 356, 879, 968, 357,
	936, 359, 360, 0, 910, 362, 911, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 985, 370, 986,
	993, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 994, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 929, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 987, 407, 408,
	409, 410, 867, 411, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 0, 428, 429, 902, 903, 905, 906,
	424, 430, 431, 432, 961, 433, 413, 414, 434, 435,
	988, 436, 437, 924, 904, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 972, 445, 446, 447, 995, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	900, 0, 459, 943, 944, 945, 946, 0, 466, 0,
	460, 461, 996, 462, 997, 877, 463, 464, 465, 0,
	467, 468, 0, 861, 469, 470, 471, 473, 474, 472,
	476, 962, 477, 0, 908, 478, 479, 480, 529, 940,
	990, 0, 482, 481, 532, 0, 0, 0, 0, 483,
	484, 533, 485, 486, 487, 858, 0, 0, 0, 0,
	0, 856, 0, 0, 0, 0, 0, 0, 854, 855,
	913, 871, 872, 873, 869, 870, 882, 883, 0, 0,
	0, 881, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 964,
	887, 0, 0, 0, 227, 229, 228, 230, 231, 489,
	928, 907, 939, 235, 897, 938, 937, 0, 236, 237,
	899, 898, 240, 241, 242, 889, 963, 243, 1000, 1001,
	495, 0, 244, 970, 0, 951, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 973, 260, 261, 954,
	952, 953, 960, 956, 955, 959, 262, 263, 264, 265,
	942, 267, 935, 934, 860, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 933, 274, 0, 275, 0, 276,
	277, 0, 278, 866, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 991, 992, 878, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 932, 930, 931, 0, 294,
	0, 295, 0, 0, 974, 296, 297, 0, 298, 998,
	0, 888, 299, 0, 300, 301, 302, 303, 965, 966,
	969, 358, 976, 304, 305, 0, 306, 307, 909, 0,
	0, 219, 308, 310, 317, 0, 975, 311, 921, 912,
	923, 925, 926, 927, 922, 0, 914, 0, 318, 977,
	967, 978, 319, 320, 321, 979, 947, 948, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	999, 980, 332, 333, 981, 0, 334, 335, 958, 957,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 901, 347, 982, 350, 351, 354, 355,
	353, 983, 352, 857, 220, 984, 356, 879, 968, 357,
	936, 359, 360, 0, 910, 362, 911, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 985, 370, 986,
	993, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 994, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 929, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 987, 407, 408,
	409, 410, 867, 411, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 0, 428, 429, 902, 903, 905, 906,
	424, 430, 431, 432, 961, 433, 413, 414, 434, 435,
	988, 436, 437, 924, 904, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 972, 445, 446, 447, 995, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	900, 0, 459, 943, 944, 945, 946, 0, 466, 0,
	460, 461, 996, 462, 997, 877, 463, 464, 465, 0,
	467, 468, 0, 861, 469, 470, 471, 473, 474, 472,
	476, 962, 477, 0, 908, 478, 479, 480, 529, 940,
	990, 0, 482, 481, 532, 0, 0, 0, 0, 483,
	484, 533, 485, 486, 487, 858, 0, 0, 0, 0,
	0, 856, 0, 0, 0, 0, 0, 0, 854, 855,
	913, 871, 872, 873, 869, 870, 882, 883, 0, 0,
	0, 881, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 964,
	887, 0, 0, 0, 227, 229, 228, 230, 231, 489,
	928, 907, 939, 235, 897, 938, 937, 0, 236, 237,
	899, 898, 240, 241, 242, 889, 963, 243, 1000, 1001,
	495, 0, 244, 970, 0, 951, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 973, 260, 3668, 954,
	952, 953, 960, 956, 955, 959, 262, 263, 264, 265,
	942, 267, 935, 934, 860, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 933, 274, 0, 275, 0, 276,
	277, 0, 278, 866, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 991, 992, 878, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 932, 930, 931, 0, 294,
	0, 295, 0, 0, 974, 296, 297, 0, 298, 998,
	0, 888, 299, 0, 300, 301, 302, 303, 965, 966,
	969, 358, 976, 304, 305, 0, 306, 307, 909, 0,
	0, 219, 308, 310, 317, 0, 975, 311, 921, 912,
	923, 925, 926, 927, 922, 0, 914, 0, 318, 977,
	967, 978, 319, 320, 321, 979, 947, 948, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	999, 980, 332, 333, 981, 0, 334, 335, 958, 957,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 901, 347, 982, 350, 351, 354, 355,
	353, 983, 352, 857, 220, 984, 356, 879, 968, 357,
	936, 359, 360, 0, 910, 362, 911, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 985, 370, 986,
	993, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 994, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 929, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 987, 407, 408,
	409, 410, 867, 411, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 0, 428, 429, 902, 903, 905, 906,
	424, 430, 431, 432, 961, 433, 413, 414, 434, 435,
	988, 436, 437, 924, 904, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 972, 445, 446, 447, 995, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	900, 0, 459, 943, 944, 945, 946, 0, 466, 0,
	460, 461, 996, 462, 997, 877, 463, 464, 465, 0,
	3667, 468, 0, 861, 469, 470, 471, 473, 474, 472,
	476, 962, 477, 0, 908, 478, 479, 480, 529, 940,
	990, 0, 482, 481, 532, 0, 0, 0, 0, 483,
	484, 533, 485, 486, 487, 858, 0, 0, 0, 0,
	0, 856, 0, 0, 0, 0, 0, 0, 854, 855,
	913, 871, 872, 873, 869, 870, 882, 883, 0, 0,
	0, 881, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 964,
	887, 0, 0, 0, 227, 229, 228, 230, 231, 3666,
	928, 907, 939, 235, 897, 938, 937, 0, 236, 237,
	899, 898, 240, 241, 242, 889, 963, 243, 1000, 1001,
	495, 0, 244, 970, 0, 951, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 973, 260, 3668, 954,
	952, 953, 960, 956, 955, 959, 262, 263, 264, 265,
	942, 267, 935, 934, 860, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 933, 274, 0, 275, 0, 276,
	277, 0, 278, 866, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 991, 992, 878, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 932, 930, 931, 0, 294,
	0, 295, 0, 0, 974, 296, 297, 0, 298, 998,
	0, 888, 299, 0, 300, 301, 302, 303, 965, 966,
	969, 358, 976, 304, 305, 0, 306, 307, 909, 0,
	0, 219, 308, 310, 317, 0, 975, 311, 921, 912,
	923, 925, 926, 927, 922, 0, 914, 0, 318, 977,
	967, 978, 319, 320, 321, 979, 947, 948, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	999, 980, 332, 333, 981, 0, 334, 335, 958, 957,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 901, 347, 982, 350, 351, 354, 355,
	353, 983, 352, 857, 220, 984, 356, 879, 968, 357,
	936, 359, 360, 0, 910, 362, 911, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 985, 370, 986,
	993, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 994, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 929, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 987, 407, 408,
	409, 410, 867, 411, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 0, 428, 429, 902, 903, 905, 906,
	424, 430, 431, 432, 961, 433, 413, 414, 434, 435,
	988, 436, 437, 924, 904, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 972, 445, 446, 447, 995, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	900, 0, 459, 943, 944, 945, 946, 0, 466, 0,
	460, 461, 996, 462, 997, 877, 463, 464, 465, 0,
	3667, 468, 0, 861, 469, 470, 471, 473, 474, 472,
	476, 962, 477, 0, 908, 478, 479, 480, 529, 940,
	990, 0, 482, 481, 532, 0, 0, 0, 0, 483,
	484, 533, 485, 486, 487, 858, 0, 0, 0, 0,
	0, 856, 0, 0, 0, 0, 0, 0, 854, 855,
	913, 871, 872, 873, 2577, 2578, 882, 883, 0, 0,
	0, 881, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 964,
	887, 0, 0, 0, 227, 229, 228, 230, 231, 489,
	928, 907, 939, 235, 897, 938, 937, 0, 236, 237,
	899, 898, 240, 241, 242, 889, 963, 243, 1000, 1001,
	495, 0, 244, 970, 0, 951, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 973, 260, 261, 954,
	952, 953, 960, 956, 955, 959, 262, 263, 264, 265,
	942, 267, 935, 934, 860, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 933, 274, 0, 275, 0, 276,
	277, 0, 278, 866, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 991, 992, 878, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 932, 930, 931, 0, 294,
	0, 295, 0, 0, 974, 296, 297, 0, 298, 998,
	0, 888, 299, 0, 300, 301, 302, 303, 965, 966,
	969, 358, 976, 304, 305, 0, 306, 307, 909, 0,
	0, 219, 308, 310, 317, 0, 975, 311, 921, 912,
	923, 925, 926, 927, 922, 0, 914, 0, 318, 977,
	967, 978, 319, 320, 321, 979, 947, 948, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	999, 980, 332, 333, 981, 0, 334, 335, 958, 957,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 901, 347, 982, 350, 351, 354, 355,
	353, 983, 352, 857, 220, 984, 356, 879, 968, 357,
	936, 359, 360, 0, 910, 362, 911, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 985, 370, 986,
	993, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 994, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 929, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 987, 407, 408,
	409, 410, 867, 411, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 0, 428, 429, 902, 903, 905, 906,
	424, 430, 431, 432, 961, 433, 413, 414, 434, 435,
	988, 436, 437, 924, 904, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 972, 445, 446, 447, 995, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	900, 0, 459, 943, 944, 945, 946, 0, 466, 0,
	460, 461, 996, 462, 997, 877, 463, 464, 465, 0,
	467, 468, 0, 861, 469, 470, 471, 473, 474, 472,
	476, 962, 477, 0, 908, 478, 479, 480, 529, 940,
	990, 0, 482, 481, 532, 0, 0, 0, 0, 483,
	484, 533, 485, 486, 487, 858, 0, 0, 0, 0,
	0, 856, 0, 0, 0, 0, 0, 0, 854, 855,
	913, 871, 872, 873, 2575, 2576, 882, 883, 0, 0,
	0, 881, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 964,
	887, 0, 0, 0, 227, 229, 228, 230, 231, 489,
	928, 907, 939, 235, 897, 938, 937, 0, 236, 237,
	899, 898, 240, 241, 242, 889, 963, 243, 1000, 1001,
	495, 0, 244, 970, 0, 951, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 973, 260, 261, 954,
	952, 953, 960, 956, 955, 959, 262, 263, 264, 265,
	942, 267, 935, 934, 860, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 933, 274, 0, 275, 0, 276,
	277, 0, 278, 866, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 991, 992, 878, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 932, 930, 931, 0, 294,
	0, 295, 0, 0, 974, 296, 297, 0, 298, 998,
	0, 888, 299, 0, 300, 301, 302, 303, 965, 966,
	969, 358, 976, 304, 305, 0, 306, 307, 909, 0,
	0, 219, 308, 310, 317, 0, 975, 311, 921, 912,
	923, 925, 926, 927, 922, 0, 914, 0, 318, 977,
	967, 978, 319, 320, 321, 979, 947, 948, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	999, 980, 332, 333, 981, 0, 334, 335, 958, 957,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 901, 347, 982, 350, 351, 354, 355,
	353, 983, 352, 857, 220, 984, 356, 879, 968, 357,
	936, 359, 360, 0, 910, 362, 911, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 985, 370, 986,
	993, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 994, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 929, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 987, 407, 408,
	409, 410, 867, 411, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 0, 428, 429, 902, 903, 905, 906,
	424, 430, 431, 432, 961, 433, 413, 414, 434, 435,
	988, 436, 437, 924, 904, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 972, 445, 446, 447, 995, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	900, 0, 459, 943, 944, 945, 946, 0, 466, 0,
	460, 461, 996, 462, 997, 877, 463, 464, 465, 0,
	467, 468, 0, 861, 469, 470, 471, 473, 474, 472,
	476, 962, 477, 0, 908, 478, 479, 480, 529, 940,
	990, 0, 482, 481, 532, 0, 0, 0, 0, 483,
	484, 533, 485, 486, 487, 858, 0, 0, 0, 0,
	0, 856, 0, 0, 0, 0, 0, 0, 854, 855,
	913, 871, 872, 873, 869, 870, 882, 883, 0, 0,
	0, 881, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 964,
	887, 0, 0, 0, 227, 229, 228, 230, 231, 489,
	928, 907, 939, 235, 897, 938, 937, 0, 236, 237,
	899, 898, 240, 241, 242, 889, 963, 243, 1000, 1001,
	495, 0, 244, 970, 0, 951, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 973, 260, 261, 954,
	952, 953, 960, 956, 955, 959, 262, 263, 264, 265,
	942, 267, 935, 934, 860, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 933, 274, 0, 275, 0, 276,
	277, 0, 278, 866, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 991, 992, 878, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 932, 930, 931, 0, 294,
	0, 295, 0, 0, 974, 296, 297, 0, 298, 998,
	0, 888, 299, 0, 300, 301, 302, 303, 965, 966,
	969, 358, 976, 304, 305, 0, 306, 307, 909, 0,
	0, 219, 308, 310, 317, 0, 975, 311, 921, 912,
	923, 925, 926, 927, 922, 0, 914, 0, 318, 977,
	967, 978, 319, 320, 321, 979, 947, 948, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	999, 980, 332, 333, 981, 0, 334, 335, 958, 957,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 901, 347, 982, 350, 351, 354, 355,
	353, 983, 352, 857, 220, 984, 356, 879, 968, 357,
	936, 359, 360, 0, 910, 362, 911, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 985, 370, 986,
	993, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 994, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 929, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 987, 407, 408,
	409, 410, 867, 411, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 0, 428, 429, 902, 903, 905, 906,
	424, 430, 431, 432, 961, 433, 413, 414, 434, 435,
	988, 436, 437, 924, 904, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 972, 445, 446, 447, 995, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	900, 0, 459, 943, 944, 945, 946, 0, 466, 0,
	460, 461, 996, 462, 997, 877, 463, 464, 465, 0,
	467, 468, 0, 861, 469, 470, 471, 473, 474, 472,
	476, 962, 477, 0, 908, 478, 479, 480, 529, 940,
	990, 0, 482, 481, 532, 0, 0, 0, 0, 483,
	484, 533, 485, 486, 487, 858, 0, 0, 0, 0,
	0, 856, 0, 0, 0, 0, 0, 0, 2038, 2039,
	913, 871, 872, 873, 869, 870, 882, 883, 0, 0,
	0, 881, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 964,
	887, 0, 0, 0, 227, 229, 228, 230, 231, 489,
	928, 907, 939, 235, 897, 938, 937, 0, 236, 237,
	899, 898, 240, 241, 242, 889, 963, 243, 1000, 1001,
	495, 0, 244, 970, 0, 951, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 973, 260, 261, 954,
	952, 953, 960, 956, 955, 959, 262, 263, 264, 265,
	942, 267, 935, 934, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 933, 274, 0, 275, 0, 276,
	277, 0, 278, 866, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 991, 992, 878, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 932, 930, 931, 0, 294,
	0, 295, 0, 0, 974, 296, 297, 0, 298, 998,
	0, 888, 299, 0, 300, 301, 302, 303, 965, 966,
	969, 358, 976, 304, 305, 0, 306, 307, 909, 0,
	0, 219, 308, 310, 317, 0, 975, 311, 921, 912,
	923, 925, 926, 927, 922, 0, 914, 0, 318, 977,
	967, 978, 319, 320, 321, 979, 947, 948, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	999, 980, 332, 333, 981, 0, 334, 335, 958, 957,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 901, 347, 982, 350, 351, 354, 355,
	353, 983, 352, 0, 220, 984, 356, 879, 968, 357,
	936, 359, 360, 0, 910, 362, 911, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 985, 370, 986,
	993, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 994, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 929, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 987, 407, 408,
	409, 410, 867, 411, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 0, 428, 429, 902, 903, 905, 906,
	424, 430, 431, 432, 961, 433, 413, 414, 434, 435,
	988, 436, 437, 924, 904, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 972, 445, 446, 447, 995, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	900, 0, 459, 943, 944, 945, 946, 0, 466, 0,
	460, 461, 996, 462, 997, 877, 463, 464, 465, 0,
	467, 468, 0, 0, 469, 470, 471, 473, 474, 472,
	476, 962, 477, 0, 908, 478, 479, 480, 529, 940,
	990, 0, 482, 481, 532, 0, 0, 0, 0, 483,
	484, 533, 485, 486, 487, 0, 0, 0, 0, 0,
	0, 2224, 0, 0, 0, 0, 0, 0, 2222, 2223,
	913, 871, 872, 873, 869, 870, 882, 883, 0, 0,
	0, 881, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 964,
	887, 0, 0, 0, 227, 229, 228, 230, 231, 489,
	928, 907, 939, 235, 897, 938, 937, 0, 236, 237,
	899, 898, 240, 241, 242, 889, 963, 243, 1000, 1001,
	495, 0, 244, 970, 0, 951, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 973, 260, 261, 954,
	952, 953, 960, 956, 955, 959, 262, 263, 264, 265,
	942, 267, 935, 934, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 933, 274, 0, 275, 0, 276,
	277, 0, 278, 866, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 991, 992, 878, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 932, 930, 931, 0, 294,
	0, 295, 0, 0, 974, 296, 297, 0, 298, 998,
	0, 888, 299, 0, 300, 301, 302, 303, 965, 966,
	969, 358, 976, 304, 305, 0, 306, 307, 909, 0,
	0, 219, 308, 310, 317, 0, 975, 311, 921, 912,
	923, 925, 926, 927, 922, 0, 914, 0, 318, 977,
	967, 978, 319, 320, 321, 979, 947, 948, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	999, 980, 332, 333, 981, 0, 334, 335, 958, 957,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 901, 347, 982, 350, 351, 354, 355,
	353, 983, 352, 0, 220, 984, 356, 879, 968, 357,
	936, 359, 360, 0, 910, 362, 911, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 985, 370, 986,
	993, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 994, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 929, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 987, 407, 408,
	409, 410, 2570, 2571, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 0, 428, 429, 902, 903, 905, 906,
	424, 430, 431, 432, 961, 433, 413, 414, 434, 435,
	988, 436, 437, 924, 904, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 972, 445, 446, 447, 995, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	900, 0, 459, 943, 944, 945, 946, 0, 466, 0,
	460, 461, 996, 462, 997, 877, 463, 464, 465, 0,
	467, 468, 0, 0, 469, 470, 471, 473, 474, 472,
	476, 962, 477, 0, 908, 478, 479, 480, 529, 940,
	990, 0, 482, 481, 532, 0, 0, 0, 0, 483,
	484, 533, 485, 486, 487, 913, 871, 872, 873, 869,
	870, 882, 0, 0, 0, 0, 0, 0, 1783, 1784,
	0, 0, 221, 222, 223, 224, 225, 883, 226, 0,
	0, 881, 0, 0, 964, 887, 0, 0, 0, 227,
	229, 228, 230, 231, 489, 928, 907, 939, 235, 897,
	938, 937, 0, 236, 237, 899, 898, 240, 241, 242,
	0, 963, 243, 1000, 1001, 495, 0, 244, 970, 0,
	951, 0, 245, 246, 247, 248, 249, 250, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 973, 260, 261, 954, 952, 953, 960, 956, 955,
	959, 262, 263, 264, 265, 942, 267, 935, 934, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 933,
	274, 0, 275, 0, 276, 277, 0, 278, 499, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 991, 992,
	878, 218, 0, 0, 0, 0, 0, 289, 290, 291,
	932, 930, 931, 0, 294, 0, 295, 0, 0, 974,
	296, 297, 0, 298, 998, 0, 888, 299, 0, 300,
	301, 302, 303, 965, 966, 969, 358, 976, 304, 305,
	0, 306, 307, 909, 0, 0, 219, 308, 310, 317,
	0, 975, 311, 921, 912, 923, 925, 926, 927, 922,
	0, 914, 0, 318, 977, 967, 978, 319, 320, 321,
	979, 947, 948, 0, 0, 324, 325, 326, 327, 328,
	0, 330, 329, 0, 331, 999, 980, 332, 333, 981,
	0, 334, 335, 958, 957, 336, 337, 338, 339, 0,
	340, 341, 343, 345, 342, 344, 346, 348, 901, 347,
	982, 350, 351, 354, 355, 353, 983, 352, 0, 220,
	984, 356, 879, 968, 357, 936, 359, 360, 0, 910,
	362, 911, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 515, 985, 370, 986, 993, 371, 364, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 994, 381,
	518, 382, 0, 383, 0, 384, 385, 386, 387, 388,
	389, 390, 929, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 399, 400, 401, 398, 402, 403, 404, 405,
	0, 406, 987, 407, 408, 409, 410, 867, 411, 0,
	412, 416, 417, 418, 419, 420, 421, 422, 0, 428,
	429, 902, 903, 905, 906, 424, 430, 431, 432, 961,
	433, 413, 414, 434, 435, 988, 436, 437, 924, 904,
	439, 0, 440, 441, 442, 443, 415, 444, 448, 972,
	445, 446, 447, 995, 0, 451, 452, 450, 0, 453,
	454, 455, 456, 457, 283, 900, 0, 459, 943, 944,
	945, 946, 0, 466, 0, 460, 461, 996, 462, 997,
	877, 463, 464, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 473, 474, 472, 476, 962, 477, 0, 908,
	478, 479, 480, 529, 940, 990, 0, 482, 481, 532,
	0, 0, 0, 0, 483, 484, 533, 485, 486, 487,
	913, 871, 872, 873, 869, 870, 882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 883, 226, 0, 0, 881, 0, 0, 964,
	887, 0, 0, 0, 227, 229, 228, 230, 231, 0,
	928, 907, 939, 235, 897, 938, 937, 0, 236, 237,
	899, 898, 240, 241, 242, 889, 963, 243, 1000, 1001,
	495, 0, 244, 970, 0, 951, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 973, 260, 3668, 954,
	952, 953, 960, 956, 955, 959, 262, 263, 264, 265,
	942, 267, 935, 934, 860, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 933, 274, 0, 275, 0, 276,
	277, 0, 278, 866, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 991, 992, 878, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 932, 930, 931, 0, 294,
	0, 295, 0, 0, 974, 296, 297, 0, 298, 998,
	0, 888, 299, 0, 300, 301, 302, 303, 965, 966,
	969, 358, 0, 304, 305, 0, 306, 307, 909, 0,
	0, 219, 308, 310, 317, 0, 975, 311, 921, 912,
	923, 925, 926, 927, 922, 0, 914, 0, 318, 0,
	967, 0, 319, 320, 321, 979, 947, 948, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	999, 980, 332, 333, 0, 0, 334, 335, 958, 957,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 901, 347, 982, 350, 351, 354, 355,
	353, 983, 352, 857, 220, 0, 356, 879, 968, 357,
	936, 359, 360, 0, 910, 362, 911, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 985, 370, 986,
	993, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 994, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 929, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 987, 407, 408,
	409, 410, 867, 411, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 0, 428, 429, 902, 903, 905, 906,
	424, 430, 431, 432, 961, 433, 413, 414, 434, 435,
	0, 436, 437, 924, 904, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 972, 445, 446, 447, 995, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	900, 0, 459, 943, 944, 945, 946, 0, 466, 0,
	460, 461, 996, 462, 997, 877, 463, 464, 465, 0,
	3667, 468, 0, 861, 469, 470, 471, 473, 474, 472,
	476, 962, 477, 0, 908, 478, 479, 480, 529, 940,
	990, 0, 482, 481, 532, 0, 0, 0, 0, 483,
	484, 533, 485, 486, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 847, 0, 1038, 0, 0, 854, 855,
	0, 0, 0, 0, 0, 0, 0, 883, 0, 0,
	0, 881, 221, 222, 223, 224, 225, 0, 226, 0,
	0, 0, 0, 0, 964, 0, 0, 0, 0, 227,
	229, 228, 230, 231, 489, 490, 232, 491, 235, 233,
	234, 492, 0, 236, 237, 238, 239, 240, 241, 242,
	0, 963, 243, 493, 494, 495, 0, 244, 970, 0,
	951, 0, 245, 246, 247, 248, 249, 250, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 973, 260, 261, 954, 952, 953, 960, 956, 955,
	959, 262, 263, 264, 265, 266, 267, 497, 498, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 499, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 991, 992,
	0, 218, 0, 0, 0, 0, 0, 289, 290, 291,
	502, 292, 293, 0, 294, 0, 295, 0, 0, 974,
	296, 297, 0, 298, 998, 0, 504, 299, 0, 300,
	301, 302, 303, 965, 966, 969, 358, 976, 304, 305,
	0, 306, 307, 309, 0, 0, 219, 308, 310, 317,
	0, 975, 311, 508, 313, 312, 314, 315, 316, 509,
	0, 510, 0, 318, 977, 967, 978, 319, 320, 321,
	979, 322, 323, 0, 0, 324, 325, 326, 327, 328,
	1024, 330, 329, 0, 331, 999, 980, 332, 333, 981,
	0, 334, 335, 958, 957, 336, 337, 338, 339, 0,
	340, 341, 343, 345, 342, 344, 346, 348, 349, 347,
	982, 350, 351, 354, 355, 353, 983, 352, 0, 220,
	984, 356, 0, 968, 357, 514, 359, 360, 0, 361,
	362, 363, 0, 1030, 365, 366, 367, 0, 0, 368,
	369, 515, 985, 370, 986, 993, 371, 364, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 994, 381,
	518, 382, 0, 383, 0, 384, 385, 386, 387, 388,
	389, 390, 519, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 399, 400, 401, 398, 402, 403, 404, 405,
	0, 406, 987, 407, 408, 409, 410, 520, 1032, 0,
	412, 416, 417, 418, 419, 420, 421, 422, 184, 428,
	429, 423, 425, 426, 427, 424, 430, 431, 432, 961,
	433, 413, 414, 434, 435, 988, 436, 437, 521, 438,
	439, 0, 440, 441, 442, 443, 415, 444, 448, 449,
	445, 446, 447, 995, 0, 451, 452, 450, 186, 453,
	454, 455, 456, 457, 283, 458, 0, 459, 523, 524,
	525, 526, 0, 466, 0, 460, 461, 996, 462, 997,
	0, 463, 464, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 473, 474, 472, 476, 962, 477, 0, 475,
	478, 479, 480, 1354, 530, 531, 0, 482, 481, 532,
	1038, 0, 0, 178, 483, 484, 533, 485, 486, 487,
	0, 179, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 964,
	1028, 0, 1653, 0, 227, 229, 228, 230, 231, 489,
	490, 232, 491, 235, 233, 234, 492, 0, 236, 237,
	238, 239, 240, 241, 242, 0, 963, 243, 493, 494,
	495, 0, 244, 970, 0, 951, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 973, 260, 261, 954,
	952, 953, 960, 956, 955, 959, 262, 263, 264, 265,
	266, 267, 497, 498, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 499, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 991, 992, 0, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 502, 292, 293, 0, 294,
	0, 295, 0, 0, 974, 296, 297, 0, 298, 998,
	0, 504, 299, 0, 300, 301, 302, 303, 965, 966,
	969, 358, 976, 304, 305, 0, 306, 307, 309, 0,
	0, 219, 308, 310, 317, 0, 975, 311, 508, 313,
	312, 314, 315, 316, 509, 0, 510, 0, 318, 977,
	967, 978, 319, 320, 321, 979, 322, 323, 0, 0,
	324, 325, 326, 327, 328, 1024, 330, 329, 0, 331,
	999, 980, 332, 333, 981, 0, 334, 335, 958, 957,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 349, 347, 982, 350, 351, 354, 355,
	353, 983, 352, 0, 220, 984, 356, 0, 968, 357,
	514, 359, 360, 0, 361, 362, 363, 0, 1030, 365,
	366, 367, 0, 0, 368, 369, 515, 985, 370, 986,
	993, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 994, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 519, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 987, 407, 408,
	409, 410, 520, 1032, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 184, 428, 429, 423, 425, 426, 427,
	424, 430, 431, 432, 961, 433, 413, 414, 434, 435,
	988, 436, 437, 521, 438, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 449, 445, 446, 447, 995, 0,
	451, 452, 450, 186, 453, 454, 455, 456, 457, 283,
	458, 0, 459, 523, 524, 525, 526, 0, 466, 0,
	460, 461, 996, 462, 997, 0, 463, 464, 465, 0,
	467, 468, 0, 0, 469, 470, 471, 473, 474, 472,
	476, 962, 477, 0, 475, 478, 479, 480, 1354, 530,
	531, 0, 482, 481, 532, 2723, 0, 1038, 178, 483,
	484, 533, 485, 486, 487, 0, 179, 0, 0, 0,
	0, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 1028, 964, 1653, 0, 0,
	0, 227, 229, 228, 230, 231, 489, 490, 232, 491,
	235, 233, 234, 492, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 963, 243, 493, 494, 495, 0, 244,
	970, 0, 951, 0, 245, 246, 247, 248, 249, 250,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 973, 260, 261, 954, 952, 953, 960,
	956, 955, 959, 262, 263, 264, 265, 266, 267, 497,
	498, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 273, 274, 0, 275, 0, 276, 277, 0, 278,
	499, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	991, 992, 0, 218, 0, 0, 0, 0, 0, 289,
	290, 291, 502, 292, 293, 0, 294, 0, 295, 0,
	0, 974, 296, 297, 0, 298, 998, 0, 504, 299,
	0, 300, 301, 302, 303, 965, 966, 969, 358, 976,
	304, 305, 0, 306, 307, 309, 0, 0, 219, 308,
	310, 317, 0, 975, 311, 508, 313, 312, 314, 315,
	316, 509, 0, 510, 0, 318, 977, 967, 978, 319,
	320, 321, 979, 322, 323, 0, 0, 324, 325, 326,
	327, 328, 1024, 330, 329, 0, 331, 999, 980, 332,
	333, 981, 0, 334, 335, 958, 957, 336, 337, 338,
	339, 0, 340, 341, 343, 345, 342, 344, 346, 348,
	349, 347, 982, 350, 351, 354, 355, 353, 983, 352,
	0, 220, 984, 356, 0, 968, 357, 514, 359, 360,
	0, 361, 362, 363, 0, 1030, 365, 366, 367, 0,
	0, 368, 369, 515, 985, 370, 986, 993, 371, 364,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	994, 381, 518, 382, 0, 383, 0, 384, 385, 386,
	387, 388, 389, 390, 519, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 399, 400, 401, 398, 402, 403,
	404, 405, 0, 406, 987, 407, 408, 409, 410, 520,
	1032, 0, 412, 416, 417, 418, 419, 420, 421, 422,
	0, 428, 429, 423, 425, 426, 427, 424, 430, 431,
	432, 961, 433, 413, 414, 434, 435, 988, 436, 437,
	521, 438, 439, 0, 440, 441, 442, 443, 415, 444,
	448, 449, 445, 446, 447, 995, 0, 451, 452, 450,
	0, 453, 454, 455, 456, 457, 283, 458, 0, 459,
	523, 524, 525, 526, 0, 466, 0, 460, 461, 996,
	462, 997, 0, 463, 464, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 473, 474, 472, 476, 962, 477,
	0, 475, 478, 479, 480, 529, 530, 531, 0, 482,
	481, 532, 1020, 0, 1038, 0, 483, 484, 533, 485,
	486, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 1028, 964, 1026, 0, 0, 0, 227, 229,
	228, 230, 231, 489, 490, 232, 491, 235, 233, 234,
	492, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	963, 243, 493, 494, 495, 0, 244, 970, 0, 951,
	0, 245, 246, 247, 248, 249, 250, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	973, 260, 261, 954, 952, 953, 960, 956, 955, 959,
	262, 263, 264, 265, 266, 267, 497, 498, 0, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 273, 274,
	0, 275, 0, 276, 277, 0, 278, 499, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 991, 992, 0,
	218, 0, 0, 0, 0, 0, 289, 290, 291, 502,
	292, 293, 0, 294, 0, 295, 0, 0, 974, 296,
	297, 0, 298, 998, 0, 504, 299, 0, 300, 301,
	302, 303, 965, 966, 969, 358, 976, 304, 305, 0,
	306, 307, 309, 0, 0, 219, 308, 310, 317, 0,
	975, 311, 508, 313, 312, 314, 315, 316, 509, 0,
	510, 0, 318, 977, 967, 978, 319, 320, 321, 979,
	322, 323, 0, 0, 324, 325, 326, 327, 328, 1024,
	330, 329, 0, 331, 999, 980, 332, 333, 981, 0,
	334, 335, 958, 957, 336, 337, 338, 339, 0, 340,
	341, 343, 345, 342, 344, 346, 348, 349, 347, 982,
	350, 351, 354, 355, 353, 983, 352, 0, 220, 984,
	356, 0, 968, 357, 514, 359, 360, 0, 361, 362,
	363, 0, 1030, 365, 366, 367, 0, 0, 368, 369,
	515, 985, 370, 986, 993, 371, 364, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 994, 381, 518,
	382, 0, 383, 0, 384, 385, 386, 387, 388, 389,
	390, 519, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 399, 400, 401, 398, 402, 403, 404, 405, 0,
	406, 987, 407, 408, 409, 410, 520, 1032, 0, 412,
	416, 417, 418, 419, 420, 421, 422, 0, 428, 429,
	423, 425, 426, 427, 424, 430, 431, 432, 961, 433,
	413, 414, 434, 435, 988, 436, 437, 521, 438, 439,
	0, 440, 441, 442, 443, 415, 444, 448, 449, 445,
	446, 447, 995, 0, 451, 452, 450, 0, 453, 454,
	455, 456, 457, 283, 458, 0, 459, 523, 524, 525,
	526, 0, 466, 0, 460, 461, 996, 462, 997, 0,
	463, 464, 465, 0, 467, 468, 0, 0, 469, 470,
	471, 473, 474, 472, 476, 962, 477, 0, 475, 478,
	479, 480, 529, 530, 531, 0, 482, 481, 532, 1038,
	0, 0, 0, 483, 484, 533, 485, 486, 487, 0,
	0, 0, 0, 0, 0, 0, 221, 222, 223, 224,
	225, 0, 226, 0, 0, 0, 0, 0, 964, 1028,
	0, 1026, 0, 227, 229, 228, 230, 231, 489, 490,
	232, 491, 235, 233, 234, 492, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 963, 243, 493, 494, 495,
	0, 244, 970, 0, 951, 0, 245, 246, 247, 248,
	249, 250, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 973, 260, 261, 954, 952,
	953, 960, 956, 955, 959, 262, 263, 264, 265, 266,
	267, 497, 498, 0, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 273, 274, 0, 275, 0, 276, 277,
	0, 278, 499, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 991, 992, 0, 218, 0, 0, 0, 0,
	0, 289, 290, 291, 502, 292, 293, 0, 294, 0,
	295, 0, 0, 974, 296, 297, 0, 298, 998, 0,
	504, 299, 0, 300, 301, 302, 303, 965, 966, 969,
	358, 976, 304, 305, 0, 306, 307, 309, 0, 0,
	219, 308, 310, 317, 0, 975, 311, 508, 313, 312,
	314, 315, 316, 509, 0, 510, 0, 318, 977, 967,
	978, 319, 320, 321, 979, 322, 323, 0, 0, 324,
	325, 326, 327, 328, 1024, 330, 329, 0, 331, 999,
	980, 332, 333, 981, 0, 334, 335, 958, 957, 336,
	337, 338, 339, 0, 340, 341, 343, 345, 342, 344,
	346, 348, 349, 347, 982, 350, 351, 354, 355, 353,
	983, 352, 0, 220, 984, 356, 0, 968, 357, 514,
	359, 360, 0, 361, 362, 363, 0, 1030, 365, 366,
	367, 0, 0, 368, 369, 515, 985, 370, 986, 993,
	371, 364, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 994, 381, 518, 382, 0, 383, 0, 384,
	385, 386, 387, 388, 389, 390, 519, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 399, 400, 401, 398,
	402, 403, 404, 405, 0, 406, 987, 407, 408, 409,
	410, 520, 1032, 0, 412, 416, 417, 418, 419, 420,
	421, 422, 0, 428, 429, 423, 425, 426, 427, 424,
	430, 431, 432, 961, 433, 413, 414, 434, 435, 988,
	436, 437, 521, 438, 439, 0, 440, 441, 442, 443,
	415, 444, 448, 449, 445, 446, 447, 995, 0, 451,
	452, 450, 0, 453, 454, 455, 456, 457, 283, 458,
	0, 459, 523, 524, 525, 526, 0, 466, 0, 460,
	461, 996, 462, 997, 0, 463, 464, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 473, 474, 472, 476,
	962, 477, 0, 475, 478, 479, 480, 529, 530, 531,
	0, 482, 481, 532, 1038, 0, 0, 0, 483, 484,
	533, 485, 486, 487, 0, 0, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 964, 1028, 0, 1026, 0, 227, 229,
	228, 230, 231, 489, 490, 232, 491, 235, 233, 234,
	492, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	963, 243, 493, 494, 495, 0, 244, 970, 0, 951,
	0, 245, 246, 247, 248, 249, 250, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	973, 260, 261, 954, 952, 953, 960, 956, 955, 959,
	262, 263, 264, 265, 266, 267, 497, 498, 0, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 273, 274,
	0, 275, 0, 276, 277, 0, 278, 499, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 991, 992, 0,
	218, 0, 0, 0, 0, 0, 289, 290, 291, 502,
	292, 293, 0, 294, 0, 295, 0, 0, 974, 296,
	297, 0, 298, 998, 0, 504, 299, 0, 300, 301,
	302, 303, 965, 966, 969, 358, 976, 304, 305, 0,
	306, 307, 309, 0, 0, 219, 308, 310, 317, 0,
	975, 311, 508, 313, 312, 314, 315, 316, 509, 0,
	510, 0, 318, 977, 967, 978, 319, 320, 321, 979,
	322, 323, 0, 0, 324, 325, 326, 327, 328, 0,
	330, 329, 0, 331, 999, 980, 332, 333, 981, 0,
	334, 335, 958, 957, 336, 337, 338, 339, 0, 340,
	341, 343, 345, 342, 344, 346, 348, 349, 347, 982,
	350, 351, 354, 355, 353, 983, 352, 0, 220, 984,
	356, 0, 968, 357, 514, 359, 360, 0, 361, 362,
	363, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	515, 985, 370, 986, 993, 371, 364, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 994, 381, 518,
	382, 0, 383, 0, 384, 385, 386, 387, 388, 389,
	390, 519, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 399, 400, 401, 398, 402, 403, 404, 405, 0,
	406, 987, 407, 408, 409, 410, 520, 1032, 0, 412,
	416, 417, 418, 419, 420, 421, 422, 0, 428, 429,
	423, 425, 426, 427, 424, 430, 431, 432, 961, 433,
	413, 414, 434, 435, 988, 436, 437, 521, 438, 439,
	0, 440, 441, 442, 443, 415, 444, 448, 449, 445,
	446, 447, 995, 0, 451, 452, 450, 0, 453, 454,
	455, 456, 457, 283, 458, 0, 459, 523, 524, 525,
	526, 0, 466, 0, 460, 461, 996, 462, 997, 0,
	463, 464, 465, 0, 467, 468, 0, 0, 469, 470,
	471, 473, 474, 472, 476, 962, 477, 0, 475, 478,
	479, 480, 529, 530, 531, 0, 482, 481, 532, 847,
	0, 1209, 0, 483, 484, 533, 485, 486, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 222,
	223, 224, 225, 0, 226, 0, 0, 0, 0, 0,
	488, 1554, 0, 0, 0, 227, 229, 228, 230, 231,
	489, 490, 232, 491, 235, 233, 234, 492, 0, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 243, 493,
	494, 495, 0, 244, 496, 0, 1101, 0, 245, 246,
	247, 248, 249, 250, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 973, 260, 261,
	0, 0, 0, 0, 0, 0, 0, 262, 263, 264,
	265, 266, 267, 497, 498, 0, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 273, 274, 0, 275, 0,
	276, 277, 0, 278, 499, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 500, 501, 0, 218, 0, 0,
	0, 0, 0, 289, 290, 291, 502, 292, 293, 0,
	294, 0, 295, 0, 0, 974, 296, 297, 0, 298,
	503, 0, 504, 299, 0, 300, 301, 302, 303, 505,
	506, 507, 358, 976, 304, 305, 0, 306, 307, 309,
	0, 0, 0, 308, 310, 317, 0, 975, 311, 508,
	313, 312, 314, 315, 316, 509, 0, 510, 0, 318,
	977, 511, 978, 319, 320, 321, 979, 322, 323, 0,
	0, 324, 325, 326, 327, 328, 0, 330, 329, 0,
	331, 512, 980, 332, 333, 981, 0, 334, 335, 0,
	0, 336, 337, 338, 339, 0, 340, 341, 343, 345,
	342, 344, 346, 348, 349, 347, 982, 350, 351, 354,
	355, 353, 983, 352, 0, 0, 984, 356, 0, 513,
	357, 514, 359, 360, 0, 361, 362, 363, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 515, 985, 370,
	986, 516, 371, 364, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 517, 381, 518, 382, 0, 383,
	0, 384, 385, 386, 387, 388, 389, 390, 519, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 399, 400,
	401, 398, 402, 403, 404, 405, 0, 406, 987, 407,
	408, 409, 410, 520, 411, 0, 412, 416, 417, 418,
	419, 420, 421, 422, 184, 428, 429, 423, 425, 426,
	427, 424, 430, 431, 432, 0, 433, 413, 414, 434,
	435, 988, 436, 437, 521, 438, 439, 0, 440, 441,
	442, 443, 415, 444, 448, 449, 445, 446, 447, 522,
	0, 451, 452, 450, 186, 453, 454, 455, 456, 457,
	283, 458, 0, 459, 523, 524, 525, 526, 0, 466,
	0, 460, 461, 527, 462, 528, 0, 463, 464, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 473, 474,
	472, 476, 0, 477, 0, 475, 478, 479, 480, 1354,
	530, 531, 0, 482, 481, 532, 1351, 0, 1209, 178,
	483, 484, 533, 485, 486, 487, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 488, 153, 0,
	0, 0, 227, 229, 228, 230, 231, 489, 490, 232,
	491, 235, 233, 234, 492, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 493, 494, 495, 0,
	244, 496, 0, 1101, 0, 245, 246, 247, 248, 249,
	250, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 973, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	497, 498, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 499, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 500, 501, 0, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 502, 292, 293, 0, 294, 0, 295,
	0, 0, 974, 296, 297, 0, 298, 503, 0, 504,
	299, 0, 300, 301, 302, 303, 505, 506, 507, 358,
	976, 304, 305, 0, 306, 307, 309, 0, 0, 0,
	308, 310, 317, 0, 975, 311, 508, 313, 312, 314,
	315, 316, 509, 0, 510, 0, 318, 977, 511, 978,
	319, 320, 321, 979, 322, 323, 0, 0, 324, 325,
	326, 327, 328, 0, 330, 329, 0, 331, 512, 980,
	332, 333, 981, 0, 334, 335, 0, 0, 336, 337,
	338, 339, 0, 340, 341, 343, 345, 342, 344, 346,
	348, 349, 347, 982, 350, 351, 354, 355, 353, 983,
	352, 0, 0, 984, 356, 0, 513, 357, 514, 359,
	360, 0, 361, 362, 363, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 515, 985, 370, 986, 516, 371,
	364, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 517, 381, 518, 382, 0, 383, 0, 384, 385,
	386, 387, 388, 389, 390, 519, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 399, 400, 401, 398, 402,
	403, 404, 405, 0, 406, 987, 407, 408, 409, 410,
	520, 411, 0, 412, 416, 417, 418, 419, 420, 421,
	422, 184, 428, 429, 423, 425, 426, 427, 424, 430,
	431, 432, 0, 433, 413, 414, 434, 435, 988, 436,
	437, 521, 438, 439, 0, 440, 441, 442, 443, 415,
	444, 448, 449, 445, 446, 447, 522, 0, 451, 452,
	450, 186, 453, 454, 455, 456, 457, 283, 458, 0,
	459, 523, 524, 525, 526, 0, 466, 0, 460, 461,
	527, 462, 528, 0, 463, 464, 465, 0, 467, 468,
	0, 0, 469, 470, 471, 473, 474, 472, 476, 0,
	477, 0, 475, 478, 479, 480, 1354, 530, 531, 0,
	482, 481, 532, 0, 0, 0, 178, 483, 484, 533,
	485, 486, 487, 0, 179, 0, 0, 0, 0, 1209,
	1208, 0, 0, 0, 0, 1206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 221, 222, 223, 224,
	225, 0, 226, 0, 0, 0, 0, 0, 488, 0,
	0, 0, 0, 227, 229, 228, 230, 231, 489, 490,
	232, 491, 235, 233, 234, 492, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 493, 494, 495,
	0, 244, 496, 0, 1101, 0, 245, 246, 247, 248,
	249, 250, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 973, 260, 261, 0, 0,
	0, 0, 0, 0, 0, 262, 263, 264, 265, 266,
	267, 497, 498, 0, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 273, 274, 0, 275, 0, 276, 277,
	0, 278, 499, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 500, 501, 0, 218, 0, 0, 0, 0,
	0, 289, 290, 291, 502, 292, 293, 0, 294, 0,
	295, 0, 0, 974, 296, 297, 0, 298, 503, 0,
	504, 299, 0, 300, 301, 302, 303, 505, 506, 507,
	358, 976, 304, 305, 0, 306, 307, 309, 0, 0,
	0, 308, 310, 317, 0, 975, 311, 508, 313, 312,
	314, 315, 316, 509, 0, 510, 0, 318, 977, 511,
	978, 319, 320, 321, 979, 322, 323, 0, 0, 324,
	325, 326, 327, 328, 0, 330, 329, 0, 331, 512,
	980, 332, 333, 981, 0, 334, 335, 0, 0, 336,
	337, 338, 339, 0, 340, 341, 343, 345, 342, 344,
	346, 348, 349, 347, 982, 350, 351, 354, 355, 353,
	983, 352, 0, 0, 984, 356, 0, 513, 357, 514,
	359, 360, 0, 361, 362, 363, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 515, 985, 370, 986, 516,
	371, 364, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 517, 381, 518, 382, 0, 383, 0, 384,
	385, 386, 387, 388, 389, 390, 519, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 399, 400, 401, 398,
	402, 403, 404, 405, 0, 406, 987, 407, 408, 409,
	410, 520, 411, 0, 412, 416, 417, 418, 419, 420,
	421, 422, 0, 428, 429, 423, 425, 426, 427, 424,
	430, 431, 432, 0, 433, 413, 414, 434, 435, 988,
	436, 437, 521, 438, 439, 0, 440, 441, 442, 443,
	415, 444, 448, 449, 445, 446, 447, 522, 0, 451,
	452, 450, 0, 453, 454, 455, 456, 457, 283, 458,
	0, 459, 523, 524, 525, 526, 0, 466, 0, 460,
	461, 527, 462, 528, 0, 463, 464, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 473, 474, 472, 476,
	0, 477, 0, 475, 478, 479, 480, 529, 530, 531,
	0, 482, 481, 532, 0, 0, 0, 0, 483, 484,
	533, 485, 486, 487, 1209, 1208, 0, 0, 0, 0,
	1206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 2929, 226, 0, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 227, 229,
	228, 230, 231, 489, 490, 232, 491, 235, 233, 234,
	492, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 243, 493, 494, 495, 0, 244, 496, 0, 1101,
	0, 245, 246, 247, 248, 249, 250, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	973, 260, 261, 0, 0, 0, 0, 0, 0, 0,
	262, 263, 264, 265, 266, 267, 497, 498, 0, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 273, 274,
	0, 275, 0, 276, 277, 0, 278, 499, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 500, 501, 0,
	218, 0, 0, 0, 0, 0, 289, 290, 291, 502,
	292, 293, 0, 294, 0, 295, 0, 0, 974, 296,
	297, 0, 298, 503, 0, 504, 299, 0, 300, 301,
	302, 303, 505, 506, 507, 358, 976, 304, 305, 0,
	306, 307, 309, 0, 0, 0, 308, 310, 317, 0,
	975, 311, 508, 313, 312, 314, 315, 316, 509, 0,
	510, 0, 318, 977, 511, 978, 319, 320, 321, 979,
	322, 323, 0, 0, 324, 325, 326, 327, 328, 0,
	330, 329, 0, 331, 512, 980, 332, 333, 981, 0,
	334, 335, 0, 0, 336, 337, 338, 339, 0, 340,
	341, 343, 345, 342, 344, 346, 348, 349, 347, 982,
	350, 351, 354, 355, 353, 983, 352, 0, 0, 984,
	356, 0, 513, 357, 514, 359, 360, 0, 361, 362,
	363, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	515, 985, 370, 986, 516, 371, 364, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 517, 381, 518,
	382, 0, 383, 0, 384, 385, 386, 387, 388, 389,
	390, 519, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 399, 400, 401, 398, 402, 403, 404, 405, 0,
	406, 987, 407, 408, 409, 410, 520, 411, 0, 412,
	416, 417, 418, 419, 420, 421, 422, 0, 428, 429,
	423, 425, 426, 427, 424, 430, 431, 432, 0, 433,
	413, 414, 434, 435, 988, 436, 437, 521, 438, 439,
	0, 440, 441, 442, 443, 415, 444, 448, 449, 445,
	446, 447, 522, 0, 451, 452, 450, 0, 453, 454,
	455, 456, 457, 283, 458, 0, 459, 523, 524, 525,
	526, 0, 466, 0, 460, 461, 527, 462, 528, 0,
	463, 464, 465, 0, 467, 468, 0, 0, 469, 470,
	471, 473, 474, 472, 476, 0, 477, 0, 475, 478,
	479, 480, 529, 530, 531, 0, 482, 481, 532, 0,
	0, 0, 0, 483, 484, 533, 485, 486, 487, 1209,
	1208, 0, 0, 0, 0, 1206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 222, 223, 224,
	225, 1218, 226, 0, 0, 0, 0, 0, 488, 0,
	0, 0, 0, 227, 229, 228, 230, 231, 489, 490,
	232, 491, 235, 233, 234, 492, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 493, 494, 495,
	0, 244, 496, 0, 1101, 0, 245, 246, 247, 248,
	249, 250, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 973, 260, 261, 0, 0,
	0, 0, 0, 0, 0, 262, 263, 264, 265, 266,
	267, 497, 498, 0, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 273, 274, 0, 275, 0, 276, 277,
	0, 278, 499, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 500, 501, 0, 218, 0, 0, 0, 0,
	0, 289, 290, 291, 502, 292, 293, 0, 294, 0,
	295, 0, 0, 974, 296, 297, 0, 298, 503, 0,
	504, 299, 0, 300, 301, 302, 303, 505, 506, 507,
	358, 976, 304, 305, 0, 306, 307, 309, 0, 0,
	0, 308, 310, 317, 0, 975, 311, 508, 313, 312,
	314, 315, 316, 509, 0, 510, 0, 318, 977, 511,
	978, 319, 320, 321, 979, 322, 323, 0, 0, 324,
	325, 326, 327, 328, 0, 330, 329, 0, 331, 512,
	980, 332, 333, 981, 0, 334, 335, 0, 0, 336,
	337, 338, 339, 0, 340, 341, 343, 345, 342, 344,
	346, 348, 349, 347, 982, 350, 351, 354, 355, 353,
	983, 352, 0, 0, 984, 356, 0, 513, 357, 514,
	359, 360, 0, 361, 362, 363, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 515, 985, 370, 986, 516,
	371, 364, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 517, 381, 518, 382, 0, 383, 0, 384,
	385, 386, 387, 388, 389, 390, 519, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 399, 400, 401, 398,
	402, 403, 404, 405, 0, 406, 987, 407, 408, 409,
	410, 520, 411, 0, 412, 416, 417, 418, 419, 420,
	421, 422, 0, 428, 429, 423, 425, 426, 427, 424,
	430, 431, 432, 0, 433, 413, 414, 434, 435, 988,
	436, 437, 521, 438, 439, 0, 440, 441, 442, 443,
	415, 444, 448, 449, 445, 446, 447, 522, 0, 451,
	452, 450, 0, 453, 454, 455, 456, 457, 283, 458,
	0, 459, 523, 524, 525, 526, 0, 466, 0, 460,
	461, 527, 462, 528, 0, 463, 464, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 473, 474, 472, 476,
	0, 477, 0, 475, 478, 479, 480, 529, 530, 531,
	0, 482, 481, 532, 1038, 0, 0, 0, 483, 484,
	533, 485, 486, 487, 0, 0, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 964, 0, 0, 1361, 0, 227, 229,
	228, 230, 231, 489, 490, 232, 491, 235, 233, 234,
	492, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	963, 243, 493, 494, 495, 0, 244, 970, 0, 951,
	0, 245, 246, 247, 248, 249, 250, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	973, 260, 261, 954, 952, 953, 960, 956, 955, 959,
	262, 263, 264, 265, 266, 267, 497, 498, 0, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 273, 274,
	0, 275, 0, 276, 277, 0, 278, 499, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 991, 992, 0,
	218, 0, 0, 0, 0, 0, 289, 290, 291, 502,
	292, 293, 0, 294, 0, 295, 0, 0, 974, 296,
	297, 0, 298, 998, 0, 504, 299, 0, 300, 301,
	302, 303, 965, 966, 969, 358, 976, 304, 305, 0,
	306, 307, 309, 0, 0, 219, 308, 310, 317, 0,
	975, 311, 508, 313, 312, 314, 315, 316, 509, 0,
	510, 0, 318, 977, 967, 978, 319, 320, 321, 979,
	322, 323, 0, 0, 324, 325, 326, 327, 328, 0,
	330, 329, 0, 331, 999, 980, 332, 333, 981, 0,
	334, 335, 958, 957, 336, 337, 338, 339, 0, 340,
	341, 343, 345, 342, 344, 346, 348, 349, 347, 982,
	350, 351, 354, 355, 353, 983, 352, 0, 220, 984,
	356, 0, 968, 357, 514, 359, 360, 0, 361, 362,
	363, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	515, 985, 370, 986, 993, 371, 364, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 994, 381, 518,
	382, 0, 383, 0, 384, 385, 386, 387, 388, 389,
	390, 519, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 399, 400, 401, 398, 402, 403, 404, 405, 0,
	406, 987, 407, 408, 409, 410, 520, 411, 0, 412,
	416, 417, 418, 419, 420, 421, 422, 0, 428, 429,
	423, 425, 426, 427, 424, 430, 431, 432, 961, 433,
	413, 414, 434, 435, 988, 436, 437, 521, 438, 439,
	0, 440, 441, 442, 443, 415, 444, 448, 449, 445,
	446, 447, 995, 0, 451, 452, 450, 0, 453, 454,
	455, 456, 457, 283, 458, 0, 459, 523, 524, 525,
	526, 0, 466, 0, 460, 461, 996, 462, 997, 0,
	463, 464, 465, 0, 467, 468, 0, 0, 469, 470,
	471, 473, 474, 472, 476, 962, 477, 0, 475, 478,
	479, 480, 529, 530, 531, 0, 482, 481, 532, 847,
	0, 215, 0, 483, 484, 533, 485, 486, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 222,
	223, 224, 225, 0, 226, 0, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 227, 229, 228, 230, 231,
	489, 490, 232, 491, 235, 233, 234, 492, 0, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 243, 493,
	494, 495, 0, 244, 496, 0, 0, 0, 245, 246,
	247, 248, 249, 250, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 0, 0, 262, 263, 264,
	265, 266, 267, 497, 498, 0, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 273, 274, 0, 275, 0,
	276, 277, 0, 278, 499, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 500, 501, 0, 0, 0, 0,
	0, 0, 0, 289, 290, 291, 502, 292, 293, 0,
	294, 0, 295, 0, 0, 0, 296, 297, 0, 298,
	503, 0, 504, 299, 0, 300, 301, 302, 303, 505,
	506, 507, 358, 0, 304, 305, 0, 306, 307, 309,
	0, 0, 0, 308, 310, 317, 0, 0, 311, 508,
	313, 312, 314, 315, 316, 509, 0, 510, 0, 318,
	0, 511, 0, 319, 320, 321, 0, 322, 323, 0,
	0, 324, 325, 326, 327, 328, 0, 330, 329, 0,
	331, 512, 0, 332, 333, 0, 0, 334, 335, 0,
	0, 336, 337, 338, 339, 0, 340, 341, 343, 345,
	342, 344, 346, 348, 349, 347, 0, 350, 351, 354,
	355, 353, 0, 352, 0, 0, 0, 356, 0, 513,
	357, 514, 359, 360, 0, 361, 362, 363, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 515, 0, 370,
	0, 516, 371, 364, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 517, 381, 518, 382, 0, 383,
	0, 384, 385, 386, 387, 388, 389, 390, 519, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 399, 400,
	401, 398, 402, 403, 404, 405, 0, 406, 0, 407,
	408, 409, 410, 520, 411, 0, 412, 416, 417, 418,
	419, 420, 421, 422, 184, 428, 429, 423, 425, 426,
	427, 424, 430, 431, 432, 0, 433, 413, 414, 434,
	435, 0, 436, 437, 521, 438, 439, 0, 440, 441,
	442, 443, 415, 444, 448, 449, 445, 446, 447, 522,
	0, 451, 452, 450, 186, 453, 454, 455, 456, 457,
	283, 458, 0, 459, 523, 524, 525, 526, 0, 466,
	0, 460, 461, 527, 462, 528, 0, 463, 464, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 473, 474,
	472, 476, 0, 477, 0, 475, 478, 479, 480, 1354,
	530, 531, 0, 482, 481, 532, 215, 0, 0, 178,
	483, 484, 533, 485, 486, 487, 0, 179, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 488, 0, 0, 153, 0,
	227, 229, 228, 230, 231, 489, 490, 232, 491, 235,
	233, 234, 492, 0, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 243, 493, 494, 495, 0, 244, 496,
	0, 0, 0, 245, 246, 247, 248, 249, 250, 0,
	252, 253, 254, 251, 0, 255, 0, 256, 257, 258,
	0, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	0, 0, 262, 263, 264, 265, 266, 267, 497, 498,
	0, 268, 0, 270, 269, 0, 271, 0, 0, 272,
	273, 274, 0, 275, 0, 276, 277, 0, 278, 499,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 500,
	501, 0, 218, 0, 0, 0, 0, 0, 289, 290,
	291, 502, 292, 293, 0, 294, 0, 295, 0, 0,
	0, 296, 297, 0, 298, 503, 0, 504, 299, 0,
	300, 301, 302, 303, 505, 506, 507, 358, 0, 304,
	305, 0, 306, 307, 309, 0, 0, 219, 308, 310,
	317, 0, 0, 311, 508, 313, 312, 314, 315, 316,
	509, 0, 510, 0, 318, 0, 511, 0, 319, 320,
	321, 0, 322, 323, 0, 0, 324, 325, 326, 327,
	328, 0, 330, 329, 0, 331, 512, 0, 332, 333,
	0, 0, 334, 335, 0, 0, 336, 337, 338, 339,
	0, 340, 341, 343, 345, 342, 344, 346, 348, 349,
	347, 0, 350, 351, 354, 355, 353, 0, 352, 0,
	220, 0, 356, 0, 513, 357, 514, 359, 360, 0,
	361, 362, 363, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 515, 0, 370, 0, 516, 371, 364, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 517,
	381, 518, 382, 0, 383, 0, 384, 385, 386, 387,
	388, 389, 390, 519, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 399, 400, 401, 398, 402, 403, 404,
	405, 0, 406, 0, 407, 408, 409, 410, 520, 411,
	0, 412, 416, 417, 418, 419, 420, 421, 422, 0,
	428, 429, 423, 425, 426, 427, 424, 430, 431, 432,
	0, 433, 413, 414, 434, 435, 0, 436, 437, 521,
	438, 439, 0, 440, 441, 442, 443, 415, 444, 448,
	449, 445, 446, 447, 522, 0, 451, 452, 450, 0,
	453, 454, 455, 456, 457, 283, 458, 0, 459, 523,
	524, 525, 526, 0, 466, 0, 460, 461, 527, 462,
	528, 0, 463, 464, 465, 0, 467, 468, 0, 0,
	469, 470, 471, 473, 474, 472, 476, 0, 477, 0,
	475, 478, 479, 480, 529, 530, 531, 0, 482, 481,
	532, 1301, 0, 215, 0, 483, 484, 533, 485, 486,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 222, 223, 224, 225, 0, 226, 0, 0, 0,
	0, 0, 488, 1667, 0, 0, 0, 227, 229, 228,
	230, 231, 489, 490, 232, 491, 235, 233, 234, 492,
	0, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	243, 493, 494, 495, 0, 244, 496, 0, 0, 0,
	245, 246, 247, 248, 249, 250, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 0, 0, 262,
	263, 264, 265, 266, 267, 497, 498, 0, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 273, 274, 0,
	275, 0, 276, 277, 0, 278, 499, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 500, 501, 0, 218,
	0, 0, 0, 0, 0, 289, 290, 291, 502, 292,
	293, 0, 294, 0, 295, 0, 0, 0, 296, 297,
	0, 298, 503, 0, 504, 299, 0, 300, 301, 302,
	303, 505, 506, 507, 358, 0, 304, 305, 0, 306,
	307, 309, 0, 0, 219, 308, 310, 317, 0, 0,
	311, 508, 313, 312, 314, 315, 316, 509, 0, 510,
	0, 318, 0, 511, 0, 319, 320, 321, 0, 322,
	323, 0, 0, 324, 325, 326, 327, 328, 0, 330,
	329, 0, 331, 512, 0, 332, 333, 0, 0, 334,
	335, 0, 0, 336, 337, 338, 339, 0, 340, 341,
	343, 345, 342, 344, 346, 348, 349, 347, 0, 350,
	351, 354, 355, 353, 0, 352, 0, 220, 0, 356,
	0, 513, 357, 514, 359, 360, 0, 361, 362, 363,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 515,
	0, 370, 0, 516, 371, 364, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 517, 381, 518, 382,
	0, 383, 0, 384, 385, 386, 387, 388, 389, 390,
	519, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	399, 400, 401, 398, 402, 403, 404, 405, 0, 406,
	0, 407, 408, 409, 410, 520, 411, 0, 412, 416,
	417, 418, 419, 420, 421, 422, 0, 428, 429, 423,
	425, 426, 427, 424, 430, 431, 432, 0, 433, 413,
	414, 434, 435, 0, 436, 437, 521, 438, 439, 0,
	440, 441, 442, 443, 415, 444, 448, 449, 445, 446,
	447, 522, 0, 451, 452, 450, 0, 453, 454, 455,
	456, 457, 283, 458, 0, 459, 523, 524, 525, 526,
	0, 466, 0, 460, 461, 527, 462, 528, 0, 463,
	464, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	473, 474, 472, 476, 0, 477, 0, 475, 478, 479,
	480, 529, 530, 531, 0, 482, 481, 532, 215, 0,
	0, 0, 483, 484, 533, 485, 486, 487, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 488, 1305, 0,
	0, 0, 227, 229, 228, 230, 231, 489, 490, 232,
	491, 235, 233, 234, 492, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 493, 494, 495, 0,
	244, 496, 0, 0, 0, 245, 246, 247, 248, 249,
	250, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	497, 498, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 499, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 500, 501, 0, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 502, 292, 293, 0, 294, 0, 295,
	0, 0, 0, 296, 297, 0, 298, 503, 0, 504,
	299, 0, 300, 301, 302, 303, 505, 506, 507, 358,
	0, 304, 305, 0, 306, 307, 309, 0, 0, 219,
	308, 310, 317, 0, 0, 311, 508, 313, 312, 314,
	315, 316, 509, 0, 510, 0, 318, 0, 511, 0,
	319, 320, 321, 0, 322, 323, 0, 0, 324, 325,
	326, 327, 328, 0, 330, 329, 0, 331, 512, 0,
	332, 333, 0, 0, 334, 335, 0, 0, 336, 337,
	338, 339, 0, 340, 341, 343, 345, 342, 344, 346,
	348, 349, 347, 0, 350, 351, 354, 355, 353, 0,
	352, 0, 220, 0, 356, 0, 513, 357, 514, 359,
	360, 0, 361, 362, 363, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 515, 0, 370, 0, 516, 371,
	364, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 517, 381, 518, 382, 0, 383, 0, 384, 385,
	386, 387, 388, 389, 390, 519, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 399, 400, 401, 398, 402,
	403, 404, 405, 0, 406, 0, 407, 408, 409, 410,
	520, 411, 0, 412, 416, 417, 418, 419, 420, 421,
	422, 0, 428, 429, 423, 425, 426, 427, 424, 430,
	431, 432, 0, 433, 413, 414, 434, 435, 0, 436,
	437, 521, 438, 439, 0, 440, 441, 442, 443, 415,
	444, 448, 449, 445, 446, 447, 522, 0, 451, 452,
	450, 0, 453, 454, 455, 456, 457, 283, 458, 0,
	459, 523, 524, 525, 526, 0, 466, 0, 460, 461,
	527, 462, 528, 0, 463, 464, 465, 0, 467, 468,
	0, 0, 469, 470, 471, 473, 474, 472, 476, 0,
	477, 0, 475, 478, 479, 480, 529, 530, 531, 0,
	482, 481, 532, 215, 0, 0, 0, 483, 484, 533,
	485, 486, 487, 0, 0, 0, 0, 0, 0, 0,
	221, 222, 223, 224, 225, 0, 226, 0, 0, 0,
	0, 0, 488, 2878, 0, 0, 0, 227, 229, 228,
	230, 231, 489, 490, 232, 491, 235, 233, 234, 492,
	0, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	243, 493, 494, 495, 0, 244, 496, 0, 0, 0,
	245, 246, 247, 248, 249, 250, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 0, 0, 262,
	263, 264, 265, 266, 267, 497, 498, 0, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 273, 274, 0,
	275, 0, 276, 277, 0, 278, 499, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 500, 501, 0, 218,
	0, 0, 0, 0, 0, 289, 290, 291, 502, 292,
	293, 0, 294, 0, 295, 0, 0, 0, 296, 297,
	0, 298, 503, 0, 504, 299, 0, 300, 301, 302,
	303, 505, 506, 507, 358, 0, 304, 305, 0, 306,
	307, 309, 0, 0, 219, 308, 310, 317, 0, 0,
	311, 508, 313, 312, 314, 315, 316, 509, 0, 510,
	0, 318, 0, 511, 0, 319, 320, 321, 0, 322,
	323, 0, 0, 324, 325, 326, 327, 328, 0, 330,
	329, 0, 331, 512, 0, 332, 333, 0, 0, 334,
	335, 0, 0, 336, 337, 338, 339, 0, 340, 341,
	343, 345, 342, 344, 346, 348, 349, 347, 0, 350,
	351, 354, 355, 353, 0, 352, 0, 220, 0, 356,
	0, 513, 357, 514, 359, 360, 0, 361, 362, 363,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 515,
	0, 370, 0, 516, 371, 364, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 517, 381, 518, 382,
	0, 383, 0, 384, 385, 386, 387, 388, 389, 390,
	519, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	399, 400, 401, 398, 402, 403, 404, 405, 0, 406,
	0, 407, 408, 409, 410, 520, 411, 0, 412, 416,
	417, 418, 419, 420, 421, 422, 0, 428, 429, 423,
	425, 426, 427, 424, 430, 431, 432, 0, 433, 413,
	414, 434, 435, 0, 436, 437, 521, 438, 439, 0,
	440, 441, 442, 443, 415, 444, 448, 449, 445, 446,
	447, 522, 0, 451, 452, 450, 0, 453, 454, 455,
	456, 457, 283, 458, 0, 459, 523, 524, 525, 526,
	0, 466, 0, 460, 461, 527, 462, 528, 0, 463,
	464, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	473, 474, 472, 476, 0, 477, 0, 475, 478, 479,
	480, 529, 530, 531, 0, 482, 481, 532, 215, 0,
	0, 0, 483, 484, 533, 485, 486, 487, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 488, 1305, 0,
	0, 0, 227, 229, 228, 230, 231, 489, 490, 232,
	491, 235, 233, 234, 492, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 493, 494, 495, 0,
	244, 496, 0, 0, 0, 245, 246, 247, 248, 249,
	250, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	497, 498, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 499, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 500, 501, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 291, 502, 292, 293, 0, 294, 0, 295,
	0, 0, 0, 296, 297, 0, 298, 503, 0, 504,
	299, 0, 300, 301, 302, 303, 505, 506, 507, 358,
	0, 304, 305, 0, 306, 307, 309, 0, 0, 0,
	308, 310, 317, 0, 0, 311, 508, 313, 312, 314,
	315, 316, 509, 0, 510, 0, 318, 0, 511, 0,
	319, 320, 321, 0, 322, 323, 0, 0, 324, 325,
	326, 327, 328, 0, 330, 329, 0, 331, 512, 0,
	332, 333, 0, 0, 334, 335, 0, 0, 336, 337,
	338, 339, 0, 340, 341, 343, 345, 342, 344, 346,
	348, 349, 347, 0, 350, 351, 354, 355, 353, 0,
	352, 0, 0, 0, 356, 0, 513, 357, 514, 359,
	360, 0, 361, 362, 363, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 515, 0, 370, 0, 516, 371,
	364, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 517, 381, 518, 382, 0, 383, 0, 384, 385,
	386, 387, 388, 389, 390, 519, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 399, 400, 401, 398, 402,
	403, 404, 405, 0, 406, 0, 407, 408, 409, 410,
	520, 411, 0, 412, 416, 417, 418, 419, 420, 421,
	422, 0, 428, 429, 423, 425, 426, 427, 424, 430,
	431, 432, 0, 433, 413, 414, 434, 435, 0, 436,
	437, 521, 438, 439, 0, 440, 441, 442, 443, 415,
	444, 448, 449, 445, 446, 447, 522, 0, 451, 452,
	450, 0, 453, 454, 455, 456, 457, 283, 458, 0,
	459, 523, 524, 525, 526, 0, 466, 0, 460, 461,
	527, 462, 528, 0, 463, 464, 465, 0, 467, 468,
	0, 0, 469, 470, 471, 473, 474, 472, 476, 0,
	477, 0, 475, 478, 479, 480, 529, 530, 531, 0,
	482, 481, 532, 215, 0, 0, 0, 483, 484, 533,
	485, 486, 487, 0, 0, 0, 0, 0, 0, 0,
	221, 222, 223, 224, 225, 0, 226, 0, 0, 0,
	0, 0, 488, 0, 0, 2475, 0, 227, 229, 228,
	230, 231, 489, 490, 232, 491, 235, 233, 234, 492,
	0, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	243, 493, 494, 495, 0, 244, 496, 0, 0, 0,
	245, 246, 247, 248, 249, 250, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 0, 0, 262,
	263, 264, 265, 266, 267, 497, 498, 0, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 273, 274, 0,
	275, 0, 276, 277, 0, 278, 499, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 500, 501, 0, 0,
	0, 0, 0, 0, 0, 289, 290, 291, 502, 292,
	293, 0, 294, 0, 295, 0, 0, 0, 296, 297,
	0, 298, 503, 0, 504, 299, 0, 300, 301, 302,
	303, 505, 506, 507, 358, 0, 304, 305, 0, 306,
	307, 309, 0, 0, 0, 308, 310, 317, 0, 0,
	311, 508, 313, 312, 314, 315, 316, 509, 0, 510,
	0, 318, 0, 511, 0, 319, 320, 321, 0, 322,
	323, 0, 0, 324, 325, 326, 327, 328, 0, 330,
	329, 0, 331, 512, 0, 332, 333, 0, 0, 334,
	335, 0, 0, 336, 337, 338, 339, 0, 340, 341,
	343, 345, 342, 344, 346, 348, 349, 347, 0, 350,
	351, 354, 355, 353, 0, 352, 0, 0, 0, 356,
	0, 513, 357, 514, 359, 360, 0, 361, 362, 363,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 515,
	0, 370, 0, 516, 371, 364, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 517, 381, 518, 382,
	0, 383, 0, 384, 385, 386, 387, 388, 389, 390,
	519, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	399, 400, 401, 398, 402, 403, 404, 405, 0, 406,
	0, 407, 408, 409, 410, 520, 411, 0, 412, 416,
	417, 418, 419, 420, 421, 422, 0, 428, 429, 423,
	425, 426, 427, 424, 430, 431, 432, 0, 433, 413,
	414, 434, 435, 0, 436, 437, 521, 438, 439, 0,
	440, 441, 442, 443, 415, 444, 448, 449, 445, 446,
	447, 522, 0, 451, 452, 450, 0, 453, 454, 455,
	456, 457, 283, 458, 0, 459, 523, 524, 525, 526,
	0, 466, 0, 460, 461, 527, 462, 528, 0, 463,
	464, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	473, 474, 472, 476, 0, 477, 0, 475, 478, 479,
	480, 529, 530, 531, 0, 482, 481, 532, 215, 0,
	0, 0, 483, 484, 533, 485, 486, 487, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 488, 0, 0,
	3017, 0, 227, 229, 228, 230, 231, 489, 490, 232,
	491, 235, 233, 234, 492, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 493, 494, 495, 0,
	244, 496, 0, 0, 0, 245, 246, 247, 248, 249,
	250, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	497, 498, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 499, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 500, 501, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 291, 502, 292, 293, 0, 294, 0, 295,
	0, 0, 0, 296, 297, 0, 298, 503, 0, 504,
	299, 0, 300, 301, 302, 303, 505, 506, 507, 358,
	0, 304, 305, 0, 306, 307, 309, 0, 0, 0,
	308, 310, 317, 0, 0, 311, 508, 313, 312, 314,
	315, 316, 509, 0, 510, 0, 318, 0, 511, 0,
	319, 320, 321, 0, 322, 323, 0, 0, 324, 325,
	326, 327, 328, 0, 330, 329, 0, 331, 512, 0,
	332, 333, 0, 0, 334, 335, 0, 0, 336, 337,
	338, 339, 0, 340, 341, 343, 345, 342, 344, 346,
	348, 349, 347, 0, 350, 351, 354, 355, 353, 0,
	352, 0, 0, 0, 356, 0, 513, 357, 514, 359,
	360, 0, 361, 362, 363, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 515, 0, 370, 0, 516, 371,
	364, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 517, 381, 518, 382, 0, 383, 0, 384, 385,
	386, 387, 388, 389, 390, 519, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 399, 400, 401, 398, 402,
	403, 404, 405, 0, 406, 0, 407, 408, 409, 410,
	520, 411, 0, 412, 416, 417, 418, 419, 420, 421,
	422, 0, 428, 429, 423, 425, 426, 427, 424, 430,
	431, 432, 0, 433, 413, 414, 434, 435, 0, 436,
	437, 521, 438, 439, 0, 440, 441, 442, 443, 415,
	444, 448, 449, 445, 446, 447, 522, 0, 451, 452,
	450, 0, 453, 454, 455, 456, 457, 283, 458, 0,
	459, 523, 524, 525, 526, 0, 466, 0, 460, 461,
	527, 462, 528, 0, 463, 464, 465, 0, 467, 468,
	0, 0, 469, 470, 471, 473, 474, 472, 476, 0,
	477, 0, 475, 478, 479, 480, 529, 530, 531, 0,
	482, 481, 532, 716, 0, 605, 0, 483, 484, 533,
	485, 486, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 222, 223, 224, 225, 0, 226, 0,
	0, 0, 0, 0, 488, 1943, 0, 0, 0, 227,
	229, 228, 230, 231, 489, 490, 232, 491, 235, 233,
	234, 492, 0, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 243, 493, 494, 495, 0, 244, 496, 0,
	0, 0, 245, 246, 247, 248, 249, 250, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 0,
	0, 262, 263, 611, 265, 266, 267, 497, 498, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 499, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 500, 501,
	0, 218, 0, 0, 0, 0, 0, 289, 290, 291,
	502, 292, 293, 0, 294, 0, 295, 0, 714, 0,
	296, 297, 0, 298, 503, 0, 504, 299, 0, 300,
	301, 302, 303, 505, 506, 507, 358, 0, 304, 305,
	0, 306, 307, 309, 0, 0, 219, 308, 310, 317,
	0, 0, 311, 508, 313, 312, 314, 315, 316, 509,
	0, 510, 0, 318, 0, 511, 0, 319, 320, 321,
	0, 322, 323, 0, 0, 324, 325, 326, 327, 328,
	0, 330, 329, 0, 331, 512, 0, 332, 333, 0,
	0, 334, 335, 0, 0, 336, 337, 338, 339, 0,
	340, 341, 343, 345, 342, 344, 346, 348, 349, 347,
	0, 350, 351, 354, 355, 353, 0, 352, 0, 220,
	0, 356, 0, 513, 357, 514, 359, 360, 0, 361,
	362, 363, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 515, 0, 370, 0, 516, 371, 364, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 517, 381,
	518, 382, 0, 383, 0, 384, 385, 386, 387, 388,
	389, 390, 519, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 399, 400, 401, 398, 402, 403, 404, 405,
	0, 406, 0, 407, 408, 409, 410, 520, 411, 0,
	412, 416, 417, 418, 419, 420, 421, 422, 0, 428,
	429, 423, 425, 426, 427, 424, 430, 431, 432, 0,
	433, 413, 414, 434, 435, 0, 436, 437, 521, 438,
	439, 0, 440, 441, 442, 443, 415, 444, 448, 449,
	445, 446, 447, 522, 0, 451, 452, 450, 610, 453,
	454, 455, 456, 457, 283, 458, 0, 459, 523, 524,
	525, 526, 0, 466, 0, 460, 461, 527, 462, 528,
	0, 463, 464, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 473, 474, 472, 476, 0, 477, 0, 475,
	478, 479, 480, 529, 530, 531, 0, 482, 481, 532,
	0, 604, 0, 605, 483, 484, 533, 485, 486, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 222, 223, 224, 225, 614, 226, 0, 0, 0,
	0, 0, 488, 0, 0, 0, 0, 227, 229, 228,
	230, 231, 489, 490, 232, 491, 235, 233, 234, 492,
	0, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	243, 493, 494, 495, 0, 244, 496, 0, 0, 0,
	245, 246, 247, 248, 249, 250, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 0, 0, 262,
	263, 611, 265, 266, 267, 497, 498, 0, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 273, 274, 0,
	275, 0, 276, 277, 0, 278, 499, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 500, 501, 0, 218,
	0, 0, 0, 0, 0, 289, 290, 291, 502, 292,
	293, 0, 294, 0, 295, 0, 0, 0, 296, 297,
	0, 298, 503, 0, 504, 299, 0, 300, 301, 302,
	303, 505, 506, 507, 358, 0, 304, 305, 0, 306,
	307, 309, 0, 0, 219, 308, 310, 317, 0, 0,
	311, 508, 313, 312, 314, 315, 316, 509, 0, 510,
	0, 318, 0, 511, 0, 319, 320, 321, 0, 322,
	323, 0, 0, 324, 325, 326, 327, 328, 0, 330,
	329, 0, 331, 512, 0, 332, 333, 0, 0, 334,
	335, 0, 0, 336, 337, 338, 339, 0, 340, 341,
	343, 345, 342, 344, 346, 348, 349, 347, 0, 350,
	351, 354, 355, 353, 0, 352, 0, 220, 0, 356,
	0, 513, 357, 514, 359, 360, 0, 361, 362, 363,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 515,
	0, 370, 0, 516, 371, 364, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 517, 381, 518, 382,
	0, 383, 0, 384, 385, 386, 387, 388, 389, 390,
	519, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	399, 400, 401, 398, 402, 403, 404, 405, 0, 406,
	0, 407, 408, 409, 410, 520, 411, 0, 412, 416,
	417, 418, 419, 420, 421, 422, 0, 428, 429, 423,
	425, 426, 427, 424, 430, 431, 432, 0, 433, 413,
	414, 434, 435, 0, 436, 437, 521, 438, 439, 0,
	440, 441, 442, 443, 415, 444, 448, 449, 445, 446,
	447, 522, 0, 451, 452, 450, 610, 453, 454, 455,
	456, 457, 283, 458, 0, 459, 523, 524, 525, 526,
	602, 466, 0, 460, 461, 527, 462, 528, 0, 463,
	464, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	473, 474, 472, 476, 0, 477, 0, 475, 478, 479,
	480, 529, 530, 531, 0, 482, 481, 532, 0, 0,
	0, 0, 483, 484, 533, 485, 486, 487, 1209, 1208,
	0, 0, 0, 0, 1206, 0, 0, 0, 0, 0,
	0, 0, 0, 614, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 227, 229, 228, 230, 231, 489, 490, 232,
	491, 235, 233, 234, 492, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 493, 494, 495, 0,
	244, 496, 0, 1101, 0, 245, 246, 247, 248, 249,
	250, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 973, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	497, 498, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 499, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 500, 501, 0, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 502, 292, 293, 0, 294, 0, 295,
	0, 0, 974, 296, 297, 0, 298, 503, 0, 504,
	299, 0, 300, 301, 302, 303, 505, 506, 507, 358,
	976, 304, 305, 0, 306, 307, 309, 0, 0, 0,
	308, 310, 317, 0, 975, 311, 508, 313, 312, 314,
	315, 316, 509, 0, 510, 0, 318, 977, 511, 978,
	319, 320, 321, 979, 322, 323, 0, 0, 324, 325,
	326, 327, 328, 0, 330, 329, 0, 331, 512, 980,
	332, 333, 981, 0, 334, 335, 0, 0, 336, 337,
	338, 339, 0, 340, 341, 343, 345, 342, 344, 346,
	348, 349, 347, 982, 350, 351, 354, 355, 353, 983,
	352, 0, 0, 984, 356, 3154, 513, 357, 514, 359,
	360, 0, 361, 362, 363, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 515, 985, 370, 986, 516, 371,
	364, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 517, 381, 518, 382, 0, 383, 0, 384, 385,
	386, 387, 388, 389, 390, 519, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 399, 400, 401, 398, 402,
	403, 404, 405, 0, 406, 987, 407, 408, 409, 410,
	520, 411, 0, 412, 416, 417, 418, 419, 420, 421,
	422, 0, 428, 429, 423, 425, 426, 427, 424, 430,
	431, 432, 0, 433, 413, 414, 434, 435, 988, 436,
	437, 521, 438, 439, 0, 440, 441, 442, 443, 415,
	444, 448, 449, 445, 446, 447, 522, 0, 451, 452,
	450, 0, 453, 454, 455, 456, 457, 283, 458, 0,
	459, 523, 524, 525, 526, 0, 466, 0, 460, 461,
	527, 462, 528, 0, 463, 464, 465, 0, 467, 468,
	0, 0, 469, 470, 471, 473, 474, 472, 476, 0,
	477, 0, 475, 478, 479, 480, 529, 530, 531, 0,
	482, 481, 532, 0, 0, 0, 0, 483, 484, 533,
	485, 486, 487, 1209, 1208, 0, 0, 0, 0, 1206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 222, 223, 224, 225, 0, 226, 0, 0, 0,
	0, 0, 488, 0, 0, 0, 0, 227, 229, 228,
	230, 231, 489, 490, 232, 491, 235, 233, 234, 492,
	0, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	243, 493, 494, 495, 0, 244, 496, 0, 1101, 0,
	245, 246, 247, 248, 249, 250, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 973,
	260, 261, 0, 0, 0, 0, 0, 0, 0, 262,
	263, 264, 265, 266, 267, 497, 498, 0, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 273, 274, 0,
	275, 0, 276, 277, 0, 278, 499, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 500, 501, 0, 218,
	0, 0, 0, 0, 0, 289, 290, 291, 502, 292,
	293, 0, 294, 0, 295, 0, 0, 974, 296, 297,
	0, 298, 503, 0, 504, 299, 0, 300, 301, 302,
	303, 505, 506, 507, 358, 976, 304, 305, 0, 306,
	307, 309, 0, 0, 0, 308, 310, 317, 0, 975,
	311, 508, 313, 312, 314, 315, 316, 509, 0, 510,
	0, 318, 977, 511, 978, 319, 320, 321, 979, 322,
	323, 0, 0, 324, 325, 326, 327, 328, 0, 330,
	329, 0, 331, 512, 980, 332, 333, 981, 0, 334,
	335, 0, 0, 336, 337, 338, 339, 0, 340, 341,
	343, 345, 342, 344, 346, 348, 349, 347, 982, 350,
	351, 354, 355, 353, 983, 352, 0, 0, 984, 356,
	2857, 513, 357, 514, 359, 360, 0, 361, 362, 363,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 515,
	985, 370, 986, 516, 371, 364, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 517, 381, 518, 382,
	0, 383, 0, 384, 385, 386, 387, 388, 389, 390,
	519, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	399, 400, 401, 398, 402, 403, 404, 405, 0, 406,
	987, 407, 408, 409, 410, 520, 411, 0, 412, 416,
	417, 418, 419, 420, 421, 422, 0, 428, 429, 423,
	425, 426, 427, 424, 430, 431, 432, 0, 433, 413,
	414, 434, 435, 988, 436, 437, 521, 438, 439, 0,
	440, 441, 442, 443, 415, 444, 448, 449, 445, 446,
	447, 522, 0, 451, 452, 450, 0, 453, 454, 455,
	456, 457, 283, 458, 0, 459, 523, 524, 525, 526,
	0, 466, 0, 460, 461, 527, 462, 528, 0, 463,
	464, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	473, 474, 472, 476, 0, 477, 0, 475, 478, 479,
	480, 529, 530, 531, 605, 482, 481, 532, 0, 0,
	0, 0, 483, 484, 533, 485, 486, 487, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 227, 229,
	228, 230, 231, 489, 490, 232, 491, 235, 233, 234,
	492, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 243, 493, 494, 495, 0, 244, 496, 0, 0,
	0, 245, 246, 247, 248, 249, 250, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 0, 0,
	262, 263, 611, 265, 266, 267, 497, 498, 0, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 273, 274,
	0, 275, 0, 276, 277, 0, 278, 499, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 500, 501, 0,
	218, 0, 0, 0, 0, 0, 289, 290, 291, 502,
	292, 293, 0, 294, 0, 295, 0, 0, 0, 296,
	297, 0, 298, 503, 0, 504, 299, 0, 300, 301,
	302, 303, 505, 506, 507, 358, 0, 304, 305, 0,
	306, 307, 309, 0, 0, 219, 308, 310, 317, 0,
	0, 311, 508, 313, 312, 314, 315, 316, 509, 0,
	510, 0, 318, 0, 511, 0, 319, 320, 321, 0,
	322, 323, 0, 0, 324, 325, 326, 327, 328, 0,
	330, 329, 0, 331, 512, 0, 332, 333, 0, 0,
	334, 335, 0, 0, 336, 337, 338, 339, 0, 340,
	341, 343, 345, 342, 344, 346, 348, 349, 347, 0,
	350, 351, 354, 355, 353, 0, 352, 0, 220, 0,
	356, 0, 513, 357, 514, 359, 360, 0, 361, 362,
	363, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	515, 0, 370, 0, 516, 371, 364, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 517, 381, 518,
	382, 0, 383, 0, 384, 385, 386, 387, 388, 389,
	390, 519, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 399, 400, 401, 398, 402, 403, 404, 405, 0,
	406, 0, 1977, 408, 409, 410, 520, 411, 0, 412,
	416, 417, 418, 419, 420, 421, 422, 0, 428, 429,
	423, 425, 426, 427, 424, 430, 431, 432, 0, 433,
	413, 414, 434, 435, 0, 436, 437, 521, 438, 439,
	0, 440, 441, 442, 443, 415, 444, 448, 449, 445,
	446, 447, 522, 0, 451, 452, 450, 610, 453, 454,
	455, 456, 457, 283, 458, 0, 459, 523, 524, 525,
	526, 0, 466, 0, 460, 461, 527, 462, 528, 0,
	463, 464, 465, 0, 467, 468, 0, 0, 469, 470,
	471, 473, 474, 472, 476, 0, 477, 0, 475, 478,
	479, 480, 529, 530, 531, 0, 482, 481, 532, 605,
	0, 0, 0, 483, 484, 533, 485, 486, 487, 0,
	0, 0, 0, 0, 0, 0, 221, 222, 223, 224,
	225, 0, 226, 0, 614, 0, 0, 0, 488, 0,
	0, 0, 0, 227, 229, 228, 230, 231, 489, 490,
	232, 491, 235, 233, 234, 492, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 493, 494, 495,
	0, 244, 496, 0, 0, 0, 245, 246, 247, 248,
	249, 250, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 0, 0, 262, 263, 611, 265, 266,
	267, 497, 498, 0, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 273, 274, 0, 275, 0, 276, 277,
	0, 278, 499, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 500, 501, 0, 218, 0, 0, 0, 0,
	0, 289, 290, 291, 502, 292, 293, 0, 294, 0,
	295, 0, 0, 0, 296, 297, 0, 298, 503, 0,
	504, 299, 0, 300, 301, 302, 303, 505, 506, 507,
	358, 0, 304, 305, 0, 306, 307, 309, 0, 0,
	219, 308, 310, 317, 0, 0, 311, 508, 313, 312,
	314, 315, 316, 509, 0, 510, 0, 318, 0, 511,
	0, 319, 320, 321, 0, 322, 323, 0, 0, 324,
	325, 326, 327, 328, 0, 330, 329, 0, 331, 512,
	0, 332, 333, 0, 0, 334, 335, 0, 0, 336,
	337, 338, 339, 0, 340, 341, 343, 345, 342, 344,
	346, 348, 349, 347, 0, 350, 351, 354, 355, 353,
	0, 352, 0, 220, 0, 356, 0, 513, 357, 514,
	359, 360, 0, 361, 362, 363, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 515, 0, 370, 0, 516,
	371, 364, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 517, 381, 518, 382, 0, 383, 0, 384,
	385, 386, 387, 388, 389, 390, 519, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 399, 400, 401, 398,
	402, 403, 404, 405, 0, 406, 0, 407, 408, 409,
	410, 520, 411, 0, 412, 416, 417, 418, 419, 420,
	421, 422, 0, 428, 429, 423, 425, 426, 427, 424,
	430, 431, 432, 0, 433, 413, 414, 434, 435, 0,
	436, 437, 521, 438, 439, 0, 440, 441, 442, 443,
	415, 444, 448, 449, 445, 446, 447, 522, 0, 451,
	452, 450, 610, 453, 454, 455, 456, 457, 283, 458,
	0, 459, 523, 524, 525, 526, 0, 466, 0, 460,
	461, 527, 462, 528, 0, 463, 464, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 473, 474, 472, 476,
	0, 477, 0, 475, 478, 479, 480, 529, 530, 531,
	0, 482, 481, 532, 0, 0, 0, 0, 483, 484,
	533, 485, 486, 487, 1388, 0, 1209, 1208, 0, 0,
	0, 0, 1206, 0, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	227, 229, 228, 230, 231, 489, 490, 232, 491, 235,
	233, 234, 492, 0, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 243, 493, 494, 495, 0, 244, 496,
	0, 1101, 0, 245, 246, 247, 248, 249, 250, 0,
	252, 253, 254, 251, 0, 255, 0, 256, 257, 258,
	0, 259, 973, 260, 261, 0, 0, 0, 0, 0,
	0, 0, 262, 263, 264, 265, 266, 267, 497, 498,
	0, 268, 0, 270, 269, 0, 271, 0, 0, 272,
	273, 274, 0, 275, 0, 276, 277, 0, 278, 499,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 500,
	501, 0, 218, 0, 0, 0, 0, 0, 1387, 290,
	291, 502, 292, 293, 0, 294, 0, 295, 0, 0,
	974, 296, 297, 0, 298, 503, 0, 504, 299, 0,
	300, 301, 302, 303, 505, 506, 507, 358, 976, 304,
	305, 0, 306, 307, 309, 0, 0, 0, 308, 310,
	317, 0, 975, 311, 508, 313, 312, 314, 315, 316,
	509, 0, 510, 0, 318, 977, 511, 978, 319, 320,
	321, 979, 322, 323, 0, 0, 324, 325, 326, 327,
	328, 0, 330, 329, 0, 331, 512, 980, 332, 333,
	981, 0, 334, 335, 0, 0, 336, 337, 338, 339,
	0, 340, 341, 343, 345, 342, 344, 346, 348, 349,
	347, 982, 350, 351, 354, 355, 353, 983, 352, 0,
	0, 984, 356, 0, 513, 357, 514, 359, 360, 0,
	361, 362, 363, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 515, 985, 370, 986, 516, 371, 364, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 517,
	381, 518, 382, 0, 383, 0, 384, 385, 386, 387,
	388, 1386, 390, 519, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 399, 400, 401, 398, 402, 403, 404,
	405, 0, 406, 987, 407, 408, 409, 410, 520, 411,
	0, 412, 416, 417, 418, 1385, 420, 421, 422, 0,
	428, 429, 423, 425, 426, 427, 424, 430, 431, 432,
	0, 433, 413, 414, 434, 435, 988, 436, 437, 521,
	438, 439, 0, 440, 441, 442, 443, 415, 444, 448,
	449, 445, 446, 447, 522, 0, 451, 452, 450, 0,
	453, 454, 455, 456, 457, 283, 458, 0, 459, 523,
	524, 525, 526, 0, 466, 0, 460, 461, 527, 462,
	528, 0, 463, 464, 465, 0, 467, 468, 0, 0,
	469, 470, 471, 473, 474, 472, 476, 0, 477, 0,
	475, 478, 479, 480, 529, 530, 531, 0, 482, 481,
	532, 0, 0, 0, 0, 483, 484, 533, 485, 486,
	487, 1349, 0, 1209, 1208, 0, 0, 0, 0, 1206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 222, 223, 224, 225, 0, 226, 0, 0, 0,
	0, 0, 488, 0, 0, 0, 0, 227, 229, 228,
	230, 231, 489, 490, 232, 491, 235, 233, 234, 492,
	0, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	243, 493, 494, 495, 0, 244, 496, 0, 1101, 0,
	245, 246, 247, 248, 249, 250, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 973,
	260, 261, 0, 0, 0, 0, 0, 0, 0, 262,
	263, 264, 265, 266, 267, 497, 498, 0, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 273, 274, 0,
	275, 0, 276, 277, 0, 278, 499, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 500, 501, 0, 218,
	0, 0, 0, 0, 0, 289, 290, 291, 502, 292,
	293, 0, 294, 0, 295, 0, 0, 974, 296, 297,
	0, 298, 503, 0, 504, 299, 0, 300, 301, 302,
	303, 1348, 506, 507, 358, 976, 304, 305, 0, 306,
	307, 309, 0, 0, 0, 308, 310, 317, 0, 975,
	311, 508, 313, 312, 314, 315, 316, 509, 0, 510,
	0, 318, 977, 511, 978, 319, 320, 321, 979, 322,
	323, 0, 0, 324, 325, 326, 327, 328, 0, 330,
	329, 0, 331, 512, 980, 332, 333, 981, 0, 334,
	335, 0, 0, 336, 337, 338, 339, 0, 340, 341,
	343, 345, 342, 344, 346, 348, 349, 347, 982, 350,
	351, 354, 355, 353, 983, 352, 0, 0, 984, 356,
	0, 513, 357, 514, 359, 360, 0, 361, 362, 363,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 515,
	985, 370, 986, 516, 371, 364, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 517, 381, 518, 382,
	0, 383, 0, 384, 385, 386, 387, 388, 389, 390,
	519, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	399, 400, 401, 398, 402, 403, 404, 405, 0, 406,
	987, 407, 408, 409, 410, 520, 411, 0, 412, 416,
	417, 418, 419, 420, 421, 422, 0, 428, 429, 423,
	425, 426, 427, 424, 430, 431, 432, 0, 433, 413,
	414, 434, 435, 988, 436, 437, 521, 438, 439, 0,
	440, 441, 442, 443, 415, 444, 448, 449, 445, 446,
	447, 522, 0, 451, 452, 450, 0, 453, 454, 455,
	456, 457, 283, 458, 0, 459, 523, 524, 525, 526,
	0, 466, 0, 460, 461, 527, 462, 528, 0, 463,
	464, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	473, 474, 472, 476, 0, 477, 0, 475, 478, 479,
	480, 529, 530, 531, 0, 482, 481, 532, 0, 0,
	0, 0, 483, 484, 533, 485, 486, 487, 1345, 0,
	1209, 1208, 0, 0, 0, 0, 1206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 227, 229, 228, 230, 231, 489,
	490, 232, 491, 235, 233, 234, 492, 0, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 243, 493, 494,
	495, 0, 244, 496, 0, 1101, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 973, 260, 261, 0,
	0, 0, 0, 0, 0, 0, 262, 263, 264, 265,
	266, 267, 497, 498, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 499, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 500, 501, 0, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 502, 292, 293, 0, 294,
	0, 295, 0, 0, 974, 296, 297, 0, 298, 503,
	0, 504, 299, 0, 300, 301, 302, 303, 1344, 506,
	507, 358, 976, 304, 305, 0, 306, 307, 309, 0,
	0, 0, 308, 310, 317, 0, 975, 311, 508, 313,
	312, 314, 315, 316, 509, 0, 510, 0, 318, 977,
	511, 978, 319, 320, 321, 979, 322, 323, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	512, 980, 332, 333, 981, 0, 334, 335, 0, 0,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 349, 347, 982, 350, 351, 354, 355,
	353, 983, 352, 0, 0, 984, 356, 0, 513, 357,
	514, 359, 360, 0, 361, 362, 363, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 985, 370, 986,
	516, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 517, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 519, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 987, 407, 408,
	409, 410, 520, 411, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 0, 428, 429, 423, 425, 426, 427,
	424, 430, 431, 432, 0, 433, 413, 414, 434, 435,
	988, 436, 437, 521, 438, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 449, 445, 446, 447, 522, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	458, 0, 459, 523, 524, 525, 526, 0, 466, 0,
	460, 461, 527, 462, 528, 0, 463, 464, 465, 0,
	467, 468, 0, 0, 469, 470, 471, 473, 474, 472,
	476, 0, 477, 0, 475, 478, 479, 480, 529, 530,
	531, 0, 482, 481, 532, 0, 0, 0, 0, 483,
	484, 533, 485, 486, 487, 1281, 0, 1209, 1208, 0,
	0, 0, 0, 1206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 0, 488, 0, 0, 0,
	0, 227, 229, 228, 230, 231, 489, 490, 232, 491,
	235, 233, 234, 492, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 243, 493, 494, 495, 0, 244,
	496, 0, 1101, 0, 245, 246, 247, 248, 249, 250,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 973, 260, 261, 0, 0, 0, 0,
	0, 0, 0, 262, 263, 264, 265, 266, 267, 497,
	498, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 273, 274, 0, 275, 0, 276, 277, 0, 278,
	499, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	500, 501, 0, 218, 0, 0, 0, 0, 0, 289,
	290, 291, 502, 292, 293, 0, 294, 0, 295, 0,
	0, 974, 296, 297, 0, 298, 503, 0, 504, 299,
	0, 300, 301, 302, 303, 1280, 506, 507, 358, 976,
	304, 305, 0, 306, 307, 309, 0, 0, 0, 308,
	310, 317, 0, 975, 311, 508, 313, 312, 314, 315,
	316, 509, 0, 510, 0, 318, 977, 511, 978, 319,
	320, 321, 979, 322, 323, 0, 0, 324, 325, 326,
	327, 328, 0, 330, 329, 0, 331, 512, 980, 332,
	333, 981, 0, 334, 335, 0, 0, 336, 337, 338,
	339, 0, 340, 341, 343, 345, 342, 344, 346, 348,
	349, 347, 982, 350, 351, 354, 355, 353, 983, 352,
	0, 0, 984, 356, 0, 513, 357, 514, 359, 360,
	0, 361, 362, 363, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 515, 985, 370, 986, 516, 371, 364,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	517, 381, 518, 382, 0, 383, 0, 384, 385, 386,
	387, 388, 389, 390, 519, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 399, 400, 401, 398, 402, 403,
	404, 405, 0, 406, 987, 407, 408, 409, 410, 520,
	411, 0, 412, 416, 417, 418, 419, 420, 421, 422,
	0, 428, 429, 423, 425, 426, 427, 424, 430, 431,
	432, 0, 433, 413, 414, 434, 435, 988, 436, 437,
	521, 438, 439, 0, 440, 441, 442, 443, 415, 444,
	448, 449, 445, 446, 447, 522, 0, 451, 452, 450,
	0, 453, 454, 455, 456, 457, 283, 458, 0, 459,
	523, 524, 525, 526, 0, 466, 0, 460, 461, 527,
	462, 528, 0, 463, 464, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 473, 474, 472, 476, 0, 477,
	0, 475, 478, 479, 480, 529, 530, 531, 0, 482,
	481, 532, 0, 0, 0, 0, 483, 484, 533, 485,
	486, 487, 1278, 0, 1209, 1208, 0, 0, 0, 0,
	1206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 227, 229,
	228, 230, 231, 489, 490, 232, 491, 235, 233, 234,
	492, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 243, 493, 494, 495, 0, 244, 496, 0, 1101,
	0, 245, 246, 247, 248, 249, 250, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	973, 260, 261, 0, 0, 0, 0, 0, 0, 0,
	262, 263, 264, 265, 266, 267, 497, 498, 0, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 273, 274,
	0, 275, 0, 276, 277, 0, 278, 499, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 500, 501, 0,
	218, 0, 0, 0, 0, 0, 289, 290, 291, 502,
	292, 293, 0, 294, 0, 295, 0, 0, 974, 296,
	297, 0, 298, 503, 0, 504, 299, 0, 300, 301,
	302, 303, 1277, 506, 507, 358, 976, 304, 305, 0,
	306, 307, 309, 0, 0, 0, 308, 310, 317, 0,
	975, 311, 508, 313, 312, 314, 315, 316, 509, 0,
	510, 0, 318, 977, 511, 978, 319, 320, 321, 979,
	322, 323, 0, 0, 324, 325, 326, 327, 328, 0,
	330, 329, 0, 331, 512, 980, 332, 333, 981, 0,
	334, 335, 0, 0, 336, 337, 338, 339, 0, 340,
	341, 343, 345, 342, 344, 346, 348, 349, 347, 982,
	350, 351, 354, 355, 353, 983, 352, 0, 0, 984,
	356, 0, 513, 357, 514, 359, 360, 0, 361, 362,
	363, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	515, 985, 370, 986, 516, 371, 364, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 517, 381, 518,
	382, 0, 383, 0, 384, 385, 386, 387, 388, 389,
	390, 519, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 399, 400, 401, 398, 402, 403, 404, 405, 0,
	406, 987, 407, 408, 409, 410, 520, 411, 0, 412,
	416, 417, 418, 419, 420, 421, 422, 0, 428, 429,
	423, 425, 426, 427, 424, 430, 431, 432, 0, 433,
	413, 414, 434, 435, 988, 436, 437, 521, 438, 439,
	0, 440, 441, 442, 443, 415, 444, 448, 449, 445,
	446, 447, 522, 0, 451, 452, 450, 0, 453, 454,
	455, 456, 457, 283, 458, 0, 459, 523, 524, 525,
	526, 0, 466, 0, 460, 461, 527, 462, 528, 0,
	463, 464, 465, 0, 467, 468, 0, 0, 469, 470,
	471, 473, 474, 472, 476, 0, 477, 0, 475, 478,
	479, 480, 529, 530, 531, 0, 482, 481, 532, 0,
	0, 0, 0, 483, 484, 533, 485, 486, 487, 1215,
	0, 1209, 1208, 0, 0, 0, 0, 1206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 222,
	223, 224, 225, 0, 226, 0, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 227, 229, 228, 230, 231,
	489, 490, 232, 491, 235, 233, 234, 492, 0, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 243, 493,
	494, 495, 0, 244, 496, 0, 1101, 0, 245, 246,
	247, 248, 249, 250, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 973, 260, 261,
	0, 0, 0, 0, 0, 0, 0, 262, 263, 264,
	265, 266, 267, 497, 498, 0, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 273, 274, 0, 275, 0,
	276, 277, 0, 278, 499, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 500, 501, 0, 218, 0, 0,
	0, 0, 0, 289, 290, 291, 502, 292, 293, 0,
	294, 0, 295, 0, 0, 974, 296, 297, 0, 298,
	503, 0, 504, 299, 0, 300, 301, 302, 303, 1214,
	506, 507, 358, 976, 304, 305, 0, 306, 307, 309,
	0, 0, 0, 308, 310, 317, 0, 975, 311, 508,
	313, 312, 314, 315, 316, 509, 0, 510, 0, 318,
	977, 511, 978, 319, 320, 321, 979, 322, 323, 0,
	0, 324, 325, 326, 327, 328, 0, 330, 329, 0,
	331, 512, 980, 332, 333, 981, 0, 334, 335, 0,
	0, 336, 337, 338, 339, 0, 340, 341, 343, 345,
	342, 344, 346, 348, 349, 347, 982, 350, 351, 354,
	355, 353, 983, 352, 0, 0, 984, 356, 0, 513,
	357, 514, 359, 360, 0, 361, 362, 363, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 515, 985, 370,
	986, 516, 371, 364, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 517, 381, 518, 382, 0, 383,
	0, 384, 385, 386, 387, 388, 389, 390, 519, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 399, 400,
	401, 398, 402, 403, 404, 405, 0, 406, 987, 407,
	408, 409, 410, 520, 411, 0, 412, 416, 417, 418,
	419, 420, 421, 422, 0, 428, 429, 423, 425, 426,
	427, 424, 430, 431, 432, 0, 433, 413, 414, 434,
	435, 988, 436, 437, 521, 438, 439, 0, 440, 441,
	442, 443, 415, 444, 448, 449, 445, 446, 447, 522,
	0, 451, 452, 450, 0, 453, 454, 455, 456, 457,
	283, 458, 0, 459, 523, 524, 525, 526, 0, 466,
	0, 460, 461, 527, 462, 528, 0, 463, 464, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 473, 474,
	472, 476, 0, 477, 0, 475, 478, 479, 480, 529,
	530, 531, 0, 482, 481, 532, 0, 0, 0, 0,
	483, 484, 533, 485, 486, 487, 1204, 0, 1209, 1208,
	0, 0, 0, 0, 1206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 227, 229, 228, 230, 231, 489, 490, 232,
	491, 235, 233, 234, 492, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 493, 494, 495, 0,
	244, 496, 0, 1101, 0, 245, 246, 247, 248, 249,
	250, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 973, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	497, 498, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 499, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 500, 501, 0, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 502, 292, 293, 0, 294, 0, 295,
	0, 0, 974, 296, 297, 0, 298, 503, 0, 504,
	299, 0, 300, 301, 302, 303, 1203, 506, 507, 358,
	976, 304, 305, 0, 306, 307, 309, 0, 0, 0,
	308, 310, 317, 0, 975, 311, 508, 313, 312, 314,
	315, 316, 509, 0, 510, 0, 318, 977, 511, 978,
	319, 320, 321, 979, 322, 323, 0, 0, 324, 325,
	326, 327, 328, 0, 330, 329, 0, 331, 512, 980,
	332, 333, 981, 0, 334, 335, 0, 0, 336, 337,
	338, 339, 0, 340, 341, 343, 345, 342, 344, 346,
	348, 349, 347, 982, 350, 351, 354, 355, 353, 983,
	352, 0, 0, 984, 356, 0, 513, 357, 514, 359,
	360, 0, 361, 362, 363, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 515, 985, 370, 986, 516, 371,
	364, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 517, 381, 518, 382, 0, 383, 0, 384, 385,
	386, 387, 388, 389, 390, 519, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 399, 400, 401, 398, 402,
	403, 404, 405, 0, 406, 987, 407, 408, 409, 410,
	520, 411, 0, 412, 416, 417, 418, 419, 420, 421,
	422, 0, 428, 429, 423, 425, 426, 427, 424, 430,
	431, 432, 0, 433, 413, 414, 434, 435, 988, 436,
	437, 521, 438, 439, 0, 440, 441, 442, 443, 415,
	444, 448, 449, 445, 446, 447, 522, 0, 451, 452,
	450, 0, 453, 454, 455, 456, 457, 283, 458, 0,
	459, 523, 524, 525, 526, 0, 466, 0, 460, 461,
	527, 462, 528, 0, 463, 464, 465, 0, 467, 468,
	0, 0, 469, 470, 471, 473, 474, 472, 476, 0,
	477, 0, 475, 478, 479, 480, 529, 530, 531, 0,
	482, 481, 532, 0, 0, 0, 0, 483, 484, 533,
	485, 486, 487, 1209, 1208, 0, 0, 0, 0, 1206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 222, 223, 224, 225, 0, 226, 0, 0, 0,
	0, 0, 488, 0, 0, 0, 0, 227, 229, 228,
	230, 231, 489, 490, 232, 491, 235, 233, 234, 492,
	0, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	243, 493, 494, 495, 0, 244, 496, 0, 1101, 0,
	245, 246, 247, 248, 249, 250, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 973,
	260, 261, 0, 0, 0, 0, 0, 0, 0, 262,
	263, 264, 265, 266, 267, 497, 498, 0, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 273, 274, 0,
	275, 0, 276, 277, 0, 278, 499, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 500, 501, 0, 218,
	0, 0, 0, 0, 0, 289, 290, 291, 502, 292,
	293, 0, 294, 0, 295, 0, 0, 974, 296, 297,
	0, 298, 503, 0, 504, 299, 0, 300, 301, 302,
	303, 505, 506, 507, 358, 976, 304, 305, 0, 306,
	307, 309, 0, 0, 0, 308, 310, 317, 0, 975,
	311, 508, 313, 312, 314, 315, 316, 509, 0, 510,
	0, 318, 977, 511, 978, 319, 320, 321, 979, 322,
	323, 0, 0, 324, 325, 326, 327, 328, 0, 330,
	329, 0, 331, 512, 980, 332, 333, 981, 0, 334,
	335, 0, 0, 336, 337, 338, 339, 0, 340, 341,
	343, 345, 342, 344, 346, 348, 349, 347, 982, 350,
	351, 354, 355, 353, 983, 352, 0, 0, 984, 356,
	0, 513, 357, 514, 359, 360, 0, 361, 362, 363,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 515,
	985, 370, 986, 516, 371, 364, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 517, 381, 518, 382,
	0, 383, 0, 384, 385, 386, 387, 388, 389, 390,
	519, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	399, 400, 401, 398, 402, 403, 404, 405, 0, 406,
	987, 407, 408, 409, 410, 520, 411, 0, 412, 416,
	417, 418, 419, 420, 421, 422, 0, 428, 429, 423,
	425, 426, 427, 424, 430, 431, 432, 0, 433, 413,
	414, 434, 435, 988, 436, 437, 521, 438, 439, 0,
	440, 441, 442, 443, 415, 444, 448, 449, 445, 446,
	447, 522, 0, 451, 452, 450, 0, 453, 454, 455,
	456, 457, 283, 458, 0, 459, 523, 524, 525, 526,
	0, 466, 0, 460, 461, 527, 462, 528, 0, 463,
	464, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	473, 474, 472, 476, 0, 477, 0, 475, 478, 479,
	480, 529, 530, 531, 215, 482, 481, 532, 0, 0,
	0, 0, 483, 484, 533, 485, 486, 487, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 227, 229,
	228, 230, 231, 489, 490, 232, 491, 235, 233, 234,
	492, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 243, 493, 494, 495, 0, 244, 496, 0, 0,
	0, 245, 246, 247, 248, 249, 250, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 0, 0,
	262, 263, 264, 265, 266, 267, 497, 498, 0, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 273, 274,
	0, 275, 0, 276, 277, 0, 278, 499, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 500, 501, 0,
	218, 0, 0, 0, 0, 0, 289, 290, 291, 502,
	292, 293, 0, 294, 0, 295, 0, 0, 0, 296,
	297, 0, 298, 503, 0, 504, 299, 0, 300, 301,
	302, 303, 505, 506, 507, 358, 0, 304, 305, 0,
	306, 307, 309, 0, 0, 219, 308, 310, 317, 0,
	0, 311, 508, 313, 312, 314, 315, 316, 509, 0,
	510, 0, 318, 0, 511, 0, 319, 320, 321, 0,
	322, 323, 0, 0, 324, 325, 326, 327, 328, 0,
	330, 329, 0, 331, 512, 0, 332, 333, 0, 0,
	334, 335, 0, 0, 336, 337, 338, 339, 0, 340,
	341, 343, 345, 342, 344, 346, 348, 349, 347, 0,
	350, 351, 354, 355, 353, 0, 352, 0, 220, 0,
	356, 0, 513, 357, 514, 359, 360, 0, 361, 362,
	363, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	515, 0, 370, 0, 516, 371, 364, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 517, 381, 518,
	382, 0, 383, 0, 384, 385, 386, 387, 388, 389,
	390, 519, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 399, 400, 401, 398, 402, 403, 404, 405, 0,
	406, 0, 407, 408, 409, 410, 520, 411, 0, 412,
	416, 417, 418, 419, 420, 421, 422, 0, 428, 429,
	423, 425, 426, 427, 424, 430, 431, 432, 0, 433,
	413, 414, 434, 435, 0, 436, 437, 521, 438, 439,
	0, 440, 441, 442, 443, 415, 444, 448, 449, 445,
	446, 447, 522, 0, 451, 452, 450, 0, 453, 454,
	455, 456, 457, 283, 458, 0, 459, 523, 524, 525,
	526, 0, 466, 0, 460, 461, 527, 462, 528, 0,
	463, 464, 465, 0, 467, 468, 0, 0, 469, 470,
	471, 473, 474, 472, 476, 0, 477, 0, 475, 478,
	479, 480, 529, 530, 531, 0, 482, 481, 532, 1209,
	1208, 0, 0, 483, 484, 533, 485, 486, 487, 0,
	0, 0, 0, 0, 0, 0, 221, 222, 223, 224,
	225, 0, 226, 0, 614, 0, 0, 0, 488, 0,
	0, 0, 0, 227, 229, 228, 230, 231, 489, 490,
	232, 491, 235, 233, 234, 492, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 493, 494, 495,
	0, 244, 496, 0, 1101, 0, 245, 246, 247, 248,
	249, 250, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 973, 260, 261, 0, 0,
	0, 0, 0, 0, 0, 262, 263, 264, 265, 266,
	267, 497, 498, 1756, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 273, 274, 0, 275, 0, 276, 277,
	0, 278, 499, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 500, 501, 0, 218, 0, 0, 0, 0,
	0, 289, 290, 291, 502, 292, 293, 0, 294, 0,
	295, 0, 0, 974, 296, 297, 0, 298, 503, 0,
	504, 299, 0, 300, 301, 302, 303, 505, 506, 507,
	358, 976, 304, 305, 0, 306, 307, 309, 0, 0,
	0, 308, 310, 317, 0, 975, 311, 508, 313, 312,
	314, 315, 316, 509, 0, 510, 0, 318, 977, 511,
	978, 319, 320, 321, 979, 322, 323, 0, 0, 324,
	325, 326, 327, 328, 0, 330, 329, 0, 331, 512,
	980, 332, 333, 981, 0, 334, 335, 0, 0, 336,
	337, 338, 339, 0, 340, 341, 343, 345, 342, 344,
	346, 348, 349, 347, 982, 350, 351, 354, 355, 353,
	983, 352, 0, 0, 984, 356, 0, 513, 357, 514,
	359, 360, 0, 361, 362, 363, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 515, 985, 370, 986, 516,
	371, 364, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 517, 381, 518, 382, 0, 383, 0, 384,
	385, 386, 387, 388, 389, 390, 519, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 399, 400, 401, 398,
	402, 403, 404, 405, 0, 406, 987, 407, 408, 409,
	410, 520, 411, 0, 412, 416, 417, 418, 419, 420,
	421, 422, 0, 428, 429, 423, 425, 426, 427, 424,
	430, 431, 432, 0, 433, 413, 414, 434, 435, 988,
	436, 437, 521, 438, 439, 0, 440, 441, 442, 443,
	415, 444, 448, 449, 445, 446, 447, 522, 0, 451,
	452, 450, 0, 453, 454, 455, 456, 457, 283, 458,
	0, 459, 523, 524, 525, 526, 0, 466, 0, 460,
	461, 527, 462, 528, 0, 463, 464, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 473, 474, 472, 476,
	0, 477, 0, 475, 478, 479, 480, 529, 530, 531,
	0, 482, 481, 532, 1209, 1208, 0, 0, 483, 484,
	533, 485, 486, 487, 0, 0, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 227, 229,
	228, 230, 231, 489, 490, 232, 491, 235, 233, 234,
	492, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 243, 493, 494, 495, 0, 244, 496, 0, 1101,
	0, 245, 246, 247, 248, 249, 250, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	973, 260, 261, 0, 0, 0, 0, 0, 0, 0,
	262, 263, 264, 265, 266, 267, 497, 498, 0, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 273, 274,
	0, 275, 0, 276, 277, 0, 278, 499, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 500, 501, 0,
	218, 0, 0, 0, 0, 0, 289, 290, 291, 502,
	292, 293, 0, 294, 0, 295, 0, 0, 974, 296,
	297, 0, 298, 503, 0, 504, 299, 0, 300, 301,
	302, 303, 505, 506, 507, 358, 976, 304, 305, 0,
	306, 307, 309, 0, 0, 0, 308, 310, 317, 0,
	975, 311, 508, 313, 312, 314, 315, 316, 509, 0,
	510, 0, 318, 977, 511, 978, 319, 320, 321, 979,
	322, 323, 0, 0, 324, 325, 326, 327, 328, 0,
	330, 329, 0, 331, 512, 980, 332, 333, 981, 0,
	334, 335, 0, 0, 336, 337, 338, 339, 0, 340,
	341, 343, 345, 342, 344, 346, 348, 349, 347, 982,
	350, 351, 354, 355, 353, 983, 352, 0, 0, 984,
	356, 0, 513, 357, 514, 359, 360, 0, 361, 362,
	363, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	515, 985, 370, 986, 516, 371, 364, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 517, 381, 518,
	382, 0, 383, 0, 384, 385, 386, 387, 388, 389,
	390, 519, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 399, 400, 401, 398, 402, 403, 404, 405, 0,
	406, 987, 407, 408, 409, 410, 520, 411, 0, 412,
	416, 417, 418, 419, 420, 421, 422, 0, 428, 429,
	423, 425, 426, 427, 424, 430, 431, 432, 0, 433,
	413, 414, 434, 435, 988, 436, 437, 521, 438, 439,
	0, 440, 441, 442, 443, 415, 444, 448, 449, 445,
	446, 447, 522, 0, 451, 452, 450, 0, 453, 454,
	455, 456, 457, 283, 458, 0, 459, 523, 524, 525,
	526, 0, 466, 0, 460, 461, 527, 462, 528, 0,
	463, 464, 465, 0, 467, 468, 0, 0, 469, 470,
	471, 473, 474, 472, 476, 0, 477, 0, 475, 478,
	479, 480, 529, 530, 531, 1209, 482, 481, 532, 0,
	0, 0, 0, 483, 484, 533, 485, 486, 487, 0,
	0, 0, 221, 222, 223, 224, 225, 0, 226, 0,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 227,
	229, 228, 230, 231, 489, 490, 232, 491, 235, 233,
	234, 492, 0, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 243, 493, 494, 495, 0, 244, 496, 0,
	1101, 0, 245, 246, 247, 248, 249, 250, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 973, 260, 261, 0, 0, 0, 0, 0, 0,
	0, 262, 263, 264, 265, 266, 267, 497, 498, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 499, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 500, 501,
	0, 218, 0, 0, 0, 0, 0, 289, 290, 291,
	502, 292, 293, 0, 294, 0, 295, 0, 0, 974,
	296, 297, 0, 298, 503, 0, 504, 299, 0, 300,
	301, 302, 303, 505, 506, 507, 358, 976, 304, 305,
	0, 306, 307, 309, 0, 0, 0, 308, 310, 317,
	0, 975, 311, 508, 313, 312, 314, 315, 316, 509,
	0, 510, 0, 318, 977, 511, 978, 319, 320, 321,
	979, 322, 323, 0, 0, 324, 325, 326, 327, 328,
	0, 330, 329, 0, 331, 512, 980, 332, 333, 981,
	0, 334, 335, 0, 0, 336, 337, 338, 339, 0,
	340, 341, 343, 345, 342, 344, 346, 348, 349, 347,
	982, 350, 351, 354, 355, 353, 983, 352, 0, 0,
	984, 356, 0, 513, 357, 514, 359, 360, 0, 361,
	362, 363, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 515, 985, 370, 986, 516, 371, 364, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 517, 381,
	518, 382, 0, 383, 0, 384, 385, 386, 387, 388,
	389, 390, 519, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 399, 400, 401, 398, 402, 403, 404, 405,
	0, 406, 987, 407, 408, 409, 410, 520, 411, 0,
	412, 416, 417, 418, 419, 420, 421, 422, 0, 428,
	429, 423, 425, 426, 427, 424, 430, 431, 432, 0,
	433, 413, 414, 434, 435, 988, 436, 437, 521, 438,
	439, 0, 440, 441, 442, 443, 415, 444, 448, 449,
	445, 446, 447, 522, 0, 451, 452, 450, 0, 453,
	454, 455, 456, 457, 283, 458, 0, 459, 523, 524,
	525, 526, 0, 466, 0, 460, 461, 527, 462, 528,
	0, 463, 464, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 473, 474, 472, 476, 0, 477, 0, 475,
	478, 479, 480, 529, 530, 531, 215, 482, 481, 532,
	0, 0, 0, 0, 483, 484, 533, 485, 486, 487,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	227, 229, 228, 230, 231, 489, 490, 232, 491, 235,
	233, 234, 492, 0, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 243, 493, 494, 495, 2350, 244, 496,
	0, 0, 0, 245, 246, 247, 248, 249, 250, 0,
	252, 253, 254, 251, 2347, 255, 0, 256, 257, 258,
	0, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	0, 0, 262, 263, 264, 265, 266, 267, 497, 498,
	0, 268, 0, 270, 269, 0, 271, 0, 0, 272,
	273, 274, 0, 275, 0, 276, 277, 0, 278, 499,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 500,
	501, 0, 2511, 0, 0, 0, 0, 0, 289, 290,
	291, 502, 292, 293, 0, 294, 0, 295, 2353, 0,
	0, 296, 297, 0, 298, 503, 0, 504, 299, 0,
	300, 301, 302, 303, 505, 506, 507, 358, 0, 304,
	305, 0, 306, 307, 309, 0, 0, 2508, 308, 310,
	317, 0, 0, 311, 508, 313, 312, 314, 315, 316,
	509, 0, 510, 0, 2510, 0, 511, 0, 319, 320,
	321, 0, 322, 323, 0, 0, 324, 325, 326, 327,
	328, 0, 330, 329, 0, 331, 512, 0, 332, 333,
	2507, 0, 334, 335, 0, 0, 336, 337, 338, 339,
	0, 340, 341, 343, 345, 342, 344, 346, 348, 349,
	347, 0, 350, 351, 354, 355, 353, 0, 352, 0,
	0, 0, 356, 0, 513, 357, 514, 359, 360, 0,
	361, 362, 363, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 515, 0, 370, 0, 516, 371, 364, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 517,
	381, 518, 382, 2352, 383, 0, 384, 385, 386, 387,
	388, 389, 390, 519, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 399, 400, 401, 398, 402, 403, 404,
	405, 0, 406, 0, 407, 408, 409, 410, 520, 411,
	0, 412, 416, 417, 418, 419, 420, 421, 422, 0,
	428, 429, 423, 425, 426, 427, 424, 430, 431, 432,
	0, 433, 413, 414, 434, 435, 0, 436, 437, 521,
	438, 439, 0, 440, 441, 442, 443, 415, 444, 448,
	449, 445, 446, 447, 522, 0, 451, 452, 450, 0,
	453, 454, 455, 456, 457, 283, 458, 0, 459, 523,
	524, 525, 526, 0, 466, 0, 460, 461, 527, 462,
	528, 0, 463, 464, 465, 0, 467, 468, 0, 2509,
	469, 470, 471, 473, 474, 472, 476, 0, 477, 0,
	475, 478, 479, 480, 529, 530, 531, 215, 482, 481,
	532, 0, 0, 0, 0, 483, 484, 533, 485, 486,
	487, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 0, 488, 0, 0, 0,
	0, 227, 229, 228, 230, 231, 489, 490, 232, 491,
	235, 233, 234, 492, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 243, 493, 494, 495, 2350, 244,
	496, 0, 0, 2344, 245, 246, 247, 248, 249, 250,
	0, 252, 253, 254, 251, 2347, 255, 0, 256, 257,
	258, 0, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 0, 0, 262, 263, 264, 265, 266, 267, 497,
	498, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 273, 274, 0, 275, 0, 276, 277, 0, 278,
	499, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	500, 501, 0, 0, 0, 0, 0, 0, 0, 289,
	290, 291, 502, 292, 293, 0, 294, 0, 295, 2353,
	0, 0, 296, 297, 0, 298, 503, 0, 504, 299,
	0, 300, 301, 302, 303, 2343, 506, 507, 358, 0,
	304, 305, 0, 306, 307, 309, 0, 0, 0, 308,
	310, 317, 0, 0, 311, 508, 313, 312, 314, 315,
	316, 509, 0, 510, 0, 318, 0, 511, 0, 319,
	320, 321, 0, 322, 323, 0, 0, 324, 325, 326,
	327, 328, 0, 330, 329, 0, 331, 512, 0, 332,
	333, 0, 0, 334, 335, 0, 0, 336, 337, 338,
	339, 0, 340, 341, 343, 345, 342, 344, 346, 348,
	349, 347, 0, 350, 351, 354, 355, 353, 0, 352,
	0, 0, 0, 356, 0, 513, 357, 514, 359, 360,
	0, 361, 362, 363, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 515, 0, 370, 0, 516, 371, 364,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	517, 381, 518, 382, 2352, 383, 0, 384, 385, 386,
	387, 388, 389, 390, 519, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 399, 400, 401, 398, 402, 403,
	404, 405, 0, 406, 0, 407, 408, 409, 410, 520,
	411, 0, 412, 416, 417, 418, 419, 420, 421, 422,
	0, 428, 429, 423, 425, 426, 427, 424, 430, 431,
	432, 0, 433, 413, 414, 434, 435, 0, 436, 437,
	521, 438, 439, 0, 440, 441, 442, 443, 415, 444,
	448, 449, 445, 446, 447, 522, 0, 451, 452, 450,
	0, 453, 454, 455, 456, 457, 283, 458, 0, 459,
	523, 524, 525, 526, 0, 466, 0, 460, 461, 527,
	462, 528, 0, 463, 464, 465, 0, 467, 468, 0,
	2351, 469, 470, 471, 473, 474, 472, 476, 0, 477,
	0, 475, 478, 479, 480, 529, 530, 531, 0, 482,
	481, 532, 1445, 0, 215, 0, 483, 484, 533, 485,
	486, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 227, 229,
	228, 230, 231, 489, 490, 232, 491, 235, 233, 234,
	492, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 243, 493, 494, 495, 0, 244, 496, 0, 0,
	0, 245, 246, 247, 248, 249, 250, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 0, 0,
	262, 263, 264, 265, 266, 267, 497, 498, 0, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 273, 274,
	0, 275, 0, 276, 277, 0, 278, 499, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 500, 501, 0,
	218, 0, 0, 0, 0, 0, 289, 290, 291, 502,
	292, 293, 0, 294, 0, 295, 0, 0, 0, 296,
	297, 0, 298, 503, 0, 504, 299, 0, 300, 301,
	302, 303, 505, 506, 507, 358, 0, 304, 305, 0,
	306, 307, 309, 0, 0, 219, 308, 310, 317, 0,
	0, 311, 508, 313, 312, 314, 315, 316, 509, 0,
	510, 0, 318, 0, 511, 0, 319, 320, 321, 0,
	322, 323, 0, 0, 324, 325, 326, 327, 328, 0,
	330, 329, 0, 331, 512, 0, 332, 333, 0, 0,
	334, 335, 0, 0, 336, 337, 338, 339, 0, 340,
	341, 343, 345, 342, 344, 346, 348, 349, 347, 0,
	350, 351, 354, 355, 353, 0, 352, 0, 220, 0,
	356, 0, 513, 357, 514, 359, 360, 0, 361, 362,
	363, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	515, 0, 370, 0, 516, 371, 364, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 517, 381, 518,
	382, 0, 383, 0, 384, 385, 386, 387, 388, 389,
	390, 519, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 399, 400, 401, 398, 402, 403, 404, 405, 0,
	406, 0, 407, 408, 409, 410, 520, 411, 0, 412,
	416, 417, 418, 419, 420, 421, 422, 0, 1448, 429,
	423, 425, 426, 427, 424, 430, 431, 432, 0, 433,
	413, 414, 434, 435, 0, 436, 437, 521, 438, 439,
	0, 440, 441, 442, 443, 415, 444, 448, 449, 445,
	446, 447, 522, 0, 451, 452, 450, 1446, 453, 454,
	455, 456, 457, 283, 458, 0, 459, 523, 524, 525,
	526, 0, 466, 0, 460, 461, 527, 462, 528, 0,
	463, 464, 465, 0, 467, 468, 0, 0, 469, 470,
	471, 473, 474, 472, 476, 0, 477, 0, 475, 478,
	479, 480, 529, 530, 531, 0, 1447, 481, 532, 1185,
	0, 215, 0, 483, 484, 533, 485, 486, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 222,
	223, 224, 225, 0, 226, 0, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 227, 229, 228, 230, 231,
	489, 490, 232, 491, 235, 233, 234, 492, 0, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 243, 493,
	494, 495, 0, 244, 496, 0, 0, 0, 245, 246,
	247, 248, 249, 250, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 0, 0, 262, 263, 264,
	265, 266, 267, 497, 498, 0, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 273, 274, 0, 275, 0,
	276, 277, 0, 278, 499, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 500, 501, 0, 218, 0, 0,
	0, 0, 0, 289, 290, 291, 502, 292, 293, 0,
	294, 0, 295, 0, 0, 0, 296, 297, 0, 298,
	503, 0, 504, 299, 0, 300, 301, 302, 303, 1187,
	506, 507, 358, 0, 304, 305, 0, 306, 307, 309,
	0, 0, 219, 308, 310, 317, 0, 0, 311, 508,
	313, 312, 314, 315, 316, 509, 0, 510, 0, 318,
	0, 511, 0, 319, 320, 321, 0, 322, 323, 0,
	0, 324, 325, 326, 327, 328, 0, 330, 329, 0,
	331, 512, 0, 332, 333, 0, 0, 334, 335, 0,
	0, 336, 337, 338, 339, 0, 340, 341, 343, 345,
	342, 344, 346, 348, 349, 347, 0, 350, 351, 354,
	355, 353, 0, 352, 0, 220, 0, 356, 0, 513,
	357, 514, 359, 360, 0, 361, 362, 363, 0, 1030,
	365, 366, 367, 0, 0, 368, 369, 515, 0, 370,
	0, 516, 371, 364, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 517, 381, 518, 382, 0, 383,
	0, 384, 385, 386, 387, 388, 389, 390, 519, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 399, 400,
	401, 398, 402, 403, 404, 405, 0, 406, 0, 407,
	408, 409, 410, 520, 411, 0, 412, 416, 417, 418,
	419, 420, 421, 422, 0, 428, 429, 423, 425, 426,
	427, 424, 430, 431, 432, 0, 433, 413, 414, 434,
	435, 0, 436, 437, 521, 438, 439, 0, 440, 441,
	442, 443, 415, 444, 448, 449, 445, 446, 447, 522,
	0, 451, 452, 450, 0, 453, 454, 455, 456, 457,
	283, 458, 0, 459, 523, 524, 525, 526, 0, 466,
	0, 460, 461, 527, 462, 528, 0, 463, 464, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 473, 474,
	472, 476, 0, 477, 0, 475, 478, 479, 480, 529,
	530, 531, 0, 482, 481, 532, 1182, 0, 215, 0,
	483, 484, 533, 485, 486, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 227, 229, 228, 230, 231, 489, 490, 232,
	491, 235, 233, 234, 492, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 493, 494, 495, 0,
	244, 496, 0, 0, 0, 245, 246, 247, 248, 249,
	250, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	497, 498, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 499, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 500, 501, 0, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 502, 292, 293, 0, 294, 0, 295,
	0, 0, 0, 296, 297, 0, 298, 503, 0, 504,
	299, 0, 300, 301, 302, 303, 1184, 506, 507, 358,
	0, 304, 305, 0, 306, 307, 309, 0, 0, 219,
	308, 310, 317, 0, 0, 311, 508, 313, 312, 314,
	315, 316, 509, 0, 510, 0, 318, 0, 511, 0,
	319, 320, 321, 0, 322, 323, 0, 0, 324, 325,
	326, 327, 328, 0, 330, 329, 0, 331, 512, 0,
	332, 333, 0, 0, 334, 335, 0, 0, 336, 337,
	338, 339, 0, 340, 341, 343, 345, 342, 344, 346,
	348, 349, 347, 0, 350, 351, 354, 355, 353, 0,
	352, 0, 220, 0, 356, 0, 513, 357, 514, 359,
	360, 0, 361, 362, 363, 0, 1030, 365, 366, 367,
	0, 0, 368, 369, 515, 0, 370, 0, 516, 371,
	364, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 517, 381, 518, 382, 0, 383, 0, 384, 385,
	386, 387, 388, 389, 390, 519, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 399, 400, 401, 398, 402,
	403, 404, 405, 0, 406, 0, 407, 408, 409, 410,
	520, 411, 0, 412, 416, 417, 418, 419, 420, 421,
	422, 0, 428, 429, 423, 425, 426, 427, 424, 430,
	431, 432, 0, 433, 413, 414, 434, 435, 0, 436,
	437, 521, 438, 439, 0, 440, 441, 442, 443, 415,
	444, 448, 449, 445, 446, 447, 522, 0, 451, 452,
	450, 0, 453, 454, 455, 456, 457, 283, 458, 0,
	459, 523, 524, 525, 526, 0, 466, 0, 460, 461,
	527, 462, 528, 0, 463, 464, 465, 0, 467, 468,
	0, 0, 469, 470, 471, 473, 474, 472, 476, 0,
	477, 0, 475, 478, 479, 480, 529, 530, 531, 0,
	482, 481, 532, 1089, 0, 215, 0, 483, 484, 533,
	485, 486, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 222, 223, 224, 225, 0, 226, 0,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 227,
	229, 228, 230, 231, 489, 490, 232, 491, 235, 233,
	234, 492, 0, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 243, 493, 494, 495, 0, 244, 496, 0,
	0, 0, 245, 246, 247, 248, 249, 250, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 0,
	0, 262, 263, 264, 265, 266, 267, 497, 498, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 499, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 500, 501,
	0, 218, 0, 0, 0, 0, 0, 289, 290, 291,
	502, 292, 293, 0, 294, 0, 295, 0, 0, 0,
	296, 297, 0, 298, 503, 0, 504, 299, 0, 300,
	301, 302, 303, 1091, 506, 507, 358, 0, 304, 305,
	0, 306, 307, 309, 0, 0, 219, 308, 310, 317,
	0, 0, 311, 508, 313, 312, 314, 315, 316, 509,
	0, 510, 0, 318, 0, 511, 0, 319, 320, 321,
	0, 322, 323, 0, 0, 324, 325, 326, 327, 328,
	0, 330, 329, 0, 331, 512, 0, 332, 333, 0,
	0, 334, 335, 0, 0, 336, 337, 338, 339, 0,
	340, 341, 343, 345, 342, 344, 346, 348, 349, 347,
	0, 350, 351, 354, 355, 353, 0, 352, 0, 220,
	0, 356, 0, 513, 357, 514, 359, 360, 0, 361,
	362, 363, 0, 1030, 365, 366, 367, 0, 0, 368,
	369, 515, 0, 370, 0, 516, 371, 364, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 517, 381,
	518, 382, 0, 383, 0, 384, 385, 386, 387, 388,
	389, 390, 519, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 399, 400, 401, 398, 402, 403, 404, 405,
	0, 406, 0, 407, 408, 409, 410, 520, 411, 0,
	412, 416, 417, 418, 419, 420, 421, 422, 0, 428,
	429, 423, 425, 426, 427, 424, 430, 431, 432, 0,
	433, 413, 414, 434, 435, 0, 436, 437, 521, 438,
	439, 0, 440, 441, 442, 443, 415, 444, 448, 449,
	445, 446, 447, 522, 0, 451, 452, 450, 0, 453,
	454, 455, 456, 457, 283, 458, 0, 459, 523, 524,
	525, 526, 0, 466, 0, 460, 461, 527, 462, 528,
	0, 463, 464, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 473, 474, 472, 476, 0, 477, 0, 475,
	478, 479, 480, 529, 530, 531, 0, 482, 481, 532,
	562, 0, 215, 0, 483, 484, 533, 485, 486, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	222, 223, 561, 225, 551, 226, 0, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 227, 229, 228, 230,
	231, 489, 490, 232, 491, 235, 233, 234, 492, 0,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 243,
	493, 494, 495, 0, 244, 496, 0, 0, 0, 245,
	246, 247, 248, 249, 250, 0, 252, 253, 254, 251,
	0, 255, 0, 256, 257, 258, 554, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 0, 0, 262, 263,
	264, 265, 266, 267, 497, 498, 0, 268, 0, 270,
	269, 0, 271, 0, 0, 272, 273, 274, 0, 275,
	0, 276, 277, 0, 278, 499, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 500, 501, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 291, 502, 292, 293,
	0, 294, 0, 295, 0, 0, 0, 296, 297, 555,
	298, 503, 0, 504, 299, 0, 300, 301, 302, 303,
	505, 506, 507, 358, 0, 304, 305, 0, 306, 307,
	309, 0, 0, 0, 308, 310, 317, 0, 0, 311,
	508, 313, 312, 314, 315, 316, 509, 0, 510, 0,
	318, 0, 511, 0, 319, 320, 321, 0, 322, 323,
	0, 0, 324, 325, 326, 327, 328, 0, 330, 329,
	0, 331, 512, 0, 332, 333, 0, 0, 334, 335,
	0, 0, 336, 337, 338, 339, 0, 340, 341, 343,
	345, 342, 344, 346, 348, 349, 347, 0, 350, 351,
	354, 355, 353, 0, 352, 0, 0, 0, 356, 0,
	513, 357, 514, 359, 360, 0, 361, 362, 363, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 515, 0,
	370, 0, 516, 371, 364, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 517, 381, 518, 382, 0,
	383, 0, 384, 385, 386, 387, 388, 389, 390, 519,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 399,
	400, 401, 398, 402, 403, 404, 405, 0, 406, 0,
	407, 408, 409, 410, 520, 411, 0, 412, 416, 417,
	418, 419, 420, 421, 422, 556, 428, 429, 423, 425,
	426, 427, 424, 430, 431, 432, 0, 433, 413, 414,
	434, 435, 0, 436, 437, 521, 438, 439, 0, 440,
	441, 442, 443, 415, 444, 448, 449, 445, 446, 447,
	522, 0, 451, 452, 450, 0, 453, 454, 455, 456,
	457, 283, 458, 0, 459, 523, 524, 525, 526, 0,
	466, 0, 460, 461, 527, 462, 528, 0, 463, 464,
	465, 0, 467, 468, 0, 0, 469, 470, 471, 473,
	474, 472, 476, 0, 477, 0, 475, 478, 479, 480,
	529, 530, 531, 0, 482, 481, 532, 550, 0, 215,
	0, 483, 484, 533, 485, 486, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 222, 223, 224,
	225, 551, 226, 0, 0, 0, 0, 0, 488, 0,
	0, 0, 0, 227, 229, 228, 230, 231, 489, 490,
	232, 491, 235, 233, 234, 492, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 493, 494, 495,
	0, 244, 496, 0, 0, 0, 245, 246, 247, 248,
	249, 250, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 554, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 0, 0, 262, 263, 264, 265, 266,
	267, 497, 498, 0, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 273, 274, 0, 275, 0, 276, 277,
	0, 278, 499, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 500, 501, 0, 0, 0, 0, 0, 0,
	0, 289, 290, 291, 502, 292, 293, 0, 294, 0,
	295, 0, 0, 0, 296, 297, 555, 298, 503, 0,
	504, 299, 0, 300, 301, 302, 303, 505, 506, 507,
	358, 0, 304, 305, 0, 306, 307, 309, 0, 0,
	0, 308, 310, 317, 0, 0, 311, 508, 313, 312,
	314, 315, 316, 509, 0, 510, 0, 318, 0, 511,
	0, 319, 320, 321, 0, 322, 323, 0, 0, 324,
	325, 326, 327, 328, 0, 330, 329, 0, 331, 512,
	0, 332, 333, 0, 0, 334, 335, 0, 0, 336,
	337, 338, 339, 0, 340, 341, 343, 345, 342, 344,
	346, 348, 349, 347, 0, 350, 351, 354, 355, 353,
	0, 352, 0, 0, 0, 356, 0, 513, 357, 514,
	359, 360, 0, 361, 362, 363, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 515, 0, 370, 0, 516,
	371, 364, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 517, 381, 518, 382, 0, 383, 0, 384,
	385, 386, 387, 388, 389, 390, 519, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 399, 400, 401, 398,
	402, 403, 404, 405, 0, 406, 0, 407, 408, 409,
	410, 520, 411, 0, 412, 416, 417, 418, 419, 420,
	421, 422, 556, 428, 429, 423, 425, 426, 427, 424,
	430, 431, 432, 0, 433, 413, 414, 434, 435, 0,
	436, 437, 521, 438, 439, 0, 440, 441, 442, 443,
	415, 444, 448, 449, 445, 446, 447, 522, 0, 451,
	452, 450, 0, 453, 454, 455, 456, 457, 283, 458,
	0, 459, 523, 524, 525, 526, 0, 466, 0, 460,
	461, 527, 462, 528, 0, 463, 464, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 473, 474, 472, 476,
	0, 477, 0, 475, 478, 479, 480, 529, 530, 531,
	215, 482, 481, 532, 0, 0, 0, 0, 483, 484,
	533, 485, 486, 487, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 227, 229, 228, 230, 231, 489,
	490, 232, 491, 235, 233, 234, 492, 0, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 243, 493, 494,
	495, 0, 244, 496, 0, 0, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 0, 0, 262, 263, 264, 265,
	266, 267, 497, 498, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 499, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 500, 501, 0, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 502, 292, 293, 0, 294,
	0, 295, 0, 0, 0, 296, 297, 0, 298, 503,
	0, 504, 299, 0, 300, 301, 302, 303, 505, 506,
	507, 358, 0, 304, 305, 0, 306, 307, 309, 0,
	0, 219, 308, 310, 317, 0, 0, 311, 508, 313,
	312, 314, 315, 316, 509, 0, 510, 0, 318, 0,
	511, 0, 319, 320, 321, 0, 322, 323, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	512, 0, 332, 333, 0, 0, 334, 335, 0, 0,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 349, 347, 0, 350, 351, 354, 355,
	353, 2839, 352, 0, 220, 0, 356, 0, 513, 357,
	514, 359, 360, 0, 361, 362, 363, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 0, 370, 0,
	516, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 517, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 519, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 0, 407, 408,
	409, 410, 520, 411, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 0, 428, 429, 423, 425, 426, 427,
	424, 430, 431, 432, 0, 433, 413, 414, 434, 435,
	0, 436, 437, 521, 438, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 449, 445, 446, 447, 522, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	458, 0, 459, 523, 524, 525, 526, 0, 466, 0,
	460, 461, 527, 462, 528, 0, 463, 464, 465, 0,
	467, 468, 0, 0, 469, 470, 471, 473, 474, 472,
	476, 0, 477, 0, 475, 478, 479, 480, 529, 530,
	531, 215, 482, 481, 532, 0, 0, 0, 0, 483,
	484, 533, 485, 486, 487, 0, 0, 0, 221, 222,
	223, 224, 225, 0, 226, 0, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 227, 229, 228, 230, 231,
	489, 490, 232, 491, 235, 233, 234, 492, 0, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 243, 493,
	494, 495, 0, 244, 496, 0, 0, 0, 245, 246,
	247, 248, 249, 250, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 0, 0, 262, 263, 264,
	265, 266, 267, 497, 498, 0, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 273, 274, 0, 275, 0,
	276, 277, 0, 278, 499, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 500, 501, 0, 218, 0, 0,
	0, 0, 0, 289, 290, 291, 502, 292, 293, 0,
	294, 0, 295, 0, 0, 0, 296, 297, 0, 298,
	503, 0, 504, 299, 0, 300, 301, 302, 303, 505,
	506, 507, 358, 0, 304, 305, 0, 306, 307, 309,
	0, 0, 219, 308, 310, 317, 0, 0, 311, 508,
	313, 312, 314, 315, 316, 509, 0, 510, 0, 318,
	0, 511, 0, 319, 320, 321, 0, 322, 323, 0,
	0, 324, 325, 326, 327, 328, 0, 330, 329, 0,
	331, 512, 0, 332, 333, 0, 0, 334, 335, 0,
	0, 336, 337, 338, 339, 0, 340, 341, 343, 345,
	342, 344, 346, 348, 349, 347, 0, 350, 351, 354,
	355, 353, 0, 352, 0, 220, 0, 356, 0, 513,
	357, 514, 359, 360, 0, 361, 362, 363, 0, 1030,
	365, 366, 367, 0, 0, 368, 369, 515, 0, 370,
	0, 516, 371, 364, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 517, 381, 518, 382, 0, 383,
	0, 384, 385, 386, 387, 388, 389, 390, 519, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 399, 400,
	401, 398, 402, 403, 404, 405, 0, 406, 0, 407,
	408, 409, 410, 520, 411, 0, 412, 416, 417, 418,
	419, 420, 421, 422, 0, 428, 429, 423, 425, 426,
	427, 424, 430, 431, 432, 0, 433, 413, 414, 434,
	435, 0, 436, 437, 521, 438, 439, 0, 440, 441,
	442, 443, 415, 444, 448, 449, 445, 446, 447, 522,
	0, 451, 452, 450, 0, 453, 454, 455, 456, 457,
	283, 458, 0, 459, 523, 524, 525, 526, 0, 466,
	0, 460, 461, 527, 462, 528, 0, 463, 464, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 473, 474,
	472, 476, 0, 477, 0, 475, 478, 479, 480, 529,
	530, 531, 0, 482, 481, 532, 2447, 0, 215, 0,
	483, 484, 533, 485, 486, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 227, 229, 228, 230, 231, 489, 490, 232,
	491, 235, 233, 234, 492, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 493, 494, 495, 0,
	244, 496, 0, 0, 0, 245, 246, 247, 248, 249,
	250, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	497, 498, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 499, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 500, 501, 0, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 502, 292, 293, 0, 294, 0, 295,
	0, 0, 0, 296, 297, 0, 298, 503, 0, 504,
	299, 0, 300, 301, 302, 303, 2446, 506, 507, 358,
	0, 304, 305, 0, 306, 307, 309, 0, 0, 219,
	308, 310, 317, 0, 0, 311, 508, 313, 312, 314,
	315, 316, 509, 0, 510, 0, 318, 0, 511, 0,
	319, 320, 321, 0, 322, 323, 0, 0, 324, 325,
	326, 327, 328, 0, 330, 329, 0, 331, 512, 0,
	332, 333, 0, 0, 334, 335, 0, 0, 336, 337,
	338, 339, 0, 340, 341, 343, 345, 342, 344, 346,
	348, 349, 347, 0, 350, 351, 354, 355, 353, 0,
	352, 0, 220, 0, 356, 0, 513, 357, 514, 359,
	360, 0, 361, 362, 363, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 515, 0, 370, 0, 516, 371,
	364, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 517, 381, 518, 382, 0, 383, 0, 384, 385,
	386, 387, 388, 389, 390, 519, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 399, 400, 401, 398, 402,
	403, 404, 405, 0, 406, 0, 407, 408, 409, 410,
	520, 411, 0, 412, 416, 417, 418, 419, 420, 421,
	422, 0, 428, 429, 423, 425, 426, 427, 424, 430,
	431, 432, 0, 433, 413, 414, 434, 435, 0, 436,
	437, 521, 438, 439, 0, 440, 441, 442, 443, 415,
	444, 448, 449, 445, 446, 447, 522, 0, 451, 452,
	450, 0, 453, 454, 455, 456, 457, 283, 458, 0,
	459, 523, 524, 525, 526, 0, 466, 0, 460, 461,
	527, 462, 528, 0, 463, 464, 465, 0, 467, 468,
	0, 0, 469, 470, 471, 473, 474, 472, 476, 0,
	477, 0, 475, 478, 479, 480, 529, 530, 531, 0,
	482, 481, 532, 1953, 0, 215, 0, 483, 484, 533,
	485, 486, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 222, 223, 224, 225, 0, 226, 0,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 227,
	229, 228, 230, 231, 489, 490, 232, 491, 235, 233,
	234, 492, 0, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 243, 493, 494, 495, 0, 244, 496, 0,
	0, 0, 245, 246, 247, 248, 249, 250, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 0,
	0, 262, 263, 264, 265, 266, 267, 497, 498, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 499, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 500, 501,
	0, 218, 0, 0, 0, 0, 0, 289, 290, 291,
	502, 292, 293, 0, 294, 0, 295, 0, 0, 0,
	296, 297, 0, 298, 503, 0, 504, 299, 0, 300,
	301, 302, 303, 505, 506, 507, 358, 0, 304, 305,
	0, 306, 307, 309, 0, 0, 219, 308, 310, 317,
	0, 0, 311, 508, 313, 312, 314, 315, 316, 509,
	0, 510, 0, 318, 0, 511, 0, 319, 320, 321,
	0, 322, 323, 0, 0, 324, 325, 326, 327, 328,
	0, 330, 329, 0, 331, 512, 0, 332, 333, 0,
	0, 334, 335, 0, 0, 336, 337, 338, 339, 0,
	340, 341, 343, 345, 342, 344, 346, 348, 349, 347,
	0, 350, 351, 354, 355, 353, 0, 352, 0, 220,
	0, 356, 0, 513, 357, 514, 359, 360, 0, 361,
	362, 363, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 515, 0, 370, 0, 516, 371, 364, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 517, 381,
	518, 382, 0, 383, 0, 384, 385, 386, 387, 388,
	389, 390, 519, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 399, 400, 401, 398, 402, 403, 404, 405,
	0, 406, 0, 407, 408, 409, 410, 520, 411, 0,
	412, 416, 417, 418, 419, 420, 421, 422, 0, 428,
	429, 423, 425, 426, 427, 424, 430, 431, 432, 0,
	433, 413, 414, 434, 435, 0, 436, 437, 521, 438,
	439, 0, 440, 441, 442, 443, 415, 444, 448, 449,
	445, 446, 447, 522, 0, 451, 452, 450, 0, 453,
	454, 455, 456, 457, 283, 458, 0, 459, 523, 524,
	525, 526, 0, 466, 0, 460, 461, 527, 462, 528,
	0, 463, 464, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 473, 474, 472, 476, 0, 477, 0, 475,
	478, 479, 480, 529, 530, 531, 215, 482, 481, 532,
	0, 0, 0, 0, 483, 484, 533, 485, 486, 487,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	227, 229, 228, 230, 231, 489, 490, 232, 491, 235,
	233, 234, 492, 0, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 243, 493, 494, 495, 0, 244, 496,
	0, 0, 0, 245, 246, 247, 248, 249, 250, 0,
	252, 253, 254, 251, 0, 255, 0, 256, 257, 258,
	0, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	0, 0, 262, 263, 264, 265, 266, 267, 497, 498,
	0, 268, 0, 270, 269, 0, 271, 0, 0, 272,
	273, 274, 0, 275, 0, 276, 277, 0, 278, 499,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 500,
	501, 0, 218, 0, 0, 0, 0, 0, 289, 290,
	291, 502, 292, 293, 0, 294, 0, 295, 0, 0,
	0, 296, 297, 0, 298, 503, 0, 504, 299, 0,
	300, 301, 302, 303, 505, 506, 507, 358, 0, 304,
	305, 0, 306, 307, 309, 0, 0, 219, 308, 310,
	317, 0, 0, 311, 508, 313, 312, 314, 315, 316,
	509, 0, 510, 0, 318, 0, 511, 0, 319, 320,
	321, 0, 322, 323, 0, 0, 324, 325, 326, 327,
	328, 0, 330, 329, 0, 331, 512, 0, 332, 333,
	0, 0, 334, 335, 0, 0, 336, 337, 338, 339,
	0, 340, 341, 343, 345, 342, 344, 346, 348, 349,
	347, 0, 350, 351, 354, 355, 353, 0, 352, 0,
	220, 0, 356, 0, 513, 357, 514, 359, 360, 0,
	361, 362, 363, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 515, 0, 370, 0, 516, 371, 364, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 517,
	381, 518, 382, 0, 383, 0, 384, 385, 386, 387,
	388, 389, 390, 519, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 399, 400, 401, 398, 402, 403, 404,
	405, 0, 406, 0, 407, 408, 409, 410, 520, 411,
	0, 412, 416, 417, 418, 419, 420, 421, 422, 0,
	428, 429, 423, 425, 426, 427, 424, 430, 431, 432,
	0, 433, 413, 414, 434, 435, 0, 436, 437, 521,
	438, 439, 0, 440, 441, 442, 443, 415, 444, 448,
	449, 445, 446, 447, 522, 0, 451, 452, 450, 1878,
	453, 454, 455, 456, 457, 283, 458, 0, 459, 523,
	524, 525, 526, 0, 466, 0, 460, 461, 527, 462,
	528, 0, 463, 464, 465, 0, 467, 468, 0, 0,
	469, 470, 471, 473, 474, 472, 476, 0, 477, 0,
	475, 478, 479, 480, 529, 530, 531, 0, 482, 481,
	532, 1883, 0, 215, 0, 483, 484, 533, 485, 486,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 222, 223, 224, 225, 0, 226, 0, 0, 0,
	0, 0, 488, 0, 0, 0, 0, 227, 229, 228,
	230, 231, 489, 490, 232, 491, 235, 233, 234, 492,
	0, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	243, 493, 494, 495, 0, 244, 496, 0, 0, 0,
	245, 246, 247, 248, 249, 250, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 0, 0, 262,
	263, 264, 265, 266, 267, 497, 498, 0, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 273, 274, 0,
	275, 0, 276, 277, 0, 278, 499, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 500, 501, 0, 218,
	0, 0, 0, 0, 0, 289, 290, 291, 502, 292,
	293, 0, 294, 0, 295, 0, 0, 0, 296, 297,
	0, 298, 503, 0, 504, 299, 0, 300, 301, 302,
	303, 1882, 506, 507, 358, 0, 304, 305, 0, 306,
	307, 309, 0, 0, 219, 308, 310, 317, 0, 0,
	311, 508, 313, 312, 314, 315, 316, 509, 0, 510,
	0, 318, 0, 511, 0, 319, 320, 321, 0, 322,
	323, 0, 0, 324, 325, 326, 327, 328, 0, 330,
	329, 0, 331, 512, 0, 332, 333, 0, 0, 334,
	335, 0, 0, 336, 337, 338, 339, 0, 340, 341,
	343, 345, 342, 344, 346, 348, 349, 347, 0, 350,
	351, 354, 355, 353, 0, 352, 0, 220, 0, 356,
	0, 513, 357, 514, 359, 360, 0, 361, 362, 363,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 515,
	0, 370, 0, 516, 371, 364, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 517, 381, 518, 382,
	0, 383, 0, 384, 385, 386, 387, 388, 389, 390,
	519, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	399, 400, 401, 398, 402, 403, 404, 405, 0, 406,
	0, 407, 408, 409, 410, 520, 411, 0, 412, 416,
	417, 418, 419, 420, 421, 422, 0, 428, 429, 423,
	425, 426, 427, 424, 430, 431, 432, 0, 433, 413,
	414, 434, 435, 0, 436, 437, 521, 438, 439, 0,
	440, 441, 442, 443, 415, 444, 448, 449, 445, 446,
	447, 522, 0, 451, 452, 450, 0, 453, 454, 455,
	456, 457, 283, 458, 0, 459, 523, 524, 525, 526,
	0, 466, 0, 460, 461, 527, 462, 528, 0, 463,
	464, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	473, 474, 472, 476, 0, 477, 0, 475, 478, 479,
	480, 529, 530, 531, 0, 482, 481, 532, 1871, 0,
	215, 0, 483, 484, 533, 485, 486, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 227, 229, 228, 230, 231, 489,
	490, 232, 491, 235, 233, 234, 492, 0, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 243, 493, 494,
	495, 0, 244, 496, 0, 0, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 0, 0, 262, 263, 264, 265,
	266, 267, 497, 498, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 499, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 500, 501, 0, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 502, 292, 293, 0, 294,
	0, 295, 0, 0, 0, 296, 297, 0, 298, 503,
	0, 504, 299, 0, 300, 301, 302, 303, 1873, 506,
	507, 358, 0, 304, 305, 0, 306, 307, 309, 0,
	0, 219, 308, 310, 317, 0, 0, 311, 508, 313,
	312, 314, 315, 316, 509, 0, 510, 0, 318, 0,
	511, 0, 319, 320, 321, 0, 322, 323, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	512, 0, 332, 333, 0, 0, 334, 335, 0, 0,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 349, 347, 0, 350, 351, 354, 355,
	353, 0, 352, 0, 220, 0, 356, 0, 513, 357,
	514, 359, 360, 0, 361, 362, 363, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 0, 370, 0,
	516, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 517, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 519, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 0, 407, 408,
	409, 410, 520, 411, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 0, 428, 429, 423, 425, 426, 427,
	424, 430, 431, 432, 0, 433, 413, 414, 434, 435,
	0, 436, 437, 521, 438, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 449, 445, 446, 447, 522, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	458, 0, 459, 523, 524, 525, 526, 0, 466, 0,
	460, 461, 527, 462, 528, 0, 463, 464, 465, 0,
	467, 468, 0, 0, 469, 470, 471, 473, 474, 472,
	476, 0, 477, 0, 475, 478, 479, 480, 529, 530,
	531, 0, 482, 481, 532, 1338, 0, 215, 0, 483,
	484, 533, 485, 486, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 0, 488, 0, 0, 0,
	0, 227, 229, 228, 230, 231, 489, 490, 232, 491,
	235, 233, 234, 492, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 243, 493, 494, 495, 0, 244,
	496, 0, 0, 0, 245, 246, 247, 248, 249, 250,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 0, 0, 262, 263, 264, 265, 266, 267, 497,
	498, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 273, 274, 0, 275, 0, 276, 277, 0, 278,
	499, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	500, 501, 0, 218, 0, 0, 0, 0, 0, 289,
	290, 291, 502, 292, 293, 0, 294, 0, 295, 0,
	0, 0, 296, 297, 0, 298, 503, 0, 504, 299,
	0, 300, 301, 302, 303, 1337, 506, 507, 358, 0,
	304, 305, 0, 306, 307, 309, 0, 0, 219, 308,
	310, 317, 0, 0, 311, 508, 313, 312, 314, 315,
	316, 509, 0, 510, 0, 318, 0, 511, 0, 319,
	320, 321, 0, 322, 323, 0, 0, 324, 325, 326,
	327, 328, 0, 330, 329, 0, 331, 512, 0, 332,
	333, 0, 0, 334, 335, 0, 0, 336, 337, 338,
	339, 0, 340, 341, 343, 345, 342, 344, 346, 348,
	349, 347, 0, 350, 351, 354, 355, 353, 0, 352,
	0, 220, 0, 356, 0, 513, 357, 514, 359, 360,
	0, 361, 362, 363, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 515, 0, 370, 0, 516, 371, 364,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	517, 381, 518, 382, 0, 383, 0, 384, 385, 386,
	387, 388, 389, 390, 519, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 399, 400, 401, 398, 402, 403,
	404, 405, 0, 406, 0, 407, 408, 409, 410, 520,
	411, 0, 412, 416, 417, 418, 419, 420, 421, 422,
	0, 428, 429, 423, 425, 426, 427, 424, 430, 431,
	432, 0, 433, 413, 414, 434, 435, 0, 436, 437,
	521, 438, 439, 0, 440, 441, 442, 443, 415, 444,
	448, 449, 445, 446, 447, 522, 0, 451, 452, 450,
	0, 453, 454, 455, 456, 457, 283, 458, 0, 459,
	523, 524, 525, 526, 0, 466, 0, 460, 461, 527,
	462, 528, 0, 463, 464, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 473, 474, 472, 476, 0, 477,
	0, 475, 478, 479, 480, 529, 530, 531, 0, 482,
	481, 532, 1335, 0, 215, 0, 483, 484, 533, 485,
	486, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 227, 229,
	228, 230, 231, 489, 490, 232, 491, 235, 233, 234,
	492, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 243, 493, 494, 495, 0, 244, 496, 0, 0,
	0, 245, 246, 247, 248, 249, 250, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 0, 0,
	262, 263, 264, 265, 266, 267, 497, 498, 0, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 273, 274,
	0, 275, 0, 276, 277, 0, 278, 499, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 500, 501, 0,
	218, 0, 0, 0, 0, 0, 289, 290, 291, 502,
	292, 293, 0, 294, 0, 295, 0, 0, 0, 296,
	297, 0, 298, 503, 0, 504, 299, 0, 300, 301,
	302, 303, 1334, 506, 507, 358, 0, 304, 305, 0,
	306, 307, 309, 0, 0, 219, 308, 310, 317, 0,
	0, 311, 508, 313, 312, 314, 315, 316, 509, 0,
	510, 0, 318, 0, 511, 0, 319, 320, 321, 0,
	322, 323, 0, 0, 324, 325, 326, 327, 328, 0,
	330, 329, 0, 331, 512, 0, 332, 333, 0, 0,
	334, 335, 0, 0, 336, 337, 338, 339, 0, 340,
	341, 343, 345, 342, 344, 346, 348, 349, 347, 0,
	350, 351, 354, 355, 353, 0, 352, 0, 220, 0,
	356, 0, 513, 357, 514, 359, 360, 0, 361, 362,
	363, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	515, 0, 370, 0, 516, 371, 364, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 517, 381, 518,
	382, 0, 383, 0, 384, 385, 386, 387, 388, 389,
	390, 519, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 399, 400, 401, 398, 402, 403, 404, 405, 0,
	406, 0, 407, 408, 409, 410, 520, 411, 0, 412,
	416, 417, 418, 419, 420, 421, 422, 0, 428, 429,
	423, 425, 426, 427, 424, 430, 431, 432, 0, 433,
	413, 414, 434, 435, 0, 436, 437, 521, 438, 439,
	0, 440, 441, 442, 443, 415, 444, 448, 449, 445,
	446, 447, 522, 0, 451, 452, 450, 0, 453, 454,
	455, 456, 457, 283, 458, 0, 459, 523, 524, 525,
	526, 0, 466, 0, 460, 461, 527, 462, 528, 0,
	463, 464, 465, 0, 467, 468, 0, 0, 469, 470,
	471, 473, 474, 472, 476, 0, 477, 0, 475, 478,
	479, 480, 529, 530, 531, 0, 482, 481, 532, 1332,
	0, 215, 0, 483, 484, 533, 485, 486, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 222,
	223, 224, 225, 0, 226, 0, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 227, 229, 228, 230, 231,
	489, 490, 232, 491, 235, 233, 234, 492, 0, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 243, 493,
	494, 495, 0, 244, 496, 0, 0, 0, 245, 246,
	247, 248, 249, 250, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 0, 0, 262, 263, 264,
	265, 266, 267, 497, 498, 0, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 273, 274, 0, 275, 0,
	276, 277, 0, 278, 499, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 500, 501, 0, 218, 0, 0,
	0, 0, 0, 289, 290, 291, 502, 292, 293, 0,
	294, 0, 295, 0, 0, 0, 296, 297, 0, 298,
	503, 0, 504, 299, 0, 300, 301, 302, 303, 1331,
	506, 507, 358, 0, 304, 305, 0, 306, 307, 309,
	0, 0, 219, 308, 310, 317, 0, 0, 311, 508,
	313, 312, 314, 315, 316, 509, 0, 510, 0, 318,
	0, 511, 0, 319, 320, 321, 0, 322, 323, 0,
	0, 324, 325, 326, 327, 328, 0, 330, 329, 0,
	331, 512, 0, 332, 333, 0, 0, 334, 335, 0,
	0, 336, 337, 338, 339, 0, 340, 341, 343, 345,
	342, 344, 346, 348, 349, 347, 0, 350, 351, 354,
	355, 353, 0, 352, 0, 220, 0, 356, 0, 513,
	357, 514, 359, 360, 0, 361, 362, 363, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 515, 0, 370,
	0, 516, 371, 364, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 517, 381, 518, 382, 0, 383,
	0, 384, 385, 386, 387, 388, 389, 390, 519, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 399, 400,
	401, 398, 402, 403, 404, 405, 0, 406, 0, 407,
	408, 409, 410, 520, 411, 0, 412, 416, 417, 418,
	419, 420, 421, 422, 0, 428, 429, 423, 425, 426,
	427, 424, 430, 431, 432, 0, 433, 413, 414, 434,
	435, 0, 436, 437, 521, 438, 439, 0, 440, 441,
	442, 443, 415, 444, 448, 449, 445, 446, 447, 522,
	0, 451, 452, 450, 0, 453, 454, 455, 456, 457,
	283, 458, 0, 459, 523, 524, 525, 526, 0, 466,
	0, 460, 461, 527, 462, 528, 0, 463, 464, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 473, 474,
	472, 476, 0, 477, 0, 475, 478, 479, 480, 529,
	530, 531, 0, 482, 481, 532, 1328, 0, 215, 0,
	483, 484, 533, 485, 486, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 227, 229, 228, 230, 231, 489, 490, 232,
	491, 235, 233, 234, 492, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 493, 494, 495, 0,
	244, 496, 0, 0, 0, 245, 246, 247, 248, 249,
	250, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	497, 498, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 499, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 500, 501, 0, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 502, 292, 293, 0, 294, 0, 295,
	0, 0, 0, 296, 297, 0, 298, 503, 0, 504,
	299, 0, 300, 301, 302, 303, 1327, 506, 507, 358,
	0, 304, 305, 0, 306, 307, 309, 0, 0, 219,
	308, 310, 317, 0, 0, 311, 508, 313, 312, 314,
	315, 316, 509, 0, 510, 0, 318, 0, 511, 0,
	319, 320, 321, 0, 322, 323, 0, 0, 324, 325,
	326, 327, 328, 0, 330, 329, 0, 331, 512, 0,
	332, 333, 0, 0, 334, 335, 0, 0, 336, 337,
	338, 339, 0, 340, 341, 343, 345, 342, 344, 346,
	348, 349, 347, 0, 350, 351, 354, 355, 353, 0,
	352, 0, 220, 0, 356, 0, 513, 357, 514, 359,
	360, 0, 361, 362, 363, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 515, 0, 370, 0, 516, 371,
	364, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 517, 381, 518, 382, 0, 383, 0, 384, 385,
	386, 387, 388, 389, 390, 519, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 399, 400, 401, 398, 402,
	403, 404, 405, 0, 406, 0, 407, 408, 409, 410,
	520, 411, 0, 412, 416, 417, 418, 419, 420, 421,
	422, 0, 428, 429, 423, 425, 426, 427, 424, 430,
	431, 432, 0, 433, 413, 414, 434, 435, 0, 436,
	437, 521, 438, 439, 0, 440, 441, 442, 443, 415,
	444, 448, 449, 445, 446, 447, 522, 0, 451, 452,
	450, 0, 453, 454, 455, 456, 457, 283, 458, 0,
	459, 523, 524, 525, 526, 0, 466, 0, 460, 461,
	527, 462, 528, 0, 463, 464, 465, 0, 467, 468,
	0, 0, 469, 470, 471, 473, 474, 472, 476, 0,
	477, 0, 475, 478, 479, 480, 529, 530, 531, 0,
	482, 481, 532, 1196, 0, 215, 0, 483, 484, 533,
	485, 486, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 222, 223, 224, 225, 0, 226, 0,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 227,
	229, 228, 230, 231, 489, 490, 232, 491, 235, 233,
	234, 492, 0, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 243, 493, 494, 495, 0, 244, 496, 0,
	0, 0, 245, 246, 247, 248, 249, 250, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 0,
	0, 262, 263, 264, 265, 266, 267, 497, 498, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 499, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 500, 501,
	0, 218, 0, 0, 0, 0, 0, 289, 290, 291,
	502, 292, 293, 0, 294, 0, 295, 0, 0, 0,
	296, 297, 0, 298, 503, 0, 504, 299, 0, 300,
	301, 302, 303, 1198, 506, 507, 358, 0, 304, 305,
	0, 306, 307, 309, 0, 0, 219, 308, 310, 317,
	0, 0, 311, 508, 313, 312, 314, 315, 316, 509,
	0, 510, 0, 318, 0, 511, 0, 319, 320, 321,
	0, 322, 323, 0, 0, 324, 325, 326, 327, 328,
	0, 330, 329, 0, 331, 512, 0, 332, 333, 0,
	0, 334, 335, 0, 0, 336, 337, 338, 339, 0,
	340, 341, 343, 345, 342, 344, 346, 348, 349, 347,
	0, 350, 351, 354, 355, 353, 0, 352, 0, 220,
	0, 356, 0, 513, 357, 514, 359, 360, 0, 361,
	362, 363, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 515, 0, 370, 0, 516, 371, 364, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 517, 381,
	518, 382, 0, 383, 0, 384, 385, 386, 387, 388,
	389, 390, 519, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 399, 400, 401, 398, 402, 403, 404, 405,
	0, 406, 0, 407, 408, 409, 410, 520, 411, 0,
	412, 416, 417, 418, 419, 420, 421, 422, 0, 428,
	429, 423, 425, 426, 427, 424, 430, 431, 432, 0,
	433, 413, 414, 434, 435, 0, 436, 437, 521, 438,
	439, 0, 440, 441, 442, 443, 415, 444, 448, 449,
	445, 446, 447, 522, 0, 451, 452, 450, 0, 453,
	454, 455, 456, 457, 283, 458, 0, 459, 523, 524,
	525, 526, 0, 466, 0, 460, 461, 527, 462, 528,
	0, 463, 464, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 473, 474, 472, 476, 0, 477, 0, 475,
	478, 479, 480, 529, 530, 531, 215, 482, 481, 532,
	0, 0, 0, 0, 483, 484, 533, 485, 486, 487,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	227, 229, 228, 230, 231, 489, 490, 232, 491, 235,
	233, 234, 492, 0, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 243, 493, 494, 495, 0, 244, 496,
	0, 0, 0, 245, 246, 247, 248, 249, 250, 0,
	252, 253, 254, 251, 0, 255, 0, 256, 257, 258,
	0, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	0, 0, 262, 263, 264, 265, 266, 267, 497, 498,
	0, 268, 0, 270, 269, 0, 271, 0, 0, 272,
	273, 274, 0, 275, 0, 276, 277, 0, 278, 499,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 500,
	501, 0, 218, 0, 0, 0, 0, 0, 289, 290,
	291, 502, 292, 293, 0, 294, 0, 295, 0, 0,
	0, 296, 297, 0, 298, 503, 0, 504, 299, 0,
	300, 301, 302, 303, 505, 506, 507, 358, 0, 304,
	305, 0, 306, 307, 309, 0, 0, 219, 308, 310,
	317, 0, 0, 311, 508, 313, 312, 314, 315, 316,
	509, 0, 510, 0, 318, 0, 511, 0, 319, 320,
	321, 0, 322, 323, 0, 0, 324, 325, 326, 327,
	328, 0, 330, 329, 0, 331, 512, 0, 332, 333,
	0, 0, 334, 335, 0, 0, 336, 337, 338, 339,
	0, 340, 341, 343, 345, 342, 344, 346, 348, 349,
	347, 0, 350, 351, 354, 355, 353, 0, 352, 0,
	220, 0, 356, 0, 513, 357, 514, 359, 360, 0,
	361, 362, 363, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 515, 0, 370, 0, 516, 371, 364, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 517,
	381, 518, 382, 0, 383, 0, 384, 385, 386, 387,
	388, 389, 390, 519, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 399, 400, 401, 398, 402, 403, 404,
	405, 0, 406, 0, 407, 408, 409, 410, 520, 411,
	0, 412, 416, 417, 418, 419, 420, 421, 422, 0,
	428, 429, 423, 425, 426, 427, 424, 430, 431, 432,
	0, 433, 413, 414, 434, 435, 0, 436, 437, 521,
	438, 439, 0, 440, 441, 442, 443, 415, 444, 448,
	449, 445, 446, 447, 522, 0, 451, 452, 450, 0,
	453, 454, 455, 456, 457, 283, 458, 0, 459, 523,
	524, 525, 526, 0, 466, 0, 460, 461, 527, 462,
	528, 0, 463, 464, 465, 0, 467, 468, 0, 0,
	469, 470, 471, 473, 474, 472, 476, 0, 477, 0,
	475, 478, 479, 480, 529, 530, 531, 215, 482, 481,
	532, 0, 0, 0, 0, 483, 484, 533, 485, 486,
	487, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 0, 488, 0, 0, 0,
	0, 227, 229, 228, 230, 231, 489, 490, 232, 491,
	235, 233, 234, 492, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 243, 493, 494, 495, 0, 244,
	496, 0, 0, 0, 245, 246, 247, 248, 249, 250,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 554, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 0, 0, 262, 263, 264, 265, 266, 267, 497,
	498, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 273, 274, 0, 275, 0, 276, 277, 0, 278,
	499, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	500, 501, 0, 0, 0, 0, 0, 0, 0, 289,
	290, 291, 502, 292, 293, 0, 294, 0, 295, 0,
	0, 0, 296, 297, 555, 298, 503, 0, 504, 299,
	0, 300, 301, 302, 303, 505, 506, 507, 358, 0,
	304, 305, 0, 306, 307, 309, 0, 0, 0, 308,
	310, 317, 0, 0, 311, 508, 313, 312, 314, 315,
	316, 509, 0, 510, 0, 318, 0, 511, 0, 319,
	320, 321, 0, 322, 323, 0, 0, 324, 325, 326,
	327, 328, 0, 330, 329, 0, 331, 512, 0, 332,
	333, 0, 0, 334, 335, 0, 0, 336, 337, 338,
	339, 0, 340, 341, 343, 345, 342, 344, 346, 348,
	349, 347, 0, 350, 351, 354, 355, 353, 0, 352,
	0, 0, 0, 356, 0, 513, 357, 514, 359, 360,
	0, 361, 362, 363, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 515, 0, 370, 0, 516, 371, 364,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	517, 381, 518, 382, 0, 383, 0, 384, 385, 386,
	387, 388, 389, 390, 519, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 399, 400, 401, 398, 402, 403,
	404, 405, 0, 406, 0, 407, 408, 409, 410, 520,
	411, 0, 412, 416, 417, 418, 419, 420, 421, 422,
	556, 428, 429, 423, 425, 426, 427, 424, 430, 431,
	432, 0, 433, 413, 414, 434, 435, 0, 436, 437,
	521, 438, 439, 0, 440, 441, 442, 443, 415, 444,
	448, 449, 445, 446, 447, 522, 0, 451, 452, 450,
	0, 453, 454, 455, 456, 457, 283, 458, 0, 459,
	523, 524, 525, 526, 0, 466, 0, 460, 461, 527,
	462, 528, 0, 463, 464, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 473, 474, 472, 476, 0, 477,
	0, 475, 478, 479, 480, 529, 530, 531, 215, 482,
	481, 532, 0, 0, 0, 0, 483, 484, 533, 485,
	486, 487, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 227, 229, 228, 230, 231, 489, 490, 232,
	491, 235, 233, 234, 492, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 493, 494, 495, 0,
	244, 496, 0, 0, 0, 245, 246, 247, 248, 249,
	250, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 1984, 265, 266, 267,
	497, 498, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 499, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 500, 501, 0, 218, 0, 0, 0, 0, 0,
	289, 290, 291, 502, 292, 293, 0, 294, 0, 295,
	0, 0, 0, 296, 297, 0, 298, 503, 0, 504,
	299, 0, 300, 301, 302, 303, 505, 506, 507, 358,
	0, 304, 305, 0, 306, 307, 309, 0, 0, 219,
	308, 310, 317, 0, 0, 311, 508, 313, 312, 314,
	315, 316, 509, 0, 510, 0, 318, 0, 511, 0,
	319, 320, 321, 0, 322, 323, 0, 0, 324, 325,
	326, 327, 328, 0, 330, 329, 0, 331, 512, 0,
	332, 333, 0, 0, 334, 335, 0, 0, 336, 337,
	338, 339, 0, 340, 341, 343, 345, 342, 344, 346,
	348, 349, 347, 0, 350, 351, 354, 355, 353, 0,
	352, 0, 220, 0, 356, 0, 513, 357, 514, 359,
	360, 0, 361, 362, 363, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 515, 0, 370, 0, 516, 371,
	364, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 517, 381, 518, 382, 0, 383, 0, 384, 385,
	386, 387, 388, 389, 390, 519, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 399, 400, 401, 398, 402,
	403, 404, 405, 0, 406, 0, 407, 408, 409, 410,
	520, 411, 0, 412, 416, 417, 418, 419, 420, 421,
	422, 0, 428, 429, 423, 425, 426, 427, 424, 430,
	431, 432, 0, 433, 413, 414, 434, 435, 0, 436,
	437, 521, 438, 439, 0, 440, 441, 442, 443, 415,
	444, 448, 449, 445, 446, 447, 522, 0, 451, 452,
	450, 0, 453, 454, 455, 456, 457, 283, 458, 0,
	459, 523, 524, 525, 526, 0, 466, 0, 460, 461,
	527, 462, 528, 0, 463, 464, 465, 0, 467, 468,
	0, 0, 469, 470, 471, 473, 474, 472, 476, 0,
	477, 0, 475, 478, 479, 480, 529, 530, 531, 215,
	482, 481, 532, 0, 0, 0, 0, 483, 484, 533,
	485, 486, 487, 0, 0, 0, 221, 222, 223, 224,
	225, 0, 226, 0, 0, 0, 0, 0, 488, 0,
	0, 0, 0, 227, 229, 228, 230, 231, 489, 490,
	232, 491, 235, 233, 234, 492, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 493, 494, 495,
	0, 244, 496, 0, 0, 0, 245, 246, 247, 248,
	249, 250, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 0, 0, 262, 263, 1982, 265, 266,
	267, 497, 498, 0, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 273, 274, 0, 275, 0, 276, 277,
	0, 278, 499, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 500, 501, 0, 218, 0, 0, 0, 0,
	0, 289, 290, 291, 502, 292, 293, 0, 294, 0,
	295, 0, 0, 0, 296, 297, 0, 298, 503, 0,
	504, 299, 0, 300, 301, 302, 303, 505, 506, 507,
	358, 0, 304, 305, 0, 306, 307, 309, 0, 0,
	219, 308, 310, 317, 0, 0, 311, 508, 313, 312,
	314, 315, 316, 509, 0, 510, 0, 318, 0, 511,
	0, 319, 320, 321, 0, 322, 323, 0, 0, 324,
	325, 326, 327, 328, 0, 330, 329, 0, 331, 512,
	0, 332, 333, 0, 0, 334, 335, 0, 0, 336,
	337, 338, 339, 0, 340, 341, 343, 345, 342, 344,
	346, 348, 349, 347, 0, 350, 351, 354, 355, 353,
	0, 352, 0, 220, 0, 356, 0, 513, 357, 514,
	359, 360, 0, 361, 362, 363, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 515, 0, 370, 0, 516,
	371, 364, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 517, 381, 518, 382, 0, 383, 0, 384,
	385, 386, 387, 388, 389, 390, 519, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 399, 400, 401, 398,
	402, 403, 404, 405, 0, 406, 0, 407, 408, 409,
	410, 520, 411, 0, 412, 416, 417, 418, 419, 420,
	421, 422, 0, 428, 429, 423, 425, 426, 427, 424,
	430, 431, 432, 0, 433, 413, 414, 434, 435, 0,
	436, 437, 521, 438, 439, 0, 440, 441, 442, 443,
	415, 444, 448, 449, 445, 446, 447, 522, 0, 451,
	452, 450, 0, 453, 454, 455, 456, 457, 283, 458,
	0, 459, 523, 524, 525, 526, 0, 466, 0, 460,
	461, 527, 462, 528, 0, 463, 464, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 473, 474, 472, 476,
	0, 477, 0, 475, 478, 479, 480, 529, 530, 531,
	215, 482, 481, 532, 0, 0, 0, 0, 483, 484,
	533, 485, 486, 487, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 227, 229, 228, 230, 231, 489,
	490, 232, 491, 235, 233, 234, 492, 0, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 243, 493, 494,
	495, 0, 244, 496, 0, 0, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 0, 0, 262, 263, 1980, 265,
	266, 267, 497, 498, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 499, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 500, 501, 0, 218, 0, 0, 0,
	0, 0, 289, 290, 291, 502, 292, 293, 0, 294,
	0, 295, 0, 0, 0, 296, 297, 0, 298, 503,
	0, 504, 299, 0, 300, 301, 302, 303, 505, 506,
	507, 358, 0, 304, 305, 0, 306, 307, 309, 0,
	0, 219, 308, 310, 317, 0, 0, 311, 508, 313,
	312, 314, 315, 316, 509, 0, 510, 0, 318, 0,
	511, 0, 319, 320, 321, 0, 322, 323, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	512, 0, 332, 333, 0, 0, 334, 335, 0, 0,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 349, 347, 0, 350, 351, 354, 355,
	353, 0, 352, 0, 220, 0, 356, 0, 513, 357,
	514, 359, 360, 0, 361, 362, 363, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 0, 370, 0,
	516, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 517, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 519, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 0, 407, 408,
	409, 410, 520, 411, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 0, 428, 429, 423, 425, 426, 427,
	424, 430, 431, 432, 0, 433, 413, 414, 434, 435,
	0, 436, 437, 521, 438, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 449, 445, 446, 447, 522, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	458, 0, 459, 523, 524, 525, 526, 0, 466, 0,
	460, 461, 527, 462, 528, 0, 463, 464, 465, 0,
	467, 468, 0, 0, 469, 470, 471, 473, 474, 472,
	476, 0, 477, 0, 475, 478, 479, 480, 529, 530,
	531, 0, 482, 481, 532, 707, 0, 215, 0, 483,
	484, 533, 485, 486, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 0, 488, 0, 0, 0,
	0, 227, 229, 228, 230, 231, 489, 490, 232, 491,
	235, 233, 234, 492, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 243, 493, 494, 495, 0, 244,
	496, 0, 0, 0, 245, 246, 247, 248, 249, 250,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 0, 0, 262, 263, 264, 265, 266, 267, 497,
	498, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 273, 274, 0, 275, 0, 276, 277, 0, 278,
	499, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	500, 501, 0, 0, 0, 0, 0, 0, 0, 289,
	290, 291, 502, 292, 293, 0, 294, 0, 295, 0,
	0, 0, 296, 297, 0, 298, 503, 0, 504, 299,
	0, 300, 301, 302, 303, 505, 506, 507, 358, 0,
	304, 305, 0, 306, 307, 309, 0, 0, 0, 308,
	310, 317, 0, 0, 311, 508, 313, 312, 314, 315,
	316, 509, 0, 510, 706, 318, 0, 511, 0, 319,
	320, 321, 0, 322, 323, 0, 0, 324, 325, 326,
	327, 328, 0, 330, 329, 0, 331, 512, 0, 332,
	333, 0, 0, 334, 335, 0, 0, 336, 337, 338,
	339, 0, 340, 341, 343, 345, 342, 344, 346, 348,
	349, 347, 0, 350, 351, 354, 355, 353, 0, 352,
	0, 0, 0, 356, 0, 513, 357, 514, 359, 360,
	0, 361, 362, 363, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 515, 0, 370, 0, 516, 371, 364,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	517, 381, 518, 382, 0, 383, 0, 384, 385, 386,
	387, 388, 389, 390, 519, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 399, 400, 401, 398, 402, 403,
	404, 405, 0, 406, 0, 407, 408, 409, 410, 520,
	411, 0, 412, 416, 417, 418, 419, 420, 421, 422,
	0, 428, 429, 423, 425, 426, 427, 424, 430, 431,
	432, 0, 433, 413, 414, 434, 435, 0, 436, 437,
	521, 438, 439, 0, 440, 441, 442, 443, 415, 444,
	448, 449, 445, 446, 447, 522, 0, 451, 452, 450,
	705, 453, 454, 455, 456, 457, 283, 458, 0, 459,
	523, 524, 525, 526, 0, 466, 0, 460, 461, 527,
	462, 528, 0, 463, 464, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 473, 474, 472, 476, 0, 477,
	0, 475, 478, 479, 480, 529, 530, 531, 215, 482,
	481, 532, 0, 0, 0, 0, 483, 484, 533, 485,
	486, 487, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 227, 229, 228, 230, 231, 489, 490, 232,
	491, 235, 233, 234, 492, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 493, 494, 495, 0,
	244, 496, 0, 0, 0, 245, 246, 247, 248, 249,
	250, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	497, 498, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 499, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 500, 501, 0, 2511, 0, 0, 0, 0, 0,
	289, 290, 291, 502, 292, 293, 0, 294, 0, 295,
	0, 0, 0, 296, 297, 0, 298, 503, 0, 504,
	299, 0, 300, 301, 302, 303, 505, 506, 507, 358,
	0, 304, 305, 0, 306, 307, 309, 0, 0, 0,
	308, 310, 317, 0, 0, 311, 508, 313, 312, 314,
	315, 316, 509, 0, 510, 0, 318, 0, 511, 0,
	319, 320, 321, 0, 322, 323, 0, 0, 324, 325,
	326, 327, 328, 0, 330, 329, 0, 331, 512, 0,
	332, 333, 0, 0, 334, 335, 0, 0, 336, 337,
	338, 339, 0, 340, 341, 343, 345, 342, 344, 346,
	348, 349, 347, 0, 350, 351, 354, 355, 353, 0,
	352, 0, 0, 0, 356, 0, 513, 357, 514, 359,
	360, 0, 361, 362, 363, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 515, 0, 370, 0, 516, 371,
	364, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 517, 381, 518, 382, 3353, 383, 0, 384, 385,
	386, 387, 388, 389, 390, 519, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 399, 400, 401, 398, 402,
	403, 404, 405, 0, 406, 0, 407, 408, 409, 410,
	520, 411, 0, 412, 416, 417, 418, 419, 420, 421,
	422, 0, 428, 429, 423, 425, 426, 427, 424, 430,
	431, 432, 0, 433, 413, 414, 434, 435, 0, 436,
	437, 521, 438, 439, 0, 440, 441, 442, 443, 415,
	444, 448, 449, 445, 446, 447, 522, 0, 451, 452,
	450, 0, 453, 454, 455, 456, 457, 283, 458, 0,
	459, 523, 524, 525, 526, 0, 466, 0, 460, 461,
	527, 462, 528, 0, 463, 464, 465, 0, 467, 468,
	0, 0, 469, 470, 471, 473, 474, 472, 476, 0,
	477, 0, 475, 478, 479, 480, 529, 530, 531, 0,
	482, 481, 532, 541, 0, 215, 0, 483, 484, 533,
	485, 486, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 222, 223, 224, 225, 540, 226, 0,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 227,
	229, 228, 230, 231, 489, 490, 232, 491, 235, 233,
	234, 492, 0, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 243, 493, 494, 495, 0, 244, 496, 0,
	0, 0, 245, 246, 247, 248, 249, 250, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 0,
	0, 262, 263, 264, 265, 266, 267, 497, 498, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 499, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 500, 501,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 291,
	502, 292, 293, 0, 294, 0, 295, 0, 0, 0,
	296, 297, 0, 298, 503, 0, 504, 299, 0, 300,
	301, 302, 303, 505, 506, 507, 358, 0, 304, 305,
	0, 306, 307, 309, 0, 0, 0, 308, 310, 317,
	0, 0, 311, 508, 313, 312, 314, 315, 316, 509,
	0, 510, 0, 318, 0, 511, 0, 319, 320, 321,
	0, 322, 323, 0, 0, 324, 325, 326, 327, 328,
	0, 330, 329, 0, 331, 512, 0, 332, 333, 0,
	0, 334, 335, 0, 0, 336, 337, 338, 339, 0,
	340, 341, 343, 345, 342, 344, 346, 348, 349, 347,
	0, 350, 351, 354, 355, 353, 0, 352, 0, 0,
	0, 356, 0, 513, 357, 514, 359, 360, 0, 361,
	362, 363, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 515, 0, 370, 0, 516, 371, 364, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 517, 381,
	518, 539, 0, 383, 0, 384, 385, 386, 387, 388,
	389, 390, 519, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 399, 400, 401, 398, 402, 403, 404, 405,
	0, 406, 0, 407, 408, 409, 410, 520, 411, 0,
	412, 416, 417, 418, 419, 420, 421, 422, 0, 428,
	429, 423, 425, 426, 427, 424, 430, 431, 432, 0,
	433, 413, 414, 434, 435, 0, 436, 437, 521, 438,
	439, 0, 440, 441, 442, 443, 415, 444, 448, 449,
	445, 446, 447, 522, 0, 451, 452, 450, 0, 453,
	454, 455, 456, 457, 283, 458, 0, 459, 523, 524,
	525, 526, 0, 466, 0, 460, 461, 527, 462, 528,
	0, 463, 464, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 473, 474, 472, 476, 0, 477, 0, 475,
	478, 479, 480, 529, 530, 531, 0, 482, 481, 532,
	215, 3362, 0, 0, 483, 484, 533, 485, 486, 487,
	0, 0, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 227, 229, 228, 230, 231, 489,
	490, 232, 491, 235, 233, 234, 492, 0, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 243, 493, 494,
	495, 0, 244, 496, 0, 0, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 0, 0, 262, 263, 264, 265,
	266, 267, 497, 498, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 499, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 500, 501, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 291, 502, 292, 293, 0, 294,
	0, 295, 0, 0, 0, 296, 297, 0, 298, 503,
	0, 504, 299, 0, 300, 301, 302, 303, 505, 506,
	507, 358, 0, 304, 305, 0, 306, 307, 309, 0,
	0, 0, 308, 310, 317, 0, 0, 311, 508, 313,
	312, 314, 315, 316, 509, 0, 510, 0, 318, 0,
	511, 0, 319, 320, 321, 0, 322, 323, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	512, 0, 332, 333, 0, 0, 334, 335, 0, 0,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 349, 347, 0, 350, 351, 354, 355,
	353, 0, 352, 0, 0, 0, 356, 0, 513, 357,
	514, 359, 360, 0, 361, 362, 363, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 0, 370, 0,
	516, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 517, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 519, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 0, 407, 408,
	409, 410, 520, 411, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 0, 428, 429, 423, 425, 426, 427,
	424, 430, 431, 432, 0, 433, 413, 414, 434, 435,
	0, 436, 437, 521, 438, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 449, 445, 446, 447, 522, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	458, 0, 459, 523, 524, 525, 526, 0, 466, 0,
	460, 461, 527, 462, 528, 0, 463, 464, 465, 0,
	467, 468, 0, 0, 469, 470, 471, 473, 474, 472,
	476, 0, 477, 0, 475, 478, 479, 480, 529, 530,
	531, 0, 482, 481, 532, 215, 2498, 0, 0, 483,
	484, 533, 485, 486, 487, 0, 0, 0, 0, 0,
	0, 0, 221, 222, 223, 224, 225, 0, 226, 0,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 227,
	229, 228, 230, 231, 489, 490, 232, 491, 235, 233,
	234, 492, 0, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 243, 493, 494, 495, 0, 244, 496, 0,
	0, 0, 245, 246, 247, 248, 249, 250, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 0,
	0, 262, 263, 264, 265, 266, 267, 497, 498, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 499, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 500, 501,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 291,
	502, 292, 293, 0, 294, 0, 295, 0, 0, 0,
	296, 297, 0, 298, 503, 0, 504, 299, 0, 300,
	301, 302, 303, 505, 506, 507, 358, 0, 304, 305,
	0, 306, 307, 309, 0, 0, 0, 308, 310, 317,
	0, 0, 311, 508, 313, 312, 314, 315, 316, 509,
	0, 510, 0, 318, 0, 511, 0, 319, 320, 321,
	0, 322, 323, 0, 0, 324, 325, 326, 327, 328,
	0, 330, 329, 0, 331, 512, 0, 332, 333, 0,
	0, 334, 335, 0, 0, 336, 337, 338, 339, 0,
	340, 341, 343, 345, 342, 344, 346, 348, 349, 347,
	0, 350, 351, 354, 355, 353, 0, 352, 0, 0,
	0, 356, 0, 513, 357, 514, 359, 360, 0, 361,
	362, 363, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 515, 0, 370, 0, 516, 371, 364, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 517, 381,
	518, 382, 0, 383, 0, 384, 385, 386, 387, 388,
	389, 390, 519, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 399, 400, 401, 398, 402, 403, 404, 405,
	0, 406, 0, 407, 408, 409, 410, 520, 411, 0,
	412, 416, 417, 418, 419, 420, 421, 422, 0, 428,
	429, 423, 425, 426, 427, 424, 430, 431, 432, 0,
	433, 413, 414, 434, 435, 0, 436, 437, 521, 438,
	439, 0, 440, 441, 442, 443, 415, 444, 448, 449,
	445, 446, 447, 522, 0, 451, 452, 450, 0, 453,
	454, 455, 456, 457, 283, 458, 0, 459, 523, 524,
	525, 526, 0, 466, 0, 460, 461, 527, 462, 528,
	0, 463, 464, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 473, 474, 472, 476, 0, 477, 0, 475,
	478, 479, 480, 529, 530, 531, 215, 482, 481, 532,
	0, 0, 0, 0, 483, 484, 533, 485, 486, 487,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	227, 229, 228, 230, 231, 489, 490, 232, 491, 235,
	233, 234, 492, 0, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 243, 493, 494, 495, 0, 244, 496,
	0, 0, 0, 245, 246, 247, 248, 249, 250, 0,
	252, 253, 254, 251, 0, 255, 0, 256, 257, 258,
	0, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	0, 0, 262, 263, 264, 265, 266, 267, 497, 498,
	3142, 268, 0, 270, 269, 0, 271, 0, 0, 272,
	273, 274, 0, 275, 0, 276, 277, 0, 278, 499,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 500,
	501, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	291, 502, 292, 293, 0, 294, 0, 295, 0, 0,
	0, 296, 297, 0, 298, 503, 0, 504, 299, 0,
	300, 301, 302, 303, 505, 506, 507, 358, 0, 304,
	305, 0, 306, 307, 309, 0, 0, 0, 308, 310,
	317, 0, 0, 311, 508, 313, 312, 314, 315, 316,
	509, 0, 510, 0, 318, 0, 511, 0, 319, 320,
	321, 0, 322, 323, 0, 0, 324, 325, 326, 327,
	328, 0, 330, 329, 0, 331, 512, 0, 332, 333,
	0, 0, 334, 335, 0, 0, 336, 337, 338, 339,
	0, 340, 341, 343, 345, 342, 344, 346, 348, 349,
	347, 0, 350, 351, 354, 355, 353, 0, 352, 0,
	0, 0, 356, 0, 513, 357, 514, 359, 360, 0,
	361, 362, 363, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 515, 0, 370, 0, 516, 371, 364, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 517,
	381, 518, 382, 0, 383, 0, 384, 385, 386, 387,
	388, 389, 390, 519, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 399, 400, 401, 398, 402, 403, 404,
	405, 0, 406, 0, 407, 408, 409, 410, 520, 411,
	0, 412, 416, 417, 418, 419, 420, 421, 422, 0,
	428, 429, 423, 425, 426, 427, 424, 430, 431, 432,
	0, 433, 413, 414, 434, 435, 0, 436, 437, 521,
	438, 439, 0, 440, 441, 442, 443, 415, 444, 448,
	449, 445, 446, 447, 522, 0, 451, 452, 450, 0,
	453, 454, 455, 456, 457, 283, 458, 0, 459, 523,
	524, 525, 526, 0, 466, 0, 460, 461, 527, 462,
	528, 0, 463, 464, 465, 0, 467, 468, 0, 0,
	469, 470, 471, 473, 474, 472, 476, 0, 477, 0,
	475, 478, 479, 480, 529, 530, 531, 215, 482, 481,
	532, 0, 0, 0, 0, 483, 484, 533, 485, 486,
	487, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 0, 488, 0, 2275, 0,
	0, 227, 229, 228, 230, 231, 489, 490, 232, 491,
	235, 233, 234, 492, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 243, 493, 494, 495, 0, 244,
	496, 0, 0, 0, 245, 246, 247, 248, 249, 250,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 0, 0, 262, 263, 264, 265, 266, 267, 497,
	498, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 273, 274, 0, 275, 0, 276, 277, 0, 278,
	499, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	500, 501, 0, 0, 0, 0, 0, 0, 0, 289,
	290, 291, 502, 292, 293, 0, 294, 0, 295, 0,
	0, 0, 296, 297, 0, 298, 503, 0, 504, 299,
	0, 300, 301, 302, 303, 505, 506, 507, 358, 0,
	304, 305, 0, 306, 307, 309, 0, 0, 0, 308,
	310, 317, 0, 0, 311, 508, 313, 312, 314, 315,
	316, 509, 0, 510, 0, 318, 0, 511, 0, 319,
	320, 321, 0, 322, 323, 0, 0, 324, 325, 326,
	327, 328, 0, 330, 329, 0, 331, 512, 0, 332,
	333, 0, 0, 334, 335, 0, 0, 336, 337, 338,
	339, 0, 340, 341, 343, 345, 342, 344, 346, 348,
	349, 347, 0, 350, 351, 354, 355, 353, 0, 352,
	0, 0, 0, 356, 0, 513, 357, 514, 359, 360,
	0, 361, 362, 363, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 515, 0, 370, 0, 516, 371, 364,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	517, 381, 518, 382, 0, 383, 0, 384, 385, 386,
	387, 388, 389, 390, 519, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 399, 400, 401, 398, 402, 403,
	404, 405, 0, 406, 0, 407, 408, 409, 410, 520,
	411, 0, 412, 416, 417, 418, 419, 420, 421, 422,
	0, 428, 429, 423, 425, 426, 427, 424, 430, 431,
	432, 0, 433, 413, 414, 434, 435, 0, 436, 437,
	521, 438, 439, 0, 440, 441, 442, 443, 415, 444,
	448, 449, 445, 446, 447, 522, 0, 451, 452, 450,
	0, 453, 454, 455, 456, 457, 283, 458, 0, 459,
	523, 524, 525, 526, 0, 466, 0, 460, 461, 527,
	462, 528, 0, 463, 464, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 473, 474, 472, 476, 0, 477,
	0, 475, 478, 479, 480, 529, 530, 531, 0, 482,
	481, 532, 215, 2498, 0, 0, 483, 484, 533, 485,
	486, 487, 0, 0, 0, 0, 0, 0, 0, 221,
	222, 223, 224, 225, 0, 226, 0, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 227, 229, 228, 230,
	231, 489, 490, 232, 491, 235, 233, 234, 492, 0,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 243,
	493, 494, 495, 0, 244, 496, 0, 0, 0, 245,
	246, 247, 248, 249, 250, 0, 252, 253, 254, 251,
	0, 255, 0, 256, 257, 258, 0, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 0, 0, 262, 263,
	264, 265, 266, 267, 497, 498, 0, 268, 0, 270,
	269, 0, 271, 0, 0, 272, 273, 274, 0, 275,
	0, 276, 277, 0, 278, 499, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 500, 501, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 291, 502, 292, 293,
	0, 294, 0, 295, 0, 0, 0, 296, 297, 0,
	298, 503, 0, 504, 299, 0, 300, 301, 302, 303,
	505, 506, 507, 358, 0, 304, 305, 0, 306, 307,
	309, 0, 0, 0, 308, 310, 317, 0, 0, 311,
	508, 313, 312, 314, 315, 316, 509, 0, 510, 0,
	318, 0, 511, 0, 319, 320, 321, 0, 322, 323,
	0, 0, 324, 325, 326, 327, 328, 0, 330, 329,
	0, 331, 512, 0, 332, 333, 0, 0, 334, 335,
	0, 0, 336, 337, 338, 339, 0, 340, 341, 343,
	345, 342, 344, 346, 348, 349, 347, 0, 350, 351,
	354, 355, 353, 0, 352, 0, 0, 0, 356, 0,
	513, 357, 514, 359, 360, 0, 361, 362, 363, 0,
	0, 365, 366, 2495, 0, 0, 368, 369, 515, 0,
	370, 0, 516, 371, 364, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 517, 381, 518, 382, 0,
	383, 0, 384, 385, 386, 387, 388, 389, 390, 519,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 399,
	400, 401, 398, 402, 403, 404, 405, 0, 406, 0,
	407, 408, 409, 410, 520, 411, 0, 412, 416, 417,
	418, 419, 420, 421, 422, 0, 428, 429, 423, 425,
	426, 427, 424, 430, 431, 432, 0, 433, 413, 414,
	434, 435, 0, 436, 437, 521, 438, 439, 0, 440,
	441, 442, 443, 415, 444, 448, 449, 445, 446, 447,
	522, 0, 451, 452, 450, 0, 453, 454, 455, 456,
	457, 283, 458, 0, 459, 523, 524, 525, 526, 0,
	466, 0, 460, 461, 527, 462, 528, 0, 463, 464,
	465, 0, 467, 468, 0, 0, 469, 470, 471, 473,
	474, 472, 476, 0, 477, 0, 475, 478, 479, 480,
	529, 530, 531, 215, 482, 481, 532, 0, 0, 0,
	0, 483, 484, 533, 485, 486, 487, 0, 0, 0,
	221, 222, 223, 224, 225, 1961, 226, 0, 0, 0,
	0, 0, 488, 0, 0, 0, 0, 227, 229, 228,
	230, 231, 489, 490, 232, 491, 235, 233, 234, 492,
	0, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	243, 493, 494, 495, 0, 244, 496, 0, 0, 0,
	245, 246, 247, 248, 249, 250, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 0, 0, 262,
	263, 264, 265, 266, 267, 497, 498, 0, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 273, 274, 0,
	275, 0, 276, 277, 0, 278, 499, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 500, 501, 0, 0,
	0, 0, 0, 0, 0, 289, 290, 291, 502, 292,
	293, 0, 294, 0, 295, 0, 0, 0, 296, 297,
	0, 298, 503, 0, 504, 299, 0, 300, 301, 302,
	303, 505, 506, 507, 358, 0, 304, 305, 0, 306,
	307, 309, 0, 0, 0, 308, 310, 317, 0, 0,
	311, 508, 313, 312, 314, 315, 316, 509, 0, 510,
	0, 318, 0, 511, 0, 319, 320, 321, 0, 322,
	323, 0, 0, 324, 325, 326, 327, 328, 0, 330,
	329, 0, 331, 512, 0, 332, 333, 0, 0, 334,
	335, 0, 0, 336, 337, 338, 339, 0, 340, 341,
	343, 345, 342, 344, 346, 348, 349, 347, 0, 350,
	351, 354, 355, 353, 0, 352, 0, 0, 0, 356,
	0, 513, 357, 514, 359, 360, 0, 361, 362, 363,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 515,
	0, 370, 0, 516, 371, 364, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 517, 381, 518, 382,
	0, 383, 0, 384, 385, 386, 387, 388, 389, 390,
	519, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	399, 400, 401, 398, 402, 403, 404, 405, 0, 406,
	0, 407, 408, 409, 410, 520, 411, 0, 412, 416,
	417, 418, 419, 420, 421, 422, 0, 428, 429, 423,
	425, 426, 427, 424, 430, 431, 432, 0, 433, 413,
	414, 434, 435, 0, 436, 437, 521, 438, 439, 0,
	440, 441, 442, 443, 415, 444, 448, 449, 445, 446,
	447, 522, 0, 451, 452, 450, 0, 453, 454, 455,
	456, 457, 283, 458, 0, 459, 523, 524, 525, 526,
	0, 466, 0, 460, 461, 527, 462, 528, 0, 463,
	464, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	473, 474, 472, 476, 0, 477, 0, 475, 478, 479,
	480, 529, 530, 531, 0, 482, 481, 532, 1951, 0,
	215, 0, 483, 484, 533, 485, 486, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 227, 229, 228, 230, 231, 489,
	490, 232, 491, 235, 233, 234, 492, 0, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 243, 493, 494,
	495, 0, 244, 496, 0, 0, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 0, 0, 262, 263, 264, 265,
	266, 267, 497, 498, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 499, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 500, 501, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 291, 502, 292, 293, 0, 294,
	0, 295, 0, 0, 0, 296, 297, 0, 298, 503,
	0, 504, 299, 0, 300, 301, 302, 303, 505, 506,
	507, 358, 0, 304, 305, 0, 306, 307, 309, 0,
	0, 0, 308, 310, 317, 0, 0, 311, 508, 313,
	312, 314, 315, 316, 509, 0, 510, 0, 318, 0,
	511, 0, 319, 320, 321, 0, 322, 323, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	512, 0, 332, 333, 0, 0, 334, 335, 0, 0,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 349, 347, 0, 350, 351, 354, 355,
	353, 0, 352, 0, 0, 0, 356, 0, 513, 357,
	514, 359, 360, 0, 361, 362, 363, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 0, 370, 0,
	516, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 517, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 519, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 0, 407, 408,
	409, 410, 520, 411, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 0, 428, 429, 423, 425, 426, 427,
	424, 430, 431, 432, 0, 433, 413, 414, 434, 435,
	0, 436, 437, 521, 438, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 449, 445, 446, 447, 522, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	458, 0, 459, 523, 524, 525, 526, 0, 466, 0,
	460, 461, 527, 462, 528, 0, 463, 464, 465, 0,
	467, 468, 0, 0, 469, 470, 471, 473, 474, 472,
	476, 0, 477, 0, 475, 478, 479, 480, 529, 530,
	531, 0, 482, 481, 532, 582, 0, 215, 0, 483,
	484, 533, 485, 486, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 0, 488, 0, 0, 0,
	0, 227, 1067, 228, 230, 231, 489, 490, 232, 491,
	235, 233, 234, 492, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 243, 493, 494, 1065, 0, 244,
	496, 0, 0, 0, 245, 246, 247, 248, 249, 250,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 0, 0, 262, 263, 264, 265, 266, 267, 497,
	498, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 273, 274, 0, 275, 0, 276, 277, 0, 278,
	499, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	500, 501, 0, 0, 0, 0, 0, 0, 0, 289,
	290, 291, 502, 292, 293, 0, 294, 0, 295, 0,
	0, 0, 296, 297, 0, 298, 503, 0, 504, 299,
	0, 300, 301, 302, 303, 505, 506, 507, 358, 0,
	304, 305, 0, 306, 307, 309, 0, 0, 0, 308,
	310, 317, 0, 0, 311, 508, 313, 312, 314, 315,
	316, 509, 0, 510, 0, 318, 0, 511, 0, 319,
	320, 321, 0, 322, 323, 0, 0, 324, 325, 326,
	327, 328, 0, 330, 329, 0, 331, 512, 0, 332,
	333, 0, 0, 334, 335, 0, 0, 336, 337, 338,
	339, 0, 340, 341, 343, 345, 342, 344, 346, 348,
	349, 583, 0, 350, 351, 354, 355, 353, 0, 352,
	0, 0, 0, 356, 0, 513, 357, 514, 359, 360,
	0, 361, 362, 363, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 515, 0, 370, 0, 516, 371, 364,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	517, 381, 518, 382, 0, 383, 0, 384, 385, 386,
	387, 388, 389, 390, 519, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 399, 400, 401, 398, 402, 403,
	404, 405, 0, 406, 0, 407, 408, 409, 410, 520,
	411, 0, 412, 416, 417, 579, 419, 420, 421, 422,
	0, 428, 429, 423, 425, 426, 427, 424, 430, 1068,
	432, 0, 433, 413, 414, 434, 435, 0, 436, 437,
	521, 438, 439, 0, 440, 441, 442, 443, 415, 444,
	448, 449, 445, 446, 447, 522, 0, 451, 452, 450,
	0, 453, 454, 455, 456, 457, 283, 458, 0, 459,
	578, 524, 525, 526, 0, 466, 0, 460, 461, 527,
	462, 528, 0, 463, 464, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 473, 474, 472, 476, 0, 477,
	0, 475, 478, 479, 480, 529, 530, 531, 0, 482,
	481, 532, 1895, 0, 215, 0, 483, 484, 533, 485,
	486, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 227, 229,
	228, 230, 231, 489, 490, 232, 491, 235, 233, 234,
	492, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 243, 493, 494, 495, 0, 244, 496, 0, 0,
	0, 245, 246, 247, 248, 249, 250, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 0, 0,
	262, 263, 264, 265, 266, 267, 497, 498, 0, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 273, 274,
	0, 275, 0, 276, 277, 0, 278, 499, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 500, 501, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 291, 502,
	292, 293, 0, 294, 0, 295, 0, 0, 0, 296,
	297, 0, 298, 503, 0, 504, 299, 0, 300, 301,
	302, 303, 1894, 506, 507, 358, 0, 304, 305, 0,
	306, 307, 309, 0, 0, 0, 308, 310, 317, 0,
	0, 311, 508, 313, 312, 314, 315, 316, 509, 0,
	510, 0, 318, 0, 511, 0, 319, 320, 321, 0,
	322, 323, 0, 0, 324, 325, 326, 327, 328, 0,
	330, 329, 0, 331, 512, 0, 332, 333, 0, 0,
	334, 335, 0, 0, 336, 337, 338, 339, 0, 340,
	341, 343, 345, 342, 344, 346, 348, 349, 347, 0,
	350, 351, 354, 355, 353, 0, 352, 0, 0, 0,
	356, 0, 513, 357, 514, 359, 360, 0, 361, 362,
	363, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	515, 0, 370, 0, 516, 371, 364, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 517, 381, 518,
	382, 0, 383, 0, 384, 385, 386, 387, 388, 389,
	390, 519, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 399, 400, 401, 398, 402, 403, 404, 405, 0,
	406, 0, 407, 408, 409, 410, 520, 411, 0, 412,
	416, 417, 418, 419, 420, 421, 422, 0, 428, 429,
	423, 425, 426, 427, 424, 430, 431, 432, 0, 433,
	413, 414, 434, 435, 0, 436, 437, 521, 438, 439,
	0, 440, 441, 442, 443, 415, 444, 448, 449, 445,
	446, 447, 522, 0, 451, 452, 450, 0, 453, 454,
	455, 456, 457, 283, 458, 0, 459, 523, 524, 525,
	526, 0, 466, 0, 460, 461, 527, 462, 528, 0,
	463, 464, 465, 0, 467, 468, 0, 0, 469, 470,
	471, 473, 474, 472, 476, 0, 477, 0, 475, 478,
	479, 480, 529, 530, 531, 0, 482, 481, 532, 582,
	0, 215, 0, 483, 484, 533, 485, 486, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 222,
	223, 224, 225, 0, 226, 0, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 227, 229, 228, 230, 231,
	489, 490, 232, 491, 235, 233, 234, 492, 0, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 243, 493,
	494, 495, 0, 572, 496, 0, 0, 0, 245, 246,
	247, 248, 249, 250, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 0, 0, 262, 263, 264,
	265, 266, 267, 497, 498, 0, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 273, 274, 0, 275, 0,
	276, 277, 0, 278, 499, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 500, 501, 0, 0, 0, 0,
	0, 0, 0, 289, 290, 291, 502, 292, 293, 0,
	294, 0, 295, 0, 0, 0, 296, 297, 0, 298,
	503, 0, 504, 299, 0, 300, 301, 302, 303, 505,
	506, 507, 358, 0, 304, 305, 0, 306, 307, 309,
	0, 0, 0, 308, 310, 317, 0, 0, 311, 508,
	313, 312, 314, 315, 316, 509, 0, 510, 0, 318,
	0, 511, 0, 319, 320, 321, 0, 322, 323, 0,
	0, 324, 325, 326, 327, 328, 0, 330, 329, 0,
	331, 512, 0, 332, 333, 0, 0, 334, 335, 0,
	0, 336, 337, 338, 339, 0, 340, 341, 343, 345,
	342, 344, 346, 348, 349, 583, 0, 350, 351, 354,
	355, 353, 0, 352, 0, 0, 0, 356, 0, 513,
	357, 514, 359, 360, 0, 361, 362, 363, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 515, 0, 370,
	0, 516, 371, 364, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 517, 381, 518, 382, 0, 383,
	0, 384, 385, 386, 387, 388, 389, 390, 519, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 399, 400,
	401, 398, 402, 403, 404, 405, 0, 406, 0, 407,
	408, 409, 410, 520, 411, 0, 412, 416, 417, 579,
	419, 420, 421, 422, 0, 428, 429, 423, 425, 426,
	427, 424, 430, 1360, 432, 0, 433, 413, 414, 434,
	435, 0, 436, 437, 521, 438, 439, 0, 440, 441,
	442, 443, 415, 444, 448, 449, 445, 446, 447, 522,
	0, 451, 452, 450, 0, 453, 454, 455, 456, 457,
	283, 458, 0, 459, 578, 524, 525, 526, 0, 466,
	0, 460, 461, 527, 462, 528, 0, 463, 464, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 473, 474,
	472, 476, 0, 477, 0, 475, 478, 479, 480, 529,
	530, 531, 0, 482, 481, 532, 1342, 0, 215, 0,
	483, 484, 533, 485, 486, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 227, 229, 228, 230, 231, 489, 490, 232,
	491, 235, 233, 234, 492, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 493, 494, 495, 0,
	244, 496, 0, 0, 0, 245, 246, 247, 248, 249,
	250, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	497, 498, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 499, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 500, 501, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 291, 502, 292, 293, 0, 294, 0, 295,
	0, 0, 0, 296, 297, 0, 298, 503, 0, 504,
	299, 0, 300, 301, 302, 303, 1341, 506, 507, 358,
	0, 304, 305, 0, 306, 307, 309, 0, 0, 0,
	308, 310, 317, 0, 0, 311, 508, 313, 312, 314,
	315, 316, 509, 0, 510, 0, 318, 0, 511, 0,
	319, 320, 321, 0, 322, 323, 0, 0, 324, 325,
	326, 327, 328, 0, 330, 329, 0, 331, 512, 0,
	332, 333, 0, 0, 334, 335, 0, 0, 336, 337,
	338, 339, 0, 340, 341, 343, 345, 342, 344, 346,
	348, 349, 347, 0, 350, 351, 354, 355, 353, 0,
	352, 0, 0, 0, 356, 0, 513, 357, 514, 359,
	360, 0, 361, 362, 363, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 515, 0, 370, 0, 516, 371,
	364, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 517, 381, 518, 382, 0, 383, 0, 384, 385,
	386, 387, 388, 389, 390, 519, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 399, 400, 401, 398, 402,
	403, 404, 405, 0, 406, 0, 407, 408, 409, 410,
	520, 411, 0, 412, 416, 417, 418, 419, 420, 421,
	422, 0, 428, 429, 423, 425, 426, 427, 424, 430,
	431, 432, 0, 433, 413, 414, 434, 435, 0, 436,
	437, 521, 438, 439, 0, 440, 441, 442, 443, 415,
	444, 448, 449, 445, 446, 447, 522, 0, 451, 452,
	450, 0, 453, 454, 455, 456, 457, 283, 458, 0,
	459, 523, 524, 525, 526, 0, 466, 0, 460, 461,
	527, 462, 528, 0, 463, 464, 465, 0, 467, 468,
	0, 0, 469, 470, 471, 473, 474, 472, 476, 0,
	477, 0, 475, 478, 479, 480, 529, 530, 531, 0,
	482, 481, 532, 1289, 0, 215, 0, 483, 484, 533,
	485, 486, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 222, 223, 224, 225, 0, 226, 0,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 227,
	229, 228, 230, 231, 489, 490, 232, 491, 235, 233,
	234, 492, 0, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 243, 493, 494, 495, 0, 244, 496, 0,
	0, 0, 245, 246, 247, 248, 249, 250, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 0,
	0, 262, 263, 264, 265, 266, 267, 497, 498, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 499, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 500, 501,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 291,
	502, 292, 293, 0, 294, 0, 295, 0, 0, 0,
	296, 297, 0, 298, 503, 0, 504, 299, 0, 300,
	301, 302, 303, 1288, 506, 507, 358, 0, 304, 305,
	0, 306, 307, 309, 0, 0, 0, 308, 310, 317,
	0, 0, 311, 508, 313, 312, 314, 315, 316, 509,
	0, 510, 0, 318, 0, 511, 0, 319, 320, 321,
	0, 322, 323, 0, 0, 324, 325, 326, 327, 328,
	0, 330, 329, 0, 331, 512, 0, 332, 333, 0,
	0, 334, 335, 0, 0, 336, 337, 338, 339, 0,
	340, 341, 343, 345, 342, 344, 346, 348, 349, 347,
	0, 350, 351, 354, 355, 353, 0, 352, 0, 0,
	0, 356, 0, 513, 357, 514, 359, 360, 0, 361,
	362, 363, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 515, 0, 370, 0, 516, 371, 364, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 517, 381,
	518, 382, 0, 383, 0, 384, 385, 386, 387, 388,
	389, 390, 519, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 399, 400, 401, 398, 402, 403, 404, 405,
	0, 406, 0, 407, 408, 409, 410, 520, 411, 0,
	412, 416, 417, 418, 419, 420, 421, 422, 0, 428,
	429, 423, 425, 426, 427, 424, 430, 431, 432, 0,
	433, 413, 414, 434, 435, 0, 436, 437, 521, 438,
	439, 0, 440, 441, 442, 443, 415, 444, 448, 449,
	445, 446, 447, 522, 0, 451, 452, 450, 0, 453,
	454, 455, 456, 457, 283, 458, 0, 459, 523, 524,
	525, 526, 0, 466, 0, 460, 461, 527, 462, 528,
	0, 463, 464, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 473, 474, 472, 476, 0, 477, 0, 475,
	478, 479, 480, 529, 530, 531, 0, 482, 481, 532,
	1271, 0, 215, 0, 483, 484, 533, 485, 486, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	222, 223, 224, 225, 0, 226, 0, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 227, 229, 228, 230,
	231, 489, 490, 232, 491, 235, 233, 234, 492, 0,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 243,
	493, 494, 495, 0, 244, 496, 0, 0, 0, 245,
	246, 247, 248, 249, 250, 0, 252, 253, 254, 251,
	0, 255, 0, 256, 257, 258, 0, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 0, 0, 262, 263,
	264, 265, 266, 267, 497, 498, 0, 268, 0, 270,
	269, 0, 271, 0, 0, 272, 273, 274, 0, 275,
	0, 276, 277, 0, 278, 499, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 500, 501, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 291, 502, 292, 293,
	0, 294, 0, 295, 0, 0, 0, 296, 297, 0,
	298, 503, 0, 504, 299, 0, 300, 301, 302, 303,
	1270, 506, 507, 358, 0, 304, 305, 0, 306, 307,
	309, 0, 0, 0, 308, 310, 317, 0, 0, 311,
	508, 313, 312, 314, 315, 316, 509, 0, 510, 0,
	318, 0, 511, 0, 319, 320, 321, 0, 322, 323,
	0, 0, 324, 325, 326, 327, 328, 0, 330, 329,
	0, 331, 512, 0, 332, 333, 0, 0, 334, 335,
	0, 0, 336, 337, 338, 339, 0, 340, 341, 343,
	345, 342, 344, 346, 348, 349, 347, 0, 350, 351,
	354, 355, 353, 0, 352, 0, 0, 0, 356, 0,
	513, 357, 514, 359, 360, 0, 361, 362, 363, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 515, 0,
	370, 0, 516, 371, 364, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 517, 381, 518, 382, 0,
	383, 0, 384, 385, 386, 387, 388, 389, 390, 519,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 399,
	400, 401, 398, 402, 403, 404, 405, 0, 406, 0,
	407, 408, 409, 410, 520, 411, 0, 412, 416, 417,
	418, 419, 420, 421, 422, 0, 428, 429, 423, 425,
	426, 427, 424, 430, 431, 432, 0, 433, 413, 414,
	434, 435, 0, 436, 437, 521, 438, 439, 0, 440,
	441, 442, 443, 415, 444, 448, 449, 445, 446, 447,
	522, 0, 451, 452, 450, 0, 453, 454, 455, 456,
	457, 283, 458, 0, 459, 523, 524, 525, 526, 0,
	466, 0, 460, 461, 527, 462, 528, 0, 463, 464,
	465, 0, 467, 468, 0, 0, 469, 470, 471, 473,
	474, 472, 476, 0, 477, 0, 475, 478, 479, 480,
	529, 530, 531, 0, 482, 481, 532, 1266, 0, 215,
	0, 483, 484, 533, 485, 486, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 222, 223, 224,
	225, 0, 226, 0, 0, 0, 0, 0, 488, 0,
	0, 0, 0, 227, 229, 228, 230, 231, 489, 490,
	232, 491, 235, 233, 234, 492, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 493, 494, 495,
	0, 244, 496, 0, 0, 0, 245, 246, 247, 248,
	249, 250, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 0, 0, 262, 263, 264, 265, 266,
	267, 497, 498, 0, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 273, 274, 0, 275, 0, 276, 277,
	0, 278, 499, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 500, 501, 0, 0, 0, 0, 0, 0,
	0, 289, 290, 291, 502, 292, 293, 0, 294, 0,
	295, 0, 0, 0, 296, 297, 0, 298, 503, 0,
	504, 299, 0, 300, 301, 302, 303, 505, 506, 507,
	358, 0, 304, 305, 0, 306, 307, 309, 0, 0,
	0, 308, 310, 317, 0, 0, 311, 508, 313, 312,
	314, 315, 316, 509, 0, 510, 0, 318, 0, 511,
	0, 319, 320, 321, 0, 322, 323, 0, 0, 324,
	325, 326, 327, 328, 0, 330, 329, 0, 331, 512,
	0, 332, 333, 0, 0, 334, 335, 0, 0, 336,
	337, 338, 339, 0, 340, 341, 343, 345, 342, 344,
	346, 348, 349, 347, 0, 350, 351, 354, 355, 353,
	0, 352, 0, 0, 0, 356, 0, 513, 357, 514,
	359, 360, 0, 361, 362, 363, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 515, 0, 370, 0, 516,
	371, 364, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 517, 381, 518, 382, 0, 383, 0, 384,
	385, 386, 387, 388, 389, 390, 519, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 399, 400, 401, 398,
	402, 403, 404, 405, 0, 406, 0, 407, 408, 409,
	410, 520, 411, 0, 412, 416, 417, 418, 419, 420,
	421, 422, 0, 428, 429, 423, 425, 426, 427, 424,
	430, 431, 432, 0, 433, 413, 414, 434, 435, 0,
	436, 437, 521, 438, 439, 0, 440, 441, 442, 443,
	415, 444, 448, 449, 445, 446, 447, 522, 0, 451,
	452, 450, 0, 453, 454, 455, 456, 457, 283, 458,
	0, 459, 523, 524, 525, 526, 0, 466, 0, 460,
	461, 527, 462, 528, 0, 463, 464, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 473, 474, 472, 476,
	0, 477, 0, 475, 478, 479, 480, 529, 530, 531,
	0, 482, 481, 532, 1190, 0, 215, 0, 483, 484,
	533, 485, 486, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	227, 229, 228, 230, 231, 489, 490, 232, 491, 235,
	233, 234, 492, 0, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 243, 493, 494, 495, 0, 244, 496,
	0, 0, 0, 245, 246, 247, 248, 249, 250, 0,
	252, 253, 254, 251, 0, 255, 0, 256, 257, 258,
	0, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	0, 0, 262, 263, 264, 265, 266, 267, 497, 498,
	0, 268, 0, 270, 269, 0, 271, 0, 0, 272,
	273, 274, 0, 275, 0, 276, 277, 0, 278, 499,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 500,
	501, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	291, 502, 292, 293, 0, 294, 0, 295, 0, 0,
	0, 296, 297, 0, 298, 503, 0, 504, 299, 0,
	300, 301, 302, 303, 505, 506, 507, 358, 0, 304,
	305, 0, 306, 307, 309, 0, 0, 0, 308, 310,
	317, 0, 0, 311, 508, 313, 312, 314, 315, 316,
	509, 0, 510, 0, 318, 0, 511, 0, 319, 320,
	321, 0, 322, 323, 0, 0, 324, 325, 326, 327,
	328, 0, 330, 329, 0, 331, 512, 0, 332, 333,
	0, 0, 334, 335, 0, 0, 336, 337, 338, 339,
	0, 340, 341, 343, 345, 342, 344, 346, 348, 349,
	347, 0, 350, 351, 354, 355, 353, 0, 352, 0,
	0, 0, 356, 0, 513, 357, 514, 359, 360, 0,
	361, 362, 363, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 515, 0, 370, 0, 516, 371, 364, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 517,
	381, 518, 382, 0, 383, 0, 384, 385, 386, 387,
	388, 389, 390, 519, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 399, 400, 401, 398, 402, 403, 404,
	405, 0, 406, 0, 407, 408, 409, 410, 520, 411,
	0, 412, 416, 417, 418, 419, 420, 421, 422, 0,
	428, 429, 423, 425, 426, 427, 424, 430, 431, 432,
	0, 433, 413, 414, 434, 435, 0, 436, 437, 521,
	438, 439, 0, 440, 441, 442, 443, 415, 444, 448,
	449, 445, 446, 447, 522, 0, 451, 452, 450, 0,
	453, 454, 455, 456, 457, 283, 458, 0, 459, 523,
	524, 525, 526, 0, 466, 0, 460, 461, 527, 462,
	528, 0, 463, 464, 465, 0, 467, 468, 0, 0,
	469, 470, 471, 473, 474, 472, 476, 0, 477, 0,
	475, 478, 479, 480, 529, 530, 531, 0, 482, 481,
	532, 582, 0, 215, 0, 483, 484, 533, 485, 486,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 222, 223, 224, 225, 0, 226, 0, 0, 0,
	0, 0, 488, 0, 0, 0, 0, 227, 1067, 228,
	230, 231, 489, 490, 232, 491, 235, 233, 234, 492,
	0, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	243, 493, 494, 1065, 0, 244, 496, 0, 0, 0,
	245, 246, 247, 248, 249, 250, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 0, 0, 262,
	263, 264, 265, 266, 267, 497, 498, 0, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 273, 274, 0,
	275, 0, 276, 277, 0, 278, 499, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 500, 501, 0, 0,
	0, 0, 0, 0, 0, 289, 290, 291, 502, 292,
	293, 0, 294, 0, 295, 0, 0, 0, 296, 297,
	0, 298, 503, 0, 504, 299, 0, 300, 301, 302,
	303, 505, 506, 507, 358, 0, 304, 305, 0, 306,
	307, 309, 0, 0, 0, 308, 310, 317, 0, 0,
	311, 508, 313, 312, 314, 315, 316, 509, 0, 510,
	0, 318, 0, 511, 0, 319, 320, 321, 0, 322,
	323, 0, 0, 324, 325, 326, 327, 328, 0, 330,
	329, 0, 331, 512, 0, 332, 333, 0, 0, 334,
	335, 0, 0, 336, 337, 338, 339, 0, 340, 341,
	343, 345, 342, 344, 346, 348, 349, 583, 0, 350,
	351, 354, 355, 353, 0, 352, 0, 0, 0, 356,
	0, 513, 357, 514, 359, 360, 0, 361, 362, 363,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 515,
	0, 370, 0, 516, 371, 364, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 517, 381, 518, 382,
	0, 383, 0, 384, 385, 386, 387, 388, 389, 390,
	519, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	399, 400, 401, 398, 402, 403, 404, 405, 0, 406,
	0, 407, 408, 409, 410, 520, 411, 0, 412, 416,
	417, 579, 419, 420, 421, 422, 0, 428, 429, 423,
	425, 426, 427, 424, 430, 1068, 432, 0, 433, 413,
	414, 434, 435, 0, 436, 437, 521, 438, 439, 0,
	440, 441, 442, 443, 415, 444, 448, 449, 445, 446,
	447, 522, 0, 451, 452, 450, 0, 453, 454, 455,
	456, 457, 283, 458, 0, 459, 578, 524, 525, 526,
	0, 466, 0, 460, 1066, 527, 462, 528, 0, 463,
	464, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	473, 474, 472, 476, 0, 477, 0, 475, 478, 479,
	480, 529, 530, 531, 215, 482, 481, 532, 0, 0,
	0, 0, 483, 484, 533, 485, 486, 487, 0, 0,
	0, 221, 222, 223, 224, 225, 1049, 226, 0, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 227, 229,
	228, 230, 231, 489, 490, 232, 491, 235, 233, 234,
	492, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 243, 493, 494, 495, 0, 244, 496, 0, 0,
	0, 245, 246, 247, 248, 249, 250, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 0, 0,
	262, 263, 264, 265, 266, 267, 497, 498, 0, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 273, 274,
	0, 275, 0, 276, 277, 0, 278, 499, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 500, 501, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 291, 502,
	292, 293, 0, 294, 0, 295, 0, 0, 0, 296,
	297, 0, 298, 503, 0, 504, 299, 0, 300, 301,
	302, 303, 505, 506, 507, 358, 0, 304, 305, 0,
	306, 307, 309, 0, 0, 0, 308, 310, 317, 0,
	0, 311, 508, 313, 312, 314, 315, 316, 509, 0,
	510, 0, 318, 0, 511, 0, 319, 320, 321, 0,
	322, 323, 0, 0, 324, 325, 326, 327, 328, 0,
	330, 329, 0, 331, 512, 0, 332, 333, 0, 0,
	334, 335, 0, 0, 336, 337, 338, 339, 0, 340,
	341, 343, 345, 342, 344, 346, 348, 349, 347, 0,
	350, 351, 354, 355, 353, 0, 352, 0, 0, 0,
	356, 0, 513, 357, 514, 359, 360, 0, 361, 362,
	363, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	515, 0, 370, 0, 516, 371, 364, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 517, 381, 518,
	382, 0, 383, 0, 384, 385, 386, 387, 388, 389,
	390, 519, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 399, 400, 401, 398, 402, 403, 404, 405, 0,
	406, 0, 407, 408, 409, 410, 520, 411, 0, 412,
	416, 417, 418, 419, 420, 421, 422, 0, 428, 429,
	423, 425, 426, 427, 424, 430, 431, 432, 0, 433,
	413, 414, 434, 435, 0, 436, 437, 521, 438, 439,
	0, 440, 441, 442, 443, 415, 444, 448, 449, 445,
	446, 447, 522, 0, 451, 452, 450, 0, 453, 454,
	455, 456, 457, 283, 458, 0, 459, 523, 524, 525,
	526, 0, 466, 0, 460, 461, 527, 462, 528, 0,
	463, 464, 465, 0, 467, 468, 0, 0, 469, 470,
	471, 473, 474, 472, 476, 0, 477, 0, 475, 478,
	479, 480, 529, 530, 531, 0, 482, 481, 532, 582,
	0, 215, 0, 483, 484, 533, 485, 486, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 222,
	223, 224, 225, 0, 226, 0, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 227, 229, 228, 230, 231,
	489, 490, 232, 491, 235, 233, 234, 492, 0, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 243, 493,
	494, 495, 0, 572, 496, 0, 0, 0, 245, 246,
	247, 248, 249, 250, 0, 252, 253, 254, 251, 0,
	570, 0, 256, 257, 258, 0, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 0, 0, 262, 263, 264,
	265, 266, 267, 497, 498, 0, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 273, 274, 0, 275, 0,
	276, 277, 0, 278, 499, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 500, 501, 0, 0, 0, 0,
	0, 0, 0, 289, 290, 291, 502, 292, 293, 0,
	294, 0, 295, 0, 0, 0, 296, 297, 0, 298,
	503, 0, 504, 299, 0, 300, 301, 302, 303, 505,
	506, 507, 358, 0, 304, 305, 0, 306, 307, 309,
	0, 0, 0, 308, 310, 317, 0, 0, 311, 508,
	313, 312, 314, 315, 316, 509, 0, 510, 0, 318,
	0, 511, 0, 319, 320, 321, 0, 322, 323, 0,
	0, 324, 325, 326, 327, 328, 0, 330, 329, 0,
	331, 512, 0, 332, 333, 0, 0, 334, 571, 0,
	0, 336, 337, 338, 339, 0, 340, 341, 343, 345,
	342, 344, 346, 348, 349, 583, 0, 350, 351, 354,
	355, 353, 0, 352, 0, 0, 0, 356, 0, 513,
	357, 514, 359, 360, 0, 361, 362, 363, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 515, 0, 370,
	0, 516, 371, 364, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 517, 381, 518, 382, 0, 383,
	0, 384, 385, 386, 387, 388, 389, 390, 519, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 399, 400,
	401, 398, 402, 403, 404, 405, 0, 406, 0, 407,
	408, 409, 410, 573, 411, 0, 412, 416, 417, 579,
	419, 420, 421, 422, 0, 428, 429, 423, 425, 426,
	427, 424, 430, 574, 432, 0, 433, 413, 414, 434,
	435, 0, 436, 437, 521, 438, 439, 0, 440, 441,
	442, 443, 415, 444, 448, 449, 445, 446, 447, 522,
	0, 451, 452, 450, 0, 453, 454, 455, 456, 457,
	283, 458, 0, 459, 578, 524, 525, 526, 0, 466,
	0, 460, 576, 527, 462, 528, 0, 463, 464, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 473, 474,
	472, 476, 0, 477, 0, 475, 478, 479, 480, 529,
	530, 531, 0, 482, 481, 532, 566, 0, 215, 0,
	483, 484, 533, 485, 486, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 227, 229, 228, 230, 231, 489, 490, 232,
	491, 235, 233, 234, 492, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 493, 494, 495, 0,
	244, 496, 0, 0, 0, 245, 246, 247, 248, 249,
	250, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	497, 498, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 499, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 500, 501, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 291, 502, 292, 293, 0, 294, 0, 295,
	0, 0, 0, 296, 297, 0, 298, 503, 0, 504,
	299, 0, 300, 301, 302, 303, 505, 506, 507, 358,
	0, 304, 305, 0, 306, 307, 309, 0, 0, 0,
	308, 310, 317, 0, 0, 311, 508, 313, 312, 314,
	315, 316, 509, 0, 510, 0, 318, 0, 511, 0,
	319, 320, 321, 0, 322, 323, 0, 0, 324, 325,
	326, 327, 328, 0, 330, 329, 0, 331, 512, 0,
	332, 333, 0, 0, 334, 335, 0, 0, 336, 337,
	338, 339, 0, 340, 341, 343, 345, 342, 344, 346,
	348, 349, 347, 0, 350, 351, 354, 355, 353, 0,
	352, 0, 0, 0, 356, 0, 513, 357, 514, 359,
	360, 0, 361, 362, 363, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 515, 0, 370, 0, 516, 371,
	364, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 517, 381, 518, 382, 0, 383, 0, 384, 385,
	386, 387, 388, 389, 390, 519, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 399, 400, 401, 398, 402,
	403, 404, 405, 0, 406, 0, 407, 408, 409, 410,
	520, 411, 0, 412, 567, 417, 418, 419, 420, 421,
	422, 0, 428, 429, 423, 425, 426, 427, 424, 430,
	431, 432, 0, 433, 413, 414, 434, 435, 0, 436,
	437, 521, 438, 439, 0, 440, 441, 442, 443, 415,
	444, 448, 449, 445, 446, 447, 522, 0, 451, 452,
	450, 0, 453, 454, 455, 456, 457, 283, 458, 0,
	459, 523, 524, 525, 526, 0, 466, 0, 460, 461,
	527, 462, 528, 0, 463, 464, 465, 0, 467, 468,
	0, 0, 469, 470, 471, 473, 474, 472, 476, 0,
	477, 0, 475, 478, 479, 480, 529, 530, 531, 0,
	482, 481, 532, 564, 0, 215, 0, 483, 484, 533,
	485, 486, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 222, 223, 224, 225, 0, 226, 0,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 227,
	229, 228, 230, 231, 489, 490, 232, 491, 235, 233,
	234, 492, 0, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 243, 493, 494, 495, 0, 244, 496, 0,
	0, 0, 245, 246, 247, 248, 249, 250, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 0,
	0, 262, 263, 264, 265, 266, 267, 497, 498, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 499, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 500, 501,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 291,
	502, 292, 293, 0, 294, 0, 295, 0, 0, 0,
	296, 297, 0, 298, 503, 0, 504, 299, 0, 300,
	301, 302, 303, 505, 506, 507, 358, 0, 304, 305,
	0, 306, 307, 309, 0, 0, 0, 308, 310, 317,
	0, 0, 311, 508, 313, 312, 314, 315, 316, 509,
	0, 510, 0, 318, 0, 511, 0, 319, 320, 321,
	0, 322, 323, 0, 0, 324, 325, 326, 327, 328,
	0, 330, 329, 0, 331, 512, 0, 332, 333, 0,
	0, 334, 335, 0, 0, 336, 337, 338, 339, 0,
	340, 341, 343, 345, 342, 344, 346, 348, 349, 347,
	0, 350, 351, 354, 355, 353, 0, 352, 0, 0,
	0, 356, 0, 513, 357, 514, 359, 360, 0, 361,
	362, 363, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 515, 0, 370, 0, 516, 371, 364, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 517, 381,
	518, 382, 0, 383, 0, 384, 385, 386, 387, 388,
	389, 390, 519, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 399, 400, 401, 398, 402, 403, 404, 405,
	0, 406, 0, 407, 408, 409, 410, 520, 411, 0,
	412, 416, 417, 418, 419, 420, 421, 422, 0, 428,
	429, 423, 425, 426, 427, 424, 430, 431, 432, 0,
	433, 413, 414, 434, 435, 0, 436, 437, 521, 438,
	439, 0, 440, 441, 442, 443, 415, 444, 448, 449,
	445, 446, 447, 522, 0, 451, 452, 450, 0, 453,
	454, 455, 456, 457, 283, 458, 0, 459, 523, 524,
	525, 526, 0, 466, 0, 460, 461, 527, 462, 528,
	0, 463, 464, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 473, 474, 472, 476, 0, 477, 0, 475,
	478, 479, 480, 529, 530, 531, 0, 482, 481, 532,
	558, 0, 215, 0, 483, 484, 533, 485, 486, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	222, 223, 224, 225, 0, 226, 0, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 227, 229, 228, 230,
	231, 489, 490, 232, 491, 235, 233, 234, 492, 0,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 243,
	493, 494, 495, 0, 244, 496, 0, 0, 0, 245,
	246, 247, 248, 249, 250, 0, 252, 253, 254, 251,
	0, 255, 0, 256, 257, 258, 0, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 0, 0, 262, 263,
	264, 265, 266, 267, 497, 498, 0, 268, 0, 270,
	269, 0, 271, 0, 0, 272, 273, 274, 0, 275,
	0, 276, 277, 0, 278, 499, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 500, 501, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 291, 502, 292, 293,
	0, 294, 0, 295, 0, 0, 0, 296, 297, 0,
	298, 503, 0, 504, 299, 0, 300, 301, 302, 303,
	505, 506, 507, 358, 0, 304, 305, 0, 306, 307,
	309, 0, 0, 0, 308, 310, 317, 0, 0, 311,
	508, 313, 312, 314, 315, 316, 509, 0, 510, 0,
	318, 0, 511, 0, 319, 320, 321, 0, 322, 323,
	0, 0, 324, 325, 326, 327, 328, 0, 330, 329,
	0, 331, 512, 0, 332, 333, 0, 0, 334, 335,
	0, 0, 336, 337, 338, 339, 0, 340, 341, 343,
	345, 342, 344, 346, 348, 349, 347, 0, 350, 351,
	354, 355, 353, 0, 352, 0, 0, 0, 356, 0,
	513, 357, 514, 359, 360, 0, 361, 362, 363, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 515, 0,
	370, 0, 516, 371, 364, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 517, 381, 518, 382, 0,
	383, 0, 384, 385, 386, 387, 388, 389, 390, 519,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 399,
	400, 401, 398, 402, 403, 404, 405, 0, 406, 0,
	407, 408, 409, 410, 520, 411, 0, 412, 416, 417,
	418, 419, 420, 421, 422, 0, 428, 429, 423, 425,
	426, 427, 424, 430, 431, 432, 0, 433, 413, 414,
	434, 435, 0, 436, 437, 521, 438, 439, 0, 440,
	441, 442, 443, 415, 444, 448, 449, 445, 446, 447,
	522, 0, 451, 452, 450, 0, 453, 454, 455, 456,
	457, 283, 458, 0, 459, 523, 524, 525, 526, 0,
	466, 0, 460, 461, 527, 462, 528, 0, 463, 464,
	465, 0, 467, 468, 0, 0, 469, 470, 471, 473,
	474, 472, 476, 0, 477, 0, 475, 478, 479, 480,
	529, 530, 531, 0, 482, 481, 532, 536, 0, 215,
	0, 483, 484, 533, 485, 486, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 222, 223, 224,
	225, 0, 226, 0, 0, 0, 0, 0, 488, 0,
	0, 0, 0, 227, 229, 228, 230, 231, 489, 490,
	232, 491, 235, 233, 234, 492, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 493, 494, 495,
	0, 244, 496, 0, 0, 0, 245, 246, 247, 248,
	249, 250, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 0, 0, 262, 263, 264, 265, 266,
	267, 497, 498, 0, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 273, 274, 0, 275, 0, 276, 277,
	0, 278, 499, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 500, 501, 0, 0, 0, 0, 0, 0,
	0, 289, 290, 291, 502, 292, 293, 0, 294, 0,
	295, 0, 0, 0, 296, 297, 0, 298, 503, 0,
	504, 299, 0, 300, 301, 302, 303, 505, 506, 507,
	358, 0, 304, 305, 0, 306, 307, 309, 0, 0,
	0, 308, 310, 317, 0, 0, 311, 508, 313, 312,
	314, 315, 316, 509, 0, 510, 0, 318, 0, 511,
	0, 319, 320, 321, 0, 322, 323, 0, 0, 324,
	325, 326, 327, 328, 0, 330, 329, 0, 331, 512,
	0, 332, 333, 0, 0, 334, 335, 0, 0, 336,
	337, 338, 339, 0, 340, 341, 343, 345, 342, 344,
	346, 348, 349, 347, 0, 350, 351, 354, 355, 353,
	0, 352, 0, 0, 0, 356, 0, 513, 357, 514,
	359, 360, 0, 361, 362, 363, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 515, 0, 370, 0, 516,
	371, 364, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 517, 381, 518, 382, 0, 383, 0, 384,
	385, 386, 387, 388, 389, 390, 519, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 399, 400, 401, 398,
	402, 403, 404, 405, 0, 406, 0, 407, 408, 409,
	410, 520, 411, 0, 412, 416, 417, 418, 419, 420,
	421, 422, 0, 428, 429, 423, 425, 426, 427, 424,
	430, 431, 432, 0, 433, 413, 414, 434, 435, 0,
	436, 437, 521, 438, 439, 0, 440, 441, 442, 443,
	415, 444, 448, 449, 445, 446, 447, 522, 0, 451,
	452, 450, 0, 453, 454, 455, 456, 457, 283, 458,
	0, 459, 523, 524, 525, 526, 0, 466, 0, 460,
	461, 527, 462, 528, 0, 463, 464, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 473, 474, 472, 476,
	0, 477, 0, 475, 478, 479, 480, 529, 530, 531,
	215, 482, 481, 532, 0, 0, 0, 0, 483, 484,
	533, 485, 486, 487, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 227, 229, 228, 230, 231, 489,
	490, 232, 491, 235, 233, 234, 492, 0, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 243, 493, 494,
	495, 0, 244, 496, 0, 0, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 0, 0, 262, 263, 264, 265,
	266, 267, 497, 498, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 499, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 500, 501, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 291, 502, 292, 293, 0, 294,
	0, 295, 0, 0, 0, 296, 297, 0, 298, 503,
	0, 504, 299, 0, 300, 301, 302, 303, 505, 506,
	507, 358, 0, 304, 305, 0, 306, 307, 309, 0,
	0, 0, 308, 310, 317, 0, 0, 311, 508, 313,
	312, 314, 315, 316, 509, 0, 510, 0, 318, 0,
	511, 0, 319, 320, 321, 0, 322, 323, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	512, 0, 332, 333, 0, 0, 334, 335, 0, 0,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 349, 347, 0, 350, 351, 354, 355,
	353, 0, 352, 0, 0, 0, 356, 0, 513, 357,
	514, 359, 360, 0, 361, 362, 363, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 0, 370, 0,
	516, 371, 364, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 517, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 388, 389, 390, 519, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 0, 407, 408,
	409, 410, 520, 411, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 0, 428, 429, 423, 425, 426, 427,
	424, 430, 431, 432, 0, 433, 413, 414, 434, 435,
	0, 436, 437, 521, 438, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 449, 445, 446, 447, 522, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	458, 0, 459, 523, 524, 525, 526, 0, 466, 0,
	460, 461, 527, 462, 528, 0, 463, 464, 465, 0,
	467, 468, 0, 0, 469, 470, 471, 473, 474, 472,
	476, 0, 477, 0, 475, 478, 479, 480, 529, 530,
	531, 215, 482, 481, 532, 0, 0, 0, 0, 483,
	484, 533, 485, 486, 487, 0, 0, 0, 221, 222,
	223, 224, 225, 0, 226, 0, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 227, 229, 228, 230, 231,
	489, 490, 232, 491, 235, 233, 234, 492, 0, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 243, 493,
	494, 495, 0, 244, 496, 0, 0, 0, 245, 246,
	247, 248, 249, 250, 0, 252, 253, 254, 251, 0,
	255, 0, 256, 257, 258, 0, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 0, 0, 262, 263, 264,
	265, 266, 267, 497, 498, 0, 268, 0, 270, 269,
	0, 271, 0, 0, 272, 273, 274, 0, 275, 0,
	276, 277, 0, 278, 499, 279, 280, 282, 284, 281,
	285, 286, 287, 288, 500, 501, 0, 0, 0, 0,
	0, 0, 0, 289, 290, 291, 502, 292, 293, 0,
	294, 0, 295, 0, 0, 0, 296, 297, 0, 298,
	503, 0, 504, 299, 0, 300, 301, 302, 303, 2815,
	506, 507, 358, 0, 304, 305, 0, 306, 307, 309,
	0, 0, 0, 308, 310, 317, 0, 0, 311, 508,
	313, 312, 314, 315, 316, 509, 0, 510, 0, 318,
	0, 511, 0, 319, 320, 321, 0, 322, 323, 0,
	0, 324, 325, 326, 327, 328, 0, 330, 329, 0,
	331, 512, 0, 332, 333, 0, 0, 334, 335, 0,
	0, 336, 337, 338, 339, 0, 340, 341, 343, 345,
	342, 344, 346, 348, 349, 347, 0, 350, 351, 354,
	355, 353, 0, 352, 0, 0, 0, 356, 0, 513,
	357, 514, 359, 360, 0, 361, 362, 363, 0, 0,
	365, 366, 367, 0, 0, 368, 369, 515, 0, 370,
	0, 516, 371, 364, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 517, 381, 518, 382, 0, 383,
	0, 384, 385, 386, 387, 388, 389, 390, 519, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 399, 400,
	401, 398, 402, 403, 404, 405, 0, 406, 0, 407,
	408, 409, 410, 520, 411, 0, 412, 416, 417, 418,
	419, 420, 421, 422, 0, 428, 429, 423, 425, 426,
	427, 424, 430, 431, 432, 0, 433, 413, 414, 434,
	435, 0, 436, 437, 521, 438, 439, 0, 440, 441,
	442, 443, 415, 444, 448, 449, 445, 446, 447, 522,
	0, 451, 452, 450, 0, 453, 454, 455, 456, 457,
	283, 458, 0, 459, 523, 524, 525, 526, 0, 466,
	0, 460, 461, 527, 462, 528, 0, 463, 464, 465,
	0, 467, 468, 0, 0, 469, 470, 471, 473, 474,
	472, 476, 0, 477, 0, 475, 478, 479, 480, 529,
	530, 531, 215, 482, 481, 532, 0, 0, 0, 0,
	483, 484, 533, 485, 486, 487, 0, 0, 0, 221,
	222, 223, 224, 225, 0, 226, 0, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 227, 229, 228, 230,
	231, 489, 490, 232, 491, 235, 233, 234, 492, 0,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 243,
	493, 494, 495, 0, 244, 496, 0, 0, 0, 245,
	246, 247, 248, 249, 250, 0, 252, 253, 254, 251,
	0, 255, 0, 256, 257, 258, 0, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 0, 0, 262, 263,
	264, 265, 266, 267, 497, 498, 0, 268, 0, 270,
	269, 0, 271, 0, 0, 272, 273, 274, 0, 275,
	0, 276, 277, 0, 278, 499, 279, 280, 282, 284,
	281, 285, 286, 287, 288, 500, 501, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 291, 502, 292, 293,
	0, 294, 0, 295, 0, 0, 0, 296, 297, 0,
	298, 503, 0, 504, 299, 0, 300, 301, 302, 303,
	2813, 506, 507, 358, 0, 304, 305, 0, 306, 307,
	309, 0, 0, 0, 308, 310, 317, 0, 0, 311,
	508, 313, 312, 314, 315, 316, 509, 0, 510, 0,
	318, 0, 511, 0, 319, 320, 321, 0, 322, 323,
	0, 0, 324, 325, 326, 327, 328, 0, 330, 329,
	0, 331, 512, 0, 332, 333, 0, 0, 334, 335,
	0, 0, 336, 337, 338, 339, 0, 340, 341, 343,
	345, 342, 344, 346, 348, 349, 347, 0, 350, 351,
	354, 355, 353, 0, 352, 0, 0, 0, 356, 0,
	513, 357, 514, 359, 360, 0, 361, 362, 363, 0,
	0, 365, 366, 367, 0, 0, 368, 369, 515, 0,
	370, 0, 516, 371, 364, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 517, 381, 518, 382, 0,
	383, 0, 384, 385, 386, 387, 388, 389, 390, 519,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 399,
	400, 401, 398, 402, 403, 404, 405, 0, 406, 0,
	407, 408, 409, 410, 520, 411, 0, 412, 416, 417,
	418, 419, 420, 421, 422, 0, 428, 429, 423, 425,
	426, 427, 424, 430, 431, 432, 0, 433, 413, 414,
	434, 435, 0, 436, 437, 521, 438, 439, 0, 440,
	441, 442, 443, 415, 444, 448, 449, 445, 446, 447,
	522, 0, 451, 452, 450, 0, 453, 454, 455, 456,
	457, 283, 458, 0, 459, 523, 524, 525, 526, 0,
	466, 0, 460, 461, 527, 462, 528, 0, 463, 464,
	465, 0, 467, 468, 0, 0, 469, 470, 471, 473,
	474, 472, 476, 0, 477, 0, 475, 478, 479, 480,
	529, 530, 531, 215, 482, 481, 532, 0, 0, 0,
	0, 483, 484, 533, 485, 486, 487, 0, 0, 0,
	221, 222, 223, 224, 225, 0, 226, 0, 0, 0,
	0, 0, 488, 0, 0, 0, 0, 227, 229, 228,
	230, 231, 489, 490, 232, 491, 235, 233, 234, 492,
	0, 236, 237, 238, 239, 240, 241, 242, 0, 0,
	243, 493, 494, 495, 0, 244, 496, 0, 0, 0,
	245, 246, 247, 248, 249, 250, 0, 252, 253, 254,
	251, 0, 255, 0, 256, 257, 258, 0, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 0, 0, 262,
	263, 264, 265, 266, 267, 497, 498, 0, 268, 0,
	270, 269, 0, 271, 0, 0, 272, 273, 274, 0,
	275, 0, 276, 277, 0, 278, 499, 279, 280, 282,
	284, 281, 285, 286, 287, 288, 500, 501, 0, 0,
	0, 0, 0, 0, 0, 289, 290, 291, 502, 292,
	293, 0, 294, 0, 295, 0, 0, 0, 296, 297,
	0, 298, 503, 0, 504, 299, 0, 300, 301, 302,
	303, 2800, 506, 507, 358, 0, 304, 305, 0, 306,
	307, 309, 0, 0, 0, 308, 310, 317, 0, 0,
	311, 508, 313, 312, 314, 315, 316, 509, 0, 510,
	0, 318, 0, 511, 0, 319, 320, 321, 0, 322,
	323, 0, 0, 324, 325, 326, 327, 328, 0, 330,
	329, 0, 331, 512, 0, 332, 333, 0, 0, 334,
	335, 0, 0, 336, 337, 338, 339, 0, 340, 341,
	343, 345, 342, 344, 346, 348, 349, 347, 0, 350,
	351, 354, 355, 353, 0, 352, 0, 0, 0, 356,
	0, 513, 357, 514, 359, 360, 0, 361, 362, 363,
	0, 0, 365, 366, 367, 0, 0, 368, 369, 515,
	0, 370, 0, 516, 371, 364, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 517, 381, 518, 382,
	0, 383, 0, 384, 385, 386, 387, 388, 389, 390,
	519, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	399, 400, 401, 398, 402, 403, 404, 405, 0, 406,
	0, 407, 408, 409, 410, 520, 411, 0, 412, 416,
	417, 418, 419, 420, 421, 422, 0, 428, 429, 423,
	425, 426, 427, 424, 430, 431, 432, 0, 433, 413,
	414, 434, 435, 0, 436, 437, 521, 438, 439, 0,
	440, 441, 442, 443, 415, 444, 448, 449, 445, 446,
	447, 522, 0, 451, 452, 450, 0, 453, 454, 455,
	456, 457, 283, 458, 0, 459, 523, 524, 525, 526,
	0, 466, 0, 460, 461, 527, 462, 528, 0, 463,
	464, 465, 0, 467, 468, 0, 0, 469, 470, 471,
	473, 474, 472, 476, 0, 477, 0, 475, 478, 479,
	480, 529, 530, 531, 215, 482, 481, 532, 0, 0,
	0, 0, 483, 484, 533, 485, 486, 487, 0, 0,
	0, 221, 222, 223, 224, 225, 0, 226, 0, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 227, 229,
	228, 230, 231, 489, 490, 232, 491, 235, 233, 234,
	492, 0, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 243, 493, 494, 495, 0, 244, 496, 0, 0,
	0, 245, 246, 247, 248, 249, 250, 0, 252, 253,
	254, 251, 0, 255, 0, 256, 257, 258, 0, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 0, 0,
	262, 263, 264, 265, 266, 267, 497, 498, 0, 268,
	0, 270, 269, 0, 271, 0, 0, 272, 273, 274,
	0, 275, 0, 276, 277, 0, 278, 499, 279, 280,
	282, 284, 281, 285, 286, 287, 288, 500, 501, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 291, 502,
	292, 293, 0, 294, 0, 295, 0, 0, 0, 296,
	297, 0, 298, 503, 0, 504, 299, 0, 300, 301,
	302, 303, 2458, 506, 507, 358, 0, 304, 305, 0,
	306, 307, 309, 0, 0, 0, 308, 310, 317, 0,
	0, 311, 508, 313, 312, 314, 315, 316, 509, 0,
	510, 0, 318, 0, 511, 0, 319, 320, 321, 0,
	322, 323, 0, 0, 324, 325, 326, 327, 328, 0,
	330, 329, 0, 331, 512, 0, 332, 333, 0, 0,
	334, 335, 0, 0, 336, 337, 338, 339, 0, 340,
	341, 343, 345, 342, 344, 346, 348, 349, 347, 0,
	350, 351, 354, 355, 353, 0, 352, 0, 0, 0,
	356, 0, 513, 357, 514, 359, 360, 0, 361, 362,
	363, 0, 0, 365, 366, 367, 0, 0, 368, 369,
	515, 0, 370, 0, 516, 371, 364, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 517, 381, 518,
	382, 0, 383, 0, 384, 385, 386, 387, 388, 389,
	390, 519, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 399, 400, 401, 398, 402, 403, 404, 405, 0,
	406, 0, 407, 408, 409, 410, 520, 411, 0, 412,
	416, 417, 418, 419, 420, 421, 422, 0, 428, 429,
	423, 425, 426, 427, 424, 430, 431, 432, 0, 433,
	413, 414, 434, 435, 0, 436, 437, 521, 438, 439,
	0, 440, 441, 442, 443, 415, 444, 448, 449, 445,
	446, 447, 522, 0, 451, 452, 450, 0, 453, 454,
	455, 456, 457, 283, 458, 0, 459, 523, 524, 525,
	526, 0, 466, 0, 460, 461, 527, 462, 528, 0,
	463, 464, 465, 0, 467, 468, 0, 0, 469, 470,
	471, 473, 474, 472, 476, 0, 477, 0, 475, 478,
	479, 480, 529, 530, 531, 215, 482, 481, 532, 0,
	0, 0, 0, 483, 484, 533, 485, 486, 487, 0,
	0, 0, 221, 222, 223, 224, 225, 0, 226, 0,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 227,
	229, 228, 230, 231, 489, 490, 232, 491, 235, 233,
	234, 492, 0, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 243, 493, 494, 495, 0, 244, 496, 0,
	0, 0, 245, 246, 247, 248, 249, 250, 0, 252,
	253, 254, 251, 0, 255, 0, 256, 257, 258, 0,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 0,
	0, 262, 263, 264, 265, 266, 267, 497, 498, 0,
	268, 0, 270, 269, 0, 271, 0, 0, 272, 273,
	274, 0, 275, 0, 276, 277, 0, 278, 499, 279,
	280, 282, 284, 281, 285, 286, 287, 288, 500, 501,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 291,
	502, 292, 293, 0, 294, 0, 295, 0, 0, 0,
	296, 297, 0, 298, 503, 0, 504, 299, 0, 300,
	301, 302, 303, 505, 506, 507, 358, 0, 304, 305,
	0, 306, 307, 309, 0, 0, 0, 308, 310, 317,
	0, 0, 311, 508, 313, 312, 314, 315, 316, 509,
	0, 510, 0, 318, 0, 511, 0, 319, 320, 321,
	0, 322, 323, 0, 0, 324, 325, 326, 327, 328,
	0, 330, 329, 0, 331, 512, 0, 332, 333, 0,
	0, 334, 335, 0, 0, 336, 337, 338, 339, 0,
	340, 341, 343, 345, 342, 344, 346, 348, 349, 347,
	0, 350, 351, 354, 355, 353, 0, 352, 0, 0,
	0, 356, 0, 513, 357, 514, 359, 360, 0, 361,
	362, 363, 0, 0, 365, 366, 367, 0, 0, 368,
	369, 515, 0, 370, 0, 516, 371, 364, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 517, 381,
	518, 382, 0, 383, 0, 384, 385, 386, 387, 388,
	389, 390, 519, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 399, 400, 401, 398, 402, 403, 404, 405,
	0, 406, 0, 407, 408, 409, 410, 520, 411, 0,
	412, 567, 417, 418, 419, 420, 421, 422, 0, 428,
	429, 423, 425, 426, 427, 424, 430, 431, 432, 0,
	433, 413, 414, 434, 435, 0, 436, 437, 521, 438,
	439, 0, 440, 441, 442, 443, 415, 444, 448, 449,
	445, 446, 447, 522, 0, 451, 452, 450, 0, 453,
	454, 455, 456, 457, 283, 458, 0, 459, 523, 524,
	525, 526, 0, 466, 0, 460, 461, 527, 462, 528,
	0, 463, 464, 465, 0, 467, 468, 0, 0, 469,
	470, 471, 473, 474, 472, 476, 0, 477, 0, 475,
	478, 479, 480, 529, 530, 531, 215, 482, 481, 532,
	0, 0, 0, 0, 483, 484, 533, 485, 486, 487,
	0, 0, 0, 221, 222, 223, 224, 225, 0, 226,
	0, 0, 0, 0, 0, 488, 0, 1908, 0, 0,
	227, 229, 228, 230, 231, 489, 490, 232, 491, 235,
	233, 234, 492, 0, 236, 237, 238, 239, 240, 241,
	242, 0, 0, 243, 493, 494, 495, 0, 244, 496,
	0, 0, 0, 245, 246, 247, 248, 249, 250, 0,
	252, 253, 254, 251, 0, 255, 0, 256, 257, 258,
	0, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	0, 0, 262, 263, 264, 265, 266, 267, 497, 498,
	0, 268, 0, 270, 269, 0, 271, 0, 0, 272,
	273, 274, 0, 275, 0, 276, 277, 0, 278, 499,
	279, 280, 282, 284, 281, 285, 286, 287, 288, 500,
	501, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	291, 502, 292, 293, 0, 294, 0, 295, 0, 0,
	0, 296, 297, 0, 298, 503, 0, 504, 299, 0,
	300, 301, 302, 303, 505, 506, 507, 358, 0, 304,
	305, 0, 306, 307, 309, 0, 0, 0, 308, 310,
	317, 0, 0, 311, 508, 313, 312, 314, 315, 316,
	509, 0, 510, 0, 318, 0, 511, 0, 319, 320,
	321, 0, 322, 323, 0, 0, 324, 325, 326, 327,
	328, 0, 330, 329, 0, 331, 512, 0, 332, 333,
	0, 0, 334, 335, 0, 0, 336, 337, 338, 339,
	0, 340, 341, 343, 345, 342, 344, 346, 348, 349,
	347, 0, 350, 351, 354, 355, 353, 0, 352, 0,
	0, 0, 356, 0, 513, 357, 514, 359, 360, 0,
	361, 362, 363, 0, 0, 365, 366, 367, 0, 0,
	368, 369, 515, 0, 370, 0, 516, 371, 364, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 517,
	381, 518, 382, 0, 383, 0, 384, 385, 386, 387,
	388, 389, 390, 519, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 399, 400, 401, 398, 402, 403, 404,
	405, 0, 406, 0, 407, 408, 409, 410, 520, 411,
	0, 412, 416, 417, 418, 419, 420, 421, 422, 0,
	428, 429, 423, 425, 426, 427, 424, 430, 431, 432,
	0, 0, 413, 414, 434, 435, 0, 436, 437, 521,
	438, 439, 0, 440, 441, 442, 443, 415, 444, 448,
	449, 445, 446, 447, 522, 0, 451, 452, 450, 0,
	453, 454, 455, 456, 457, 283, 458, 0, 459, 523,
	524, 525, 526, 0, 466, 0, 460, 461, 527, 462,
	528, 0, 463, 464, 465, 0, 467, 468, 0, 0,
	469, 470, 471, 473, 474, 472, 476, 0, 477, 0,
	475, 478, 479, 480, 529, 530, 531, 215, 482, 481,
	532, 0, 0, 0, 0, 483, 484, 533, 485, 486,
	487, 0, 0, 0, 221, 222, 223, 224, 225, 0,
	226, 0, 0, 0, 0, 0, 488, 0, 0, 0,
	0, 227, 229, 228, 230, 231, 489, 490, 232, 491,
	235, 233, 234, 492, 0, 236, 237, 238, 239, 240,
	241, 242, 0, 0, 243, 493, 494, 495, 0, 244,
	496, 0, 0, 0, 245, 246, 247, 248, 249, 250,
	0, 252, 253, 254, 251, 0, 255, 0, 256, 257,
	258, 0, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 0, 0, 262, 263, 264, 265, 266, 267, 497,
	498, 0, 268, 0, 270, 269, 0, 271, 0, 0,
	272, 273, 274, 0, 275, 0, 276, 277, 0, 278,
	499, 279, 280, 282, 284, 281, 285, 286, 287, 288,
	500, 501, 0, 0, 0, 0, 0, 0, 0, 289,
	290, 291, 502, 292, 293, 0, 294, 0, 295, 0,
	0, 0, 296, 297, 0, 298, 503, 0, 504, 299,
	0, 300, 301, 302, 303, 1311, 506, 507, 358, 0,
	304, 305, 0, 306, 307, 309, 0, 0, 0, 308,
	310, 317, 0, 0, 311, 508, 313, 312, 314, 315,
	316, 509, 0, 510, 0, 318, 0, 511, 0, 319,
	320, 321, 0, 322, 323, 0, 0, 324, 325, 326,
	327, 328, 0, 330, 329, 0, 331, 512, 0, 332,
	333, 0, 0, 334, 335, 0, 0, 336, 337, 338,
	339, 0, 340, 341, 343, 345, 342, 344, 346, 348,
	349, 347, 0, 350, 351, 354, 355, 353, 0, 352,
	0, 0, 0, 356, 0, 513, 357, 514, 359, 360,
	0, 361, 362, 363, 0, 0, 365, 366, 367, 0,
	0, 368, 369, 515, 0, 370, 0, 516, 371, 364,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	517, 381, 518, 382, 0, 383, 0, 384, 385, 386,
	387, 388, 389, 390, 519, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 399, 400, 401, 398, 402, 403,
	404, 405, 0, 406, 0, 407, 408, 409, 410, 520,
	411, 0, 412, 416, 417, 418, 419, 420, 421, 422,
	0, 428, 429, 423, 425, 426, 427, 424, 430, 431,
	432, 0, 433, 413, 414, 434, 435, 0, 436, 437,
	521, 438, 439, 0, 440, 441, 442, 443, 415, 444,
	448, 449, 445, 446, 447, 522, 0, 451, 452, 450,
	0, 453, 454, 455, 456, 457, 283, 458, 0, 459,
	523, 524, 525, 526, 0, 466, 0, 460, 461, 527,
	462, 528, 0, 463, 464, 465, 0, 467, 468, 0,
	0, 469, 470, 471, 473, 474, 472, 476, 0, 477,
	0, 475, 478, 479, 480, 529, 530, 531, 215, 482,
	481, 532, 0, 0, 0, 0, 483, 484, 533, 485,
	486, 487, 0, 0, 0, 221, 222, 223, 224, 225,
	0, 226, 0, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 227, 229, 228, 230, 231, 489, 490, 232,
	491, 235, 233, 234, 492, 0, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 243, 493, 494, 495, 0,
	244, 496, 0, 0, 0, 245, 246, 247, 248, 249,
	250, 0, 252, 253, 254, 251, 0, 255, 0, 256,
	257, 258, 0, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 0, 0, 262, 263, 264, 265, 266, 267,
	497, 498, 0, 268, 0, 270, 269, 0, 271, 0,
	0, 272, 273, 274, 0, 275, 0, 276, 277, 0,
	278, 499, 279, 280, 282, 284, 281, 285, 286, 287,
	288, 500, 501, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 291, 502, 292, 293, 0, 294, 0, 295,
	0, 0, 0, 296, 297, 0, 298, 503, 0, 504,
	299, 0, 300, 301, 302, 303, 1248, 506, 507, 358,
	0, 304, 305, 0, 306, 307, 309, 0, 0, 0,
	308, 310, 317, 0, 0, 311, 508, 313, 312, 314,
	315, 316, 509, 0, 510, 0, 318, 0, 511, 0,
	319, 320, 321, 0, 322, 323, 0, 0, 324, 325,
	326, 327, 328, 0, 330, 329, 0, 331, 512, 0,
	332, 333, 0, 0, 334, 335, 0, 0, 336, 337,
	338, 339, 0, 340, 341, 343, 345, 342, 344, 346,
	348, 349, 347, 0, 350, 351, 354, 355, 353, 0,
	352, 0, 0, 0, 356, 0, 513, 357, 514, 359,
	360, 0, 361, 362, 363, 0, 0, 365, 366, 367,
	0, 0, 368, 369, 515, 0, 370, 0, 516, 371,
	364, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 517, 381, 518, 382, 0, 383, 0, 384, 385,
	386, 387, 388, 389, 390, 519, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 399, 400, 401, 398, 402,
	403, 404, 405, 0, 406, 0, 407, 408, 409, 410,
	520, 411, 0, 412, 416, 417, 418, 419, 420, 421,
	422, 0, 428, 429, 423, 425, 426, 427, 424, 430,
	431, 432, 0, 433, 413, 414, 434, 435, 0, 436,
	437, 521, 438, 439, 0, 440, 441, 442, 443, 415,
	444, 448, 449, 445, 446, 447, 522, 0, 451, 452,
	450, 0, 453, 454, 455, 456, 457, 283, 458, 0,
	459, 523, 524, 525, 526, 0, 466, 0, 460, 461,
	527, 462, 528, 0, 463, 464, 465, 0, 467, 468,
	0, 0, 469, 470, 471, 473, 474, 472, 476, 0,
	477, 0, 475, 478, 479, 480, 529, 530, 531, 215,
	482, 481, 532, 0, 0, 0, 0, 483, 484, 533,
	485, 486, 487, 0, 0, 0, 221, 222, 223, 224,
	225, 0, 226, 0, 0, 0, 0, 0, 488, 0,
	0, 0, 0, 227, 229, 228, 230, 231, 489, 490,
	232, 491, 235, 233, 234, 492, 0, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 243, 493, 494, 495,
	0, 244, 496, 0, 0, 0, 245, 246, 247, 248,
	249, 250, 0, 252, 253, 254, 251, 0, 255, 0,
	256, 257, 258, 0, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 0, 0, 262, 263, 264, 265, 266,
	267, 497, 498, 0, 268, 0, 270, 269, 0, 271,
	0, 0, 272, 273, 274, 0, 275, 0, 276, 277,
	0, 278, 499, 279, 280, 282, 284, 281, 285, 286,
	287, 288, 500, 501, 0, 0, 0, 0, 0, 0,
	0, 289, 290, 291, 502, 292, 293, 0, 294, 0,
	295, 0, 0, 0, 296, 297, 0, 298, 503, 0,
	504, 299, 0, 300, 301, 302, 303, 505, 506, 507,
	358, 0, 304, 305, 0, 306, 307, 309, 0, 0,
	0, 308, 310, 317, 0, 0, 311, 508, 313, 312,
	314, 315, 316, 509, 0, 510, 0, 318, 0, 511,
	0, 319, 320, 321, 0, 322, 323, 0, 0, 324,
	325, 326, 327, 328, 0, 330, 329, 0, 331, 512,
	0, 332, 333, 0, 0, 334, 335, 0, 0, 336,
	337, 338, 339, 0, 340, 341, 343, 345, 342, 344,
	346, 348, 349, 347, 0, 350, 351, 354, 355, 353,
	0, 352, 0, 0, 0, 356, 0, 513, 357, 514,
	359, 360, 0, 361, 362, 363, 0, 0, 365, 366,
	367, 0, 0, 368, 369, 515, 0, 370, 0, 516,
	371, 364, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 517, 381, 518, 382, 0, 383, 0, 384,
	385, 386, 387, 388, 389, 390, 519, 1003, 392, 0,
	393, 394, 395, 396, 397, 0, 399, 400, 401, 398,
	402, 403, 404, 405, 0, 406, 0, 407, 408, 409,
	410, 520, 411, 0, 412, 416, 417, 418, 419, 420,
	421, 422, 0, 428, 429, 423, 425, 426, 427, 424,
	430, 431, 432, 0, 433, 413, 414, 434, 435, 0,
	436, 437, 521, 438, 439, 0, 440, 441, 442, 443,
	415, 444, 448, 449, 445, 446, 447, 522, 0, 451,
	452, 450, 0, 453, 454, 455, 456, 457, 283, 458,
	0, 459, 523, 524, 525, 526, 0, 466, 0, 460,
	461, 527, 462, 528, 0, 463, 464, 465, 0, 467,
	468, 0, 0, 469, 470, 471, 473, 474, 472, 476,
	0, 477, 0, 475, 478, 479, 480, 529, 530, 531,
	215, 482, 481, 532, 0, 0, 0, 0, 483, 484,
	533, 485, 486, 487, 0, 0, 0, 221, 222, 223,
	224, 225, 0, 226, 0, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 227, 229, 228, 230, 231, 489,
	490, 232, 491, 235, 233, 234, 492, 0, 236, 237,
	238, 239, 240, 241, 242, 0, 0, 243, 493, 494,
	495, 0, 244, 496, 0, 0, 0, 245, 246, 247,
	248, 249, 250, 0, 252, 253, 254, 251, 0, 255,
	0, 256, 257, 258, 0, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 0, 0, 262, 263, 264, 265,
	266, 267, 497, 498, 0, 268, 0, 270, 269, 0,
	271, 0, 0, 272, 273, 274, 0, 275, 0, 276,
	277, 0, 278, 499, 279, 280, 282, 284, 281, 285,
	286, 287, 288, 500, 501, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 291, 502, 292, 293, 0, 294,
	0, 295, 0, 0, 0, 296, 297, 0, 298, 503,
	0, 504, 0, 0, 300, 301, 302, 303, 505, 506,
	507, 358, 0, 304, 305, 0, 306, 307, 309, 0,
	0, 0, 308, 310, 317, 0, 0, 311, 508, 313,
	312, 314, 315, 316, 509, 0, 510, 0, 318, 0,
	511, 0, 319, 320, 321, 0, 322, 323, 0, 0,
	324, 325, 326, 327, 328, 0, 330, 329, 0, 331,
	512, 0, 332, 333, 0, 0, 334, 335, 0, 0,
	336, 337, 338, 339, 0, 340, 341, 343, 345, 342,
	344, 346, 348, 349, 347, 0, 350, 351, 354, 355,
	353, 0, 352, 0, 0, 0, 356, 0, 513, 357,
	514, 359, 360, 0, 361, 362, 363, 0, 0, 365,
	366, 367, 0, 0, 368, 369, 515, 0, 370, 0,
	516, 371, 364, 372, 373, 0, 375, 376, 377, 378,
	0, 379, 380, 517, 381, 518, 382, 0, 383, 0,
	384, 385, 386, 387, 0, 389, 390, 519, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 399, 400, 401,
	398, 402, 403, 404, 405, 0, 406, 0, 407, 408,
	409, 410, 520, 0, 0, 412, 416, 417, 418, 419,
	420, 421, 422, 0, 428, 429, 423, 425, 426, 427,
	424, 430, 431, 432, 0, 433, 413, 414, 434, 435,
	0, 436, 437, 521, 438, 439, 0, 440, 441, 442,
	443, 415, 444, 448, 449, 445, 446, 447, 522, 0,
	451, 452, 450, 0, 453, 454, 455, 456, 457, 283,
	458, 0, 459, 523, 524, 525, 526, 0, 466, 0,
	460, 461, 527, 462, 528, 0, 463, 464, 465, 0,
	467, 468, 0, 0, 469, 470, 471, 473, 474, 472,
	476, 0, 477, 0, 475, 478, 479, 480, 529, 530,
	531, 0, 482, 481, 532, 0, 0, 0, 0, 483,
	484, 533, 485, 486, 487, 1490, 1491, 0, 1523, 1524,
	1525, 1533, 1534, 1535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1526, 1521, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 1539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1490, 1491,
	0, 1523, 1524, 1525, 1533, 1534, 1535, 0, 0, 0,
	0, 0, 1492, 0, 0, 0, 0, 1526, 1521, 0,
	0, 1512, 0, 0, 0, 1493, 0, 0, 1509, 0,
	1539, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1492, 0, 0, 0, 0,
	0, 0, 0, 0, 1512, 0, 0, 0, 0, 0,
	0, 1509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1515, 1516, 1517, 1518,
	0, 0, 0, 0, 0, 0, 1498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1530, 0, 0, 1540, 0, 0, 0, 1520, 1522, 1515,
	1516, 1517, 1518, 0, 0, 0, 0, 0, 0, 1498,
	0, 0, 0, 0, 0, 0, 0, 1536, 0, 1537,
	0, 0, 0, 0, 0, 0, 1507, 1508, 0, 0,
	0, 0, 0, 1530, 0, 0, 1540, 0, 0, 0,
	1520, 1522, 1528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1513, 0, 0, 0, 0, 0, 0, 0,
	1536, 0, 1537, 0, 0, 0, 0, 0, 0, 1507,
	1508, 0, 0, 1538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1528, 0, 0, 0, 0,
	1527, 0, 0, 0, 0, 1513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1527, 1519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1490, 1491, 0, 1523, 1524, 1525, 1533, 1534,
	1535, 0, 0, 0, 0, 0, 0, 1519, 1531, 0,
	0, 1526, 1521, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 1539, 1514, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1492,
	0, 1531, 0, 0, 0, 0, 0, 0, 1512, 0,
	0, 0, 0, 0, 0, 1509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1529, 0, 0, 1504, 1505, 1511, 1532,
	1510, 1506, 0, 1503, 1501, 1502, 1494, 1495, 1496, 1497,
	1499, 1500, 0, 0, 0, 0, 0, 0, 0, 0,
	2666, 0, 0, 1515, 1516, 1517, 1518, 0, 0, 0,
	0, 0, 0, 1498, 0, 0, 1529, 0, 0, 1504,
	1505, 1511, 1532, 1510, 1506, 0, 1503, 1501, 1502, 1494,
	1495, 1496, 1497, 1499, 1500, 0, 0, 1530, 0, 0,
	1540, 0, 0, 2663, 1520, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1536, 0, 1537, 0, 0, 0,
	0, 0, 0, 1507, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1513,
	0, 0, 1490, 1491, 0, 1523, 1524, 1525, 1533, 1534,
	1535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1538, 1526, 1521, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 1539, 0, 0, 1527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1492,
	0, 0, 0, 0, 0, 0, 0, 0, 1512, 0,
	0, 0, 0, 0, 0, 1509, 0, 0, 0, 0,
	0, 1519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1531, 0, 0, 0, 0,
	0, 0, 0, 1515, 1516, 1517, 1518, 0, 0, 0,
	0, 0, 0, 1498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1530, 0, 0,
	1540, 0, 0, 0, 1520, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1536, 0, 1537, 0, 0, 0,
	0, 0, 0, 1507, 1508, 0, 0, 0, 0, 0,
	1529, 0, 0, 1504, 1505, 1511, 1532, 1510, 1506, 1528,
	1503, 1501, 1502, 1494, 1495, 1496, 1497, 1499, 1500, 1513,
	0, 0, 0, 0, 0, 0, 0, 2662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1538, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 1490,
	1491, 0, 1523, 1524, 1525, 1533, 1534, 1535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1526, 1521,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 1539, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1492, 0, 0, 1514,
	0, 0, 0, 0, 0, 1512, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1531, 1490, 1491, 0, 1523,
	1524, 1525, 1533, 1534, 1535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1526, 1521, 0, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 1539, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1515, 1516, 1517, 1518, 0, 0, 0, 0, 0, 0,
	1498, 0, 0, 1492, 0, 0, 0, 0, 0, 0,
	0, 0, 1512, 0, 0, 0, 0, 0, 0, 1509,
	0, 0, 0, 0, 1530, 0, 0, 1540, 0, 0,
	1529, 1520, 1522, 1504, 1505, 1511, 1532, 1510, 1506, 0,
	1503, 1501, 1502, 1494, 1495, 1496, 1497, 1499, 1500, 0,
	0, 1536, 0, 1537, 0, 0, 0, 2661, 0, 0,
	1507, 1508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1528, 1515, 1516, 1517,
	1518, 0, 0, 0, 0, 0, 1513, 1498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1538, 0, 0,
	0, 1530, 0, 0, 1540, 0, 0, 0, 1520, 1522,
	0, 0, 0, 0, 1527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1536, 0,
	1537, 0, 0, 0, 0, 0, 0, 1507, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1528, 0, 0, 0, 0, 1519, 0,
	0, 0, 0, 1513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1514, 0, 0, 0,
	0, 0, 0, 0, 1538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1527, 1531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1514, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1529, 0, 1531,
	1504, 1505, 1511, 1532, 1510, 1506, 0, 1503, 1501, 1502,
	1494, 1495, 1496, 1497, 1499, 1500, 0, 0, 0, 0,
	0, 0, 0, 0, 2139, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1490, 1491, 0, 1523,
	1524, 1525, 1533, 1534, 1535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1526, 1521, 0, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 1539, 0,
	0, 0, 0, 0, 1529, 0, 0, 1504, 1505, 1511,
	1532, 1510, 1506, 0, 1503, 1501, 1502, 1494, 1495, 1496,
	1497, 1499, 1500, 1492, 0, 0, 0, 3618, 0, 0,
	0, 0, 1512, 0, 0, 0, 0, 0, 0, 1509,
	0, 0, 0, 0, 1490, 1491, 0, 1523, 1524, 1525,
	1533, 1534, 1535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1526, 1521, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 1539, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 1516, 1517,
	1518, 1492, 0, 0, 0, 0, 0, 1498, 0, 0,
	1512, 0, 0, 0, 0, 0, 0, 1509, 0, 0,
	0, 0, 1490, 1491, 0, 1523, 1524, 1525, 1533, 1534,
	1535, 1530, 0, 0, 1540, 0, 0, 0, 1520, 1522,
	0, 1526, 1521, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 1539, 0, 0, 0, 1536, 0,
	1537, 0, 0, 0, 0, 0, 0, 1507, 1508, 0,
	0, 0, 0, 0, 0, 1515, 1516, 1517, 1518, 1492,
	0, 0, 0, 1528, 0, 1498, 0, 0, 1512, 0,
	0, 0, 0, 1513, 0, 1509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1530,
	0, 0, 1540, 0, 1538, 0, 1520, 1522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1527, 0, 0, 0, 0, 1536, 0, 1537, 0,
	0, 0, 0, 0, 0, 1507, 1508, 0, 0, 0,
	0, 0, 0, 1515, 1516, 1517, 1518, 0, 0, 0,
	0, 1528, 0, 1498, 0, 0, 0, 0, 0, 0,
	0, 1513, 0, 0, 0, 1519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1530, 0, 0,
	1540, 0, 1538, 1514, 1520, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1527,
	0, 0, 0, 0, 1536, 0, 1537, 0, 0, 1531,
	0, 0, 0, 1507, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1513,
	0, 0, 0, 1519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1538, 1514, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 0,
	0, 0, 0, 0, 1529, 0, 0, 1504, 1505, 1511,
	1532, 1510, 1506, 0, 1503, 1501, 1502, 1494, 1495, 1496,
	1497, 1499, 1500, 0, 0, 0, 0, 3614, 0, 0,
	0, 1519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1531, 0, 0, 0, 0,
	0, 0, 1529, 0, 0, 1504, 1505, 1511, 1532, 1510,
	1506, 0, 1503, 1501, 1502, 1494, 1495, 1496, 1497, 1499,
	1500, 0, 0, 0, 0, 3535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1490, 1491, 0, 1523, 1524, 1525, 1533, 1534,
	1535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1526, 1521, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 1539, 0, 0, 0, 0, 0,
	1529, 0, 0, 1504, 1505, 1511, 1532, 1510, 1506, 0,
	1503, 1501, 1502, 1494, 1495, 1496, 1497, 1499, 1500, 1492,
	0, 0, 0, 3534, 0, 0, 0, 0, 1512, 0,
	0, 0, 0, 0, 0, 1509, 0, 0, 0, 0,
	1490, 1491, 0, 1523, 1524, 1525, 1533, 1534, 1535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1526,
	1521, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 1539, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1515, 1516, 1517, 1518, 1492, 0, 0,
	0, 0, 0, 1498, 0, 0, 1512, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 0, 0, 1490, 1491,
	0, 1523, 1524, 1525, 1533, 1534, 1535, 1530, 0, 0,
	1540, 0, 0, 0, 1520, 1522, 0, 1526, 1521, 0,
	0, 0, 0, 0, 0, 1493, 0, 0, 0, 0,
	1539, 0, 0, 0, 1536, 0, 1537, 0, 0, 0,
	0, 0, 0, 1507, 1508, 0, 0, 0, 0, 0,
	0, 1515, 1516, 1517, 1518, 1492, 0, 0, 0, 1528,
	0, 1498, 0, 0, 1512, 0, 0, 0, 0, 1513,
	0, 1509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 1540, 0,
	1538, 0, 1520, 1522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 0,
	0, 0, 1536, 0, 1537, 0, 0, 0, 0, 0,
	0, 1507, 1508, 0, 0, 0, 0, 0, 0, 1515,
	1516, 1517, 1518, 0, 0, 0, 0, 1528, 0, 1498,
	0, 0, 0, 0, 0, 0, 0, 1513, 0, 0,
	0, 1519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1530, 0, 0, 1540, 0, 1538, 1514,
	1520, 1522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1527, 0, 0, 0, 0,
	1536, 0, 1537, 0, 0, 1531, 0, 0, 0, 1507,
	1508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1513, 0, 0, 0, 1519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1538, 1514, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1531, 0, 0, 0, 0, 0, 0,
	1529, 0, 0, 1504, 1505, 1511, 1532, 1510, 1506, 0,
	1503, 1501, 1502, 1494, 1495, 1496, 1497, 1499, 1500, 0,
	0, 0, 0, 3419, 0, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1514, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1531, 0, 0, 0, 0, 0, 0, 1529, 0,
	0, 1504, 1505, 1511, 1532, 1510, 1506, 0, 1503, 1501,
	1502, 1494, 1495, 1496, 1497, 1499, 1500, 0, 0, 0,
	0, 3316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1490, 1491,
	0, 1523, 1524, 1525, 1533, 1534, 1535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1526, 1521, 0,
	0, 0, 0, 0, 0, 1493, 0, 0, 0, 0,
	1539, 0, 0, 0, 0, 0, 1529, 0, 0, 1504,
	1505, 1511, 1532, 1510, 1506, 0, 1503, 1501, 1502, 1494,
	1495, 1496, 1497, 1499, 1500, 1492, 0, 0, 0, 3269,
	0, 0, 0, 0, 1512, 0, 0, 0, 0, 0,
	0, 1509, 0, 0, 0, 0, 1490, 1491, 0, 1523,
	1524, 1525, 1533, 1534, 1535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1526, 1521, 0, 0, 0,
	0, 0, 0, 1493, 0, 0, 0, 0, 1539, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1515,
	1516, 1517, 1518, 1492, 0, 0, 0, 0, 0, 1498,
	0, 0, 1512, 0, 0, 0, 0, 0, 0, 1509,
	0, 0, 0, 0, 1490, 1491, 0, 1523, 1524, 1525,
	1533, 1534, 1535, 1530, 0, 0, 1540, 0, 0, 0,
	1520, 1522, 0, 1526, 1521, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 1539, 0, 0, 0,
	1536, 0, 1537, 0, 0, 0, 0, 0, 0, 1507,
	1508, 0, 0, 0, 0, 0, 0, 1515, 1516, 1517,
	1518, 1492, 0, 0, 0, 1528, 0, 1498, 0, 0,
	1512, 0, 0, 0, 0, 1513, 0, 1509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1530, 0, 0, 1540, 0, 1538, 0, 1520, 1522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1527, 0, 0, 0, 0, 1536, 0,
	1537, 0, 0, 0, 0, 0, 0, 1507, 1508, 0,
	0, 0, 0, 0, 0, 1515, 1516, 1517, 1518, 0,
	0, 0, 0, 1528, 0, 1498, 0, 0, 0, 0,
	0, 0, 0, 1513, 0, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1530,
	0, 0, 1540, 0, 1538, 1514, 1520, 1522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1527, 0, 0, 0, 0, 1536, 0, 1537, 0,
	0, 1531, 0, 0, 0, 1507, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1513, 0, 0, 0, 1519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1538, 1514, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1527,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1531,
	0, 0, 0, 0, 0, 0, 1529, 0, 0, 1504,
	1505, 1511, 1532, 1510, 1506, 0, 1503, 1501, 1502, 1494,
	1495, 1496, 1497, 1499, 1500, 0, 0, 0, 0, 3268,
	0, 0, 0, 1519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1514, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 0,
	0, 0, 0, 0, 1529, 0, 0, 1504, 1505, 1511,
	1532, 1510, 1506, 0, 1503, 1501, 1502, 1494, 1495, 1496,
	1497, 1499, 1500, 0, 0, 0, 0, 3267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1490, 1491, 0, 1523, 1524, 1525,
	1533, 1534, 1535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1526, 1521, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 1539, 0, 0, 0,
	0, 0, 1529, 0, 0, 1504, 1505, 1511, 1532, 1510,
	1506, 0, 1503, 1501, 1502, 1494, 1495, 1496, 1497, 1499,
	1500, 1492, 0, 0, 0, 3024, 0, 0, 0, 0,
	1512, 0, 0, 0, 0, 0, 0, 1509, 0, 0,
	0, 0, 1490, 1491, 0, 1523, 1524, 1525, 1533, 1534,
	1535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1526, 1521, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 1539, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1515, 1516, 1517, 1518, 1492,
	0, 0, 0, 0, 0, 1498, 0, 0, 1512, 0,
	0, 0, 0, 0, 0, 1509, 0, 0, 0, 0,
	1490, 1491, 0, 1523, 1524, 1525, 1533, 1534, 1535, 1530,
	0, 0, 1540, 0, 0, 0, 1520, 1522, 0, 1526,
	1521, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 1539, 0, 0, 0, 1536, 0, 1537, 0,
	0, 0, 0, 0, 0, 1507, 1508, 0, 0, 0,
	0, 0, 0, 1515, 1516, 1517, 1518, 1492, 0, 0,
	0, 1528, 0, 1498, 0, 0, 1512, 0, 0, 0,
	0, 1513, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1530, 0, 0,
	1540, 0, 1538, 0, 1520, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1527,
	0, 0, 0, 0, 1536, 0, 1537, 0, 0, 0,
	0, 0, 0, 1507, 1508, 0, 0, 0, 0, 0,
	0, 1515, 1516, 1517, 1518, 0, 0, 0, 0, 1528,
	0, 1498, 0, 0, 0, 0, 0, 0, 0, 1513,
	0, 0, 0, 1519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 1540, 0,
	1538, 1514, 1520, 1522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 0,
	0, 0, 1536, 0, 1537, 0, 0, 1531, 0, 0,
	0, 1507, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1513, 0, 0,
	0, 1519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1538, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1531, 0, 0, 0, 0,
	0, 0, 1529, 0, 0, 1504, 1505, 1511, 1532, 1510,
	1506, 0, 1503, 1501, 1502, 1494, 1495, 1496, 1497, 1499,
	1500, 0, 0, 0, 0, 2659, 0, 0, 0, 1519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1514, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1531, 0, 0, 0, 0, 0, 0,
	1529, 0, 0, 1504, 1505, 1511, 1532, 1510, 1506, 0,
	1503, 1501, 1502, 1494, 1495, 1496, 1497, 1499, 1500, 0,
	0, 0, 0, 2658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1490, 1491, 0, 1523, 1524, 1525, 1533, 1534, 1535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1526,
	1521, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 1539, 0, 0, 0, 0, 0, 1529, 0,
	0, 1504, 1505, 1511, 1532, 1510, 1506, 0, 1503, 1501,
	1502, 1494, 1495, 1496, 1497, 1499, 1500, 1492, 0, 0,
	0, 2657, 0, 0, 0, 0, 1512, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 0, 0, 1490, 1491,
	0, 1523, 1524, 1525, 1533, 1534, 1535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1526, 1521, 0,
	0, 0, 0, 0, 0, 1493, 0, 0, 0, 0,
	1539, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1515, 1516, 1517, 1518, 1492, 0, 0, 0, 0,
	0, 1498, 0, 0, 1512, 0, 0, 0, 0, 0,
	0, 1509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 1540, 0,
	0, 0, 1520, 1522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1536, 0, 1537, 0, 0, 0, 0, 0,
	0, 1507, 1508, 0, 0, 0, 0, 0, 0, 1515,
	1516, 1517, 1518, 0, 0, 0, 0, 1528, 0, 1498,
	0, 0, 0, 0, 0, 0, 0, 1513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1530, 0, 0, 1540, 0, 1538, 0,
	1520, 1522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1527, 0, 0, 0, 0,
	1536, 0, 1537, 0, 0, 0, 0, 0, 0, 1507,
	1508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1513, 0, 0, 0, 1519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1538, 1514, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1514, 0, 1490, 1491, 0,
	1523, 1524, 1525, 1533, 1534, 1535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1526, 1521, 0, 0,
	0, 1531, 0, 0, 1493, 0, 0, 0, 1529, 1539,
	0, 1504, 1505, 1511, 1532, 1510, 1506, 0, 1503, 1501,
	1502, 1494, 1495, 1496, 1497, 1499, 1500, 0, 0, 0,
	0, 2656, 0, 0, 1492, 0, 0, 0, 0, 0,
	0, 0, 0, 1512, 0, 0, 0, 0, 0, 0,
	1509, 0, 0, 0, 0, 1490, 1491, 0, 1523, 1524,
	1525, 1533, 1534, 1535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1526, 1521, 0, 0, 0, 0,
	2585, 0, 1493, 0, 0, 0, 1529, 1539, 0, 1504,
	1505, 1511, 1532, 1510, 1506, 0, 1503, 1501, 1502, 1494,
	1495, 1496, 1497, 1499, 1500, 0, 0, 2614, 1515, 1516,
	1517, 1518, 1492, 0, 0, 0, 0, 0, 1498, 3723,
	0, 1512, 0, 0, 0, 0, 0, 0, 1509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1530, 0, 0, 1540, 0, 0, 0, 1520,
	1522, 0, 0, 0, 0, 0, 0, 2586, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1536,
	0, 1537, 0, 0, 0, 0, 0, 0, 1507, 1508,
	0, 0, 0, 0, 0, 0, 1515, 1516, 1517, 1518,
	0, 0, 0, 0, 1528, 0, 1498, 0, 0, 0,
	0, 0, 0, 0, 1513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1530, 0, 0, 1540, 0, 1538, 0, 1520, 1522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1527, 0, 0, 0, 0, 1536, 0, 1537,
	0, 0, 0, 0, 0, 0, 1507, 1508, 0, 0,
	0, 0, 0, 0, 3722, 0, 0, 0, 0, 0,
	0, 0, 1528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1513, 0, 0, 0, 1519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1538, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1514, 0, 1490, 1491, 0, 1523, 1524, 1525,
	1533, 1534, 1535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1526, 1521, 0, 0, 0, 1531, 0,
	0, 1493, 0, 0, 0, 1529, 1539, 0, 1504, 1505,
	1511, 1532, 1510, 1506, 0, 1503, 1501, 1502, 1494, 1495,
	1496, 1497, 1499, 1500, 0, 0, 0, 0, 0, 0,
	0, 1492, 0, 0, 0, 0, 0, 0, 0, 0,
	1512, 0, 0, 0, 0, 2249, 0, 1509, 0, 0,
	0, 0, 1490, 1491, 0, 1523, 1524, 1525, 1533, 1534,
	1535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1526, 1521, 0, 0, 0, 2248, 0, 0, 1493,
	0, 0, 0, 1529, 1539, 0, 1504, 1505, 1511, 1532,
	1510, 1506, 0, 1503, 1501, 1502, 1494, 1495, 1496, 1497,
	1499, 1500, 0, 0, 0, 1515, 1516, 1517, 1518, 1492,
	0, 0, 0, 0, 0, 1498, 0, 2706, 1512, 0,
	2705, 0, 0, 0, 0, 1509, 0, 0, 0, 0,
	1490, 1491, 0, 1523, 1524, 1525, 1533, 1534, 1535, 1530,
	0, 0, 1540, 0, 0, 0, 1520, 1522, 0, 1526,
	1521, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 1539, 0, 0, 0, 1536, 0, 1537, 0,
	0, 0, 0, 0, 0, 1507, 1508, 0, 0, 0,
	0, 0, 0, 1515, 1516, 1517, 1518, 1492, 0, 0,
	0, 1528, 0, 1498, 0, 0, 1512, 0, 0, 0,
	0, 1513, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1530, 0, 0,
	1540, 0, 1538, 0, 1520, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1527,
	0, 0, 0, 0, 1536, 0, 1537, 0, 0, 0,
	0, 0, 0, 1507, 1508, 0, 0, 0, 0, 0,
	0, 1515, 1516, 1517, 1518, 0, 0, 0, 0, 1528,
	0, 1498, 0, 0, 0, 0, 0, 0, 0, 1513,
	0, 0, 0, 1519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 1540, 0,
	1538, 1514, 1520, 1522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 0,
	0, 0, 1536, 0, 1537, 0, 0, 1531, 0, 0,
	0, 1507, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1513, 0, 0,
	0, 1519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1538, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1527, 844, 0, 0, 0,
	0, 0, 0, 0, 0, 1531, 0, 0, 0, 0,
	0, 0, 1529, 0, 0, 1504, 1505, 1511, 1532, 1510,
	1506, 0, 1503, 1501, 1502, 1494, 1495, 1496, 1497, 1499,
	1500, 0, 0, 0, 0, 0, 0, 0, 0, 1519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1514, 0, 1490,
	1491, 0, 1523, 1524, 1525, 1533, 1534, 1535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1526, 1521,
	0, 0, 0, 1531, 0, 0, 1493, 0, 0, 0,
	1529, 1539, 0, 1504, 1505, 1511, 1532, 1510, 1506, 0,
	1503, 1501, 1502, 1494, 1495, 1496, 1497, 1499, 1500, 0,
	0, 0, 0, 0, 0, 0, 1492, 0, 0, 0,
	0, 0, 0, 0, 0, 1512, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 0, 0, 1490, 1491, 0,
	1523, 1524, 1525, 1533, 1534, 1535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1526, 1521, 0, 0,
	0, 0, 0, 0, 1493, 0, 0, 0, 1529, 1539,
	0, 1504, 1505, 1511, 1532, 1510, 1506, 0, 1503, 1501,
	1502, 1494, 1495, 1496, 1497, 1499, 1500, 0, 0, 0,
	1515, 1516, 1517, 1518, 1492, 0, 0, 0, 0, 0,
	1498, 0, 0, 1512, 0, 0, 0, 0, 0, 0,
	1509, 0, 0, 0, 0, 1490, 1491, 0, 1523, 1524,
	1525, 1533, 1534, 1535, 1530, 0, 0, 1540, 0, 0,
	0, 1520, 1522, 0, 1526, 1521, 0, 0, 0, 2707,
	0, 0, 1493, 0, 0, 0, 0, 1539, 0, 0,
	0, 1536, 0, 1537, 0, 0, 0, 0, 0, 0,
	1507, 1508, 0, 0, 0, 0, 0, 0, 1515, 1516,
	1517, 1518, 1492, 0, 0, 0, 1528, 0, 1498, 0,
	0, 1512, 0, 2712, 0, 0, 1513, 0, 1509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1530, 0, 0, 1540, 0, 1538, 0, 1520,
	1522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1527, 0, 0, 0, 0, 1536,
	0, 1537, 0, 0, 0, 0, 0, 0, 1507, 1508,
	0, 0, 0, 0, 0, 0, 1515, 1516, 1517, 1518,
	0, 0, 0, 0, 1528, 0, 1498, 0, 0, 0,
	0, 0, 0, 0, 1513, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1530, 0, 0, 1540, 0, 1538, 1514, 1520, 1522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1527, 0, 0, 0, 0, 1536, 0, 1537,
	0, 0, 1531, 0, 0, 0, 1507, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1513, 3003, 0, 0, 1519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1538, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1531, 0, 0, 0, 0, 0, 0, 1529, 0, 0,
	1504, 1505, 1511, 1532, 1510, 1506, 0, 1503, 1501, 1502,
	1494, 1495, 1496, 1497, 1499, 1500, 0, 0, 0, 0,
	0, 0, 0, 0, 1519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1514, 0, 1490, 1491, 0, 1523, 1524, 1525,
	1533, 1534, 1535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1526, 1521, 0, 0, 0, 1531, 0,
	0, 1493, 0, 0, 0, 1529, 1539, 0, 1504, 1505,
	1511, 1532, 1510, 1506, 0, 1503, 1501, 1502, 1494, 1495,
	1496, 1497, 1499, 1500, 0, 0, 0, 0, 0, 0,
	0, 1492, 0, 0, 0, 0, 0, 0, 0, 0,
	1512, 0, 0, 0, 0, 0, 0, 1509, 0, 0,
	0, 0, 1490, 1491, 0, 1523, 1524, 1525, 1533, 1534,
	1535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1526, 1521, 0, 0, 0, 2660, 0, 0, 1493,
	0, 0, 0, 1529, 1539, 0, 1504, 1505, 1511, 1532,
	1510, 1506, 0, 1503, 1501, 1502, 1494, 1495, 1496, 1497,
	1499, 1500, 0, 0, 0, 1515, 1516, 1517, 1518, 1492,
	0, 0, 0, 0, 0, 1498, 0, 0, 1512, 0,
	0, 0, 0, 0, 0, 1509, 0, 0, 0, 0,
	1490, 1491, 0, 1523, 1524, 1525, 1533, 1534, 1535, 1530,
	0, 0, 1540, 0, 0, 0, 1520, 1522, 0, 1526,
	1521, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 1539, 0, 0, 0, 1536, 0, 1537, 0,
	0, 0, 0, 0, 0, 1507, 1508, 0, 0, 0,
	0, 0, 0, 1515, 1516, 1517, 1518, 1492, 0, 0,
	0, 1528, 0, 1498, 0, 0, 1512, 0, 0, 0,
	0, 1513, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1530, 0, 0,
	1540, 0, 1538, 0, 1520, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1527,
	0, 0, 0, 0, 1536, 0, 1537, 0, 0, 0,
	0, 0, 0, 1507, 1508, 0, 0, 2674, 0, 0,
	0, 1515, 1516, 1517, 1518, 0, 0, 0, 0, 1528,
	0, 1498, 0, 0, 0, 0, 0, 0, 0, 1513,
	0, 0, 0, 1519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 1540, 0,
	1538, 1514, 1520, 1522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 0,
	0, 0, 1536, 0, 1537, 0, 0, 1531, 0, 0,
	0, 1507, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1513, 0, 0,
	0, 1519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1538, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1531, 0, 0, 0, 0,
	0, 0, 1529, 0, 0, 1504, 1505, 1511, 1532, 1510,
	1506, 0, 1503, 1501, 1502, 1494, 1495, 1496, 1497, 1499,
	1500, 0, 0, 0, 0, 0, 0, 0, 0, 1519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1514, 0, 1490,
	1491, 0, 1523, 1524, 1525, 1533, 1534, 1535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1526, 1521,
	0, 0, 0, 1531, 0, 0, 1493, 0, 0, 0,
	1529, 1539, 0, 1504, 1505, 1511, 1532, 1510, 1506, 0,
	1503, 1501, 1502, 1494, 1495, 1496, 1497, 1499, 1500, 0,
	0, 0, 0, 0, 0, 0, 1492, 0, 0, 0,
	0, 0, 0, 0, 0, 1512, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 0, 0, 1490, 1491, 0,
	1523, 1524, 1525, 1533, 1534, 1535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 0, 0,
	0, 0, 0, 0, 1493, 0, 0, 0, 1529, 1539,
	0, 1504, 1505, 1511, 1532, 1510, 1506, 0, 1503, 1501,
	1502, 1494, 1495, 1496, 1497, 1499, 1500, 0, 0, 0,
	1515, 1516, 1517, 1518, 1492, 0, 0, 0, 0, 0,
	1498, 0, 0, 1512, 0, 0, 0, 0, 0, 0,
	1509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1530, 0, 0, 1540, 0, 0,
	0, 1520, 1522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1536, 0, 1537, 0, 0, 0, 0, 0, 0,
	1507, 1508, 0, 0, 0, 0, 0, 0, 1515, 1516,
	1517, 1518, 0, 0, 0, 0, 1528, 0, 1498, 0,
	0, 0, 0, 0, 0, 0, 1513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1530, 0, 0, 1540, 0, 1538, 0, 1520,
	1522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1536,
	0, 1537, 0, 0, 0, 0, 0, 0, 1507, 1508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1513, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1538, 1514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1531, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 1703, 1710, 0,
	1693, 1736, 1735, 0, 1514, 0, 1695, 1694, 0, 0,
	0, 0, 0, 0, 1746, 1747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1531, 0, 0, 0, 0, 0, 0, 1529, 0, 0,
	1504, 1505, 1511, 1532, 1510, 1506, 0, 1503, 1501, 1502,
	1494, 1495, 1496, 1497, 1499, 1500, 1737, 0, 1733, 1732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1730, 1728, 1729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1529, 0, 0, 1504, 1505,
	1511, 1532, 1510, 1506, 0, 1503, 1501, 1502, 1494, 1495,
	1496, 1497, 1499, 1500, 1705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1719, 1708, 1721, 1723, 1724, 1725,
	1720, 0, 1713, 0, 752, 0, 788, 0, 0, 0,
	0, 0, 1742, 1743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 771, 757, 0, 0, 0, 0, 0, 1697,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1734, 0, 758, 0,
	1706, 0, 1707, 761, 0, 0, 0, 794, 0, 0,
	0, 0, 0, 0, 768, 769, 0, 0, 0, 0,
	781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 789, 763, 0, 0, 0, 0,
	0, 0, 0, 1727, 0, 0, 0, 1716, 1714, 1715,
	1718, 1717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1698, 1699, 1701, 1702, 0, 0, 0, 0,
	0, 0, 0, 0, 764, 0, 0, 0, 0, 1722,
	1700, 0, 756, 0, 0, 0, 0, 0, 0, 0,
	1745, 0, 0, 0, 0, 0, 0, 765, 766, 0,
	0, 0, 0, 0, 0, 0, 1696, 0, 0, 1738,
	1739, 1740, 1741, 0, 0, 0, 0, 0, 0, 773,
	772, 0, 0, 0, 0, 0, 0, 767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1704, 0, 0, 793, 0, 1711, 1744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 760, 0, 0, 0,
	785, 786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 783, 0, 0, 0, 0,
	0, 0, 779, 0, 0, 776, 0, 0, 0, 0,
	0, 777, 0, 0, 0, 0, 0, 0, 754, 0,
	791, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 778, 0, 0, 0,
	775, 0, 0, 0, 0, 0, 0, 0, 0, 792,
	0, 0, 0, 0, 0, 0, 0, 780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	784,
}
var sqlPact = [...]int{

	4942, -1000, -1000, -1000, -1000, -1000, -1000, 208, 205, 201,
	199, 198, 195, 191, 190, -1000, -1000, -1000, 176, -1000,
	-1000, 174, -1000, 173, 172, 171, 170, -1000, 161, 160,
	159, -1000, -1000, -1000, -1000, 154, 145, 144, 61532, 1749,
	74145, 64561, 1690, 55875, 73708, 55438, 73271, 72834, 139, -1000,
	72397, 136, 135, 134, -1000, -1000, 132, 131, 1868, 45329,
	117, 116, 115, 1918, 110, 108, -1000, 105, -1000, 8856,
	1277, -1000, 104, 103, -1000, 8457, 3998, 63693, 2241, 100,
	99, 44891, 2230, 2259, -1000, -1000, 1592, -1000, -1000, 98,
	97, 96, 95, 93, 92, 90, 86, 83, -1000, 78,
	71, 70, 67, 65, 64, 63, -1000, 61, 60, 59,
	58, 57, 56, 54, 53, 51, 45, 44, 43, -1000,
	85702, 1590, 1429, 1428, 1419, 1414, 1403, 896, 42, 41,
	40, 39, 35, 33, 32, -1000, 31, 30, 29, 25,
	22, -1000, 21, 17, 133, 13, 12, 11, 10, 9,
	1913, -1000, 1338, 831, 21772, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 78455, 74576,
	8, -136, 4, -1000, 2568, 849, 37450, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 462, -1000, -1000,
	-1000, 259, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1516, 687, -1000, -1000, -1000, 71960,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1745, 24,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 686, -1000, 1732,
	276, 1608, -1000, -1000, -1000, -1000, -1000, 74576, -1000, -1000,
	2856, 2855, 1652, 685, 71529, -1000, 1240, -1000, 841, 24544,
	-1000, 1078, -1000, 24544, 258, -1000, -1000, -1000, -1000, -1000,
	-1000, 55001, 16196, 54564, 54127, 71092, 15749, 61101, 50214, 49767,
	-1000, -1000, 40090, 1129, -1000, -1000, -1000, -1000, -1000, -20,
	51090, 74576, -1000, 256, -1000, -1000, -1000, -1000, -1000, -1000,
	31116, 735, 30644, 457, 30172, 379, -1000, -1000, -1000, -1000,
	2854, 2853, 994, 2847, 2496, 78024, 1486, 2844, 1402, 1061,
	914, 2843, 2842, 2841, 2840, 2838, 2837, 1208, 70655, 2245,
	70218, 1371, 49320, 48873, 61532, 61532, 2038, 69781, 1190, 1171,
	-1000, -1000, -1000, -1000, 2327, 2257, 2234, 42279, -1000, -1000,
	2830, 2829, 2828, 2827, 2826, 77593, 1463, 2825, 1961, 2824,
	2823, 2822, 2819, 2818, 2816, 2815, 2814, 2813, -1000, 60664,
	60227, 59790, 59353, 69344, 48426, 47979, -1000, -1000, -1000, 39194,
	5504, 5165, 315, 68907, 40535, 61532, 61532, -1000, -1000, 31576,
	79, -1000, -1000, -1000, 40090, 2187, -1000, 31576, 79, -1000,
	74576, -1000, 2233, 1601, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2186, 1369, 2720, 47532, 1698, 1213,
	2558, 2325, 2324, 1296, 1909, 2322, 2317, 2316, 2311, 2309,
	1333, 2011, 238, 21300, 1352, 1291, 2304, 2300, 2731, 1615,
	1649, 53690, 2811, 2810, 2532, 2298, 2289, 2185, -1000, -1000,
	-1000, -1000, 1281, -1000, -1000, 56737, -1000, -1000, 1020, -1000,
	-1000, 1020, -1000, -1000, -1000, -1000, -1000, 1126, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1338, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1840, -1000, 1631, -1000, -1000,
	1955, 2542, 2542, 2542, 2587, 454, 446, -1000, 133, -1000,
	-1000, 84809, -1000, -1000, 31576, 31576, 31576, 31576, 31576, 1553,
	-1000, 683, -1000, -1000, 711, -1000, 681, 584, -1000, -1000,
	-1000, -1000, -1000, -1000, 679, 2735, -1000, -1000, -1000, -1000,
	-1000, 2700, -1000, 18480, -1000, -1000, -1000, 435, 678, 31576,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 871, -1000, 250, 851, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 621, 1481, 619, 619, 619, -1000, -1000, 910,
	-1000, -1000, -1000, 319, 617, 310, 616, -1000, -1000, -1000,
	-1000, 2231, 677, 675, -1000, 673, 670, 668, 667, 666,
	-1000, -1000, -1000, 665, 664, 663, 661, 660, 659, 658,
	657, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 909,
	-1000, 652, 649, 645, 644, 642, 641, 638, 637, 633,
	-1000, -1000, -21, 74576, -1000, 462, -21, -1000, -1000, 632,
	-1000, 25004, 25004, 25004, -1000, -1000, 1688, 31576, -1000, 2002,
	-1000, -7, -7, 797, 38320, -1000, 36576, 797, 239, 737,
	41842, -1000, 2180, -1000, -1000, 631, 249, -1000, -1000, 2178,
	74576, 16641, 74576, 61532, 61532, 61532, 2453, 31576, -1000, -1000,
	47085, 74576, 61963, 2658, 85502, 47085, 74576, 2228, -1000, -1000,
	-1000, 74576, -1000, 31576, -1000, 2657, 1237, 51525, 2623, -31,
	-1000, -1000, -1000, -1000, -1000, -1000, 1936, 1964, 1019, 1833,
	1320, -1000, 24544, 2488, -1000, -1000, -1000, 246, 16641, -1000,
	1995, 2434, 1136, -1000, 1801, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1422, 2433, -1000, 1963, 2432, 1416, -1000,
	-1000, 1647, -1000, -1000, 2513, -1000, -1000, 1445, 2431, -6,
	-1000, -1000, 870, 2423, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 870, 2416, -1000, 825, -1000, 50659, 40090,
	51090, -23, -1000, -1000, -46, -1000, 15302, 84809, -1000, -1000,
	-1000, 84809, 796, -1000, -1000, 2415, -1000, 84809, 795, -1000,
	-1000, 2414, -1000, -1000, -1000, 2809, -1000, 2808, 1887, 2807,
	2806, 2805, -1000, 1406, 1458, 2804, -1000, 2801, -1000, -1000,
	-1000, -1000, -1000, -1000, 58916, 1685, -1000, -1000, 58042, -1000,
	1885, -1000, -1000, 58479, 913, -1000, 870, 1883, -1000, 870,
	1882, -1000, 889, -1000, 2800, 68470, 2061, 870, 1881, -1000,
	-1000, -1000, -1000, -1000, 43149, -1000, 43149, -1000, 43149, -1000,
	1260, -1000, 77162, -7, -7, 2700, -1000, -1000, -1000, -1000,
	-1000, 2412, 2799, 2798, 2797, -1000, 74576, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 183, 2411, -1000, -1000,
	183, 2406, -1000, 183, 2403, -1000, 181, 2400, -1000, -1000,
	1709, 2397, -1000, -48, 2392, -1000, -1000, -48, 2388, -1000,
	-52, -1000, -1000, -1000, 849, -1000, 38757, -1000, 38757, -1000,
	68033, 50659, 863, 623, 44454, 84809, -1000, -82, -1000, 40090,
	84809, -1000, 50659, 58042, -1000, 67596, 57611, -1000, -1000, 1207,
	2003, -1000, -1000, -1000, 863, 50659, 50659, 50659, -1000, 67159,
	-1000, -1000, 1632, 1324, 2516, 1619, 61532, -1000, 1482, -1000,
	-1000, -1000, 2536, 2223, -1000, 46650, 63256, -1000, 62825, -1000,
	62394, -1000, 61532, -1000, 61532, -1000, 2796, 2795, 2794, -1000,
	2792, 2527, 84809, 2525, -1000, 2345, 1421, 1408, 74576, -1000,
	-1000, 74576, -1000, 74576, -1000, -1000, -1000, -1000, -1000, 1935,
	-1000, -1000, -1000, -1000, 61532, -1000, -1000, -1000, -1000, -1000,
	-1000, 2221, -1000, 1400, -1000, 1461, -1000, 1206, -1000, -1000,
	185, -1000, -1000, -31, -1000, 76731, -1000, 1955, -1000, 74576,
	-1000, 1919, 2197, 2210, 1184, 1759, 2029, -1000, 29700, 2006,
	33876, 1780, 133, -1000, -1000, 133, 133, 24084, -1000, -1000,
	85502, 85502, 16641, 1146, 31576, 31576, 31576, 31576, 31576, 31576,
	31576, 31576, 31576, 31576, 31576, 31576, 31576, 31576, 31576, 31576,
	31576, 31576, 31576, 31576, 31576, 31576, 31576, 31576, 31576, 31576,
	31576, 31576, 31576, 31576, 31576, 31576, 31576, 31576, 31576, 1667,
	31576, 1123, 31576, 31576, 31576, 31576, 1287, -1000, -1000, 1567,
	510, 1576, -1000, 2699, 2699, 2699, 85216, 85216, 583, 2791,
	711, -1000, 31576, -1000, 79, 31576, 17088, -1000, -1000, -1000,
	446, 9934, 1825, -1000, 433, 17560, -1000, -1000, -1000, 18480,
	584, 29228, 31576, 905, 84809, 1180, 2716, 14857, 2255, 2122,
	-1000, 2724, -1000, -1000, 2716, -1000, -1000, -1000, -1000, 2716,
	1143, 1141, 2716, -1000, 2716, 2716, 630, 726, 725, 20828,
	20356, 19884, 19412, 712, 31576, 31576, 31576, 31576, 31576, 31576,
	31576, 31576, -1000, 28768, 28296, 27824, 34336, 27352, 31576, 18940,
	26880, 26408, 74576, -21, 2640, 31576, 275, -1000, 83761, -1000,
	275, 275, 629, -58, 84809, 1990, 1990, 37885, 1559, 1581,
	1581, 1581, -1000, 797, 11271, 797, 66293, 1594, 797, 797,
	240, 262, 428, 36141, 2002, 66293, 700, 626, 3, 2,
	1, -1000, -1000, 0, -3, -1000, -1000, 61532, 625, 17088,
	16641, 1221, -59, 230, 2030, 2027, 2026, -1000, 2018, 1300,
	-65, 1120, -33, -1000, 4495, -66, -1000, 948, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	908, 624, 622, 775, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	621, 1481, 619, 619, 619, -1000, -1000, -1000, 319, 617,
	310, 616, -1000, -1000, -1000, -1000, -1000, -1000, 2177, -46,
	61963, 814, -71, 999, -31, -1000, -1000, -1000, 51525, 1020,
	-1000, 1707, -1000, -1000, -1000, -1000, -1000, -1000, 1211, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 871, -1000, -1000, -1000,
	-1000, -1000, -1000, 2712, 2710, -22, -1000, -1000, 16641, -1000,
	-38, 1404, -1000, 53253, 1818, 2530, 2504, 1257, -1000, 1227,
	2586, 56737, 2627, 2664, 485, -1000, 2175, -1000, -1000, 840,
	1392, 1115, 56737, 1963, -1000, 85502, -1000, 2052, 2585, 1195,
	1197, 1195, 1195, 1178, -1000, 56737, 1112, -1000, 1097, -1000,
	-40, 2626, 2663, 189, -1000, 2174, 1091, -1000, -1000, 61532,
	16641, -1000, 1266, -1000, 50659, -1000, 50659, 2071, -1000, -72,
	825, -23, 51090, 74576, 228, -1000, 31576, 79, 31576, 79,
	-1000, -1000, 2387, -1000, -1000, -1000, 2790, 1430, 1956, -1000,
	-1000, -1000, 615, 1880, 2168, 74576, 2033, -25, 61532, -1000,
	2384, 1963, 1879, -1000, -1000, 57174, -1000, 2377, -1000, 2376,
	612, 2788, -1000, 1682, 1878, -1000, -1000, -1000, 76300, 1163,
	2367, 955, 386, 2638, -1000, 386, 43584, -1000, 74576, -1000,
	-1000, 74576, -1000, -1000, -1000, 2786, -1000, 61532, -1000, -1000,
	61532, -1000, 61532, -1000, 61532, -1000, 61532, 61532, -1000, 74576,
	50659, 50659, 50659, 315, 52391, -74, -77, 426, -1000, 66728,
	74576, 953, 52822, 74576, 2477, 863, 40090, -82, 863, 863,
	825, -1000, 825, -1000, 61532, 2207, -1000, 863, 863, 863,
	-1000, -1000, -1000, -1000, 2785, 2783, -1000, -1000, -1000, 869,
	61532, 74576, 61532, -1000, -1000, 74576, -1000, 74576, -1000, 869,
	74576, 869, 74576, 869, 74576, -1000, -1000, -1000, -1000, -1000,
	-1000, 79, 31576, 1294, -1000, 2200, -1000, 2198, -1000, 28,
	-1000, -1000, -1000, -1000, 1570, 61532, 61532, 61532, 61532, 74576,
	61532, -1000, 56737, -1000, 1919, 2197, -1000, -1000, -1000, -1000,
	-1000, -1000, 1169, 1634, -1000, 1993, -1000, 1248, -1000, -1000,
	-1000, 84809, 34796, -1000, -1000, 84809, 1370, -1000, 33416, 32956,
	-1000, -1000, 1346, 61532, 2036, -1000, 2036, -24, -1000, 83354,
	1985, 61532, -1000, -1000, -1000, -1000, -1000, 839, 1023, 1023,
	1087, 1087, 1087, 1087, 2620, 4363, 4764, 6097, 404, 404,
	5528, 5528, 5528, 5528, 5528, 404, 6010, 486, 486, 6010,
	6010, 6010, 6010, 6010, 486, 486, 486, 404, 404, 404,
	85216, 85138, 10576, 31576, 31576, 1090, 1562, 510, 10103, 31576,
	4283, 4283, 4283, 4283, -1000, 1596, -1000, -1000, -1000, -1000,
	2165, 614, 34336, 34336, -1000, -1000, -1000, -1000, 18020, 31576,
	-1000, -1000, -1000, -1000, 25936, -1000, -1000, 82947, -247, 415,
	-203, -9, -1000, 31576, 31576, 31576, 410, -1000, 225, 31576,
	74576, -1000, 80158, 699, -99, -1000, -79, 1223, -1000, 31576,
	-1000, -1000, 1084, -1000, 1081, 1077, 1075, -1000, 613, 407,
	-1000, 224, -1000, 1557, 610, 609, 403, -80, 402, 834,
	829, 401, 390, 382, 31576, -1000, -1000, -1000, -1000, -1000,
	82869, -1000, -1000, 82469, -1000, -1000, 82391, -1000, -1000, 82313,
	-1000, -1000, -1000, 84731, 79891, 79661, 79367, 9425, 79324, 10725,
	-85, 376, -1000, 2164, -203, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 370, -1000, 369, -1000, 84653, -203, 367,
	5022, -1000, 34336, 34336, 34336, -1000, 358, -1000, 83683, -1000,
	84324, 25476, 25476, 25476, 355, 84246, 31576, -203, -86, -1000,
	-87, -1000, -1000, 608, -88, 886, 25004, 37013, 16641, -1000,
	886, 886, 31576, -1000, 31576, 2009, -1000, -1000, -1000, 2008,
	2438, 1990, 37885, -1000, -1000, -1000, -1000, 66293, -1000, 2700,
	2115, -1000, 66293, -1000, -1000, 74576, 462, -1000, 66293, 66293,
	16641, 797, -1000, 797, 66293, 494, -1000, -1000, -1000, -1000,
	-1000, 354, 40970, -9, 213, 863, -1000, 16641, 2106, 2106,
	2106, 2106, -1000, -1000, 74576, 2673, -1000, 1498, -1000, 85502,
	-1000, 710, 957, 605, -1000, 2716, 2716, -1000, 2716, 74576,
	146, 24544, -1000, 1020, -1000, -1000, 1321, -1000, 1440, -1000,
	1139, -1000, -1000, -1000, -1000, 24544, -1000, 1457, 74576, 74576,
	61532, -1000, -1000, 1877, 75869, 1875, 85502, 74576, -1000, -1000,
	602, 600, 1983, 1982, 74576, 74576, 1980, 75438, 75007, 74576,
	1561, 31576, 1515, 1426, 79, 79, -1000, -1000, 79, 598,
	1095, 61532, 61532, 61532, 1411, -1000, -1000, -1000, -1000, -1000,
	56306, -1000, -1000, 2723, 2718, -1000, 1195, -1000, -1000, -1000,
	1195, 1963, 1410, 61532, 74576, 1492, 79, 79, -1000, -1000,
	79, 595, 16641, 1441, -1000, 1266, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 46219, 952, 870, 870, 863, 2158, -1000,
	2071, -1000, -1000, 14412, 84809, -1000, 84809, -1000, 74576, -1000,
	912, 74576, 52822, 862, 2365, 42714, -46, 863, 50659, 61532,
	-25, 74576, -1000, 1963, 2364, 462, 1866, -1000, -1000, 50659,
	50659, 2782, 594, 2780, -1000, 61532, 2361, 1681, 1865, 2310,
	760, 74576, 886, 37885, 1470, -1000, 41407, 924, 74576, 1391,
	138, -1000, -1000, -1000, 19, 74576, -1000, 2777, -1000, -1000,
	183, 183, 183, -1000, 181, 1709, -1000, -48, -48, -1000,
	-1000, 315, 315, 863, -28, 593, -1000, 791, 790, 39645,
	50659, -93, -1000, -1000, -1000, -1000, -1000, 61532, 74576, 640,
	2060, 74576, -94, -1000, 212, 592, -1000, -1000, 863, 2155,
	-1000, -1000, 879, -1000, 1204, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -13, -46, -46, -1000, 869, -1000,
	869, -1000, 869, -1000, 84809, -1000, 1293, 1282, 74576, -1000,
	16641, 74576, 61532, 16641, 61532, 2195, 2192, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 970, -1000, 1370, 1621, -1000,
	584, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1922, -1000, -30, 24084, 1837, -1000, -1000, 61532, -17, 31576,
	31576, 8753, 8245, 31576, 34336, 34336, -1000, 31576, 6312, -1000,
	-1000, -1000, -1000, -1000, 2152, 579, 31576, 85502, 4250, 3790,
	-1000, 348, 10397, 6010, -1000, 31576, -1000, 347, 23624, -1000,
	83839, -39, -96, -1000, 11728, -203, -102, -1000, -1000, 707,
	-1000, 2440, -1000, 31576, 84168, 1904, 1531, 1431, 1297, 2716,
	2734, 13967, -1000, 44019, 900, 1591, -1000, -1000, 2716, 828,
	-1000, -1000, -1000, 828, -1000, 81913, -1000, -1000, -1000, -1000,
	85502, 85502, 31576, 31576, -1000, 31576, 31576, 31576, -1000, -1000,
	31576, -1000, -1000, 2150, 31576, -1000, 85502, 85502, 34336, 34336,
	34336, 34336, 34336, 34336, 34336, 34336, 34336, 34336, 34336, 34336,
	34336, 34336, 34336, 34336, 34336, 34336, 34336, 1928, 34336, 2693,
	2693, 2693, -1000, 2189, 2150, 31576, 31576, 85502, 345, 342,
	341, -1000, 31576, -203, -1000, -1000, 315, -1000, 2119, -1000,
	31576, -1000, -195, -1000, 2002, -1000, -1000, 2119, 2119, -109,
	84809, 37885, 37885, -1000, 576, 31576, 2000, -1000, -1000, 696,
	-241, -1000, 787, -1000, -1000, -1000, -1000, -1000, 462, -1000,
	-1000, -1000, 211, 66293, 66293, 694, -1000, -110, -1000, -1000,
	-111, -1000, 2636, 338, 16641, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -46, 1607, 2732, -1000, 2717, 705, 693,
	2716, 337, 336, 335, -46, 74576, -1000, -31, -1000, -1000,
	-1000, 31576, -1000, -1000, 2522, 1066, 1059, -1000, 2360, -1000,
	1863, -1000, 934, -1000, 1347, -1000, 31576, 31576, 568, 567,
	1493, 2776, 945, 2359, 1709, 2358, 1709, -1000, -1000, 844,
	-1000, 84809, 566, 562, -1000, -38, 1399, 876, -1000, -1000,
	31576, 31576, 65862, -1000, 359, 2513, -18, -1000, 1058, -1000,
	-1000, -1000, -1000, 1963, 1053, -1000, -1000, -1000, 874, -1000,
	-1000, 31576, -1000, -40, 1051, -1000, -1000, -1000, 45774, -1000,
	-1000, -1000, 50659, 863, -1000, 2772, 2770, 2769, 330, -112,
	-45, 85502, 2635, 1692, 534, 61532, 833, -1000, 2700, -1000,
	-1000, -1000, -1000, 61532, 2634, 2303, 870, 870, -1000, 2768,
	-1000, 940, 16641, 61532, 2293, 1946, 760, 51960, -1000, 870,
	1591, -57, -1000, 1391, 23152, 2506, -117, -1000, -1000, -1000,
	886, 43584, 37885, 31576, 2765, -118, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 65431, 65431, 50659, 50659, 50659,
	863, 74576, 74576, 52822, 2764, 561, 74576, 74576, 558, -1000,
	74576, 74576, 2755, 50659, -1000, 79, -1000, 1600, 61532, 13522,
	-1000, -1000, -1000, -1000, -1000, 869, -1000, -1000, 1520, 1763,
	1520, 1378, 1361, -1000, 1613, -1000, -1000, -1000, -1000, 2021,
	2535, 16641, 2618, 4283, 31576, 31576, 4262, 729, 449, 4283,
	31576, 31576, 85502, 7957, -119, 31576, 31576, -1000, 31576, 692,
	84809, 2730, 31576, 329, 328, -1000, -1000, -1000, 2704, -1000,
	-1000, -1000, 84809, 31576, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 327, -1000, 147, -1000, -1000, -1000, 78886, -1000, 31576,
	325, 323, -1000, -1000, -1000, 322, 320, 10054, 6056, 81835,
	81757, 81357, 84809, 2189, 84809, -1000, -1000, 991, 991, 1188,
	1188, 1188, 1188, 2693, 975, 429, 872, 478, 478, 478,
	511, 531, 531, 478, 478, 478, 2146, 1989, 555, 4981,
	-1000, -1000, 84809, 84809, 316, -1000, -1000, -1000, -203, 307,
	2111, 2580, 84809, -1000, 37885, 2111, 2111, -1000, -1000, 2438,
	74576, 84809, 37885, -1000, 2115, -1000, 12183, -1000, 16641, -1000,
	-1000, -1000, -1000, 2700, -1000, 40970, -1000, 554, -1000, 80,
	-1000, -1000, 691, 2754, 703, 304, -1000, -1000, -1000, -46,
	84809, 74576, 74576, 74576, 2292, -1000, 3750, -1000, 81279, -124,
	-1000, 83354, 31576, 74576, -1000, 1503, 2020, 982, -1000, 2549,
	74576, -1000, 74576, -1000, -1000, 74576, 74576, 61532, 2273, -125,
	84809, -47, -1000, 786, -1000, 1209, -1000, 13077, 61532, 61532,
	2271, -126, 16641, -1000, -1000, -48, -1000, -1000, -1000, -1000,
	2056, -1000, 64124, 1636, 79, -1000, 64996, 2750, 552, -1000,
	1599, -1000, 689, 1963, 79, 61532, -1000, -1000, -1000, 550,
	74576, 1653, 546, 16641, 1948, 760, 51960, -1000, 1163, 2029,
	-1000, -49, -1000, 513, 79, 1591, -1000, -57, 84809, -1000,
	777, -1000, -127, -1000, -1000, 303, -1000, 2476, 2475, -1000,
	-1000, 31576, 545, 544, 74576, 2474, -1000, -1000, -133, -1000,
	1872, -1000, -1000, -1000, -1000, -1000, 16641, 1384, -1000, 520,
	519, -1000, -1000, -1000, -1000, 2535, 4283, 4283, 31576, 31576,
	31576, 4283, 7957, -135, -1000, 4283, 4283, -203, -1000, -1000,
	83839, -1000, -1000, -1000, 84809, -1000, 12632, 1521, -1000, 81201,
	-1000, -1000, -1000, -1000, 31576, 31576, -1000, -1000, -1000, -1000,
	-1000, 34336, 2139, 517, 85502, -1000, -1000, 873, 31576, 31576,
	2002, 873, 873, -1000, -141, -1000, -1000, -1000, 2700, 80,
	-1000, -1000, 2748, 16641, 702, -1000, 2747, -1000, -1000, -1000,
	-1000, 74576, -1000, 74576, -1000, 16641, 74576, 2142, 1856, -1000,
	-1000, 1977, 514, 34336, 61532, 772, 2128, 1511, 31576, 1837,
	-142, -143, 1852, -1000, -1000, 1849, 31576, -1000, 85502, 512,
	1709, 1709, -144, -151, -1000, 31576, 1050, 74576, 22692, -1000,
	2746, 2513, -1000, -1000, 31576, 1046, -1000, 1492, 2074, -1000,
	-1000, -1000, -1000, 1975, -1000, -1000, 74576, 1967, 865, -152,
	-1000, 771, 769, -1000, 52822, 862, 868, -1000, -1000, -1000,
	462, 31576, -1000, 61532, 31576, 1648, -1000, 760, 51960, -1000,
	2310, 1391, -1000, 2450, 74576, 2503, -1000, 2029, 510, -1000,
	863, 509, 498, -153, 31576, 31576, -158, 497, 863, -108,
	-1000, 765, 746, -1000, -1000, 61532, 61532, 31576, 31576, -1000,
	4283, 4283, 4283, -1000, 298, -1000, -1000, 1591, 2573, -1000,
	80801, 80723, 547, 34336, 85502, -159, -1000, 74576, 84809, -203,
	-1000, -1000, -1000, 548, -1000, 2743, -1000, -1000, 2437, -1000,
	-1000, -1000, 74576, 1861, -1000, 942, 31576, 4981, 493, 31576,
	-1000, -1000, 2053, 2153, 2056, 492, -1000, -1000, -1000, -1000,
	937, 1434, -1000, -1000, 84809, 2554, 31576, -1000, -1000, 490,
	489, 84809, 488, 758, 2135, -1000, -1000, -1000, 84809, 487,
	862, -1000, 1548, 1636, 484, -1000, -1000, -1000, 2046, -1000,
	64996, 35241, 35241, 292, 2633, 868, -1000, 2697, -1000, 2632,
	-160, 940, -161, 61532, 51960, -1000, 1946, -1000, 1134, -166,
	74576, 1391, -1000, -1000, 50659, 50659, 937, -167, -168, -1000,
	50659, -1000, 1872, -1000, 74576, -1000, 74576, -1000, -1000, -175,
	-176, -1000, 1543, 31576, -1000, -1000, 547, -178, -1000, -154,
	-1000, 2631, -1000, -1000, -1000, -1000, 2280, 2104, 80645, 1916,
	74576, 80245, 2151, -1000, -1000, 1492, 74576, 2056, 2099, 61532,
	939, 16641, -183, 1520, 1520, 31576, 22232, 1541, 31576, -1000,
	61532, 74576, -1000, 2473, -1000, -1000, -1000, 2056, 79, -1000,
	-1000, 79, 937, 483, 1511, 476, -1000, 1948, 1255, -1000,
	886, -1000, -1000, -185, -186, 1511, 937, -1000, -188, -1000,
	-194, -196, -1000, -1000, 289, 32496, 32496, 32496, -203, -1000,
	74576, 465, 2248, 867, -1000, 1642, 1484, 264, 930, -1000,
	-1000, 2128, -197, -1000, 866, 462, -1000, 31576, -1000, 937,
	-202, -1000, 921, -205, -1000, 920, -207, -1000, 2132, -1000,
	-210, 460, -213, -1000, -1000, -1000, 1492, 865, -1000, 1511,
	31576, 2056, 31576, -1000, 43584, -1000, 863, 863, 2056, 1511,
	863, -1000, -1000, -1000, 2301, -1000, 35686, 1651, 1351, 83276,
	2301, 2301, -1000, -1000, 74576, 2608, -1000, 1645, 1643, 1273,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2605, 1916,
	84809, 2056, -1000, 1520, 2062, -1000, 1520, 2130, -1000, 1527,
	-1000, 74576, -1000, 74576, 862, -1000, 2056, -218, 1492, -219,
	-204, -1000, -1000, 1492, 2056, -1000, -1000, 1488, 2666, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 753, -1000, 2461,
	-1000, 963, 1753, 1753, 748, 1642, -1000, -1000, 459, -1000,
	458, -1000, -221, -1000, -1000, 1492, 937, 883, 1511, -1000,
	-1000, 1492, 1348, -1000, -1000, 1584, 32036, 31576, -1000, 2678,
	-1000, -1000, 1999, -1000, 31576, 2128, 31576, 31576, 1694, 883,
	1511, -1000, 2739, 2056, -1000, -1000, -1000, -1000, 84809, -1000,
	-1000, -1000, 84809, -1000, -226, -227, -1000, -1000, -1000, -1000,
	2056, -1000, 1492, 1492, 1017, 1492, 883, -1000, 450, 883,
	-1000, 31576, -1000, -228, 1492, -1000,
}
var sqlPgo = [...]int{

	0, 3344, 3343, 3342, 3337, 3336, 3335, 3334, 3333, 3332,
	3331, 3330, 3329, 3328, 3325, 3324, 3323, 3321, 3317, 3316,
	3313, 3312, 3310, 3308, 3305, 3303, 3301, 3298, 3296, 3295,
	3293, 3291, 3287, 3286, 3285, 3284, 3283, 3281, 3280, 3278,
	3277, 3276, 3275, 3274, 3273, 3271, 3270, 3268, 36, 3267,
	3266, 3264, 3260, 3258, 3256, 3254, 3253, 3251, 3249, 3247,
	3246, 3245, 3240, 3239, 3237, 3236, 3235, 50, 3232, 233,
	3231, 3229, 3228, 3226, 3225, 3224, 3223, 3222, 3221, 3220,
	231, 3219, 121, 3218, 3217, 3214, 3213, 3212, 227, 3210,
	3209, 3208, 3207, 3206, 3205, 3204, 3201, 159, 204, 3200,
	124, 3199, 3196, 3193, 3192, 3189, 3186, 3185, 3172, 3169,
	3168, 214, 3166, 226, 3161, 3160, 3159, 3158, 3157, 3147,
	3146, 3145, 3141, 3140, 3139, 3135, 3134, 3132, 3130, 3129,
	3128, 3127, 3126, 3123, 3122, 3121, 3120, 3119, 3118, 3117,
	3116, 3115, 224, 152, 3111, 3110, 222, 220, 3109, 136,
	99, 97, 88, 3108, 110, 72, 3107, 17, 138, 199,
	5177, 191, 3106, 3105, 3104, 208, 155, 3103, 196, 3102,
	3101, 3097, 3096, 75, 67, 137, 149, 135, 131, 168,
	3095, 3094, 74, 59, 49, 32, 3093, 3092, 3091, 2023,
	85, 3090, 218, 200, 134, 3088, 3086, 3084, 805, 3082,
	194, 77, 93, 31, 96, 3078, 116, 21, 3077, 147,
	37, 3073, 129, 73, 33, 6682, 3497, 3072, 84, 230,
	89, 122, 201, 182, 130, 187, 172, 142, 115, 3071,
	213, 3065, 68, 162, 3063, 3062, 3060, 57, 160, 83,
	3059, 6, 2, 133, 13, 94, 20, 3057, 12, 3056,
	3052, 3047, 3044, 24, 123, 3041, 107, 63, 3040, 29,
	3039, 18, 171, 3037, 190, 100, 3036, 3034, 212, 163,
	164, 3029, 10, 185, 3026, 3022, 3021, 3020, 3017, 105,
	23, 104, 3015, 3014, 108, 195, 157, 3012, 35, 3009,
	140, 76, 112, 234, 102, 176, 95, 181, 148, 186,
	3008, 3005, 3004, 183, 3003, 3002, 175, 125, 3000, 2998,
	229, 40, 58, 193, 54, 150, 127, 2997, 167, 2996,
	2995, 2994, 225, 141, 174, 9, 4, 64, 98, 28,
	14, 189, 118, 206, 92, 2993, 4234, 1419, 1969, 61,
	109, 91, 55, 103, 117, 219, 52, 2992, 2991, 1534,
	2990, 2987, 2984, 2982, 151, 2981, 2980, 2979, 113, 132,
	252, 2975, 119, 70, 11, 90, 209, 223, 86, 177,
	161, 205, 2974, 143, 2971, 38, 146, 2969, 156, 202,
	81, 2967, 299, 126, 2965, 170, 2963, 2962, 2958, 2957,
	2955, 2951, 2948, 173, 2947, 114, 2946, 2945, 215, 154,
	2940, 211, 128, 178, 80, 43, 2936, 71, 637, 2931,
	158, 56, 2924, 2761, 34, 0, 7740, 5318, 6529, 2923,
	6400, 2922, 166, 106, 2921, 2920, 2919, 79, 2917, 62,
	2916, 2914, 53, 2913, 15, 7, 8, 19, 16, 738,
	120, 2910, 2908, 87, 111, 144, 2906, 228, 184, 2905,
	2903, 2900, 65, 2899, 30, 2896, 26, 2895, 2892, 27,
	5, 22, 2891, 2890, 203, 2889, 197, 2888, 2885, 2661,
	101, 2883, 2882, 216, 66, 2880, 210, 2879, 139, 169,
	2878, 2877, 2875, 2874, 207, 2873, 2606, 2872, 25, 1,
	2871, 2870, 165, 3, 2421, 2868, 2866, 69, 2864, 2860,
	153,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 12, 12, 7, 7, 8, 8,
	8, 36, 36, 9, 9, 9, 11, 11, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 15, 15, 26,
	26, 16, 16, 28, 28, 17, 17, 29, 29, 473,
	473, 20, 31, 21, 32, 14, 474, 474, 474, 474,
	25, 22, 33, 23, 23, 23, 23, 23, 153, 153,
	153, 153, 19, 19, 27, 27, 176, 176, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	472, 472, 178, 178, 177, 172, 172, 475, 475, 179,
	179, 179, 181, 181, 37, 37, 37, 96, 96, 96,
	97, 97, 98, 98, 154, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 84, 84, 413, 413, 414, 414,
	149, 149, 150, 150, 150, 150, 151, 151, 152, 152,
	152, 51, 39, 39, 39, 39, 39, 39, 39, 40,
	40, 40, 40, 41, 41, 41, 41, 41, 41, 42,
	42, 42, 42, 42, 42, 49, 49, 49, 49, 143,
	143, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	482, 482, 483, 483, 484, 484, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 64, 64, 255, 255, 231, 231, 65,
	65, 65, 66, 66, 67, 67, 53, 53, 466, 466,
	269, 269, 377, 377, 69, 69, 289, 289, 70, 70,
	70, 70, 70, 70, 71, 71, 71, 71, 71, 71,
	71, 72, 72, 72, 72, 72, 72, 72, 72, 72,
	72, 78, 78, 78, 79, 79, 79, 76, 76, 76,
	74, 74, 74, 73, 73, 73, 77, 77, 77, 75,
	75, 75, 270, 270, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 379, 379,
	81, 81, 81, 347, 347, 85, 85, 85, 304, 304,
	86, 86, 86, 86, 86, 87, 87, 87, 87, 99,
	99, 99, 99, 469, 469, 262, 262, 192, 192, 192,
	192, 92, 92, 92, 92, 93, 93, 93, 94, 94,
	148, 148, 105, 105, 105, 105, 105, 104, 104, 104,
	104, 104, 104, 43, 43, 43, 44, 44, 45, 45,
	46, 46, 47, 47, 48, 48, 48, 48, 48, 107,
	107, 478, 478, 109, 106, 106, 106, 108, 108, 108,
	108, 110, 111, 111, 111, 111, 111, 111, 111, 111,
	112, 112, 407, 407, 278, 278, 405, 405, 421, 421,
	406, 406, 235, 235, 235, 235, 235, 236, 236, 236,
	412, 412, 412, 412, 412, 412, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	132, 132, 132, 142, 142, 142, 142, 142, 142, 142,
	135, 135, 135, 122, 122, 114, 114, 114, 114, 114,
	118, 118, 118, 118, 118, 118, 118, 118, 115, 115,
	124, 124, 124, 124, 124, 119, 119, 121, 121, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 116, 116,
	116, 116, 126, 126, 126, 126, 310, 310, 310, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 138,
	138, 138, 138, 138, 138, 361, 361, 133, 133, 133,
	133, 137, 137, 137, 137, 294, 294, 130, 130, 130,
	131, 131, 131, 136, 136, 134, 134, 139, 139, 139,
	139, 117, 117, 117, 487, 487, 487, 140, 140, 129,
	129, 141, 141, 141, 141, 141, 141, 141, 141, 128,
	128, 128, 127, 127, 127, 127, 120, 467, 467, 464,
	464, 464, 464, 464, 464, 464, 465, 465, 468, 468,
	90, 90, 90, 58, 58, 58, 59, 59, 157, 157,
	157, 157, 155, 155, 156, 156, 60, 60, 488, 488,
	488, 476, 476, 476, 477, 477, 477, 477, 477, 477,
	237, 237, 238, 238, 328, 328, 328, 328, 328, 241,
	241, 180, 180, 180, 244, 245, 245, 242, 242, 243,
	243, 243, 247, 247, 246, 249, 249, 248, 327, 428,
	428, 430, 430, 430, 430, 430, 430, 430, 432, 432,
	432, 432, 432, 432, 432, 432, 432, 432, 432, 426,
	426, 426, 427, 422, 422, 423, 423, 423, 423, 239,
	239, 240, 240, 240, 240, 424, 425, 260, 260, 364,
	429, 429, 431, 431, 433, 489, 489, 489, 489, 489,
	489, 490, 490, 326, 326, 325, 325, 253, 253, 434,
	434, 434, 434, 435, 435, 435, 435, 435, 438, 437,
	436, 436, 436, 436, 436, 63, 63, 63, 291, 291,
	290, 290, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 145, 145, 195,
	195, 61, 61, 61, 57, 57, 57, 10, 10, 10,
	13, 13, 13, 486, 486, 62, 62, 62, 62, 194,
	194, 194, 194, 194, 194, 471, 471, 470, 470, 196,
	196, 492, 492, 68, 68, 68, 68, 68, 68, 56,
	56, 56, 56, 56, 493, 493, 311, 311, 309, 309,
	259, 259, 363, 199, 199, 173, 173, 173, 24, 18,
	18, 34, 34, 35, 35, 30, 30, 479, 479, 480,
	480, 91, 91, 95, 95, 95, 103, 103, 144, 144,
	144, 144, 144, 144, 144, 38, 38, 38, 38, 50,
	50, 50, 50, 101, 495, 495, 495, 102, 102, 102,
	494, 494, 193, 193, 322, 322, 323, 323, 496, 496,
	324, 324, 324, 324, 187, 186, 188, 188, 55, 55,
	55, 182, 182, 183, 183, 184, 184, 185, 185, 497,
	497, 88, 88, 88, 147, 147, 230, 230, 230, 318,
	318, 318, 254, 254, 204, 204, 321, 321, 319, 319,
	319, 319, 288, 288, 288, 146, 146, 267, 267, 280,
	280, 281, 281, 374, 374, 282, 100, 100, 160, 160,
	158, 158, 158, 158, 158, 158, 158, 158, 165, 165,
	166, 166, 167, 167, 168, 169, 169, 169, 169, 271,
	271, 170, 170, 170, 159, 159, 159, 161, 161, 161,
	161, 161, 161, 161, 164, 164, 164, 164, 171, 171,
	171, 163, 163, 445, 445, 445, 447, 447, 448, 444,
	444, 446, 446, 491, 491, 293, 293, 293, 251, 252,
	250, 250, 257, 257, 256, 258, 258, 362, 362, 362,
	174, 174, 174, 285, 285, 285, 285, 286, 286, 314,
	314, 312, 312, 312, 312, 313, 313, 315, 315, 315,
	316, 316, 317, 317, 284, 284, 343, 343, 162, 162,
	162, 264, 264, 264, 265, 265, 334, 334, 334, 334,
	334, 334, 335, 335, 333, 333, 333, 333, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 366, 367, 367,
	266, 266, 368, 320, 320, 462, 462, 462, 463, 463,
	360, 360, 369, 369, 369, 369, 369, 369, 358, 358,
	359, 359, 375, 376, 376, 297, 297, 297, 297, 295,
	295, 298, 298, 298, 298, 296, 296, 370, 370, 370,
	370, 287, 287, 371, 371, 371, 371, 372, 329, 330,
	330, 380, 380, 380, 380, 395, 263, 263, 263, 263,
	263, 498, 498, 381, 381, 381, 381, 381, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	385, 385, 385, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 394, 394, 394, 394, 394, 386, 386, 391, 391,
	392, 392, 392, 387, 388, 393, 393, 393, 393, 499,
	499, 397, 397, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 383, 383, 383, 390, 390, 390, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 305, 305, 307, 307, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	338, 338, 338, 338, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 439,
	439, 439, 439, 439, 439, 439, 439, 442, 442, 443,
	443, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	449, 449, 450, 450, 452, 452, 453, 453, 454, 455,
	455, 455, 456, 457, 457, 451, 451, 458, 458, 458,
	458, 459, 459, 460, 460, 460, 460, 460, 461, 461,
	461, 461, 461, 349, 349, 350, 350, 356, 356, 356,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 197, 197, 197, 197,
	197, 276, 276, 274, 274, 274, 277, 277, 275, 275,
	273, 273, 272, 272, 346, 346, 344, 344, 348, 348,
	299, 299, 396, 396, 396, 396, 396, 396, 396, 396,
	300, 300, 300, 308, 301, 301, 302, 302, 302, 302,
	302, 340, 341, 303, 303, 303, 342, 342, 351, 355,
	355, 354, 353, 353, 352, 352, 331, 331, 332, 332,
	283, 283, 500, 500, 279, 279, 373, 373, 373, 373,
	233, 233, 268, 268, 232, 232, 225, 225, 226, 226,
	226, 226, 261, 261, 357, 357, 398, 398, 399, 399,
	400, 400, 401, 401, 402, 403, 404, 345, 345, 214,
	213, 201, 202, 212, 211, 210, 200, 203, 207, 208,
	209, 205, 206, 220, 219, 218, 224, 216, 217, 378,
	227, 227, 228, 228, 228, 229, 229, 229, 229, 198,
	198, 221, 221, 222, 223, 223, 215, 215, 215, 189,
	189, 189, 190, 190, 191, 191, 411, 411, 409, 409,
	409, 410, 410, 410, 410, 408, 408, 408, 408, 408,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 418, 418, 418,
	418, 418, 418, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 417, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 419, 419,
	419, 420, 420,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 0, 1, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 3, 1, 1,
	3, 4, 6, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 5, 5, 6, 6, 4, 4, 4, 4, 3,
	4, 4, 4, 7, 7, 9, 8, 9, 5, 3,
	5, 7, 4, 12, 4, 12, 1, 3, 5, 5,
	2, 5, 3, 6, 4, 6, 5, 6, 6, 4,
	8, 3, 4, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 6, 7, 2, 5, 6, 2,
	1, 3, 1, 3, 1, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 6, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	3, 3, 4, 3, 4, 7, 4, 4, 4, 3,
	5, 7, 4, 3, 3, 4, 3, 3, 3, 3,
	2, 0, 1, 0, 1, 0, 3, 3, 3, 3,
	3, 6, 4, 4, 4, 3, 5, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 1, 1,
	2, 1, 2, 7, 3, 2, 0, 1, 3, 3,
	1, 0, 1, 2, 2, 1, 6, 5, 1, 2,
	1, 3, 2, 0, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 3, 4, 6, 3, 4, 6, 3,
	4, 6, 3, 4, 6, 3, 3, 5, 3, 3,
	5, 3, 1, 3, 2, 2, 5, 3, 3, 6,
	6, 3, 3, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 6, 4, 7, 2, 6,
	4, 7, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 1, 3, 5, 4, 6, 4,
	3, 0, 1, 3, 2, 4, 2, 4, 1, 6,
	3, 1, 1, 5, 3, 2, 6, 3, 3, 4,
	4, 3, 1, 3, 2, 3, 3, 1, 3, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 1, 1, 1, 1, 1, 2, 2,
	5, 7, 3, 3, 3, 4, 5, 5, 5, 3,
	4, 4, 3, 4, 4, 3, 4, 4, 5, 3,
	5, 5, 5, 7, 3, 3, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 4, 3,
	4, 3, 3, 4, 4, 5, 0, 1, 1, 3,
	2, 4, 3, 3, 5, 4, 3, 5, 3, 5,
	4, 6, 4, 6, 4, 1, 0, 3, 4, 4,
	5, 7, 5, 3, 3, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 3, 3, 4, 3, 3,
	3, 3, 4, 3, 1, 1, 1, 2, 3, 2,
	3, 6, 6, 7, 9, 7, 9, 3, 4, 10,
	10, 3, 5, 5, 5, 3, 5, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 1, 2, 0,
	3, 3, 2, 3, 6, 3, 10, 13, 0, 2,
	4, 3, 3, 3, 1, 3, 9, 12, 0, 2,
	3, 1, 1, 0, 1, 2, 2, 2, 2, 1,
	1, 0, 1, 3, 1, 1, 1, 1, 3, 8,
	0, 1, 1, 0, 2, 1, 0, 1, 0, 9,
	9, 3, 1, 3, 7, 1, 3, 11, 3, 2,
	0, 3, 1, 2, 2, 3, 2, 6, 2, 1,
	1, 2, 8, 4, 2, 5, 5, 5, 2, 9,
	10, 6, 5, 3, 1, 5, 8, 7, 11, 3,
	0, 2, 4, 3, 3, 1, 5, 1, 3, 1,
	2, 0, 1, 2, 2, 0, 1, 3, 3, 2,
	2, 1, 1, 4, 0, 6, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 4, 2, 2,
	2, 4, 7, 3, 4, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 8, 11, 7, 5, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	3, 0, 1, 6, 7, 6, 5, 3, 4, 15,
	18, 14, 17, 4, 0, 2, 2, 0, 1, 0,
	1, 3, 3, 2, 0, 1, 1, 0, 6, 6,
	8, 6, 8, 6, 8, 6, 8, 1, 0, 2,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 2, 3, 2, 2, 8, 11,
	3, 3, 0, 3, 0, 3, 0, 3, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 8, 5, 3, 4,
	3, 0, 2, 2, 0, 10, 3, 2, 0, 1,
	3, 1, 1, 3, 3, 5, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 6, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 3, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 2, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	2, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 7, 1, 7, 5, 3, 1,
	1, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 474, -82, -51, -49, -85, -86, -70,
	-87, -81, -99, -103, -91, -105, -144, -3, -37, -39,
	-52, -69, -71, -80, -89, -88, -90, -92, -96, -95,
	-84, -43, -100, -104, -113, -145, -146, -147, 86, 72,
	128, 109, 114, 161, 300, 330, 340, 324, -108, -109,
	359, -38, -50, -102, -101, -4, -13, -10, 27, 41,
	-40, -41, -42, 57, -57, -61, -54, -64, -481, 88,
	-446, -72, -75, -77, -485, 119, 134, 178, 292, -93,
	-94, 326, 328, 135, -45, -44, 129, -158, -160, -106,
	-107, -148, -114, -115, -116, -117, -118, -119, -120, -121,
	-122, -123, -124, -125, -126, -127, -128, -129, -134, -130,
	-131, -132, -133, -135, -136, -137, -138, -139, -140, -141,
	363, 410, 42, 373, 73, 122, 334, 21, -5, -6,
	-7, -8, -9, -11, -12, -53, -55, -56, -58, -59,
	-60, -68, -62, -63, -445, -73, -74, -76, -78, -79,
	325, -161, -159, 471, 424, -15, -20, -21, -16, -17,
	-19, -22, -18, -26, -31, -32, -28, -29, -27, -30,
	-33, -34, -35, -36, -24, -25, -14, -23, 442, 450,
	-164, -162, -163, -171, 347, 432, 387, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, -216, -221, -222,
	-223, -215, -189, -417, -420, 4, -415, -418, 140, 185,
	258, 21, 22, 23, 24, 25, 27, 38, 40, 39,
	41, 42, 45, 48, 49, 47, 52, 53, 54, 55,
	56, 57, 58, 61, 66, 71, 72, 73, 74, 75,
	76, 81, 78, 79, 80, 83, 85, 86, 87, 89,
	91, 92, 100, 101, 102, 103, 104, 105, 109, 112,
	111, 114, 117, 118, 119, 121, 123, 124, 126, 128,
	129, 132, 130, 393, 131, 133, 134, 135, 136, 146,
	147, 148, 150, 151, 153, 155, 159, 160, 162, 166,
	168, 169, 170, 171, 177, 178, 180, 181, 186, 182,
	187, 191, 194, 193, 195, 196, 197, 188, 202, 206,
	207, 208, 210, 211, 214, 215, 216, 217, 218, 221,
	220, 223, 226, 227, 230, 231, 234, 235, 236, 237,
	239, 240, 243, 241, 244, 242, 245, 248, 246, 247,
	250, 251, 256, 254, 252, 253, 260, 263, 175, 265,
	266, 268, 269, 270, 286, 273, 274, 275, 278, 279,
	282, 285, 287, 288, 289, 290, 291, 292, 293, 295,
	296, 298, 300, 302, 304, 305, 306, 307, 308, 309,
	310, 312, 313, 315, 316, 317, 318, 319, 324, 321,
	322, 323, 325, 326, 327, 328, 330, 332, 333, 334,
	335, 337, 339, 360, 361, 375, 340, 341, 342, 343,
	344, 345, 346, 350, 354, 351, 352, 353, 348, 349,
	355, 356, 357, 359, 362, 363, 365, 366, 368, 369,
	371, 372, 373, 374, 376, 379, 380, 381, 377, 378,
	386, 384, 385, 388, 389, 390, 391, 392, 394, 396,
	404, 405, 407, 410, 411, 412, 402, 414, 415, 418,
	419, 420, 423, 421, 422, 428, 424, 426, 429, 430,
	431, 437, 436, 443, 444, 446, 447, 448, 33, 43,
	44, 46, 50, 62, 63, 64, 67, 106, 107, 127,
	137, 138, 149, 163, 165, 172, 173, 174, 192, 198,
	200, 204, 224, 262, 264, 280, 284, 297, 299, 311,
	336, 367, 382, 397, 398, 399, 400, 406, 408, 432,
	433, 434, 438, 445, 271, -209, 2, -189, -189, 300,
	26, 2, 26, 296, 349, 389, 391, 2, -469, -262,
	2, 26, -192, -189, 88, 161, 347, -209, 2, -469,
	-262, 24, 2, -189, 2, -193, 2, 340, -189, 474,
	83, 231, 66, 336, 356, -111, 405, -110, 397, 342,
	-112, -407, 2, 248, -189, 474, 474, 474, 474, 474,
	2, 387, 289, 436, 348, 102, 308, 185, 425, -486,
	332, 164, 401, -464, 2, 4, -418, -415, -226, -225,
	387, 102, -223, -215, 464, -222, 474, 474, 474, 2,
	207, 208, 307, 306, 356, 357, 474, 474, 474, 2,
	25, 60, 82, 85, 108, 136, 156, 159, 276, -482,
	240, 286, 305, 355, 386, 394, 407, -477, 374, 61,
	342, -476, 425, -486, 412, 117, -309, 102, 231, 160,
	419, 391, 389, 417, 112, 191, 422, 421, 474, 474,
	25, 60, 69, 85, 117, 136, 156, 159, -484, 286,
	305, 339, 342, 355, 386, 394, 412, 407, 2, 436,
	348, 387, 185, 102, 425, -486, 303, -82, 2, 471,
	29, 28, 52, 359, -154, 387, 201, 2, -189, 207,
	208, 2, 474, 474, 157, -464, 2, 207, 208, 2,
	201, 2, 61, 344, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 2, -142, 356, 374, 170, 41, 66, 26,
	304, 71, 290, 103, 162, 185, 186, 215, 82, 83,
	-310, 40, 208, 207, -361, 388, 343, 349, 384, 340,
	405, 88, 426, 333, 448, 308, 309, 130, 4, 102,
	248, 358, 397, 231, 75, -491, 2, 387, -494, 2,
	405, 405, 2, -494, 2, -494, 2, -494, 2, -495,
	405, 445, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 474, 474, 474, -159, -161, -160, 474,
	474, 474, 474, 474, -142, 356, 2, 66, 26, -256,
	-257, 416, 199, 125, 277, -158, -160, 2, -445, -405,
	2, -336, -421, -338, 462, 463, 455, 257, 449, -349,
	108, 417, 271, -420, -339, -351, 127, 336, -277, 8,
	9, 5, 6, 7, -198, -382, -345, 409, 139, 261,
	-229, 475, 10, 471, -442, -160, -350, 34, 165, 59,
	-409, -228, -384, -392, -388, -389, -498, 48, 55, 54,
	394, 247, 350, 351, 368, 352, 353, 45, 428, 182,
	268, 270, 193, 4, 200, -227, -215, -439, -440, -415,
	-416, 192, 198, 194, 367, 195, 196, 197, 44, 311,
	150, 151, 149, 118, 107, 106, 264, 50, 49, 46,
	433, -393, 104, 397, 398, 399, 400, 210, 211, -189,
	-417, 69, 94, 95, 93, 98, 97, 233, 232, 99,
	96, 358, 425, 60, 33, 172, 173, 204, 262, 174,
	67, -441, 378, 90, 158, 190, 176, 203, 205, 209,
	225, 228, 249, 255, 259, 281, 283, 331, 364, -499,
	434, 137, 138, 284, 297, 382, 406, 408, 163, 224,
	62, 63, -447, 312, -448, -209, -447, 474, 474, 476,
	474, -250, -251, -252, 2, 26, 115, 471, 2, -365,
	2, -366, -370, -160, 219, -369, 471, -367, 469, -216,
	272, -443, 337, -439, -440, -198, -215, -228, 4, -253,
	471, 473, 102, 387, 70, 185, -304, 471, -189, 26,
	271, 401, 476, -347, 471, 271, 157, 274, -189, 2,
	2, 360, 2, 471, -111, 64, 405, 39, 356, -323,
	2, -324, -186, -187, -188, -375, 206, 302, 310, 451,
	448, -405, -478, 157, 454, 401, -405, -278, 473, 2,
	-370, 172, -216, 2, -213, -408, 4, -415, -418, -416,
	-419, 69, -417, 26, 28, 29, 30, 32, 34, 35,
	36, 37, 51, 59, 60, 65, 68, 70, 82, 88,
	93, 94, 96, 95, 97, 98, 99, 108, 110, 113,
	115, 116, 120, 122, 125, 139, 141, 154, 156, 157,
	161, 164, 167, 179, 189, 199, 201, 219, 222, 229,
	232, 233, 257, 261, 267, 271, 272, 276, 277, 294,
	301, 314, 329, 347, 358, 370, 383, 387, 395, 401,
	403, 409, 416, 417, 425, 427, 435, 439, 440, 441,
	442, -420, 2, -370, 172, 2, -218, 172, -370, -221,
	2, -200, -189, 2, -212, -408, 2, -232, 172, -216,
	-217, -221, -413, 172, 2, -411, 10, -410, 5, 4,
	-415, -418, -416, -413, 172, 2, -97, -413, 471, 401,
	476, -268, -225, -226, -261, -189, 473, -336, 2, -100,
	2, -336, 172, 2, -100, 172, 2, -336, 172, 2,
	-100, 172, 2, 2, 2, 407, 2, 85, 172, -189,
	387, 101, 2, 323, -483, 339, 411, 436, 2, 2,
	2, 2, 2, 2, 387, -205, 2, -189, 154, -224,
	172, 2, -189, 348, -492, 312, -413, 172, 2, -413,
	172, 2, -219, -221, -219, 185, 202, -200, 172, 2,
	391, 389, 391, 389, 157, 2, 201, 2, 201, 2,
	-371, 2, -372, -366, -216, 469, 2, 2, 2, 2,
	2, 172, -189, 387, 101, 2, 217, 2, 2, 2,
	2, 2, 2, 2, 2, 2, -270, 172, 2, -216,
	-270, 172, 2, -270, 172, 2, -233, 172, 2, -232,
	-200, 172, 2, -414, 172, 2, -413, -414, 172, 2,
	-379, 2, -378, -410, 432, -82, 471, -82, 471, -82,
	356, 471, -413, -216, -216, -336, -100, -98, -97, 157,
	-336, -100, -154, 154, 2, 102, 387, -142, 2, 154,
	427, 2, 8, 2, -413, 343, 309, 146, 2, 360,
	2, 361, 66, -310, 448, 66, 157, 2, 157, 2,
	-294, 2, 442, -467, 2, 271, 157, 2, 157, 2,
	157, 2, 157, 2, 157, 2, 306, 357, 208, 2,
	-100, 439, -336, 439, 2, 404, 216, 131, 157, -294,
	2, 157, 2, 157, 2, 5, 2, 375, 2, 206,
	302, 375, 2, -216, -487, 2, 387, 436, 348, 2,
	2, 78, 79, 157, 2, 157, 2, 157, 448, 2,
	-287, -370, -322, -323, -322, 401, -256, -257, -142, 360,
	2, -165, -285, -167, 154, -312, -313, -168, 229, 141,
	267, -169, -293, 26, 115, -293, -293, 53, 472, 472,
	11, 12, 68, 38, 462, 463, 464, 465, 152, 466,
	467, 460, 461, 459, 452, 453, 457, 212, 213, 84,
	456, 454, 77, 238, 338, 142, 143, 144, 145, 320,
	183, 31, 184, 14, 15, 16, 30, 276, 228, 449,
	176, 364, 455, 17, 18, 19, 203, 205, 259, 43,
	179, -197, -234, -336, -336, -336, -336, -336, 283, 471,
	-283, -331, 469, -160, 471, 471, 471, 5, -404, 8,
	-160, -336, -349, 472, -275, 471, -160, -349, -344, 471,
	336, 469, 471, -352, -336, 5, 471, 473, -449, 443,
	-386, 471, 299, -385, 471, -385, -385, 437, -383, 471,
	450, 444, 471, -383, 471, 471, 154, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 437, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 476, -447, -253, 471, -279, -373, -336, 464,
	-279, -279, 271, -272, -336, 90, -297, 209, 249, 158,
	225, 331, 190, -333, 475, -333, -360, 450, -160, -367,
	-215, -160, -369, 471, -365, -360, -83, -404, -69, -80,
	-88, -100, -113, -146, -147, 464, -216, 471, 157, 471,
	473, 157, -261, -408, -200, -216, -227, -228, -232, 114,
	-272, -464, -261, -192, 35, -346, -380, -381, -382, -391,
	-387, -390, -394, 48, 55, 54, 394, 247, 350, 351,
	368, 352, 353, 45, 428, 182, 268, 270, 193, 4,
	46, 433, -393, 200, 316, 317, 315, 319, 318, 192,
	198, 194, 367, 195, 196, 197, 44, 311, 150, 151,
	149, 118, 107, 106, 264, 50, 49, 104, 397, 398,
	399, 400, 210, 211, 434, 378, 62, 63, -464, -261,
	154, -407, -272, 35, -323, 2, 108, -411, 39, -496,
	476, 227, -236, 237, 256, 169, 272, 446, 265, -412,
	5, 4, -345, -357, 108, 231, 200, -398, -400, 8,
	-399, 9, -401, 462, 463, -406, -405, 92, 473, -408,
	-176, 321, -175, 23, 27, 119, 430, 132, -243, 187,
	289, 127, 371, 420, -473, -474, 341, 392, 393, 80,
	265, 321, 127, -290, -292, 35, 100, 251, 285, 56,
	180, 242, 243, 373, 438, 127, 321, -474, 321, -474,
	-178, 371, 420, -473, -474, 341, 321, -177, -243, 127,
	475, -470, -444, 442, 127, -470, 127, -376, -375, -414,
	-97, -268, 476, 476, -408, 464, 127, 127, 127, 127,
	2, 2, 257, 2, 2, 2, 159, -476, -484, 2,
	2, 2, -216, 172, -255, 271, -466, -269, 387, -216,
	257, -218, 172, 2, -221, 436, -470, 257, -470, 257,
	35, 471, 2, -202, 172, 2, -190, -189, 185, -444,
	257, -371, -230, -216, -366, -230, 359, -209, 35, -333,
	-333, 127, 2, 2, 2, -189, -179, 476, 58, 327,
	127, -179, 127, -179, 127, -179, 476, 127, -179, 127,
	476, 127, 127, 472, 476, -379, -379, -413, -152, 442,
	157, 88, 471, 471, -154, -376, 476, -98, -413, -466,
	-200, 2, -216, 2, 387, 210, -152, -413, -413, -413,
	-407, 26, 361, 2, 306, 357, 79, 361, 2, -216,
	387, 102, 185, 72, -468, 154, -465, 332, -464, -216,
	102, -216, 102, -216, 102, -216, -216, 2, 2, 2,
	2, 76, 76, 154, 2, 404, 2, 404, 2, -189,
	-189, -189, 227, -216, 154, 387, 185, 387, 185, 102,
	387, -179, 476, -193, -165, -285, -407, -286, -285, -166,
	-165, -168, 154, 310, 421, 251, 362, 214, -313, -312,
	26, -336, -317, 148, 250, -336, -315, -338, 462, 463,
	-399, -401, -271, 265, -159, -159, -159, -258, -362, -336,
	301, 185, -395, -380, -380, -214, -408, 397, -336, -336,
	-336, -336, -336, -336, -336, -336, -336, -336, -336, -336,
	-336, -336, -336, -336, -336, -336, -336, -336, -336, -336,
	-336, -336, -336, -336, -336, -336, -336, -336, -336, -336,
	-336, -336, -336, 228, 176, 364, 43, 179, -336, 401,
	-336, -336, -336, -336, 246, 257, 261, 409, 139, 418,
	115, 265, -500, 383, 37, -342, -160, -276, 471, -356,
	32, 370, 26, -349, 471, 2, -331, -336, -332, -273,
	-272, -272, 472, 435, 26, 115, 464, 2, 472, 476,
	35, 472, -336, -273, -348, -344, -272, -355, -354, 439,
	-305, -306, 447, 245, 105, 171, 244, -307, 346, -402,
	8, -408, 464, -450, 147, 164, 8, -402, -402, 397,
	397, -402, -402, -402, 471, 472, 2, 472, 2, 472,
	-336, 2, 472, -336, 2, 472, -336, 2, 472, -336,
	2, 472, 2, -336, -336, -336, -336, -336, -336, -336,
	-272, -299, 2, -396, -272, 4, 447, 245, 105, 171,
	244, 346, 5, -299, 2, -300, 2, -336, -272, -301,
	-337, -338, 462, 463, 455, -349, -302, 2, -336, -273,
	-336, 51, 222, 403, -303, -336, 157, -272, -272, 2,
	-272, 2, -448, 35, -272, -264, 476, 157, 35, 4,
	-264, -264, 471, 472, 476, -298, 168, 241, 236, -298,
	-365, -297, 209, -295, 281, -295, -295, -360, -201, 469,
	477, -408, -360, -359, -358, 35, -209, 278, -360, -360,
	473, 472, -359, 470, -462, 471, 474, 474, 474, 474,
	474, -216, 471, -272, -408, 376, 472, 473, 203, 203,
	203, 203, 337, 472, 401, 442, -82, 273, 472, 476,
	-263, 34, 469, -397, 437, 471, 471, -306, 471, 157,
	-262, -478, 472, 405, -324, -235, 310, 369, 322, 354,
	385, 8, 9, 8, 9, 476, -408, 476, -479, 82,
	401, 70, -327, 172, 70, -422, -203, 82, -423, -189,
	65, 417, 301, 156, -479, 82, 301, -479, 82, 82,
	359, 374, 53, -370, 38, 38, 26, -100, 223, 157,
	448, 387, 185, 401, -370, -292, -380, 100, 242, 243,
	53, -403, -398, 462, 463, -403, 53, -403, -403, -403,
	442, -218, -370, 401, 401, 476, 38, 38, 26, -100,
	223, 157, 401, -232, -201, -471, -194, 89, 252, 235,
	253, -195, -196, 291, 429, -413, -413, -149, 181, 472,
	-376, -225, -189, 473, -336, -100, -336, -100, 127, 2,
	-492, 217, 471, -239, 257, 157, -261, -377, 201, 476,
	-269, 127, -291, -290, 257, -220, 172, 2, -216, 127,
	127, 471, 123, 308, 2, 271, 257, -202, 172, -182,
	390, 127, -289, 427, -318, -100, 471, 108, 35, -318,
	-280, -281, -374, -282, -203, 471, -209, -189, 2, -216,
	-270, -270, -270, -232, -233, -200, -413, -414, -414, -82,
	-378, 472, 472, 472, -151, 275, -150, -189, 5, -154,
	427, -238, -328, -327, -426, -427, -422, 228, 185, 417,
	202, 140, -254, -204, -203, 101, -152, -97, -376, -152,
	-152, -376, -376, -216, 154, -152, -152, -152, 2, 2,
	-294, -216, -200, -232, -216, -261, -261, -294, -200, -294,
	-200, -294, -200, -100, -336, 356, 154, 154, 473, -294,
	308, 102, 387, 289, 185, -216, -232, -216, -232, -200,
	-216, -370, -286, -166, 272, 214, 362, -315, -316, -338,
	336, 337, -316, 336, 337, 8, 9, 8, 9, -170,
	366, 260, -270, 476, -173, 36, 113, 214, -216, 448,
	124, -336, -336, 401, -500, 383, -342, 124, -336, 246,
	261, 409, 139, 418, 115, 265, 157, 471, -337, -337,
	472, -274, -336, -336, 470, 479, 472, -257, 476, -256,
	-336, -272, -272, 472, 473, -272, -261, 470, 470, 476,
	472, -353, -354, 120, -336, 401, 401, 401, 401, 471,
	472, 473, -455, 282, 471, 471, 472, 472, 476, 472,
	448, 448, 472, 472, 472, -336, 472, 472, 472, 472,
	35, 476, 476, 476, 472, 476, 476, 476, 472, 472,
	157, 472, 472, -308, 294, 472, 11, 12, 462, 463,
	464, 465, 152, 466, 467, 460, 461, 459, 452, 453,
	454, 77, 238, 338, 14, 15, 16, 203, 179, -337,
	-337, -337, 472, -340, -341, 157, 154, 35, -303, -303,
	-303, 472, 157, -272, 472, 472, 471, 472, -330, -329,
	440, -373, -265, 2, -365, -211, -408, -330, -330, -272,
	-336, 209, 209, -296, 427, 271, -298, -365, -359, -404,
	-335, -334, 155, 36, 113, 254, 175, -359, -209, -253,
	-359, -359, -408, -360, -360, -358, 472, -463, -404, 472,
	-266, -368, -443, -257, 473, -152, -408, -143, 5, 261,
	-143, -143, -143, -261, 24, 295, -380, 469, 470, 8,
	471, -402, -402, -402, -261, 157, -405, -323, 415, 74,
	310, 397, -405, -175, 321, -203, -203, -216, 257, -327,
	172, -181, 257, -380, -210, -189, 471, 471, 214, 214,
	-203, -210, 214, 172, -203, 172, -210, -210, -472, 310,
	266, -336, 230, 308, 258, -176, 321, -100, -100, -100,
	471, -478, 427, 114, -216, -232, -216, -220, 321, 255,
	-227, -403, -403, -290, 321, -218, -200, -177, -100, -100,
	-100, 471, -201, -178, 321, -194, -413, 261, 423, -470,
	-470, -152, 157, -149, 464, -189, 436, -189, -237, -240,
	-238, -203, -157, 444, 442, 127, -231, -216, 469, -152,
	-413, -216, -224, 127, -253, 257, -413, -413, 2, 471,
	2, -216, 127, 271, 257, -183, 121, -497, 454, -200,
	-330, -265, -288, -321, 329, 271, -254, 432, -209, -288,
	-267, 476, 157, 454, 473, -254, 2, -179, -179, -179,
	-179, -179, -82, -82, -152, 476, 471, 454, 454, 471,
	-413, -413, 472, 476, -216, -202, 185, 185, -208, -190,
	472, 476, 473, 471, -152, 157, -46, 442, 387, 475,
	-294, -294, -294, 356, 356, -189, -212, -200, -216, -213,
	-232, 154, 154, 421, -316, 272, 234, -362, -174, 263,
	-216, 475, -336, -336, 124, 124, -336, -337, -337, -336,
	124, 157, 471, -336, -346, 30, 30, 472, 476, -332,
	-336, 472, 435, -257, -257, 472, 464, -408, 475, 472,
	-344, 122, -336, 395, 245, 171, 244, -307, 244, -307,
	-307, -402, 5, -408, 464, -456, -206, 471, -189, 440,
	-256, -402, -383, -383, 472, -395, -380, -336, -336, -336,
	-336, -336, -336, -340, -336, -395, -380, -337, -337, -337,
	-337, -337, -337, -337, -337, -337, -337, -337, -337, -337,
	-337, -337, -337, -337, -337, -337, 115, 257, 265, -337,
	-341, -340, -336, -336, -380, 472, 472, 472, -272, -82,
	-284, 164, -336, -376, 476, -284, -284, 472, -365, -365,
	471, -336, 209, 470, 476, 478, 454, -253, 473, -358,
	-359, 470, 472, 476, 472, 476, -320, 35, 472, -408,
	274, 5, 8, 469, 470, -402, 472, 472, 472, -261,
	-336, 401, 401, 127, 257, 429, -428, -423, -336, -259,
	-363, -336, 471, 471, -172, 119, 359, -480, 2, 427,
	127, -179, 127, -179, 446, 471, 471, 401, 442, -272,
	-336, -153, 108, -407, -474, 475, -474, 475, 401, 401,
	442, -272, 401, -413, 261, -414, -152, 2, 2, 2,
	472, 472, 476, -429, 35, 269, 471, 269, -216, -65,
	442, -375, -404, -218, 35, 127, -470, -470, 2, -311,
	427, -201, -216, 127, -184, 221, -497, -411, -444, -257,
	-288, -279, 258, 81, 472, -330, -281, -265, -336, 2,
	472, -150, -151, -413, -413, -413, -152, -154, -154, -328,
	2, 471, -202, -190, 471, -154, -204, 2, -414, -100,
	275, -216, 464, -294, -245, -244, 289, 265, -245, 336,
	336, 272, 148, 218, -173, -201, -336, -336, 124, 30,
	30, -336, -336, -346, 472, -336, -336, -272, 470, 5,
	-336, 472, 472, 8, -336, 472, 473, -457, -189, -336,
	472, 472, 472, 472, 476, 476, 472, 472, 472, 472,
	-341, 157, 115, 265, 471, 472, 472, -343, 167, 53,
	-365, -343, -343, -296, -261, -365, -334, -201, 469, -408,
	-404, -368, 471, 473, 470, 2, 469, 472, -203, -203,
	-327, 127, -430, 82, -432, 68, 140, 88, 257, 261,
	417, 301, 65, 108, 314, 35, 472, 472, 476, -173,
	-259, -261, 257, 380, 108, 257, 108, 101, 412, 71,
	-203, -210, -261, -261, -216, 133, 472, 476, 454, 2,
	464, 464, -220, -218, 133, 472, -201, -241, 188, -203,
	-427, -424, -425, 301, -431, -433, 140, 301, -100, -156,
	-155, -189, 5, 2, 471, -239, 275, 470, -291, -100,
	-220, 471, -189, 271, 471, -201, -185, 220, -497, -411,
	-182, -314, -312, -319, 471, 271, -100, -257, 454, 472,
	472, 101, 101, -259, 471, 471, -261, 101, 472, -47,
	-48, 185, 82, 293, -213, 387, 185, 471, 471, -173,
	-336, -336, -336, 472, -257, -408, 464, -451, 289, 472,
	-336, -336, -337, 157, 471, -346, -452, 441, -336, -272,
	-452, -452, 472, -404, 2, 469, 2, -327, -210, -214,
	-207, -189, 140, 172, 261, 214, 471, -337, -216, 471,
	2, -489, 110, 189, -326, -490, 87, 381, -363, -174,
	472, 472, 261, 261, -336, -380, 471, -179, -179, 472,
	472, -336, 401, -407, 86, -405, 2, -474, -336, 401,
	-242, -243, 179, -429, 214, -207, 214, -488, 442, 472,
	476, 454, 454, -237, -157, -66, -67, 402, -375, -253,
	-259, -216, -259, 271, -497, -411, -183, -288, 116, -261,
	82, -314, -342, -152, 471, 471, 472, -259, -259, 472,
	471, -152, 476, 26, 471, 26, 471, -216, -232, -272,
	-272, 472, -257, 53, 472, 472, -337, -346, 472, -453,
	-454, -206, 470, 2, -432, -207, 257, 427, -336, -191,
	471, -336, 189, 111, 177, -241, 471, -325, 427, 314,
	-199, 68, -259, 471, 471, 471, 454, 157, 471, -157,
	287, 471, 101, 251, -155, -339, -339, 472, 35, -67,
	9, 35, 472, -311, 472, -216, -411, -184, 421, 258,
	472, -210, -288, -414, -414, -325, 472, 472, -414, -48,
	-261, -261, 472, 472, -458, 308, 337, 166, -272, 472,
	476, 35, 127, 168, 472, -434, 239, -189, 472, 111,
	177, -242, -261, -241, 168, -216, -475, 427, -214, 472,
	-247, -246, -244, -249, -248, -244, -272, -405, 86, 287,
	-272, -216, -260, -364, -203, 101, -241, -100, -100, -325,
	471, -326, 471, -185, 359, -329, 472, 472, -326, -325,
	472, 472, 472, 472, -459, -460, 43, 414, 92, -336,
	-459, -459, -454, -456, 140, 442, -435, -438, -437, 271,
	365, 158, 288, 472, 380, 438, -489, 472, 442, -253,
	-336, -325, 472, 476, 432, 472, 476, 432, 472, 157,
	472, 471, 472, 476, -242, -488, -326, -259, -241, -259,
	-280, -152, -152, -241, -326, -152, -461, 126, -460, 298,
	153, 336, 298, 153, -461, -461, -207, 47, -437, 271,
	-438, 271, 421, 112, 47, -434, -241, -246, 179, -248,
	157, 287, -261, -364, -157, -241, 472, -242, 472, -330,
	-242, -241, 92, 164, 396, 251, 30, 454, -436, 251,
	327, 58, 359, -436, 454, -435, 471, 471, 472, -242,
	-325, -493, 440, -326, -242, 336, 279, -460, -336, 22,
	261, 108, -336, -489, -272, -272, -180, 58, 327, -493,
	-326, 2, -241, 472, 472, -241, -242, -242, 401, -242,
	-493, 471, -493, -272, 472, -242,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 5, 6, 8, 10,
	12, 14, 16, 18, 20, 22, 23, 373, 374, 376,
	377, 378, 380, 381, 383, 385, 387, 389, 390, 392,
	394, 396, 397, 398, 399, 400, 402, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 462, 464,
	0, 968, 970, 972, 974, 25, 26, 28, 0, 0,
	192, 194, 196, 0, 221, 223, 225, 226, 228, -2,
	0, 324, 325, 327, 329, -2, -2, 0, 0, 451,
	453, 0, 0, 0, 473, 474, 0, 1056, -2, 467,
	469, 471, 536, 538, 540, 542, 544, 546, 548, 549,
	551, 553, 555, 557, 559, 561, 563, 564, 566, 568,
	570, 572, 574, 576, 578, 580, 582, 584, 586, 588,
	-2, -2, -2, 0, -2, -2, -2, 986, 31, 33,
	35, 37, 39, 41, 43, 276, 277, 279, 281, 283,
	285, 288, 289, 291, 1111, 331, 333, 335, 337, 339,
	0, -2, 1123, 0, 0, 45, 46, 47, 48, 49,
	50, 51, 52, 68, 69, 70, 71, 72, 73, 74,
	75, 56, 58, 59, 63, 64, 66, 54, 0, 0,
	1087, 1089, 1091, 1093, -2, 0, 0, 7, 9, 11,
	13, 15, 17, 19, 21, 375, 379, 382, 384, 386,
	388, 391, 393, 395, 401, 403, 405, 848, 1747, 1761,
	1762, 1763, 1766, 1767, 1768, 1769, 1770, 1771, 2121, 2201,
	2202, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818,
	1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838,
	1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848,
	1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858,
	1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
	1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888,
	1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,
	1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908,
	1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918,
	1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928,
	1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938,
	1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948,
	1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958,
	1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968,
	1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978,
	1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988,
	1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
	1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
	2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
	2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028,
	2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038,
	2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048,
	2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058,
	2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068,
	2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078,
	2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088,
	2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098,
	2099, 2100, 2101, 2102, 0, 429, 427, 1740, 430, 1951,
	432, 434, 318, 319, 320, 321, 322, 323, 0, 444,
	438, 443, 445, 447, 448, 449, 450, 424, 422, 0,
	444, 1793, 442, 966, 967, 961, 962, 1985, 993, 463,
	-2, -2, -2, 2089, -2, 495, -2, 502, 2092, 1987,
	507, 0, 509, -2, 512, 969, 971, 973, 27, 29,
	30, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	903, 904, 0, 0, 156, -2, -2, -2, -2, 0,
	0, 1833, 1708, 1763, 1711, 1706, 193, 195, 197, 198,
	0, 0, 0, 0, 0, 0, 222, 224, 227, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	759, 751, 752, 938, 0, 0, 0, 0, 326, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 254, 364, 365, 0,
	1112, 1112, 1112, 0, 0, 0, 0, 173, 164, 0,
	0, 732, 452, 454, 0, 0, 159, 0, 0, 965,
	0, 175, 0, 0, 468, 470, 472, 537, 539, 541,
	543, 545, 547, 550, 552, 554, 556, 558, 560, 562,
	565, 567, 569, 571, 573, 575, 577, 579, 581, 583,
	585, 587, 589, 590, 0, 0, 0, 0, -2, -2,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 0, -2, -2, -2, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 593, 595,
	596, 597, 0, 648, 665, 0, 888, 1113, 995, 976,
	990, 995, 978, 979, 980, 981, 982, 987, 989, 983,
	984, 985, 32, 34, 36, 38, 40, 42, 44, 278,
	280, 282, 284, 286, 290, 292, -2, 1085, 1086, 332,
	334, 336, 338, 340, 455, 0, 457, 0, 594, -2,
	0, 1117, 1117, 1117, 0, 0, 1086, 1084, 0, 460,
	461, 516, 517, 1355, 0, 0, 0, 0, 0, 1605,
	1439, 0, 518, -2, 1470, 1472, 2068, 2089, 1604, 1474,
	1475, 1476, 1477, 1478, 0, 0, 1481, 1482, 1483, 1484,
	1485, 0, 1487, 0, 1492, 1493, 1494, 0, 2073, 1685,
	1759, -2, 1258, 1259, 1260, 1261, 1262, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 2079, 1755, 0, 1571, 1508, -2,
	1780, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1842, -2, -2, -2, -2, -2, -2,
	-2, 1314, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 2103, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 0, 2057, 2074, 2075, 2080, 2082, 2076,
	2065, 1533, -2, 2104, 2105, 2106, 2107, 2108, 2109, 2110,
	2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 1315,
	-2, 2069, 2070, 2085, 2086, 2091, 2096, 2097, 2072, 2081,
	-2, -2, 1103, 1960, 1106, 848, 1104, 1088, 1090, 0,
	1092, 0, 0, 0, 1097, 1120, 1118, 0, 1159, 1101,
	1102, 1177, 1177, 1201, 0, 1182, 0, 1201, 1112, 1227,
	0, 1188, 1980, 1509, 1510, 0, 1763, 1760, -2, 0,
	0, 0, 0, 0, 0, 0, 425, 0, 431, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 992, 465,
	466, 0, 490, 0, 494, 2064, -2, 1798, 2000, -2,
	498, 996, 1000, 1001, 1002, 1003, 0, 0, 0, 0,
	0, 504, 0, 0, 491, 492, 510, 513, 0, 53,
	0, 2074, 1227, 55, 0, 1730, 1785, 1786, 1787, 1788,
	1789, 2103, 2120, 2122, 2123, 2124, 2125, 2126, 2127, 2128,
	2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138,
	2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148,
	2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158,
	2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168,
	2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178,
	2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188,
	2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198,
	2199, 2200, 57, 0, 2074, 60, 0, 2074, 0, -2,
	65, 0, 1736, 67, 0, 1733, 76, 0, 2074, 0,
	1705, -2, -2, 2074, 899, 176, 177, 1776, 1777, 1781,
	1782, 1783, 1784, -2, 2074, 902, 1214, 160, 0, 0,
	0, 724, 1702, 1707, 725, 1712, 0, 199, 200, 201,
	202, 203, 2074, 205, 206, 0, 208, 209, 2074, 211,
	212, 0, 214, 230, 231, 0, 233, 0, 2074, 0,
	0, 0, 239, -2, 255, 0, 252, 0, 243, 244,
	246, 247, 248, 249, 0, 296, 294, 1741, 0, 733,
	2074, 735, 1746, 0, 0, 922, -2, 2074, 893, -2,
	2074, 896, 927, 1744, 0, -2, 0, 1110, 2074, 1010,
	755, 756, 757, 758, 0, 315, 0, 1023, 0, 1025,
	0, 1046, 1233, 1177, 1177, 0, 256, 257, 258, 259,
	260, 2074, 0, 0, 0, 265, 0, 267, 268, 269,
	270, 271, 272, 273, 274, 275, 151, 2074, 343, 362,
	151, 2074, 346, 151, 2074, 349, 151, 2074, 352, 1700,
	151, 2074, 355, 356, 2074, 358, 178, 359, 2074, 361,
	0, -2, 418, 1749, -2, 367, 0, 368, 0, 371,
	-2, 0, 190, 0, 0, 730, 731, 1214, 162, 0,
	963, 964, 0, 0, 475, 0, 0, 591, 592, 0,
	0, 602, 603, 604, 190, 1988, 1958, 1858, 609, 0,
	612, 615, -2, 0, 0, 0, 0, 619, 0, 624,
	625, 626, 0, 729, 628, 0, 0, 630, 0, 634,
	0, 637, 0, 639, 0, 641, -2, -2, -2, 652,
	-2, 0, 656, 0, 658, 0, 0, 0, 0, 673,
	674, 0, 679, 0, 682, 683, 684, 685, 686, 0,
	688, 689, 690, 691, 0, 693, 694, -2, -2, 698,
	700, 0, 707, 0, 711, 0, 715, 0, 598, 599,
	151, 1231, 975, -2, 977, 0, -2, 0, 456, 0,
	459, 1138, 1071, 1068, 0, 1135, 1136, 1072, 0, 0,
	0, 1079, 0, 1115, 1116, 0, 0, 0, 1058, 1059,
	0, 0, 0, 0, 1610, 1611, 1612, 1613, 1614, 1615,
	1618, 1619, 1616, 1617, 1620, 1621, 0, 0, 0, 0,
	0, 1622, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1623, 1624, 1625, 0, 0, 1627, 0,
	1629, 0, 0, 0, 0, 0, 0, 1418, 1420, 1693,
	0, 0, 1626, 1360, 1361, 1362, 1397, 1398, 0, 0,
	1471, 1690, 1689, 1473, 0, 1641, 0, 1480, 1486, 1726,
	-2, 0, 1605, 1636, 0, 0, 1495, 1496, 1497, 0,
	0, 1641, 0, 0, 1684, 1352, 0, 0, 1573, 0,
	1294, 0, 1295, 1296, 0, 1297, 1298, 1311, 1324, 0,
	0, 0, 0, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1316, 0, 0, 0, 1665, -2, 0, 0,
	0, 0, 0, 1105, 0, 0, 1163, 1694, 1698, 1699,
	1163, 1163, 0, 0, 1642, 1224, 1224, 0, 0, 1220,
	1220, 1220, 1218, 1201, 0, 1201, 1211, 0, 1201, 1201,
	0, -2, 1182, 0, 0, 1211, 0, 1195, 406, 408,
	410, 412, 413, 414, 416, 1228, 1229, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 1751, 0, 0,
	0, 0, 436, 446, 1112, 0, 1644, 1250, 1253, 1254,
	1255, 1256, 1257, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	-2, 1312, 1314, 1335, 1301, 1302, 1303, 1304, 1305, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1307, 0, 1282, 1282, 1282, 1299, 1300, 1323, 1334, 1326,
	1334, 1330, 1251, 1252, 1317, 1318, 1319, 1320, 0, 440,
	0, 0, 0, 0, -2, 500, 505, 506, 0, 0,
	998, 0, 1004, 527, 528, 529, 1006, 1007, 0, 503,
	530, 531, 532, 533, 534, 535, 0, 1714, 1715, 1716,
	1717, 1720, 1721, 0, 0, 501, 520, 508, 0, 514,
	77, 958, 116, 0, 958, 958, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 101, 112, 89, 90, 0,
	0, 0, 0, 61, 870, 0, 873, 0, 0, 0,
	0, 0, 0, 0, 886, 0, 0, 100, 0, 95,
	79, 0, 0, 0, 102, 114, 0, 142, 144, 0,
	0, 897, 0, 1109, 0, 900, 0, 181, 1213, 0,
	1214, 723, 0, 0, 1764, 1710, 0, 0, 0, 0,
	232, 234, 0, 236, 237, 238, 0, 921, 0, 245,
	242, 287, 820, 2074, 0, 0, 313, 308, 0, 310,
	0, 869, 2074, 867, 1745, 0, 891, 0, 894, 0,
	0, 0, 928, 0, 2074, 933, 1732, 1772, 1773, 1012,
	0, 317, 0, 1026, 1028, 0, 0, 1234, 0, 1236,
	1237, 0, 262, 263, 264, 0, 341, 0, 149, 150,
	0, 344, 0, 347, 0, 350, 0, 0, 353, 0,
	0, 0, 0, 1112, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 190, 0, 1214, 190, 190,
	1214, 477, 1214, 479, 0, 0, 605, 190, 190, 190,
	610, 611, 613, 614, -2, -2, 708, 616, 617, 676,
	0, 0, 0, 675, 627, 0, 717, 1976, 727, 676,
	1833, 676, 1833, 676, 1833, 638, 640, 643, 668, 651,
	655, 0, 0, 0, 660, 0, 662, 0, 664, 676,
	677, 680, 687, 692, 0, 0, 0, 0, 0, 0,
	0, 887, 0, 988, 1138, 1071, 458, 1062, 1137, 1063,
	1070, 1073, 0, 0, 1075, 0, 1077, 0, 1133, 1134,
	1141, 1142, 0, 1152, 1153, 1145, 0, -2, 0, 0,
	1148, 1149, 1081, 0, 1098, 1099, 1100, 1124, 1125, 947,
	0, 2201, 1356, 1245, 1357, 1358, 1729, 0, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, -2, -2,
	-2, -2, -2, -2, -2, -2, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, -2, -2, -2,
	1395, 1396, -2, 1628, 1630, 0, 1693, 0, -2, 0,
	-2, -2, -2, -2, 1415, 0, 1417, 1422, 1424, 1426,
	0, 0, 0, 0, 1692, 1436, 1676, 1677, 0, 0,
	1607, 1608, 1609, 1421, 0, 1440, 1691, 1688, 0, 0,
	1640, 1123, 1499, 0, 0, 0, 0, 1506, 1491, 1638,
	0, 1637, 0, 0, 0, 1648, 0, 1683, 1679, 0,
	1727, 1351, 1338, 1339, 1340, 1341, 1342, 1343, 1353, 0,
	1724, 1752, 1758, 1581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1534, 1535, 1536, 1537, 1538,
	0, 1540, 1541, 0, 1543, 1544, 0, 1546, 1547, 0,
	1549, 1550, 1551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1553, 0, 1651, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 1555, 0, 1557, 1642, 1662, 0,
	0, 1441, 0, 0, 0, 1605, 0, 1560, 1642, 1670,
	0, 0, 0, 0, 0, 1642, 0, 1675, 0, 1567,
	0, 1569, 1107, 0, 0, 1240, 0, 0, 0, 1697,
	1240, 1240, 0, 1158, 0, 0, 1221, 1222, 1223, 0,
	0, 1224, 0, 1215, 1219, 1216, 1217, 1211, 1174, 0,
	0, 1731, 1211, 1180, 1210, 0, 848, 1200, 1211, 1211,
	0, -2, 1184, 1201, 0, 0, 407, 409, 411, 415,
	417, 0, 0, 1123, -2, 190, 847, 0, 0, 0,
	0, 0, 426, 428, 0, 0, 420, 0, 423, 0,
	1241, 1244, 0, 0, -2, 0, 0, 1336, 0, 0,
	0, 0, 493, 0, 997, 1005, 0, 524, 0, 526,
	0, 1718, 1722, 1719, 1723, 0, 515, 0, 0, 0,
	0, 957, 120, 2074, 0, 153, 0, 0, 814, 1737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 86, 91, 0, 0,
	0, 0, 0, 0, 0, 871, 872, 874, 881, 883,
	0, 877, 1725, 0, 0, 878, 0, 880, 882, 884,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 92,
	0, 0, 0, 0, 1704, 917, 915, 909, 910, 911,
	912, 913, 914, 0, 0, -2, -2, 190, 0, 161,
	181, 1703, 1713, 0, 204, 207, 210, 213, 0, 240,
	0, 0, 761, 738, 0, 0, 295, 190, 0, 0,
	309, 0, 865, 868, 0, 848, 2074, 908, 1743, 0,
	0, 0, 0, 0, 926, 0, 0, 0, 2074, 1014,
	1020, 0, 1240, 0, 1044, 1029, 0, 0, 0, 1044,
	1048, 1049, 1051, 1052, 0, 0, 1235, 0, 266, 363,
	151, 151, 151, 1701, 151, 151, 179, 357, 360, 366,
	419, 1112, 1112, 190, 188, 1936, 186, 183, 185, 0,
	0, 0, 762, 764, 765, 766, 767, 0, 1773, 0,
	1887, 1773, 0, 1032, 1034, 0, 157, 163, 190, 0,
	307, 476, 481, 600, 0, 606, 607, 608, 645, 670,
	618, 620, 621, 622, 0, 728, 726, 629, 676, 632,
	676, 635, 676, 654, 657, 659, 0, 0, 0, 672,
	0, 0, 0, 0, 0, 0, 0, 712, 713, 714,
	716, 1232, 1066, 1067, 1069, 0, 1078, 0, 0, 1147,
	-2, -2, 1146, 1150, 1151, -2, -2, -2, -2, 1074,
	0, 1083, 1080, 0, 1132, 945, 946, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 1437, 0, -2, 1416,
	1419, 1423, 1425, 1427, 0, 0, 0, 0, 0, 0,
	1631, 0, 1633, 1438, 1686, 1689, 1603, 0, 0, 1122,
	1123, 1123, 0, 1505, 0, 1639, 0, 1646, 1647, 0,
	1498, 0, 1680, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 0, 0, 0, 1306, 1280, 0, 1334,
	1332, 1333, 1327, 1334, 1331, 0, 1539, 1542, 1545, 1548,
	0, 0, 0, 0, 1528, 0, 0, 0, 1532, 1552,
	0, 1554, 1556, 0, 0, 1558, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1444,
	1445, 1446, 1559, 1668, 1669, 0, 0, 0, 0, 0,
	0, 1565, 0, 1674, 1566, 1568, 1112, 1160, 1155, 1239,
	0, 1695, 1214, 1162, 1164, 1696, 1734, 1155, 1155, 0,
	1643, 0, 0, 1205, 0, 0, 0, 1207, 1178, 0,
	0, 1172, 0, 1168, 1169, 1170, 1171, 1179, 848, 1209,
	1181, 1185, 1752, 0, 1211, 0, 1196, 0, 1198, 1230,
	0, 1190, 1193, 0, 0, 191, 1765, 215, 219, 220,
	216, 217, 218, 435, 0, 0, 1645, 0, 1246, 0,
	0, 0, 0, 0, 439, 0, 489, -2, 522, 523,
	525, 0, 521, 117, 958, 0, 0, 949, 0, 122,
	2074, 131, 0, 790, 0, 1735, 0, 0, 0, 0,
	960, 0, 0, 2074, 151, 2074, 151, 134, 137, 0,
	141, 139, 0, 0, 781, 78, 958, 81, 85, 93,
	0, 0, 0, 99, 0, 0, 0, 951, 0, 875,
	876, 879, 885, 62, 0, 953, 948, 143, 83, 87,
	94, 0, 955, 80, 0, 916, 889, 890, 0, 898,
	901, 154, 0, 190, 1709, 0, 0, 0, 0, 0,
	760, 831, 0, 0, 0, 0, 301, 297, 0, 306,
	312, 311, 734, 0, 0, 0, -2, -2, 923, 0,
	925, 937, 0, 0, 0, 1016, 1020, 0, 1019, 1110,
	1123, 316, 1021, 1044, 0, 0, 0, 1031, 1027, 1024,
	1240, 0, 0, 0, 0, 0, 261, 342, 345, 348,
	351, 354, 369, 370, 165, 0, 0, 0, 0, 0,
	190, 0, 0, 0, 0, 0, 1773, 1773, 0, 1739,
	0, 0, 0, 0, 158, 0, 478, 0, 0, 0,
	631, 633, 636, 661, 663, 676, 701, 702, 776, 0,
	776, 0, 0, 1076, 0, 1144, 1082, 1126, 1127, 0,
	947, 0, 1359, 1400, 0, 0, -2, 0, 0, 1404,
	0, 0, 0, -2, 0, 0, 0, 1632, 1634, 0,
	1688, 1500, 0, 0, 0, 1504, 1488, 1489, 0, 1606,
	1649, 1678, 1682, 0, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 0, 1728, 1753, 1757, 1579, 1580, 1584, 1742, 0,
	0, 0, 1325, 1329, 1511, 0, 0, 0, 0, 0,
	0, 0, 1650, 1661, 1663, 1442, 1443, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, -2, -2, -2,
	1460, 1461, 1462, -2, -2, -2, 0, 0, 0, 1664,
	1666, 1667, 1671, 1672, 0, 1562, 1563, 1564, 1673, 0,
	1157, 0, 1238, 1161, 0, 1157, 1157, 1119, 1203, 0,
	0, 1226, 0, 1175, 0, 1176, 0, 1208, 0, 1183,
	1186, 1187, 1197, 0, 1189, 0, 1192, 0, 1500, -2,
	437, 421, 0, 0, 1248, 0, 1309, 1313, 1337, 441,
	1212, 0, 0, 0, 0, 152, 788, 813, 0, 0,
	940, 947, 0, 0, 124, 0, 0, 0, 132, 0,
	0, 129, 0, 136, 140, 0, 0, 0, 0, 0,
	96, 97, 98, 0, 103, 0, 104, 0, 0, 0,
	0, 0, 0, 919, 920, 180, 155, 235, 907, 241,
	770, 819, 0, 821, 0, 739, 0, 0, 820, 293,
	0, 300, 0, 869, 0, 0, 892, 895, 924, 0,
	0, 0, 0, 0, 1018, 1020, 0, 1011, 1012, 1140,
	1022, 1042, -2, 1041, 0, 1123, 1050, 1047, 1053, 1054,
	0, 187, 0, 182, 184, 0, 168, 0, 0, 763,
	768, 0, 0, 0, 0, 0, 1033, 1035, 0, 174,
	0, 601, 623, 671, 703, 775, 0, 0, 705, 0,
	0, 1143, 1130, 1131, 1128, 947, 1402, 1406, 0, 0,
	0, 1408, -2, 0, 1430, -2, -2, 1635, 1687, 1479,
	1123, 1501, 1503, 1490, 1681, 1354, 0, 1586, 1583, 0,
	1570, 1281, 1523, 1524, 0, 0, 1527, 1529, 1530, 1531,
	1660, 0, 0, 0, 0, 1561, 1108, 1575, 0, 0,
	1165, 1575, 1575, 1204, 0, 1206, 1173, 1166, 0, 1753,
	1199, 1191, 0, 0, 1242, 1247, 0, 1308, 118, 119,
	121, 0, 789, 0, 792, 0, 0, 0, 0, 799,
	800, 0, 0, 0, 0, 0, 835, 844, 0, 1132,
	0, 0, 0, 126, 146, 0, 0, 959, 0, 0,
	151, 151, 0, 0, 950, 0, 0, 0, 0, 106,
	0, 0, 952, 954, 0, 0, 956, 778, 0, 831,
	823, 824, 825, 0, 830, 832, 0, 0, 748, 0,
	744, 0, 0, 741, 761, 738, 0, 298, 866, 905,
	848, 0, 936, 0, 0, 0, 1008, 1020, 0, 1013,
	1014, 1044, 1139, 0, 0, 0, 1030, 1140, 0, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 190, 480,
	482, 0, 0, 488, 774, 0, 0, 0, 0, 1129,
	1410, -2, -2, 1431, 0, 1754, 1756, 1123, 0, 1572,
	0, 0, -2, 0, 0, 0, 1094, 0, 1156, 1154,
	1095, 1096, 1225, 0, 1194, 0, 1249, 123, 0, 793,
	794, 1738, 796, 0, 798, 801, 0, 804, 1775, 0,
	808, 815, 836, 0, 770, 0, 841, 842, 941, 942,
	846, 0, 125, 127, 145, 944, 0, 128, 135, 0,
	0, 82, 0, 0, 1826, 109, 107, 105, 84, 0,
	738, 777, 0, 822, 0, 833, 834, 746, 0, 740,
	0, 0, 0, 0, 0, 299, 302, 0, 305, 0,
	0, 937, 0, 0, 0, 1015, 1016, 314, 0, 0,
	0, 1044, 1055, 167, 0, 0, 846, 0, 0, 812,
	0, 172, 0, 484, 0, 486, 0, 704, 706, 0,
	0, 1502, 1590, 0, 1525, 1526, -2, 0, 1468, 1574,
	1576, 0, 1167, 1243, 791, 795, 0, 0, 0, 852,
	0, 0, 0, 839, 840, 778, 0, 770, 0, 0,
	148, 0, 0, 0, 0, 0, 0, 0, 0, 736,
	0, 0, 749, 0, 745, 742, 743, 770, 0, 303,
	304, 0, 846, 0, 844, 0, 1017, 1018, 0, 1037,
	1038, 1040, 1045, 0, 0, 844, 846, 811, 0, 483,
	0, 0, 709, 710, 0, 0, 0, 0, 1585, 1469,
	0, 0, 0, 0, 803, 857, 0, 0, 0, 837,
	838, 835, 0, 817, 0, 848, 130, 0, 943, 846,
	0, 782, 0, 0, 785, 0, 0, 110, 1826, 108,
	0, 0, 0, 827, 829, 750, 778, 748, 906, 844,
	0, 770, 0, 1009, 0, 1039, 190, 190, 770, 844,
	190, 485, 487, 1582, 1602, 1591, -2, 2036, 1830, 0,
	1602, 1602, 1577, 1578, 0, 0, 805, 853, 854, 0,
	849, 850, 851, 1774, 806, 807, 816, 843, 0, 852,
	147, 770, 779, 0, 0, 780, 0, 0, 113, 0,
	115, 0, 826, 0, 738, 747, 770, 0, 778, 0,
	1240, 169, 170, 778, 770, 171, 1587, 0, 0, 1593,
	1594, 1595, 1596, 1597, 1588, 1589, 797, 0, 855, 0,
	856, 0, 0, 0, 0, 857, 133, 783, 0, 786,
	0, 111, 0, 828, 737, 778, 846, 934, 844, 1036,
	809, 778, 0, 1599, 1600, 0, 0, 0, 858, 0,
	861, 862, 0, 859, 0, 835, 0, 0, 773, 934,
	844, 931, 0, 770, 810, 1598, 1601, 1592, 802, 860,
	863, 864, 845, 818, 0, 0, 769, 771, 772, 929,
	770, 935, 778, 778, 0, 778, 934, 784, 0, 934,
	932, 0, 930, 0, 778, 787,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 460, 3, 466, 461, 3,
	471, 472, 464, 462, 476, 463, 473, 465, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 479, 3,
	452, 454, 453, 457, 475, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 469, 3, 470, 467, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 477, 459, 478, 455,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 456,
	57795, 458, 57796, 468, 57797, 474, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1118
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1123
		{
			return helpWith(sqllex, "")
		}
	case 7:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1127
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1128
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1129
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1130
		{
			return helpWith(sqllex, "GRANT")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1131
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1132
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1133
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1134
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1138
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1147
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1148
		{
			return helpWith(sqllex, "ALTER USER")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1149
		{
			return helpWith(sqllex, "ALTER")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1152
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1153
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1154
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1155
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1156
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1157
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1158
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1212
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1238
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1264
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1268
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 62:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1272
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1286
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1305
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1337
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1341
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 78:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1345
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1351
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1355
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1361
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1370
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1381
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1385
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1391
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1399
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1409
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1413
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1423
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1434
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1441
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1453
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1460
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1468
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1473
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1477
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1482
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1488
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1496
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1507
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 103:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1517
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 104:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1527
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 105:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1536
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1547
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 107:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1553
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1561
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1565
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1569
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 111:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1573
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1579
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1584
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1595
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1599
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1605
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1609
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1616
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1621
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1626
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1631
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1636
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1641
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1646
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1651
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1656
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1661
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1666
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1675
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1687
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.colType(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1697
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1704
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 133:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1708
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1716
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1723
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1732
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1746
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1753
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1761
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1762
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1770
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1776
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1784
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1788
		{
			sqlVAL.union.val = nil
		}
	case 147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1794
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1798
		{
			sqlVAL.union.val = nil
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1805
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1809
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1813
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1819
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1823
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1849
		{
			sqlVAL.union.val = &tree.Backup{DescriptorCoverage: tree.AllDescriptors, To: sqlDollar[3].union.partitionedBackup(), IncrementalFrom: sqlDollar[5].union.exprs(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1853
		{
			sqlVAL.union.val = &tree.Backup{Targets: sqlDollar[2].union.targetList(), To: sqlDollar[4].union.partitionedBackup(), IncrementalFrom: sqlDollar[6].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[7].union.kvOptions()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1856
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1879
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1883
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1886
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1947
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1952
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1956
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1962
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1967
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1972
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1977
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1982
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1986
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2002
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2005
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2009
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2013
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2021
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2035
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2041
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2049
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2053
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2069
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = nil
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2083
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2097
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2098
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2099
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2100
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2118
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2123
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2133
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2142
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2150
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2152
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2156
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2159
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2169
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2186
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2192
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2195
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2207
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2220
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2226
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2231
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2243
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2244
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2246
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2247
		{
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2248
		{
			return helpWith(sqllex, "CREATE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2251
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2252
		{
			return unimplemented(sqllex, "create cast")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2253
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2254
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2255
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2256
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2257
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2258
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2259
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2260
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2261
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2262
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2263
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2264
		{
			return unimplemented(sqllex, "create operator")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2265
		{
			return unimplemented(sqllex, "create publication")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2266
		{
			return unimplemented(sqllex, "create rule")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2267
		{
			return unimplemented(sqllex, "create server")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2268
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2269
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2270
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2273
		{
		}
	case 251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2274
		{
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2277
		{
		}
	case 253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2278
		{
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2281
		{
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2282
		{
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2285
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2286
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2287
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2288
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2289
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2290
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2291
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2292
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2293
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2294
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2295
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2296
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2297
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2298
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2299
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2300
		{
			return unimplemented(sqllex, "drop server")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2301
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2302
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2303
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "drop type")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2304
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2308
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2309
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2310
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2311
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2312
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2314
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2315
		{
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2316
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2317
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2335
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2343
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2353
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2362
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2385
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2396
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2408
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2416
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2424
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2444
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2455
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2459
		{

			sqlVAL.union.val = nil
		}
	case 314:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2473
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2483
		{
			return helpWith(sqllex, "DELETE")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2486
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2487
		{
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2498
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2499
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2500
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2501
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2502
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2511
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2512
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2513
		{
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2514
		{
			return helpWith(sqllex, "DROP")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2517
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2518
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2519
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2520
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2521
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2536
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2544
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2548
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2551
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2559
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2566
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2574
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[3].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2582
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[5].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2589
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2612
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2620
		{
			sqlVAL.union.val = &tree.DropUser{Names: sqlDollar[3].union.exprs(), IfExists: false}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = &tree.DropUser{Names: sqlDollar[5].union.exprs(), IfExists: true}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2627
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: true}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: true}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2642
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2646
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2651
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2674
		{
			sqlVAL.union.val = &tree.Explain{Statement: sqlDollar[2].union.stmt()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2677
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2679
		{
			sqlVAL.union.val = &tree.Explain{Options: sqlDollar[3].union.strs(), Statement: sqlDollar[5].union.stmt()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = &tree.Explain{Options: []string{"DISTSQL", "ANALYZE"}, Statement: sqlDollar[3].union.stmt()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = &tree.Explain{Options: []string{"DISTSQL", "ANALYZE"}, Statement: sqlDollar[3].union.stmt()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = &tree.Explain{Options: append(sqlDollar[4].union.strs(), "ANALYZE"), Statement: sqlDollar[6].union.stmt()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2695
		{
			sqlVAL.union.val = &tree.Explain{Options: append(sqlDollar[4].union.strs(), "ANALYZE"), Statement: sqlDollar[6].union.stmt()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2699
		{
			sqlVAL.union.val = &tree.ExplainBundle{Statement: sqlDollar[3].union.stmt()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2706
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2710
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2713
		{
			return helpWith(sqllex, "DELETE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2715
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2716
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2717
		{
			return helpWith(sqllex, "INSERT")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2718
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2720
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2721
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2722
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2730
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2731
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2732
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2737
		{
			return helpWith(sqllex, "DELETE")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2738
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2739
		{
			return helpWith(sqllex, "INSERT")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2741
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2745
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2746
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2750
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2754
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2772
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2780
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2784
		{
			sqlVAL.union.val = sqlDollar[2].union.colTypes()
		}
	case 424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2788
		{
			sqlVAL.union.val = []*types.T(nil)
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2798
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2805
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2813
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2817
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 429:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2831
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2835
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2843
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2846
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2866
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2870
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2874
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2877
		{
			return helpWith(sqllex, "GRANT")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2897
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2905
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2908
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2913
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2917
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2927
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2931
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2945
		{
			return helpWith(sqllex, "RESET")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2946
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2954
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2958
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2961
		{
			return helpWith(sqllex, "RESET")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2972
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2983
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2986
		{
			return helpWith(sqllex, "USE")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2990
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2991
		{
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2992
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2993
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2997
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2998
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2999
		{
			return helpWith(sqllex, "USE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3015
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3033
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3051
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3059
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3063
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3067
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3073
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3077
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3083
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3099
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3113
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3139
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3143
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 496:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3148
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3168
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3173
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3177
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3196
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3203
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3208
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3213
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3218
		{
			return unimplemented(sqllex, "set from current")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3219
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3227
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3232
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3243
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3249
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3260
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3281
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3291
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3303
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3307
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = tree.Low
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = tree.Normal
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = tree.High
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3332
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3340
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3362
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3363
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3365
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3366
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3367
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3370
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3372
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3374
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3375
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3377
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3379
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3385
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3386
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3387
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			return helpWith(sqllex, "SHOW")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3399
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.str = "client_encoding"
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.str = "timezone"
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3414
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3428
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3432
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3436
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3447
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3463
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3471
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3480
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3489
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3497
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3511
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3514
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3516
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3519
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3521
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3525
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3528
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3539
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3551
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3555
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3559
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3562
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3570
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3573
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3586
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3594
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3602
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3605
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3607
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3615
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3618
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3638
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3643
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3651
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3654
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3659
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = true
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3665
		{
			sqlVAL.union.val = true
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = false
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3677
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3681
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3684
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3685
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3687
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3691
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3694
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3704
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3712
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3724
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3726
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3729
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3731
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3735
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3738
		{
			sqlVAL.union.val = true
		}
	case 666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3739
		{
			sqlVAL.union.val = false
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3747
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3750
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3755
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3763
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3773
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3786
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3789
		{
			sqlVAL.union.val = true
		}
	case 676:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3790
		{
			sqlVAL.union.val = false
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3797
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3801
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3804
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3811
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3818
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3825
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3829
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3836
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3839
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3847
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3852
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3857
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3861
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3869
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3873
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3877
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3893
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3904
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3908
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3916
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3924
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3946
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3950
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3961
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3975
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3984
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3996
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4000
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4007
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4140
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4179
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4183
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4188
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4201
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4236
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4244
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4250
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4292
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4306
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4322
		{
			sqlVAL.union.val = nil
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4326
		{

			sqlVAL.union.val = nil
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4332
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4337
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4353
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4357
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 746:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4363
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4375
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
			}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4388
		{
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4389
		{
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4390
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4408
		{
			sqlVAL.union.val = true
		}
	case 752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4409
		{
			sqlVAL.union.val = true
		}
	case 753:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4410
		{
			sqlVAL.union.val = false
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = true
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4415
		{
			sqlVAL.union.val = true
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4416
		{
			sqlVAL.union.val = true
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = true
		}
	case 759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4418
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4433
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4439
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4448
		{
			return unimplementedWithIssue(sqllex, 30840)
		}
	case 769:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4452
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4468
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4473
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 773:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4478
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4484
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 776:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4491
		{
			sqlVAL.str = ""
		}
	case 778:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 779:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4504
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4518
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4528
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 784:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4544
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4548
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 787:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4568
		{
			typ := sqlDollar[2].union.colType()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, isSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 790:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4589
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4593
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4597
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4631
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4635
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4639
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4647
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4654
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4662
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4672
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4676
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4680
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 809:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4687
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4698
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
				},
			}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:     tree.Name(sqlDollar[3].str),
				Columns:  sqlDollar[5].union.idxElems(),
				Inverted: true,
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4733
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4750
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
				},
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4761
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4773
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4787
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 820:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4797
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4807
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4818
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4822
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4829
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4846
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4856
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4862
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4866
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4872
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4876
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4882
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4887
		{
		}
	case 836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4888
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4889
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4890
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 844:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4913
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 845:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4919
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4931
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4959
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4963
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4980
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4998
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5004
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5012
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5020
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5028
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5047
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5056
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5064
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5072
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5075
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.colType().SQLString())
		}
	case 873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5076
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5080
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5090
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5093
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5095
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5097
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5099
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5100
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5102
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5103
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5105
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5115
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5118
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5122
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5136
		{
			sqlVAL.union.val = &tree.CreateUser{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5140
		{
			sqlVAL.union.val = &tree.CreateUser{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5143
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5151
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: true}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5155
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: true}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5158
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = &tree.AlterUser{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = &tree.AlterUser{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5173
		{
			return helpWith(sqllex, "ALTER USER")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5181
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: true}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5185
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: true}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5188
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5193
		{
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5194
		{
		}
	case 905:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5202
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5213
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5223
		{
			return unimplementedWithIssue(sqllex, 24897)
		}
	case 908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5224
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5228
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5248
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5252
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 918:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = nil
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5277
		{
		}
	case 922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5278
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5284
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 924:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5286
		{
			return unimplementedWithIssue(sqllex, 24873)
		}
	case 925:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5288
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5290
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5292
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5294
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5310
		{
			table := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[4].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Columns:     sqlDollar[9].union.idxElems(),
				Sharded:     sqlDollar[11].union.shardedIndexDef(),
				Storing:     sqlDollar[12].union.nameList(),
				Interleave:  sqlDollar[13].union.interleave(),
				PartitionBy: sqlDollar[14].union.partitionBy(),
				Inverted:    sqlDollar[7].union.bool(),
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:5325
		{
			table := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[7].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Sharded:     sqlDollar[14].union.shardedIndexDef(),
				Storing:     sqlDollar[15].union.nameList(),
				Interleave:  sqlDollar[16].union.interleave(),
				PartitionBy: sqlDollar[17].union.partitionBy(),
				Inverted:    sqlDollar[10].union.bool(),
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5341
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[5].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				Columns:     sqlDollar[9].union.idxElems(),
				Storing:     sqlDollar[11].union.nameList(),
				Interleave:  sqlDollar[12].union.interleave(),
				PartitionBy: sqlDollar[13].union.partitionBy(),
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:5355
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[8].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Storing:     sqlDollar[14].union.nameList(),
				Interleave:  sqlDollar[15].union.interleave(),
				PartitionBy: sqlDollar[16].union.partitionBy(),
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5369
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5372
		{
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5373
		{
			return unimplementedWithIssue(sqllex, 9683)
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5377
		{

			switch sqlDollar[2].str {
			case "gin":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "gist", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5392
		{
			sqlVAL.union.val = false
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = true
		}
	case 939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.union.val = false
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5421
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.str = ""
		}
	case 945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5452
		{
			sqlVAL.union.val = tree.Descending
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5456
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5462
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5468
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5474
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5482
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5488
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5496
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5502
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5514
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5519
		{
		}
	case 958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5520
		{
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5523
		{
		}
	case 960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5524
		{
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5535
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5554
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5557
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5568
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5572
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5573
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5574
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5593
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5598
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5611
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5616
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5620
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5625
		{
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5626
		{
		}
	case 986:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5627
		{
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5637
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5641
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5644
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5647
		{
		}
	case 991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5648
		{
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5676
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5689
		{
		}
	case 999:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5691
		{
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5695
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5714
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5760
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5764
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5768
		{
			sqlVAL.str = ""
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5774
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5778
		{
			sqlVAL.str = ""
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5784
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5788
		{
			sqlVAL.str = ""
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5798
		{
			sqlVAL.str = ""
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5803
		{
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5804
		{
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5830
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5848
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5852
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5861
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5880
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5886
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5890
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5910
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5914
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5918
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5924
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5927
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5928
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5930
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5936
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5941
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5974
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5977
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6006
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6059
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6102
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6106
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6116
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6124
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6130
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6139
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6140
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6142
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6146
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6150
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6151
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6156
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6191
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6192
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6193
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6254
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6258
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6267
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6298
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6310
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6314
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6343
		{
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6344
		{
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = nil
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6357
		{
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6358
		{
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = true
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = false
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6370
		{
			sqlVAL.union.val = false
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = true
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6382
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6387
		{
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6388
		{
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6418
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6439
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6444
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6456
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6460
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6464
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6473
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6493
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6502
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6506
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6524
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6539
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6561
		{
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6562
		{
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6565
		{
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6566
		{
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6597
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6619
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6621
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6636
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6644
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6648
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6658
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6663
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6668
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6679
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6686
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6691
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6710
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6749
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6759
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6786
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6794
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6805
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6835
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6868
		{
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6870
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = nil
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = true
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = false
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6913
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6921
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6925
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6939
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6950
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.str = tree.AstFull
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.str = tree.AstRight
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.str = tree.AstInner
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6987
		{
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6988
		{
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.str = tree.AstHash
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7017
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.str = ""
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7038
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7043
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7050
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7055
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7073
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7079
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7085
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7095
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7124
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.colType()
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7137
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7145
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7146
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7163
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7164
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7166
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7174
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7175
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = types.Jsonb
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = types.String
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = types.Name
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7227
		{
			switch sqllex.(*lexer).nakedIntType.Width() {
			case 32:
				sqlVAL.union.val = &serial4Type
			default:
				sqlVAL.union.val = &serial8Type
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7236
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7240
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = &serial4Type
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.union.val = types.Uuid
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7260
		{
			sqlVAL.union.val = types.INet
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7264
		{
			sqlVAL.union.val = types.Oid
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7268
		{
			sqlVAL.union.val = types.OidVector
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = types.Int2Vector
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7276
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else {
				var ok bool
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						sqllex.Error("type does not exist")
						return 1
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7307
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7315
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = nil
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = types.Int2
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7342
		{
			sqlVAL.union.val = types.Int2
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = types.Int4
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = types.Int
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = types.Int
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = types.Int
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = types.Float4
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = types.Float4
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = types.Float
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = types.Float
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7382
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7390
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7398
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = types.Bool
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = types.Bool
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7417
		{
			sqlVAL.union.val = types.RegProc
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = types.RegProcedure
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = types.RegClass
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = types.RegType
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = types.RegNamespace
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7439
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = types.Float
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7458
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7464
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7486
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = types.String
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = true
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7526
		{
			sqlVAL.union.val = false
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = types.Date
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7535
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7543
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7557
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7566
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7574
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7587
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7591
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = true
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = false
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = false
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7607
		{
			sqlVAL.union.val = types.Interval
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7611
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7615
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7634
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7650
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7658
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7672
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7681
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7690
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7699
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7705
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7714
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7730
		{
			sqlVAL.union.val = nil
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7744
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7789
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7793
		{

			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7806
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7819
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7891
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7951
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7963
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7991
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8027
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8050
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8064
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8072
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8076
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8116
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8138
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8174
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8178
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8194
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8198
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8202
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8218
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8234
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8246
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8250
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8272
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8332
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8337
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8363
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8372
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8387
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8393
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8417
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8428
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8429
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8444
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8455
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8517
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.CastExplicit}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8553
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8575
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8580
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8589
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8598
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8600
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8604
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8607
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8616
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8621
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8626
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8631
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8633
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8636
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8645
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8646
		{
			return unimplemented(sqllex, "treat")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8667
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8672
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8677
		{
			return unimplemented(sqllex, "within group")
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8678
		{
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8693
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8713
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8729
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.str = ""
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8788
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8796
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8802
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8815
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8883
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8912
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = tree.Any
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = tree.Some
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = tree.All
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8938
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = tree.Div
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8942
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8944
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8947
		{
			sqlVAL.union.val = tree.LT
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = tree.GT
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = tree.LE
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = tree.GE
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = tree.NE
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8956
		{
			sqlVAL.union.val = tree.Like
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9021
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9032
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = []*types.T{sqlDollar[1].union.colType()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colTypes(), sqlDollar[3].union.colType())
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9068
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9105
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9109
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9113
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9155
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9273
		{
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9274
		{
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9317
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9346
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9354
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.TableName)
			name.TableName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9404
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9427
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9443
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9452
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9463
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9472
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9480
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9492
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9628
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9659
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9672
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9679
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.str = ""
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
